[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"### Duke","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"\u003e \"If you spend too much time thinking about a thing, you\u0027ll never get it done.\" - Bruce Lee ([source](https://dansilvestre.com/productivity-quotes/))","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":"No longer need to remember things you need to do, Duke is:","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"- text-based","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"- super easy to learn","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"- ~~FAST~~ SUPER FAST to use!!","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"What you need to do is:","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"1. Download Duke from [here](https://nus-cs2103-ay2122s1.github.io/website/schedule/week4/project.html)","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"2. Click twice!","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"3. Add your tasks.","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"4. Trust Duke and we will manage your tasks for you! ðŸ‘¯ ","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"pcgiang"},"content":"And it is **FREE**!!","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"pcgiang"},"content":"Features:","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"pcgiang"},"content":"- [x] Manage tasks","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"pcgiang"},"content":"- [x] Manage deadlines and time for events","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"pcgiang"},"content":"- [ ] Reminders (coming soon)","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"pcgiang"},"content":"If you wish to practise Java with our app, here\u0027s the our `main` method:","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"pcgiang"},"content":"public class Main {","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"pcgiang"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"pcgiang"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"pcgiang":26,"-":6}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"pcgiang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"pcgiang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"pcgiang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"pcgiang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"pcgiang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"pcgiang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"pcgiang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"pcgiang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"pcgiang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"pcgiang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"pcgiang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"pcgiang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"pcgiang"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"pcgiang"},"content":"    archiveBaseName \u003d \"Duke\"","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"pcgiang"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-09-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"pcgiang":17,"-":44}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"With Duke, you can better keep track of your daily errands, to-do list,","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"school schedules and events!","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":"\u003e \"The secret of getting ahead is getting started\" - Mark Twain","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"Manage todo, events and deadline tasks. This includes: ","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"- `add`, `delete` a task","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"- `find` a task","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"- `list` all tasks","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"- mark a task as `done`  ","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"- `undo` a command","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"## Usage","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":17,"author":{"gitId":"pcgiang"},"content":"### 1. Add a task:","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":19,"author":{"gitId":"pcgiang"},"content":"### `todo` - Add a todo task to the list.","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"pcgiang"},"content":"Syntax: `todo task1`","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"pcgiang"},"content":"Example of usage: ","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"pcgiang"},"content":"`todo grocery`","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"pcgiang"},"content":"Expected outcome:","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"pcgiang"},"content":"Task will be added to the list, and the following message will","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"pcgiang"},"content":"be printed out.","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"pcgiang"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"pcgiang"},"content":"Got it. I\u0027ve added this task.","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"pcgiang"},"content":"[T][] grocery","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"pcgiang"},"content":"Now you have 5 tasks in the list.","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"pcgiang"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"pcgiang"},"content":"### `deadline` - Add a deadline to the list.","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"pcgiang"},"content":"Syntax: `deadline task1 /by date (time)`","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"pcgiang"},"content":"*Note:*","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"pcgiang"},"content":"- `date` must be in the format of YYYY-MM-DD","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"pcgiang"},"content":"- `time` must be in the format of HH:MM","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"pcgiang"},"content":"- `time` field is assumed to be 23:59 if not indicated","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"pcgiang"},"content":"Example of usage:","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"pcgiang"},"content":"`deadline CS2103T ip /by 2021-09-17`","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"pcgiang"},"content":"Expected outcome:","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":52,"author":{"gitId":"pcgiang"},"content":"Task will be added to the list, and the following message will","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"pcgiang"},"content":"be printed out.","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":55,"author":{"gitId":"pcgiang"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"pcgiang"},"content":"Got it. I\u0027ve added this task.","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"pcgiang"},"content":"[D][] CS2103T ip (by: Sep 17 2021 23:59)","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"pcgiang"},"content":"Now you have 6 tasks in the list.","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"pcgiang"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"pcgiang"},"content":"### `event` - Add an event to the list.","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"pcgiang"},"content":"Syntax: `event task1 /by date (time1-time2)`","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"pcgiang"},"content":"*Note:*","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"pcgiang"},"content":"- `date` must be in the format of YYYY-MM-DD","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"pcgiang"},"content":"- `time1` and `time2` must be in the format of HH:MM","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":71,"author":{"gitId":"pcgiang"},"content":"`event CCA meeting /at 2021-09-17 15:00-16:00`","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":75,"author":{"gitId":"pcgiang"},"content":"Task will be added to the list, and the following message will","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"pcgiang"},"content":"be printed out.","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":79,"author":{"gitId":"pcgiang"},"content":"Got it. I\u0027ve added this task.","lastModifiedDate":"2021-09-17"},{"lineNumber":80,"author":{"gitId":"pcgiang"},"content":"[E][] CCA meeting (at: Sep 17 2021 15:00-16:00)","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"pcgiang"},"content":"Now you have 7 tasks in the list.","lastModifiedDate":"2021-09-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":83,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":84,"author":{"gitId":"pcgiang"},"content":"### 2. Delete a task:","lastModifiedDate":"2021-09-17"},{"lineNumber":85,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":86,"author":{"gitId":"pcgiang"},"content":"Delete the task at the indicated index","lastModifiedDate":"2021-09-17"},{"lineNumber":87,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":88,"author":{"gitId":"pcgiang"},"content":"Syntax: `delete index` ","lastModifiedDate":"2021-09-17"},{"lineNumber":89,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":90,"author":{"gitId":"pcgiang"},"content":"Example of usage:","lastModifiedDate":"2021-09-17"},{"lineNumber":91,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":92,"author":{"gitId":"pcgiang"},"content":"`delete 1` ","lastModifiedDate":"2021-09-17"},{"lineNumber":93,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":94,"author":{"gitId":"pcgiang"},"content":"Expected outcome: ","lastModifiedDate":"2021-09-17"},{"lineNumber":95,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":96,"author":{"gitId":"pcgiang"},"content":"Task at index 1 on the list will be deleted, and the following message ","lastModifiedDate":"2021-09-17"},{"lineNumber":97,"author":{"gitId":"pcgiang"},"content":"will be printed out.","lastModifiedDate":"2021-09-17"},{"lineNumber":98,"author":{"gitId":"pcgiang"},"content":"````","lastModifiedDate":"2021-09-17"},{"lineNumber":99,"author":{"gitId":"pcgiang"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2021-09-17"},{"lineNumber":100,"author":{"gitId":"pcgiang"},"content":"[T][] Take dog for a walk","lastModifiedDate":"2021-09-17"},{"lineNumber":101,"author":{"gitId":"pcgiang"},"content":"Now you have 6 tasks in the list.","lastModifiedDate":"2021-09-17"},{"lineNumber":102,"author":{"gitId":"pcgiang"},"content":"````","lastModifiedDate":"2021-09-17"},{"lineNumber":103,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":104,"author":{"gitId":"pcgiang"},"content":"### 3. Find a task:","lastModifiedDate":"2021-09-17"},{"lineNumber":105,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":106,"author":{"gitId":"pcgiang"},"content":"Find tasks that contains one or more specified keywords","lastModifiedDate":"2021-09-17"},{"lineNumber":107,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":108,"author":{"gitId":"pcgiang"},"content":"Syntax: `find keyword1 (keyword2...)`","lastModifiedDate":"2021-09-17"},{"lineNumber":109,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":110,"author":{"gitId":"pcgiang"},"content":"Example of usage:","lastModifiedDate":"2021-09-17"},{"lineNumber":111,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":112,"author":{"gitId":"pcgiang"},"content":"`find CS2103T`","lastModifiedDate":"2021-09-17"},{"lineNumber":113,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":114,"author":{"gitId":"pcgiang"},"content":"Expected outcome: ","lastModifiedDate":"2021-09-17"},{"lineNumber":115,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":116,"author":{"gitId":"pcgiang"},"content":"If matching tasks are found, the following message ","lastModifiedDate":"2021-09-17"},{"lineNumber":117,"author":{"gitId":"pcgiang"},"content":"will be printed out.","lastModifiedDate":"2021-09-17"},{"lineNumber":118,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":119,"author":{"gitId":"pcgiang"},"content":"````","lastModifiedDate":"2021-09-17"},{"lineNumber":120,"author":{"gitId":"pcgiang"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2021-09-17"},{"lineNumber":121,"author":{"gitId":"pcgiang"},"content":"1. [D][] CS2103T Assignment (by: Sep 17 2021 23:59)","lastModifiedDate":"2021-09-17"},{"lineNumber":122,"author":{"gitId":"pcgiang"},"content":"2. [E][] CS2103T Group meeting (at: Sep 20 2021 16:00-18:00)","lastModifiedDate":"2021-09-17"},{"lineNumber":123,"author":{"gitId":"pcgiang"},"content":"````","lastModifiedDate":"2021-09-17"},{"lineNumber":124,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":125,"author":{"gitId":"pcgiang"},"content":"Otherwise, the following message will be printed out:","lastModifiedDate":"2021-09-17"},{"lineNumber":126,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":127,"author":{"gitId":"pcgiang"},"content":"`Sorry. No such task is found :( Try another key word?`","lastModifiedDate":"2021-09-17"},{"lineNumber":128,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":129,"author":{"gitId":"pcgiang"},"content":"### 4. List:","lastModifiedDate":"2021-09-17"},{"lineNumber":130,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":131,"author":{"gitId":"pcgiang"},"content":"List all tasks that are currently on the list","lastModifiedDate":"2021-09-17"},{"lineNumber":132,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":133,"author":{"gitId":"pcgiang"},"content":"Syntax: `list`","lastModifiedDate":"2021-09-17"},{"lineNumber":134,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":135,"author":{"gitId":"pcgiang"},"content":"Example of usage:","lastModifiedDate":"2021-09-17"},{"lineNumber":136,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":137,"author":{"gitId":"pcgiang"},"content":"`list`","lastModifiedDate":"2021-09-17"},{"lineNumber":138,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":139,"author":{"gitId":"pcgiang"},"content":"Expected outcomes:","lastModifiedDate":"2021-09-17"},{"lineNumber":140,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":141,"author":{"gitId":"pcgiang"},"content":"The following message will be printed out.","lastModifiedDate":"2021-09-17"},{"lineNumber":142,"author":{"gitId":"pcgiang"},"content":"````","lastModifiedDate":"2021-09-17"},{"lineNumber":143,"author":{"gitId":"pcgiang"},"content":"Here are the tasks on your list:","lastModifiedDate":"2021-09-17"},{"lineNumber":144,"author":{"gitId":"pcgiang"},"content":"1. [T][X] grocery shopping","lastModifiedDate":"2021-09-17"},{"lineNumber":145,"author":{"gitId":"pcgiang"},"content":"2. [D][X] CS2100 Assignment (by: Sep 15 2021 23:59)","lastModifiedDate":"2021-09-17"},{"lineNumber":146,"author":{"gitId":"pcgiang"},"content":"3. [E][] CCA Exco meeting (at: Sep 21 2021 21:00-23:00)","lastModifiedDate":"2021-09-17"},{"lineNumber":147,"author":{"gitId":"pcgiang"},"content":"4. [T][] meal prep for the week","lastModifiedDate":"2021-09-17"},{"lineNumber":148,"author":{"gitId":"pcgiang"},"content":"````","lastModifiedDate":"2021-09-17"},{"lineNumber":149,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":150,"author":{"gitId":"pcgiang"},"content":"### 5. Mark a task as done:","lastModifiedDate":"2021-09-17"},{"lineNumber":151,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":152,"author":{"gitId":"pcgiang"},"content":"Mark a task at the specifed index as done","lastModifiedDate":"2021-09-17"},{"lineNumber":153,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":154,"author":{"gitId":"pcgiang"},"content":"Syntax: `done index`","lastModifiedDate":"2021-09-17"},{"lineNumber":155,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":156,"author":{"gitId":"pcgiang"},"content":"Example of usage:","lastModifiedDate":"2021-09-17"},{"lineNumber":157,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":158,"author":{"gitId":"pcgiang"},"content":"`done 4`","lastModifiedDate":"2021-09-17"},{"lineNumber":159,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":160,"author":{"gitId":"pcgiang"},"content":"Expected outcomes:","lastModifiedDate":"2021-09-17"},{"lineNumber":161,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":162,"author":{"gitId":"pcgiang"},"content":"The at index 3 on the list will be marked as done, ","lastModifiedDate":"2021-09-17"},{"lineNumber":163,"author":{"gitId":"pcgiang"},"content":"and the following message will be printed out.","lastModifiedDate":"2021-09-17"},{"lineNumber":164,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":165,"author":{"gitId":"pcgiang"},"content":"````","lastModifiedDate":"2021-09-17"},{"lineNumber":166,"author":{"gitId":"pcgiang"},"content":"Nice! I have marked this task as done!","lastModifiedDate":"2021-09-17"},{"lineNumber":167,"author":{"gitId":"pcgiang"},"content":"[T][X] meal prep for the week","lastModifiedDate":"2021-09-17"},{"lineNumber":168,"author":{"gitId":"pcgiang"},"content":"````","lastModifiedDate":"2021-09-17"},{"lineNumber":169,"author":{"gitId":"pcgiang"},"content":"### 6. Undo a command:","lastModifiedDate":"2021-09-17"},{"lineNumber":170,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":171,"author":{"gitId":"pcgiang"},"content":"Undo the most current command","lastModifiedDate":"2021-09-17"},{"lineNumber":172,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":173,"author":{"gitId":"pcgiang"},"content":"Syntax: `undo`","lastModifiedDate":"2021-09-17"},{"lineNumber":174,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":175,"author":{"gitId":"pcgiang"},"content":"Example of usage:","lastModifiedDate":"2021-09-17"},{"lineNumber":176,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":177,"author":{"gitId":"pcgiang"},"content":"`delete 1`","lastModifiedDate":"2021-09-17"},{"lineNumber":178,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":179,"author":{"gitId":"pcgiang"},"content":"Task with index 1 will be deleted, and the ","lastModifiedDate":"2021-09-17"},{"lineNumber":180,"author":{"gitId":"pcgiang"},"content":"following message will be printed out:","lastModifiedDate":"2021-09-17"},{"lineNumber":181,"author":{"gitId":"pcgiang"},"content":"````","lastModifiedDate":"2021-09-17"},{"lineNumber":182,"author":{"gitId":"pcgiang"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2021-09-17"},{"lineNumber":183,"author":{"gitId":"pcgiang"},"content":"[T][X] grocery shopping","lastModifiedDate":"2021-09-17"},{"lineNumber":184,"author":{"gitId":"pcgiang"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2021-09-17"},{"lineNumber":185,"author":{"gitId":"pcgiang"},"content":"````","lastModifiedDate":"2021-09-17"},{"lineNumber":186,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":187,"author":{"gitId":"pcgiang"},"content":"`undo`","lastModifiedDate":"2021-09-17"},{"lineNumber":188,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":189,"author":{"gitId":"pcgiang"},"content":"The command is undone, and the following message will be printed out:","lastModifiedDate":"2021-09-17"},{"lineNumber":190,"author":{"gitId":"pcgiang"},"content":"````","lastModifiedDate":"2021-09-17"},{"lineNumber":191,"author":{"gitId":"pcgiang"},"content":"Got it. I\u0027ve added this task.","lastModifiedDate":"2021-09-17"},{"lineNumber":192,"author":{"gitId":"pcgiang"},"content":"[T][X] grocery shopping","lastModifiedDate":"2021-09-17"},{"lineNumber":193,"author":{"gitId":"pcgiang"},"content":"Now you have 4 tasks in the list.","lastModifiedDate":"2021-09-17"},{"lineNumber":194,"author":{"gitId":"pcgiang"},"content":"````","lastModifiedDate":"2021-09-17"},{"lineNumber":195,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":196,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"pcgiang":174,"-":22}},{"path":"level-7.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"D | 0 | CS2103T assignment  | 2021-09-17 23:59","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"T | 0 | grocery","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"E | 0 | CCA meeting  | 2021-09-20 09:00-11:00","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":"T | 1 | walk dog","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"pcgiang":4}},{"path":"src/main/java/duke/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package duke;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":"import duke.exception.EmptyDescriptionException;","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":"import duke.exception.InvalidDeadlineException;","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":"import duke.exception.InvalidTaskException;","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"public class AddTaskCommand extends UndoableCommand {","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"    public AddTaskCommand(TaskList tasks, String input) {","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"        super(tasks, input);","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"     * A method to add a Task inside a TaskList","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":"     * @return String representation of a task after it is added.","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"pcgiang"},"content":"     * @throws EmptyDescriptionException Thrown when users do not give a task description.","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"pcgiang"},"content":"     * @throws InvalidTaskException Thrown when users give incorrect input for task.","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"pcgiang"},"content":"     * @throws InvalidDeadlineException Thrown when users give an incorrect deadline.","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"pcgiang"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"pcgiang"},"content":"    public String run() throws DukeException {","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"pcgiang"},"content":"        //if the task only contain 1 word","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"pcgiang"},"content":"        if (input.split(\" \").length \u003d\u003d 1) {","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"pcgiang"},"content":"            if (input.startsWith(\"todo\") || input.startsWith(\"deadline\") || input.startsWith(\"event\")) {","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"pcgiang"},"content":"                throw new EmptyDescriptionException(input);","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"pcgiang"},"content":"            }","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"pcgiang"},"content":"            throw new InvalidTaskException();","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"pcgiang"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"pcgiang"},"content":"        //if task contains more than 1 word, but keyword is wrong","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"pcgiang"},"content":"        if (!input.startsWith(\"todo\") \u0026\u0026 !input.startsWith(\"deadline\") \u0026\u0026 !input.startsWith(\"event\")) {","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"pcgiang"},"content":"            throw new InvalidTaskException();","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"pcgiang"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"pcgiang"},"content":"        Task task;","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"pcgiang"},"content":"        if (input.startsWith(\"todo\")) {","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"pcgiang"},"content":"            task \u003d new ToDos(input.substring(5));","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"pcgiang"},"content":"        } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"pcgiang"},"content":"            String[] message \u003d input.split(\"/by \");","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"pcgiang"},"content":"            if (message.length !\u003d 2) {","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"pcgiang"},"content":"                throw new InvalidTaskException();","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"pcgiang"},"content":"            }","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"pcgiang"},"content":"            task \u003d new Deadline(message[0].substring(9), message[1]);","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"pcgiang"},"content":"        } else {","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"pcgiang"},"content":"            String[] message \u003d input.split(\"/at \");","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"pcgiang"},"content":"            if (message.length !\u003d 2) {","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"pcgiang"},"content":"                throw new InvalidTaskException();","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"pcgiang"},"content":"            }","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"pcgiang"},"content":"            task \u003d new Event(message[0].substring(6), message[1]);","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"pcgiang"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":52,"author":{"gitId":"pcgiang"},"content":"        return tasks.addTask(task);","lastModifiedDate":"2021-09-08"},{"lineNumber":53,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":54,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":55,"author":{"gitId":"pcgiang"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":56,"author":{"gitId":"pcgiang"},"content":"    public String undo() {","lastModifiedDate":"2021-09-08"},{"lineNumber":57,"author":{"gitId":"pcgiang"},"content":"        return tasks.deleteTask(tasks.getList().size());","lastModifiedDate":"2021-09-08"},{"lineNumber":58,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":59,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"pcgiang":59}},{"path":"src/main/java/duke/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package duke;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":"    public ByeCommand(TaskList tasks) {","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"        super(tasks);","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"    public String run() throws DukeException {","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"        return \"Babai! See you again soon! XD\";","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"pcgiang":14}},{"path":"src/main/java/duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package duke;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":"public abstract class Command {","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":"    protected TaskList tasks;","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"    protected String input;","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"    public Command(TaskList tasks) {","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"    public Command(TaskList tasks, String input) {","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"        this.input \u003d input;","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"pcgiang"},"content":"    public abstract String run() throws DukeException;","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"pcgiang":19}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"import duke.exception.InvalidDeadlineException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":" * A subclass of task that represents a deadline.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"    private String type;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":"    private LocalDate deadlineDate;","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"pcgiang"},"content":"    private LocalTime deadlineTime;","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"pcgiang"},"content":"     * Constructor for Deadline class.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"pcgiang"},"content":"     * @param title Name of the task to be created.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"pcgiang"},"content":"     * @param deadline Date and time of deadline.","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"pcgiang"},"content":"    public Deadline(String title, String deadline) throws InvalidDeadlineException {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"pcgiang"},"content":"        super(title);","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"pcgiang"},"content":"        type \u003d \"D\";","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"pcgiang"},"content":"        String[] dateTime \u003d deadline.split(\" \");","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"pcgiang"},"content":"        if (dateTime.length \u003c 1) {","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"pcgiang"},"content":"            throw new InvalidDeadlineException();","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"pcgiang"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"pcgiang"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"pcgiang"},"content":"            deadlineDate \u003d LocalDate.parse(dateTime[0]);","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"pcgiang"},"content":"            if (dateTime.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"pcgiang"},"content":"                deadlineTime \u003d LocalTime.parse(\"23:59\");","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"pcgiang"},"content":"            } else {","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"pcgiang"},"content":"                deadlineTime \u003d LocalTime.parse(dateTime[1]);","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"pcgiang"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"pcgiang"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"pcgiang"},"content":"            throw new InvalidDeadlineException();","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"pcgiang"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"pcgiang"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"pcgiang"},"content":"    public String toString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"pcgiang"},"content":"        String date \u003d this.deadlineDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"pcgiang"},"content":"        String time \u003d this.deadlineTime.format(DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"pcgiang"},"content":"        String deadline \u003d date + \" \" + time;","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"pcgiang"},"content":"        return \"[\" + type + \"]\" + super.toString() + \"(by: \" + deadline + \")\";","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"pcgiang"},"content":"     * A method that prints out details of a task.","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"pcgiang"},"content":"     * @return Details of task.","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"pcgiang"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"pcgiang"},"content":"    public String writeTask() {","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"pcgiang"},"content":"        String date \u003d this.deadlineDate.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2021-09-07"},{"lineNumber":60,"author":{"gitId":"pcgiang"},"content":"        String time \u003d this.deadlineTime.format(DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2021-09-07"},{"lineNumber":61,"author":{"gitId":"pcgiang"},"content":"        String deadline \u003d date + \" \" + time;","lastModifiedDate":"2021-09-07"},{"lineNumber":62,"author":{"gitId":"pcgiang"},"content":"        return type + \" | \" + super.writeTask() + \" | \" + deadline;","lastModifiedDate":"2021-09-07"},{"lineNumber":63,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":64,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"pcgiang":64}},{"path":"src/main/java/duke/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package duke;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":"import duke.exception.OutOfBoundException;","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":"public class DeleteTaskCommand extends UndoableCommand {","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"    private Task deletedTask;","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"    public DeleteTaskCommand(TaskList tasks, String input) {","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"        super(tasks, input);","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"     * A method to delete a certain in a TaskList.","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"     * @return Task after it is deleted.","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":"     * @throws DukeException Thrown when user gives a task number that is outside of the range of TaskList.","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"pcgiang"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"pcgiang"},"content":"    public String run() throws DukeException {","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"pcgiang"},"content":"        String i \u003d input.substring(input.length() - 1);","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"pcgiang"},"content":"        int index \u003d Integer.parseInt(i);","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"pcgiang"},"content":"        if (index \u003c 0 || index \u003e tasks.getList().size()) {","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"pcgiang"},"content":"            throw new OutOfBoundException();","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"pcgiang"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"pcgiang"},"content":"        deletedTask \u003d tasks.getList().get(index - 1);","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"pcgiang"},"content":"        return tasks.deleteTask(index);","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"pcgiang"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"pcgiang"},"content":"    public String undo() {","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"pcgiang"},"content":"        assert deletedTask !\u003d null: \"deletedTask should not be null here!\";","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"pcgiang"},"content":"        return tasks.addTask(deletedTask);","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"pcgiang":34}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"import java.util.Collections;","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"pcgiang"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"pcgiang"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"pcgiang"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"pcgiang"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"pcgiang"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"pcgiang"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"pcgiang"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"pcgiang"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"pcgiang"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"pcgiang"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"pcgiang"},"content":"    private Label dialog;","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"pcgiang"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"pcgiang"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"pcgiang"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"pcgiang"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"pcgiang"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"pcgiang"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"pcgiang"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"pcgiang"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"pcgiang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"pcgiang"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"pcgiang"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"pcgiang"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"pcgiang"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"pcgiang"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"pcgiang"},"content":"    private void flip() {","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"pcgiang"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"pcgiang"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"pcgiang"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"pcgiang"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"pcgiang"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"pcgiang"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"pcgiang"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"pcgiang"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"pcgiang"},"content":"        db.flip();","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"pcgiang"},"content":"        return db;","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"pcgiang":65}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":" * Duke contains a main method which runs the program.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"public class Duke {","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"pcgiang"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"pcgiang"},"content":"    private ArrayList\u003cCommand\u003e commandHistory;","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"pcgiang"},"content":"     * Constructor of Duke. UI object, storage and tasks are instantiated.","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"pcgiang"},"content":"    public Duke() {","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"pcgiang"},"content":"        storage \u003d new Storage(\".\\\\level-7.txt\");","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"pcgiang"},"content":"        commandHistory \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"pcgiang"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"pcgiang"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"pcgiang"},"content":"            assert tasks !\u003d null: \"tasks shouldn\u0027t be null here!\";","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"pcgiang"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"pcgiang"},"content":"            System.out.println(\"RESET!\");","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"pcgiang"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"pcgiang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"pcgiang"},"content":"            System.out.println(\"File failed to load.\");","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"pcgiang"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"pcgiang"},"content":"     * A method that allows user give input and runs the program.","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"pcgiang"},"content":"     * Contains a parser which reads command from the input.","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"pcgiang"},"content":"     * @return A String array with the input as the first element, and response as the second element.","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"pcgiang"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"pcgiang"},"content":"    String[] getResponse(String input) {","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"pcgiang"},"content":"        String result \u003d \"\";","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"pcgiang"},"content":"        Command command;","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"pcgiang"},"content":"        try {","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"pcgiang"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"pcgiang"},"content":"                command \u003d new ByeCommand(tasks);","lastModifiedDate":"2021-09-08"},{"lineNumber":52,"author":{"gitId":"pcgiang"},"content":"            } else if (input.equals(\"list\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"pcgiang"},"content":"                command \u003d new PrintListCommand(tasks);","lastModifiedDate":"2021-09-08"},{"lineNumber":54,"author":{"gitId":"pcgiang"},"content":"            } else if (input.startsWith(\"done\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"pcgiang"},"content":"                command \u003d new MarkAsDoneCommand(tasks, input);","lastModifiedDate":"2021-09-08"},{"lineNumber":56,"author":{"gitId":"pcgiang"},"content":"            } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"pcgiang"},"content":"                command \u003d new DeleteTaskCommand(tasks, input);","lastModifiedDate":"2021-09-08"},{"lineNumber":58,"author":{"gitId":"pcgiang"},"content":"            } else if (input.startsWith(\"find\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"pcgiang"},"content":"                command \u003d new FindTaskCommand(tasks, input);","lastModifiedDate":"2021-09-08"},{"lineNumber":60,"author":{"gitId":"pcgiang"},"content":"            } else if (input.startsWith(\"todo\") || input.startsWith(\"event\") || input.startsWith(\"deadline\")) {","lastModifiedDate":"2021-09-08"},{"lineNumber":61,"author":{"gitId":"pcgiang"},"content":"                command \u003d new AddTaskCommand(tasks, input);","lastModifiedDate":"2021-09-08"},{"lineNumber":62,"author":{"gitId":"pcgiang"},"content":"            } else if (input.equals(\"undo\")) {","lastModifiedDate":"2021-09-08"},{"lineNumber":63,"author":{"gitId":"pcgiang"},"content":"                command \u003d new UndoCommand(tasks, commandHistory);","lastModifiedDate":"2021-09-08"},{"lineNumber":64,"author":{"gitId":"pcgiang"},"content":"            } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"pcgiang"},"content":"                throw new InvalidCommandException();","lastModifiedDate":"2021-09-08"},{"lineNumber":66,"author":{"gitId":"pcgiang"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"pcgiang"},"content":"            commandHistory.add(command);","lastModifiedDate":"2021-09-08"},{"lineNumber":68,"author":{"gitId":"pcgiang"},"content":"            result +\u003d command.run();","lastModifiedDate":"2021-09-08"},{"lineNumber":69,"author":{"gitId":"pcgiang"},"content":"            storage.updateFile(tasks);","lastModifiedDate":"2021-09-01"},{"lineNumber":70,"author":{"gitId":"pcgiang"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":71,"author":{"gitId":"pcgiang"},"content":"            result \u003d e.getMessage();","lastModifiedDate":"2021-09-07"},{"lineNumber":72,"author":{"gitId":"pcgiang"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":73,"author":{"gitId":"pcgiang"},"content":"            result \u003d \"Task number is invalid!\";","lastModifiedDate":"2021-09-07"},{"lineNumber":74,"author":{"gitId":"pcgiang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":75,"author":{"gitId":"pcgiang"},"content":"            result \u003d \"File failed to load!\";","lastModifiedDate":"2021-09-08"},{"lineNumber":76,"author":{"gitId":"pcgiang"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":77,"author":{"gitId":"pcgiang"},"content":"        assert result !\u003d null: \"result cannot be null here!\";","lastModifiedDate":"2021-09-07"},{"lineNumber":78,"author":{"gitId":"pcgiang"},"content":"        return new String[]{input, result};","lastModifiedDate":"2021-09-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"pcgiang":78,"-":2}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package duke;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"import duke.exception.InvalidEventException;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"/**","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":" * A subclass of Task that represents an Event.","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":" *","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":" */","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"public class Event extends Task {","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"    String type;","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":"    LocalDate eventDate;","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"pcgiang"},"content":"    LocalTime eventStartTime;","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"pcgiang"},"content":"    LocalTime eventEndTime;","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"pcgiang"},"content":"     * Constructor for Deadline class.","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"pcgiang"},"content":"     * @param title Name of the task to be created.","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"pcgiang"},"content":"     * @param eventTime Date and time of event.","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"pcgiang"},"content":"    public Event(String title, String eventTime) throws InvalidEventException {","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"pcgiang"},"content":"        super(title);","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"pcgiang"},"content":"        type \u003d \"E\";","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"pcgiang"},"content":"        String[] dateTime \u003d eventTime.split(\" \");","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"pcgiang"},"content":"        if (dateTime.length \u003c 1) {","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"pcgiang"},"content":"            throw new InvalidEventException();","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"pcgiang"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"pcgiang"},"content":"        try {","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"pcgiang"},"content":"            eventDate \u003d LocalDate.parse(dateTime[0]);","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"pcgiang"},"content":"            if (dateTime.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"pcgiang"},"content":"                eventStartTime \u003d LocalTime.parse(\"23:59\");","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"pcgiang"},"content":"                eventEndTime \u003d LocalTime.parse(\"23:59\");","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"pcgiang"},"content":"            }","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"pcgiang"},"content":"            String time \u003d dateTime[1];","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"pcgiang"},"content":"            eventStartTime \u003d LocalTime.parse(time.split(\"-\")[0]);","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"pcgiang"},"content":"            eventEndTime \u003d LocalTime.parse(time.split(\"-\")[1]);","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"pcgiang"},"content":"            if (eventStartTime.isAfter(eventEndTime)) {","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"pcgiang"},"content":"                throw new InvalidEventException(\"EventStartTime cannot be later than EventEndTime!\");","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"pcgiang"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"pcgiang"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"pcgiang"},"content":"            throw new InvalidEventException();","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"pcgiang"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":53,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":54,"author":{"gitId":"pcgiang"},"content":"    @Override","lastModifiedDate":"2021-09-07"},{"lineNumber":55,"author":{"gitId":"pcgiang"},"content":"    public String toString() {","lastModifiedDate":"2021-09-07"},{"lineNumber":56,"author":{"gitId":"pcgiang"},"content":"        String date \u003d this.eventDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-09-07"},{"lineNumber":57,"author":{"gitId":"pcgiang"},"content":"        String start \u003d this.eventStartTime.format(DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2021-09-07"},{"lineNumber":58,"author":{"gitId":"pcgiang"},"content":"        String end \u003d this.eventEndTime.format(DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2021-09-07"},{"lineNumber":59,"author":{"gitId":"pcgiang"},"content":"        String time \u003d date + \" \" + start + \"-\" + end;","lastModifiedDate":"2021-09-07"},{"lineNumber":60,"author":{"gitId":"pcgiang"},"content":"        return \"[\" + type + \"]\" + super.toString() + \"(at: \" + time + \")\";","lastModifiedDate":"2021-09-07"},{"lineNumber":61,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":62,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":63,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":64,"author":{"gitId":"pcgiang"},"content":"     * A method that prints out details of an event.","lastModifiedDate":"2021-09-07"},{"lineNumber":65,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":66,"author":{"gitId":"pcgiang"},"content":"     * @return Details of an event.","lastModifiedDate":"2021-09-07"},{"lineNumber":67,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":68,"author":{"gitId":"pcgiang"},"content":"    @Override","lastModifiedDate":"2021-09-07"},{"lineNumber":69,"author":{"gitId":"pcgiang"},"content":"    public String writeTask() {","lastModifiedDate":"2021-09-07"},{"lineNumber":70,"author":{"gitId":"pcgiang"},"content":"        String date \u003d this.eventDate.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2021-09-07"},{"lineNumber":71,"author":{"gitId":"pcgiang"},"content":"        String start \u003d this.eventStartTime.format(DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2021-09-07"},{"lineNumber":72,"author":{"gitId":"pcgiang"},"content":"        String end \u003d this.eventEndTime.format(DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2021-09-07"},{"lineNumber":73,"author":{"gitId":"pcgiang"},"content":"        String time \u003d date + \" \" + start + \"-\" + end;","lastModifiedDate":"2021-09-07"},{"lineNumber":74,"author":{"gitId":"pcgiang"},"content":"        return type + \" | \" + super.writeTask() + \" | \" + time;","lastModifiedDate":"2021-09-07"},{"lineNumber":75,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":76,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"pcgiang":76}},{"path":"src/main/java/duke/FindTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package duke;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":"public class FindTaskCommand extends UndoableCommand {","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"    public FindTaskCommand(TaskList tasks, String input) {","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"        super(tasks, input);","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"    public String run() throws DukeException {","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"        return tasks.findTask(input);","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"pcgiang"},"content":"    public String undo() {","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"pcgiang"},"content":"        return \"Nothing to undo :/\";","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"pcgiang":20}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"public class Launcher {","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"pcgiang":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"public class Main extends Application {","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"pcgiang"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"pcgiang"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"pcgiang"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"pcgiang"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"pcgiang"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"pcgiang"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"pcgiang"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"pcgiang"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"pcgiang"},"content":"            stage.show();","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"pcgiang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"pcgiang"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"pcgiang"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"pcgiang":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"pcgiang"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"pcgiang"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"pcgiang"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"pcgiang"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"pcgiang"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"pcgiang"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"pcgiang"},"content":"    private Button sendButton;","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"pcgiang"},"content":"    private Application main;","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"pcgiang"},"content":"    private Duke duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"pcgiang"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user1.png\"));","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"pcgiang"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/duke1.png\"));","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"pcgiang"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"pcgiang"},"content":"    public void initialize() {","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"pcgiang"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"pcgiang"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"pcgiang"},"content":"        duke \u003d d;","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"pcgiang"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"pcgiang"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"pcgiang"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"pcgiang"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"pcgiang"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"pcgiang"},"content":"        String response \u003d duke.getResponse(input)[1];","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"pcgiang"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"pcgiang"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"pcgiang"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"pcgiang"},"content":"        );","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"pcgiang"},"content":"        userInput.clear();","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"pcgiang"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"pcgiang"},"content":"            Platform.exit();","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"pcgiang"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"pcgiang":57}},{"path":"src/main/java/duke/MarkAsDoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package duke;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":"import duke.exception.OutOfBoundException;","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":"public class MarkAsDoneCommand extends UndoableCommand {","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"    public MarkAsDoneCommand(TaskList tasks, String input) {","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"        super(tasks, input);","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"     * A method to mark a task as done.","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"     * @return Task after it is marked as done.","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"     * @throws DukeException Thrown when user inputs task number that is out of the given task range.","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":"     * @throws NumberFormatException Thrown when user gives a non-number as the task number.","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"pcgiang"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"pcgiang"},"content":"    public String run() throws DukeException, NumberFormatException {","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"pcgiang"},"content":"        String i \u003d input.substring(input.length()-1);","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"pcgiang"},"content":"        int index \u003d Integer.parseInt(i);","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"pcgiang"},"content":"        if (index \u003c 0 || index \u003e tasks.getList().size()) {","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"pcgiang"},"content":"            throw new OutOfBoundException();","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"pcgiang"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"pcgiang"},"content":"        return tasks.markAsDone(index);","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"pcgiang"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"pcgiang"},"content":"    public String undo() {","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"pcgiang"},"content":"        String i \u003d input.substring(input.length()-1);","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"pcgiang"},"content":"        int index \u003d Integer.parseInt(i);","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"pcgiang"},"content":"        return tasks.markAsUndone(index);","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"pcgiang":34}},{"path":"src/main/java/duke/PrintListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package duke;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":"public class PrintListCommand extends Command {","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":"    public PrintListCommand(TaskList tasks) {","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"        super(tasks);","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"    public String run() {","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"        return tasks.printList();","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"pcgiang":14}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":"import duke.exception.InvalidDeadlineException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":"import duke.exception.InvalidEventException;","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":"import duke.exception.InvalidTaskException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":" * A class that deals with loading and saving data to/from a file.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"pcgiang"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"pcgiang"},"content":"public class Storage {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"pcgiang"},"content":"    private final String filePath;","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"pcgiang"},"content":"     * Constructor of a storage.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"pcgiang"},"content":"     * @param filePath A path that access the location of the file to be open and used.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"pcgiang"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"pcgiang"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"pcgiang"},"content":"     * Method to load any existing data from file to the current list","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"pcgiang"},"content":"     * @return ArrayList of current tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"pcgiang"},"content":"     * @throws IOException thrown when file cannot be found.","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"pcgiang"},"content":"     * @throws InvalidTaskException thrown when users give invalid input.","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"pcgiang"},"content":"     * @throws InvalidDeadlineException thrown when users give invalid deadlines.","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"pcgiang"},"content":"    public ArrayList\u003cTask\u003e load() throws IOException, DukeException {","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"pcgiang"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"pcgiang"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"pcgiang"},"content":"        assert filePath !\u003d null: \"filePath must not be null!\";","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"pcgiang"},"content":"        if (file.exists()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"pcgiang"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"pcgiang"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"pcgiang"},"content":"                String str \u003d sc.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"pcgiang"},"content":"                String[] stuff \u003d str.split(\" \\\\| \");","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"pcgiang"},"content":"                Task task;","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"pcgiang"},"content":"                switch (stuff[0]) {","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"pcgiang"},"content":"                case \"T\":","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"pcgiang"},"content":"                    task \u003d new ToDos(stuff[2]);","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"pcgiang"},"content":"                    break;","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"pcgiang"},"content":"                case \"D\":","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"pcgiang"},"content":"                    task \u003d new Deadline(stuff[2], stuff[3]);","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"pcgiang"},"content":"                    break;","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"pcgiang"},"content":"                case \"E\":","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"pcgiang"},"content":"                    task \u003d new Event(stuff[2], stuff[3]);","lastModifiedDate":"2021-09-07"},{"lineNumber":59,"author":{"gitId":"pcgiang"},"content":"                    break;","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"pcgiang"},"content":"                default:","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"pcgiang"},"content":"                    throw new InvalidTaskException();","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"pcgiang"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"pcgiang"},"content":"                if (stuff[1].equals(\"1\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"pcgiang"},"content":"                    task.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"pcgiang"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"pcgiang"},"content":"                list.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"pcgiang"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"pcgiang"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"pcgiang"},"content":"        return list;","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"pcgiang"},"content":"     * Method to update file when TaskList is changed.","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"pcgiang"},"content":"     * @param list TaskList after it is changed.","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"pcgiang"},"content":"     * @throws IOException thrown when file is not found.","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"pcgiang"},"content":"    public void updateFile(TaskList list) throws IOException {","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"pcgiang"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"pcgiang"},"content":"        if (!file.exists()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"pcgiang"},"content":"            file.createNewFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"pcgiang"},"content":"            return;","lastModifiedDate":"2021-09-07"},{"lineNumber":84,"author":{"gitId":"pcgiang"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":85,"author":{"gitId":"pcgiang"},"content":"        file.delete();","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"pcgiang"},"content":"        File newFile \u003d new File(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"pcgiang"},"content":"        newFile.createNewFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"pcgiang"},"content":"        FileWriter writer \u003d new FileWriter(file);","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"pcgiang"},"content":"        for (Task task : list.getList()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"pcgiang"},"content":"            writer.write(task.writeTask() + \"\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"pcgiang"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"pcgiang"},"content":"        writer.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":95,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"pcgiang":96}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":" * A class that represents a task","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"public class Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"    private boolean isDone;","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"    private String title;","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"     * Constructor for Task class","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"     * @param title Name of the task to be created","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":"    public Task(String title) {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"pcgiang"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"pcgiang"},"content":"        this.title \u003d title;","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"pcgiang"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"pcgiang"},"content":"    public String toString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"pcgiang"},"content":"        return (isDone ? \"[X]\" : \"[ ]\") + title;","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"pcgiang"},"content":"     * Method to mark a task as done.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"pcgiang"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"pcgiang"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"pcgiang"},"content":"     * Method to mark a task as done.","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"pcgiang"},"content":"    public void markAsUndone() {","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"pcgiang"},"content":"        isDone \u003d false;","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"pcgiang"},"content":"     * A method that prints out details of a task.","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"pcgiang"},"content":"     * @return Details of task","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"pcgiang"},"content":"    public String writeTask() {","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"pcgiang"},"content":"        String doneLabel \u003d isDone ? \"1\" : \"0\";","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"pcgiang"},"content":"        return doneLabel + \" | \" + title;","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"pcgiang"},"content":"    public String getTitle() {","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"pcgiang"},"content":"        return title;","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"pcgiang":55}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"import duke.exception.*;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":" * A class that represents a list of Tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":" * It contains a constructor, a getter,","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":" * a method to print a list, add a task to a list,","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":" * mark a task as done and delete a task.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"public class TaskList {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"pcgiang"},"content":"     * Constructor to create a new TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"pcgiang"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"pcgiang"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"pcgiang"},"content":"     * Constructor to create a new TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"pcgiang"},"content":"     * @param tasks An ArrayList of Task that contains Tasks to be put inside the TaskList.","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"pcgiang"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"pcgiang"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"pcgiang"},"content":"     * Method to print out tasks inside a TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"pcgiang"},"content":"     * @return String representation of all the tasks inside the current TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"pcgiang"},"content":"    public String printList() {","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"pcgiang"},"content":"        String str \u003d \"Here are the tasks on your list: \\n\";","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"pcgiang"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"pcgiang"},"content":"            str \u003d str + i + \". \" + tasks.get(i-1) + \"\\n\";","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"pcgiang"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"pcgiang"},"content":"        return str;","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"pcgiang"},"content":"     * A method to mark a task as done.","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"pcgiang"},"content":"     * @param index index of the task to be marked as done.","lastModifiedDate":"2021-09-08"},{"lineNumber":52,"author":{"gitId":"pcgiang"},"content":"     * @return String representation of the task after marked as done.","lastModifiedDate":"2021-09-08"},{"lineNumber":53,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"pcgiang"},"content":"    public String markAsDone(int index) {","lastModifiedDate":"2021-09-08"},{"lineNumber":55,"author":{"gitId":"pcgiang"},"content":"        Task task \u003d tasks.get(index - 1);","lastModifiedDate":"2021-09-07"},{"lineNumber":56,"author":{"gitId":"pcgiang"},"content":"        task.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"pcgiang"},"content":"        String result \u003d \"Nice! I have marked this task as done!\\n\" + task.toString() ;","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"pcgiang"},"content":"        return result;","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"pcgiang"},"content":"     * A method to mark a task as undone.","lastModifiedDate":"2021-09-08"},{"lineNumber":63,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"pcgiang"},"content":"     * @param index index of the task to be marked as undone.","lastModifiedDate":"2021-09-08"},{"lineNumber":65,"author":{"gitId":"pcgiang"},"content":"     * @return String representation of the task after marked as undone.","lastModifiedDate":"2021-09-08"},{"lineNumber":66,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"pcgiang"},"content":"    public String markAsUndone(int index) {","lastModifiedDate":"2021-09-08"},{"lineNumber":68,"author":{"gitId":"pcgiang"},"content":"        Task task \u003d tasks.get(index - 1);","lastModifiedDate":"2021-09-08"},{"lineNumber":69,"author":{"gitId":"pcgiang"},"content":"        task.markAsUndone();","lastModifiedDate":"2021-09-08"},{"lineNumber":70,"author":{"gitId":"pcgiang"},"content":"        String result \u003d \"Nice! I have marked this task as undone!\\n\" + task.toString() ;","lastModifiedDate":"2021-09-08"},{"lineNumber":71,"author":{"gitId":"pcgiang"},"content":"        return result;","lastModifiedDate":"2021-09-08"},{"lineNumber":72,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":74,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":75,"author":{"gitId":"pcgiang"},"content":"     * A method to add a Task inside a TaskList","lastModifiedDate":"2021-09-08"},{"lineNumber":76,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":77,"author":{"gitId":"pcgiang"},"content":"     * @param task Task to be added.","lastModifiedDate":"2021-09-08"},{"lineNumber":78,"author":{"gitId":"pcgiang"},"content":"     * @return Task after it is added.","lastModifiedDate":"2021-09-08"},{"lineNumber":79,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":80,"author":{"gitId":"pcgiang"},"content":"    public String addTask(Task task) {","lastModifiedDate":"2021-09-08"},{"lineNumber":81,"author":{"gitId":"pcgiang"},"content":"        tasks.add(task);","lastModifiedDate":"2021-09-07"},{"lineNumber":82,"author":{"gitId":"pcgiang"},"content":"        String result \u003d \"Got it. I\u0027ve added this task.\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":83,"author":{"gitId":"pcgiang"},"content":"                + task.toString() + \"\\r\\n\"","lastModifiedDate":"2021-09-08"},{"lineNumber":84,"author":{"gitId":"pcgiang"},"content":"                + \"Now you have \" + tasks.size()","lastModifiedDate":"2021-09-07"},{"lineNumber":85,"author":{"gitId":"pcgiang"},"content":"                + (tasks.size() \u003d\u003d 1 ? \" task in the list\" : \" tasks in the list.\");","lastModifiedDate":"2021-09-07"},{"lineNumber":86,"author":{"gitId":"pcgiang"},"content":"        return result;","lastModifiedDate":"2021-09-01"},{"lineNumber":87,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"pcgiang"},"content":"     * A method to delete a certain in a TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":92,"author":{"gitId":"pcgiang"},"content":"     * @param index index of task to be deleted.","lastModifiedDate":"2021-09-08"},{"lineNumber":93,"author":{"gitId":"pcgiang"},"content":"     * @return String representation of task after it is deleted.","lastModifiedDate":"2021-09-08"},{"lineNumber":94,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"pcgiang"},"content":"    public String deleteTask(int index) {","lastModifiedDate":"2021-09-08"},{"lineNumber":96,"author":{"gitId":"pcgiang"},"content":"        Task task \u003d tasks.remove(index - 1);","lastModifiedDate":"2021-09-08"},{"lineNumber":97,"author":{"gitId":"pcgiang"},"content":"        String result \u003d \"Noted. I\u0027ve removed this task: \\n\" + task.toString() + \"\\r\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":98,"author":{"gitId":"pcgiang"},"content":"                + \"Now you have \" + tasks.size()","lastModifiedDate":"2021-09-07"},{"lineNumber":99,"author":{"gitId":"pcgiang"},"content":"                + (tasks.size() \u003d\u003d 1 ? \" task in the list\" : \" tasks in the list.\");","lastModifiedDate":"2021-09-07"},{"lineNumber":100,"author":{"gitId":"pcgiang"},"content":"        return result;","lastModifiedDate":"2021-09-01"},{"lineNumber":101,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"pcgiang"},"content":"     * Method to find a task given an input string.","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"pcgiang"},"content":"     * @param str Input string from user to find a certain task.","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"pcgiang"},"content":"     * @return TaskList which contains all the tasks that match.","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"pcgiang"},"content":"     * @throws TaskDoesNotExistException when there is no task that matches.","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"pcgiang"},"content":"    public String findTask(String str)throws TaskDoesNotExistException {","lastModifiedDate":"2021-09-01"},{"lineNumber":112,"author":{"gitId":"pcgiang"},"content":"        String t \u003d str.substring(5);","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"pcgiang"},"content":"        ArrayList\u003cTask\u003e l \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"pcgiang"},"content":"        for (Task task: tasks) {","lastModifiedDate":"2021-09-07"},{"lineNumber":116,"author":{"gitId":"pcgiang"},"content":"            if (task.getTitle().contains(t)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"pcgiang"},"content":"                l.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"pcgiang"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"pcgiang"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"pcgiang"},"content":"        if (l.isEmpty()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"pcgiang"},"content":"            throw new TaskDoesNotExistException();","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"pcgiang"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":124,"author":{"gitId":"pcgiang"},"content":"        String result \u003d \"Here are the matching tasks in your list: \\n\";","lastModifiedDate":"2021-09-01"},{"lineNumber":125,"author":{"gitId":"pcgiang"},"content":"        TaskList list \u003d new TaskList(l);","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"pcgiang"},"content":"        result +\u003d list.printList() + \"\\r\\n\";","lastModifiedDate":"2021-09-01"},{"lineNumber":127,"author":{"gitId":"pcgiang"},"content":"        return result;","lastModifiedDate":"2021-09-01"},{"lineNumber":128,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"pcgiang"},"content":"     * Getter to get ArrayList","lastModifiedDate":"2021-08-24"},{"lineNumber":132,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":133,"author":{"gitId":"pcgiang"},"content":"     * @return ArrayList of the current tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":134,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":135,"author":{"gitId":"pcgiang"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2021-08-24"},{"lineNumber":136,"author":{"gitId":"pcgiang"},"content":"        return tasks;","lastModifiedDate":"2021-09-07"},{"lineNumber":137,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":138,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"pcgiang":138}},{"path":"src/main/java/duke/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":" * A subclass of Task that represents a Todo task.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"public class ToDos extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"    private String type;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"     * Constructor for Deadline class.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"     * @param title Name of the task to be created.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":"    public ToDos(String title) {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"pcgiang"},"content":"        super(title);","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"pcgiang"},"content":"        type \u003d \"T\";","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"pcgiang"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"pcgiang"},"content":"    public String toString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"pcgiang"},"content":"        return \"[\" + type + \"]\" + super.toString();","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"pcgiang"},"content":"     * A method that prints out details of a todo task.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"pcgiang"},"content":"     * @return Details of todo task.","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"pcgiang"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"pcgiang"},"content":"    public String writeTask() {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"pcgiang"},"content":"        return type + \" | \" + super.writeTask();","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"pcgiang":35}},{"path":"src/main/java/duke/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":" * A class that prints messages to users","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"public class UI {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"     * Constructor of class. Prints welcome message when the program is first run.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"    public UI() {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"        printWelcomeMessage();","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":"     * A method which displays welcome message.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"pcgiang"},"content":"    public void printWelcomeMessage() {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"pcgiang"},"content":"        System.out.println(\"Hello!! This is Duke \u003c3\" + \"\\n\" + \"What can I do for you?\");","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"pcgiang"},"content":"     * A method which display an error message when the program throws an error.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"pcgiang"},"content":"     * @param message Error message to be sent to users.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"pcgiang"},"content":"    public void printErrorMessage(String message) {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"pcgiang"},"content":"        System.out.println(message);","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"pcgiang"},"content":"     * A method which displays goodbye message.","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"pcgiang"},"content":"    public void printByeMessage() {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"pcgiang"},"content":"        System.out.println(\"Babai! See you again soon! XD\");","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"pcgiang":38}},{"path":"src/main/java/duke/UndoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package duke;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"public class UndoCommand extends Command {","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"    ArrayList\u003cCommand\u003e commandHistory;","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"    Command currentCommand;","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"    public UndoCommand(TaskList tasks, ArrayList\u003cCommand\u003e commandHistory) {","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"        super(tasks);","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"        this.commandHistory \u003d commandHistory;","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"pcgiang"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"pcgiang"},"content":"    public String run() throws DukeException {","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"pcgiang"},"content":"        if (commandHistory \u003d\u003d null) {","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"pcgiang"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"pcgiang"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"pcgiang"},"content":"        ArrayList\u003cCommand\u003e updatedCommandHistory \u003d commandHistory;","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"pcgiang"},"content":"        for (int i \u003d commandHistory.size() - 1; i \u003e 0; i--) {","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"pcgiang"},"content":"            Command command \u003d commandHistory.get(i);","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"pcgiang"},"content":"            updatedCommandHistory.remove(command);","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"pcgiang"},"content":"            if (command instanceof UndoableCommand) {","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"pcgiang"},"content":"                currentCommand \u003d command;","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"pcgiang"},"content":"                break;","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"pcgiang"},"content":"            }","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"pcgiang"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"pcgiang"},"content":"        if (currentCommand \u003d\u003d null) {","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"pcgiang"},"content":"            return \"Nothing to undo!\";","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"pcgiang"},"content":"        } else {","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"pcgiang"},"content":"            UndoableCommand cur \u003d (UndoableCommand) currentCommand;","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"pcgiang"},"content":"            //safe to typecast since currentCommand is only instantiated if it is undoable","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"pcgiang"},"content":"            commandHistory \u003d updatedCommandHistory;","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"pcgiang"},"content":"            return cur.undo();","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"pcgiang"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"pcgiang":41}},{"path":"src/main/java/duke/UndoableCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package duke;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"public abstract class UndoableCommand extends Command {","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":"    public UndoableCommand(TaskList tasks) {","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":"        super(tasks);","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"    public UndoableCommand(TaskList tasks, String input) {","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"        super(tasks, input);","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"    public abstract String undo();","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"pcgiang":11}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package duke.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":" * A class which contains all exceptions thrown in the program.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"     * Constructor of an exception.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"     * @param message Message to be displayed to users.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"        super(message);","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"pcgiang":15}},{"path":"src/main/java/duke/exception/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package duke.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":" * A subclass of DukeException. Thrown when users do not give a description to the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"public class EmptyDescriptionException extends DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"     * Constructor of an exception.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"     * @param input User input used to display error message.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"    public EmptyDescriptionException(String input) {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"        super(\"â˜¹ OOPS!!! The description of \" + (input.startsWith(\"e\") ? \"an \" : \"a \")","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"                + input + \" cannot be empty.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"pcgiang":16}},{"path":"src/main/java/duke/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package duke.exception;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"/**","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":" * A subclass of DukeException. Thrown when users do not give a description to the task.","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":" *","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":" */","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"public class InvalidCommandException extends DukeException {","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"    public InvalidCommandException() {","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"        super(\"Invalid Command!\");","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"pcgiang":11}},{"path":"src/main/java/duke/exception/InvalidDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package duke.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":" * A subclass of DukeException. Thrown when users do not give a valid deadline to the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"public class InvalidDeadlineException extends DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"     * Constructor for the exception.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"    public InvalidDeadlineException() {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"        super(\"Please enter deadline in the format [Task name] /by yyyy-mm-dd HH:mm\");","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"pcgiang":14}},{"path":"src/main/java/duke/exception/InvalidEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package duke.exception;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"/**","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":" * A subclass of DukeException. Thrown when users do not give a valid deadline to the task.","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":" *","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":" */","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"public class InvalidEventException extends DukeException {","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"     * Constructor for the exception.","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"    public InvalidEventException() {","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"        super(\"Please enter event in the format [Task name] /at yyyy-mm-dd HH:mm-HH:mm\");","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"    public InvalidEventException(String str) {","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":"        super(str);","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"pcgiang":19}},{"path":"src/main/java/duke/exception/InvalidTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package duke.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":" * A subclass of DukeException. Thrown when users do not give a valid task.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"public class InvalidTaskException extends DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"     * Constructor for the exception.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"    public InvalidTaskException() {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"        super(\"â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-( Please key in a valid task!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"pcgiang":14}},{"path":"src/main/java/duke/exception/OutOfBoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package duke.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":" * A subclass of DukeException. Thrown when users gives task number that is out of bound.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"public class OutOfBoundException extends DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"     * Constructor for the exception.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"    public OutOfBoundException() {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"        super(\"Task does not exist. Please send a correct task number \u003e\u003c\");","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"pcgiang":14}},{"path":"src/main/java/duke/exception/TaskDoesNotExistException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package duke.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":" * A subclass of DukeException, thrown when search cannot be found.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"public class TaskDoesNotExistException extends DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"     * Constructor of the exception.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"    public TaskDoesNotExistException() {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"        super(\"Sorry. No such task is found :( Try another key word?\");","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"pcgiang":14}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"\u003c?import javafx.geometry.*?\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":"\u003c?import javafx.scene.image.*?\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: CEE7E6; -fx-border-radius: 10; -fx-border-color: black;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"        \u003cInsets bottom\u003d\"25.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"25.0\" /\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"pcgiang":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"pcgiang":16}},{"path":"src/test/java/duke/test/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package duke.test;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"import duke.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"import duke.exception.InvalidDeadlineException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":" * A class that Test functionality of a Deadline.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"     * Test writeTask() method.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":"     * @throws InvalidDeadlineException when users gives invalid deadline.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"pcgiang"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"pcgiang"},"content":"    public void testWriteTask() throws InvalidDeadlineException {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"pcgiang"},"content":"        Deadline t \u003d new Deadline(\"Task 1\" , \"2021-10-03\");","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"pcgiang"},"content":"        assertEquals(\"D | 0 | Task 1 | Oct 3 2021\", t.writeTask());","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"pcgiang"},"content":"     * Test writeTask() method when users give invalid input.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"pcgiang"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"pcgiang"},"content":"    public void testWriteTask2() {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"pcgiang"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"pcgiang"},"content":"            Deadline t \u003d new Deadline(\"Task 1\" , \"03/10/2021\");","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"pcgiang"},"content":"            assertEquals(\"\", t.writeTask());","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"pcgiang"},"content":"        } catch (InvalidDeadlineException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"pcgiang"},"content":"            assertEquals(\"Please enter deadline in the format yyyy-mm-dd\",","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"pcgiang"},"content":"                    e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"pcgiang"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"pcgiang":38}},{"path":"src/test/java/duke/test/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package duke.test;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":" * Dummy test for Duke.","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"public class DukeTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"    public void dummyTest() {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"pcgiang":15}},{"path":"src/test/java/duke/test/EventsTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package duke.test;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"import duke.Event;","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":" * A class that test functionality of an event.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"public class EventsTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"     * Method that test writeTask() in Event class.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"pcgiang"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"pcgiang"},"content":"    public void testWriteTask() {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"pcgiang"},"content":"        try {","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"pcgiang"},"content":"            Event t \u003d new Event(\"Task 1\" , \"12pm\");","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"pcgiang"},"content":"            assertEquals(\"E | 0 | Task 1 | 12pm\", t.writeTask());","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"pcgiang"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"pcgiang"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"pcgiang"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"pcgiang":26}},{"path":"src/test/java/duke/test/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"//package duke.test;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"//","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"//import duke.Event;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":"//import duke.Task;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":"//import duke.TaskList;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":"//import duke.ToDos;","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"//import duke.exception.DukeException;","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":"//import duke.exception.OutOfBoundException;","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"//import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"//","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"//import java.util.ArrayList;","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"//","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"///**","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":"// * A class that tests the functionalities of a Tasklist.","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"pcgiang"},"content":"// *","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"pcgiang"},"content":"// */","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"pcgiang"},"content":"//public class TaskListTest {","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"pcgiang"},"content":"//    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"pcgiang"},"content":"//     * Test functionality of printList().","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"pcgiang"},"content":"//     */","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"pcgiang"},"content":"//    @Test","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"pcgiang"},"content":"//    public void printListTest() {","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"pcgiang"},"content":"//        ToDos task1 \u003d new ToDos(\"shower\");","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"pcgiang"},"content":"//        ToDos task2 \u003d new ToDos(\"assignment\");","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"pcgiang"},"content":"//        ArrayList\u003cTask\u003e l \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"pcgiang"},"content":"//        l.add(task1);","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"pcgiang"},"content":"//        l.add(task2);","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"pcgiang"},"content":"//        TaskList list \u003d new TaskList(l);","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"pcgiang"},"content":"//        assertEquals(\"1. [T][ ]shower\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"pcgiang"},"content":"//                        + \"2. [T][ ]assignment\\n\", list.printList());","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"pcgiang"},"content":"//    }","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"pcgiang"},"content":"//","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"pcgiang"},"content":"//    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"pcgiang"},"content":"//     * Test functionality of addTask() when users give valid input.","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"pcgiang"},"content":"//     *","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"pcgiang"},"content":"//     * @throws DukeException when users gives invalid input.","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"pcgiang"},"content":"//     */","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"pcgiang"},"content":"//    @Test","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"pcgiang"},"content":"//    public void addTaskTest() throws DukeException {","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"pcgiang"},"content":"//        TaskList list \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"pcgiang"},"content":"//        String t \u003d list.addTask(\"todo shower\");","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"pcgiang"},"content":"//        assertEquals(\"[T][ ]shower\", t);","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"pcgiang"},"content":"//    }","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"pcgiang"},"content":"//","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"pcgiang"},"content":"//    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"pcgiang"},"content":"//     * Test functionality of addTask() when users give invalid input.","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"pcgiang"},"content":"//     *","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"pcgiang"},"content":"//     */","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"pcgiang"},"content":"//    @Test","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"pcgiang"},"content":"//    public void addTaskTest2() {","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"pcgiang"},"content":"//        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"pcgiang"},"content":"//            TaskList list \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"pcgiang"},"content":"//            String t \u003d list.addTask(\"deadline hw\");","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"pcgiang"},"content":"//            fail();","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"pcgiang"},"content":"//        } catch (DukeException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"pcgiang"},"content":"//            assertEquals(\"â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-( \" +","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"pcgiang"},"content":"//                            \"Please key in a valid task!\", e.getMessage());","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"pcgiang"},"content":"//        }","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"pcgiang"},"content":"//    }","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"pcgiang"},"content":"//","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"pcgiang"},"content":"//    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"pcgiang"},"content":"//     * Test functionality of deleteTask() method.","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"pcgiang"},"content":"//     *","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"pcgiang"},"content":"//     * @throws OutOfBoundException when users gives invalid task number.","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"pcgiang"},"content":"//     */","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"pcgiang"},"content":"//    @Test","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"pcgiang"},"content":"//    public void deleteTaskTest() throws OutOfBoundException {","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"pcgiang"},"content":"//        ToDos task1 \u003d new ToDos(\"shower\");","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"pcgiang"},"content":"//        ArrayList\u003cTask\u003e l \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"pcgiang"},"content":"//        l.add(task1);","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"pcgiang"},"content":"//        TaskList list \u003d new TaskList(l);","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"pcgiang"},"content":"//        String t \u003d list.deleteTask(\"1\");","lastModifiedDate":"2021-09-17"},{"lineNumber":75,"author":{"gitId":"pcgiang"},"content":"//        assertEquals(\"[T][ ]shower\", t);","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"pcgiang"},"content":"//    }","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"pcgiang"},"content":"//","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"pcgiang"},"content":"//    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"pcgiang"},"content":"//     * Test functionality of deleteTask().","lastModifiedDate":"2021-09-17"},{"lineNumber":80,"author":{"gitId":"pcgiang"},"content":"//     *","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"pcgiang"},"content":"//     */","lastModifiedDate":"2021-09-17"},{"lineNumber":82,"author":{"gitId":"pcgiang"},"content":"//    @Test","lastModifiedDate":"2021-09-17"},{"lineNumber":83,"author":{"gitId":"pcgiang"},"content":"//    public void deleteTaskTest2() {","lastModifiedDate":"2021-09-17"},{"lineNumber":84,"author":{"gitId":"pcgiang"},"content":"//        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":85,"author":{"gitId":"pcgiang"},"content":"//            ToDos task1 \u003d new ToDos(\"shower\");","lastModifiedDate":"2021-09-17"},{"lineNumber":86,"author":{"gitId":"pcgiang"},"content":"//            ArrayList\u003cTask\u003e l \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-17"},{"lineNumber":87,"author":{"gitId":"pcgiang"},"content":"//            l.add(task1);","lastModifiedDate":"2021-09-17"},{"lineNumber":88,"author":{"gitId":"pcgiang"},"content":"//            TaskList list \u003d new TaskList(l);","lastModifiedDate":"2021-09-17"},{"lineNumber":89,"author":{"gitId":"pcgiang"},"content":"//            list.deleteTask(\"2\");","lastModifiedDate":"2021-09-17"},{"lineNumber":90,"author":{"gitId":"pcgiang"},"content":"//            fail();","lastModifiedDate":"2021-09-17"},{"lineNumber":91,"author":{"gitId":"pcgiang"},"content":"//        } catch (DukeException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":92,"author":{"gitId":"pcgiang"},"content":"//            assertEquals(\"Task does not exist. \" +","lastModifiedDate":"2021-09-17"},{"lineNumber":93,"author":{"gitId":"pcgiang"},"content":"//                    \"Please send a correct task number \u003e\u003c\", e.getMessage());","lastModifiedDate":"2021-09-17"},{"lineNumber":94,"author":{"gitId":"pcgiang"},"content":"//        }","lastModifiedDate":"2021-09-17"},{"lineNumber":95,"author":{"gitId":"pcgiang"},"content":"//    }","lastModifiedDate":"2021-09-17"},{"lineNumber":96,"author":{"gitId":"pcgiang"},"content":"//","lastModifiedDate":"2021-09-17"},{"lineNumber":97,"author":{"gitId":"pcgiang"},"content":"//    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":98,"author":{"gitId":"pcgiang"},"content":"//     * Test funcionality of MarkAsDone().","lastModifiedDate":"2021-09-17"},{"lineNumber":99,"author":{"gitId":"pcgiang"},"content":"//     *","lastModifiedDate":"2021-09-17"},{"lineNumber":100,"author":{"gitId":"pcgiang"},"content":"//     * @throws OutOfBoundException when users give invalid input.","lastModifiedDate":"2021-09-17"},{"lineNumber":101,"author":{"gitId":"pcgiang"},"content":"//     */","lastModifiedDate":"2021-09-17"},{"lineNumber":102,"author":{"gitId":"pcgiang"},"content":"//    @Test","lastModifiedDate":"2021-09-17"},{"lineNumber":103,"author":{"gitId":"pcgiang"},"content":"//    public void markAsDoneTest() throws OutOfBoundException {","lastModifiedDate":"2021-09-17"},{"lineNumber":104,"author":{"gitId":"pcgiang"},"content":"//        ToDos task1 \u003d new ToDos(\"shower\");","lastModifiedDate":"2021-09-17"},{"lineNumber":105,"author":{"gitId":"pcgiang"},"content":"//        ArrayList\u003cTask\u003e l \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-17"},{"lineNumber":106,"author":{"gitId":"pcgiang"},"content":"//        l.add(task1);","lastModifiedDate":"2021-09-17"},{"lineNumber":107,"author":{"gitId":"pcgiang"},"content":"//        TaskList list \u003d new TaskList(l);","lastModifiedDate":"2021-09-17"},{"lineNumber":108,"author":{"gitId":"pcgiang"},"content":"//        String t \u003d list.markAsDone(\"1\");","lastModifiedDate":"2021-09-17"},{"lineNumber":109,"author":{"gitId":"pcgiang"},"content":"//        assertEquals(\"[T][X]shower\", t);","lastModifiedDate":"2021-09-17"},{"lineNumber":110,"author":{"gitId":"pcgiang"},"content":"//    }","lastModifiedDate":"2021-09-17"},{"lineNumber":111,"author":{"gitId":"pcgiang"},"content":"//","lastModifiedDate":"2021-09-17"},{"lineNumber":112,"author":{"gitId":"pcgiang"},"content":"//    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":113,"author":{"gitId":"pcgiang"},"content":"//     * Test functionality of markAsDone().","lastModifiedDate":"2021-09-17"},{"lineNumber":114,"author":{"gitId":"pcgiang"},"content":"//     *","lastModifiedDate":"2021-09-17"},{"lineNumber":115,"author":{"gitId":"pcgiang"},"content":"//     */","lastModifiedDate":"2021-09-17"},{"lineNumber":116,"author":{"gitId":"pcgiang"},"content":"//    @Test","lastModifiedDate":"2021-09-17"},{"lineNumber":117,"author":{"gitId":"pcgiang"},"content":"//    public void markAsDoneTest2() {","lastModifiedDate":"2021-09-17"},{"lineNumber":118,"author":{"gitId":"pcgiang"},"content":"//        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":119,"author":{"gitId":"pcgiang"},"content":"//            ToDos task1 \u003d new ToDos(\"shower\");","lastModifiedDate":"2021-09-17"},{"lineNumber":120,"author":{"gitId":"pcgiang"},"content":"//            ArrayList\u003cTask\u003e l \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-17"},{"lineNumber":121,"author":{"gitId":"pcgiang"},"content":"//            l.add(task1);","lastModifiedDate":"2021-09-17"},{"lineNumber":122,"author":{"gitId":"pcgiang"},"content":"//            TaskList list \u003d new TaskList(l);","lastModifiedDate":"2021-09-17"},{"lineNumber":123,"author":{"gitId":"pcgiang"},"content":"//            String t \u003d list.markAsDone(\"2\");","lastModifiedDate":"2021-09-17"},{"lineNumber":124,"author":{"gitId":"pcgiang"},"content":"//            fail();","lastModifiedDate":"2021-09-17"},{"lineNumber":125,"author":{"gitId":"pcgiang"},"content":"//        } catch (DukeException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":126,"author":{"gitId":"pcgiang"},"content":"//            assertEquals(\"Task does not exist. \" +","lastModifiedDate":"2021-09-17"},{"lineNumber":127,"author":{"gitId":"pcgiang"},"content":"//                    \"Please send a correct task number \u003e\u003c\", e.getMessage());","lastModifiedDate":"2021-09-17"},{"lineNumber":128,"author":{"gitId":"pcgiang"},"content":"//        }","lastModifiedDate":"2021-09-17"},{"lineNumber":129,"author":{"gitId":"pcgiang"},"content":"//    }","lastModifiedDate":"2021-09-17"},{"lineNumber":130,"author":{"gitId":"pcgiang"},"content":"//}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"pcgiang":130}},{"path":"src/test/java/duke/test/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package duke.test;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":"import duke.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":" * A class that tests the functionality of a Task class.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"public class TaskTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"     * Test functionality of writeTask().","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"pcgiang"},"content":"    public void testWriteTask() {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"pcgiang"},"content":"        Task t \u003d new Task(\"Task 1\");","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"pcgiang"},"content":"        assertEquals(\"0 | Task 1\", t.writeTask());","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"pcgiang":21}},{"path":"src/test/java/duke/test/ToDosTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pcgiang"},"content":"package duke.test;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"pcgiang"},"content":"import duke.ToDos;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"pcgiang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"pcgiang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"pcgiang"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"pcgiang"},"content":" * A class that tests functionality of Todo class.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"pcgiang"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"pcgiang"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"pcgiang"},"content":"public class ToDosTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"pcgiang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"pcgiang"},"content":"     * Test functionality of writeTask().","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"pcgiang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"pcgiang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"pcgiang"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"pcgiang"},"content":"    public void testWriteTask() {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"pcgiang"},"content":"        ToDos t \u003d new ToDos(\"Task 1\");","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"pcgiang"},"content":"        assertEquals(\"T | 0 | Task 1\", t.writeTask());","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"pcgiang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"pcgiang"},"content":"}","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"pcgiang"},"content":"","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"pcgiang":24}}]
