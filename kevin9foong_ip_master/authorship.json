[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"    // JavaFx Dependency can be defined here or we can use JavaFx plugin.","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"    mainClassName \u003d \"agent.Launcher\"","lastModifiedDate":"2021-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"    archiveBaseName \u003d \"butler\"","lastModifiedDate":"2021-09-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"kevin9foong"},"content":"task precommit {","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"kevin9foong"},"content":"    dependsOn(\u0027build\u0027, \u0027test\u0027, \u0027checkstyleMain\u0027, \u0027checkstyleTest\u0027)","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"kevin9foong"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-09-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":44,"kevin9foong":22}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"## Description","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"Butler is an interactive task list manager that engages with you through a text-messaging based interface.","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"## Product Screenshot","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"![GUI](Ui.png)","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"1. Adding a task","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"2. Listing tasks","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"3. Marking tasks as completed","lastModifiedDate":"2021-09-14"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"4. Deleting a task","lastModifiedDate":"2021-09-14"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"5. Finding tasks by description","lastModifiedDate":"2021-09-14"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"6. Task reminders","lastModifiedDate":"2021-09-14"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"7. Exiting program","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"## Usage ","lastModifiedDate":"2021-09-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"### 1. Adding a task","lastModifiedDate":"2021-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"There are 3 main types of tasks you can add. ","lastModifiedDate":"2021-09-14"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"1. Todos - tasks that only contain a description.","lastModifiedDate":"2021-09-14"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"2. Deadlines - tasks that include a description and a due date. ","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"3. Events - tasks that include a description and a venue which the event takes place at. ","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"#### 1.1 Adding a todo - ```todo```","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"Adds a Todo to the task list. ","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"Usage: ```todo DESCRIPTION```","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"Example(s): ","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"* ```todo wash the dishes```","lastModifiedDate":"2021-09-14"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"#### 1.2 Adding a deadline - ```deadline```","lastModifiedDate":"2021-09-14"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"Adds a deadline and its associated due date to the task list.","lastModifiedDate":"2021-09-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"Usage: ```deadline DESCRIPTION /by DUEDATE```","lastModifiedDate":"2021-09-14"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"* The ```DUEDATE``` should be written in yyyy-mm-dd format.","lastModifiedDate":"2021-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"Example(s): ","lastModifiedDate":"2021-09-14"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"* ```deadline complete CS2103T assignment /by 2021-09-14``` Adds a deadline with the description \u0027complete CS2103T ","lastModifiedDate":"2021-09-14"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"  assignment\u0027 and the due date \u002714 September 2021\u0027.","lastModifiedDate":"2021-09-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"#### 1.3 Adding an event","lastModifiedDate":"2021-09-14"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"Adds an event and its associated venue to the task list.","lastModifiedDate":"2021-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"Usage: ```event DESCRIPTION /at VENUE``` ","lastModifiedDate":"2021-09-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"Example(s):","lastModifiedDate":"2021-09-14"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"* ```event celebrate friend\u0027s birthday /at friend\u0027s house``` Adds an event with the description \u0027celebrate friend\u0027s","lastModifiedDate":"2021-09-14"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"birthday and the venue as \u0027friend\u0027s house\u0027 to the task list. ","lastModifiedDate":"2021-09-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"### 2. Listing tasks","lastModifiedDate":"2021-09-14"},{"lineNumber":55,"author":{"gitId":"kevin9foong"},"content":"Displays the list of all tasks along with the integer id representing each task.","lastModifiedDate":"2021-09-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":57,"author":{"gitId":"kevin9foong"},"content":"Usage: ```list```","lastModifiedDate":"2021-09-14"},{"lineNumber":58,"author":{"gitId":"kevin9foong"},"content":"* Each task is displayed in the format ```[Task type][Completed] DESCRIPTION (ADDITIONAL INFO)```","lastModifiedDate":"2021-09-14"},{"lineNumber":59,"author":{"gitId":"kevin9foong"},"content":"* For the task type, ```[T]``` is used to represent Todo, ```[D]``` for Deadline and ```[E]``` for Event. ","lastModifiedDate":"2021-09-14"},{"lineNumber":60,"author":{"gitId":"kevin9foong"},"content":"* ```[X]``` is used to represent a completed task, while ```[]``` represents an incomplete task.","lastModifiedDate":"2021-09-14"},{"lineNumber":61,"author":{"gitId":"kevin9foong"},"content":"* The integer index beside each task is used to refer to the associated task for other commands.","lastModifiedDate":"2021-09-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":63,"author":{"gitId":"kevin9foong"},"content":"Example output: ","lastModifiedDate":"2021-09-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":65,"author":{"gitId":"kevin9foong"},"content":"Here are the tasks in your list: ","lastModifiedDate":"2021-09-14"},{"lineNumber":66,"author":{"gitId":"kevin9foong"},"content":"1. [D][] complete CS2103T assignment (by: SEPTEMBER 14 2021) ","lastModifiedDate":"2021-09-14"},{"lineNumber":67,"author":{"gitId":"kevin9foong"},"content":"2. [T][X] wash the dishes","lastModifiedDate":"2021-09-14"},{"lineNumber":68,"author":{"gitId":"kevin9foong"},"content":"3. [E][] celebrate friend\u0027s birthday (at: friend\u0027s house)","lastModifiedDate":"2021-09-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":70,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":71,"author":{"gitId":"kevin9foong"},"content":"All tasks which have been added are listed with their task types, completion status and description shown.","lastModifiedDate":"2021-09-14"},{"lineNumber":72,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":73,"author":{"gitId":"kevin9foong"},"content":"### 3. Setting a task as completed - ```done```","lastModifiedDate":"2021-09-14"},{"lineNumber":74,"author":{"gitId":"kevin9foong"},"content":"Mark a task as completed. ","lastModifiedDate":"2021-09-14"},{"lineNumber":75,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":76,"author":{"gitId":"kevin9foong"},"content":"Usage: ```done INDEX```","lastModifiedDate":"2021-09-14"},{"lineNumber":77,"author":{"gitId":"kevin9foong"},"content":"* The ```INDEX``` is the integer associated with each task in the ```list``` command.","lastModifiedDate":"2021-09-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":79,"author":{"gitId":"kevin9foong"},"content":"Example(s):","lastModifiedDate":"2021-09-14"},{"lineNumber":80,"author":{"gitId":"kevin9foong"},"content":"* ```done 2``` Marks the second task displayed by the ```list``` command as completed.","lastModifiedDate":"2021-09-14"},{"lineNumber":81,"author":{"gitId":"kevin9foong"},"content":"* If the ```INDEX``` is invalid, no task is marked and Butler will send a response indicating that an ","lastModifiedDate":"2021-09-14"},{"lineNumber":82,"author":{"gitId":"kevin9foong"},"content":"error occurred due to invalid ```INDEX```. ","lastModifiedDate":"2021-09-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":84,"author":{"gitId":"kevin9foong"},"content":"### 4. Deleting a task - ```delete```","lastModifiedDate":"2021-09-14"},{"lineNumber":85,"author":{"gitId":"kevin9foong"},"content":"Deletes an existing task in the task list.","lastModifiedDate":"2021-09-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":87,"author":{"gitId":"kevin9foong"},"content":"Usage: ```delete INDEX```","lastModifiedDate":"2021-09-14"},{"lineNumber":88,"author":{"gitId":"kevin9foong"},"content":"* The ```INDEX``` is the integer associated with each task in the ```list``` command.","lastModifiedDate":"2021-09-14"},{"lineNumber":89,"author":{"gitId":"kevin9foong"},"content":"* If the ```INDEX``` is invalid, no task is deleted and Butler will indicate that ```INDEX``` is invalid.","lastModifiedDate":"2021-09-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":91,"author":{"gitId":"kevin9foong"},"content":"Examples(s): ","lastModifiedDate":"2021-09-14"},{"lineNumber":92,"author":{"gitId":"kevin9foong"},"content":"* ```delete 1``` Removes the first task displayed by the ```list``` command. ","lastModifiedDate":"2021-09-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":94,"author":{"gitId":"kevin9foong"},"content":"### 5. Finding tasks by description - ```find```","lastModifiedDate":"2021-09-14"},{"lineNumber":95,"author":{"gitId":"kevin9foong"},"content":"Displays all tasks whose description contains the provided ```SEARCH_QUERY```.","lastModifiedDate":"2021-09-14"},{"lineNumber":96,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":97,"author":{"gitId":"kevin9foong"},"content":"Usage: ```find SEARCH_QUERY```","lastModifiedDate":"2021-09-14"},{"lineNumber":98,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":99,"author":{"gitId":"kevin9foong"},"content":"Example: ```find hello``` Finds and displays tasks that contain \u0027hello\u0027 in the description in a list.","lastModifiedDate":"2021-09-14"},{"lineNumber":100,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":101,"author":{"gitId":"kevin9foong"},"content":"Example output:","lastModifiedDate":"2021-09-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":103,"author":{"gitId":"kevin9foong"},"content":"Here are the tasks with matching descriptions in your list:","lastModifiedDate":"2021-09-14"},{"lineNumber":104,"author":{"gitId":"kevin9foong"},"content":"1.[T][X] hello world","lastModifiedDate":"2021-09-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":106,"author":{"gitId":"kevin9foong"},"content":"Displays a list including tasks that contain \u0027hello\u0027 in the description.","lastModifiedDate":"2021-09-14"},{"lineNumber":107,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":108,"author":{"gitId":"kevin9foong"},"content":"### 6. Deadline reminders - ```reminder```","lastModifiedDate":"2021-09-14"},{"lineNumber":109,"author":{"gitId":"kevin9foong"},"content":"Displays all deadline tasks which have not yet been completed and due dates are earlier or until the specified filter ","lastModifiedDate":"2021-09-14"},{"lineNumber":110,"author":{"gitId":"kevin9foong"},"content":"time.","lastModifiedDate":"2021-09-14"},{"lineNumber":111,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":112,"author":{"gitId":"kevin9foong"},"content":"There are 3 due date time specifications Butler can remind you of current deadlines for: ","lastModifiedDate":"2021-09-14"},{"lineNumber":113,"author":{"gitId":"kevin9foong"},"content":"1. All deadlines","lastModifiedDate":"2021-09-14"},{"lineNumber":114,"author":{"gitId":"kevin9foong"},"content":"2. Is due within a week from today or earlier(overdue).","lastModifiedDate":"2021-09-14"},{"lineNumber":115,"author":{"gitId":"kevin9foong"},"content":"3. Is due today or earlier(overdue).","lastModifiedDate":"2021-09-14"},{"lineNumber":116,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":117,"author":{"gitId":"kevin9foong"},"content":"#### 6.1 Reminder for all incomplete deadlines","lastModifiedDate":"2021-09-14"},{"lineNumber":118,"author":{"gitId":"kevin9foong"},"content":"Displays all deadline tasks in a list that are incomplete regardless of due date.","lastModifiedDate":"2021-09-14"},{"lineNumber":119,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":120,"author":{"gitId":"kevin9foong"},"content":"Usage: ```reminder```","lastModifiedDate":"2021-09-14"},{"lineNumber":121,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":122,"author":{"gitId":"kevin9foong"},"content":"Example output:","lastModifiedDate":"2021-09-14"},{"lineNumber":123,"author":{"gitId":"kevin9foong"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":124,"author":{"gitId":"kevin9foong"},"content":"Here\u0027s the list of incomplete tasks sorted by deadline(All):","lastModifiedDate":"2021-09-14"},{"lineNumber":125,"author":{"gitId":"kevin9foong"},"content":"[D][] finish homework A (by: SEPTEMBER 10 2021) ","lastModifiedDate":"2021-09-14"},{"lineNumber":126,"author":{"gitId":"kevin9foong"},"content":"[D][] finish homework B (by: SEPTEMBER 14 2021) ","lastModifiedDate":"2021-09-14"},{"lineNumber":127,"author":{"gitId":"kevin9foong"},"content":"[D][] finish homework C (by: SEPTEMBER 22 2021) ","lastModifiedDate":"2021-09-14"},{"lineNumber":128,"author":{"gitId":"kevin9foong"},"content":"[D][] finish homework D (by: SEPTEMBER 30 2021) ","lastModifiedDate":"2021-09-14"},{"lineNumber":129,"author":{"gitId":"kevin9foong"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":130,"author":{"gitId":"kevin9foong"},"content":"All deadlines that are incomplete are displayed as reminder.","lastModifiedDate":"2021-09-14"},{"lineNumber":131,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":132,"author":{"gitId":"kevin9foong"},"content":"#### 6.2 Reminder for incomplete tasks which are overdue or are due today.","lastModifiedDate":"2021-09-14"},{"lineNumber":133,"author":{"gitId":"kevin9foong"},"content":"Displays all incomplete deadline tasks in a list that are overdue or are due today.","lastModifiedDate":"2021-09-14"},{"lineNumber":134,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":135,"author":{"gitId":"kevin9foong"},"content":"Usage: ```reminder today```","lastModifiedDate":"2021-09-14"},{"lineNumber":136,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":137,"author":{"gitId":"kevin9foong"},"content":"Example output:","lastModifiedDate":"2021-09-14"},{"lineNumber":138,"author":{"gitId":"kevin9foong"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":139,"author":{"gitId":"kevin9foong"},"content":"Here\u0027s the list of incomplete tasks sorted by deadline(Due today or earlier):","lastModifiedDate":"2021-09-14"},{"lineNumber":140,"author":{"gitId":"kevin9foong"},"content":"[D][] finish homework A (by: SEPTEMBER 10 2021) ","lastModifiedDate":"2021-09-14"},{"lineNumber":141,"author":{"gitId":"kevin9foong"},"content":"[D][] finish homework B (by: SEPTEMBER 14 2021) ","lastModifiedDate":"2021-09-14"},{"lineNumber":142,"author":{"gitId":"kevin9foong"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":143,"author":{"gitId":"kevin9foong"},"content":"Assuming the current date is SEPTEMBER 14, 2021, only incomplete deadlines that are overdue or ","lastModifiedDate":"2021-09-14"},{"lineNumber":144,"author":{"gitId":"kevin9foong"},"content":"are due by today are displayed.","lastModifiedDate":"2021-09-14"},{"lineNumber":145,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":146,"author":{"gitId":"kevin9foong"},"content":"#### 6.3 Reminder for incomplete tasks which are overdue or are due within a week from today","lastModifiedDate":"2021-09-14"},{"lineNumber":147,"author":{"gitId":"kevin9foong"},"content":"Displays all incomplete deadline tasks in a list that are overdue or are due within a week from today.","lastModifiedDate":"2021-09-14"},{"lineNumber":148,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":149,"author":{"gitId":"kevin9foong"},"content":"Usage: ```reminder week```","lastModifiedDate":"2021-09-14"},{"lineNumber":150,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":151,"author":{"gitId":"kevin9foong"},"content":"Example output:","lastModifiedDate":"2021-09-14"},{"lineNumber":152,"author":{"gitId":"kevin9foong"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":153,"author":{"gitId":"kevin9foong"},"content":"Here\u0027s the list of incomplete tasks sorted by deadline(Due within a week from now or earlier):","lastModifiedDate":"2021-09-14"},{"lineNumber":154,"author":{"gitId":"kevin9foong"},"content":"[D][] finish homework A (by: SEPTEMBER 10 2021) ","lastModifiedDate":"2021-09-14"},{"lineNumber":155,"author":{"gitId":"kevin9foong"},"content":"[D][] finish homework B (by: SEPTEMBER 14 2021) ","lastModifiedDate":"2021-09-14"},{"lineNumber":156,"author":{"gitId":"kevin9foong"},"content":"[D][] finish homework C (by: SEPTEMBER 22 2021) ","lastModifiedDate":"2021-09-14"},{"lineNumber":157,"author":{"gitId":"kevin9foong"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":158,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":159,"author":{"gitId":"kevin9foong"},"content":"Assuming the current date is SEPTEMBER 14, 2021, only incomplete deadlines that are overdue or","lastModifiedDate":"2021-09-14"},{"lineNumber":160,"author":{"gitId":"kevin9foong"},"content":"are due within a week from today (due SEPTEMBER 22, 2021 or earlier) are displayed.","lastModifiedDate":"2021-09-14"},{"lineNumber":161,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":162,"author":{"gitId":"kevin9foong"},"content":"### 7. Exiting the program - ```bye```","lastModifiedDate":"2021-09-14"},{"lineNumber":163,"author":{"gitId":"kevin9foong"},"content":"Displays shutdown message and terminates the Butler program. ","lastModifiedDate":"2021-09-14"},{"lineNumber":164,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":165,"author":{"gitId":"kevin9foong"},"content":"Usage: ```bye```","lastModifiedDate":"2021-09-14"},{"lineNumber":166,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-14"}],"authorContributionMap":{"-":25,"kevin9foong":141}},{"path":"src/main/java/agent/Agent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package agent;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import agent.command.Command;","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import agent.data.TaskFileStorage;","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"import agent.exceptions.DukeException;","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"import agent.exceptions.InvalidTaskDataException;","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"import agent.exceptions.TaskFileIoException;","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"import agent.messages.GreetingMessage;","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"import agent.parser.Parser;","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"import agent.tasks.TaskList;","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-09-14"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":" * Represents the chat bot agent.","lastModifiedDate":"2021-09-14"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":" *","lastModifiedDate":"2021-09-14"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":" * @author kevin9foong","lastModifiedDate":"2021-09-14"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"public class Agent {","lastModifiedDate":"2021-09-14"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"    private final TaskList taskList;","lastModifiedDate":"2021-09-14"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"     * Indicates if the agent is to be exited.","lastModifiedDate":"2021-09-14"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"    private boolean isExited;","lastModifiedDate":"2021-09-14"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"     * Constructs an instance of the \u003ccode\u003eDuke\u003c/code\u003e chat bot with the provided input and output handlers.","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"     * @throws TaskFileIoException      thrown when unable to read the save task file.","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"     * @throws InvalidTaskDataException thrown when task file data is corrupted.","lastModifiedDate":"2021-09-14"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"    public Agent() throws TaskFileIoException, InvalidTaskDataException {","lastModifiedDate":"2021-09-14"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"        this.taskList \u003d new TaskList(new TaskFileStorage());","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"     * Responds to provided user input.","lastModifiedDate":"2021-09-14"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"     * @param userInput user input text to respond to.","lastModifiedDate":"2021-09-14"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"     * @return chat bot response to user input.","lastModifiedDate":"2021-09-14"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"     * @throws DukeException thrown when unable to handle user input.","lastModifiedDate":"2021-09-14"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"    public String respondToUserInput(String userInput) throws DukeException {","lastModifiedDate":"2021-09-14"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"        Command userCommand \u003d Parser.parse(userInput);","lastModifiedDate":"2021-09-14"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"        setExited(userCommand.isExit());","lastModifiedDate":"2021-09-14"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"        return userCommand.execute(taskList);","lastModifiedDate":"2021-09-14"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"     * Returns a \u003ccode\u003eString\u003c/code\u003e which greets the user upon chat bot start up.","lastModifiedDate":"2021-09-14"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"     * @return greeting message.","lastModifiedDate":"2021-09-14"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"    public String greetUser() {","lastModifiedDate":"2021-09-14"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"        return new GreetingMessage().toString();","lastModifiedDate":"2021-09-14"},{"lineNumber":55,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":56,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":57,"author":{"gitId":"kevin9foong"},"content":"    public boolean isExited() {","lastModifiedDate":"2021-09-14"},{"lineNumber":58,"author":{"gitId":"kevin9foong"},"content":"        return isExited;","lastModifiedDate":"2021-09-14"},{"lineNumber":59,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":60,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":61,"author":{"gitId":"kevin9foong"},"content":"    public void setExited(boolean exited) {","lastModifiedDate":"2021-09-14"},{"lineNumber":62,"author":{"gitId":"kevin9foong"},"content":"        isExited \u003d exited;","lastModifiedDate":"2021-09-14"},{"lineNumber":63,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":64,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-09-14"}],"authorContributionMap":{"kevin9foong":64}},{"path":"src/main/java/agent/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package agent;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":" * Main class used to launch the Duke chat bot and its GUI.","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"public class Launcher {","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"     * Launches the Butler chat bot and its GUI.","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"     * @param args accepts a single String argument for image file name placed in","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"     *             /resources/images for use a background picture.","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"kevin9foong":19}},{"path":"src/main/java/agent/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package agent;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"import agent.exceptions.DukeException;","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"import agent.gui.MainWindow;","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-09-14"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":" * Bridge class between UI and main chat bot logic.","lastModifiedDate":"2021-09-14"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":" *","lastModifiedDate":"2021-09-14"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":" * @author kevin9foong","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-09-14"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-14"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"     * Starts the GUI for the chat bot.","lastModifiedDate":"2021-09-14"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"     * @param primaryStage top level JavaFX container for chat bot GUI.","lastModifiedDate":"2021-09-14"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"        try {","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"            String mainWindowFxmlFilePath \u003d \"/view/MainWindow.fxml\";","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(mainWindowFxmlFilePath));","lastModifiedDate":"2021-09-14"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"            AnchorPane mainLayoutPane \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"            Scene scene \u003d new Scene(mainLayoutPane);","lastModifiedDate":"2021-09-14"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"            primaryStage.setScene(scene);","lastModifiedDate":"2021-09-14"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"            configurePrimaryStage(primaryStage);","lastModifiedDate":"2021-09-14"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"            MainWindow controller \u003d fxmlLoader.getController();","lastModifiedDate":"2021-09-14"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"            linkGuiToChatBotAgent(controller);","lastModifiedDate":"2021-09-14"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"            primaryStage.show();","lastModifiedDate":"2021-09-14"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-09-14"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"            ioe.printStackTrace();","lastModifiedDate":"2021-09-14"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"    private void configurePrimaryStage(Stage primaryStage) {","lastModifiedDate":"2021-09-14"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"        primaryStage.setResizable(false);","lastModifiedDate":"2021-09-14"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"        primaryStage.setTitle(\"Butler Task Manager\");","lastModifiedDate":"2021-09-14"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"    private void linkGuiToChatBotAgent(MainWindow mainWindow) {","lastModifiedDate":"2021-09-14"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"        try {","lastModifiedDate":"2021-09-14"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"            Agent agent \u003d new Agent();","lastModifiedDate":"2021-09-14"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"            mainWindow.linkChatBotAgent(agent);","lastModifiedDate":"2021-09-14"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"        } catch (DukeException de) {","lastModifiedDate":"2021-09-14"},{"lineNumber":55,"author":{"gitId":"kevin9foong"},"content":"            mainWindow.displayAgentMessage(de.getMessage());","lastModifiedDate":"2021-09-14"},{"lineNumber":56,"author":{"gitId":"kevin9foong"},"content":"            mainWindow.shutDown(3000);","lastModifiedDate":"2021-09-14"},{"lineNumber":57,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":58,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":59,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-09-14"}],"authorContributionMap":{"kevin9foong":59}},{"path":"src/main/java/agent/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package agent.command;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import agent.exceptions.EmptyDeadlineBodyException;","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import agent.exceptions.InvalidDateTimeFormatException;","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"import agent.exceptions.InvalidDeadlineBodyException;","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"import agent.exceptions.TaskFileIoException;","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"import agent.messages.TaskAddMessage;","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"import agent.tasks.Deadline;","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"import agent.tasks.Task;","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"import agent.tasks.TaskList;","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":" * Represents user command to add a \u003ccode\u003eDeadline\u003c/code\u003e to persisted tasks.","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":" * @author kevin9foong","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"     * Constructs instance of \u003ccode\u003eAddDeadlineCommand\u003c/code\u003e which adds a \u003ccode\u003eDeadline\u003c/code\u003e based","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"     * on data provided within the given \u003ccode\u003euserInputBody\u003c/code\u003e \u003ccode\u003eString\u003c/code\u003e.","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"     * @param userInputBody \u003ccode\u003eString\u003c/code\u003e containing description of deadline and deadline \u003ccode\u003eDateTime\u003c/code\u003e.","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"    public AddDeadlineCommand(String userInputBody) {","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"        super(userInputBody);","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"     * Adds a \u003ccode\u003eDeadline\u003c/code\u003e to the \u003ccode\u003eTaskList\u003c/code\u003e and writes to user \u003ccode\u003eTaskAddMessage\u003c/code\u003e.","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"     * @param taskList handles task operations including adding, deleting, marking as done and retrieval.","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"     * @return response message by chat bot for adding deadline.","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"     * @throws TaskFileIoException            thrown when failure due to reading or writing to Task save file occurs.","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"     * @throws InvalidDateTimeFormatException thrown when String representing \u003ccode\u003eDateTime\u003c/code\u003e is invalid.","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"     * @throws InvalidDeadlineBodyException   thrown when the data String representing the","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"     *                                        \u003ccode\u003eDeadline\u003c/code\u003e is invalid.","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"     * @throws EmptyDeadlineBodyException     thrown when the data String representing the","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"     *                                        \u003ccode\u003eDeadline\u003c/code\u003e is missing.","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"    public String execute(TaskList taskList)","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"            throws InvalidDateTimeFormatException,","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"            InvalidDeadlineBodyException, EmptyDeadlineBodyException, TaskFileIoException {","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"        Task addedDeadline \u003d taskList.addTask(new Deadline(super.getUserInputBody()));","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"        return new TaskAddMessage(addedDeadline.toString(),","lastModifiedDate":"2021-09-06"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"                taskList.getNumOfTasks()).toString();","lastModifiedDate":"2021-09-06"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"     * Returns false to indicate program should not terminate after command is executed.","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"     * @return false to indicate program should not terminate after command is executed.","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"kevin9foong"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"kevin9foong"},"content":"        return false;","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"kevin9foong":59}},{"path":"src/main/java/agent/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package agent.command;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import agent.exceptions.EmptyEventBodyException;","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import agent.exceptions.InvalidEventBodyException;","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"import agent.exceptions.TaskFileIoException;","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"import agent.messages.TaskAddMessage;","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"import agent.tasks.Event;","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"import agent.tasks.Task;","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"import agent.tasks.TaskList;","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":" * Represents user command to add an \u003ccode\u003eEvent\u003c/code\u003e to persisted Tasks.","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":" * @author kevin9foong","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"     * Constructs instance of \u003ccode\u003eAddEventCommand\u003c/code\u003e which adds a \u003ccode\u003eEvent\u003c/code\u003e based","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"     * on data provided within the given \u003ccode\u003euserInputBody\u003c/code\u003e \u003ccode\u003eString\u003c/code\u003e.","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"     * @param userInputBody \u003ccode\u003eString\u003c/code\u003e containing description of event and venue.","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"    public AddEventCommand(String userInputBody) {","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"        super(userInputBody);","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"     * Adds an \u003ccode\u003eEvent\u003c/code\u003e to the \u003ccode\u003eTaskList\u003c/code\u003e and writes to user \u003ccode\u003eEventAddMessage\u003c/code\u003e.","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"     * @param taskList handles task operations including adding, deleting, marking as done and retrieval.","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"     * @return response message by chat bot for adding event.","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"     * @throws TaskFileIoException       thrown when failure due to reading or writing to Task save file occurs.","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"     * @throws InvalidEventBodyException thrown when the data String representing the","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"     *                                   \u003ccode\u003eEvent\u003c/code\u003e is invalid.","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"     * @throws EmptyEventBodyException   thrown when the data String representing the","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"     *                                   \u003ccode\u003eEvent\u003c/code\u003e is missing.","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"    public String execute(TaskList taskList)","lastModifiedDate":"2021-09-06"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"            throws TaskFileIoException, EmptyEventBodyException, InvalidEventBodyException {","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"        Task addedTask \u003d taskList.addTask(new Event(super.getUserInputBody()));","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"        return new TaskAddMessage(addedTask.toString(),","lastModifiedDate":"2021-09-06"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"                taskList.getNumOfTasks()).toString();","lastModifiedDate":"2021-09-06"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"     * Returns false to indicate program should not terminate after command is executed.","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"     * @return false to indicate program should not terminate after command is executed.","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"        return false;","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"kevin9foong":56}},{"path":"src/main/java/agent/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package agent.command;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import agent.exceptions.EmptyTodoBodyException;","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import agent.exceptions.TaskFileIoException;","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"import agent.messages.TaskAddMessage;","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"import agent.tasks.Task;","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"import agent.tasks.TaskList;","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"import agent.tasks.ToDo;","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":" * Represents user command to add a \u003ccode\u003eToDo\u003c/code\u003e to persisted tasks.","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":" * @author kevin9foong","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"     * Constructs instance of \u003ccode\u003eAddTodoCommand\u003c/code\u003e which adds a \u003ccode\u003eToDo\u003c/code\u003e based","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"     * on data provided within the given \u003ccode\u003euserInputBody\u003c/code\u003e \u003ccode\u003eString\u003c/code\u003e.","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"     * @param userInputBody \u003ccode\u003eString\u003c/code\u003e containing description of \u003ccode\u003eToDo\u003c/code\u003e.","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"    public AddTodoCommand(String userInputBody) {","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"        super(userInputBody);","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"     * Adds an \u003ccode\u003eToDo\u003c/code\u003e to the \u003ccode\u003eTaskList\u003c/code\u003e and writes to user \u003ccode\u003eToDoAddMessage\u003c/code\u003e.","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"     * @param taskList handles task operations including adding, deleting, marking as done and retrieval.","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"     * @return response message by chat bot for adding todo.","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"     * @throws TaskFileIoException    thrown when failure due to reading or writing to task save file occurs.","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"     * @throws EmptyTodoBodyException thrown when the data String representing the","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"     *                                \u003ccode\u003eToDo\u003c/code\u003e is missing.","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"    public String execute(TaskList taskList)","lastModifiedDate":"2021-09-06"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"            throws TaskFileIoException, EmptyTodoBodyException {","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"        Task addedToDo \u003d taskList.addTask(new ToDo(super.getUserInputBody()));","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"        return new TaskAddMessage(addedToDo.toString(),","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"                taskList.getNumOfTasks()).toString();","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"     * Returns false to indicate program should not terminate after command is executed.","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"     * @return false to indicate program should not terminate after command is executed.","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"        return false;","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"kevin9foong":54}},{"path":"src/main/java/agent/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package agent.command;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import agent.messages.ByeMessage;","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import agent.tasks.TaskList;","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":" * Represents user command to terminate current running instance of Duke.","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":" * @author kevin9foong","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"     * Constructs instance of \u003ccode\u003eByeCommand\u003c/code\u003e which when executed says bye to user and","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"     * terminates current running Duke instance.","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"     * @param userInputBody not being utilised.","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"    public ByeCommand(String userInputBody) {","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"        super(userInputBody);","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"     * Writes to the user to say bye.","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"     * @param taskList handles task operations including adding, deleting, marking as done and retrieval.","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"     * @return response message by chat bot for bye command.","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"    public String execute(TaskList taskList) {","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"        return new ByeMessage().toString();","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"     * Returns true to indicate program should terminate after command is executed.","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"     * @return true to indicate program should terminate after command is executed.","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"        return true;","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"kevin9foong":43}},{"path":"src/main/java/agent/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package agent.command;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import agent.exceptions.DukeException;","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import agent.tasks.TaskList;","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":" * Represents a user command.","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":" * @author kevin9foong","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"    private final String userInputBody;","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"    protected Command(String userInputBody) {","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"        this.userInputBody \u003d userInputBody;","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"     * Handles this command.","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"     * @param taskList handles task operations including adding, deleting, marking as done and retrieval.","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"     * @return response message by chat bot when trying to execute specific command.","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"     * @throws DukeException thrown when a failure occurs within the Duke chat bot.","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"    public abstract String execute(TaskList taskList) throws DukeException;","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"     * Returns true or false to indicate whether program should terminate after this command is executed.","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"     * @return boolean value which indicates whether program should terminate after this command is executed.","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"    protected String getUserInputBody() {","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"        return this.userInputBody;","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"kevin9foong":37}},{"path":"src/main/java/agent/command/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package agent.command;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":" * Represents a fixed list of supported user commands.","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":" *","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":" * @author kevin9foong","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"public enum CommandType {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"    LIST, TODO, DEADLINE, EVENT, DELETE, DONE, FIND, REMINDER, BYE;","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"     * Returns Command classification based on the given string.","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"     * @param commandText string which matches command name.","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"     * @return Command representing the given string command, or null if no command matched.","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"    public static CommandType getCommand(String commandText) {","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"        return Arrays.stream(CommandType.values())","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"                .reduce(null, (selectedCmd, currentCmd) -\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"                        selectedCmd \u003d\u003d null \u0026\u0026 commandText.toUpperCase().equals(currentCmd.toString())","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"                                ? currentCmd","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"                                : selectedCmd);","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"kevin9foong":28}},{"path":"src/main/java/agent/command/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package agent.command;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import agent.exceptions.InvalidTaskNumberException;","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import agent.exceptions.TaskFileIoException;","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"import agent.messages.Message;","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"import agent.messages.MessageConstants;","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"import agent.messages.TaskDeleteMessage;","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"import agent.tasks.Task;","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"import agent.tasks.TaskList;","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":" * Represents a user command to delete the specified \u003ccode\u003eTask\u003c/code\u003e for persisted Tasks.","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":" * @author kevin9foong","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"     * Constructs instance of \u003ccode\u003eDeleteTaskCommand\u003c/code\u003e which when executed deletes the task","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"     * number specified by the user input.","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"     * @param userInputBody \u003ccode\u003eString\u003c/code\u003e which includes task number to delete.","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"    public DeleteTaskCommand(String userInputBody) {","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"        super(userInputBody);","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"     * Deletes the \u003ccode\u003eTask\u003c/code\u003e with the given task number.","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"     * @param taskList handles task operations including adding, deleting, marking as done and retrieval.","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"     * @return response message by chat bot when trying to delete a task.","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"     * @throws TaskFileIoException        thrown when failure due to reading or writing to task save file occurs.","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"     * @throws InvalidTaskNumberException thrown when the task associated with the given number is not found.","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"    public String execute(TaskList taskList) throws","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"            TaskFileIoException, InvalidTaskNumberException {","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"            // user input is 1 greater than index.","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"            int index \u003d Integer.parseInt(super.getUserInputBody()) - 1;","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"            Task deletedTask \u003d taskList.deleteTask(index);","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"            return new TaskDeleteMessage(deletedTask.toString(), taskList.getNumOfTasks()).toString();","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"            return new Message(MessageConstants.MESSAGE_INVALID_INTEGER).toString();","lastModifiedDate":"2021-09-06"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"     * Returns false to indicate program should not terminate after command is executed.","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"     * @return false to indicate program should not terminate after command is executed.","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"kevin9foong"},"content":"        return false;","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"kevin9foong":57}},{"path":"src/main/java/agent/command/FindTasksCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package agent.command;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import java.util.List;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"import agent.exceptions.EmptyFindBodyException;","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"import agent.messages.TaskFindListMessage;","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"import agent.tasks.Task;","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"import agent.tasks.TaskList;","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":" * Represents user command to find all tasks with contains specified text filter String","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":" * in its description.","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":" * @author kevin9foong","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"public class FindTasksCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"     * Constructs instance of \u003ccode\u003eFindTasksCommand\u003c/code\u003e which searches within the list of","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"     * persisted tasks for tasks which contain the specified user input search query string within","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"     * its description.","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"     * @param userInputBody \u003ccode\u003eString\u003c/code\u003e which includes the desired task description search query.","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"    public FindTasksCommand(String userInputBody) {","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"        super(userInputBody);","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"     * Returns all Tasks which contain the text filter String in its description.","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"     * @param taskList handles task operations including adding, deleting, marking as done and retrieval.","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"     * @return response message by chat bot when trying to find tasks.","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"     * @throws EmptyFindBodyException thrown when provided search query is empty.","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"    public String execute(TaskList taskList) throws EmptyFindBodyException {","lastModifiedDate":"2021-09-06"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"        String textFilter \u003d super.getUserInputBody();","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"        if (textFilter \u003d\u003d null) {","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"            throw new EmptyFindBodyException();","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"        List\u003cTask\u003e matchedTasks \u003d taskList.getAllTasks().stream().filter(task -\u003e","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"                task.getDescription().contains(textFilter)).collect(Collectors.toList());","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"        return new TaskFindListMessage(matchedTasks).toString();","lastModifiedDate":"2021-09-06"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"     * Returns false to indicate program should not terminate after command is executed.","lastModifiedDate":"2021-09-14"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"     * @return false to indicate program should not terminate after command is executed.","lastModifiedDate":"2021-09-14"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"kevin9foong"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"kevin9foong"},"content":"        return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"kevin9foong":58}},{"path":"src/main/java/agent/command/ListTasksCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package agent.command;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import agent.messages.TaskListMessage;","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import agent.tasks.TaskList;","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":" * Represents user command to display all tasks that have been persisted.","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":" * @author kevin9foong","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"public class ListTasksCommand extends Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"     * Constructs an instance of \u003ccode\u003eListTasksCommand\u003c/code\u003e which outputs a message","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"     * displaying the details of all currently persisted tasks.","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"     * @param userInputBody not being utilised.","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"    public ListTasksCommand(String userInputBody) {","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"        super(userInputBody);","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"     * Retrieves all tasks from the \u003ccode\u003eTaskList\u003c/code\u003e and writes message to user to","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"     * display all tasks in the \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"     * @param taskList handles task operations including adding, deleting, marking as done and retrieval.","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"     * @return response message by chat bot when trying to list tasks stored.","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"    public String execute(TaskList taskList) {","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"        return new TaskListMessage(taskList.getAllTasks()).toString();","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"     * Returns false to indicate program should not terminate after command is executed.","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"     * @return false to indicate program should not terminate after command is executed.","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"        return false;","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"kevin9foong":44}},{"path":"src/main/java/agent/command/MarkTaskDoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package agent.command;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import agent.exceptions.InvalidTaskNumberException;","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import agent.exceptions.TaskFileIoException;","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"import agent.messages.Message;","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"import agent.messages.MessageConstants;","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"import agent.messages.TaskDoneMessage;","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"import agent.tasks.Task;","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"import agent.tasks.TaskList;","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":" * Represents user command to mark specified task as done.","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":" * @author kevin9foong","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"public class MarkTaskDoneCommand extends Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"     * Constructs an instance of \u003ccode\u003eMarkTaskDoneCommand\u003c/code\u003e which when executed sets the task","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"     * with the specified task number as done.","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"     * @param userInputBody \u003ccode\u003eString\u003c/code\u003e which includes the task number of task to mark as done.","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"    public MarkTaskDoneCommand(String userInputBody) {","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"        super(userInputBody);","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"     * Marks the specified \u003ccode\u003eTask\u003c/code\u003e as done and writes to user to indicate that \u003ccode\u003eTask\u003c/code\u003e has been","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"     * successfully marked as done.","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"     * @param taskList handles task operations including adding, deleting, marking as done and retrieval.","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"     * @return response message by chat bot when trying to mark a task as done.","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"     * @throws TaskFileIoException        thrown when failure due to reading or writing to task save file occurs.","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"     * @throws InvalidTaskNumberException thrown when the task associated with the given number is not found.","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"    public String execute(TaskList taskList)","lastModifiedDate":"2021-09-06"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"            throws InvalidTaskNumberException, TaskFileIoException {","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"            // user input is 1 greater than index.","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"            int index \u003d Integer.parseInt(super.getUserInputBody()) - 1;","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"            Task doneTask \u003d taskList.setDone(index);","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"            return new TaskDoneMessage(doneTask).toString();","lastModifiedDate":"2021-09-06"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"            return new Message(MessageConstants.MESSAGE_INVALID_INTEGER).toString();","lastModifiedDate":"2021-09-06"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"     * Returns false to indicate program should not terminate after command is executed.","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"     * @return false to indicate program should not terminate after command is executed.","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"kevin9foong"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"kevin9foong"},"content":"        return false;","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"kevin9foong":59}},{"path":"src/main/java/agent/command/ReminderCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package agent.command;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import static java.util.stream.Collectors.toList;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"import java.util.List;","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"import agent.messages.DeadlineReminderMessage;","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"import agent.tasks.Deadline;","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"import agent.tasks.TaskList;","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":" * Handles reminding the user of upcoming deadlines for the specified time period.","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":" * \u003cp\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":" * There are 3 time periods to filter deadlines by, all which is by default, due in a week and","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":" * due by today.","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":" *","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":" * @author kevin9foong","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"public class ReminderCommand extends Command {","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"     * Constructs an instance of \u003ccode\u003eReminderCommand\u003c/code\u003e which when executes lists deadlines that are","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"     * due according to user\u0027s specified time frame.","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"     * @param userInputBody specifies desired time frame to limit due dates to. Include \"week\" or \"today\" to specify","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"     *                      a specific time frame.","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"    public ReminderCommand(String userInputBody) {","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"        super(userInputBody);","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"     * Filters tasks for undone deadlines which are due before user\u0027s specified search time frame and","lastModifiedDate":"2021-09-14"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"     * returns chat bot response to be displayed to user which lists the filtered upcoming deadlines.","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"     * @param taskList handles task operations including adding, deleting, marking as done and retrieval.","lastModifiedDate":"2021-09-06"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"     * @return response message which lists upcoming incomplete deadlines within user\u0027s specified time frame.","lastModifiedDate":"2021-09-06"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"    public String execute(TaskList taskList) {","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"        String userInput \u003d super.getUserInputBody();","lastModifiedDate":"2021-09-06"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"        String timeScope \u003d \"All\";","lastModifiedDate":"2021-09-14"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"        List\u003cDeadline\u003e deadlines \u003d taskList.getAllTasks().stream().filter(t -\u003e !t.getIsDone() \u0026\u0026 t instanceof Deadline)","lastModifiedDate":"2021-09-06"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"                .map(Deadline.class::cast).sorted((Comparator.comparing(Deadline::getDueDate))).collect(toList());","lastModifiedDate":"2021-09-06"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"        if (userInput !\u003d null) {","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"            if (userInput.contains(\"week\")) {","lastModifiedDate":"2021-09-06"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"                deadlines \u003d deadlines.stream().filter(deadline -\u003e deadline.getDueDate()","lastModifiedDate":"2021-09-06"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"                        .compareTo(LocalDate.now().plusWeeks(1)) \u003c 0).collect(toList());","lastModifiedDate":"2021-09-06"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"                timeScope \u003d \"Due within a week from today or earlier\";","lastModifiedDate":"2021-09-14"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"            } else if (userInput.contains(\"today\")) {","lastModifiedDate":"2021-09-06"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"                deadlines \u003d deadlines.stream().filter(deadline -\u003e deadline.getDueDate()","lastModifiedDate":"2021-09-06"},{"lineNumber":55,"author":{"gitId":"kevin9foong"},"content":"                        .compareTo(LocalDate.now().plusDays(1)) \u003c 0).collect(toList());","lastModifiedDate":"2021-09-06"},{"lineNumber":56,"author":{"gitId":"kevin9foong"},"content":"                timeScope \u003d \"Due today or earlier\";","lastModifiedDate":"2021-09-14"},{"lineNumber":57,"author":{"gitId":"kevin9foong"},"content":"            }","lastModifiedDate":"2021-09-06"},{"lineNumber":58,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":59,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":60,"author":{"gitId":"kevin9foong"},"content":"        return new DeadlineReminderMessage(deadlines, timeScope).toString();","lastModifiedDate":"2021-09-06"},{"lineNumber":61,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":62,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":63,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":64,"author":{"gitId":"kevin9foong"},"content":"     * Returns false to indicate program should not terminate after command is executed.","lastModifiedDate":"2021-09-06"},{"lineNumber":65,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":66,"author":{"gitId":"kevin9foong"},"content":"     * @return false to indicate program should not terminate after command is executed.","lastModifiedDate":"2021-09-06"},{"lineNumber":67,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":68,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-09-06"},{"lineNumber":69,"author":{"gitId":"kevin9foong"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-06"},{"lineNumber":70,"author":{"gitId":"kevin9foong"},"content":"        return false;","lastModifiedDate":"2021-09-06"},{"lineNumber":71,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":72,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"kevin9foong":72}},{"path":"src/main/java/agent/data/TaskFileStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package agent.data;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"import java.util.LinkedList;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"import java.util.List;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"import agent.exceptions.InvalidTaskDataException;","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"import agent.exceptions.TaskFileIoException;","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"import agent.io.FileInputOutputHandler;","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"import agent.tasks.Task;","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":" * This class encapsulates the data layer for storing Tasks in a file.","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":" * Provides saving and loading functionality from the file used to store \u003ccode\u003eTask\u003c/code\u003e","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":" * data.","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":" * @author kevin9foong","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"public class TaskFileStorage implements TaskStorage {","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"    private final FileInputOutputHandler taskFileInputOutputHandler;","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"     * Initializes a \u003ccode\u003eTaskFileOutputHandler\u003c/code\u003e which performs read and write","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"     * operations on file on specified file path.","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"     * @throws TaskFileIoException thrown when failure to read or write to Task save file occurs.","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"    public TaskFileStorage() throws TaskFileIoException {","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"        String taskFilePath \u003d \"data/tasks.txt\";","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"            taskFileInputOutputHandler \u003d new FileInputOutputHandler(taskFilePath);","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"            throw new TaskFileIoException();","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"    private static List\u003cTask\u003e convertRepresentationStringsToTaskList(List\u003cString\u003e taskRepresentations)","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"            throws InvalidTaskDataException {","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"        for (String taskRep : taskRepresentations) {","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"            Task task \u003d Task.getTaskFromRepresentation(taskRep);","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"            if (task !\u003d null) {","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"                taskList.add(task);","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"        return taskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"    private static List\u003cString\u003e convertTaskListToRepresentationStrings(List\u003cTask\u003e taskList) {","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"        List\u003cString\u003e taskRepresentations \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"            taskRepresentations.add(task.getTaskRepresentation());","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"kevin9foong"},"content":"        return taskRepresentations;","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"kevin9foong"},"content":"     * Writes the string representation of each task in given task list into a text file.","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"kevin9foong"},"content":"     * @param taskList list of tasks to be stored.","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"kevin9foong"},"content":"     * @throws TaskFileIoException thrown when failure to write to specified save file occurs.","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"kevin9foong"},"content":"    public void saveTasks(List\u003cTask\u003e taskList) throws TaskFileIoException {","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"kevin9foong"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"kevin9foong"},"content":"            taskFileInputOutputHandler.saveLinesToFile(convertTaskListToRepresentationStrings(taskList));","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"kevin9foong"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"kevin9foong"},"content":"            throw new TaskFileIoException();","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"kevin9foong"},"content":"     * Reads the file containing string representations of tasks and returns the task list stored.","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"kevin9foong"},"content":"     * @return list of tasks stored in text file.","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"kevin9foong"},"content":"     * @throws TaskFileIoException thrown when failure to read from specified save file occurs.","lastModifiedDate":"2021-08-29"},{"lineNumber":78,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"kevin9foong"},"content":"    public List\u003cTask\u003e loadTasks() throws TaskFileIoException, InvalidTaskDataException {","lastModifiedDate":"2021-08-29"},{"lineNumber":80,"author":{"gitId":"kevin9foong"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":81,"author":{"gitId":"kevin9foong"},"content":"            return convertRepresentationStringsToTaskList(taskFileInputOutputHandler.readLinesFromFile());","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"kevin9foong"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-08-29"},{"lineNumber":83,"author":{"gitId":"kevin9foong"},"content":"            throw new TaskFileIoException();","lastModifiedDate":"2021-08-29"},{"lineNumber":84,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":85,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":86,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"kevin9foong":86}},{"path":"src/main/java/agent/data/TaskStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package agent.data;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import java.util.List;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"import agent.exceptions.InvalidTaskDataException;","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"import agent.exceptions.TaskFileIoException;","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"import agent.tasks.Task;","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":" * Interface which defines behaviour of the storage used to store tasks.","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":" * @author kevin9foong","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"public interface TaskStorage {","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"    void saveTasks(List\u003cTask\u003e taskList) throws TaskFileIoException;","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"    List\u003cTask\u003e loadTasks() throws TaskFileIoException, InvalidTaskDataException;","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"kevin9foong":18}},{"path":"src/main/java/agent/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package agent.exceptions;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":" * Represents a generic \u003ccode\u003eException\u003c/code\u003e originating due to functionality failure by the","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":" * Duke helper chat bot.","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":" * @author kevin9foong","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"        super(message);","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"kevin9foong":13}},{"path":"src/main/java/agent/exceptions/EmptyDeadlineBodyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package agent.exceptions;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import agent.messages.MessageConstants;","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":" * Represents an \u003ccode\u003eException\u003c/code\u003e due to missing description or due date in the String","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":" * representation of \u003ccode\u003eDeadline\u003c/code\u003e data.","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":" * @author kevin9foong","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"public class EmptyDeadlineBodyException extends DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"    public EmptyDeadlineBodyException() {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"        super(MessageConstants.MESSAGE_EMPTY_DEADLINE_BODY);","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"kevin9foong":15}},{"path":"src/main/java/agent/exceptions/EmptyEventBodyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package agent.exceptions;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import agent.messages.MessageConstants;","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":" * Represents an \u003ccode\u003eException\u003c/code\u003e due to missing description or venue in the String","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":" * representation of \u003ccode\u003eEvent\u003c/code\u003e data.","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":" * @author kevin9foong","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"public class EmptyEventBodyException extends DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"    public EmptyEventBodyException() {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"        super(MessageConstants.MESSAGE_EMPTY_EVENT_BODY);","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"kevin9foong":15}},{"path":"src/main/java/agent/exceptions/EmptyFindBodyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package agent.exceptions;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import agent.messages.MessageConstants;","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":" * Represents an \u003ccode\u003eException\u003c/code\u003e due to missing text filter when issuing \u003ccode\u003eFindTaskCommand\u003c/code\u003e.","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":" * @author kevin9foong","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"public class EmptyFindBodyException extends DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"    public EmptyFindBodyException() {","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"        super(MessageConstants.MESSAGE_EMPTY_TEXT_FILTER);","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"kevin9foong":14}},{"path":"src/main/java/agent/exceptions/EmptyTodoBodyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package agent.exceptions;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import agent.messages.MessageConstants;","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":" * Represents an \u003ccode\u003eException\u003c/code\u003e due to missing description in the String","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":" * representation of \u003ccode\u003eToDo\u003c/code\u003e data.","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":" * @author kevin9foong","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"public class EmptyTodoBodyException extends DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"    public EmptyTodoBodyException() {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"        super(MessageConstants.MESSAGE_EMPTY_TODO_BODY);","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"kevin9foong":16}},{"path":"src/main/java/agent/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package agent.exceptions;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import agent.messages.MessageConstants;","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":" * Represents an \u003ccode\u003eException\u003c/code\u003e due to unsupported command provided.","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":" * @author kevin9foong","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"public class InvalidCommandException extends DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"    public InvalidCommandException() {","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"        super(MessageConstants.MESSAGE_INVALID_COMMAND);","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"kevin9foong":14}},{"path":"src/main/java/agent/exceptions/InvalidDateTimeFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package agent.exceptions;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import agent.messages.MessageConstants;","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":" * Represents an \u003ccode\u003eException\u003c/code\u003e due to unsupported format of \u003ccode\u003eDateTime\u003c/code\u003e String provided.","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":" * @author kevin9foong","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"public class InvalidDateTimeFormatException extends DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"    public InvalidDateTimeFormatException() {","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"        super(MessageConstants.MESSAGE_INVALID_DATETIME_FORMAT);","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"kevin9foong":14}},{"path":"src/main/java/agent/exceptions/InvalidDeadlineBodyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package agent.exceptions;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import agent.messages.MessageConstants;","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":" * Represents an \u003ccode\u003eException\u003c/code\u003e due to unsupported format of \u003ccode\u003eDeadline\u003c/code\u003e data String provided.","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":" * @author kevin9foong","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"public class InvalidDeadlineBodyException extends DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"    public InvalidDeadlineBodyException() {","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"        super(MessageConstants.MESSAGE_INVALID_DEADLINE_FORMAT);","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"kevin9foong":14}},{"path":"src/main/java/agent/exceptions/InvalidEventBodyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package agent.exceptions;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import agent.messages.MessageConstants;","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":" * Represents an \u003ccode\u003eException\u003c/code\u003e due to unsupported format of \u003ccode\u003eEvent\u003c/code\u003e data String provided.","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":" * @author kevin9foong","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"public class InvalidEventBodyException extends DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"    public InvalidEventBodyException() {","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"        super(MessageConstants.MESSAGE_INVALID_EVENT_FORMAT);","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"kevin9foong":14}},{"path":"src/main/java/agent/exceptions/InvalidTaskDataException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package agent.exceptions;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import agent.messages.MessageConstants;","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":" * Represents an \u003ccode\u003eException\u003c/code\u003e due to invalid data representation of \u003ccode\u003eTask\u003c/code\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":" * stored in save file.","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":" *","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":" * @author kevin9foong","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"public class InvalidTaskDataException extends DukeException {","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"    public InvalidTaskDataException() {","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"        super(MessageConstants.MESSAGE_INVALID_TASK_DATA);","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"kevin9foong":15}},{"path":"src/main/java/agent/exceptions/InvalidTaskNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package agent.exceptions;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import agent.messages.MessageConstants;","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":" * Represents an \u003ccode\u003eException\u003c/code\u003e due to no tasks being found associated with provided task number.","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":" * @author kevin9foong","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"public class InvalidTaskNumberException extends DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"    public InvalidTaskNumberException() {","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"        super(MessageConstants.MESSAGE_INVALID_TASK_NUMBER);","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"kevin9foong":14}},{"path":"src/main/java/agent/exceptions/TaskFileIoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package agent.exceptions;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import agent.messages.MessageConstants;","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":" * Represents an \u003ccode\u003eException\u003c/code\u003e due to failure to read/write from the task save file.","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":" *","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":" * @author kevin9foong","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"public class TaskFileIoException extends DukeException {","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"    public TaskFileIoException() {","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"        super(MessageConstants.MESSAGE_TASK_FILE_IO_FAILURE);","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"kevin9foong":14}},{"path":"src/main/java/agent/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package agent.gui;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"import javafx.scene.paint.ImagePattern;","lastModifiedDate":"2021-09-14"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":" * Represents a GUI chat dialog box for each message.","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":" *","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":" * @author kevin9foong","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"    private Label dialogLabel;","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"    private Circle avatarImageFrame;","lastModifiedDate":"2021-09-14"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"     * Constructs a \u003ccode\u003eDialogBox\u003c/code\u003e with the provided","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"     * message text and user avatar picture to be displayed.","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"    private DialogBox(String dialogText, Image avatarImage) {","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"        try {","lastModifiedDate":"2021-09-06"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"            String dialogBoxFxmlFilePath \u003d \"/view/DialogBox.fxml\";","lastModifiedDate":"2021-09-06"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(dialogBoxFxmlFilePath));","lastModifiedDate":"2021-09-06"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-06"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-09-06"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"            ioe.printStackTrace();","lastModifiedDate":"2021-09-06"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"        dialogLabel.setText(dialogText);","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"        avatarImageFrame.setFill(new ImagePattern(avatarImage));","lastModifiedDate":"2021-09-14"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"     * Returns an instance of \u003ccode\u003eDialogBox\u003c/code\u003e which represents user\u0027s side of conversation.","lastModifiedDate":"2021-09-05"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":55,"author":{"gitId":"kevin9foong"},"content":"     * @param dialogText text which represents user\u0027s input.","lastModifiedDate":"2021-09-05"},{"lineNumber":56,"author":{"gitId":"kevin9foong"},"content":"     * @param avatar     user\u0027s avatar image.","lastModifiedDate":"2021-09-05"},{"lineNumber":57,"author":{"gitId":"kevin9foong"},"content":"     * @return \u003ccode\u003eDialogBox\u003c/code\u003e which represents user\u0027s side of conversation.","lastModifiedDate":"2021-09-05"},{"lineNumber":58,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":59,"author":{"gitId":"kevin9foong"},"content":"    public static DialogBox generateUserDialogBox(String dialogText, Image avatar) {","lastModifiedDate":"2021-09-05"},{"lineNumber":60,"author":{"gitId":"kevin9foong"},"content":"        DialogBox userDialogBox \u003d new DialogBox(dialogText, avatar);","lastModifiedDate":"2021-09-05"},{"lineNumber":61,"author":{"gitId":"kevin9foong"},"content":"        userDialogBox.dialogLabel.setBackground(new Background(new BackgroundFill(Color.rgb(178, 255, 89),","lastModifiedDate":"2021-09-05"},{"lineNumber":62,"author":{"gitId":"kevin9foong"},"content":"                new CornerRadii(5.0), new Insets(-5.0))));","lastModifiedDate":"2021-09-05"},{"lineNumber":63,"author":{"gitId":"kevin9foong"},"content":"        userDialogBox.flip();","lastModifiedDate":"2021-09-05"},{"lineNumber":64,"author":{"gitId":"kevin9foong"},"content":"        return userDialogBox;","lastModifiedDate":"2021-09-05"},{"lineNumber":65,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":66,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":67,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":68,"author":{"gitId":"kevin9foong"},"content":"     * Returns an instance of \u003ccode\u003eDialogBox\u003c/code\u003e which represents agent\u0027s side of conversation.","lastModifiedDate":"2021-09-05"},{"lineNumber":69,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":70,"author":{"gitId":"kevin9foong"},"content":"     * @param dialogText text which represents agent\u0027s response.","lastModifiedDate":"2021-09-06"},{"lineNumber":71,"author":{"gitId":"kevin9foong"},"content":"     * @param avatar     agent\u0027s avatar image.","lastModifiedDate":"2021-09-05"},{"lineNumber":72,"author":{"gitId":"kevin9foong"},"content":"     * @return \u003ccode\u003eDialogBox\u003c/code\u003e which represents agent\u0027s side of conversation.","lastModifiedDate":"2021-09-05"},{"lineNumber":73,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":74,"author":{"gitId":"kevin9foong"},"content":"    public static DialogBox generateAgentDialogBox(String dialogText, Image avatar) {","lastModifiedDate":"2021-09-05"},{"lineNumber":75,"author":{"gitId":"kevin9foong"},"content":"        DialogBox agentDialogBox \u003d new DialogBox(dialogText, avatar);","lastModifiedDate":"2021-09-05"},{"lineNumber":76,"author":{"gitId":"kevin9foong"},"content":"        agentDialogBox.dialogLabel.setBackground(new Background(new BackgroundFill(Color.rgb(144, 202, 249),","lastModifiedDate":"2021-09-05"},{"lineNumber":77,"author":{"gitId":"kevin9foong"},"content":"                new CornerRadii(5.0), new Insets(-5.0))));","lastModifiedDate":"2021-09-05"},{"lineNumber":78,"author":{"gitId":"kevin9foong"},"content":"        return agentDialogBox;","lastModifiedDate":"2021-09-05"},{"lineNumber":79,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":80,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":81,"author":{"gitId":"kevin9foong"},"content":"    private void flip() {","lastModifiedDate":"2021-09-05"},{"lineNumber":82,"author":{"gitId":"kevin9foong"},"content":"        this.setAlignment(Pos.CENTER_RIGHT);","lastModifiedDate":"2021-09-14"},{"lineNumber":83,"author":{"gitId":"kevin9foong"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-05"},{"lineNumber":84,"author":{"gitId":"kevin9foong"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2021-09-05"},{"lineNumber":85,"author":{"gitId":"kevin9foong"},"content":"        assert this.getChildren().size() \u003d\u003d tmp.size() : \"Number of nodes should be the same after flipping\";","lastModifiedDate":"2021-09-06"},{"lineNumber":86,"author":{"gitId":"kevin9foong"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2021-09-05"},{"lineNumber":87,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":88,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"kevin9foong":88}},{"path":"src/main/java/agent/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package agent.gui;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import java.util.concurrent.Executors;","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import java.util.concurrent.TimeUnit;","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"import agent.Agent;","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"import agent.exceptions.DukeException;","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":" * Controller UI class which separates the UI handling concerns from Chat bot logic.","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":" *","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":" * @author kevin9foong","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"    private TextField userChatInputField;","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"    private Agent agent;","lastModifiedDate":"2021-09-14"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"    private Image userImage \u003d new Image(\"/images/user.jpg\");","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"    private Image agentImage \u003d new Image(\"/images/agent.jpg\");","lastModifiedDate":"2021-09-14"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"    private void initialize() {","lastModifiedDate":"2021-09-14"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-06"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"     * Connects the chat bot to the UI and triggers set up actions including","lastModifiedDate":"2021-09-14"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"     * greeting the user.","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"     * @param agent instance of \u003ccode\u003eDuke\u003c/code\u003e to handle chat bot logic.","lastModifiedDate":"2021-09-14"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"    public void linkChatBotAgent(Agent agent) {","lastModifiedDate":"2021-09-14"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"        if (agent \u003d\u003d null) {","lastModifiedDate":"2021-09-14"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"            return;","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"        assert agentImage !\u003d null : \"Agent image not found.\";","lastModifiedDate":"2021-09-14"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"        assert dialogContainer !\u003d null : \"No dialog container found.\";","lastModifiedDate":"2021-09-06"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"        this.agent \u003d agent;","lastModifiedDate":"2021-09-14"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2021-09-06"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"                DialogBox.generateAgentDialogBox(agent.greetUser(), agentImage)","lastModifiedDate":"2021-09-14"},{"lineNumber":55,"author":{"gitId":"kevin9foong"},"content":"        );","lastModifiedDate":"2021-09-06"},{"lineNumber":56,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":57,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":58,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":59,"author":{"gitId":"kevin9foong"},"content":"     * Displays provided text as Chat bot message.","lastModifiedDate":"2021-09-06"},{"lineNumber":60,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":61,"author":{"gitId":"kevin9foong"},"content":"     * @param agentMessage message to be displayed.","lastModifiedDate":"2021-09-06"},{"lineNumber":62,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":63,"author":{"gitId":"kevin9foong"},"content":"    public void displayAgentMessage(String agentMessage) {","lastModifiedDate":"2021-09-06"},{"lineNumber":64,"author":{"gitId":"kevin9foong"},"content":"        assert agentImage !\u003d null : \"Agent image not found.\";","lastModifiedDate":"2021-09-14"},{"lineNumber":65,"author":{"gitId":"kevin9foong"},"content":"        assert dialogContainer !\u003d null : \"No dialog container found.\";","lastModifiedDate":"2021-09-06"},{"lineNumber":66,"author":{"gitId":"kevin9foong"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2021-09-06"},{"lineNumber":67,"author":{"gitId":"kevin9foong"},"content":"                DialogBox.generateAgentDialogBox(agentMessage, agentImage)","lastModifiedDate":"2021-09-14"},{"lineNumber":68,"author":{"gitId":"kevin9foong"},"content":"        );","lastModifiedDate":"2021-09-06"},{"lineNumber":69,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":70,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":71,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":72,"author":{"gitId":"kevin9foong"},"content":"     * Disables user input text field and send button.","lastModifiedDate":"2021-09-14"},{"lineNumber":73,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":74,"author":{"gitId":"kevin9foong"},"content":"    private void disableUserInput() {","lastModifiedDate":"2021-09-14"},{"lineNumber":75,"author":{"gitId":"kevin9foong"},"content":"        sendButton.setDisable(true);","lastModifiedDate":"2021-09-06"},{"lineNumber":76,"author":{"gitId":"kevin9foong"},"content":"        userChatInputField.setDisable(true);","lastModifiedDate":"2021-09-06"},{"lineNumber":77,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":78,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":79,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":80,"author":{"gitId":"kevin9foong"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-06"},{"lineNumber":81,"author":{"gitId":"kevin9foong"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-06"},{"lineNumber":82,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":83,"author":{"gitId":"kevin9foong"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":84,"author":{"gitId":"kevin9foong"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-06"},{"lineNumber":85,"author":{"gitId":"kevin9foong"},"content":"        String userInput \u003d userChatInputField.getText();","lastModifiedDate":"2021-09-06"},{"lineNumber":86,"author":{"gitId":"kevin9foong"},"content":"        String agentResponse;","lastModifiedDate":"2021-09-06"},{"lineNumber":87,"author":{"gitId":"kevin9foong"},"content":"        try {","lastModifiedDate":"2021-09-06"},{"lineNumber":88,"author":{"gitId":"kevin9foong"},"content":"            agentResponse \u003d agent.respondToUserInput(userInput);","lastModifiedDate":"2021-09-14"},{"lineNumber":89,"author":{"gitId":"kevin9foong"},"content":"        } catch (DukeException de) {","lastModifiedDate":"2021-09-06"},{"lineNumber":90,"author":{"gitId":"kevin9foong"},"content":"            agentResponse \u003d de.getMessage();","lastModifiedDate":"2021-09-06"},{"lineNumber":91,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":92,"author":{"gitId":"kevin9foong"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-06"},{"lineNumber":93,"author":{"gitId":"kevin9foong"},"content":"                DialogBox.generateUserDialogBox(userInput, userImage),","lastModifiedDate":"2021-09-06"},{"lineNumber":94,"author":{"gitId":"kevin9foong"},"content":"                DialogBox.generateAgentDialogBox(agentResponse, agentImage)","lastModifiedDate":"2021-09-14"},{"lineNumber":95,"author":{"gitId":"kevin9foong"},"content":"        );","lastModifiedDate":"2021-09-06"},{"lineNumber":96,"author":{"gitId":"kevin9foong"},"content":"        userChatInputField.clear();","lastModifiedDate":"2021-09-06"},{"lineNumber":97,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":98,"author":{"gitId":"kevin9foong"},"content":"        if (agent.isExited()) {","lastModifiedDate":"2021-09-14"},{"lineNumber":99,"author":{"gitId":"kevin9foong"},"content":"            shutDown(500);","lastModifiedDate":"2021-09-14"},{"lineNumber":100,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":101,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":102,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":103,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":104,"author":{"gitId":"kevin9foong"},"content":"     * Disables user input and shuts down the agent.","lastModifiedDate":"2021-09-14"},{"lineNumber":105,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":106,"author":{"gitId":"kevin9foong"},"content":"     * @param delayMilliseconds delay before terminating the program in milliseconds.","lastModifiedDate":"2021-09-14"},{"lineNumber":107,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":108,"author":{"gitId":"kevin9foong"},"content":"    public void shutDown(int delayMilliseconds) {","lastModifiedDate":"2021-09-14"},{"lineNumber":109,"author":{"gitId":"kevin9foong"},"content":"        // Solution adapted from","lastModifiedDate":"2021-09-14"},{"lineNumber":110,"author":{"gitId":"kevin9foong"},"content":"        // https://stackoverflow.com/questions/15747277/how-to-make-java-program-exit-after-a-couple-of-seconds","lastModifiedDate":"2021-09-14"},{"lineNumber":111,"author":{"gitId":"kevin9foong"},"content":"        disableUserInput();","lastModifiedDate":"2021-09-14"},{"lineNumber":112,"author":{"gitId":"kevin9foong"},"content":"        Executors.newSingleThreadScheduledExecutor()","lastModifiedDate":"2021-09-14"},{"lineNumber":113,"author":{"gitId":"kevin9foong"},"content":"                .schedule(() -\u003e System.exit(0), delayMilliseconds, TimeUnit.MILLISECONDS);","lastModifiedDate":"2021-09-14"},{"lineNumber":114,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":115,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"kevin9foong":115}},{"path":"src/main/java/agent/io/FileInputOutputHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package agent.io;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import java.io.File;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"import java.util.LinkedList;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"import java.util.List;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":" * Encapsulates functionality for reading and writing strings to and from a specified target file.","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":" * @author kevin9foong","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"public class FileInputOutputHandler {","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"    private final BufferedReader br;","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"    private final String filePath;","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"     * Instantiates a \u003ccode\u003eFileIO\u003c/code\u003e object.","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"     * Creates directories and files at the filepath provided if it does not exist.","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"     * @param filePath filepath of file to read from and write to.","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"     * @throws IOException thrown when error reading or writing to target file occurs.","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"    public FileInputOutputHandler(String filePath) throws IOException {","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"        File tasksFile \u003d new java.io.File(filePath);","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"        // handle the case when the file does not initially exist","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"        if (!tasksFile.exists()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"            if (!tasksFile.getParentFile().exists()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"                tasksFile.getParentFile().mkdirs();","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"            tasksFile.createNewFile();","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"        this.br \u003d new BufferedReader(new FileReader(tasksFile));","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"     * Reads target file line by line.","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"     * @return List of strings containing each line of target file.","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"     * @throws IOException thrown when error reading from file occurs.","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"    public List\u003cString\u003e readLinesFromFile() throws IOException {","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"        List\u003cString\u003e fileLines \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"        String fileLine \u003d br.readLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"        while (fileLine !\u003d null \u0026\u0026 !fileLine.isBlank()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"            fileLines.add(fileLine);","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"            fileLine \u003d br.readLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"kevin9foong"},"content":"        return fileLines;","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"kevin9foong"},"content":"     * Writes each String of given list on a new line to the target file.","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"kevin9foong"},"content":"     * @param lines List of strings to write to target file.","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"kevin9foong"},"content":"     * @throws IOException thrown when error writing to file occurs.","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"kevin9foong"},"content":"    public void saveLinesToFile(List\u003cString\u003e lines) throws IOException {","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"kevin9foong"},"content":"        try (FileWriter fw \u003d new FileWriter(this.filePath)) {","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"kevin9foong"},"content":"            for (String line : lines) {","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"kevin9foong"},"content":"                fw.write(line);","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"kevin9foong"},"content":"                fw.write(\"\\n\");","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"kevin9foong"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"kevin9foong":73}},{"path":"src/main/java/agent/messages/ByeMessage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package agent.messages;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":" * Class is responsible for generating message to say bye to user.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":" * @author kevin9foong","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"public class ByeMessage extends Message {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"     * Constructs an instance of \u003ccode\u003eByeMessage\u003c/code\u003e which","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"     * consists of chat bot response to user\u0027s \u0027bye\u0027 command.","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"    public ByeMessage() {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"        super(MessageConstants.MESSAGE_BYE);","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"kevin9foong":17}},{"path":"src/main/java/agent/messages/DeadlineReminderMessage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package agent.messages;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import java.util.List;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"import agent.tasks.Task;","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":" * Class is responsible for generating the message for the reminder command.","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":" *","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":" * @author kevin9foong","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"public class DeadlineReminderMessage extends Message {","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"     * Constructs an instance of \u003ccode\u003eDeadlineReminderMessage\u003c/code\u003e which generates a message","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"     * which displays the list of deadlines in order of list provided.","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"     * @param tasks deadlines to include in output message.","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"    public DeadlineReminderMessage(List\u003c? extends Task\u003e tasks, String timeScope) {","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"        super.setMessageText(MessageConstants.MESSAGE_DEADLINE_REMINDER_HEADER + \" (\" + timeScope + \"): \"","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"                + generateDeadlineReminderText(tasks));","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"     * Generates message from given list.","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"     * @param tasks deadlines to be included in the message.","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"     * @return user-friendly message including textual representations of all tasks","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"     * provided in the given list.","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"    private String generateDeadlineReminderText(List\u003c? extends Task\u003e tasks) {","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"        StringBuilder listMessageBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"            listMessageBuilder","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"                    .append(\"\\n\")","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"                    .append(task.toString());","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"        return listMessageBuilder.toString();","lastModifiedDate":"2021-09-06"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"kevin9foong":40}},{"path":"src/main/java/agent/messages/GreetingMessage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package agent.messages;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":" * Class is responsible for generating message to greet user.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":" * @author kevin9foong","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"public class GreetingMessage extends Message {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"     * Constructs an instance of \u003ccode\u003eGreetingMessage\u003c/code\u003e which","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"     * greets the user.","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"    public GreetingMessage() {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"        super(MessageConstants.MESSAGE_GREETING);","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"kevin9foong":17}},{"path":"src/main/java/agent/messages/Message.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package agent.messages;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":" * Encapsulates textual data to be output to the user.","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":" * @author kevin9foong","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"public class Message {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"    private String messageText;","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"     * Constructs an instance of \u003ccode\u003eMessage\u003c/code\u003e.","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"    public Message() {","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"     * Constructs an instance of \u003ccode\u003eMessage\u003c/code\u003e with a given \u003ccode\u003eString\u003c/code\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"     * payload to generate response message with.","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"     * @param messageText main payload to generate response message with.","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"    public Message(String messageText) {","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"        this.messageText \u003d messageText;","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"    public void setMessageText(String messageText) {","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"        this.messageText \u003d messageText;","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"     * Returns the user response message with user-friendly separators wrapping around the main","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"     * message text.","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"     * @return user-friendly formatted response message.","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"        return this.messageText;","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"kevin9foong":42}},{"path":"src/main/java/agent/messages/MessageConstants.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package agent.messages;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":" * Utility class containing message constants.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":" * @author kevin9foong","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"public class MessageConstants {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"    public static final String MESSAGE_GREETING \u003d \"Hello! Meow is Butler. \\nHow may mew be of service?\";","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"    public static final String MESSAGE_BYE \u003d \"Goodbye! Meow is sleeping now! (Shutting down...)\";","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"    public static final String MESSAGE_TASK_ADD_HEADER \u003d \"Got it. Meow\u0027ve added this task:\\n\\t\";","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"    public static final String MESSAGE_TASK_DONE_HEADER \u003d \"Nice! Meow\u0027ve marked this task as done:\";","lastModifiedDate":"2021-09-14"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"    public static final String MESSAGE_TASK_LIST_HEADER \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"    public static final String MESSAGE_DEADLINE_REMINDER_HEADER \u003d \"Here\u0027s the list of \"","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"            + \"incomplete tasks sorted by deadline\";","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"    public static final String MESSAGE_FIND_TASK_LIST \u003d \"Here are the tasks with matching descriptions in your list:\";","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"    public static final String MESSAGE_TASK_DELETE_HEADER \u003d \"Noted. Meow\u0027ve removed this task:\\n\\t\";","lastModifiedDate":"2021-09-14"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"    public static final String MESSAGE_INVALID_COMMAND \u003d","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"            \"Nyaa! I\u0027m sorry, but meow don\u0027t know what that means :-(\";","lastModifiedDate":"2021-09-14"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"    public static final String MESSAGE_EMPTY_TODO_BODY \u003d","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"            \"Nyaa! The description of a todo cannot be empty. :-(\";","lastModifiedDate":"2021-09-14"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"    public static final String MESSAGE_EMPTY_EVENT_BODY \u003d","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"            \"Nyaa! The description \u0026 at fields of an event are not provided. Try eg. \"","lastModifiedDate":"2021-09-14"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"                    + \"\\\"event \u003cdescription\u003e /at \u003cvenue\u003e\\\" instead.\";","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"    public static final String MESSAGE_EMPTY_DEADLINE_BODY \u003d","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"            \"Nyaa! The description \u0026 by fields of a deadline are not provided. Try eg.\"","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"                    + \"\\\"deadline \u003cdescription\u003e /by \u003cyyyy-mm-dd\u003e\\\" instead.\";","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"    public static final String MESSAGE_EMPTY_TEXT_FILTER \u003d \"Oof!!! No text filter provided. \"","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"            + \"Try \\\"find \u003ctext filter\u003e\\\" instead.\";","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"    public static final String MESSAGE_INVALID_EVENT_FORMAT \u003d","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"            \"Nyaa! The format of event provided is invalid. \"","lastModifiedDate":"2021-09-14"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"                    + \"Try \\\"event \u003cdescription\u003e /at \u003cvenue\u003e\\\" instead.\";","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"    public static final String MESSAGE_INVALID_DEADLINE_FORMAT \u003d","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"            \"Nyaa! The format of deadline provided is invalid. \"","lastModifiedDate":"2021-09-14"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"                    + \"Try \\\"deadline \u003cdescription\u003e /by \u003cyyyy-mm-dd\u003e\\\" instead.\";","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"    public static final String MESSAGE_INVALID_DATETIME_FORMAT \u003d","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"            \"Nyaa! The format of the date and time provided is invalid. \"","lastModifiedDate":"2021-09-14"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"                    + \"Try \\\"yyyy-mm-dd\\\" instead.\";","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"    public static final String MESSAGE_INVALID_TASK_NUMBER \u003d","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"            \"Nyaa! Task number provided is invalid. Please try another number.\";","lastModifiedDate":"2021-09-14"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"    public static final String MESSAGE_INVALID_INTEGER \u003d \"Nyaa! Task number must be valid integer. eg. 1\";","lastModifiedDate":"2021-09-14"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"    public static final String MESSAGE_TASK_FILE_IO_FAILURE \u003d \"Nyaa! Unable to read/write from save file.\";","lastModifiedDate":"2021-09-14"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"    public static final String MESSAGE_INVALID_TASK_DATA \u003d \"Nyaa! Saved task data is corrupted/invalid.\"","lastModifiedDate":"2021-09-14"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"            + \"\\nButler has failed to start. Please verify/delete the saved data file! (Shutting down...)\";","lastModifiedDate":"2021-09-14"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"    // hide constructor for utility class","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"    private MessageConstants() {","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"kevin9foong":49}},{"path":"src/main/java/agent/messages/TaskAddMessage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package agent.messages;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":" * Class is responsible for generating message to indicate the given task has been added.","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":" * @author kevin9foong","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"public class TaskAddMessage extends Message {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"     * Constructs an instance of \u003ccode\u003eTaskAddMessage\u003c/code\u003e which contains a message","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"     * to inform user that a \u003ccode\u003eTask\u003c/code\u003e has been added successfully.","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"     * @param taskText   \u003ccode\u003eString\u003c/code\u003e representation of added task.","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"     * @param numOfTasks current total number of tasks.","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"    public TaskAddMessage(String taskText, int numOfTasks) {","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"        super(MessageConstants.MESSAGE_TASK_ADD_HEADER","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"                + taskText","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"                + \"\\nNow you have \"","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"                + numOfTasks","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"                + (numOfTasks \u003d\u003d 1 ? \" task \" : \" tasks \")","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"                + \"in the list.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"kevin9foong":25}},{"path":"src/main/java/agent/messages/TaskDeleteMessage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package agent.messages;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":" * Class is responsible for generating a message when the given task has been deleted.","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":" * @author kevin9foong","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"public class TaskDeleteMessage extends Message {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"     * Constructs an instance of \u003ccode\u003eTaskDeleteMessage\u003c/code\u003e which contains a message","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"     * to inform user of which task has just been deleted.","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"     * @param taskDescription \u003ccode\u003eString\u003c/code\u003e representation of deleted task.","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"     * @param numOfTasks      remaining total number of tasks.","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"    public TaskDeleteMessage(String taskDescription, int numOfTasks) {","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"        super(MessageConstants.MESSAGE_TASK_DELETE_HEADER","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"                + taskDescription","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"                + \"\\nNow you have \" + numOfTasks","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"                + (numOfTasks \u003d\u003d 1 ? \" task \" : \" tasks \")","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"                + \"in the list.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"kevin9foong":23}},{"path":"src/main/java/agent/messages/TaskDoneMessage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package agent.messages;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import agent.tasks.Task;","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":" * Class is responsible for generating message indicating given task is marked as done.","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":" * @author kevin9foong","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"public class TaskDoneMessage extends Message {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"     * Constructs an instance of \u003ccode\u003eTaskDoneMessage\u003c/code\u003e which contains a message","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"     * to inform user of which task has just been marked as done.","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"     * @param task task which has been marked as done.","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"    public TaskDoneMessage(Task task) {","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"        super(MessageConstants.MESSAGE_TASK_DONE_HEADER + \"\\n\\t\" + task.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"kevin9foong":20}},{"path":"src/main/java/agent/messages/TaskFindListMessage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package agent.messages;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import java.util.List;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"import agent.tasks.Task;","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":" * Class is responsible for forming message which displays tasks which descriptions contains","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":" * the search query \u003ccode\u003eString\u003c/code\u003e.","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":" *","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":" * @author kevin9foong","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"public class TaskFindListMessage extends Message {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"     * Constructs an instance of \u003ccode\u003eTaskFindListMessage\u003c/code\u003e which generates a message","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"     * as response of a find command and detailing all tasks provided as argument.","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"     * @param tasks tasks to include in output message.","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"    public TaskFindListMessage(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"        super.setMessageText(MessageConstants.MESSAGE_FIND_TASK_LIST","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"                + generateListMessageText(tasks));","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"    private String generateListMessageText(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"        StringBuilder listMessageBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"        for (int index \u003d 0; index \u003c tasks.size(); index++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"            listMessageBuilder","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"                    .append(\"\\n\")","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"                    .append(index + 1)","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"                    .append(\". \")","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"                    .append(tasks.get(index).toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"        return listMessageBuilder.toString();","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"kevin9foong":37}},{"path":"src/main/java/agent/messages/TaskListMessage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package agent.messages;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import java.util.List;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"import agent.tasks.Task;","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":" * Class is responsible for generating message to list all tasks","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":" * based on given task list.","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":" * @author kevin9foong","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"public class TaskListMessage extends Message {","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"     * Constructs an instance of \u003ccode\u003eTaskListMessage\u003c/code\u003e which generates a message as","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"     * response to a list command and lists all tasks provided as argument.","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"     * @param tasks tasks to include in output message.","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"    public TaskListMessage(List\u003c? extends Task\u003e tasks) {","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"        super.setMessageText(MessageConstants.MESSAGE_TASK_LIST_HEADER","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"                + generateListMessageText(tasks));","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"     * Generates message from given list.","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"     * @param tasks tasks to be included in the message.","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"     * @return user-friendly message including textual representations of all tasks","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"     * provided in the given list.","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"    private String generateListMessageText(List\u003c? extends Task\u003e tasks) {","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"        StringBuilder listMessageBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"        for (int index \u003d 0; index \u003c tasks.size(); index++) {","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"            listMessageBuilder","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"                    .append(\"\\n\")","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"                    .append(index + 1)","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"                    .append(\". \")","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"                    .append(tasks.get(index).toString());","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"        return listMessageBuilder.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"kevin9foong":44}},{"path":"src/main/java/agent/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package agent.parser;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import agent.command.AddDeadlineCommand;","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import agent.command.AddEventCommand;","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"import agent.command.AddTodoCommand;","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"import agent.command.ByeCommand;","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"import agent.command.Command;","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"import agent.command.CommandType;","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"import agent.command.DeleteTaskCommand;","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"import agent.command.FindTasksCommand;","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"import agent.command.ListTasksCommand;","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"import agent.command.MarkTaskDoneCommand;","lastModifiedDate":"2021-09-14"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"import agent.command.ReminderCommand;","lastModifiedDate":"2021-09-14"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"import agent.exceptions.DukeException;","lastModifiedDate":"2021-09-14"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"import agent.exceptions.InvalidCommandException;","lastModifiedDate":"2021-09-14"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":" * Utility class which provides methods for parsing and understanding user input.","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":" * @author kevin9foong","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"public class Parser {","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"    private Parser() {","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"     * Parses user input and returns the appropriate \u003ccode\u003eCommand\u003c/code\u003e which","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"     * corresponds to user input.","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"     * @param userInput String which represents user\u0027s command for chat bot.","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"     * @return corresponding command as understood from user\u0027s input.","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"     * @throws DukeException thrown when user\u0027s input is invalid.","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"    public static Command parse(String userInput) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"        String[] splitUserInput \u003d userInput.trim().split(\" \", 2);","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"        CommandType userCommandType \u003d CommandType.getCommand(splitUserInput[0].trim());","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"        String userInputBody \u003d null;","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"        if (splitUserInput.length \u003d\u003d 2) {","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"            userInputBody \u003d splitUserInput[1];","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"        if (userCommandType !\u003d null) {","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"            switch (userCommandType) {","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"            case LIST:","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"                return new ListTasksCommand(userInputBody);","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"            case REMINDER:","lastModifiedDate":"2021-09-06"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"                return new ReminderCommand(userInputBody);","lastModifiedDate":"2021-09-06"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"            case TODO:","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"                return new AddTodoCommand(userInputBody);","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"            case DEADLINE:","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"                return new AddDeadlineCommand(userInputBody);","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"            case EVENT:","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"                return new AddEventCommand(userInputBody);","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"            case DONE:","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"kevin9foong"},"content":"                return new MarkTaskDoneCommand(userInputBody);","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"kevin9foong"},"content":"            case DELETE:","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"kevin9foong"},"content":"                return new DeleteTaskCommand(userInputBody);","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"kevin9foong"},"content":"            case FIND:","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"kevin9foong"},"content":"                return new FindTasksCommand(userInputBody);","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"kevin9foong"},"content":"            case BYE:","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"kevin9foong"},"content":"                return new ByeCommand(userInputBody);","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"kevin9foong"},"content":"            // default case in case unexpected no matches occurs.","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"kevin9foong"},"content":"            default:","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"kevin9foong"},"content":"                throw new InvalidCommandException();","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"kevin9foong"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"kevin9foong"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"kevin9foong"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"kevin9foong":70}},{"path":"src/main/java/agent/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package agent.tasks;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"import agent.exceptions.EmptyDeadlineBodyException;","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"import agent.exceptions.InvalidDateTimeFormatException;","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"import agent.exceptions.InvalidDeadlineBodyException;","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":" * Represents a completable \u003ccode\u003eTask\u003c/code\u003e with a description and a date to be completed by.","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":" * @author kevin9foong","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"    private final LocalDate dueDate;","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"     * Instantiates a \u003ccode\u003eDeadline\u003c/code\u003e from its data String representation.","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"     * @param deadlineDataText String containing data in the form \u0027description /by yyyy-mm-dd\u0027.","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"     * @throws EmptyDeadlineBodyException     thrown when deadline description or by date are not provided.","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"     * @throws InvalidDeadlineBodyException   thrown when the data String representation is invalid.","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"     * @throws InvalidDateTimeFormatException thrown when the \u003ccode\u003eDateTime\u003c/code\u003e format for the by date provided","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"     *                                        is invalid.","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"    public Deadline(String deadlineDataText) throws EmptyDeadlineBodyException, InvalidDeadlineBodyException,","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"            InvalidDateTimeFormatException {","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"        if (deadlineDataText \u003d\u003d null || deadlineDataText.isEmpty()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"            throw new EmptyDeadlineBodyException();","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"        String[] deadlineData \u003d deadlineDataText.split(\"/by \", 2);","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"        boolean isDeadlineBodyInvalid \u003d deadlineData.length !\u003d 2","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"                || deadlineData[0].isEmpty() || deadlineData[1].isEmpty();","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"        if (isDeadlineBodyInvalid) {","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"            throw new InvalidDeadlineBodyException();","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"        super.setDescription(deadlineData[0].trim());","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"            this.dueDate \u003d LocalDate.parse(deadlineData[1].trim());","lastModifiedDate":"2021-09-06"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"        } catch (DateTimeParseException dte) {","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"            throw new InvalidDateTimeFormatException();","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"     * Constructs an instance of \u003ccode\u003eDeadline\u003c/code\u003e with the provided description,","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"     * completion status and deadline.","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"     * @param description description of what the \u003ccode\u003eDeadline\u003c/code\u003e entails.","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"     * @param isDone      completion status of \u003ccode\u003eDeadline\u003c/code\u003e.","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"     * @param dueDate     deadline which \u003ccode\u003eDeadline\u003c/code\u003e must be completed.","lastModifiedDate":"2021-09-06"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"    public Deadline(String description, boolean isDone, LocalDate dueDate) {","lastModifiedDate":"2021-09-06"},{"lineNumber":55,"author":{"gitId":"kevin9foong"},"content":"        super.setDescription(description);","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"kevin9foong"},"content":"        super.setIsDone(isDone);","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"kevin9foong"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2021-09-06"},{"lineNumber":58,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":59,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":60,"author":{"gitId":"kevin9foong"},"content":"    public LocalDate getDueDate() {","lastModifiedDate":"2021-09-06"},{"lineNumber":61,"author":{"gitId":"kevin9foong"},"content":"        return this.dueDate;","lastModifiedDate":"2021-09-06"},{"lineNumber":62,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"kevin9foong"},"content":"    public String getTaskRepresentation() {","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"kevin9foong"},"content":"        return TaskType.DEADLINE + \" |;; \" + super.getTaskRepresentation() + this.dueDate + \" |;; \";","lastModifiedDate":"2021-09-06"},{"lineNumber":67,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"kevin9foong"},"content":"     * Returns the \u003ccode\u003eString\u003c/code\u003e representation representing the task type,","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"kevin9foong"},"content":"     * completion status, description and deadline of this \u003ccode\u003eDeadline\u003c/code\u003e.","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"kevin9foong"},"content":"     * @return \u003ccode\u003eString\u003c/code\u003e representation of this \u003ccode\u003eDeadline\u003c/code\u003e.","lastModifiedDate":"2021-08-29"},{"lineNumber":74,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":75,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":76,"author":{"gitId":"kevin9foong"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":77,"author":{"gitId":"kevin9foong"},"content":"        return \"[D]\" + super.toString()","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"kevin9foong"},"content":"                + \" (by: \" + dueDate.getMonth() + \" \" + dueDate.getDayOfMonth() + \" \" + dueDate.getYear() + \")\";","lastModifiedDate":"2021-09-06"},{"lineNumber":79,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":80,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"kevin9foong":80}},{"path":"src/main/java/agent/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package agent.tasks;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import agent.exceptions.EmptyEventBodyException;","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import agent.exceptions.InvalidEventBodyException;","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":" * Represents a completable \u003ccode\u003eTask\u003c/code\u003e with a description and a venue.","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":" * @author kevin9foong","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"    private final String at;","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"     * Instantiates an \u003ccode\u003eEvent\u003c/code\u003e from its data String representation.","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"     * @param eventDataText String containing data in the form \u0027description /at venue\u0027.","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"     * @throws InvalidEventBodyException thrown when the data String representation is invalid.","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"     * @throws EmptyEventBodyException   thrown when the description or venue is missing from the","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"     *                                   data String representation.","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"    public Event(String eventDataText) throws InvalidEventBodyException, EmptyEventBodyException {","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"        if (eventDataText \u003d\u003d null || eventDataText.isEmpty()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"            throw new EmptyEventBodyException();","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"        String[] eventData \u003d eventDataText.split(\"/at \", 2);","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"        boolean isEventBodyInvalid \u003d eventData.length !\u003d 2 || eventData[0].isEmpty() || eventData[1].isEmpty();","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"        if (isEventBodyInvalid) {","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"            throw new InvalidEventBodyException();","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"        super.setDescription(eventData[0].trim());","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"        this.at \u003d eventData[1].trim();","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"     * Constructs an instance of \u003ccode\u003eEvent\u003c/code\u003e with the provided description,","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"     * completion status and venue.","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"     * @param description description of what the \u003ccode\u003eEvent\u003c/code\u003e entails.","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"     * @param isDone      completion status of \u003ccode\u003eEvent\u003c/code\u003e.","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"     * @param at          venue which \u003ccode\u003eEvent\u003c/code\u003e is held at.","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"    public Event(String description, boolean isDone, String at) {","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"        super.setDescription(description);","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"        super.setIsDone(isDone);","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"    public String getTaskRepresentation() {","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"        return TaskType.EVENT + \" |;; \" + super.getTaskRepresentation() + this.at + \" |;; \";","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"kevin9foong"},"content":"     * Returns the \u003ccode\u003eString\u003c/code\u003e representation representing the task type,","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"kevin9foong"},"content":"     * completion status, description and venue of this \u003ccode\u003eEvent\u003c/code\u003e.","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"kevin9foong"},"content":"     * @return \u003ccode\u003eString\u003c/code\u003e representation of this \u003ccode\u003eEvent\u003c/code\u003e.","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"kevin9foong"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"kevin9foong"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"kevin9foong":65}},{"path":"src/main/java/agent/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package agent.tasks;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"import agent.exceptions.InvalidTaskDataException;","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":" * This class encapsulates a user-added task.","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":" * @author kevin9foong","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"    private String description;","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"    private boolean isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"     * Extracts data from given taskRepresentation and returns the specific subclass of","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"     * Task associated with the given String task representation.","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"     * @param taskRepresentation comma separated String representation of a task.","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"     * @return Task with data extracted from the given String representation of the Task.","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"     * @throws InvalidTaskDataException thrown when the String representation of Task is invalid.","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"    public static Task getTaskFromRepresentation(String taskRepresentation) throws InvalidTaskDataException {","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"        String[] taskData \u003d taskRepresentation.split(\" \\\\|;; \");","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"            boolean isDone \u003d taskData[1].equals(\"X\");","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"            switch (TaskType.valueOf(taskData[0])) {","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"            case DEADLINE:","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"                return new Deadline(taskData[2], isDone, LocalDate.parse(taskData[3]));","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"            case EVENT:","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"                return new Event(taskData[2], isDone, taskData[3]);","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"            case TODO:","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"                return new ToDo(taskData[2], isDone);","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"            default:","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"                return null;","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"        } catch (ArrayIndexOutOfBoundsException | DateTimeParseException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"            throw new InvalidTaskDataException();","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"        return this.description;","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"     * Sets description of this task.","lastModifiedDate":"2021-09-05"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"     * @param description description to be set as.","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"    protected void setDescription(String description) {","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"kevin9foong"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"kevin9foong"},"content":"    protected void setIsDone(boolean isDone) {","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"kevin9foong"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"kevin9foong"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"kevin9foong"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"kevin9foong"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2021-09-06"},{"lineNumber":67,"author":{"gitId":"kevin9foong"},"content":"        return this.isDone;","lastModifiedDate":"2021-09-06"},{"lineNumber":68,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":69,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":70,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"kevin9foong"},"content":"     * Converts this task\u0027s data to representation to be saved in file.","lastModifiedDate":"2021-09-05"},{"lineNumber":72,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"kevin9foong"},"content":"     * @return representation of this task\u0027s data","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"kevin9foong"},"content":"    public String getTaskRepresentation() {","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"kevin9foong"},"content":"        return (isDone ? \"X |;; \" : \" |;; \") + description + \" |;; \";","lastModifiedDate":"2021-08-29"},{"lineNumber":77,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"kevin9foong"},"content":"     * Returns textual representation of this \u003ccode\u003eTask\u003c/code\u003e and its data.","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"kevin9foong"},"content":"     * @return String representing this \u003ccode\u003eTask\u003c/code\u003e and its data.","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":85,"author":{"gitId":"kevin9foong"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":86,"author":{"gitId":"kevin9foong"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-08-18"},{"lineNumber":87,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":88,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"kevin9foong":88}},{"path":"src/main/java/agent/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package agent.tasks;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import java.util.List;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"import agent.data.TaskFileStorage;","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"import agent.data.TaskStorage;","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"import agent.exceptions.InvalidTaskDataException;","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"import agent.exceptions.InvalidTaskNumberException;","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"import agent.exceptions.TaskFileIoException;","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":" * Represents a list of tasks and provides functionality to manipulate tasks contained within the list.","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":" * @author kevin9foong","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"public class TaskList {","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"    private TaskStorage taskStorage;","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"     * Constructs an instance of \u003ccode\u003eTaskList\u003c/code\u003e which persists data using the","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"     * provided \u003ccode\u003eTaskStorage\u003c/code\u003e.","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"     * @param taskStorage provides functionality to persist task data.","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"     * @throws TaskFileIoException thrown when failure to load tasks occur.","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"    public TaskList(TaskStorage taskStorage) throws TaskFileIoException, InvalidTaskDataException {","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"        this.taskStorage \u003d taskStorage;","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"        tasks \u003d taskStorage.loadTasks();","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"     * Writes current taskList to the Task storage to be persisted.","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"     * @param tasksToSave List of tasks to be saved to Task storage.","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"     * @throws TaskFileIoException thrown when failure to write to Task save file occurs.","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"    private void saveTasksToStorage(List\u003cTask\u003e tasksToSave) throws TaskFileIoException {","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"        if (taskStorage \u003d\u003d null) {","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"            taskStorage \u003d new TaskFileStorage();","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"        taskStorage.saveTasks(tasksToSave);","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"     * Retrieves task associated with index number in taskList.","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"     * @param index index of task to get.","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"     * @return task associated with index number in taskList.","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"     * @throws InvalidTaskNumberException thrown when index provided exceeds valid index range.","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"    public Task getTask(int index) throws InvalidTaskNumberException {","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"kevin9foong"},"content":"            throw new InvalidTaskNumberException();","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"kevin9foong"},"content":"        return tasks.get(index);","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"kevin9foong"},"content":"     * Adds a new task to the TaskList.","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"kevin9foong"},"content":"     * @param task task to be added.","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"kevin9foong"},"content":"     * @return task that has been added to TaskList.","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"kevin9foong"},"content":"     * @throws TaskFileIoException thrown when errors writing to Task save file occur.","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"kevin9foong"},"content":"    public Task addTask(Task task) throws TaskFileIoException {","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"kevin9foong"},"content":"        tasks.add(task);","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"kevin9foong"},"content":"        saveTasksToStorage(tasks);","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"kevin9foong"},"content":"        return task;","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"kevin9foong"},"content":"     * Marks task as done and updates the \u003ccode\u003eTaskStorage\u003c/code\u003e file.","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"kevin9foong"},"content":"     * @param index index of task to mark as done.","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"kevin9foong"},"content":"     * @return task that has been marked as done.","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"kevin9foong"},"content":"     * @throws TaskFileIoException thrown when errors writing to Task save file occur.","lastModifiedDate":"2021-08-29"},{"lineNumber":79,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"kevin9foong"},"content":"    public Task setDone(int index) throws TaskFileIoException, InvalidTaskNumberException {","lastModifiedDate":"2021-08-29"},{"lineNumber":81,"author":{"gitId":"kevin9foong"},"content":"        Task doneTask \u003d getTask(index);","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"kevin9foong"},"content":"        doneTask.setIsDone(true);","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"kevin9foong"},"content":"        saveTasksToStorage(tasks);","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"kevin9foong"},"content":"        return doneTask;","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":86,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":87,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":88,"author":{"gitId":"kevin9foong"},"content":"     * Deletes task associated with given index number.","lastModifiedDate":"2021-08-29"},{"lineNumber":89,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"kevin9foong"},"content":"     * @param index index of task to delete.","lastModifiedDate":"2021-08-29"},{"lineNumber":91,"author":{"gitId":"kevin9foong"},"content":"     * @return deleted task.","lastModifiedDate":"2021-08-29"},{"lineNumber":92,"author":{"gitId":"kevin9foong"},"content":"     * @throws InvalidTaskNumberException thrown when index provided exceeds valid index range.","lastModifiedDate":"2021-08-29"},{"lineNumber":93,"author":{"gitId":"kevin9foong"},"content":"     * @throws TaskFileIoException        thrown when errors writing to task save file occur.","lastModifiedDate":"2021-08-29"},{"lineNumber":94,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":95,"author":{"gitId":"kevin9foong"},"content":"    public Task deleteTask(int index) throws TaskFileIoException, InvalidTaskNumberException {","lastModifiedDate":"2021-08-29"},{"lineNumber":96,"author":{"gitId":"kevin9foong"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"kevin9foong"},"content":"            throw new InvalidTaskNumberException();","lastModifiedDate":"2021-08-22"},{"lineNumber":98,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":99,"author":{"gitId":"kevin9foong"},"content":"        Task removedTask \u003d tasks.remove(index);","lastModifiedDate":"2021-08-22"},{"lineNumber":100,"author":{"gitId":"kevin9foong"},"content":"        saveTasksToStorage(tasks);","lastModifiedDate":"2021-08-22"},{"lineNumber":101,"author":{"gitId":"kevin9foong"},"content":"        return removedTask;","lastModifiedDate":"2021-08-22"},{"lineNumber":102,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":103,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":104,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":105,"author":{"gitId":"kevin9foong"},"content":"     * Retrieves a new list containing all tasks in the taskList.","lastModifiedDate":"2021-08-22"},{"lineNumber":106,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":107,"author":{"gitId":"kevin9foong"},"content":"     * @return new list containing copy of all tasks from the taskList.","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":109,"author":{"gitId":"kevin9foong"},"content":"    public List\u003cTask\u003e getAllTasks() {","lastModifiedDate":"2021-08-22"},{"lineNumber":110,"author":{"gitId":"kevin9foong"},"content":"        return new ArrayList\u003c\u003e(tasks);","lastModifiedDate":"2021-08-22"},{"lineNumber":111,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":112,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":113,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":114,"author":{"gitId":"kevin9foong"},"content":"     * Gets the number of tasks in the taskList.","lastModifiedDate":"2021-08-22"},{"lineNumber":115,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":116,"author":{"gitId":"kevin9foong"},"content":"     * @return int representing number of tasks in the taskList.","lastModifiedDate":"2021-08-23"},{"lineNumber":117,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":118,"author":{"gitId":"kevin9foong"},"content":"    public int getNumOfTasks() {","lastModifiedDate":"2021-08-22"},{"lineNumber":119,"author":{"gitId":"kevin9foong"},"content":"        return tasks.size();","lastModifiedDate":"2021-08-22"},{"lineNumber":120,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":121,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":122,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"kevin9foong":122}},{"path":"src/main/java/agent/tasks/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package agent.tasks;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":" * Contains the specific types of Tasks supported.","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":" * @author kevin9foong","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"public enum TaskType {","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"    DEADLINE, EVENT, TODO","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"kevin9foong":10}},{"path":"src/main/java/agent/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package agent.tasks;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import agent.exceptions.EmptyTodoBodyException;","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":" * Represents a completable \u003ccode\u003eTask\u003c/code\u003e that only has a description.","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":" * @author kevin9foong","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"     * Constructs an instance of \u003ccode\u003eToDo\u003c/code\u003e which contains the given description.","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"     * @param description used to define what the \u003ccode\u003eToDo\u003c/code\u003e is regarding.","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"     * @throws EmptyTodoBodyException thrown when no description is provided.","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"    public ToDo(String description) throws EmptyTodoBodyException {","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"        if (description \u003d\u003d null || description.isEmpty()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"            throw new EmptyTodoBodyException();","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"            super.setDescription(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"     * Constructs an instance of \u003ccode\u003eToDo\u003c/code\u003e with the provided description","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"     * and completion status.","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"     * @param description description of what the \u003ccode\u003eToDo\u003c/code\u003e entails.","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"     * @param isDone      completion status of \u003ccode\u003eToDo\u003c/code\u003e.","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"        super.setDescription(description);","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"        super.setIsDone(isDone);","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"    public String getTaskRepresentation() {","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"        return TaskType.TODO + \" |;; \" + super.getTaskRepresentation();","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"     * Returns the \u003ccode\u003eString\u003c/code\u003e representation representing the task type,","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"     * completion status, and description of this \u003ccode\u003eToDo\u003c/code\u003e.","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"     * @return \u003ccode\u003eString\u003c/code\u003e representation of this \u003ccode\u003eToDo\u003c/code\u003e.","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"kevin9foong":52}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"\u003cfx:root alignment\u003d\"CENTER_LEFT\" maxHeight\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" spacing\u003d\"20.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"      \u003cCircle fx:id\u003d\"avatarImageFrame\" fill\u003d\"#feffff\" radius\u003d\"54.0\" stroke\u003d\"#e5e5ea\" strokeLineCap\u003d\"ROUND\" strokeLineJoin\u003d\"ROUND\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"3.0\" /\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"        \u003cLabel fx:id\u003d\"dialogLabel\" graphicTextGap\u003d\"6.0\" maxHeight\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" style\u003d\"-fx-border-color: #e5e5ea; -fx-border-width: 2; -fx-border-radius: 5;\" text\u003d\"Label\" textOverrun\u003d\"WORD_ELLIPSIS\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"         \u003cfont\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"            \u003cFont name\u003d\"Arial Bold\" size\u003d\"14.0\" /\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"         \u003c/font\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"            \u003cInsets /\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"         \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"    \u003copaqueInsets\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"        \u003cInsets /\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"    \u003c/opaqueInsets\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"kevin9foong":29}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"agent.gui.MainWindow\"\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"        \u003cTextField fx:id\u003d\"userChatInputField\" layoutX\u003d\"2.0\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"506.0\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"         \u003cfont\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"            \u003cFont name\u003d\"Arial\" size\u003d\"14.0\" /\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"         \u003c/font\u003e\u003c/TextField\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"508.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"92.0\" style\u003d\"-fx-background-color: #30d158;\" text\u003d\"Send\" textFill\u003d\"WHITE\"\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"         \u003cfont\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"            \u003cFont name\u003d\"Arial Bold\" size\u003d\"18.0\" /\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"         \u003c/font\u003e\u003c/Button\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"554.0\" prefWidth\u003d\"600.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"554.0\" prefWidth\u003d\"600.0\" spacing\u003d\"20.0\" style\u003d\"-fx-background-color: #ddcf95;\" /\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"kevin9foong":26}},{"path":"src/test/java/agent/command/AddDeadlineCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package agent.command;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"import agent.data.TaskStorageStub;","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"import agent.exceptions.DukeException;","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"import agent.tasks.Deadline;","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"import agent.tasks.TaskList;","lastModifiedDate":"2021-09-14"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"class AddDeadlineCommandTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"    void executingCommandWorks_userInput_addsDeadlineToTaskList() throws DukeException {","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"        AddDeadlineCommand addDeadlineCommand \u003d new AddDeadlineCommand(\"x /by 2021-12-12\");","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"        Deadline expectedDeadline \u003d new Deadline(\"x\", false, LocalDate.parse(\"2021-12-12\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"        TaskList taskList \u003d new TaskList(new TaskStorageStub());","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"        String agentResponse \u003d addDeadlineCommand.execute(taskList);","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(\"Got it. Meow\u0027ve added this task:\\n\"","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"                        + \"\\t[D][ ] x (by: DECEMBER 12 2021)\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"                        + \"Now you have 1 task in the list.\",","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"                agentResponse);","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(1, taskList.getNumOfTasks());","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(expectedDeadline.getTaskRepresentation(), taskList.getTask(0).getTaskRepresentation());","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"kevin9foong":32}},{"path":"src/test/java/agent/command/ReminderCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package agent.command;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"import agent.data.TaskStorageStub;","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"import agent.exceptions.InvalidTaskDataException;","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"import agent.exceptions.TaskFileIoException;","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"import agent.tasks.Deadline;","lastModifiedDate":"2021-09-14"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"import agent.tasks.TaskList;","lastModifiedDate":"2021-09-14"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"public class ReminderCommandTest {","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"    void deadlineWeekFilterAndSortingWorks_userInputReminderForWeekCommand_messageIncludesWeekDeadlines()","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"            throws TaskFileIoException, InvalidTaskDataException {","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"        Deadline expectedDeadlineA \u003d new Deadline(\"a\", false, LocalDate.now().plusDays(6));","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"        Deadline expectedDeadlineB \u003d new Deadline(\"b\", false, LocalDate.now().plusDays(3));","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"        Deadline expectedDeadlineC \u003d new Deadline(\"c\", false, LocalDate.now().plusDays(0));","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"        Deadline excludedDeadlineD \u003d new Deadline(\"d\", true, LocalDate.now().plusDays(0));","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"        Deadline excludedDeadlineE \u003d new Deadline(\"e\", false, LocalDate.now().plusDays(20));","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"        TaskList taskList \u003d new TaskList(new TaskStorageStub());","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"        taskList.addTask(expectedDeadlineA);","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"        taskList.addTask(expectedDeadlineB);","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"        taskList.addTask(expectedDeadlineC);","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"        taskList.addTask(excludedDeadlineD);","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"        taskList.addTask(excludedDeadlineE);","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"        String agentResponse \u003d new ReminderCommand(\"week\").execute(taskList);","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(\"Here\u0027s the list of incomplete tasks sorted by deadline (Due within a week from today \"","lastModifiedDate":"2021-09-14"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"                + \"or earlier): \\n\"","lastModifiedDate":"2021-09-14"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"                + expectedDeadlineC.toString() + \"\\n\"","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"                + expectedDeadlineB.toString() + \"\\n\"","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"                + expectedDeadlineA.toString(), agentResponse);","lastModifiedDate":"2021-09-06"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-09-06"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"    void deadlineAllFilterAndSortingWorks_userInputReminderAllCommand_messageIncludesAllDeadlines()","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"            throws TaskFileIoException, InvalidTaskDataException {","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"        Deadline expectedDeadlineA \u003d new Deadline(\"a\", false, LocalDate.now().plusDays(20));","lastModifiedDate":"2021-09-06"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"        Deadline expectedDeadlineB \u003d new Deadline(\"b\", false, LocalDate.now().plusDays(3));","lastModifiedDate":"2021-09-06"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"        Deadline expectedDeadlineC \u003d new Deadline(\"c\", false, LocalDate.now().plusDays(1));","lastModifiedDate":"2021-09-06"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"        Deadline expectedDeadlineD \u003d new Deadline(\"d\", true, LocalDate.now().plusDays(0));","lastModifiedDate":"2021-09-06"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"        TaskList taskList \u003d new TaskList(new TaskStorageStub());","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"        taskList.addTask(expectedDeadlineA);","lastModifiedDate":"2021-09-06"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"        taskList.addTask(expectedDeadlineB);","lastModifiedDate":"2021-09-06"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"        taskList.addTask(expectedDeadlineC);","lastModifiedDate":"2021-09-06"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"        taskList.addTask(expectedDeadlineD);","lastModifiedDate":"2021-09-06"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"        String agentResponse \u003d new ReminderCommand(\"gibberish text\").execute(taskList);","lastModifiedDate":"2021-09-06"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":55,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(\"Here\u0027s the list of incomplete tasks sorted by deadline (All): \\n\"","lastModifiedDate":"2021-09-14"},{"lineNumber":56,"author":{"gitId":"kevin9foong"},"content":"                + expectedDeadlineC.toString() + \"\\n\"","lastModifiedDate":"2021-09-06"},{"lineNumber":57,"author":{"gitId":"kevin9foong"},"content":"                + expectedDeadlineB.toString() + \"\\n\"","lastModifiedDate":"2021-09-06"},{"lineNumber":58,"author":{"gitId":"kevin9foong"},"content":"                + expectedDeadlineA.toString(), agentResponse);","lastModifiedDate":"2021-09-06"},{"lineNumber":59,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":60,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":61,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-09-06"},{"lineNumber":62,"author":{"gitId":"kevin9foong"},"content":"    void deadlineTodayFilterAndSortingWorks_userInputReminderTodayCommand_messageIncludesTodayDeadlines()","lastModifiedDate":"2021-09-06"},{"lineNumber":63,"author":{"gitId":"kevin9foong"},"content":"            throws TaskFileIoException, InvalidTaskDataException {","lastModifiedDate":"2021-09-06"},{"lineNumber":64,"author":{"gitId":"kevin9foong"},"content":"        Deadline expectedDeadlineA \u003d new Deadline(\"a\", false, LocalDate.now().plusDays(20));","lastModifiedDate":"2021-09-06"},{"lineNumber":65,"author":{"gitId":"kevin9foong"},"content":"        Deadline expectedDeadlineB \u003d new Deadline(\"b\", false, LocalDate.now().plusDays(3));","lastModifiedDate":"2021-09-06"},{"lineNumber":66,"author":{"gitId":"kevin9foong"},"content":"        Deadline expectedDeadlineC \u003d new Deadline(\"c\", false, LocalDate.now().plusDays(1));","lastModifiedDate":"2021-09-06"},{"lineNumber":67,"author":{"gitId":"kevin9foong"},"content":"        Deadline expectedDeadlineD \u003d new Deadline(\"d\", false, LocalDate.now().plusDays(0));","lastModifiedDate":"2021-09-06"},{"lineNumber":68,"author":{"gitId":"kevin9foong"},"content":"        Deadline expectedDeadlineE \u003d new Deadline(\"e\", true, LocalDate.now().plusDays(0));","lastModifiedDate":"2021-09-06"},{"lineNumber":69,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":70,"author":{"gitId":"kevin9foong"},"content":"        TaskList taskList \u003d new TaskList(new TaskStorageStub());","lastModifiedDate":"2021-09-06"},{"lineNumber":71,"author":{"gitId":"kevin9foong"},"content":"        taskList.addTask(expectedDeadlineA);","lastModifiedDate":"2021-09-06"},{"lineNumber":72,"author":{"gitId":"kevin9foong"},"content":"        taskList.addTask(expectedDeadlineB);","lastModifiedDate":"2021-09-06"},{"lineNumber":73,"author":{"gitId":"kevin9foong"},"content":"        taskList.addTask(expectedDeadlineC);","lastModifiedDate":"2021-09-06"},{"lineNumber":74,"author":{"gitId":"kevin9foong"},"content":"        taskList.addTask(expectedDeadlineD);","lastModifiedDate":"2021-09-06"},{"lineNumber":75,"author":{"gitId":"kevin9foong"},"content":"        taskList.addTask(expectedDeadlineE);","lastModifiedDate":"2021-09-06"},{"lineNumber":76,"author":{"gitId":"kevin9foong"},"content":"        String agentResponse \u003d new ReminderCommand(\"today\").execute(taskList);","lastModifiedDate":"2021-09-06"},{"lineNumber":77,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":78,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(\"Here\u0027s the list of incomplete tasks sorted by deadline (Due today or earlier): \\n\"","lastModifiedDate":"2021-09-14"},{"lineNumber":79,"author":{"gitId":"kevin9foong"},"content":"                + expectedDeadlineD.toString(), agentResponse);","lastModifiedDate":"2021-09-06"},{"lineNumber":80,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":81,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"kevin9foong":81}},{"path":"src/test/java/agent/data/TaskStorageStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package agent.data;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"import java.util.List;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"import agent.tasks.Task;","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"public class TaskStorageStub implements TaskStorage {","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"    private List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"    public void saveTasks(List\u003cTask\u003e taskList) {","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"        tasks \u003d taskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"    public List\u003cTask\u003e loadTasks() {","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"        return tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"kevin9foong":20}},{"path":"src/test/java/agent/tasks/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"package agent.tasks;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"import agent.data.TaskStorageStub;","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"import agent.exceptions.InvalidTaskDataException;","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"import agent.exceptions.InvalidTaskNumberException;","lastModifiedDate":"2021-09-14"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"import agent.exceptions.TaskFileIoException;","lastModifiedDate":"2021-09-14"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"class TaskListTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"    void canGetAllTasksWhenNoTasks_noTasks_returnsEmptyList() throws TaskFileIoException, InvalidTaskDataException {","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"        TaskList taskList \u003d new TaskList(new TaskStorageStub());","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(new ArrayList\u003c\u003e(), taskList.getAllTasks());","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"    void canAddTasks_tasksToAdd_returnsListWithAddedTasks()","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"            throws InvalidTaskNumberException, TaskFileIoException, InvalidTaskDataException {","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"        TaskList taskList \u003d new TaskList(new TaskStorageStub());","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"        Deadline deadline \u003d new Deadline(\"deadline\", true, LocalDate.parse(\"2021-12-12\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"        Event event \u003d new Event(\"event\", false, \"home\");","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"        ToDo todo \u003d new ToDo(\"todo\", false);","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"        taskList.addTask(deadline);","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(1, taskList.getNumOfTasks());","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(deadline, taskList.getTask(0));","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"        taskList.addTask(event);","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(2, taskList.getNumOfTasks());","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(event, taskList.getTask(1));","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"        taskList.addTask(todo);","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(3, taskList.getNumOfTasks());","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(todo, taskList.getTask(2));","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"    void canDeleteTasks_tasksAndTaskIndexToDelete_returnsListWithNoDeletedTasks()","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"            throws InvalidTaskNumberException, TaskFileIoException, InvalidTaskDataException {","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"        TaskList taskList \u003d new TaskList(new TaskStorageStub());","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"        Deadline deadline \u003d new Deadline(\"deadline\", true, LocalDate.parse(\"2021-12-12\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"        Event event \u003d new Event(\"event\", false, \"home\");","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"        ToDo todo \u003d new ToDo(\"todo\", false);","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"        taskList.addTask(deadline);","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(1, taskList.getNumOfTasks());","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(deadline, taskList.getTask(0));","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"        taskList.deleteTask(0);","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"kevin9foong"},"content":"        taskList.addTask(event);","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"kevin9foong"},"content":"        taskList.addTask(todo);","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"kevin9foong"},"content":"        taskList.deleteTask(0);","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(todo, taskList.getTask(0));","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(1, taskList.getNumOfTasks());","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"kevin9foong"},"content":"        taskList.deleteTask(0);","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(0, taskList.getNumOfTasks());","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"kevin9foong"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"kevin9foong"},"content":"    void canMarkTaskAsDone_tasksAndTaskIndexToMarkDone_returnsListWithDoneTask()","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"kevin9foong"},"content":"            throws InvalidTaskNumberException, TaskFileIoException, InvalidTaskDataException {","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"kevin9foong"},"content":"        TaskList taskList \u003d new TaskList(new TaskStorageStub());","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"kevin9foong"},"content":"        Deadline deadline \u003d new Deadline(\"deadline\", true, LocalDate.parse(\"2021-12-12\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"kevin9foong"},"content":"        Event event \u003d new Event(\"event\", false, \"home\");","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"kevin9foong"},"content":"        ToDo todo \u003d new ToDo(\"todo\", false);","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"kevin9foong"},"content":"        Event doneEvent \u003d new Event(\"event\", true, \"home\");","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"kevin9foong"},"content":"        ToDo doneTodo \u003d new ToDo(\"todo\", true);","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"kevin9foong"},"content":"        taskList.addTask(deadline);","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"kevin9foong"},"content":"        taskList.addTask(event);","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"kevin9foong"},"content":"        taskList.addTask(todo);","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(event, taskList.getTask(1));","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(todo, taskList.getTask(2));","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"kevin9foong"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"kevin9foong"},"content":"        taskList.setDone(1);","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(doneEvent.getTaskRepresentation(), event.getTaskRepresentation());","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"kevin9foong"},"content":"        taskList.setDone(2);","lastModifiedDate":"2021-08-22"},{"lineNumber":86,"author":{"gitId":"kevin9foong"},"content":"        assertEquals(doneTodo.getTaskRepresentation(), todo.getTaskRepresentation());","lastModifiedDate":"2021-08-22"},{"lineNumber":87,"author":{"gitId":"kevin9foong"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":88,"author":{"gitId":"kevin9foong"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"kevin9foong":88}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kevin9foong"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"kevin9foong"},"content":"todo xyz","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"kevin9foong"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"kevin9foong"},"content":"delete 0","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"kevin9foong"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"kevin9foong"},"content":"delete 1","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"kevin9foong"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"kevin9foong"},"content":"deadline x /by z","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"kevin9foong"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"event y /at z","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"kevin9foong"},"content":"todo 111","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"kevin9foong"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"kevin9foong"},"content":"delete 3","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"kevin9foong"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"kevin9foong"},"content":"delete 1","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"kevin9foong"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"kevin9foong"},"content":"delete 1","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"kevin9foong"},"content":"test adding a task","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"kevin9foong"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"kevin9foong"},"content":"deadline test adding a deadline /by 2021-19-22","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"kevin9foong"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"kevin9foong"},"content":"event test adding an event /at 11.15am monday 16/08/21","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"kevin9foong"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"kevin9foong"},"content":"todo test adding a todo","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"kevin9foong"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"kevin9foong"},"content":"done 1","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"kevin9foong"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"kevin9foong"},"content":"done 4","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"kevin9foong"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"kevin9foong"},"content":"done 2","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"kevin9foong"},"content":"done 3","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"kevin9foong"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"kevin9foong"},"content":"todo","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"kevin9foong"},"content":"blah","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"kevin9foong"},"content":"done 1234","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"kevin9foong"},"content":"done 0","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"kevin9foong"},"content":"done 1","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"kevin9foong"},"content":"done xyz1","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"kevin9foong"},"content":"event","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"kevin9foong"},"content":"deadline","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"kevin9foong"},"content":"event 1","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"kevin9foong"},"content":"deadline 1","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"kevin9foong"},"content":"event /at 123","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"kevin9foong"},"content":"event 1 /at 2","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"kevin9foong"},"content":"deadline 1 /by 2021-12-12","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"kevin9foong"},"content":"delete 1","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"kevin9foong"},"content":"delete 1","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"kevin9foong"},"content":"delete 1","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"kevin9foong"},"content":"delete 1","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"kevin9foong"},"content":"delete 1","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"kevin9foong"},"content":"delete 1","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"kevin9foong"},"content":"list","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"kevin9foong"},"content":"todo h","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"kevin9foong"},"content":"deadline hehe /by 2020-12-12","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"kevin9foong"},"content":"event hello /at home","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"kevin9foong"},"content":"list","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"kevin9foong"},"content":"find h","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"kevin9foong"},"content":"find heh","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"kevin9foong"},"content":"find he","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"kevin9foong"},"content":"find lo","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"kevin9foong"},"content":"delete 1","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"kevin9foong"},"content":"delete 1","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"kevin9foong"},"content":"delete 1","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"kevin9foong"},"content":"list","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"kevin9foong"},"content":"find","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"kevin9foong"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"kevin9foong":68}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"kevin9foong"},"content":"dir /S /B ..\\src\\main\\java\\*.java \u003e sources.txt","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"kevin9foong"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin @sources.txt","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"kevin9foong"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":19,"kevin9foong":3}}]
