[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"NecroWolf28"},"content":"    implementation group: \u0027com.googlecode.json-simple\u0027, name: \u0027json-simple\u0027, version: \u00271.1.1\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"NecroWolf28"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"NecroWolf28"},"content":"test {","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"NecroWolf28"},"content":"    useJUnitPlatform()","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"NecroWolf28"},"content":"}","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"NecroWolf28"},"content":"dependencies {","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"NecroWolf28"},"content":"    implementation \u0027org.junit.jupiter:junit-jupiter:5.7.0\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"NecroWolf28"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"NecroWolf28"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"NecroWolf28"},"content":"}","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"-":45,"NecroWolf28":13}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NecroWolf28"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"NecroWolf28"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"NecroWolf28"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"NecroWolf28"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"NecroWolf28"},"content":"import duke.util.Parser;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"NecroWolf28"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"NecroWolf28"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"NecroWolf28"},"content":"import java.io.*;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"NecroWolf28"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"NecroWolf28"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"NecroWolf28"},"content":"    private Ui ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"NecroWolf28"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"NecroWolf28"},"content":"     * Constructor for a Duke instance.","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"NecroWolf28"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"NecroWolf28"},"content":"     * @param filePath The specified path of the file we will write and load information from.","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"NecroWolf28"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"NecroWolf28"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"NecroWolf28"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"NecroWolf28"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"NecroWolf28"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"NecroWolf28"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"NecroWolf28"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"NecroWolf28"},"content":"            ui.showLoadingError();","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"NecroWolf28"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"NecroWolf28"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"NecroWolf28"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"NecroWolf28"},"content":"     * Runs the Duke chatbot.","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"NecroWolf28"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"NecroWolf28"},"content":"     * @throws InvalidInputException If the input is deemed invalid.","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"NecroWolf28"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"NecroWolf28"},"content":"    public void run() throws InvalidInputException {","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"NecroWolf28"},"content":"        ui.showWelcome();","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"NecroWolf28"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"NecroWolf28"},"content":"        while (!isExit) {","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"NecroWolf28"},"content":"            String input \u003d ui.readCommand();","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"NecroWolf28"},"content":"            Command c \u003d Parser.parseCommand(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"NecroWolf28"},"content":"            c.execute(tasks, ui, storage);","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"NecroWolf28"},"content":"            isExit \u003d c.isExit();","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"NecroWolf28"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":52,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":53,"author":{"gitId":"NecroWolf28"},"content":"    public static void main(String[] args) throws InvalidInputException {","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"NecroWolf28"},"content":"        new Duke(\"./data/tasks.json\").run();","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":3,"NecroWolf28":53}},{"path":"src/main/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NecroWolf28"},"content":"package duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"NecroWolf28"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"NecroWolf28"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"NecroWolf28"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"NecroWolf28"},"content":"import org.junit.Test;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"NecroWolf28"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"NecroWolf28"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"NecroWolf28"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"NecroWolf28"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"NecroWolf28"},"content":"public class DukeTest {","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"NecroWolf28"},"content":"    @Test","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"NecroWolf28"},"content":"    @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"NecroWolf28"},"content":"    public void testToDoStringConversion() {","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"NecroWolf28"},"content":"        assertEquals(\"[T][X] 1 \", ToDo.of(\"1\", true).toString());","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"NecroWolf28"},"content":"    @Test","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"NecroWolf28"},"content":"    public void testDeadlineStringConversion() {","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"NecroWolf28"},"content":"        assertEquals(\"[D][ ] 2 (by: Sunday, 20 February 2022, 01:45 PM)\", Deadline.of(\"2\",\"20/02/2022 1345\").toString());","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"NecroWolf28"},"content":"    @Test","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"NecroWolf28"},"content":"    public void testEventStringConversion() {","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"NecroWolf28"},"content":"        assertEquals(\"[E][ ] 3 (at: Monday 2-4pm)\", Event.of(\"3\",\"Monday 2-4pm\").toString());","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"NecroWolf28"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"NecroWolf28":32}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NecroWolf28"},"content":"package duke.command;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"NecroWolf28"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"NecroWolf28"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"NecroWolf28"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"NecroWolf28"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"NecroWolf28"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"NecroWolf28"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"NecroWolf28"},"content":"    private Task task;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"NecroWolf28"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"NecroWolf28"},"content":"     * Default constructor for an AddCommand.","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"NecroWolf28"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"NecroWolf28"},"content":"     * @param task The task to add.","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"NecroWolf28"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"NecroWolf28"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"NecroWolf28"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"NecroWolf28"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"NecroWolf28"},"content":"     * Executes the specified command.","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"NecroWolf28"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"NecroWolf28"},"content":"     * @param tasks The TaskList which we are modifying.","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"NecroWolf28"},"content":"     * @param ui The Ui we will use for user interaction.","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"NecroWolf28"},"content":"     * @param storage The Storage we will use for storing save data.","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"NecroWolf28"},"content":"     * @throws InvalidInputException When the input is deemed invalid.","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"NecroWolf28"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"NecroWolf28"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"NecroWolf28"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws InvalidInputException {","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"NecroWolf28"},"content":"        tasks.add(task);","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"NecroWolf28"},"content":"        ui.showAdd(task.toString(), tasks.size());","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"NecroWolf28"},"content":"        Command listCommand \u003d new ListCommand();","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"NecroWolf28"},"content":"        listCommand.execute(tasks, ui, storage);","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"NecroWolf28"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"NecroWolf28"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"NecroWolf28"},"content":"        return false;","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"NecroWolf28"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"NecroWolf28":42}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NecroWolf28"},"content":"package duke.command;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"NecroWolf28"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"NecroWolf28"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"NecroWolf28"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"NecroWolf28"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"NecroWolf28"},"content":"public abstract class Command {","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"NecroWolf28"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"NecroWolf28"},"content":"     * Executes the specified command.","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"NecroWolf28"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"NecroWolf28"},"content":"     * @param tasks The TaskList which we are modifying.","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"NecroWolf28"},"content":"     * @param ui The Ui we will use for user interaction.","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"NecroWolf28"},"content":"     * @param storage The Storage we will use for storing save data.","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"NecroWolf28"},"content":"     * @throws InvalidInputException When the input is deemed invalid.","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"NecroWolf28"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"NecroWolf28"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws InvalidInputException;","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"NecroWolf28"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"NecroWolf28"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"NecroWolf28":22}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NecroWolf28"},"content":"package duke.command;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"NecroWolf28"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"NecroWolf28"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"NecroWolf28"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"NecroWolf28"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"NecroWolf28"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"NecroWolf28"},"content":"    private String input;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"NecroWolf28"},"content":"    public DeleteCommand(String input) {","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"NecroWolf28"},"content":"        this.input \u003d input;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"NecroWolf28"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"NecroWolf28"},"content":"     * Executes the specified command.","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"NecroWolf28"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"NecroWolf28"},"content":"     * @param tasks The TaskList which we are modifying.","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"NecroWolf28"},"content":"     * @param ui The Ui we will use for user interaction.","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"NecroWolf28"},"content":"     * @param storage The Storage we will use for storing save data.","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"NecroWolf28"},"content":"     * @throws InvalidInputException When the input is deemed invalid.","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"NecroWolf28"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"NecroWolf28"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"NecroWolf28"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws InvalidInputException {","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"NecroWolf28"},"content":"        String[] strings \u003d input.split(\" \");","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"NecroWolf28"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"NecroWolf28"},"content":"            ui.showEmptyList();","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"NecroWolf28"},"content":"        } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"NecroWolf28"},"content":"            try {","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"NecroWolf28"},"content":"                if (strings.length \u003c 2) {","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"NecroWolf28"},"content":"                    ui.textBox(\"You did not specify which task to delete. Please wake up.\");","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"NecroWolf28"},"content":"                } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"NecroWolf28"},"content":"                    int taskIndex \u003d Integer.parseInt(strings[1]) - 1;","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"NecroWolf28"},"content":"                    if (taskIndex \u003c tasks.size()) {","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"NecroWolf28"},"content":"                        ui.showDelete(tasks.get(taskIndex).toString());","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"NecroWolf28"},"content":"                        tasks.delete(taskIndex);","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"NecroWolf28"},"content":"                    } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"NecroWolf28"},"content":"                        ui.textBox(\"You have entered an invalid task number. Fool.\");","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"NecroWolf28"},"content":"                    }","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"NecroWolf28"},"content":"                }","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"NecroWolf28"},"content":"            } catch (NumberFormatException ex) {","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"NecroWolf28"},"content":"                System.err.println(ex);","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"NecroWolf28"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"NecroWolf28"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"NecroWolf28"},"content":"        Command listCommand \u003d new ListCommand();","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"NecroWolf28"},"content":"        listCommand.execute(tasks, ui, storage);","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"NecroWolf28"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"NecroWolf28"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"NecroWolf28"},"content":"        return false;","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"NecroWolf28"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"NecroWolf28":54}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NecroWolf28"},"content":"package duke.command;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"NecroWolf28"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"NecroWolf28"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"NecroWolf28"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"NecroWolf28"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"NecroWolf28"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"NecroWolf28"},"content":"    private String input;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"NecroWolf28"},"content":"    public DoneCommand(String input) {","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"NecroWolf28"},"content":"        this.input \u003d input;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"NecroWolf28"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"NecroWolf28"},"content":"     * Executes the specified command.","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"NecroWolf28"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"NecroWolf28"},"content":"     * @param tasks The TaskList which we are modifying.","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"NecroWolf28"},"content":"     * @param ui The Ui we will use for user interaction.","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"NecroWolf28"},"content":"     * @param storage The Storage we will use for storing save data.","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"NecroWolf28"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"NecroWolf28"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"NecroWolf28"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"NecroWolf28"},"content":"        String[] strings \u003d input.split(\" \");","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"NecroWolf28"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"NecroWolf28"},"content":"            ui.showEmptyList();","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"NecroWolf28"},"content":"        } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"NecroWolf28"},"content":"            try {","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"NecroWolf28"},"content":"                if (strings.length \u003c 2) {","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"NecroWolf28"},"content":"                    ui.textBox(\"You did not specify which task to complete.\");","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"NecroWolf28"},"content":"                } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"NecroWolf28"},"content":"                    int taskNumber \u003d Integer.parseInt(strings[1]) - 1;","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"NecroWolf28"},"content":"                    if (taskNumber \u003c tasks.size()) {","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"NecroWolf28"},"content":"                        if (tasks.get(taskNumber).checkCompletion()) {","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"NecroWolf28"},"content":"                            ui.textBox(\"The task has already been completed, please be more attentive.\");","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"NecroWolf28"},"content":"                        } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"NecroWolf28"},"content":"                            tasks.get(taskNumber).complete();","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"NecroWolf28"},"content":"                            ui.showComplete(tasks.get(taskNumber).toString());","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"NecroWolf28"},"content":"                        }","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"NecroWolf28"},"content":"                    } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"NecroWolf28"},"content":"                        System.out.println(\"You have entered an invalid task number. Fool.\");","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"NecroWolf28"},"content":"                    }","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"NecroWolf28"},"content":"                }","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"NecroWolf28"},"content":"            } catch (NumberFormatException ex) {","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"NecroWolf28"},"content":"                System.err.println(ex);","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"NecroWolf28"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"NecroWolf28"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"NecroWolf28"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"NecroWolf28"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"NecroWolf28"},"content":"        return false;","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"NecroWolf28"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"NecroWolf28":55}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NecroWolf28"},"content":"package duke.command;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"NecroWolf28"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"NecroWolf28"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"NecroWolf28"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"NecroWolf28"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"NecroWolf28"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"NecroWolf28"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"NecroWolf28"},"content":"     * Executes the specified command.","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"NecroWolf28"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"NecroWolf28"},"content":"     * @param tasks The TaskList which we are modifying.","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"NecroWolf28"},"content":"     * @param ui The Ui we will use for user interaction.","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"NecroWolf28"},"content":"     * @param storage The Storage we will use for storing save data.","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"NecroWolf28"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"NecroWolf28"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"NecroWolf28"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"NecroWolf28"},"content":"        storage.write(tasks);","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"NecroWolf28"},"content":"        ui.showGoodbye();","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"NecroWolf28"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"NecroWolf28"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"NecroWolf28"},"content":"        return true;","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"NecroWolf28"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"NecroWolf28":27}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NecroWolf28"},"content":"package duke.command;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"NecroWolf28"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"NecroWolf28"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"NecroWolf28"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"NecroWolf28"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"NecroWolf28"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"NecroWolf28"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"NecroWolf28"},"content":"import javax.sound.midi.SysexMessage;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"NecroWolf28"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"NecroWolf28"},"content":"    private String keyword;","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"NecroWolf28"},"content":"    private final String tab \u003d \"      \";","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"NecroWolf28"},"content":"    private final String line \u003d \"------------------------------------------------------------\";","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"NecroWolf28"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"NecroWolf28"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"NecroWolf28"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"NecroWolf28"},"content":"     * Executes the specified command.","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"NecroWolf28"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"NecroWolf28"},"content":"     * @param tasks The TaskList which we are modifying.","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"NecroWolf28"},"content":"     * @param ui The Ui we will use for user interaction.","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"NecroWolf28"},"content":"     * @param storage The Storage we will use for storing save data.","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"NecroWolf28"},"content":"     * @throws InvalidInputException When the input is deemed invalid.","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"NecroWolf28"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"NecroWolf28"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"NecroWolf28"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws InvalidInputException {","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"NecroWolf28"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"NecroWolf28"},"content":"            ui.showEmptyList();","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"NecroWolf28"},"content":"        } else {","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"NecroWolf28"},"content":"            System.out.println(tab + line);","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"NecroWolf28"},"content":"            System.out.println(tab + \"Your keyword is: \\\"\" + keyword + \"\\\". \\n\");","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"NecroWolf28"},"content":"            System.out.println(tab + \"Here are the matching tasks in your list:\");","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"NecroWolf28"},"content":"            for (int j \u003d 0; j \u003c tasks.size(); j++) {","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"NecroWolf28"},"content":"                if (tasks.get(j).getDescription().contains(keyword)) {","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"NecroWolf28"},"content":"                    System.out.println(tab + \" \" + (j + 1) + \". \" + tasks.get(j).toString());","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"NecroWolf28"},"content":"                }","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"NecroWolf28"},"content":"            }","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"NecroWolf28"},"content":"            System.out.println(tab + line);","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"NecroWolf28"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"NecroWolf28"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"NecroWolf28"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"NecroWolf28"},"content":"        return false;","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"NecroWolf28"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"NecroWolf28":51}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NecroWolf28"},"content":"package duke.command;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"NecroWolf28"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"NecroWolf28"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"NecroWolf28"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"NecroWolf28"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"NecroWolf28"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"NecroWolf28"},"content":"    private final String tab \u003d \"      \";","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"NecroWolf28"},"content":"    private final String line \u003d \"------------------------------------------------------------\";","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"NecroWolf28"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"NecroWolf28"},"content":"     * Executes the specified command.","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"NecroWolf28"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"NecroWolf28"},"content":"     * @param tasks The TaskList which we are modifying.","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"NecroWolf28"},"content":"     * @param ui The Ui we will use for user interaction.","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"NecroWolf28"},"content":"     * @param storage The Storage we will use for storing save data.","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"NecroWolf28"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"NecroWolf28"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"NecroWolf28"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"NecroWolf28"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"NecroWolf28"},"content":"            ui.showEmptyList();","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"NecroWolf28"},"content":"        } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"NecroWolf28"},"content":"            System.out.println(tab + line);","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"NecroWolf28"},"content":"            System.out.println(tab + \"Here are the tasks in your list:\");","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"NecroWolf28"},"content":"            for (int j \u003d 0; j \u003c tasks.size(); j++) {","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"NecroWolf28"},"content":"                System.out.println(tab + \" \" + (j + 1) + \". \" + tasks.get(j).toString());","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"NecroWolf28"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"NecroWolf28"},"content":"            System.out.println(tab + line);","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"NecroWolf28"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"NecroWolf28"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"NecroWolf28"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"NecroWolf28"},"content":"        return false;","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"NecroWolf28"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"NecroWolf28":38}},{"path":"src/main/java/duke/command/WrongCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NecroWolf28"},"content":"package duke.command;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"NecroWolf28"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"NecroWolf28"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"NecroWolf28"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"NecroWolf28"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"NecroWolf28"},"content":"public class WrongCommand extends Command {","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"NecroWolf28"},"content":"    private String errorMessage;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"NecroWolf28"},"content":"    public WrongCommand(String errorMessage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"NecroWolf28"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"NecroWolf28"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"NecroWolf28"},"content":"     * Executes the specified command.","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"NecroWolf28"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"NecroWolf28"},"content":"     * @param tasks The TaskList which we are modifying.","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"NecroWolf28"},"content":"     * @param ui The Ui we will use for user interaction.","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"NecroWolf28"},"content":"     * @param storage The Storage we will use for storing save data.","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"NecroWolf28"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"NecroWolf28"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"NecroWolf28"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"NecroWolf28"},"content":"        Ui.showError(errorMessage);","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"NecroWolf28"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"NecroWolf28"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"NecroWolf28"},"content":"        return false;","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"NecroWolf28"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"NecroWolf28":32}},{"path":"src/main/java/duke/exception/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NecroWolf28"},"content":"package duke.exception;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"NecroWolf28"},"content":"public class InvalidInputException extends Exception {","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"NecroWolf28"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"NecroWolf28"},"content":"     * Constructor for the Exception.","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"NecroWolf28"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"NecroWolf28"},"content":"     * @param message The error message.","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"NecroWolf28"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"NecroWolf28"},"content":"    public InvalidInputException(String message) {","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"NecroWolf28"},"content":"        super(message);","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"NecroWolf28"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"NecroWolf28":14}},{"path":"src/main/java/duke/exception/NoSuchTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NecroWolf28"},"content":"package duke.exception;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"NecroWolf28"},"content":"public class NoSuchTaskException extends Exception {","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"NecroWolf28"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"NecroWolf28"},"content":"     * Constructor for the Exception.","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"NecroWolf28"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"NecroWolf28"},"content":"     * @param message The error message.","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"NecroWolf28"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"NecroWolf28"},"content":"    public NoSuchTaskException(String message) {","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"NecroWolf28"},"content":"        super(message);","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"NecroWolf28"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"NecroWolf28":14}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NecroWolf28"},"content":"package duke.task;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"NecroWolf28"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"NecroWolf28"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"NecroWolf28"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"NecroWolf28"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"NecroWolf28"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"NecroWolf28"},"content":"import org.json.simple.JSONObject;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"NecroWolf28"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"NecroWolf28"},"content":"    private String by;","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"NecroWolf28"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"NecroWolf28"},"content":"     * Default constructor for a Deadline.","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"NecroWolf28"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"NecroWolf28"},"content":"     * @param description The description of the Deadline.","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"NecroWolf28"},"content":"     * @param by The deadline of the Deadline task.","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"NecroWolf28"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"NecroWolf28"},"content":"    protected Deadline(String description, String by) {","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"NecroWolf28"},"content":"        super(description);","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"NecroWolf28"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"NecroWolf28"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"NecroWolf28"},"content":"     * A constructor for a Deadline which includes a boolean isCompleted.","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"NecroWolf28"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"NecroWolf28"},"content":"     * @param description The description of the Deadline.","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"NecroWolf28"},"content":"     * @param by The deadline of the Deadline task.","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"NecroWolf28"},"content":"     * @param isCompleted Whether the Deadline has been completed.","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"NecroWolf28"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"NecroWolf28"},"content":"    protected Deadline(String description, String by, boolean isCompleted) {","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"NecroWolf28"},"content":"        super(description);","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"NecroWolf28"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"NecroWolf28"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"NecroWolf28"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"NecroWolf28"},"content":"     * Default factory method for a Deadline.","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"NecroWolf28"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"NecroWolf28"},"content":"     * @param description The description of the Deadline.","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"NecroWolf28"},"content":"     * @param by The deadline of the Deadline task.","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"NecroWolf28"},"content":"     * @return A new Deadline with the given description.","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"NecroWolf28"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"NecroWolf28"},"content":"    public static Deadline of(String description, String by) {","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"NecroWolf28"},"content":"        return new Deadline(description, by);","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"NecroWolf28"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"NecroWolf28"},"content":"     * A factory method for a Deadline which includes a boolean isCompleted.","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"NecroWolf28"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"NecroWolf28"},"content":"     * @param description The description of the Deadline.","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"NecroWolf28"},"content":"     * @param by The deadline of the Deadline task.","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"NecroWolf28"},"content":"     * @param isCompleted Whether the Deadline has been completed.","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"NecroWolf28"},"content":"     * @return A new Deadline with the given description.","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"NecroWolf28"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"NecroWolf28"},"content":"    public static Deadline of(String description, String by, boolean isCompleted) {","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"NecroWolf28"},"content":"        return new Deadline(description, by, isCompleted);","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"NecroWolf28"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"NecroWolf28"},"content":"    public String toString() throws DateTimeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"NecroWolf28"},"content":"        String[] date \u003d by.split(\" \", 2);","lastModifiedDate":"2021-08-30"},{"lineNumber":66,"author":{"gitId":"NecroWolf28"},"content":"        LocalDate ld \u003d LocalDate.parse(date[0], DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"NecroWolf28"},"content":"        String formattedDate \u003d ld.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.FULL));","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"NecroWolf28"},"content":"        LocalTime lt \u003d LocalTime.parse(date[1], DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"NecroWolf28"},"content":"        String formattedTime \u003d lt.format(DateTimeFormatter.ofPattern(\"hh:mm a\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":70,"author":{"gitId":"NecroWolf28"},"content":"        return String.format(\"[D]%s %s %s\", isCompleted ? \"[X]\" : \"[ ]\", description,","lastModifiedDate":"2021-08-30"},{"lineNumber":71,"author":{"gitId":"NecroWolf28"},"content":"                \"(by: \" + formattedDate + \", \" + formattedTime + \")\");","lastModifiedDate":"2021-08-30"},{"lineNumber":72,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":73,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":74,"author":{"gitId":"NecroWolf28"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"NecroWolf28"},"content":"    @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2021-08-28"},{"lineNumber":76,"author":{"gitId":"NecroWolf28"},"content":"    public JSONObject toJsonObject() {","lastModifiedDate":"2021-08-28"},{"lineNumber":77,"author":{"gitId":"NecroWolf28"},"content":"        JSONObject obj \u003d new JSONObject();","lastModifiedDate":"2021-08-28"},{"lineNumber":78,"author":{"gitId":"NecroWolf28"},"content":"        obj.put(\"type\", \"deadline\");","lastModifiedDate":"2021-08-28"},{"lineNumber":79,"author":{"gitId":"NecroWolf28"},"content":"        obj.put(\"description\", description);","lastModifiedDate":"2021-08-28"},{"lineNumber":80,"author":{"gitId":"NecroWolf28"},"content":"        obj.put(\"isCompleted\", isCompleted);","lastModifiedDate":"2021-08-28"},{"lineNumber":81,"author":{"gitId":"NecroWolf28"},"content":"        obj.put(\"by\", by);","lastModifiedDate":"2021-08-28"},{"lineNumber":82,"author":{"gitId":"NecroWolf28"},"content":"        return obj;","lastModifiedDate":"2021-08-28"},{"lineNumber":83,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":84,"author":{"gitId":"NecroWolf28"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"NecroWolf28":84}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NecroWolf28"},"content":"package duke.task;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"NecroWolf28"},"content":"import org.json.simple.JSONObject;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"NecroWolf28"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"NecroWolf28"},"content":"    private String at;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"NecroWolf28"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"NecroWolf28"},"content":"     * Default constructor for an Event.","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"NecroWolf28"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"NecroWolf28"},"content":"     * @param description The description of the Event.","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"NecroWolf28"},"content":"     * @param at The period of time at which the Event is happening.","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"NecroWolf28"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"NecroWolf28"},"content":"    protected Event(String description, String at) {","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"NecroWolf28"},"content":"        super(description);","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"NecroWolf28"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"NecroWolf28"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"NecroWolf28"},"content":"     * A constructor for an Event which includes a boolean isCompleted.","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"NecroWolf28"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"NecroWolf28"},"content":"     * @param description The description of the Event.","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"NecroWolf28"},"content":"     * @param at The period of time at which the Event is happening.","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"NecroWolf28"},"content":"     * @param isCompleted Whether the Event has been completed.","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"NecroWolf28"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"NecroWolf28"},"content":"    protected Event(String description, String at, boolean isCompleted) {","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"NecroWolf28"},"content":"        super(description);","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"NecroWolf28"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"NecroWolf28"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"NecroWolf28"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"NecroWolf28"},"content":"     * Default factory method for an Event.","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"NecroWolf28"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"NecroWolf28"},"content":"     * @param description The description of the Event.","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"NecroWolf28"},"content":"     * @param at The period of time at which the Event is happening.","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"NecroWolf28"},"content":"     * @return A new Event with the given description.","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"NecroWolf28"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"NecroWolf28"},"content":"    public static Event of(String description, String at) {","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"NecroWolf28"},"content":"        return new Event(description, at);","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"NecroWolf28"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"NecroWolf28"},"content":"     * A factory method for an Event which includes a boolean isCompleted.","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"NecroWolf28"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"NecroWolf28"},"content":"     * @param description The description of the Event.","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"NecroWolf28"},"content":"     * @param at The period of time at which the Event is happening.","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"NecroWolf28"},"content":"     * @param isCompleted Whether the Event has been completed.","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"NecroWolf28"},"content":"     * @return A new Event with the given description.","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"NecroWolf28"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"NecroWolf28"},"content":"    public static Event of(String description, String at, boolean isCompleted) {","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"NecroWolf28"},"content":"        return new Event(description, at, isCompleted);","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"NecroWolf28"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"NecroWolf28"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"NecroWolf28"},"content":"        return String.format(\"[E]%s %s %s\", isCompleted ? \"[X]\" : \"[ ]\", description,","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"NecroWolf28"},"content":"                \"(at: \" + this.at + \")\");","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"NecroWolf28"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"NecroWolf28"},"content":"    @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"NecroWolf28"},"content":"    public JSONObject toJsonObject() {","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"NecroWolf28"},"content":"        JSONObject obj \u003d new JSONObject();","lastModifiedDate":"2021-08-28"},{"lineNumber":66,"author":{"gitId":"NecroWolf28"},"content":"        obj.put(\"type\", \"event\");","lastModifiedDate":"2021-08-28"},{"lineNumber":67,"author":{"gitId":"NecroWolf28"},"content":"        obj.put(\"description\", description);","lastModifiedDate":"2021-08-28"},{"lineNumber":68,"author":{"gitId":"NecroWolf28"},"content":"        obj.put(\"isCompleted\", isCompleted);","lastModifiedDate":"2021-08-28"},{"lineNumber":69,"author":{"gitId":"NecroWolf28"},"content":"        obj.put(\"at\", at);","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"NecroWolf28"},"content":"        return obj;","lastModifiedDate":"2021-08-28"},{"lineNumber":71,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":72,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":73,"author":{"gitId":"NecroWolf28"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"NecroWolf28":73}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NecroWolf28"},"content":"package duke.task;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"NecroWolf28"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"NecroWolf28"},"content":"import org.json.simple.JSONObject;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"NecroWolf28"},"content":"public abstract class Task {","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"NecroWolf28"},"content":"    protected boolean isCompleted;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"NecroWolf28"},"content":"    protected String description;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"NecroWolf28"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"NecroWolf28"},"content":"     * Default constructor for a Task.","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"NecroWolf28"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"NecroWolf28"},"content":"     * @param description The description of a task.","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"NecroWolf28"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"NecroWolf28"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"NecroWolf28"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"NecroWolf28"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"NecroWolf28"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"NecroWolf28"},"content":"     * Checks if a specific task has been completed.","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"NecroWolf28"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"NecroWolf28"},"content":"     * @return A boolean representing whether a task has been completed.","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"NecroWolf28"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"NecroWolf28"},"content":"    public boolean checkCompletion() {","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"NecroWolf28"},"content":"        return this.isCompleted;","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"NecroWolf28"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"NecroWolf28"},"content":"     * Marks a task as completed.","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"NecroWolf28"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"NecroWolf28"},"content":"    public void complete() {","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"NecroWolf28"},"content":"        this.isCompleted \u003d true;","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"NecroWolf28"},"content":"    public String getDescription() {","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"NecroWolf28"},"content":"        return description;","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"NecroWolf28"},"content":"    public abstract String toString();","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"NecroWolf28"},"content":"    public abstract JSONObject toJsonObject();","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"NecroWolf28"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"NecroWolf28"},"content":"     * Converts a JSON Object into a Task.","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"NecroWolf28"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"NecroWolf28"},"content":"     * @param obj The Task in JSON Object format.","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"NecroWolf28"},"content":"     * @return The task as a Task.","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"NecroWolf28"},"content":"     * @throws InvalidInputException If the input is deemed invalid.","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"NecroWolf28"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"NecroWolf28"},"content":"    public static Task fromJsonObject(JSONObject obj) throws InvalidInputException {","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"NecroWolf28"},"content":"        Task task;","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"NecroWolf28"},"content":"        String taskType \u003d (String) obj.get(\"type\");","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"NecroWolf28"},"content":"        String description \u003d (String) obj.get(\"description\");","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"NecroWolf28"},"content":"        boolean isCompleted \u003d (boolean) obj.get(\"isCompleted\");","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"NecroWolf28"},"content":"        String by \u003d (String) obj.get(\"by\");","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"NecroWolf28"},"content":"        String at \u003d (String) obj.get(\"at\");","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"NecroWolf28"},"content":"        switch (taskType) {","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"NecroWolf28"},"content":"            case \"deadline\":","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"NecroWolf28"},"content":"                task \u003d Deadline.of(description, by, isCompleted);","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"NecroWolf28"},"content":"                break;","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"NecroWolf28"},"content":"            case \"event\":","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"NecroWolf28"},"content":"                task \u003d Event.of(description, at, isCompleted);","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"NecroWolf28"},"content":"                break;","lastModifiedDate":"2021-08-28"},{"lineNumber":66,"author":{"gitId":"NecroWolf28"},"content":"            case \"todo\":","lastModifiedDate":"2021-08-28"},{"lineNumber":67,"author":{"gitId":"NecroWolf28"},"content":"                task \u003d ToDo.of(description, isCompleted);","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"NecroWolf28"},"content":"                break;","lastModifiedDate":"2021-08-28"},{"lineNumber":69,"author":{"gitId":"NecroWolf28"},"content":"            default:","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"NecroWolf28"},"content":"                throw new InvalidInputException(\"Invalid input!\");","lastModifiedDate":"2021-08-30"},{"lineNumber":71,"author":{"gitId":"NecroWolf28"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":72,"author":{"gitId":"NecroWolf28"},"content":"        return task;","lastModifiedDate":"2021-08-28"},{"lineNumber":73,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":74,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":75,"author":{"gitId":"NecroWolf28"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"NecroWolf28":75}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NecroWolf28"},"content":"package duke.task;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"NecroWolf28"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"NecroWolf28"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"NecroWolf28"},"content":"import org.json.simple.JSONObject;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"NecroWolf28"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"NecroWolf28"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"NecroWolf28"},"content":"     * Default constructor for a ToDo.","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"NecroWolf28"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"NecroWolf28"},"content":"     * @param description The description of the ToDo.","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"NecroWolf28"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"NecroWolf28"},"content":"    protected ToDo(String description) {","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"NecroWolf28"},"content":"        super(description);","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"NecroWolf28"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"NecroWolf28"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"NecroWolf28"},"content":"     * A constructor for a ToDo which includes a boolean isCompleted.","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"NecroWolf28"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"NecroWolf28"},"content":"     * @param description The description of the ToDo.","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"NecroWolf28"},"content":"     * @param isCompleted Whether the ToDo has been completed.","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"NecroWolf28"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"NecroWolf28"},"content":"    protected ToDo(String description, boolean isCompleted) {","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"NecroWolf28"},"content":"        super(description);","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"NecroWolf28"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"NecroWolf28"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"NecroWolf28"},"content":"     * Default factory method for a ToDo.","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"NecroWolf28"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"NecroWolf28"},"content":"     * @param description The description of the ToDo.","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"NecroWolf28"},"content":"     * @return A new ToDo with the given description.","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"NecroWolf28"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"NecroWolf28"},"content":"    public static ToDo of(String description) {","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"NecroWolf28"},"content":"        return new ToDo(description);","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"NecroWolf28"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"NecroWolf28"},"content":"     * A factory method for a ToDo which includes a boolean isCompleted.","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"NecroWolf28"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"NecroWolf28"},"content":"     * @param description The description of the ToDo.","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"NecroWolf28"},"content":"     * @param isCompleted Whether the ToDo has been completed.","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"NecroWolf28"},"content":"     * @return A new ToDo with the given description and boolean.","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"NecroWolf28"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"NecroWolf28"},"content":"    public static ToDo of(String description, boolean isCompleted) {","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"NecroWolf28"},"content":"        return new ToDo(description, isCompleted);","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"NecroWolf28"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"NecroWolf28"},"content":"     * Converts the ToDo into a string.","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"NecroWolf28"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"NecroWolf28"},"content":"     * @return A String representation of the ToDo.","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"NecroWolf28"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"NecroWolf28"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"NecroWolf28"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"NecroWolf28"},"content":"        return String.format(\"[T]%s %s \", isCompleted ? \"[X]\" : \"[ ]\", description);","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"NecroWolf28"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":63,"author":{"gitId":"NecroWolf28"},"content":"     * Converts the ToDo into a JSON Object.","lastModifiedDate":"2021-09-02"},{"lineNumber":64,"author":{"gitId":"NecroWolf28"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":65,"author":{"gitId":"NecroWolf28"},"content":"     * @return A JSON Object representation of the ToDo.","lastModifiedDate":"2021-09-02"},{"lineNumber":66,"author":{"gitId":"NecroWolf28"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":67,"author":{"gitId":"NecroWolf28"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":68,"author":{"gitId":"NecroWolf28"},"content":"    @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2021-08-28"},{"lineNumber":69,"author":{"gitId":"NecroWolf28"},"content":"    public JSONObject toJsonObject() {","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"NecroWolf28"},"content":"        JSONObject obj \u003d new JSONObject();","lastModifiedDate":"2021-08-28"},{"lineNumber":71,"author":{"gitId":"NecroWolf28"},"content":"        obj.put(\"type\", \"todo\");","lastModifiedDate":"2021-08-28"},{"lineNumber":72,"author":{"gitId":"NecroWolf28"},"content":"        obj.put(\"description\", description);","lastModifiedDate":"2021-08-28"},{"lineNumber":73,"author":{"gitId":"NecroWolf28"},"content":"        obj.put(\"isCompleted\", isCompleted);","lastModifiedDate":"2021-08-28"},{"lineNumber":74,"author":{"gitId":"NecroWolf28"},"content":"        return obj;","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":76,"author":{"gitId":"NecroWolf28"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"NecroWolf28":76}},{"path":"src/main/java/duke/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NecroWolf28"},"content":"package duke.util;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"NecroWolf28"},"content":"import duke.command.*;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"NecroWolf28"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"NecroWolf28"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"NecroWolf28"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"NecroWolf28"},"content":"public class Parser {","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"NecroWolf28"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"NecroWolf28"},"content":"     * Trims the input String into the default reading format.","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"NecroWolf28"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"NecroWolf28"},"content":"     * @param input The input String.","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"NecroWolf28"},"content":"     * @return The trimmed input String to be processed.","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"NecroWolf28"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"NecroWolf28"},"content":"    public static String parseInput(String input) {","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"NecroWolf28"},"content":"        return input.trim().replaceAll(\" +\", \" \");","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"NecroWolf28"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"NecroWolf28"},"content":"     * Parses the given String into a Command.","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"NecroWolf28"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"NecroWolf28"},"content":"     * @param input The input String.","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"NecroWolf28"},"content":"     * @return The specific Command to execute.","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"NecroWolf28"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"NecroWolf28"},"content":"    public static Command parseCommand(String input) {","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"NecroWolf28"},"content":"        String[] fullCommand \u003d input.split(\" \", 2);","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"NecroWolf28"},"content":"        Command command \u003d null;","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"NecroWolf28"},"content":"        switch (fullCommand[0]) {","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"NecroWolf28"},"content":"        case \"bye\":","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"NecroWolf28"},"content":"            if (fullCommand.length \u003e 1) {","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"NecroWolf28"},"content":"                command \u003d new WrongCommand(\"You cannot put anything behind the keyword \\\"bye\\\".\");","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"NecroWolf28"},"content":"            } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"NecroWolf28"},"content":"                command \u003d new ExitCommand();","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"NecroWolf28"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"NecroWolf28"},"content":"            break;","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"NecroWolf28"},"content":"        case \"list\":","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"NecroWolf28"},"content":"            if (fullCommand.length \u003e 1) {","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"NecroWolf28"},"content":"                command \u003d new WrongCommand(\"You cannot put anything behind the keyword \\\"list\\\".\");","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"NecroWolf28"},"content":"            } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"NecroWolf28"},"content":"                command \u003d new ListCommand();","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"NecroWolf28"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"NecroWolf28"},"content":"            break;","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"NecroWolf28"},"content":"        case \"todo\":","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"NecroWolf28"},"content":"            try {","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"NecroWolf28"},"content":"                command \u003d new AddCommand(ToDo.of(fullCommand[1]));","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"NecroWolf28"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"NecroWolf28"},"content":"                command \u003d new WrongCommand(\"The description of a todo cannot be empty, idiot.\");","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"NecroWolf28"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"NecroWolf28"},"content":"            break;","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"NecroWolf28"},"content":"        case \"deadline\":","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"NecroWolf28"},"content":"            try {","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"NecroWolf28"},"content":"                String[] strings \u003d input.split(\"/\", 2);","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"NecroWolf28"},"content":"                String[] strings1 \u003d strings[0].split(\" \", 2);","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"NecroWolf28"},"content":"                String[] strings2 \u003d strings[1].split(\" \", 2);","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"NecroWolf28"},"content":"                command \u003d new AddCommand(Deadline.of(strings1[1], strings2[1]));","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"NecroWolf28"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"NecroWolf28"},"content":"                command \u003d new WrongCommand(\"The description of a deadline cannot be empty, idiot.\");","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"NecroWolf28"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"NecroWolf28"},"content":"            break;","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"NecroWolf28"},"content":"        case \"event\":","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"NecroWolf28"},"content":"            try {","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"NecroWolf28"},"content":"                String[] strings \u003d input.split(\"/\", 2);","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"NecroWolf28"},"content":"                String[] strings1 \u003d strings[0].split(\" \", 2);","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"NecroWolf28"},"content":"                String[] strings2 \u003d strings[1].split(\" \", 2);","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"NecroWolf28"},"content":"                command \u003d new AddCommand(Event.of(strings1[1], strings2[1]));","lastModifiedDate":"2021-09-01"},{"lineNumber":69,"author":{"gitId":"NecroWolf28"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":70,"author":{"gitId":"NecroWolf28"},"content":"                command \u003d new WrongCommand(\"The description of an event cannot be empty, idiot.\");","lastModifiedDate":"2021-09-01"},{"lineNumber":71,"author":{"gitId":"NecroWolf28"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":72,"author":{"gitId":"NecroWolf28"},"content":"            break;","lastModifiedDate":"2021-09-01"},{"lineNumber":73,"author":{"gitId":"NecroWolf28"},"content":"        case \"done\":","lastModifiedDate":"2021-09-01"},{"lineNumber":74,"author":{"gitId":"NecroWolf28"},"content":"            command \u003d new DoneCommand(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":75,"author":{"gitId":"NecroWolf28"},"content":"            break;","lastModifiedDate":"2021-09-01"},{"lineNumber":76,"author":{"gitId":"NecroWolf28"},"content":"        case \"delete\":","lastModifiedDate":"2021-09-01"},{"lineNumber":77,"author":{"gitId":"NecroWolf28"},"content":"            command \u003d new DeleteCommand(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":78,"author":{"gitId":"NecroWolf28"},"content":"            break;","lastModifiedDate":"2021-09-01"},{"lineNumber":79,"author":{"gitId":"NecroWolf28"},"content":"        case \"find\":","lastModifiedDate":"2021-09-02"},{"lineNumber":80,"author":{"gitId":"NecroWolf28"},"content":"            if (fullCommand.length \u003c 2) {","lastModifiedDate":"2021-09-02"},{"lineNumber":81,"author":{"gitId":"NecroWolf28"},"content":"                command \u003d new WrongCommand(\"You have to specify a keyword.\");","lastModifiedDate":"2021-09-02"},{"lineNumber":82,"author":{"gitId":"NecroWolf28"},"content":"            } else if (fullCommand.length \u003c 3) {","lastModifiedDate":"2021-09-02"},{"lineNumber":83,"author":{"gitId":"NecroWolf28"},"content":"                command \u003d new FindCommand(fullCommand[1]);","lastModifiedDate":"2021-09-02"},{"lineNumber":84,"author":{"gitId":"NecroWolf28"},"content":"            } else {","lastModifiedDate":"2021-09-02"},{"lineNumber":85,"author":{"gitId":"NecroWolf28"},"content":"                command \u003d new WrongCommand(\"Idk.\");","lastModifiedDate":"2021-09-02"},{"lineNumber":86,"author":{"gitId":"NecroWolf28"},"content":"            }","lastModifiedDate":"2021-09-02"},{"lineNumber":87,"author":{"gitId":"NecroWolf28"},"content":"            break;","lastModifiedDate":"2021-09-02"},{"lineNumber":88,"author":{"gitId":"NecroWolf28"},"content":"        default:","lastModifiedDate":"2021-09-01"},{"lineNumber":89,"author":{"gitId":"NecroWolf28"},"content":"            command \u003d new WrongCommand(\"Check your input again, fool.\");","lastModifiedDate":"2021-09-01"},{"lineNumber":90,"author":{"gitId":"NecroWolf28"},"content":"            break;","lastModifiedDate":"2021-09-01"},{"lineNumber":91,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":92,"author":{"gitId":"NecroWolf28"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":93,"author":{"gitId":"NecroWolf28"},"content":"        return command;","lastModifiedDate":"2021-09-01"},{"lineNumber":94,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":95,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":96,"author":{"gitId":"NecroWolf28"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"NecroWolf28":96}},{"path":"src/main/java/duke/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NecroWolf28"},"content":"package duke.util;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"NecroWolf28"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"NecroWolf28"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"NecroWolf28"},"content":"import org.json.simple.JSONArray;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"NecroWolf28"},"content":"import org.json.simple.JSONObject;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"NecroWolf28"},"content":"import org.json.simple.parser.JSONParser;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"NecroWolf28"},"content":"import org.json.simple.parser.ParseException;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"NecroWolf28"},"content":"import java.io.*;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"NecroWolf28"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"NecroWolf28"},"content":"public class Storage {","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"NecroWolf28"},"content":"    private String filePath;","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"NecroWolf28"},"content":"    private FileWriter fileWriter;","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"NecroWolf28"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"NecroWolf28"},"content":"     * Default constructor for a Storage instance.","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"NecroWolf28"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"NecroWolf28"},"content":"     * @param filePath The specified file path to store the save data.","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"NecroWolf28"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"NecroWolf28"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"NecroWolf28"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"NecroWolf28"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"NecroWolf28"},"content":"     * Parses the file from its JSON format.","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"NecroWolf28"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"NecroWolf28"},"content":"     * @param filePath The specified file to parse.","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"NecroWolf28"},"content":"     * @return An ArrayList of Tasks.","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"NecroWolf28"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"NecroWolf28"},"content":"    @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"NecroWolf28"},"content":"    public ArrayList\u003cTask\u003e parseFromJson(String filePath) {","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"NecroWolf28"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"NecroWolf28"},"content":"        JSONParser jsonParser \u003d new JSONParser();","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"NecroWolf28"},"content":"        try (FileReader reader \u003d new FileReader(filePath)) {","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"NecroWolf28"},"content":"            JSONArray arr \u003d (JSONArray) jsonParser.parse(reader);","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"NecroWolf28"},"content":"            arr.forEach((task) -\u003e {","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"NecroWolf28"},"content":"                try {","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"NecroWolf28"},"content":"                    tasks.add(Task.fromJsonObject((JSONObject) task));","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"NecroWolf28"},"content":"                } catch (InvalidInputException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"NecroWolf28"},"content":"                    e.printStackTrace();","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"NecroWolf28"},"content":"                }","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"NecroWolf28"},"content":"            });","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"NecroWolf28"},"content":"        } catch (IOException | ParseException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"NecroWolf28"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"NecroWolf28"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"NecroWolf28"},"content":"        return tasks;","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"NecroWolf28"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"NecroWolf28"},"content":"     * Writes the TaskList into a JSON File format and saves it.","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"NecroWolf28"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"NecroWolf28"},"content":"     * @param tasks The TaskList to convert into JSON file format.","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"NecroWolf28"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"NecroWolf28"},"content":"    @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"NecroWolf28"},"content":"    public void write(TaskList tasks) {","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"NecroWolf28"},"content":"        JSONArray arr \u003d new JSONArray();","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"NecroWolf28"},"content":"        tasks.forEach((task) -\u003e arr.add(task.toJsonObject()));","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"NecroWolf28"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"NecroWolf28"},"content":"            fileWriter \u003d new FileWriter(filePath);","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"NecroWolf28"},"content":"            fileWriter.write(arr.toJSONString());","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"NecroWolf28"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"NecroWolf28"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"NecroWolf28"},"content":"        } finally {","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"NecroWolf28"},"content":"            try {","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"NecroWolf28"},"content":"                fileWriter.flush();","lastModifiedDate":"2021-09-01"},{"lineNumber":69,"author":{"gitId":"NecroWolf28"},"content":"                fileWriter.close();","lastModifiedDate":"2021-09-01"},{"lineNumber":70,"author":{"gitId":"NecroWolf28"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":71,"author":{"gitId":"NecroWolf28"},"content":"                e.printStackTrace();","lastModifiedDate":"2021-09-01"},{"lineNumber":72,"author":{"gitId":"NecroWolf28"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":73,"author":{"gitId":"NecroWolf28"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":74,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":75,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":76,"author":{"gitId":"NecroWolf28"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":77,"author":{"gitId":"NecroWolf28"},"content":"     * Loads the TaskList from a JSON File format.","lastModifiedDate":"2021-09-02"},{"lineNumber":78,"author":{"gitId":"NecroWolf28"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":79,"author":{"gitId":"NecroWolf28"},"content":"     * @return An ArrayList of Tasks loaded from the save data.","lastModifiedDate":"2021-09-02"},{"lineNumber":80,"author":{"gitId":"NecroWolf28"},"content":"     * @throws FileNotFoundException When the specified file is not found.","lastModifiedDate":"2021-09-02"},{"lineNumber":81,"author":{"gitId":"NecroWolf28"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":82,"author":{"gitId":"NecroWolf28"},"content":"    public ArrayList\u003cTask\u003e load() throws FileNotFoundException {","lastModifiedDate":"2021-09-01"},{"lineNumber":83,"author":{"gitId":"NecroWolf28"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":84,"author":{"gitId":"NecroWolf28"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2021-09-01"},{"lineNumber":85,"author":{"gitId":"NecroWolf28"},"content":"            boolean directoryExists \u003d !file.getParentFile().mkdir();","lastModifiedDate":"2021-09-01"},{"lineNumber":86,"author":{"gitId":"NecroWolf28"},"content":"            boolean fileExists \u003d !file.createNewFile();","lastModifiedDate":"2021-09-01"},{"lineNumber":87,"author":{"gitId":"NecroWolf28"},"content":"            if (directoryExists \u0026\u0026 fileExists) {","lastModifiedDate":"2021-09-01"},{"lineNumber":88,"author":{"gitId":"NecroWolf28"},"content":"                return parseFromJson(filePath);","lastModifiedDate":"2021-09-01"},{"lineNumber":89,"author":{"gitId":"NecroWolf28"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":90,"author":{"gitId":"NecroWolf28"},"content":"            throw new FileNotFoundException();","lastModifiedDate":"2021-09-01"},{"lineNumber":91,"author":{"gitId":"NecroWolf28"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":92,"author":{"gitId":"NecroWolf28"},"content":"            throw new FileNotFoundException();","lastModifiedDate":"2021-09-01"},{"lineNumber":93,"author":{"gitId":"NecroWolf28"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":94,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":95,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":96,"author":{"gitId":"NecroWolf28"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"NecroWolf28":96}},{"path":"src/main/java/duke/util/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NecroWolf28"},"content":"package duke.util;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"NecroWolf28"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"NecroWolf28"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"NecroWolf28"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"NecroWolf28"},"content":"public class TaskList {","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"NecroWolf28"},"content":"    private final ArrayList\u003cTask\u003e list;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"NecroWolf28"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"NecroWolf28"},"content":"     * Default constructor for a TaskList.","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"NecroWolf28"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"NecroWolf28"},"content":"     * @param tasks The ArrayList of Tasks.","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"NecroWolf28"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"NecroWolf28"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"NecroWolf28"},"content":"        list \u003d tasks;","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"NecroWolf28"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"NecroWolf28"},"content":"     * Constructor for an empty TaskList.","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"NecroWolf28"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"NecroWolf28"},"content":"    public TaskList() {","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"NecroWolf28"},"content":"        list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"NecroWolf28"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"NecroWolf28"},"content":"     * Gets the Task with the specified index.","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"NecroWolf28"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"NecroWolf28"},"content":"     * @param index The index of the Task we want to get.","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"NecroWolf28"},"content":"     * @return The Task with the specified index.","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"NecroWolf28"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"NecroWolf28"},"content":"    public Task get(int index) {","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"NecroWolf28"},"content":"        return list.get(index);","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"NecroWolf28"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"NecroWolf28"},"content":"     * Adds the specified Task into the TaskList.","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"NecroWolf28"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"NecroWolf28"},"content":"     * @param task The task to be added into the TaskList.","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"NecroWolf28"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"NecroWolf28"},"content":"    public void add(Task task) {","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"NecroWolf28"},"content":"        list.add(task);","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"NecroWolf28"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"NecroWolf28"},"content":"     * Deletes the specified Task from the TaskList.","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"NecroWolf28"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"NecroWolf28"},"content":"     * @param index The index of the Task we want to delete.","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"NecroWolf28"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"NecroWolf28"},"content":"    public void delete(int index) {","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"NecroWolf28"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"NecroWolf28"},"content":"            list.remove(index);","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"NecroWolf28"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"NecroWolf28"},"content":"            System.err.println(e);","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"NecroWolf28"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"NecroWolf28"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"NecroWolf28"},"content":"     * Gives the size of the TaskList.","lastModifiedDate":"2021-09-02"},{"lineNumber":62,"author":{"gitId":"NecroWolf28"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":63,"author":{"gitId":"NecroWolf28"},"content":"     * @return The size of the TaskList.","lastModifiedDate":"2021-09-02"},{"lineNumber":64,"author":{"gitId":"NecroWolf28"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":65,"author":{"gitId":"NecroWolf28"},"content":"    public int size() {","lastModifiedDate":"2021-08-30"},{"lineNumber":66,"author":{"gitId":"NecroWolf28"},"content":"        return list.size();","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"NecroWolf28"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":70,"author":{"gitId":"NecroWolf28"},"content":"     * Applies n action to every element in the TaskList.","lastModifiedDate":"2021-09-02"},{"lineNumber":71,"author":{"gitId":"NecroWolf28"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":72,"author":{"gitId":"NecroWolf28"},"content":"     * @param action The action we want to carry out on the elements in the TaskList.","lastModifiedDate":"2021-09-02"},{"lineNumber":73,"author":{"gitId":"NecroWolf28"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":74,"author":{"gitId":"NecroWolf28"},"content":"    public void forEach(Consumer\u003c? super Task\u003e action) {","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"NecroWolf28"},"content":"        list.forEach(action);","lastModifiedDate":"2021-08-28"},{"lineNumber":76,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"NecroWolf28"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"NecroWolf28":78}},{"path":"src/main/java/duke/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NecroWolf28"},"content":"package duke.util;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"NecroWolf28"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"NecroWolf28"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"NecroWolf28"},"content":"public class Ui {","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"NecroWolf28"},"content":"    private static final String tab \u003d \"      \";","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"NecroWolf28"},"content":"    private static final String line \u003d \"------------------------------------------------------------\";","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"NecroWolf28"},"content":"    private Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"NecroWolf28"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"NecroWolf28"},"content":"     * Shows the welcome message.","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"NecroWolf28"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"NecroWolf28"},"content":"    public void showWelcome() {","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"NecroWolf28"},"content":"        String necroLogo \u003d","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"NecroWolf28"},"content":"                \" ___    _                \\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"NecroWolf28"},"content":"                        + \"|   \\\\  | |   _____     ___    _  __     _____  \\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"NecroWolf28"},"content":"                        + \"| |\\\\ \\\\ | |  / __  \\\\  /   _|  | v __|  /  ___  \\\\ \\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"NecroWolf28"},"content":"                        + \"| | \\\\ \\\\| | |    __/  |  \u003c_   |  /    |   |_|   |\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"NecroWolf28"},"content":"                        + \"|_|  \\\\___|  \\\\_____|  \\\\____|  |__|     \\\\  ___  / \\n\";","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"NecroWolf28"},"content":"        System.out.println(\"Hello from\\n\" + necroLogo);","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"NecroWolf28"},"content":"        textBox(\"Hello. My name is Necro.\",","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"NecroWolf28"},"content":"                \"What do you want me to do for you on this horrible day?\");","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"NecroWolf28"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"NecroWolf28"},"content":"     * Shows a file loading error.","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"NecroWolf28"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"NecroWolf28"},"content":"    public void showLoadingError() {","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"NecroWolf28"},"content":"        textBox(\"No such file exists. Creating one for you now. You\u0027re welcome.\");","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"NecroWolf28"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"NecroWolf28"},"content":"     * Reads the user input.","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"NecroWolf28"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"NecroWolf28"},"content":"     * @return The input with all the redundant spaces removed.","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"NecroWolf28"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"NecroWolf28"},"content":"    public String readCommand() {","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"NecroWolf28"},"content":"        return Parser.parseInput(sc.nextLine());","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"NecroWolf28"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"NecroWolf28"},"content":"     * Shows an InvalidInputException with a specified message.","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"NecroWolf28"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"NecroWolf28"},"content":"     * @param errorMessage The specific message we want to show.","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"NecroWolf28"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"NecroWolf28"},"content":"    public static void showError(String errorMessage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"NecroWolf28"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"NecroWolf28"},"content":"            throw new InvalidInputException(errorMessage);","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"NecroWolf28"},"content":"        } catch (InvalidInputException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"NecroWolf28"},"content":"            System.err.println(e);","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"NecroWolf28"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"NecroWolf28"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"NecroWolf28"},"content":"     * Shows a message when the TaskList is empty.","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"NecroWolf28"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"NecroWolf28"},"content":"    public void showEmptyList() {","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"NecroWolf28"},"content":"        textBox(\"There are currently no tasks, fool.\");","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"NecroWolf28"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":65,"author":{"gitId":"NecroWolf28"},"content":"     * Shows a message that the specified Task has been added.","lastModifiedDate":"2021-09-02"},{"lineNumber":66,"author":{"gitId":"NecroWolf28"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":67,"author":{"gitId":"NecroWolf28"},"content":"     * @param taskString The String representation of the Task.","lastModifiedDate":"2021-09-02"},{"lineNumber":68,"author":{"gitId":"NecroWolf28"},"content":"     * @param listSize The size of the TaskList.","lastModifiedDate":"2021-09-02"},{"lineNumber":69,"author":{"gitId":"NecroWolf28"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":70,"author":{"gitId":"NecroWolf28"},"content":"    public void showAdd(String taskString, int listSize) {","lastModifiedDate":"2021-09-01"},{"lineNumber":71,"author":{"gitId":"NecroWolf28"},"content":"        textBox(\"Fine. I\u0027ve added this meaningless task to your list: \",","lastModifiedDate":"2021-09-01"},{"lineNumber":72,"author":{"gitId":"NecroWolf28"},"content":"                \" --\u003e \" + taskString,","lastModifiedDate":"2021-09-01"},{"lineNumber":73,"author":{"gitId":"NecroWolf28"},"content":"                \"Satisfied now? You have \" + listSize + \" items in your list. \");","lastModifiedDate":"2021-09-01"},{"lineNumber":74,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":75,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":76,"author":{"gitId":"NecroWolf28"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":77,"author":{"gitId":"NecroWolf28"},"content":"     * Shows a Task completed message.","lastModifiedDate":"2021-09-02"},{"lineNumber":78,"author":{"gitId":"NecroWolf28"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":79,"author":{"gitId":"NecroWolf28"},"content":"     * @param taskString The String representation of the Task.","lastModifiedDate":"2021-09-02"},{"lineNumber":80,"author":{"gitId":"NecroWolf28"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":81,"author":{"gitId":"NecroWolf28"},"content":"    public void showComplete(String taskString) {","lastModifiedDate":"2021-09-01"},{"lineNumber":82,"author":{"gitId":"NecroWolf28"},"content":"        textBox(\"Wow. Congratulations. You have completed the following task:\",","lastModifiedDate":"2021-09-01"},{"lineNumber":83,"author":{"gitId":"NecroWolf28"},"content":"                taskString,","lastModifiedDate":"2021-09-01"},{"lineNumber":84,"author":{"gitId":"NecroWolf28"},"content":"                \"Are you happy now?\");","lastModifiedDate":"2021-09-01"},{"lineNumber":85,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":86,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":87,"author":{"gitId":"NecroWolf28"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":88,"author":{"gitId":"NecroWolf28"},"content":"     * Shows a Task deleted message.","lastModifiedDate":"2021-09-02"},{"lineNumber":89,"author":{"gitId":"NecroWolf28"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":90,"author":{"gitId":"NecroWolf28"},"content":"     * @param taskString The String representation of the Task.","lastModifiedDate":"2021-09-02"},{"lineNumber":91,"author":{"gitId":"NecroWolf28"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":92,"author":{"gitId":"NecroWolf28"},"content":"    public void showDelete(String taskString) {","lastModifiedDate":"2021-09-01"},{"lineNumber":93,"author":{"gitId":"NecroWolf28"},"content":"        textBox(\"Since you are so lazy, I\u0027ve helped you delete this task:\",","lastModifiedDate":"2021-09-01"},{"lineNumber":94,"author":{"gitId":"NecroWolf28"},"content":"                taskString,","lastModifiedDate":"2021-09-01"},{"lineNumber":95,"author":{"gitId":"NecroWolf28"},"content":"                \"Go do something useful with your life.\");","lastModifiedDate":"2021-09-01"},{"lineNumber":96,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":97,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":98,"author":{"gitId":"NecroWolf28"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":99,"author":{"gitId":"NecroWolf28"},"content":"     * Shows the farewell message.","lastModifiedDate":"2021-09-02"},{"lineNumber":100,"author":{"gitId":"NecroWolf28"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":101,"author":{"gitId":"NecroWolf28"},"content":"    public void showGoodbye() {","lastModifiedDate":"2021-09-01"},{"lineNumber":102,"author":{"gitId":"NecroWolf28"},"content":"        textBox(\"Farewell, may we never meet again.\");","lastModifiedDate":"2021-09-01"},{"lineNumber":103,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":104,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":105,"author":{"gitId":"NecroWolf28"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":106,"author":{"gitId":"NecroWolf28"},"content":"     * A template for the formatted text box.","lastModifiedDate":"2021-09-02"},{"lineNumber":107,"author":{"gitId":"NecroWolf28"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":108,"author":{"gitId":"NecroWolf28"},"content":"     * @param messages The varargs of messages we want to show the user.","lastModifiedDate":"2021-09-02"},{"lineNumber":109,"author":{"gitId":"NecroWolf28"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":110,"author":{"gitId":"NecroWolf28"},"content":"    public void textBox(String... messages) {","lastModifiedDate":"2021-09-01"},{"lineNumber":111,"author":{"gitId":"NecroWolf28"},"content":"        System.out.println(tab + line);","lastModifiedDate":"2021-09-01"},{"lineNumber":112,"author":{"gitId":"NecroWolf28"},"content":"        for (String message : messages) {","lastModifiedDate":"2021-09-01"},{"lineNumber":113,"author":{"gitId":"NecroWolf28"},"content":"            System.out.println(tab + \" \" + message);","lastModifiedDate":"2021-09-01"},{"lineNumber":114,"author":{"gitId":"NecroWolf28"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":115,"author":{"gitId":"NecroWolf28"},"content":"        System.out.println(tab + line);","lastModifiedDate":"2021-09-01"},{"lineNumber":116,"author":{"gitId":"NecroWolf28"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":117,"author":{"gitId":"NecroWolf28"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":118,"author":{"gitId":"NecroWolf28"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"NecroWolf28":118}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"NecroWolf28"},"content":"todo one","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"NecroWolf28"},"content":"todo two","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"NecroWolf28"},"content":"deadline three /by Friday","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"NecroWolf28"},"content":"deadline four /by Saturday","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"NecroWolf28"},"content":"event five /at Monday 3-5pm","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"NecroWolf28"},"content":"event six /at Tuesday 1-2am","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"NecroWolf28"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"NecroWolf28"},"content":"done 1","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"NecroWolf28"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"NecroWolf28"},"content":"done 3","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"NecroWolf28"},"content":"done 4","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"NecroWolf28"},"content":"done 5","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"NecroWolf28"},"content":"done 6","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"NecroWolf28"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"NecroWolf28"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"NecroWolf28":15}}]
