[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"kaldius"},"content":"# duke.Duke project template","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"kaldius"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kaldius":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"kaldius"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"kaldius"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"kaldius"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"kaldius"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"kaldius"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"kaldius"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"kaldius"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"kaldius"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"kaldius"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"kaldius"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"kaldius"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"kaldius"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"kaldius"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"kaldius"},"content":"    mainClassName \u003d \"gui.Launcher\"","lastModifiedDate":"2021-09-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kaldius":15,"-":45}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"kaldius"},"content":"## Quick Start ","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"kaldius"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"kaldius"},"content":"2. Download the latest `duke.jar` from [here](https://github.com/kaldius/ip/releases/tag/A-Release).","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"kaldius"},"content":"3. Copy the file to the folder you want to use as the *home folder* for your Duke.","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"kaldius"},"content":"4. Start the app and begin typing commands! Try this out:","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"kaldius"},"content":"    * todo learn to use Duke!","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"kaldius"},"content":"    * list","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"kaldius"},"content":"    * done 1","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"kaldius"},"content":"    * delete 1","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"kaldius"},"content":"5. Refer to the **Usage** below for the details of each command","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"kaldius"},"content":"## Usage","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":15,"author":{"gitId":"kaldius"},"content":"### `todo` - Add a todo","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":17,"author":{"gitId":"kaldius"},"content":"Adds a todo item to the to-do list.","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":19,"author":{"gitId":"kaldius"},"content":"Format: `todo TASK`","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"kaldius"},"content":"Example of usage:","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"kaldius"},"content":"`todo buy eggs`","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"kaldius"},"content":"Expected outcome:","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"kaldius"},"content":"Duke will give you a confirmation that the todo has been added.","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"kaldius"},"content":"![todo expected outcome](./images/todo.png)","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"kaldius"},"content":"### `event` - Add an event","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"kaldius"},"content":"Adds an event item to the to-do list.","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"kaldius"},"content":"Format: `event TASK /at YYYY-MM-DD /recur RECURRENCE` NOTE: `RECURRENCE` is an **optional** field (default recurrence: never) which can only be one of the following:","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"kaldius"},"content":"* daily","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"kaldius"},"content":"* weekly","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"kaldius"},"content":"* monthly","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":42,"author":{"gitId":"kaldius"},"content":"`event meeting /at 2021-09-16`","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":44,"author":{"gitId":"kaldius"},"content":"Expected outcome:","lastModifiedDate":"2021-09-16"},{"lineNumber":45,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":46,"author":{"gitId":"kaldius"},"content":"Duke will give you a confirmation that the event has been added.","lastModifiedDate":"2021-09-16"},{"lineNumber":47,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":48,"author":{"gitId":"kaldius"},"content":"![event expected outcome](./images/event.png)","lastModifiedDate":"2021-09-16"},{"lineNumber":49,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":50,"author":{"gitId":"kaldius"},"content":"Example of usage (recurring event):","lastModifiedDate":"2021-09-16"},{"lineNumber":51,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":52,"author":{"gitId":"kaldius"},"content":"`event team meeting /at 2021-09-20 /recur weekly`","lastModifiedDate":"2021-09-16"},{"lineNumber":53,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":54,"author":{"gitId":"kaldius"},"content":"Expected outcome:","lastModifiedDate":"2021-09-16"},{"lineNumber":55,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":56,"author":{"gitId":"kaldius"},"content":"Duke will give you a confirmation that the recurring event has been added.","lastModifiedDate":"2021-09-16"},{"lineNumber":57,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":58,"author":{"gitId":"kaldius"},"content":"![event-recur expected outcome](./images/event-recur.png)","lastModifiedDate":"2021-09-16"},{"lineNumber":59,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":60,"author":{"gitId":"kaldius"},"content":"### `deadline` - Add a deadline","lastModifiedDate":"2021-09-16"},{"lineNumber":61,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":62,"author":{"gitId":"kaldius"},"content":"Adds a deadline item to the to-do list.","lastModifiedDate":"2021-09-16"},{"lineNumber":63,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":64,"author":{"gitId":"kaldius"},"content":"Format: `deadline TASK /by YYYY-MM-DD`","lastModifiedDate":"2021-09-16"},{"lineNumber":65,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":66,"author":{"gitId":"kaldius"},"content":"Example of usage:","lastModifiedDate":"2021-09-16"},{"lineNumber":67,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":68,"author":{"gitId":"kaldius"},"content":"`deadline CS2103T iP /by 2021-09-17`","lastModifiedDate":"2021-09-16"},{"lineNumber":69,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":70,"author":{"gitId":"kaldius"},"content":"Expected outcome:","lastModifiedDate":"2021-09-16"},{"lineNumber":71,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":72,"author":{"gitId":"kaldius"},"content":"Duke will give you a confirmation that the deadline has been added.","lastModifiedDate":"2021-09-16"},{"lineNumber":73,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":74,"author":{"gitId":"kaldius"},"content":"![deadline expected outcome](./images/deadline.png)","lastModifiedDate":"2021-09-16"},{"lineNumber":75,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":76,"author":{"gitId":"kaldius"},"content":"### `list` - List all tasks","lastModifiedDate":"2021-09-16"},{"lineNumber":77,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":78,"author":{"gitId":"kaldius"},"content":"Lists all tasks in the to-do list.","lastModifiedDate":"2021-09-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":80,"author":{"gitId":"kaldius"},"content":"Format: `list`","lastModifiedDate":"2021-09-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":82,"author":{"gitId":"kaldius"},"content":"Expected outcome:","lastModifiedDate":"2021-09-16"},{"lineNumber":83,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":84,"author":{"gitId":"kaldius"},"content":"Duke will show all the tasks in the to-do list.","lastModifiedDate":"2021-09-16"},{"lineNumber":85,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":86,"author":{"gitId":"kaldius"},"content":"![list expected outcome](./images/list.png)","lastModifiedDate":"2021-09-16"},{"lineNumber":87,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":88,"author":{"gitId":"kaldius"},"content":"### `done` - Mark as done","lastModifiedDate":"2021-09-16"},{"lineNumber":89,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":90,"author":{"gitId":"kaldius"},"content":"Marks a task as done.","lastModifiedDate":"2021-09-16"},{"lineNumber":91,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":92,"author":{"gitId":"kaldius"},"content":"Format: `done INDEX`","lastModifiedDate":"2021-09-16"},{"lineNumber":93,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":94,"author":{"gitId":"kaldius"},"content":"* Marks the task at specific `INDEX` as complete","lastModifiedDate":"2021-09-16"},{"lineNumber":95,"author":{"gitId":"kaldius"},"content":"* The index refers to the index number shown in the displayed task list","lastModifiedDate":"2021-09-16"},{"lineNumber":96,"author":{"gitId":"kaldius"},"content":"* The index **must be a positive integer** 1, 2, 3...","lastModifiedDate":"2021-09-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":100,"author":{"gitId":"kaldius"},"content":"Duke will show all the tasks in the to-do list, with the completed ones marked with a [X].","lastModifiedDate":"2021-09-16"},{"lineNumber":101,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":102,"author":{"gitId":"kaldius"},"content":"![done expected outcome](./images/done.png)","lastModifiedDate":"2021-09-16"},{"lineNumber":103,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":104,"author":{"gitId":"kaldius"},"content":"Expected outcome (for recurring task):","lastModifiedDate":"2021-09-16"},{"lineNumber":105,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":106,"author":{"gitId":"kaldius"},"content":"Duke will show all the tasks in the to-do list, with the completed ones marked with a [X]. A new recurring task will also be created.","lastModifiedDate":"2021-09-16"},{"lineNumber":107,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":108,"author":{"gitId":"kaldius"},"content":"![event-recur-done expected outcome](./images/event-recur-done.png)","lastModifiedDate":"2021-09-16"},{"lineNumber":109,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":110,"author":{"gitId":"kaldius"},"content":"### `delete` - Remove a task","lastModifiedDate":"2021-09-16"},{"lineNumber":111,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":112,"author":{"gitId":"kaldius"},"content":"Removes a task from the to-do list.","lastModifiedDate":"2021-09-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":114,"author":{"gitId":"kaldius"},"content":"Format: `delete INDEX`","lastModifiedDate":"2021-09-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":116,"author":{"gitId":"kaldius"},"content":"* Deletes the task at specified `INDEX`","lastModifiedDate":"2021-09-16"},{"lineNumber":117,"author":{"gitId":"kaldius"},"content":"* The index refers to the index number shown in the displayed task list","lastModifiedDate":"2021-09-16"},{"lineNumber":118,"author":{"gitId":"kaldius"},"content":"* The index **must be a positive integer** 1, 2, 3...","lastModifiedDate":"2021-09-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2021-09-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":122,"author":{"gitId":"kaldius"},"content":"Duke will show all the tasks in the to-do list, without the deleted ones. All tasks below the deleted task will be shifted up the list.","lastModifiedDate":"2021-09-16"},{"lineNumber":123,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":124,"author":{"gitId":"kaldius"},"content":"![delete expected outcome](./images/delete.png)","lastModifiedDate":"2021-09-16"},{"lineNumber":125,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":126,"author":{"gitId":"kaldius"},"content":"### `bye` - Save the current to-do list","lastModifiedDate":"2021-09-16"},{"lineNumber":127,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":128,"author":{"gitId":"kaldius"},"content":"Saves the current to-do list to the hard drive. This will be opened again the next time Duke is started up.","lastModifiedDate":"2021-09-16"},{"lineNumber":129,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":130,"author":{"gitId":"kaldius"},"content":"Format: `bye`","lastModifiedDate":"2021-09-16"},{"lineNumber":131,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":132,"author":{"gitId":"kaldius"},"content":"Expected outcome:","lastModifiedDate":"2021-09-16"},{"lineNumber":133,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":134,"author":{"gitId":"kaldius"},"content":"Duke will save all tasks to the hard drive and say goodbye.","lastModifiedDate":"2021-09-16"},{"lineNumber":135,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":136,"author":{"gitId":"kaldius"},"content":"![bye expected outcome](./images/bye.png)","lastModifiedDate":"2021-09-16"},{"lineNumber":137,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":138,"author":{"gitId":"kaldius"},"content":"### `find` - Searches the to-do list","lastModifiedDate":"2021-09-16"},{"lineNumber":139,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":140,"author":{"gitId":"kaldius"},"content":"Searches the to-do list for a task that has the specified search term in its description.","lastModifiedDate":"2021-09-16"},{"lineNumber":141,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":142,"author":{"gitId":"kaldius"},"content":"Format: `find SEARCHTERM`","lastModifiedDate":"2021-09-16"},{"lineNumber":143,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":144,"author":{"gitId":"kaldius"},"content":"Expected outcome:","lastModifiedDate":"2021-09-16"},{"lineNumber":145,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":146,"author":{"gitId":"kaldius"},"content":"Duke will list out all the tasks that have descriptions matching the `SEARCHTERM`.","lastModifiedDate":"2021-09-16"},{"lineNumber":147,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":148,"author":{"gitId":"kaldius"},"content":"![find expected outcome](./images/find.png)","lastModifiedDate":"2021-09-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":150,"author":{"gitId":"kaldius"},"content":"## Command Summary","lastModifiedDate":"2021-09-16"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":152,"author":{"gitId":"kaldius"},"content":"Action|Format|Examples","lastModifiedDate":"2021-09-16"},{"lineNumber":153,"author":{"gitId":"kaldius"},"content":"------|------|--------","lastModifiedDate":"2021-09-16"},{"lineNumber":154,"author":{"gitId":"kaldius"},"content":"todo|`todo TASK`| `todo buy eggs`","lastModifiedDate":"2021-09-16"},{"lineNumber":155,"author":{"gitId":"kaldius"},"content":"event|`event TASK /at YYYY-MM-DD /recur RECURRENCE`|`event meeting /at 2021-09-16`, `event team meeting /at 2021-09-20 /recur weekly`","lastModifiedDate":"2021-09-16"},{"lineNumber":156,"author":{"gitId":"kaldius"},"content":"deadline|`deadline TASK /by YYYY-MM-DD`|`deadline CS2103T iP /by 2021-09-17`","lastModifiedDate":"2021-09-16"},{"lineNumber":157,"author":{"gitId":"kaldius"},"content":"list|`list`|-","lastModifiedDate":"2021-09-16"},{"lineNumber":158,"author":{"gitId":"kaldius"},"content":"done|`done INDEX`|`done 2`","lastModifiedDate":"2021-09-16"},{"lineNumber":159,"author":{"gitId":"kaldius"},"content":"delete|`delete INDEX`|`delete 3`","lastModifiedDate":"2021-09-16"},{"lineNumber":160,"author":{"gitId":"kaldius"},"content":"bye|`bye`|-","lastModifiedDate":"2021-09-16"},{"lineNumber":161,"author":{"gitId":"kaldius"},"content":"find|`find SEARCHTERM`|`find CS2103T`","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"kaldius":137,"-":24}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaldius"},"content":"package command;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"kaldius"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"kaldius"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"kaldius"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"kaldius"},"content":"import exceptions.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"kaldius"},"content":"import exceptions.NoSuchCommandException;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"kaldius"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"kaldius"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"kaldius"},"content":" * Abstract class for all Commands to extend from.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"kaldius"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"kaldius"},"content":" * @author Quan Teng Foong","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"kaldius"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"kaldius"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"kaldius"},"content":"    private final String extraInput;","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"kaldius"},"content":"    public Command(String extraInput) {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"kaldius"},"content":"        this.extraInput \u003d extraInput;","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"kaldius"},"content":"    public Command() {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"kaldius"},"content":"        this.extraInput \u003d \"\";","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"kaldius"},"content":"     * Factory method to return the appropriate command for the given strings.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"kaldius"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"kaldius"},"content":"     * @param command command name","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"kaldius"},"content":"     * @param extraInput further details","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"kaldius"},"content":"     * @return a Command object that encapsulates the necessary actions.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"kaldius"},"content":"    public static Command of(String command, String extraInput) throws NoSuchCommandException {","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"kaldius"},"content":"        switch(command) {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"kaldius"},"content":"        case \"bye\":","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"kaldius"},"content":"            return new SaveAndExitCommand();","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"kaldius"},"content":"        case \"list\":","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"kaldius"},"content":"            return new ShowListCommand();","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"kaldius"},"content":"        case \"done\":","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"kaldius"},"content":"            return new TaskCompletedCommand(extraInput);","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"kaldius"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"kaldius"},"content":"            return new DeleteTaskCommand(extraInput);","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"kaldius"},"content":"        case \"find\":","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"kaldius"},"content":"            return new SearchCommand(extraInput);","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"kaldius"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"kaldius"},"content":"            return new CreateNewToDoCommand(extraInput);","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"kaldius"},"content":"        case \"event\":","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"kaldius"},"content":"            return new CreateNewEventCommand(extraInput);","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"kaldius"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"kaldius"},"content":"            return new CreateNewDeadlineCommand(extraInput);","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"kaldius"},"content":"        default:","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"kaldius"},"content":"            throw new NoSuchCommandException(\"No such command!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"kaldius"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"kaldius"},"content":"     * Returns the extra input field for further action by the command.","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"kaldius"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"kaldius"},"content":"     * @return extraInput String","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"kaldius"},"content":"    public String getExtraInput() {","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"kaldius"},"content":"        return this.extraInput;","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"kaldius"},"content":"    public abstract String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException, IOException;","lastModifiedDate":"2021-09-07"},{"lineNumber":67,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"kaldius"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"kaldius"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"kaldius"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"kaldius":71}},{"path":"src/main/java/command/CreateNewDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaldius"},"content":"package command;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"kaldius"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"kaldius"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"kaldius"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"kaldius"},"content":"import exceptions.DukeException;","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"kaldius"},"content":"import tasks.Task;","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"kaldius"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"kaldius"},"content":" * Command to create a new Deadline task.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"kaldius"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"kaldius"},"content":" * @author Quan Teng Foong","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"kaldius"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"kaldius"},"content":"public class CreateNewDeadlineCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"kaldius"},"content":"    public CreateNewDeadlineCommand(String message) {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"kaldius"},"content":"        super(message);","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"kaldius"},"content":"     * Adds a new Deadline task to the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"kaldius"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"kaldius"},"content":"     * @param taskList the current list of tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"kaldius"},"content":"     * @param ui the user interface object","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"kaldius"},"content":"     * @param storage the storage object","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"kaldius"},"content":"     * @return acknowledgement that Deadline has been created","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"kaldius"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"kaldius"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"kaldius"},"content":"        String details \u003d super.getExtraInput();","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"kaldius"},"content":"        return taskList.add(Task.createTask(\"deadline\", details));","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"kaldius"},"content":"     * Overrides equals method. To be used for JUnit testing.","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"kaldius"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"kaldius"},"content":"     * @param o other object for checking","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"kaldius"},"content":"     * @return true if this instance and o are equal, false otherwise","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"kaldius"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"kaldius"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"kaldius"},"content":"        if (o instanceof CreateNewDeadlineCommand) {","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"kaldius"},"content":"            // Compares the 2 extraInputs","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"kaldius"},"content":"            String oExtraInput \u003d ((CreateNewDeadlineCommand) o).getExtraInput();","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"kaldius"},"content":"            return super.getExtraInput().equals(oExtraInput);","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"kaldius"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"kaldius"},"content":"        return false;","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"kaldius"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"kaldius":49}},{"path":"src/main/java/command/CreateNewEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaldius"},"content":"package command;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"kaldius"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"kaldius"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"kaldius"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"kaldius"},"content":"import exceptions.DukeException;","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"kaldius"},"content":"import tasks.Task;","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"kaldius"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"kaldius"},"content":" * Command to create a new Event task.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"kaldius"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"kaldius"},"content":" * @author Quan Teng Foong","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"kaldius"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"kaldius"},"content":"public class CreateNewEventCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"kaldius"},"content":"    public CreateNewEventCommand(String message) {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"kaldius"},"content":"        super(message);","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"kaldius"},"content":"     * Adds a new Event task to the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"kaldius"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"kaldius"},"content":"     * @param taskList the current list of tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"kaldius"},"content":"     * @param ui the user interface object","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"kaldius"},"content":"     * @param storage the storage object","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"kaldius"},"content":"     * @return acknowledgement that Deadline has been created","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"kaldius"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"kaldius"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"kaldius"},"content":"        String details \u003d super.getExtraInput();","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"kaldius"},"content":"        return taskList.add(Task.createTask(\"event\", details));","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"kaldius"},"content":"     * Overrides equals method. To be used for JUnit testing.","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"kaldius"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"kaldius"},"content":"     * @param o other object for checking","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"kaldius"},"content":"     * @return true if this instance and o are equal, false otherwise","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"kaldius"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"kaldius"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"kaldius"},"content":"        if (o instanceof CreateNewEventCommand) {","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"kaldius"},"content":"            // Compares the 2 extraInputs","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"kaldius"},"content":"            String oExtraInput \u003d ((CreateNewEventCommand) o).getExtraInput();","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"kaldius"},"content":"            return super.getExtraInput().equals(oExtraInput);","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"kaldius"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"kaldius"},"content":"        return false;","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"kaldius"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"kaldius":49}},{"path":"src/main/java/command/CreateNewToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaldius"},"content":"package command;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"kaldius"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"kaldius"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"kaldius"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"kaldius"},"content":"import exceptions.DukeException;","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"kaldius"},"content":"import tasks.Task;","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"kaldius"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"kaldius"},"content":" * Command to create a new ToDo task.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"kaldius"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"kaldius"},"content":" * @author Quan Teng Foong","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"kaldius"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"kaldius"},"content":"public class CreateNewToDoCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"kaldius"},"content":"    public CreateNewToDoCommand(String message) {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"kaldius"},"content":"        super(message);","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"kaldius"},"content":"     * Adds a new ToDo task to the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"kaldius"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"kaldius"},"content":"     * @param taskList the current list of tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"kaldius"},"content":"     * @param ui the user interface object","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"kaldius"},"content":"     * @param storage the storage object","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"kaldius"},"content":"     * @return acknowledgement that Deadline has been created","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"kaldius"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"kaldius"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"kaldius"},"content":"        String details \u003d super.getExtraInput();","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"kaldius"},"content":"        return taskList.add(Task.createTask(\"todo\", details));","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"kaldius"},"content":"     * Overrides equals method. To be used for JUnit testing.","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"kaldius"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"kaldius"},"content":"     * @param o other object for checking","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"kaldius"},"content":"     * @return true if this instance and o are equal, false otherwise","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"kaldius"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"kaldius"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"kaldius"},"content":"        if (o instanceof CreateNewToDoCommand) {","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"kaldius"},"content":"            // Compares the 2 extraInputs","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"kaldius"},"content":"            String oExtraInput \u003d ((CreateNewToDoCommand) o).getExtraInput();","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"kaldius"},"content":"            return super.getExtraInput().equals(oExtraInput);","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"kaldius"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"kaldius"},"content":"        return false;","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"kaldius"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"kaldius":49}},{"path":"src/main/java/command/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaldius"},"content":"package command;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"kaldius"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"kaldius"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"kaldius"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"kaldius"},"content":"import exceptions.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"kaldius"},"content":"import exceptions.TaskDoesNotExistException;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"kaldius"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"kaldius"},"content":" * Command to delete a task.","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"kaldius"},"content":" *","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"kaldius"},"content":" * @author Quan Teng Foong","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"kaldius"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"kaldius"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"kaldius"},"content":"    public DeleteTaskCommand(String taskIndex) {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"kaldius"},"content":"        super(taskIndex);","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"kaldius"},"content":"     * Removes a Task from the taskList.","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"kaldius"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"kaldius"},"content":"     * @param taskList the current list of tasks","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"kaldius"},"content":"     * @param ui the user interface object","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"kaldius"},"content":"     * @param storage the storage object","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"kaldius"},"content":"     * @return String acknowledging that the task has been deleted","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"kaldius"},"content":"     * @throws TaskDoesNotExistException if the task to be deleted does not exist","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"kaldius"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"kaldius"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws TaskDoesNotExistException {","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"kaldius"},"content":"        taskList.delete(Integer.parseInt(super.getExtraInput()) - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"kaldius"},"content":"        String reply \u003d \"Task removed. You now have \" + taskList.size() + \" tasks remaining. \";","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"kaldius"},"content":"        if (taskList.size() \u003e 0) {","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"kaldius"},"content":"            reply +\u003d \"\\n\" + taskList;","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"kaldius"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"kaldius"},"content":"        return reply;","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"kaldius"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"kaldius":38}},{"path":"src/main/java/command/SaveAndExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaldius"},"content":"package command;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"kaldius"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"kaldius"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"kaldius"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"kaldius"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"kaldius"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"kaldius"},"content":" * Command executed when user exits the bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"kaldius"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"kaldius"},"content":" * @author Quan Teng Foong","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"kaldius"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"kaldius"},"content":"public class SaveAndExitCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"kaldius"},"content":"     * Prints a goodbye message.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"kaldius"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"kaldius"},"content":"     * @param taskList the current list of tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"kaldius"},"content":"     * @param ui the user interface object","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"kaldius"},"content":"     * @param storage the storage object","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"kaldius"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"kaldius"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"kaldius"},"content":"        storage.save(taskList);","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"kaldius"},"content":"        return \"Nice talking to you, goodbye!\";","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"kaldius"},"content":"     * Sends true to exit from the while loop in Duke.run()","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"kaldius"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"kaldius"},"content":"     * @return true","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"kaldius"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"kaldius"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"kaldius"},"content":"        return true;","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"kaldius"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"kaldius":38}},{"path":"src/main/java/command/SearchCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaldius"},"content":"package command;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"kaldius"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"kaldius"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"kaldius"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"kaldius"},"content":"import exceptions.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"kaldius"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"kaldius"},"content":" * Command to search for a Task matching a search term.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"kaldius"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"kaldius"},"content":" * @author Quan Teng Foong","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"kaldius"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"kaldius"},"content":"public class SearchCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"kaldius"},"content":"    public SearchCommand(String searchTerm) {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"kaldius"},"content":"        super(searchTerm);","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"kaldius"},"content":"     * Searches current TaskList for a search term.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"kaldius"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"kaldius"},"content":"     * @param taskList the current list of tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"kaldius"},"content":"     * @param ui the user interface object","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"kaldius"},"content":"     * @param storage the storage object","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"kaldius"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"kaldius"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"kaldius"},"content":"        TaskList matchingTasks \u003d taskList.search(super.getExtraInput());","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"kaldius"},"content":"        return \"Here are your search results:\\n\" + matchingTasks;","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"kaldius"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"kaldius":31}},{"path":"src/main/java/command/ShowListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaldius"},"content":"package command;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"kaldius"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"kaldius"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"kaldius"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"kaldius"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"kaldius"},"content":" * Command executed when user asks to see the list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"kaldius"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"kaldius"},"content":" * @author Quan Teng Foong","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"kaldius"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"kaldius"},"content":"public class ShowListCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"kaldius"},"content":"     * Prints the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"kaldius"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"kaldius"},"content":"     * @param taskList the current list of tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"kaldius"},"content":"     * @param ui the user interface object","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"kaldius"},"content":"     * @param storage the storage object","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"kaldius"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"kaldius"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"kaldius"},"content":"        if (taskList.toString().equals(\"\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"kaldius"},"content":"            return \"Your todo list is empty!\";","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"kaldius"},"content":"        } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"kaldius"},"content":"            return \"Checking your todo list...\\n\" + taskList;","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"kaldius"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"kaldius"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"kaldius":29}},{"path":"src/main/java/command/TaskCompletedCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaldius"},"content":"package command;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"kaldius"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"kaldius"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"kaldius"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"kaldius"},"content":"import exceptions.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"kaldius"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"kaldius"},"content":" * Command to mark a task as complete.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"kaldius"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"kaldius"},"content":" * @author Quan Teng Foong","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"kaldius"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"kaldius"},"content":"public class TaskCompletedCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"kaldius"},"content":"    public TaskCompletedCommand(String taskIndex) {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"kaldius"},"content":"        super(taskIndex);","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"kaldius"},"content":"     * Marks a task as complete.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"kaldius"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"kaldius"},"content":"     * @param taskList the current list of tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"kaldius"},"content":"     * @param ui the user interface object","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"kaldius"},"content":"     * @param storage the storage object","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"kaldius"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"kaldius"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"kaldius"},"content":"        taskList.doTask(Integer.parseInt(super.getExtraInput()) - 1, taskList);","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"kaldius"},"content":"        if (taskList.toString().equals(\"\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"kaldius"},"content":"            return \"Your todo list is empty!\";","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"kaldius"},"content":"        } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"kaldius"},"content":"            return \"Checking your todo list...\\n\" + taskList;","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"kaldius"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"kaldius"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"kaldius":35}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaldius"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kaldius"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"kaldius"},"content":"import command.Command;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"kaldius"},"content":"import exceptions.DukeException;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"kaldius"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"kaldius"},"content":" * Duke is a bot capable of storing a todo list with an interactive interface.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"kaldius"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"kaldius"},"content":" * @author Quan Teng Foong","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"kaldius"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"kaldius"},"content":"public class Duke {","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"kaldius"},"content":"    private static TaskList taskList;","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"kaldius"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"kaldius"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"kaldius"},"content":"     * Constructor for Duke. Creates a new storage file at filepath: ./storage/save.txt","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"kaldius"},"content":"    public Duke() {","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"kaldius"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"kaldius"},"content":"        storage \u003d new Storage(\"./storage/save.txt\");","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"kaldius"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"kaldius"},"content":"            taskList \u003d new TaskList(storage.retrieve());","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"kaldius"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"kaldius"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"kaldius"},"content":"            ui.showList(taskList);","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"kaldius"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"kaldius"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"kaldius"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"kaldius"},"content":"    //Commented out but might use in future","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"kaldius"},"content":"    ///**","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"kaldius"},"content":"    // * Runs a Duke instance.","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"kaldius"},"content":"    // */","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"kaldius"},"content":"    //public void run() {","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"kaldius"},"content":"    //    ui.greet();","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"kaldius"},"content":"    //    boolean isExit \u003d false;","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"kaldius"},"content":"    //    while (!isExit) {","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"kaldius"},"content":"    //        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"kaldius"},"content":"    //            String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"kaldius"},"content":"    //            Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"kaldius"},"content":"    //            c.execute(taskList, ui, storage);","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"kaldius"},"content":"    //            isExit \u003d c.isExit();","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"kaldius"},"content":"    //        } catch (DukeException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"kaldius"},"content":"    //            ui.showError(e.getMessage());","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"kaldius"},"content":"    //        }","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"kaldius"},"content":"    //    }","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"kaldius"},"content":"    //    try {","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"kaldius"},"content":"    //        storage.save(taskList);","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"kaldius"},"content":"    //    } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"kaldius"},"content":"    //        ui.showError(\"ERROR: TaskList could not be saved!\");","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"kaldius"},"content":"    //    }","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"kaldius"},"content":"    //}","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"kaldius"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"kaldius"},"content":"        new Duke();","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"kaldius"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"kaldius"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"kaldius"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"kaldius"},"content":"            return c.execute(taskList, ui, storage);","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"kaldius"},"content":"        } catch (DukeException | IOException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":69,"author":{"gitId":"kaldius"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-01"},{"lineNumber":70,"author":{"gitId":"kaldius"},"content":"            return \"bruh\";","lastModifiedDate":"2021-09-01"},{"lineNumber":71,"author":{"gitId":"kaldius"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":73,"author":{"gitId":"kaldius"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"kaldius":72,"-":1}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaldius"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kaldius"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"kaldius"},"content":"import command.Command;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"kaldius"},"content":"import exceptions.NoSuchCommandException;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"kaldius"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"kaldius"},"content":" * The Parser class encapsulates the parsing of user input into commands for Duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"kaldius"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"kaldius"},"content":" * @author Quan Teng Foong","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"kaldius"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"kaldius"},"content":"public class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"kaldius"},"content":"     * Parses a string of user input into a command and an input string.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"kaldius"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"kaldius"},"content":"     * @param userInput String input by the user","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"kaldius"},"content":"     * @return a String array holding the command and the input","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"kaldius"},"content":"    public static Command parse(String userInput) throws NoSuchCommandException {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"kaldius"},"content":"        Scanner sc \u003d new Scanner(userInput);","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"kaldius"},"content":"        String command \u003d sc.next();","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"kaldius"},"content":"        String input \u003d userInput.replace(command, \"\").strip();","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"kaldius"},"content":"        return Command.of(command, input);","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"kaldius"},"content":"    public static String[] splitBy(String string, String delimiter) {","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"kaldius"},"content":"        String[] twoParts \u003d string.split(delimiter);","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"kaldius"},"content":"        if (twoParts.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"kaldius"},"content":"            twoParts \u003d new String[]{twoParts[0], \"\"};","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"kaldius"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"kaldius"},"content":"        twoParts[0] \u003d twoParts[0].trim();","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"kaldius"},"content":"        twoParts[1] \u003d twoParts[1].trim();","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"kaldius"},"content":"        return twoParts;","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"kaldius"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"kaldius":37}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaldius"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kaldius"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"kaldius"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"kaldius"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"kaldius"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"kaldius"},"content":" * The Storage class encapsulates the process of storing and loading files to and from the hard disk.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"kaldius"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"kaldius"},"content":" * @author Quan Teng Foong","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"kaldius"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"kaldius"},"content":"public class Storage {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"kaldius"},"content":"    private final String filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"kaldius"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"kaldius"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"kaldius"},"content":"     * Retrieves previously stored data at filePath. If filePath does not exist, an empty file is created.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"kaldius"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"kaldius"},"content":"     * @return file at filePath","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"kaldius"},"content":"     * @throws IOException if unable to create new file","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"kaldius"},"content":"    public File retrieve() throws IOException {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"kaldius"},"content":"        File file \u003d new File(this.filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"kaldius"},"content":"        if (!file.exists()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"kaldius"},"content":"            if (!file.getParentFile().exists()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"kaldius"},"content":"                mkParentDir();","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"kaldius"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"kaldius"},"content":"            file.createNewFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"kaldius"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"kaldius"},"content":"        return file;","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"kaldius"},"content":"     * Makes a parent directory for the current filePath. If parent does not have a parent, this method","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"kaldius"},"content":"     * recursively calls itself.","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"kaldius"},"content":"    private void mkParentDir() {","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"kaldius"},"content":"        File file \u003d new File(this.filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"kaldius"},"content":"        File parentFile \u003d file.getParentFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"kaldius"},"content":"        if (!parentFile.exists()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"kaldius"},"content":"            if (!parentFile.getParentFile().exists()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"kaldius"},"content":"                new Storage(file.getParent()).mkParentDir();","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"kaldius"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"kaldius"},"content":"            parentFile.mkdir();","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"kaldius"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"kaldius"},"content":"     * Stores the given TaskList into filePath.","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"kaldius"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"kaldius"},"content":"     * @param taskList the current TaskList","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"kaldius"},"content":"     * @throws IOException if there is an error writing to the fileIO","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"kaldius"},"content":"    public void save(TaskList taskList) throws IOException {","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"kaldius"},"content":"        FileWriter fileWriter \u003d new FileWriter(this.filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"kaldius"},"content":"        fileWriter.write(taskList.toStorage());","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"kaldius"},"content":"        fileWriter.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"kaldius"},"content":"     * Deletes the storage file at filePath.","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"kaldius"},"content":"    public void clear() {","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"kaldius"},"content":"        File file \u003d new File(this.filePath);","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"kaldius"},"content":"        file.delete();","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"kaldius"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"kaldius":70}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaldius"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kaldius"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"kaldius"},"content":"import java.io.File;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"kaldius"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"kaldius"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"kaldius"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"kaldius"},"content":"import exceptions.NoSearchResultException;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"kaldius"},"content":"import exceptions.NoSuchCommandException;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"kaldius"},"content":"import exceptions.NoTaskNameException;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"kaldius"},"content":"import exceptions.TaskDoesNotExistException;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"kaldius"},"content":"import tasks.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"kaldius"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"kaldius"},"content":" * Encapsulates all information for a list of Tasks.","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"kaldius"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"kaldius"},"content":" * @author Quan Teng Foong","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"kaldius"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"kaldius"},"content":"public class TaskList {","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"kaldius"},"content":"    private final ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"kaldius"},"content":"    public TaskList() {}","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"kaldius"},"content":"     * Constructor that takes in a File of previously stored tasks to initialize a","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"kaldius"},"content":"     * TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"kaldius"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"kaldius"},"content":"     * @param storedTasks a File containing previously saved tasks","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"kaldius"},"content":"     * @throws IOException if there is an error opening the file or reading lines","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"kaldius"},"content":"     * from it","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"kaldius"},"content":"     * @throws NoTaskNameException if there is no task name","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"kaldius"},"content":"     * @throws NoSuchCommandException if the command does not match any of the known","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"kaldius"},"content":"     * commands","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"kaldius"},"content":"    public TaskList(File storedTasks) throws IOException, NoTaskNameException, NoSuchCommandException {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"kaldius"},"content":"        assert(storedTasks.exists());","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"kaldius"},"content":"        FileReader fileReader \u003d new FileReader(storedTasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"kaldius"},"content":"        BufferedReader bufferedReader \u003d new BufferedReader(fileReader);","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"kaldius"},"content":"        String line \u003d bufferedReader.readLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"kaldius"},"content":"        while (line !\u003d null) {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"kaldius"},"content":"            this.taskList.add(Task.createTaskFromString(line));","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"kaldius"},"content":"            line \u003d bufferedReader.readLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"kaldius"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"kaldius"},"content":"        fileReader.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"kaldius"},"content":"     * Overrides toString() method.","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"kaldius"},"content":"     * @return string representation of the TaskList object","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"kaldius"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"kaldius"},"content":"    public String toString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"kaldius"},"content":"        String allTasks \u003d \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"kaldius"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"kaldius"},"content":"            allTasks +\u003d \"      \" + (i + 1) + \". \" + taskList.get(i).toString() + \"\\n\";","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"kaldius"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"kaldius"},"content":"        return allTasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"kaldius"},"content":"     * Marks the taskNum-th item in the tasks list as completed.","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"kaldius"},"content":"     * @param taskIndex integer index of the task to be marked","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"kaldius"},"content":"    public void doTask(int taskIndex, TaskList taskList) throws TaskDoesNotExistException {","lastModifiedDate":"2021-09-08"},{"lineNumber":66,"author":{"gitId":"kaldius"},"content":"        if (taskIndex \u003e\u003d this.taskList.size()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"kaldius"},"content":"            throw new TaskDoesNotExistException(\"Task number out of bounds!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"kaldius"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"kaldius"},"content":"            this.taskList.get(taskIndex).doTask(taskList);","lastModifiedDate":"2021-09-08"},{"lineNumber":70,"author":{"gitId":"kaldius"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":72,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":73,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":74,"author":{"gitId":"kaldius"},"content":"     * Adds a task to the TaskList and returns a success message.","lastModifiedDate":"2021-09-07"},{"lineNumber":75,"author":{"gitId":"kaldius"},"content":"     * @param task the task to be added","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":77,"author":{"gitId":"kaldius"},"content":"    public String add(Task task) {","lastModifiedDate":"2021-09-07"},{"lineNumber":78,"author":{"gitId":"kaldius"},"content":"        this.taskList.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"kaldius"},"content":"        return \"Alright, I\u0027ve added the following task:\\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":80,"author":{"gitId":"kaldius"},"content":"                + \"      \" + taskList.get(taskList.size() - 1) + \"\\n      Now you have \" + taskList.size()","lastModifiedDate":"2021-09-07"},{"lineNumber":81,"author":{"gitId":"kaldius"},"content":"                + \" tasks in the list.\\n\";","lastModifiedDate":"2021-09-07"},{"lineNumber":82,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":83,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":84,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":85,"author":{"gitId":"kaldius"},"content":"     * Removes a task from the taskList.","lastModifiedDate":"2021-08-18"},{"lineNumber":86,"author":{"gitId":"kaldius"},"content":"     * @param taskIndex integer index of the task to be deleted","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":88,"author":{"gitId":"kaldius"},"content":"    public void delete(int taskIndex) throws TaskDoesNotExistException {","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"kaldius"},"content":"        if (taskIndex \u003e\u003d this.taskList.size()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"kaldius"},"content":"            throw new TaskDoesNotExistException(\"Task number out of bounds!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"kaldius"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"kaldius"},"content":"            this.taskList.remove(taskIndex);","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"kaldius"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":95,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"kaldius"},"content":"     * Converts the TaskList to a storable string.","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"kaldius"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"kaldius"},"content":"     * @return String to be stored","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"kaldius"},"content":"    public String toStorage() {","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"kaldius"},"content":"        String storage \u003d \"\";","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"kaldius"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"kaldius"},"content":"            storage +\u003d task.toStorage() + \"\\n\";","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"kaldius"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"kaldius"},"content":"        return storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"kaldius"},"content":"     * Returns the number of items in the TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"kaldius"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"kaldius"},"content":"     * @return size of TaskList","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"kaldius"},"content":"    public int size() {","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"kaldius"},"content":"        return this.taskList.size();","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"kaldius"},"content":"     * Returns the Task object at the respective taskIndex.","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"kaldius"},"content":"     * @param taskIndex integer index of object to return","lastModifiedDate":"2021-08-25"},{"lineNumber":121,"author":{"gitId":"kaldius"},"content":"     * @return a Task","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"kaldius"},"content":"    public Task get(int taskIndex) {","lastModifiedDate":"2021-08-25"},{"lineNumber":124,"author":{"gitId":"kaldius"},"content":"        return this.taskList.get(taskIndex);","lastModifiedDate":"2021-08-25"},{"lineNumber":125,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":126,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":127,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":128,"author":{"gitId":"kaldius"},"content":"     * Searches all Tasks in the TaskList to find all Tasks that contain searchTerm.","lastModifiedDate":"2021-08-25"},{"lineNumber":129,"author":{"gitId":"kaldius"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":130,"author":{"gitId":"kaldius"},"content":"     * @param searchTerm search term to find","lastModifiedDate":"2021-08-25"},{"lineNumber":131,"author":{"gitId":"kaldius"},"content":"     * @return an ArrayList containing all Tasks with the search term in their message","lastModifiedDate":"2021-08-25"},{"lineNumber":132,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":133,"author":{"gitId":"kaldius"},"content":"    public TaskList search(String searchTerm) throws NoSearchResultException {","lastModifiedDate":"2021-08-25"},{"lineNumber":134,"author":{"gitId":"kaldius"},"content":"        TaskList matchingTasks \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":135,"author":{"gitId":"kaldius"},"content":"        for (Task task: this.taskList) {","lastModifiedDate":"2021-08-25"},{"lineNumber":136,"author":{"gitId":"kaldius"},"content":"            if (task.getMessage().contains(searchTerm)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":137,"author":{"gitId":"kaldius"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":138,"author":{"gitId":"kaldius"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":139,"author":{"gitId":"kaldius"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":140,"author":{"gitId":"kaldius"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":141,"author":{"gitId":"kaldius"},"content":"            throw new NoSearchResultException(\"No results for search term \" + searchTerm);","lastModifiedDate":"2021-08-25"},{"lineNumber":142,"author":{"gitId":"kaldius"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":143,"author":{"gitId":"kaldius"},"content":"        return matchingTasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":144,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":145,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":146,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":147,"author":{"gitId":"kaldius"},"content":"     * Checks if the TaskList is empty.","lastModifiedDate":"2021-08-25"},{"lineNumber":148,"author":{"gitId":"kaldius"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":149,"author":{"gitId":"kaldius"},"content":"     * @return true if the TaskList is empty, false otherwise","lastModifiedDate":"2021-08-25"},{"lineNumber":150,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":151,"author":{"gitId":"kaldius"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-08-25"},{"lineNumber":152,"author":{"gitId":"kaldius"},"content":"        return this.taskList.isEmpty();","lastModifiedDate":"2021-08-25"},{"lineNumber":153,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":154,"author":{"gitId":"kaldius"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"kaldius":154}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaldius"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kaldius"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"kaldius"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"kaldius"},"content":" * Encapsulates the user interface (reading user input and printing strings to the console).","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"kaldius"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"kaldius"},"content":" * @author Quan Teng Foong","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"kaldius"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"kaldius"},"content":"public class Ui {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"kaldius"},"content":"    private Scanner sc;","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"kaldius"},"content":"    public Ui() {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"kaldius"},"content":"        sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"kaldius"},"content":"     * Prints out the error message.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"kaldius"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"kaldius"},"content":"     * @param errorMessage the message to print","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"kaldius"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"kaldius"},"content":"        reply(errorMessage + \"\\n\");","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"kaldius"},"content":"     * Prints a basic greeting message.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"kaldius"},"content":"    public void greet() {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"kaldius"},"content":"        System.out.println(\"Hello from Duke! What can I do for you?\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"kaldius"},"content":"     * Reads user input.","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"kaldius"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"kaldius"},"content":"     * @return the string input by the user","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"kaldius"},"content":"    public String readCommand() {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"kaldius"},"content":"        System.out.print(\"You: \");","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"kaldius"},"content":"        return sc.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"kaldius"},"content":"    private void reply(String reply) {","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"kaldius"},"content":"        System.out.println(\"Duke: \" + reply);","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"kaldius"},"content":"     * Prints the goodbye message.","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"kaldius"},"content":"    public void goodbye() {","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"kaldius"},"content":"        reply(\"Nice talking to you, goodbye!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"kaldius"},"content":"     * Prints the user\u0027s current todo list.","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"kaldius"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"kaldius"},"content":"     * @param taskList the current TaskList object","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"kaldius"},"content":"    public void showList(TaskList taskList) {","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"kaldius"},"content":"        if (taskList.toString().equals(\"\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"kaldius"},"content":"            reply(\"Your todo list is empty!\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"kaldius"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"kaldius"},"content":"            reply(\"Checking your todo list...\");","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"kaldius"},"content":"            System.out.println(taskList);","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"kaldius"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"kaldius"},"content":"     * Prints all Tasks that match the user\u0027s search term.","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"kaldius"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"kaldius"},"content":"     * @param taskList a TaskList of Tasks that match the user\u0027s search term","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"kaldius"},"content":"    public void showSearchResults(TaskList taskList) {","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"kaldius"},"content":"        reply(\"Here are your search results:\");","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"kaldius"},"content":"        System.out.println(taskList);","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"kaldius"},"content":"     * Shows success message for adding of a task.","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"kaldius"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"kaldius"},"content":"     * @param taskList the current TaskList object","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"kaldius"},"content":"    public void showAddedTask(TaskList taskList) {","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"kaldius"},"content":"        reply(\"Alright, I\u0027ve added the following task:\");","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"kaldius"},"content":"        System.out.println(\"      \" + taskList.get(taskList.size() - 1) + \"\\n      Now you have \" + taskList.size()","lastModifiedDate":"2021-08-31"},{"lineNumber":89,"author":{"gitId":"kaldius"},"content":"                + \" tasks in the list.\\n\");","lastModifiedDate":"2021-08-31"},{"lineNumber":90,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"kaldius"},"content":"     * Print a message to tell the user that the task has been deleted.","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"kaldius"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"kaldius"},"content":"     * @param taskList the current TaskList object","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"kaldius"},"content":"    public void showDeleteTask(TaskList taskList) {","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"kaldius"},"content":"        reply(\"Task removed. You now have \" + taskList.size() + \" tasks remaining.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"kaldius"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"kaldius":100}},{"path":"src/main/java/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaldius"},"content":"package exceptions;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kaldius"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"kaldius"},"content":" * Abstract class for all other Duke Exceptions to extend from.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"kaldius"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"kaldius"},"content":" * @author Quan Teng Foong","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"kaldius"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"kaldius"},"content":"public abstract class DukeException extends Exception {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"kaldius"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"kaldius"},"content":"        super(message);","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"kaldius"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"kaldius":12}},{"path":"src/main/java/exceptions/EmptyTaskListException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaldius"},"content":"package exceptions;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kaldius"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"kaldius"},"content":" * Exception raised when the TaskList is to be printed but it is empty.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"kaldius"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"kaldius"},"content":" * @author Quan Teng Foong","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"kaldius"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"kaldius"},"content":"public class EmptyTaskListException extends DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"kaldius"},"content":"    public EmptyTaskListException(String errorMessage) {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"kaldius"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"kaldius"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"kaldius":12}},{"path":"src/main/java/exceptions/NoSearchResultException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaldius"},"content":"package exceptions;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"kaldius"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"kaldius"},"content":" * Exception raised when the user attempts to search for a task but there are no Tasks that match the search term.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"kaldius"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"kaldius"},"content":"public class NoSearchResultException extends DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"kaldius"},"content":"    public NoSearchResultException(String errorMessage) {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"kaldius"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"kaldius"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"kaldius":10}},{"path":"src/main/java/exceptions/NoSuchCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaldius"},"content":"package exceptions;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kaldius"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"kaldius"},"content":" * Exception raised when the command input by the user is not recognised.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"kaldius"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"kaldius"},"content":" * @author Quan Teng Foong","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"kaldius"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"kaldius"},"content":"public class NoSuchCommandException extends DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"kaldius"},"content":"    public NoSuchCommandException(String errorMessage) {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"kaldius"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"kaldius"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"kaldius":12}},{"path":"src/main/java/exceptions/NoTaskNameException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaldius"},"content":"package exceptions;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kaldius"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"kaldius"},"content":" * Exception raised when there is no name for the task that was input by the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"kaldius"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"kaldius"},"content":" * @author Quan Teng Foong","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"kaldius"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"kaldius"},"content":"public class NoTaskNameException extends DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"kaldius"},"content":"    public NoTaskNameException(String errorMessage) {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"kaldius"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"kaldius"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"kaldius":12}},{"path":"src/main/java/exceptions/TaskDoesNotExistException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaldius"},"content":"package exceptions;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"kaldius"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"kaldius"},"content":" * Exception raised when the user wants to access (mark complete/delete) a task who\u0027s index is out of bounds.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"kaldius"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"kaldius"},"content":" * @author Quan Teng Foong","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"kaldius"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"kaldius"},"content":"public class TaskDoesNotExistException extends DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"kaldius"},"content":"    public TaskDoesNotExistException(String errorMessage) {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"kaldius"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"kaldius"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"kaldius":12}},{"path":"src/main/java/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaldius"},"content":"package gui;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"kaldius"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"kaldius"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"kaldius"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"kaldius"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"kaldius"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"kaldius"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"kaldius"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"kaldius"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"kaldius"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"kaldius"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"kaldius"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"kaldius"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"kaldius"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"kaldius"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"kaldius"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"kaldius"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"kaldius"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"kaldius"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"kaldius"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"kaldius"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"kaldius"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"kaldius"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"kaldius"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"kaldius"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"kaldius"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"kaldius"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"kaldius"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"kaldius"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"kaldius"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"kaldius"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"kaldius"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"kaldius"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"kaldius"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"kaldius"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"kaldius"},"content":"    private void flip() {","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"kaldius"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"kaldius"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"kaldius"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"kaldius"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"kaldius"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"kaldius"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"kaldius"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"kaldius"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"kaldius"},"content":"        db.flip();","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"kaldius"},"content":"        return db;","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"kaldius"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"kaldius":61}},{"path":"src/main/java/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaldius"},"content":"package gui;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"kaldius"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"kaldius"},"content":"public class Launcher {","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"kaldius"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"kaldius"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"kaldius"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"kaldius":9}},{"path":"src/main/java/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaldius"},"content":"package gui;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"kaldius"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"kaldius"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"kaldius"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"kaldius"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"kaldius"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"kaldius"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"kaldius"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"kaldius"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"kaldius"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"kaldius"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"kaldius"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"kaldius"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"kaldius"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"kaldius"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"kaldius"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"kaldius"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"kaldius"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"kaldius"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"kaldius"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"kaldius"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"kaldius"},"content":"            stage.show();","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"kaldius"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"kaldius"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"kaldius"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"kaldius"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"kaldius":32}},{"path":"src/main/java/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaldius"},"content":"package gui;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"kaldius"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"kaldius"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"kaldius"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"kaldius"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"kaldius"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"kaldius"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"kaldius"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"kaldius"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"kaldius"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"kaldius"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"kaldius"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"kaldius"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"kaldius"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"kaldius"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"kaldius"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"kaldius"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"kaldius"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"kaldius"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"kaldius"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"kaldius"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"kaldius"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"kaldius"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"kaldius"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"kaldius"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"kaldius"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"kaldius"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"kaldius"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"kaldius"},"content":"        duke \u003d d;","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"kaldius"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"kaldius"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"kaldius"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"kaldius"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"kaldius"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"kaldius"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"kaldius"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"kaldius"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"kaldius"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"kaldius"},"content":"        );","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"kaldius"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"kaldius"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"kaldius":53}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaldius"},"content":"package tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kaldius"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"kaldius"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"kaldius"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"kaldius"},"content":" * The Deadline class encapsulates all the details of each deadline.","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"kaldius"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"kaldius"},"content":" * @author Quan Teng Foong","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"kaldius"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"kaldius"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"kaldius"},"content":"    private final LocalDate endTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"kaldius"},"content":"     * Constructor for Deadline object.","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"kaldius"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"kaldius"},"content":"     * @param message name of Deadline","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"kaldius"},"content":"     * @param endTime deadline time","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"kaldius"},"content":"    public Deadline(String message, String endTime) {","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"kaldius"},"content":"        super(message);","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"kaldius"},"content":"        this.endTime \u003d LocalDate.parse(endTime);","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"kaldius"},"content":"     * Overrides toString() method.","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"kaldius"},"content":"     * @return String representation of the Deadline object.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"kaldius"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"kaldius"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"kaldius"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"kaldius"},"content":"                + endTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"kaldius"},"content":"     * Converts contents to a storable String.","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"kaldius"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"kaldius"},"content":"     * @return a String that represents this Deadline in storage","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"kaldius"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"kaldius"},"content":"    public String toStorage() {","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"kaldius"},"content":"        return \"D|\" + super.toStorage() + \"/by \" + this.endTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"kaldius"},"content":"     * Overrides clone method.","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"kaldius"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"kaldius"},"content":"     * @return another instance of the exact same Deadline","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"kaldius"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"kaldius"},"content":"    public Task clone() {","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"kaldius"},"content":"        return new Deadline(this.getMessage(), this.endTime.toString());","lastModifiedDate":"2021-09-08"},{"lineNumber":52,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":53,"author":{"gitId":"kaldius"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"kaldius":53}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaldius"},"content":"package tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kaldius"},"content":"import duke.Parser;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"kaldius"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"kaldius"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"kaldius"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"kaldius"},"content":"import exceptions.DukeException;","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"kaldius"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"kaldius"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"kaldius"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"kaldius"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"kaldius"},"content":" * The Event class encapsulates all the details of each event.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"kaldius"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"kaldius"},"content":" * @author Quan Teng Foong","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"kaldius"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"kaldius"},"content":"public class Event extends Task implements Recurring {","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"kaldius"},"content":"    private LocalDate eventDate;","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"kaldius"},"content":"    private final Recurrence recurrence;","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"kaldius"},"content":"     * Constructor for Event object.","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"kaldius"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"kaldius"},"content":"     * @param message name of Event","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"kaldius"},"content":"     * @param extraDetails date of Event and optionally, a Recurrence","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"kaldius"},"content":"    public Event(String message, String extraDetails) {","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"kaldius"},"content":"        super(message);","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"kaldius"},"content":"        String[] eventDateAndRecurrence \u003d Parser.splitBy(extraDetails, \"/recur\");","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"kaldius"},"content":"        this.eventDate \u003d LocalDate.parse(eventDateAndRecurrence[0]);","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"kaldius"},"content":"        this.recurrence \u003d Recurring.stringToRecurrence(eventDateAndRecurrence[1]);","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"kaldius"},"content":"     * Overrides toString() method.","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"kaldius"},"content":"     * @return String representation of the Event object.","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"kaldius"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"kaldius"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"kaldius"},"content":"        String recurrenceString \u003d this.recurrence !\u003d Recurrence.NEVER","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"kaldius"},"content":"                ? \"[recurs: \" + Recurring.recurrenceToString(this.recurrence) + \"]\"","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"kaldius"},"content":"                : \"\";","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"kaldius"},"content":"        return \"[E]\" + super.toString() + \" (at: \"","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"kaldius"},"content":"                + eventDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \") \"","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"kaldius"},"content":"                + recurrenceString;","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"kaldius"},"content":"     * Converts contents to a storable String.","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"kaldius"},"content":"     * ","lastModifiedDate":"2021-09-08"},{"lineNumber":52,"author":{"gitId":"kaldius"},"content":"     * @return a String that represents this Event in storage","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"kaldius"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"kaldius"},"content":"    public String toStorage() {","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"kaldius"},"content":"        return \"E|\" + super.toStorage() + \"/at \" + this.eventDate + \"/recur \"","lastModifiedDate":"2021-09-08"},{"lineNumber":57,"author":{"gitId":"kaldius"},"content":"                + Recurring.recurrenceToString(this.recurrence);","lastModifiedDate":"2021-09-08"},{"lineNumber":58,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":60,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":61,"author":{"gitId":"kaldius"},"content":"     * Sets the task as complete. If it is a recurring task, also creates a new task at eventDate + 1 recurrence later.","lastModifiedDate":"2021-09-08"},{"lineNumber":62,"author":{"gitId":"kaldius"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":63,"author":{"gitId":"kaldius"},"content":"     * @param taskList the current TaskList","lastModifiedDate":"2021-09-08"},{"lineNumber":64,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":65,"author":{"gitId":"kaldius"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":66,"author":{"gitId":"kaldius"},"content":"    public void doTask(TaskList taskList) {","lastModifiedDate":"2021-09-08"},{"lineNumber":67,"author":{"gitId":"kaldius"},"content":"        if (this.recurrence !\u003d Recurrence.NEVER) {","lastModifiedDate":"2021-09-08"},{"lineNumber":68,"author":{"gitId":"kaldius"},"content":"            this.incrementBy(1);","lastModifiedDate":"2021-09-08"},{"lineNumber":69,"author":{"gitId":"kaldius"},"content":"            taskList.add(this.clone());","lastModifiedDate":"2021-09-08"},{"lineNumber":70,"author":{"gitId":"kaldius"},"content":"            this.incrementBy(-1);","lastModifiedDate":"2021-09-08"},{"lineNumber":71,"author":{"gitId":"kaldius"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":72,"author":{"gitId":"kaldius"},"content":"        super.doTask();","lastModifiedDate":"2021-09-08"},{"lineNumber":73,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":74,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":75,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":76,"author":{"gitId":"kaldius"},"content":"     * Increments the date of the Event by a number of days/weeks/months depending on the recurrence.","lastModifiedDate":"2021-09-08"},{"lineNumber":77,"author":{"gitId":"kaldius"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":78,"author":{"gitId":"kaldius"},"content":"     * @param noOfIncrements no of recurrences to add","lastModifiedDate":"2021-09-08"},{"lineNumber":79,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":80,"author":{"gitId":"kaldius"},"content":"    public void incrementBy(int noOfIncrements) {","lastModifiedDate":"2021-09-08"},{"lineNumber":81,"author":{"gitId":"kaldius"},"content":"        switch (this.recurrence) {","lastModifiedDate":"2021-09-08"},{"lineNumber":82,"author":{"gitId":"kaldius"},"content":"        case DAILY:","lastModifiedDate":"2021-09-08"},{"lineNumber":83,"author":{"gitId":"kaldius"},"content":"            this.eventDate \u003d this.eventDate.plusDays(noOfIncrements);","lastModifiedDate":"2021-09-08"},{"lineNumber":84,"author":{"gitId":"kaldius"},"content":"        case WEEKLY:","lastModifiedDate":"2021-09-08"},{"lineNumber":85,"author":{"gitId":"kaldius"},"content":"            this.eventDate \u003d this.eventDate.plusWeeks(noOfIncrements);","lastModifiedDate":"2021-09-08"},{"lineNumber":86,"author":{"gitId":"kaldius"},"content":"        case MONTHLY:","lastModifiedDate":"2021-09-08"},{"lineNumber":87,"author":{"gitId":"kaldius"},"content":"            this.eventDate \u003d this.eventDate.plusMonths(noOfIncrements);","lastModifiedDate":"2021-09-08"},{"lineNumber":88,"author":{"gitId":"kaldius"},"content":"        default:","lastModifiedDate":"2021-09-08"},{"lineNumber":89,"author":{"gitId":"kaldius"},"content":"            //do nothing","lastModifiedDate":"2021-09-08"},{"lineNumber":90,"author":{"gitId":"kaldius"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":91,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":92,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":93,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":94,"author":{"gitId":"kaldius"},"content":"     * Overrides clone method.","lastModifiedDate":"2021-09-08"},{"lineNumber":95,"author":{"gitId":"kaldius"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":96,"author":{"gitId":"kaldius"},"content":"     * @return another instance of the exact same Event","lastModifiedDate":"2021-09-08"},{"lineNumber":97,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":98,"author":{"gitId":"kaldius"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":99,"author":{"gitId":"kaldius"},"content":"    public Task clone() {","lastModifiedDate":"2021-09-08"},{"lineNumber":100,"author":{"gitId":"kaldius"},"content":"        return new Event(this.getMessage(), this.eventDate + \"/recur \"","lastModifiedDate":"2021-09-08"},{"lineNumber":101,"author":{"gitId":"kaldius"},"content":"                + Recurring.recurrenceToString(this.recurrence));","lastModifiedDate":"2021-09-08"},{"lineNumber":102,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":103,"author":{"gitId":"kaldius"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"kaldius":103}},{"path":"src/main/java/tasks/Recurring.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaldius"},"content":"package tasks;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"kaldius"},"content":"public interface Recurring {","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"kaldius"},"content":"    enum Recurrence {","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"kaldius"},"content":"        DAILY,","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"kaldius"},"content":"        WEEKLY,","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"kaldius"},"content":"        MONTHLY,","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"kaldius"},"content":"        NEVER","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"kaldius"},"content":"    static Recurrence stringToRecurrence(String recurrence) {","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"kaldius"},"content":"        switch (recurrence) {","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"kaldius"},"content":"        case \"daily\":","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"kaldius"},"content":"            return Recurrence.DAILY;","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"kaldius"},"content":"        case \"weekly\":","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"kaldius"},"content":"            return Recurrence.WEEKLY;","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"kaldius"},"content":"        case \"monthly\":","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"kaldius"},"content":"            return Recurrence.MONTHLY;","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"kaldius"},"content":"        default:","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"kaldius"},"content":"            return Recurrence.NEVER;","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"kaldius"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"kaldius"},"content":"    static String recurrenceToString(Recurrence recurrence) {","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"kaldius"},"content":"        switch (recurrence) {","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"kaldius"},"content":"        case DAILY:","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"kaldius"},"content":"            return \"daily\";","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"kaldius"},"content":"        case WEEKLY:","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"kaldius"},"content":"            return \"weekly\";","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"kaldius"},"content":"        case MONTHLY:","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"kaldius"},"content":"            return \"monthly\";","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"kaldius"},"content":"        default:","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"kaldius"},"content":"            return \"\";","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"kaldius"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"kaldius"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"kaldius":36}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaldius"},"content":"package tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kaldius"},"content":"import duke.Parser;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"kaldius"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"kaldius"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"kaldius"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"kaldius"},"content":"import exceptions.NoSuchCommandException;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"kaldius"},"content":"import exceptions.NoTaskNameException;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"kaldius"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"kaldius"},"content":" * The Task class encapsulates all the details of each task.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"kaldius"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"kaldius"},"content":" * @author Quan Teng Foong","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"kaldius"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"kaldius"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"kaldius"},"content":"    private final String message;","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"kaldius"},"content":"    private Boolean completed;","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"kaldius"},"content":"     * Constructor for Task object.","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"kaldius"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"kaldius"},"content":"     * @param message name of Task","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"kaldius"},"content":"    public Task(String message) {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"kaldius"},"content":"        this.message \u003d message;","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"kaldius"},"content":"        this.completed \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"kaldius"},"content":"     * Factory method for a Task","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"kaldius"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"kaldius"},"content":"     * @param command the type of Task to create","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"kaldius"},"content":"     * @param input the contents of the task","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"kaldius"},"content":"     * @return the corresponding Task","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"kaldius"},"content":"     * @throws NoSuchCommandException if the command does not match any of the known","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"kaldius"},"content":"     * commands","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"kaldius"},"content":"     * @throws NoTaskNameException if there is no task name","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"kaldius"},"content":"    public static Task createTask(String command, String input) throws NoSuchCommandException, NoTaskNameException {","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"kaldius"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"kaldius"},"content":"            throw new NoTaskNameException(\"No task name, please try again.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"kaldius"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"kaldius"},"content":"        input \u003d input.trim();","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"kaldius"},"content":"        switch (command) {","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"kaldius"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"kaldius"},"content":"            return new ToDo(input);","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"kaldius"},"content":"        case \"event\":","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"kaldius"},"content":"            String[] messageAndEventDate \u003d Parser.splitBy(input, \"/at\");","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"kaldius"},"content":"            return new Event(messageAndEventDate[0], messageAndEventDate[1]);","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"kaldius"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"kaldius"},"content":"            String[] messageAndEndTime \u003d Parser.splitBy(input, \"/by\");","lastModifiedDate":"2021-09-08"},{"lineNumber":53,"author":{"gitId":"kaldius"},"content":"            return new Deadline(messageAndEndTime[0], messageAndEndTime[1]);","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"kaldius"},"content":"        default:","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"kaldius"},"content":"            throw new NoSuchCommandException(\"No such command!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"kaldius"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"kaldius"},"content":"     * Creates a Task from the String used in storage.","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"kaldius"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"kaldius"},"content":"     * @param line read from the storage file","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"kaldius"},"content":"     * @return the corresponding Task","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"kaldius"},"content":"     * @throws NoSuchCommandException if the command does not match any of the known","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"kaldius"},"content":"     * commands","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"kaldius"},"content":"     * @throws NoTaskNameException if there is no task name","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"kaldius"},"content":"    public static Task createTaskFromString(String line) throws NoTaskNameException, NoSuchCommandException {","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"kaldius"},"content":"        String[] parameters \u003d line.split(\"\\\\|\");","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"kaldius"},"content":"        String command;","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"kaldius"},"content":"        switch (parameters[0]) {","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"kaldius"},"content":"        case \"T\":","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"kaldius"},"content":"            command \u003d \"todo\";","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"kaldius"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"kaldius"},"content":"        case \"E\":","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"kaldius"},"content":"            command \u003d \"event\";","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"kaldius"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"kaldius"},"content":"        default:","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"kaldius"},"content":"            command \u003d \"deadline\";","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"kaldius"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"kaldius"},"content":"        String input \u003d parameters[2];","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"kaldius"},"content":"        Task task \u003d Task.createTask(command, input);","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"kaldius"},"content":"        if (parameters[1].equals(\"1\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"kaldius"},"content":"            task.doTask();","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"kaldius"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"kaldius"},"content":"        return task;","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":90,"author":{"gitId":"kaldius"},"content":"     * Overrides toString() method.","lastModifiedDate":"2021-08-18"},{"lineNumber":91,"author":{"gitId":"kaldius"},"content":"     * @return String representation of the Task object","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":93,"author":{"gitId":"kaldius"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":94,"author":{"gitId":"kaldius"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":95,"author":{"gitId":"kaldius"},"content":"        return \"[\" + (this.completed ? \"X\" : \" \") + \"] \" + this.message;","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":97,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":98,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":99,"author":{"gitId":"kaldius"},"content":"     * Sets the Task as complete.","lastModifiedDate":"2021-09-08"},{"lineNumber":100,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":101,"author":{"gitId":"kaldius"},"content":"    public void doTask() {","lastModifiedDate":"2021-08-18"},{"lineNumber":102,"author":{"gitId":"kaldius"},"content":"        this.completed \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":103,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":104,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":106,"author":{"gitId":"kaldius"},"content":"     * Sets the Task as complete.","lastModifiedDate":"2021-09-08"},{"lineNumber":107,"author":{"gitId":"kaldius"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":108,"author":{"gitId":"kaldius"},"content":"     * @param taskList the current TaskList","lastModifiedDate":"2021-09-08"},{"lineNumber":109,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":110,"author":{"gitId":"kaldius"},"content":"    public void doTask(TaskList taskList) {","lastModifiedDate":"2021-09-08"},{"lineNumber":111,"author":{"gitId":"kaldius"},"content":"        this.completed \u003d true;","lastModifiedDate":"2021-09-08"},{"lineNumber":112,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":113,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":114,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"kaldius"},"content":"     * Converts contents to a storable String.","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"kaldius"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"kaldius"},"content":"     * @return a String that represents this Task in storage","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"kaldius"},"content":"    public String toStorage() {","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"kaldius"},"content":"        return (this.completed ? \"1|\" : \"0|\") + this.message;","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":124,"author":{"gitId":"kaldius"},"content":"     * Returns the message field of the Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":125,"author":{"gitId":"kaldius"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":126,"author":{"gitId":"kaldius"},"content":"     * @return the message field as a String","lastModifiedDate":"2021-08-25"},{"lineNumber":127,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":128,"author":{"gitId":"kaldius"},"content":"    public String getMessage() {","lastModifiedDate":"2021-08-25"},{"lineNumber":129,"author":{"gitId":"kaldius"},"content":"        return this.message;","lastModifiedDate":"2021-08-25"},{"lineNumber":130,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":131,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":132,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":133,"author":{"gitId":"kaldius"},"content":"     * Overrides clone method.","lastModifiedDate":"2021-09-08"},{"lineNumber":134,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":135,"author":{"gitId":"kaldius"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":136,"author":{"gitId":"kaldius"},"content":"    public abstract Task clone();","lastModifiedDate":"2021-09-08"},{"lineNumber":137,"author":{"gitId":"kaldius"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"kaldius":137}},{"path":"src/main/java/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaldius"},"content":"package tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"kaldius"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"kaldius"},"content":" * The Todo class encapsulates all the details of each Todo.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"kaldius"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"kaldius"},"content":" * @author Quan Teng Foong","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"kaldius"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"kaldius"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"kaldius"},"content":"    public ToDo(String message) {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"kaldius"},"content":"        super(message);","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"kaldius"},"content":"     * Overrides toString() method.","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"kaldius"},"content":"     * @return String representation of the ToDo object.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"kaldius"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"kaldius"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"kaldius"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"kaldius"},"content":"     * Converts contents to a storable String.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"kaldius"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"kaldius"},"content":"     * @return a String that represents this ToDo in storage","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"kaldius"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"kaldius"},"content":"    public String toStorage() {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"kaldius"},"content":"        return \"T|\" + super.toStorage();","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"kaldius"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"kaldius"},"content":"    public Task clone() {","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"kaldius"},"content":"        return new ToDo(this.getMessage());","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"kaldius"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"kaldius":37}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"kaldius"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"kaldius"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"kaldius"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"kaldius"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"kaldius"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"kaldius"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"kaldius"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"kaldius"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"kaldius"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"kaldius"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"kaldius"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"kaldius"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"kaldius"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"kaldius"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"kaldius":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"kaldius"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"kaldius"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"kaldius"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"kaldius"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"kaldius"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"kaldius"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"kaldius"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"gui.MainWindow\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"kaldius"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"kaldius"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"kaldius"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"kaldius"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"kaldius"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"kaldius"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"kaldius"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"kaldius"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"kaldius"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"kaldius"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"kaldius":19}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaldius"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"kaldius"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"kaldius"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"kaldius"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"kaldius"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"kaldius"},"content":"import command.Command;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"kaldius"},"content":"import exceptions.NoSuchCommandException;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"kaldius"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"kaldius"},"content":" * JUnit test class for Parser.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"kaldius"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"kaldius"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"kaldius"},"content":"     * Tests if the Parser returns an equivalent ToDo object.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"kaldius"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"kaldius"},"content":"    public void parseToDo() {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"kaldius"},"content":"        String userInput \u003d \"todo homework\";","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"kaldius"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"kaldius"},"content":"            assertEquals(Command.of(\"todo\", \"homework\"), Parser.parse(userInput));","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"kaldius"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"kaldius"},"content":"            fail(\"Exception thrown: \" + e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"kaldius"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"kaldius"},"content":"     * Tests if the Parser returns an equivalent Event object.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"kaldius"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"kaldius"},"content":"    public void parseEvent() {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"kaldius"},"content":"        String userInput \u003d \"event lecture /at 2021-08-25\";","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"kaldius"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"kaldius"},"content":"            assertEquals(Command.of(\"event\", \"lecture /at 2021-08-25\"), Parser.parse(userInput));","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"kaldius"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"kaldius"},"content":"            fail(\"Exception thrown: \" + e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"kaldius"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"kaldius"},"content":"     * Tests if the Parser returns an equivalent Deadline object.","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"kaldius"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"kaldius"},"content":"    public void parseDeadline() {","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"kaldius"},"content":"        String userInput \u003d \"deadline submit assignment /by 2021-08-25\";","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"kaldius"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"kaldius"},"content":"            assertEquals(Command.of(\"deadline\", \"submit assignment /by 2021-08-25\"), Parser.parse(userInput));","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"kaldius"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"kaldius"},"content":"            fail(\"Exception thrown: \" + e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"kaldius"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"kaldius"},"content":"     * Tests if the correct exception is thrown when an invalid command is parsed.","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"kaldius"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"kaldius"},"content":"    public void noSuchCommandExceptionTest() {","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"kaldius"},"content":"        String userInput \u003d \"duke is stupid\";","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"kaldius"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"kaldius"},"content":"            assertThrows(NoSuchCommandException.class, () -\u003e Parser.parse(userInput));","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"kaldius"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"kaldius"},"content":"            fail(\"Unknown exception thrown: \" + e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"kaldius"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"kaldius"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"kaldius":69}},{"path":"src/test/java/duke/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaldius"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"kaldius"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"kaldius"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"kaldius"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"kaldius"},"content":"import java.io.File;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"kaldius"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"kaldius"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"kaldius"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"kaldius"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"kaldius"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"kaldius"},"content":"import tasks.Event;","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"kaldius"},"content":"import tasks.ToDo;","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"kaldius"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"kaldius"},"content":" * JUnit test class for Storage.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"kaldius"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"kaldius"},"content":"public class StorageTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"kaldius"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"kaldius"},"content":"    private String filePath;","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"kaldius"},"content":"    @BeforeEach","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"kaldius"},"content":"    public void setUp() {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"kaldius"},"content":"        this.filePath \u003d \"../../storage/testSave.txt\";","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"kaldius"},"content":"        this.storage \u003d new Storage(this.filePath);","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"kaldius"},"content":"     * Tests if an empty .txt file is created by the retrieve() method.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"kaldius"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"kaldius"},"content":"    public void creationTest() {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"kaldius"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"kaldius"},"content":"            storage.retrieve();","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"kaldius"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"kaldius"},"content":"            System.out.println(\"Creation error: \" + e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"kaldius"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"kaldius"},"content":"        assertTrue(new File(this.filePath).exists());","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"kaldius"},"content":"     * Tests if the save() method correctly saves a TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"kaldius"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"kaldius"},"content":"    public void saveTest() {","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"kaldius"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"kaldius"},"content":"        taskList.add(new ToDo(\"take your medicine\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"kaldius"},"content":"        taskList.add(new Event(\"family dinner\", \"2021-08-25\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"kaldius"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"kaldius"},"content":"            storage.save(taskList);","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"kaldius"},"content":"            FileReader fr \u003d new FileReader(this.filePath);","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"kaldius"},"content":"            BufferedReader br \u003d new BufferedReader(fr);","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"kaldius"},"content":"            String line \u003d br.lines().collect(Collectors.joining(\"\\n\")) + \"\\n\";","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"kaldius"},"content":"            assertEquals(taskList.toStorage(), line);","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"kaldius"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"kaldius"},"content":"            System.out.println(\"Save error: \" + e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"kaldius"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"kaldius"},"content":"     * Tests if the retrieve() method is able to properly retrieve the contents of the .txt file.","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"kaldius"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"kaldius"},"content":"    public void retrievalTest() {","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"kaldius"},"content":"        String actualString \u003d \"a\";","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"kaldius"},"content":"        String expectedString \u003d \"b\";","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"kaldius"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"kaldius"},"content":"            FileReader actualFile \u003d new FileReader(storage.retrieve());","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"kaldius"},"content":"            BufferedReader actualBr \u003d new BufferedReader(actualFile);","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"kaldius"},"content":"            actualString \u003d actualBr.lines().collect(Collectors.joining());","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"kaldius"},"content":"            FileReader expectedFile \u003d new FileReader(this.filePath);","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"kaldius"},"content":"            BufferedReader expectedBr \u003d new BufferedReader(expectedFile);","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"kaldius"},"content":"            expectedString \u003d expectedBr.lines().collect(Collectors.joining());","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"kaldius"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"kaldius"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"kaldius"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"kaldius"},"content":"        assertEquals(expectedString, actualString);","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"kaldius"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"kaldius":83}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kaldius"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"kaldius"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"kaldius"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"kaldius"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"kaldius"},"content":"import tasks.Deadline;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"kaldius"},"content":"import tasks.ToDo;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"kaldius"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"kaldius"},"content":" * JUnit test class for TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"kaldius"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"kaldius"},"content":"public class TaskListTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"kaldius"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"kaldius"},"content":"    @BeforeEach","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"kaldius"},"content":"    public void setUp() {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"kaldius"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"kaldius"},"content":"        this.taskList.add(new ToDo(\"get bread\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"kaldius"},"content":"        this.taskList.add(new Deadline(\"submit assignment\", \"2021-08-25\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"kaldius"},"content":"     * Tests if the TaskList toString() method works as expected.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"kaldius"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"kaldius"},"content":"    public void toStringTest() {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"kaldius"},"content":"        String expected \u003d \"      1. [T][ ] get bread\\n      2. [D][ ] submit assignment(by: Aug 25 2021)\\n\";","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"kaldius"},"content":"        assertEquals(expected, this.taskList.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"kaldius"},"content":"     * Tests if the TaskList toStorage() method works as expected.","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"kaldius"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"kaldius"},"content":"    public void toStorageTest() {","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"kaldius"},"content":"        String expected \u003d \"T|0|get bread\\nD|0|submit assignment/by 2021-08-25\\n\";","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"kaldius"},"content":"        assertEquals(expected, this.taskList.toStorage());","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"kaldius"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"kaldius":41}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kaldius"},"content":"todo borrow book","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"kaldius"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"kaldius"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"kaldius"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"kaldius"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"kaldius"},"content":"done 2","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"kaldius"},"content":"deadline pi /by Thursday 2359h","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"kaldius"},"content":"done 3","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"kaldius"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"kaldius":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"kaldius"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kaldius":1,"-":20}}]
