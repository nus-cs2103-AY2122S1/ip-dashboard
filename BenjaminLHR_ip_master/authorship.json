[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"BenjaminLHR"},"content":"3. After that, locate the `src/main/java/core/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"BenjaminLHR":1,"-":23}},{"path":"src/main/java/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package commands;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"BenjaminLHR"},"content":"import core.TaskList;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"BenjaminLHR"},"content":"import gui.Ui;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"BenjaminLHR"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"BenjaminLHR"},"content":"    public ByeCommand() {}","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"BenjaminLHR"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"BenjaminLHR"},"content":"    public void execute(TaskList taskList) {","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"BenjaminLHR"},"content":"        Ui.sayBye();","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"BenjaminLHR"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"BenjaminLHR"},"content":"    public boolean shouldExit() {","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"BenjaminLHR"},"content":"        return true;","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"BenjaminLHR"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"BenjaminLHR":19}},{"path":"src/main/java/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package commands;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"BenjaminLHR"},"content":"import core.TaskList;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"BenjaminLHR"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"BenjaminLHR"},"content":"    public abstract void execute(TaskList taskList);","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"BenjaminLHR"},"content":"    public abstract boolean shouldExit();","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"BenjaminLHR"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"BenjaminLHR":10}},{"path":"src/main/java/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package commands;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"BenjaminLHR"},"content":"import core.TaskList;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"BenjaminLHR"},"content":"import tasks.Deadline;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"BenjaminLHR"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"BenjaminLHR"},"content":"    private Deadline deadlineTask;","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"BenjaminLHR"},"content":"    public DeadlineCommand(String taskName, String date) {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"BenjaminLHR"},"content":"        deadlineTask \u003d new Deadline(taskName, date);","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"BenjaminLHR"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"BenjaminLHR"},"content":"    public void execute(TaskList taskList) {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"BenjaminLHR"},"content":"        taskList.addTask(deadlineTask);","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"BenjaminLHR"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"BenjaminLHR"},"content":"    public boolean shouldExit() {","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"BenjaminLHR"},"content":"        return false;","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"BenjaminLHR"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"BenjaminLHR":22}},{"path":"src/main/java/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package commands;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"BenjaminLHR"},"content":"import core.TaskList;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"BenjaminLHR"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"BenjaminLHR"},"content":"    private int indexToDelete;","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"BenjaminLHR"},"content":"    public DeleteCommand(int indexToDelete) {","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"BenjaminLHR"},"content":"        this.indexToDelete \u003d indexToDelete;","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"BenjaminLHR"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"BenjaminLHR"},"content":"    public void execute(TaskList taskList) {","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"BenjaminLHR"},"content":"        taskList.delete(indexToDelete);","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"BenjaminLHR"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"BenjaminLHR"},"content":"    public boolean shouldExit() {","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"BenjaminLHR"},"content":"        return false;","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"BenjaminLHR"},"content":"}","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"BenjaminLHR"},"content":"/*","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"BenjaminLHR"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"BenjaminLHR"},"content":"    private int indexOfCompleted;","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"BenjaminLHR"},"content":"    public DoneCommand(int indexOfCompleted) {","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"BenjaminLHR"},"content":"        this.indexOfCompleted \u003d indexOfCompleted;","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"BenjaminLHR"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"BenjaminLHR"},"content":"    public void execute(TaskList taskList) {","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"BenjaminLHR"},"content":"        taskList.markAsDone(indexOfCompleted);","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"BenjaminLHR"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"BenjaminLHR"},"content":"    public boolean shouldExit() {","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"BenjaminLHR"},"content":"        return false;","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"BenjaminLHR"},"content":"}","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"BenjaminLHR"},"content":" */","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"BenjaminLHR":41}},{"path":"src/main/java/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package commands;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"BenjaminLHR"},"content":"import core.TaskList;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"BenjaminLHR"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"BenjaminLHR"},"content":"    private int indexOfCompleted;","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"BenjaminLHR"},"content":"    public DoneCommand(int indexOfCompleted) {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"BenjaminLHR"},"content":"        this.indexOfCompleted \u003d indexOfCompleted;","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"BenjaminLHR"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"BenjaminLHR"},"content":"    public void execute(TaskList taskList) {","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"BenjaminLHR"},"content":"        taskList.markAsDone(indexOfCompleted);","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"BenjaminLHR"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"BenjaminLHR"},"content":"    public boolean shouldExit() {","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"BenjaminLHR"},"content":"        return false;","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"BenjaminLHR"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"BenjaminLHR":21}},{"path":"src/main/java/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package commands;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"BenjaminLHR"},"content":"import core.TaskList;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"BenjaminLHR"},"content":"import tasks.Event;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"BenjaminLHR"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"BenjaminLHR"},"content":"    private Event eventTask;","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"BenjaminLHR"},"content":"    public EventCommand(String taskName, String date) {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"BenjaminLHR"},"content":"        eventTask \u003d new Event(taskName, date);","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"BenjaminLHR"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"BenjaminLHR"},"content":"    public void execute(TaskList taskList) {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"BenjaminLHR"},"content":"        taskList.addTask(eventTask);","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"BenjaminLHR"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"BenjaminLHR"},"content":"    public boolean shouldExit() {","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"BenjaminLHR"},"content":"        return false;","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"BenjaminLHR"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"BenjaminLHR":22}},{"path":"src/main/java/commands/ExceptionalCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package commands;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"BenjaminLHR"},"content":"import core.DukeException;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"BenjaminLHR"},"content":"import core.TaskList;","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"BenjaminLHR"},"content":"import gui.Ui;","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"BenjaminLHR"},"content":"public class ExceptionalCommand extends Command {","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"BenjaminLHR"},"content":"    private Exception e;","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"BenjaminLHR"},"content":"    public ExceptionalCommand(Exception e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"BenjaminLHR"},"content":"        this.e \u003d e;","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"BenjaminLHR"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"BenjaminLHR"},"content":"    public void execute(TaskList taskList) {","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"BenjaminLHR"},"content":"        String message \u003d e.getMessage();","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"BenjaminLHR"},"content":"        Ui.formatAndPrint(message);","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"BenjaminLHR"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"BenjaminLHR"},"content":"    public boolean shouldExit() {","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"BenjaminLHR"},"content":"        return false;","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"BenjaminLHR"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"BenjaminLHR":24}},{"path":"src/main/java/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package commands;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"BenjaminLHR"},"content":"import core.TaskList;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"BenjaminLHR"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"BenjaminLHR"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"BenjaminLHR"},"content":"    public void execute(TaskList taskList) {","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"BenjaminLHR"},"content":"        taskList.listTasks();","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"BenjaminLHR"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"BenjaminLHR"},"content":"    public boolean shouldExit() {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"BenjaminLHR"},"content":"        return false;","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"BenjaminLHR"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"BenjaminLHR":15}},{"path":"src/main/java/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package commands;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"BenjaminLHR"},"content":"import core.TaskList;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"BenjaminLHR"},"content":"import tasks.Todo;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"BenjaminLHR"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"BenjaminLHR"},"content":"    private Todo todoTask;","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"BenjaminLHR"},"content":"    public TodoCommand(String taskName) {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"BenjaminLHR"},"content":"        todoTask \u003d new Todo(taskName);","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"BenjaminLHR"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"BenjaminLHR"},"content":"    public void execute(TaskList taskList) {","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"BenjaminLHR"},"content":"        taskList.addTask(todoTask);","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"BenjaminLHR"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"BenjaminLHR"},"content":"    public boolean shouldExit() {","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"BenjaminLHR"},"content":"        return false;","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"BenjaminLHR"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"BenjaminLHR":21}},{"path":"src/main/java/core/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package core;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"BenjaminLHR"},"content":"import commands.Command;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"BenjaminLHR"},"content":"import gui.Ui;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"BenjaminLHR"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"BenjaminLHR"},"content":"    public Duke() {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"BenjaminLHR"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"BenjaminLHR"},"content":"    private void run() {","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"BenjaminLHR"},"content":"        boolean shouldExit \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"BenjaminLHR"},"content":"        Ui.greet();","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"BenjaminLHR"},"content":"        while (!shouldExit) {","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"BenjaminLHR"},"content":"            String input \u003d Ui.readInput();","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"BenjaminLHR"},"content":"            Command command \u003d Parser.parse(input, taskList);","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"BenjaminLHR"},"content":"            command.execute(taskList);","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"BenjaminLHR"},"content":"            shouldExit \u003d command.shouldExit();","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"BenjaminLHR"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"BenjaminLHR"},"content":"        new Duke().run();","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"BenjaminLHR":23,"-":4}},{"path":"src/main/java/core/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package core;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"BenjaminLHR"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"BenjaminLHR"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"BenjaminLHR"},"content":"        super(message);","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"BenjaminLHR"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"BenjaminLHR":7}},{"path":"src/main/java/core/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package core;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"BenjaminLHR"},"content":"import commands.*;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"BenjaminLHR"},"content":"import helpful_functions.HelpfulFunctions;","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"BenjaminLHR"},"content":"public class Parser {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"BenjaminLHR"},"content":"    public static Command parse(String input, TaskList taskList) {","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"BenjaminLHR"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"BenjaminLHR"},"content":"            checkValiditiy(input, taskList);","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"BenjaminLHR"},"content":"            String[] splittedInput \u003d input.split(\" \");","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"BenjaminLHR"},"content":"            switch (splittedInput[0]) {","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"BenjaminLHR"},"content":"                case \"list\":","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"BenjaminLHR"},"content":"                    return new ListCommand();","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"BenjaminLHR"},"content":"                case \"done\":","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"BenjaminLHR"},"content":"                    return new DoneCommand(Integer.valueOf(splittedInput[1]));","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"BenjaminLHR"},"content":"                case \"delete\":","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"BenjaminLHR"},"content":"                    return new DeleteCommand(Integer.valueOf(splittedInput[1]));","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"BenjaminLHR"},"content":"                case \"bye\":","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"BenjaminLHR"},"content":"                    return new ByeCommand();","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"BenjaminLHR"},"content":"                case \"todo\":","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"BenjaminLHR"},"content":"                    return Parser.validTodoHandler(input);","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"BenjaminLHR"},"content":"                case \"deadline\":","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"BenjaminLHR"},"content":"                    return Parser.validDeadlineHandler(input);","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"BenjaminLHR"},"content":"                case \"event\":","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"BenjaminLHR"},"content":"                    return Parser.validEventHandler(input);","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"BenjaminLHR"},"content":"                default:","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"BenjaminLHR"},"content":"                    // This is for any other erroneous input we did not catch from checkValidity","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"BenjaminLHR"},"content":"                    DukeException e \u003d new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"BenjaminLHR"},"content":"                    return new ExceptionalCommand(e);","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"BenjaminLHR"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"BenjaminLHR"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"BenjaminLHR"},"content":"            return new ExceptionalCommand(e);","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"BenjaminLHR"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"BenjaminLHR"},"content":"    public static boolean checkValiditiy(String input, TaskList taskList) throws DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"BenjaminLHR"},"content":"        String[] splittedInput \u003d input.split(\" \");","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"BenjaminLHR"},"content":"        if (input.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"BenjaminLHR"},"content":"            throw new DukeException(\"☹ OOPS!!! The input cannot be empty.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"BenjaminLHR"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"BenjaminLHR"},"content":"        switch (splittedInput[0]) {","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"BenjaminLHR"},"content":"            case \"todo\":","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"BenjaminLHR"},"content":"                checkValidityTodo(input);","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"BenjaminLHR"},"content":"                break;","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"BenjaminLHR"},"content":"            case \"deadline\":","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"BenjaminLHR"},"content":"                checkValidityDeadline(input);","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"BenjaminLHR"},"content":"                break;","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"BenjaminLHR"},"content":"            case \"event\":","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"BenjaminLHR"},"content":"                checkValidityEvent(input);","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"BenjaminLHR"},"content":"                break;","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"BenjaminLHR"},"content":"            case \"done\":","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"BenjaminLHR"},"content":"                checkValidityDone(input, taskList);","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"BenjaminLHR"},"content":"                break;","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"BenjaminLHR"},"content":"            case \"delete\":","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"BenjaminLHR"},"content":"                checkValidityDelete(input, taskList);","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"BenjaminLHR"},"content":"                break;","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"BenjaminLHR"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"BenjaminLHR"},"content":"        return true;","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"BenjaminLHR"},"content":"    public static void checkValidityTodo(String input) throws DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":63,"author":{"gitId":"BenjaminLHR"},"content":"        String[] splittedInput \u003d input.split(\" \");","lastModifiedDate":"2021-08-19"},{"lineNumber":64,"author":{"gitId":"BenjaminLHR"},"content":"        if (splittedInput.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-19"},{"lineNumber":65,"author":{"gitId":"BenjaminLHR"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":66,"author":{"gitId":"BenjaminLHR"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":68,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"BenjaminLHR"},"content":"    public static void checkValidityDeadline(String input) throws DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":70,"author":{"gitId":"BenjaminLHR"},"content":"        String[] splittedInput \u003d input.split(\" \");","lastModifiedDate":"2021-08-19"},{"lineNumber":71,"author":{"gitId":"BenjaminLHR"},"content":"        if (splittedInput.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-19"},{"lineNumber":72,"author":{"gitId":"BenjaminLHR"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":73,"author":{"gitId":"BenjaminLHR"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":74,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":75,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":76,"author":{"gitId":"BenjaminLHR"},"content":"    public static void checkValidityEvent(String input) throws DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":77,"author":{"gitId":"BenjaminLHR"},"content":"        String[] splittedInput \u003d input.split(\" \");","lastModifiedDate":"2021-08-19"},{"lineNumber":78,"author":{"gitId":"BenjaminLHR"},"content":"        if (splittedInput.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-19"},{"lineNumber":79,"author":{"gitId":"BenjaminLHR"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":80,"author":{"gitId":"BenjaminLHR"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":81,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":82,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":83,"author":{"gitId":"BenjaminLHR"},"content":"    public static void checkValidityDone(String input, TaskList taskList) throws DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":84,"author":{"gitId":"BenjaminLHR"},"content":"        String[] splittedInput \u003d input.split(\" \");","lastModifiedDate":"2021-08-19"},{"lineNumber":85,"author":{"gitId":"BenjaminLHR"},"content":"        if (splittedInput.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-19"},{"lineNumber":86,"author":{"gitId":"BenjaminLHR"},"content":"            throw new DukeException(\"☹ OOPS!!! You must specify an index\");","lastModifiedDate":"2021-08-19"},{"lineNumber":87,"author":{"gitId":"BenjaminLHR"},"content":"        } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":88,"author":{"gitId":"BenjaminLHR"},"content":"            if (HelpfulFunctions.isInteger(splittedInput[1])) {","lastModifiedDate":"2021-08-19"},{"lineNumber":89,"author":{"gitId":"BenjaminLHR"},"content":"                int index \u003d Integer.parseInt(splittedInput[1]);","lastModifiedDate":"2021-08-19"},{"lineNumber":90,"author":{"gitId":"BenjaminLHR"},"content":"                if (index \u003c 1 || index \u003e taskList.getSize()) {","lastModifiedDate":"2021-08-19"},{"lineNumber":91,"author":{"gitId":"BenjaminLHR"},"content":"                    throw new DukeException(\"☹ OOPS!!! Your index is out of range\");","lastModifiedDate":"2021-08-19"},{"lineNumber":92,"author":{"gitId":"BenjaminLHR"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":93,"author":{"gitId":"BenjaminLHR"},"content":"            } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":94,"author":{"gitId":"BenjaminLHR"},"content":"                throw new DukeException(\"☹ OOPS!!! Your second argument must be an integer\");","lastModifiedDate":"2021-08-19"},{"lineNumber":95,"author":{"gitId":"BenjaminLHR"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":96,"author":{"gitId":"BenjaminLHR"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":97,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":98,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":99,"author":{"gitId":"BenjaminLHR"},"content":"    public static void checkValidityDelete(String input, TaskList taskList) throws DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":100,"author":{"gitId":"BenjaminLHR"},"content":"        String[] splittedInput \u003d input.split(\" \");","lastModifiedDate":"2021-08-19"},{"lineNumber":101,"author":{"gitId":"BenjaminLHR"},"content":"        if (splittedInput.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-19"},{"lineNumber":102,"author":{"gitId":"BenjaminLHR"},"content":"            throw new DukeException(\"☹ OOPS!!! You must specify an index\");","lastModifiedDate":"2021-08-19"},{"lineNumber":103,"author":{"gitId":"BenjaminLHR"},"content":"        } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":104,"author":{"gitId":"BenjaminLHR"},"content":"            if (HelpfulFunctions.isInteger(splittedInput[1])) {","lastModifiedDate":"2021-08-19"},{"lineNumber":105,"author":{"gitId":"BenjaminLHR"},"content":"                int index \u003d Integer.parseInt(splittedInput[1]);","lastModifiedDate":"2021-08-19"},{"lineNumber":106,"author":{"gitId":"BenjaminLHR"},"content":"                if (index \u003c 1 || index \u003e taskList.getSize()) {","lastModifiedDate":"2021-08-19"},{"lineNumber":107,"author":{"gitId":"BenjaminLHR"},"content":"                    throw new DukeException(\"☹ OOPS!!! Your index is out of range\");","lastModifiedDate":"2021-08-19"},{"lineNumber":108,"author":{"gitId":"BenjaminLHR"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":109,"author":{"gitId":"BenjaminLHR"},"content":"            } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":110,"author":{"gitId":"BenjaminLHR"},"content":"                throw new DukeException(\"☹ OOPS!!! Your second argument must be an integer\");","lastModifiedDate":"2021-08-19"},{"lineNumber":111,"author":{"gitId":"BenjaminLHR"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":112,"author":{"gitId":"BenjaminLHR"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":113,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":114,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":115,"author":{"gitId":"BenjaminLHR"},"content":"    public static Command validTodoHandler(String input) {","lastModifiedDate":"2021-08-19"},{"lineNumber":116,"author":{"gitId":"BenjaminLHR"},"content":"        String[] splittedInput \u003d input.split(\" \", 2);","lastModifiedDate":"2021-08-18"},{"lineNumber":117,"author":{"gitId":"BenjaminLHR"},"content":"        return new TodoCommand(splittedInput[1]);","lastModifiedDate":"2021-08-18"},{"lineNumber":118,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":119,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":120,"author":{"gitId":"BenjaminLHR"},"content":"    public static Command validDeadlineHandler(String input) {","lastModifiedDate":"2021-08-19"},{"lineNumber":121,"author":{"gitId":"BenjaminLHR"},"content":"        String details \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2021-08-18"},{"lineNumber":122,"author":{"gitId":"BenjaminLHR"},"content":"        String regexForDetails \u003d \"/by\";","lastModifiedDate":"2021-08-18"},{"lineNumber":123,"author":{"gitId":"BenjaminLHR"},"content":"        String splittedDetails[] \u003d details.split(regexForDetails);","lastModifiedDate":"2021-08-18"},{"lineNumber":124,"author":{"gitId":"BenjaminLHR"},"content":"        return new DeadlineCommand(splittedDetails[0].trim(), splittedDetails[1].trim());","lastModifiedDate":"2021-08-18"},{"lineNumber":125,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":126,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":127,"author":{"gitId":"BenjaminLHR"},"content":"    public static Command validEventHandler(String input) {","lastModifiedDate":"2021-08-19"},{"lineNumber":128,"author":{"gitId":"BenjaminLHR"},"content":"        String details \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2021-08-18"},{"lineNumber":129,"author":{"gitId":"BenjaminLHR"},"content":"        String regexForDetails \u003d \"/at\";","lastModifiedDate":"2021-08-18"},{"lineNumber":130,"author":{"gitId":"BenjaminLHR"},"content":"        String splittedDetails[] \u003d details.split(regexForDetails);","lastModifiedDate":"2021-08-18"},{"lineNumber":131,"author":{"gitId":"BenjaminLHR"},"content":"        return new EventCommand(splittedDetails[0].trim(), splittedDetails[1].trim());","lastModifiedDate":"2021-08-18"},{"lineNumber":132,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":133,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":134,"author":{"gitId":"BenjaminLHR"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"BenjaminLHR":134}},{"path":"src/main/java/core/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package core;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"BenjaminLHR"},"content":"import gui.Ui;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"BenjaminLHR"},"content":"import tasks.Task;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"BenjaminLHR"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"BenjaminLHR"},"content":"public class TaskList {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"BenjaminLHR"},"content":"    private ArrayList\u003cTask\u003e listOfTasks;","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"BenjaminLHR"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"BenjaminLHR"},"content":"        listOfTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"BenjaminLHR"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"BenjaminLHR"},"content":"        listOfTasks.add(task);","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"BenjaminLHR"},"content":"        String outputLine1 \u003d String.format(\"Got it. I\u0027ve added this task:\\n%s\\n\", task);","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"BenjaminLHR"},"content":"        String outputLine2 \u003d String.format(\"Now you have %s tasks in the list.\", listOfTasks.size());","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"BenjaminLHR"},"content":"        String output \u003d outputLine1 + outputLine2;","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"BenjaminLHR"},"content":"        Ui.formatAndPrint(output);","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"BenjaminLHR"},"content":"    public void listTasks() {","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"BenjaminLHR"},"content":"        StringBuilder sb \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"BenjaminLHR"},"content":"        int index \u003d 1;","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"BenjaminLHR"},"content":"        for (Task task : listOfTasks) {","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"BenjaminLHR"},"content":"            sb.append(String.format(\"%s. %s\\n\", index, task));","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"BenjaminLHR"},"content":"            index++;","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"BenjaminLHR"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"BenjaminLHR"},"content":"        // Removed the last \\n for nicer output","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"BenjaminLHR"},"content":"        Ui.formatAndPrint(sb.substring(0, sb.length() - 1));","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"BenjaminLHR"},"content":"    public void markAsDone(int index) {","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"BenjaminLHR"},"content":"        Task taskToMark \u003d listOfTasks.get(index - 1);","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"BenjaminLHR"},"content":"        taskToMark.setCompleted();","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"BenjaminLHR"},"content":"        String outputLine1 \u003d \"Nice! I\u0027ve marked this task as done:\\n\";","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"BenjaminLHR"},"content":"        String output \u003d outputLine1 + taskToMark;","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"BenjaminLHR"},"content":"        Ui.formatAndPrint(output);","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"BenjaminLHR"},"content":"    public void delete(int index) {","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"BenjaminLHR"},"content":"        Task taskToRemove \u003d listOfTasks.get(index - 1);","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"BenjaminLHR"},"content":"        listOfTasks.remove(index - 1);","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"BenjaminLHR"},"content":"        String outputLine1 \u003d \"Noted. I\u0027ve removed this task: \\n\";","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"BenjaminLHR"},"content":"        String outputLine2 \u003d taskToRemove.toString() + \"\\n\";","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"BenjaminLHR"},"content":"        String outputLine3 \u003d String.format(\"Now you have %s tasks in the list.\", listOfTasks.size());","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"BenjaminLHR"},"content":"        String output \u003d outputLine1 + outputLine2 + outputLine3;","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"BenjaminLHR"},"content":"        Ui.formatAndPrint(output);","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"BenjaminLHR"},"content":"    public int getSize() {","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"BenjaminLHR"},"content":"        return listOfTasks.size();","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"BenjaminLHR"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"BenjaminLHR":55}},{"path":"src/main/java/gui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package gui;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"BenjaminLHR"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"BenjaminLHR"},"content":"public class Ui {","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"BenjaminLHR"},"content":"    private static Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"BenjaminLHR"},"content":"//    public Ui() {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"BenjaminLHR"},"content":"//        sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"BenjaminLHR"},"content":"//    }","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"BenjaminLHR"},"content":"    public static void greet() {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"BenjaminLHR"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\");","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"BenjaminLHR"},"content":"        Ui.displayLine();","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"BenjaminLHR"},"content":"    public static void sayBye() {","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"BenjaminLHR"},"content":"        displayLine();","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"BenjaminLHR"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"BenjaminLHR"},"content":"        displayLine();","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"BenjaminLHR"},"content":"    public static void formatAndPrint(String output) {","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"BenjaminLHR"},"content":"        displayLine();","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"BenjaminLHR"},"content":"        System.out.println(output);","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"BenjaminLHR"},"content":"        displayLine();","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"BenjaminLHR"},"content":"    public static void displayLine() {","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"BenjaminLHR"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"BenjaminLHR"},"content":"    public static String readInput() {","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"BenjaminLHR"},"content":"        return sc.nextLine();","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"BenjaminLHR"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"BenjaminLHR":37}},{"path":"src/main/java/helpful_functions/HelpfulFunctions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package helpful_functions;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"BenjaminLHR"},"content":"public class HelpfulFunctions {","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"BenjaminLHR"},"content":"    public static boolean isInteger(String s) {","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"BenjaminLHR"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"BenjaminLHR"},"content":"            Integer.parseInt(s);","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"BenjaminLHR"},"content":"            return true;","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"BenjaminLHR"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"BenjaminLHR"},"content":"            return false;","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"BenjaminLHR"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"BenjaminLHR"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"BenjaminLHR":12}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package tasks;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"BenjaminLHR"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"BenjaminLHR"},"content":"    private String taskName;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"BenjaminLHR"},"content":"    private String date;","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"BenjaminLHR"},"content":"    private String taskSymbol \u003d \"D\";","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"BenjaminLHR"},"content":"    public Deadline(String taskName, String date) {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"BenjaminLHR"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"BenjaminLHR"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"BenjaminLHR"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"BenjaminLHR"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"BenjaminLHR"},"content":"        String statusIcon \u003d getStatusIcon();","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"BenjaminLHR"},"content":"        return String.format(\"[%s][%s] %s (by: %s)\", taskSymbol, statusIcon, taskName, date);","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"BenjaminLHR"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"BenjaminLHR":19}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package tasks;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"BenjaminLHR"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"BenjaminLHR"},"content":"    private String taskName;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"BenjaminLHR"},"content":"    private String date;","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"BenjaminLHR"},"content":"    private String taskSymbol \u003d \"E\";","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"BenjaminLHR"},"content":"    public Event(String taskName, String date) {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"BenjaminLHR"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"BenjaminLHR"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"BenjaminLHR"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"BenjaminLHR"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"BenjaminLHR"},"content":"        String statusIcon \u003d getStatusIcon();","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"BenjaminLHR"},"content":"        return String.format(\"[%s][%s] %s (at: %s)\", taskSymbol, statusIcon, taskName, date);","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"BenjaminLHR"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"BenjaminLHR":18}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package tasks;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"BenjaminLHR"},"content":"public class Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"BenjaminLHR"},"content":"    private boolean completed;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"BenjaminLHR"},"content":"    public Task() {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"BenjaminLHR"},"content":"        completed \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"BenjaminLHR"},"content":"//    private String taskName;","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"BenjaminLHR"},"content":"//    public Task(String taskName) {","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"BenjaminLHR"},"content":"//        completed \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"BenjaminLHR"},"content":"//        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"BenjaminLHR"},"content":"//    }","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"BenjaminLHR"},"content":"    public void setCompleted() {","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"BenjaminLHR"},"content":"        completed \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"BenjaminLHR"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"BenjaminLHR"},"content":"        return completed ? \"X\" : \" \";","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"BenjaminLHR"},"content":"//    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"BenjaminLHR"},"content":"//    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"BenjaminLHR"},"content":"//        String statusIcon \u003d completed ? \"X\" : \" \";","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"BenjaminLHR"},"content":"//        return String.format(\"[%s] %s\", statusIcon, taskName);","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"BenjaminLHR"},"content":"//    }","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"BenjaminLHR"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"BenjaminLHR":30}},{"path":"src/main/java/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"package tasks;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"BenjaminLHR"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"BenjaminLHR"},"content":"    private String taskName;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"BenjaminLHR"},"content":"    private String taskSymbol \u003d \"T\";","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"BenjaminLHR"},"content":"    public Todo(String taskName) {","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"BenjaminLHR"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"BenjaminLHR"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"BenjaminLHR"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"BenjaminLHR"},"content":"        String statusIcon \u003d getStatusIcon();","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"BenjaminLHR"},"content":"        return String.format(\"[%s][%s] %s\", taskSymbol, statusIcon, taskName);","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"BenjaminLHR"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"BenjaminLHR"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"BenjaminLHR":16}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"BenjaminLHR"},"content":"todo borrow book","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"BenjaminLHR"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"BenjaminLHR"},"content":"deadline return book /by 01/01/2022","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"BenjaminLHR"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"BenjaminLHR"},"content":"done 1","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"BenjaminLHR"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"BenjaminLHR"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"BenjaminLHR":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"BenjaminLHR"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\core\\Duke.java","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"BenjaminLHR"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"BenjaminLHR"},"content":"java -classpath ..\\bin core.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"BenjaminLHR":3,"-":19}}]
