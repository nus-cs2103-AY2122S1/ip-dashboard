[{"path":"src/main/java/BobCat.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-13"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"import exception.BobCatException;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"import executor.ExecutionUnit;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"import view.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"public class BobCat {","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"        Scanner scanObj \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-13"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"        ExecutionUnit executor \u003d new ExecutionUnit(\"memory/taskList.txt\");","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"        ui.respond(new String[]{\"Hello! I\u0027m BobCat!\", \"Trying to remember what happened...\"});","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"            executor.initStorage();","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"            ui.respond(new String[]{\"Memory file not found! Starting from blank state...\"});","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"        } catch (BobCatException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"            ui.respondError(\"Memory may have been corrupted! Starting from blank state...\");","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"            executor.clearStorage();","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":"        } finally {","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"            ui.respond(new String[] {\"Initialisation done!\", \"What can I do for you?\"});","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"        String inp \u003d \"\";","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"        while(!inp.equals(\"bye\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"Amadeus-Winarto"},"content":"            inp \u003d scanObj.nextLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"Amadeus-Winarto"},"content":"            try {","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"Amadeus-Winarto"},"content":"                String[] results \u003d executor.executeCommand(inp);","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"Amadeus-Winarto"},"content":"                ui.respond(results);","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"Amadeus-Winarto"},"content":"            } catch (BobCatException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"Amadeus-Winarto"},"content":"                ui.respondError(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"Amadeus-Winarto"},"content":"            }","lastModifiedDate":"2021-08-13"},{"lineNumber":35,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-08-13"},{"lineNumber":36,"author":{"gitId":"Amadeus-Winarto"},"content":"        scanObj.close();","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Amadeus-Winarto":36,"-":2}},{"path":"src/main/java/exception/BobCatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package exception;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"public class BobCatException extends RuntimeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"    public BobCatException(String errorMessage) {","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"Amadeus-Winarto":7}},{"path":"src/main/java/exception/CommandArityException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package exception;","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"public class CommandArityException extends ParserException {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"    public CommandArityException(String errorMessage) {","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"Amadeus-Winarto":7}},{"path":"src/main/java/exception/InvalidArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package exception;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"public class InvalidArgumentException extends ParserException{","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"    public InvalidArgumentException(String errorMessage) {","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Amadeus-Winarto":7}},{"path":"src/main/java/exception/InvalidOpsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package exception;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"public class InvalidOpsException extends LogicException{","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"    public InvalidOpsException(String errorMessage) {","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Amadeus-Winarto":7}},{"path":"src/main/java/exception/LogicException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package exception;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"public class LogicException extends BobCatException {","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"    public LogicException(String errorMessage ) {","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Amadeus-Winarto":7}},{"path":"src/main/java/exception/ParserException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package exception;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"public class ParserException extends BobCatException {","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"    public ParserException(String errorMessage) {","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Amadeus-Winarto":7}},{"path":"src/main/java/exception/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package exception;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"public class UnknownCommandException extends ParserException {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"    public UnknownCommandException(String errorMessage) {","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Amadeus-Winarto":7}},{"path":"src/main/java/executor/ExecutionUnit.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package executor;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"import executor.parser.QueryParser;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"import model.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"import model.task.Deadline;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"import model.task.Event;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"import model.task.Task;","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"import model.task.ToDo;","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.List;","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"public class ExecutionUnit {","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"    private final QueryParser parser \u003d new QueryParser();","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"    private final Storage storeExecutor \u003d new Storage();","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"    private TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"    private final String storagePath;","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"    public ExecutionUnit(String storagePath) {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"        this.storagePath \u003d storagePath;","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void initStorage() throws IOException {","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"        storeExecutor.initStorage(storagePath, taskList);","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void clearStorage() {","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"Amadeus-Winarto"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"Amadeus-Winarto"},"content":"    public String[] executeCommand(String query) throws IOException {","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"Amadeus-Winarto"},"content":"        String[] queryArr;","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"Amadeus-Winarto"},"content":"        queryArr \u003d parser.parse(query);","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"Amadeus-Winarto"},"content":"        String command \u003d queryArr[0];","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"Amadeus-Winarto"},"content":"        switch (command) {","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"Amadeus-Winarto"},"content":"            case \"list\":","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"Amadeus-Winarto"},"content":"                List\u003cString\u003e initialReply \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"Amadeus-Winarto"},"content":"                initialReply.add(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"Amadeus-Winarto"},"content":"                Task[] toShow \u003d taskList.getAllTasks();","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"Amadeus-Winarto"},"content":"                initialReply.addAll(Stream.iterate(1, x -\u003e x + 1)","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"Amadeus-Winarto"},"content":"                        .limit(toShow.length)","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"Amadeus-Winarto"},"content":"                        .map(num -\u003e num.toString() + \".\" + toShow[num - 1])","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"Amadeus-Winarto"},"content":"                        .collect(Collectors.toList()));","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"Amadeus-Winarto"},"content":"                return initialReply.toArray(new String[0]);","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"Amadeus-Winarto"},"content":"            case \"bye\":","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"Amadeus-Winarto"},"content":"                return new String[]{\"Bye! Hope to see you again soon!\"};","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"Amadeus-Winarto"},"content":"            case \"done\":","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"Amadeus-Winarto"},"content":"                Task markedTask \u003d taskList.markDone(Integer.parseInt(queryArr[1]));","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"Amadeus-Winarto"},"content":"                storeExecutor.saveStorage(storagePath, taskList);","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"Amadeus-Winarto"},"content":"                return new String[]{\"Nice! I\u0027ve marked this task as done:\", \"  \" + markedTask.toString()};","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"Amadeus-Winarto"},"content":"            case \"delete\":","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"Amadeus-Winarto"},"content":"                Task deletedTask \u003d taskList.deleteTaskByIdx(Integer.parseInt(queryArr[1]));","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"Amadeus-Winarto"},"content":"                storeExecutor.saveStorage(storagePath, taskList);","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"Amadeus-Winarto"},"content":"                return new String[]{\"Noted. I\u0027ve removed this task:\",","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"Amadeus-Winarto"},"content":"                        \"  \" + deletedTask.toString(),","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"Amadeus-Winarto"},"content":"                        \"Now you have \" + taskList.numTasks() + \" tasks in the list\"};","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"Amadeus-Winarto"},"content":"            default:","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"Amadeus-Winarto"},"content":"                Task toAdd;","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"Amadeus-Winarto"},"content":"                if (command.equals(\"todo\")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"Amadeus-Winarto"},"content":"                    toAdd \u003d new ToDo(queryArr[1]);","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"Amadeus-Winarto"},"content":"                } else if (command.equals(\"deadline\")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"Amadeus-Winarto"},"content":"                    toAdd \u003d new Deadline(queryArr[1], queryArr[2]);","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"Amadeus-Winarto"},"content":"                } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"Amadeus-Winarto"},"content":"                    toAdd \u003d new Event(queryArr[1], queryArr[2]);","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"Amadeus-Winarto"},"content":"                }","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"Amadeus-Winarto"},"content":"                Task addedTask \u003d taskList.push(toAdd);","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"Amadeus-Winarto"},"content":"                storeExecutor.saveStorage(storagePath, taskList);","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"Amadeus-Winarto"},"content":"                return new String[]{\"Got it. I\u0027ve added this task:\",","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"Amadeus-Winarto"},"content":"                        \"  \" + addedTask.toString(),","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"Amadeus-Winarto"},"content":"                        \"Now you have \" + taskList.numTasks() + \" tasks in the list\"};","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":76,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"Amadeus-Winarto":77}},{"path":"src/main/java/executor/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package executor;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"import executor.parser.StorageParser;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"import model.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"import model.task.Task;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.nio.file.StandardOpenOption;","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.List;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"public class Storage {","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void initStorage(String storagePath, TaskList taskList) throws IOException {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"        StorageParser storeParser \u003d new StorageParser();","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"        Path path \u003d Paths.get(storagePath);","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"        List\u003cString\u003e read \u003d Files.readAllLines(path);","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"        for (String storeCmd : read) {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"            Task t \u003d storeParser.parse(storeCmd);","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":"            taskList.push(t);","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"    // TODO: Find a better way to do this..","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void saveStorage(String storagePath, TaskList taskList) throws IOException {","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"Amadeus-Winarto"},"content":"        Path path \u003d Paths.get(storagePath);","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"Amadeus-Winarto"},"content":"        Files.createDirectories(path.getParent());","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"Amadeus-Winarto"},"content":"        Files.deleteIfExists(path);","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"Amadeus-Winarto"},"content":"        Files.createFile(path);","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"Amadeus-Winarto"},"content":"        Task[] all \u003d taskList.getAllTasks();","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"Amadeus-Winarto"},"content":"        BufferedWriter bw \u003d Files.newBufferedWriter(path, StandardOpenOption.APPEND);","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"Amadeus-Winarto"},"content":"        for (Task t : all) {","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"Amadeus-Winarto"},"content":"            bw.write(t.toString() + \"\\n\");","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"Amadeus-Winarto"},"content":"        bw.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"Amadeus-Winarto":41}},{"path":"src/main/java/executor/parser/BasicCommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package executor.parser;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"public class BasicCommandParser implements CommandParser{","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"    public String[] parse(String command, String[] commandArgs) {","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"        return new String[]{command};","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Amadeus-Winarto":8}},{"path":"src/main/java/executor/parser/CommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package executor.parser;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"public interface CommandParser {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"    String[] parse(String command, String[] commandArgs);","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Amadeus-Winarto":5}},{"path":"src/main/java/executor/parser/CreationCommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package executor.parser;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"import exception.CommandArityException;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"public class CreationCommandParser implements CommandParser {","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"    public String[] parse(String command, String[] commandArgs) {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"        if (command.equals(\"todo\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"            String commandArg \u003d String.join(\" \",","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"                    Arrays.copyOfRange(commandArgs, 1, commandArgs.length));","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"            if (commandArg.length() \u003c\u003d 0) {","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"                throw new CommandArityException(\"The description of a \" + command + \" cannot be empty.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"            return new String[]{command, commandArg};","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"            String args \u003d String.join(\" \",","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"                    Arrays.copyOfRange(commandArgs, 1, commandArgs.length));","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"            String[] argArr \u003d args.split(\"\\\\s(/by|/at)\");","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"            if (argArr[0].trim().length() \u003c\u003d 0) {","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":"                throw new CommandArityException(\"The description of a \" + command + \" cannot be empty.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"            } else if (argArr.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"                throw new CommandArityException(\"The date of a \" + command + \" cannot be empty.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"Amadeus-Winarto"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"            return new String[]{command, argArr[0].trim(), argArr[1].trim()};","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Amadeus-Winarto":29}},{"path":"src/main/java/executor/parser/MutationCommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package executor.parser;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"import exception.CommandArityException;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"import exception.InvalidArgumentException;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"public class MutationCommandParser implements CommandParser {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"    public String[] parse(String command, String[] commandArgs) {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"        if (commandArgs.length !\u003d 2) {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"            throw new CommandArityException(commandArgs.length \u003e 1","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"                    ? \"You\u0027ve entered too many indices. Multiple \" + command + \" is unsupported right now!\"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"                    : \"Index needs to be specified!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"            return new String[]{command, String.valueOf(Integer.parseInt(commandArgs[1]) - 1)};","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"            throw new InvalidArgumentException(\"You\u0027ve entered inappropriate argument/s to the command: \" + command);","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Amadeus-Winarto":20}},{"path":"src/main/java/executor/parser/QueryParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package executor.parser;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"import exception.UnknownCommandException;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.Set;","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"public class QueryParser {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"    private static final Set\u003cString\u003e taskCreation \u003d Set.of(\"todo\", \"event\", \"deadline\");","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"    private static final Set\u003cString\u003e taskMarking \u003d Set.of(\"done\", \"delete\");","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"    private static final Set\u003cString\u003e basicCommand \u003d Set.of(\"list\", \"bye\");","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"    BasicCommandParser basicCommandParser \u003d new BasicCommandParser();","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"    CreationCommandParser taskCreationParser \u003d new CreationCommandParser();","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"    MutationCommandParser taskMarkingParser \u003d new MutationCommandParser();","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"    public String[] parse(String query) {","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"        String[] queryArr \u003d query.split(\"\\\\s\");","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"        String command \u003d queryArr[0];","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"        if (basicCommand.contains(command)) {","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"            return basicCommandParser.parse(command, new String[0]);","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"        } else if (taskMarking.contains(command)){","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"            return taskMarkingParser.parse(command, queryArr);","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":"        } else if (taskCreation.contains(command)) {","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"            return taskCreationParser.parse(command, queryArr);","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"Amadeus-Winarto"},"content":"        throw new UnknownCommandException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"Amadeus-Winarto":27}},{"path":"src/main/java/executor/parser/StorageParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package executor.parser;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"import exception.ParserException;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"import model.task.Deadline;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"import model.task.Event;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"import model.task.Task;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"import model.task.ToDo;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"public class StorageParser {","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"    public Task parse(String stringRep) {","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"        char taskType \u003d stringRep.charAt(1);","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"        boolean isDone \u003d stringRep.charAt(4) \u003d\u003d \u0027X\u0027;","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"        if (taskType \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"            String description \u003d stringRep.split(\"]\\\\s\")[1];","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"            return new ToDo(description, isDone);","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"        } else if (taskType \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"            String description \u003d stringRep.split(\"]\\\\s\")[1].split(\"\\\\(\")[0].trim();","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":"            String time \u003d stringRep.split(\"by: \")[1].split(\"\\\\)\")[0];","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"            String parsedTime \u003d LocalDate.parse(time, DateTimeFormatter.ofPattern(\"dd MMM yyyy\"))","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"Amadeus-Winarto"},"content":"                                        .format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"            return new Deadline(description, isDone, parsedTime);","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"        } else if (taskType \u003d\u003d \u0027E\u0027){","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"Amadeus-Winarto"},"content":"            String description \u003d stringRep.split(\"]\\\\s\")[1].trim().split(\"\\\\(\")[0].trim();","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"Amadeus-Winarto"},"content":"            String time \u003d stringRep.split(\"at: \")[1].split(\"\\\\)\")[0].trim();","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"Amadeus-Winarto"},"content":"            String parsedTime \u003d LocalDate.parse(time, DateTimeFormatter.ofPattern(\"dd MMM yyyy\"))","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"Amadeus-Winarto"},"content":"                    .format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"Amadeus-Winarto"},"content":"            return new Event(description, isDone, parsedTime);","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"Amadeus-Winarto"},"content":"        } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"Amadeus-Winarto"},"content":"         throw new ParserException(\"Unable to parse line from storage. Is storage corrupted?\");","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"Amadeus-Winarto":38}},{"path":"src/main/java/model/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package model;","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"import exception.InvalidOpsException;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"import model.task.Deadline;","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"import model.task.Event;","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"import model.task.Task;","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"import model.task.ToDo;","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"public class TaskList {","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"    private final ArrayList\u003cTask\u003e storage;","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"    private int index;","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"        storage \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"        index \u003d 0;","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"    public Task push(Task t) {","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"        storage.add(t);","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":"        index +\u003d 1;","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"        return storage.get(index - 1);","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"    public Task markDone(int id) {","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"        if (id \u003e\u003d index || id \u003c 0) {","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"Amadeus-Winarto"},"content":"            throw new InvalidOpsException(\"Provided Index is out of bounds! Given index is \" +","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"Amadeus-Winarto"},"content":"                    (id + 1) + \" but there are \" + index + \" elements in the list\");","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"Amadeus-Winarto"},"content":"        storage.get(id).markDone();","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"Amadeus-Winarto"},"content":"        return storage.get(id);","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"Amadeus-Winarto"},"content":"    public Task[] getAllTasks() {","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"Amadeus-Winarto"},"content":"        return storage.toArray(new Task[0]);","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"Amadeus-Winarto"},"content":"    public Task deleteTaskByIdx(int id) {","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"Amadeus-Winarto"},"content":"        if (id \u003e\u003d index || id \u003c 0) {","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"Amadeus-Winarto"},"content":"            throw new InvalidOpsException(\"Provided Index is out of bounds!\");","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"Amadeus-Winarto"},"content":"        index -\u003d 1;","lastModifiedDate":"2021-08-16"},{"lineNumber":44,"author":{"gitId":"Amadeus-Winarto"},"content":"        return storage.remove(id);","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":47,"author":{"gitId":"Amadeus-Winarto"},"content":"    public int numTasks() {","lastModifiedDate":"2021-08-16"},{"lineNumber":48,"author":{"gitId":"Amadeus-Winarto"},"content":"        return index;","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":50,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"Amadeus-Winarto":51}},{"path":"src/main/java/model/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package model.task;","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"import exception.LogicException;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"    protected LocalDate dueDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"    public Deadline(String entry, Boolean status, String dueDate) {","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"        super(entry, status);","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"            this.dueDate \u003d LocalDate.parse(dueDate);","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"            throw new LogicException(\"Cannot understand given date. Is it in \\\"yyyy-mm-dd\\\" format?\");","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"    public Deadline(String entry, String dueDate) {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"        this(entry, false, dueDate);","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"    private String dateTimeFormatter(LocalDate dateTime) {","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"Amadeus-Winarto"},"content":"        return dateTime.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\")).trim();","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"Amadeus-Winarto"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"Amadeus-Winarto"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + dateTimeFormatter(dueDate) + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"Amadeus-Winarto":32}},{"path":"src/main/java/model/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package model.task;","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"import exception.LogicException;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"    protected LocalDate startTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"    public Event(String entry, Boolean status, String startTime) {","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"        super(entry, status);","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"            this.startTime \u003d LocalDate.parse(startTime);","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"            throw new LogicException(\"Cannot understand given date. Is it in \\\"yyyy-mm-dd\\\" format?\");","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"    public Event(String entry, String startTime) {","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":"        this(entry, false, startTime);","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"Amadeus-Winarto"},"content":"    private String dateTimeFormatter(LocalDate dateTime) {","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"        return dateTime.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"Amadeus-Winarto"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"Amadeus-Winarto"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + dateTimeFormatter(startTime) + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"Amadeus-Winarto":33}},{"path":"src/main/java/model/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package model.task;","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"public class Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"    private final String description;","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"    public Task(String entry, boolean status) {","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"        this.description \u003d entry;","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"        this.isDone \u003d status;","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"    public Task(String entry) {","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"        this(entry, false);","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void markDone() {","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void markIncomplete() {","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"        isDone \u003d false;","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"    private String getStatus() {","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"        return isDone ? \"X\" : \" \";","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"Amadeus-Winarto"},"content":"        return \"[\" + this.getStatus() + \"] \" + this.description;","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"Amadeus-Winarto":30}},{"path":"src/main/java/model/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package model.task;","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"    public ToDo(String entry, boolean status) {","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"        super(entry, status);","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"    public ToDo(String entry) {","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"        super(entry);","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"Amadeus-Winarto":17}},{"path":"src/main/java/view/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package view;","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"import exception.BobCatException;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"public class Ui {","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"    private static void hLine() {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"        System.out.println(\"\\t----------------------------------------------\");","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"    private static void display(String arg) { System.out.println(\"\\t\" + arg);}","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void respond(String[] reply) {","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"        hLine();","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"        for (int i \u003d 0; i \u003c reply.length - 1; i++) {","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"            display(reply[i]);","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"        display(reply[reply.length - 1]);","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"        hLine();","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void respond(String reply) {","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"        respond(new String[]{reply});","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void respondError(String errorMessage) {","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"Amadeus-Winarto"},"content":"        hLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"        System.out.print(\"\\t☹ OOPS!!! \");","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"Amadeus-Winarto"},"content":"        hLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void respondError(BobCatException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"Amadeus-Winarto"},"content":"        respondError(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"Amadeus-Winarto":34}},{"path":"src/test/java/BobCatTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"public class BobCatTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void dummyTest() {","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"Amadeus-Winarto":10}},{"path":"src/test/java/executor/ExecutionUnitTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package executor;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"import exception.CommandArityException;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"import java.util.List;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"public class ExecutionUnitTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void testCorrectInit() {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"            ExecutionUnit executor \u003d new ExecutionUnit(\"resource/taskList1.txt\");","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"            executor.initStorage();","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"        });","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void testIncorrectFilename() {","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertThrows(IOException.class, () -\u003e {","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"            ExecutionUnit executor \u003d new ExecutionUnit(\"resource/taskList.txt\");","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"            executor.initStorage();","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"Amadeus-Winarto"},"content":"        });","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void testTodoCreation() {","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"Amadeus-Winarto"},"content":"        String todoQuery \u003d \"todo eat breakfast\";","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"Amadeus-Winarto"},"content":"        String[] todoExpected \u003d new String[]{\"Got it. I\u0027ve added this task:\",","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"Amadeus-Winarto"},"content":"                                            \"  [T][ ] eat breakfast\",","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"Amadeus-Winarto"},"content":"                                            \"Now you have 1 tasks in the list\"};","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"Amadeus-Winarto"},"content":"            ExecutionUnit executor \u003d new ExecutionUnit(\"resource/taskList1.txt\");","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"Amadeus-Winarto"},"content":"            executor.initStorage();","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"Amadeus-Winarto"},"content":"            String[] todoActual \u003d executor.executeCommand(todoQuery);","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"Amadeus-Winarto"},"content":"            todoExpected[2] \u003d todoActual[2]; // Hack to avoid dependency on actual content of taskList1.txt","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"Amadeus-Winarto"},"content":"            assertArrayEquals(todoExpected, todoActual);","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"Amadeus-Winarto"},"content":"        });","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void testCommandArity() {","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"Amadeus-Winarto"},"content":"        String deadlineQuery \u003d \"deadline eat breakfast\";","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"Amadeus-Winarto"},"content":"        String eventQuery \u003d \"event eat breakfast\";","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"Amadeus-Winarto"},"content":"        String todoQuery \u003d \"todo\";","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"Amadeus-Winarto"},"content":"            ExecutionUnit executor \u003d new ExecutionUnit(\"resource/taskList2.txt\");","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"Amadeus-Winarto"},"content":"            executor.initStorage();","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"Amadeus-Winarto"},"content":"            assertAll(\"Throws Command Arity Exceptions\",","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"Amadeus-Winarto"},"content":"                    () -\u003e assertThrows(CommandArityException.class, () -\u003e executor.executeCommand(deadlineQuery)),","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"Amadeus-Winarto"},"content":"                    () -\u003e assertThrows(CommandArityException.class, () -\u003e executor.executeCommand(eventQuery)),","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"Amadeus-Winarto"},"content":"                    () -\u003e assertThrows(CommandArityException.class, () -\u003e executor.executeCommand(todoQuery)));","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"Amadeus-Winarto"},"content":"        });","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void testSaveFile() {","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"Amadeus-Winarto"},"content":"        String deadlineQuery \u003d \"deadline eat breakfast /by 2021-01-31\";","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"Amadeus-Winarto"},"content":"        String eventQuery \u003d \"event eat breakfast /at 2020-10-03\";","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"Amadeus-Winarto"},"content":"        String todoQuery \u003d \"todo eat breakfast\";","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"Amadeus-Winarto"},"content":"            ExecutionUnit executor \u003d new ExecutionUnit(\"resource/taskList2.txt\");","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"Amadeus-Winarto"},"content":"            executor.initStorage();","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"Amadeus-Winarto"},"content":"            executor.executeCommand(todoQuery);","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"Amadeus-Winarto"},"content":"            executor.executeCommand(eventQuery);","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"Amadeus-Winarto"},"content":"            executor.executeCommand(deadlineQuery);","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"Amadeus-Winarto"},"content":"            Path path \u003d Paths.get(\"resource/taskList2.txt\");","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"Amadeus-Winarto"},"content":"            List\u003cString\u003e read \u003d Files.readAllLines(path);","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"Amadeus-Winarto"},"content":"            int n \u003d read.size();","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"Amadeus-Winarto"},"content":"            assertEquals(\"[D][ ] eat breakfast (by: 31 Jan 2021)\", read.get(n - 1));","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"Amadeus-Winarto"},"content":"            assertEquals(\"[E][ ] eat breakfast (at: 03 Oct 2020)\", read.get(n - 2));","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"Amadeus-Winarto"},"content":"            assertEquals(\"[T][ ] eat breakfast\", read.get(n - 3));","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"Amadeus-Winarto"},"content":"        });","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"Amadeus-Winarto":85}},{"path":"src/test/java/executor/parser/QueryParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package executor.parser;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"public class QueryParserTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"    private final QueryParser parser \u003d new QueryParser();","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void testTodo() {","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertArrayEquals(parser.parse(\"todo eat breakfast\"), new String[]{\"todo\", \"eat breakfast\"});","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void testDeadline() {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertArrayEquals(parser.parse(\"deadline eat breakfast /by 2021-10-01\"), new String[]{\"deadline\", \"eat breakfast\", \"2021-10-01\"});","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void testEvent() {","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertArrayEquals(parser.parse(\"event eat breakfast /at 2021-10-01\"), new String[]{\"event\", \"eat breakfast\", \"2021-10-01\"});","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"Amadeus-Winarto":24}},{"path":"src/test/java/executor/parser/StorageParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"package executor.parser;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"import model.task.Deadline;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"import model.task.Event;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"import model.task.Task;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"import model.task.ToDo;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"public class StorageParserTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"    private final StorageParser parser \u003d new StorageParser();","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void testDeadline() {","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"        Task original \u003d new Deadline(\"eat breakfast\", \"2021-01-31\");","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"        Task afterParse \u003d parser.parse(original.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(original.toString(), afterParse.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void testTodo() {","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"Amadeus-Winarto"},"content":"        Task original \u003d new ToDo(\"eat breakfast\");","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"Amadeus-Winarto"},"content":"        Task afterParse \u003d parser.parse(original.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(original.toString(), afterParse.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"Amadeus-Winarto"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"Amadeus-Winarto"},"content":"    public void testEvent() {","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"Amadeus-Winarto"},"content":"        Task original \u003d new Event(\"eat breakfast\", \"2021-01-31\");","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"Amadeus-Winarto"},"content":"        Task afterParse \u003d parser.parse(original.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"Amadeus-Winarto"},"content":"        assertEquals(original.toString(), afterParse.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"Amadeus-Winarto"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"Amadeus-Winarto"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"Amadeus-Winarto":34}},{"path":"src/test/resource/taskList1.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"[T][ ] eat breakfast","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"[E][ ] eat breakfast (at: 03 Oct 2020)","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"[D][ ] eat breakfast (by: 31 Jan 2021)","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"[T][ ] eat breakfast","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"[T][ ] eat breakfast","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"Amadeus-Winarto":5}},{"path":"src/test/resource/taskList2.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"[T][ ] eat breakfast","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"[E][ ] eat breakfast (at: 03 Oct 2020)","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"[D][ ] eat breakfast (by: 31 Jan 2021)","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"[T][ ] eat breakfast","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"[E][ ] eat breakfast (at: 03 Oct 2020)","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"[D][ ] eat breakfast (by: 31 Jan 2021)","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"[T][ ] eat breakfast","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"[E][ ] eat breakfast (at: 03 Oct 2020)","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"[D][ ] eat breakfast (by: 31 Jan 2021)","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"[T][ ] eat breakfast","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"[E][ ] eat breakfast (at: 03 Oct 2020)","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"[D][ ] eat breakfast (by: 31 Jan 2021)","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"Amadeus-Winarto":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Amadeus-Winarto"},"content":"todo borrow book","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"Amadeus-Winarto"},"content":"deadline return book /by 2019-10-15","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"Amadeus-Winarto"},"content":"event project meeting /at 2019-10-15","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"Amadeus-Winarto"},"content":"done 3","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"Amadeus-Winarto"},"content":"done 1","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"Amadeus-Winarto"},"content":"done 2","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"Amadeus-Winarto"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"Amadeus-Winarto"},"content":"todo bye","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"Amadeus-Winarto"},"content":"todos","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"Amadeus-Winarto"},"content":"deadline","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"Amadeus-Winarto"},"content":"todo","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"Amadeus-Winarto"},"content":"event","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"Amadeus-Winarto"},"content":"bye","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"Amadeus-Winarto":13}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"Amadeus-Winarto"},"content":"# delete storage from previous run","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"Amadeus-Winarto"},"content":"if [ -e \"./memory\" ]","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"Amadeus-Winarto"},"content":"then","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"Amadeus-Winarto"},"content":"    rm -r ./memory","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"Amadeus-Winarto"},"content":"fi","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"Amadeus-Winarto"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"Amadeus-Winarto"},"content":"java -classpath ../bin BobCat \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Amadeus-Winarto":7,"-":37}}]
