[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"# Good Janet ChatBot","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"wpinrui"},"content":"This chat-bot is a greenfield Java project. It\u0027s named after Janet from _The Good Place_.","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"wpinrui":2,"-":1}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"wpinrui"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"wpinrui"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"wpinrui"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"wpinrui"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"wpinrui"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"wpinrui"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"wpinrui"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"wpinrui"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"wpinrui"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"wpinrui"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"wpinrui"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"wpinrui"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"wpinrui"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"wpinrui":14,"-":46}},{"path":"src/main/java/janet/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package janet;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"wpinrui"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"wpinrui"},"content":" * Represents the action requested by the user that Janet understands.","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"wpinrui"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"wpinrui"},"content":"public class Command {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":"    private String operation;","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":"    private int index;","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":"    private String description;","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"    private String time;","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"wpinrui"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"wpinrui"},"content":"     * Class constructor specifying an operation that requires no other input.","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"wpinrui"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"wpinrui"},"content":"     * @param operation the operation for Janet to execute","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"wpinrui"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"wpinrui"},"content":"    public Command(String operation) {","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"wpinrui"},"content":"        this.operation \u003d operation;","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"wpinrui"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"wpinrui"},"content":"     * Class constructor specifying an operation that takes a task index.","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"wpinrui"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"wpinrui"},"content":"     * @param operation The operation for Janet to execute","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"wpinrui"},"content":"     * @param index The index of the task in Janet\u0027s task list","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"wpinrui"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"wpinrui"},"content":"    public Command(String operation, int index) {","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"wpinrui"},"content":"        this.operation \u003d operation;","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"wpinrui"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"wpinrui"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"wpinrui"},"content":"     * Class constructor specifying an operation that takes a description.","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"wpinrui"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"wpinrui"},"content":"     * @param operation The operation for Janet to execute","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"wpinrui"},"content":"     * @param description Description of the task","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"wpinrui"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"wpinrui"},"content":"    public Command(String operation, String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"wpinrui"},"content":"        this.operation \u003d operation;","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"wpinrui"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"wpinrui"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"wpinrui"},"content":"     * Class constructor specifying an operation that takes a description and","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"wpinrui"},"content":"     * a time string. The time string will be converted to a LocalDate object","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"wpinrui"},"content":"     * if it is of the form YYYY-MM-DD.","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"wpinrui"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"wpinrui"},"content":"     * @param operation The operation for Janet to execute","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"wpinrui"},"content":"     * @param description Description of the task","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"wpinrui"},"content":"     * @param time Time that the task will occur / should be done by","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"wpinrui"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"wpinrui"},"content":"    public Command(String operation, String description, String time) {","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"wpinrui"},"content":"        this.operation \u003d operation;","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"wpinrui"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"wpinrui"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"wpinrui"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"wpinrui"},"content":"     * Returns the specific operation as a String that Janet is able to understand.","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"wpinrui"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"wpinrui"},"content":"     * @return Janet operation","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"wpinrui"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"wpinrui"},"content":"    public String getOperation() {","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"wpinrui"},"content":"        return operation;","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":67,"author":{"gitId":"wpinrui"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"wpinrui"},"content":"     * Returns the index of the task in Janet\u0027s task list for commands that require","lastModifiedDate":"2021-08-31"},{"lineNumber":69,"author":{"gitId":"wpinrui"},"content":"     * the user to specify it.","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"wpinrui"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"wpinrui"},"content":"     * @return Index of task in task list","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"wpinrui"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"wpinrui"},"content":"    public int getIndex() {","lastModifiedDate":"2021-08-18"},{"lineNumber":74,"author":{"gitId":"wpinrui"},"content":"        return index;","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":76,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":77,"author":{"gitId":"wpinrui"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"wpinrui"},"content":"     * Returns the description of the task for commands that require the user to","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"wpinrui"},"content":"     * specify it.","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"wpinrui"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"wpinrui"},"content":"     * @return Description of task specified by user","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"wpinrui"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"wpinrui"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-18"},{"lineNumber":84,"author":{"gitId":"wpinrui"},"content":"        return description;","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":86,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":87,"author":{"gitId":"wpinrui"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"wpinrui"},"content":"     * Returns the string representation of the time of tasks for commands that","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"wpinrui"},"content":"     * require the user to specify it.","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"wpinrui"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"wpinrui"},"content":"     * @return String representation of task time","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"wpinrui"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"wpinrui"},"content":"    public String getTime() {","lastModifiedDate":"2021-08-18"},{"lineNumber":94,"author":{"gitId":"wpinrui"},"content":"        return time;","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":96,"author":{"gitId":"wpinrui"},"content":"}","lastModifiedDate":"2021-08-18"},{"lineNumber":97,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":98,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"wpinrui":98}},{"path":"src/main/java/janet/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package janet;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"wpinrui"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"wpinrui"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"wpinrui"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":" * Represents a deadline task, which has a description and a date by which the","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":" * task should be completed.","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-13"},{"lineNumber":12,"author":{"gitId":"wpinrui"},"content":"    protected String by;","lastModifiedDate":"2021-08-13"},{"lineNumber":13,"author":{"gitId":"wpinrui"},"content":"    protected LocalDate byDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":15,"author":{"gitId":"wpinrui"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"wpinrui"},"content":"     * Class constructor that takes a description and a string which describes","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"wpinrui"},"content":"     * the deadline of the task. If the string is given in the form YYYY-MM-DD,","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"wpinrui"},"content":"     * a LocalDate object will be created to represent the date.","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"wpinrui"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"wpinrui"},"content":"     * @param description Description of the deadline task","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"wpinrui"},"content":"     * @param by          Deadline of the task","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"wpinrui"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"wpinrui"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-13"},{"lineNumber":24,"author":{"gitId":"wpinrui"},"content":"        super(description);","lastModifiedDate":"2021-08-13"},{"lineNumber":25,"author":{"gitId":"wpinrui"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-13"},{"lineNumber":26,"author":{"gitId":"wpinrui"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"wpinrui"},"content":"            byDate \u003d LocalDate.parse(by);","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"wpinrui"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"wpinrui"},"content":"            byDate \u003d null;","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"wpinrui"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"wpinrui"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"wpinrui"},"content":"     * Returns the LocalDate object which represents the deadline of the task","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"wpinrui"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"wpinrui"},"content":"     * @return Deadline of the task","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"wpinrui"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"wpinrui"},"content":"    public LocalDate getByDate() {","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"wpinrui"},"content":"        return byDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"wpinrui"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"wpinrui"},"content":"     * Returns a formatted String representing the deadline of the task in the form","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"wpinrui"},"content":"     * MMM d YYYY.","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"wpinrui"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"wpinrui"},"content":"     * @return Formatted date string","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"wpinrui"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"wpinrui"},"content":"    public String parseByDate() {","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"wpinrui"},"content":"        return getByDate().format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":51,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":52,"author":{"gitId":"wpinrui"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"wpinrui"},"content":"     * Returns the string representation of the deadline, including whether it","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"wpinrui"},"content":"     * has been completed and when it is due.","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"wpinrui"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"wpinrui"},"content":"     * @return String representation of deadline task","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"wpinrui"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"wpinrui"},"content":"    @Override","lastModifiedDate":"2021-08-13"},{"lineNumber":59,"author":{"gitId":"wpinrui"},"content":"    public String toString() {","lastModifiedDate":"2021-08-13"},{"lineNumber":60,"author":{"gitId":"wpinrui"},"content":"        return \"[D]\" + super.toString()","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"wpinrui"},"content":"                + \" (by: \"","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"wpinrui"},"content":"                + ((byDate \u003d\u003d null) ? by : parseByDate())","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"wpinrui"},"content":"                + \")\";","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":65,"author":{"gitId":"wpinrui"},"content":"}","lastModifiedDate":"2021-08-13"}],"authorContributionMap":{"wpinrui":65}},{"path":"src/main/java/janet/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package janet;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"wpinrui"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"wpinrui"},"content":"import java.util.Collections;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"wpinrui"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"wpinrui"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"wpinrui"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"wpinrui"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"wpinrui"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"wpinrui"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"wpinrui"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"wpinrui"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"wpinrui"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"wpinrui"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"wpinrui"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"wpinrui"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"wpinrui"},"content":"    private Label dialog;","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"wpinrui"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"wpinrui"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"wpinrui"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"wpinrui"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"wpinrui"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"wpinrui"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"wpinrui"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"wpinrui"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"wpinrui"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"wpinrui"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"wpinrui"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"wpinrui"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"wpinrui"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"wpinrui"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"wpinrui"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"wpinrui"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"wpinrui"},"content":"    private void flip() {","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"wpinrui"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"wpinrui"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"wpinrui"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"wpinrui"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"wpinrui"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"wpinrui"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"wpinrui"},"content":"    public static DialogBox getJanetDialog(String text, Image img) {","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"wpinrui"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"wpinrui"},"content":"        db.flip();","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"wpinrui"},"content":"        return db;","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"wpinrui"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"wpinrui":61}},{"path":"src/main/java/janet/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package janet;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"wpinrui"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"wpinrui"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"wpinrui"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":" * Represents an event task, which is a task that will happen at a given time.","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-13"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":"    protected String at;","lastModifiedDate":"2021-08-13"},{"lineNumber":12,"author":{"gitId":"wpinrui"},"content":"    protected LocalDate atDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":14,"author":{"gitId":"wpinrui"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"wpinrui"},"content":"     * Class constructor which takes in the description of the event task and a","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"wpinrui"},"content":"     * string that represents the time at which the event will take place. If the","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"wpinrui"},"content":"     * time string is given in the form YYYY-MM-DD, a LocalDate object will be","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"wpinrui"},"content":"     * created to represent this information.","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"wpinrui"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"wpinrui"},"content":"     * @param description Description of the event task","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"wpinrui"},"content":"     * @param at          Time at which the event will take place","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"wpinrui"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"wpinrui"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-13"},{"lineNumber":24,"author":{"gitId":"wpinrui"},"content":"        super(description);","lastModifiedDate":"2021-08-13"},{"lineNumber":25,"author":{"gitId":"wpinrui"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-13"},{"lineNumber":26,"author":{"gitId":"wpinrui"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"wpinrui"},"content":"            atDate \u003d LocalDate.parse(at);","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"wpinrui"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"wpinrui"},"content":"            atDate \u003d null;","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"wpinrui"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"wpinrui"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"wpinrui"},"content":"     * Returns the LocalDate object which represents the date that the event will take place","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"wpinrui"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"wpinrui"},"content":"     * @return Date of the event","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"wpinrui"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"wpinrui"},"content":"    public LocalDate getAtDate() {","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"wpinrui"},"content":"        return atDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"wpinrui"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"wpinrui"},"content":"     * Returns a formatted String representing the date of the event in the form","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"wpinrui"},"content":"     * MMM d YYYY.","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"wpinrui"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"wpinrui"},"content":"     * @return Formatted date string","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"wpinrui"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"wpinrui"},"content":"    public String parseAtDate() {","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"wpinrui"},"content":"        return getAtDate().format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":51,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":52,"author":{"gitId":"wpinrui"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"wpinrui"},"content":"     * Returns the string representation of the event, including whether it","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"wpinrui"},"content":"     * has been completed and when it will take place.","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"wpinrui"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"wpinrui"},"content":"     * @return String representation of event task","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"wpinrui"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"wpinrui"},"content":"    @Override","lastModifiedDate":"2021-08-13"},{"lineNumber":59,"author":{"gitId":"wpinrui"},"content":"    public String toString() {","lastModifiedDate":"2021-08-13"},{"lineNumber":60,"author":{"gitId":"wpinrui"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"wpinrui"},"content":"                + \" (at: \"","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"wpinrui"},"content":"                + ((atDate \u003d\u003d null) ? at : parseAtDate())","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"wpinrui"},"content":"                + \")\";","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":65,"author":{"gitId":"wpinrui"},"content":"}","lastModifiedDate":"2021-08-13"}],"authorContributionMap":{"wpinrui":65}},{"path":"src/main/java/janet/Janet.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package janet;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"wpinrui"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"wpinrui"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":" * Main class of the Janet chat-bot. When the main class is run, it creates an","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":" * instance of Janet which allows text-based user interaction.","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":"public class Janet {","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"wpinrui"},"content":"    private final Storage storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"wpinrui"},"content":"    private TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"wpinrui"},"content":"    private MainWindow window;","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":16,"author":{"gitId":"wpinrui"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"wpinrui"},"content":"     * Class constructor for Janet.","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"wpinrui"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"wpinrui"},"content":"    public Janet(MainWindow window) {","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"wpinrui"},"content":"        storage \u003d new Storage(\"janet.txt\");","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"wpinrui"},"content":"        this.window \u003d window;","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"wpinrui"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"wpinrui"},"content":"            tasks \u003d storage.readSave();","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"wpinrui"},"content":"        } catch (IOException | ClassNotFoundException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"wpinrui"},"content":"            System.out.println(e);","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"wpinrui"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"wpinrui"},"content":"    String getResponse(String input) throws IOException {","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"wpinrui"},"content":"        Command command;","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"wpinrui"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"wpinrui"},"content":"            command \u003d Parser.parseUserInput(input);","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"wpinrui"},"content":"        } catch (JanetException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"wpinrui"},"content":"            return e.toString();","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"wpinrui"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"wpinrui"},"content":"        Task task;","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"wpinrui"},"content":"        switch (command.getOperation()) {","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"wpinrui"},"content":"        case \"bye\":","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"wpinrui"},"content":"            Platform.exit();","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"wpinrui"},"content":"            return \"\";","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"wpinrui"},"content":"        case \"list\":","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"wpinrui"},"content":"            return Ui.taskListString(tasks);","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"wpinrui"},"content":"        case \"done\":","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"wpinrui"},"content":"            task \u003d tasks.get(command.getIndex() - 1);","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"wpinrui"},"content":"            task.setDone(true);","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"wpinrui"},"content":"            storage.writeSave(tasks);","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"wpinrui"},"content":"            return Ui.doneString(task);","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"wpinrui"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"wpinrui"},"content":"            task \u003d new ToDo(command.getDescription());","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"wpinrui"},"content":"            tasks.add(task);","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"wpinrui"},"content":"            storage.writeSave(tasks);","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"wpinrui"},"content":"            return Ui.addedString(task, tasks.size());","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"wpinrui"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"wpinrui"},"content":"            task \u003d new Deadline(command.getDescription(), command.getTime());","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"wpinrui"},"content":"            tasks.add(task);","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"wpinrui"},"content":"            storage.writeSave(tasks);","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"wpinrui"},"content":"            return Ui.addedString(task, tasks.size());","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"wpinrui"},"content":"        case \"event\":","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"wpinrui"},"content":"            task \u003d new Event(command.getDescription(), command.getTime());","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"wpinrui"},"content":"            tasks.add(task);","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"wpinrui"},"content":"            storage.writeSave(tasks);","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"wpinrui"},"content":"            return Ui.addedString(task, tasks.size());","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"wpinrui"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"wpinrui"},"content":"            try {","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"wpinrui"},"content":"                task \u003d tasks.get(command.getIndex() - 1);","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"wpinrui"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"wpinrui"},"content":"                return Ui.outOfBoundsString(command.getIndex());","lastModifiedDate":"2021-08-31"},{"lineNumber":68,"author":{"gitId":"wpinrui"},"content":"            }","lastModifiedDate":"2021-08-31"},{"lineNumber":69,"author":{"gitId":"wpinrui"},"content":"            tasks.delete(command.getIndex() - 1);","lastModifiedDate":"2021-08-31"},{"lineNumber":70,"author":{"gitId":"wpinrui"},"content":"            storage.writeSave(tasks);","lastModifiedDate":"2021-08-31"},{"lineNumber":71,"author":{"gitId":"wpinrui"},"content":"            return Ui.deletedString(task, tasks.size());","lastModifiedDate":"2021-08-31"},{"lineNumber":72,"author":{"gitId":"wpinrui"},"content":"        case \"find\":","lastModifiedDate":"2021-08-31"},{"lineNumber":73,"author":{"gitId":"wpinrui"},"content":"            TaskList filteredTasks \u003d tasks.find(command.getDescription());","lastModifiedDate":"2021-08-31"},{"lineNumber":74,"author":{"gitId":"wpinrui"},"content":"            return Ui.taskListString(filteredTasks);","lastModifiedDate":"2021-08-31"},{"lineNumber":75,"author":{"gitId":"wpinrui"},"content":"        default:","lastModifiedDate":"2021-08-31"},{"lineNumber":76,"author":{"gitId":"wpinrui"},"content":"            return \"\";","lastModifiedDate":"2021-08-31"},{"lineNumber":77,"author":{"gitId":"wpinrui"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":78,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"wpinrui":78,"-":1}},{"path":"src/main/java/janet/JanetException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package janet;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"wpinrui"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"wpinrui"},"content":" * Represents the exception to be thrown when invalid user input into Janet is","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"wpinrui"},"content":" * detected.","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"wpinrui"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":"public class JanetException extends Exception {","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":"    private final String log;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":"     * Class constructor which takes in a log which documents the reason for the","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"wpinrui"},"content":"     * exception being thrown.","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"wpinrui"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"wpinrui"},"content":"     * @param log Cause of the exception","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"wpinrui"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"wpinrui"},"content":"    public JanetException(String log) {","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"wpinrui"},"content":"        this.log \u003d log;","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"wpinrui"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"wpinrui"},"content":"     * Returns the exception log.","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"wpinrui"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"wpinrui"},"content":"     * @return Exception log","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"wpinrui"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"wpinrui"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"wpinrui"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"wpinrui"},"content":"        return log;","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"wpinrui"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"wpinrui":29}},{"path":"src/main/java/janet/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package janet;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"wpinrui"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"wpinrui"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"wpinrui"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":"public class Launcher {","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"wpinrui"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"wpinrui":12}},{"path":"src/main/java/janet/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package janet;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"wpinrui"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"wpinrui"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"wpinrui"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"wpinrui"},"content":" * A GUI for Janet using FXML.","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"wpinrui"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"wpinrui"},"content":"public class Main extends Application {","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"wpinrui"},"content":"    private Janet janet \u003d new Janet(new MainWindow());","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"wpinrui"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"wpinrui"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"wpinrui"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"wpinrui"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"wpinrui"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"wpinrui"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"wpinrui"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"wpinrui"},"content":"            stage.setTitle(\"Good Janet\");","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"wpinrui"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setJanet(janet);","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"wpinrui"},"content":"            stage.show();","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"wpinrui"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"wpinrui"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"wpinrui"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"wpinrui"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"wpinrui":32}},{"path":"src/main/java/janet/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package janet;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"wpinrui"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"wpinrui"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"wpinrui"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"wpinrui"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"wpinrui"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"wpinrui"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"wpinrui"},"content":" * Code reused from Jeffry Lum (https://se-education.org/)","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"wpinrui"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"wpinrui"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"wpinrui"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"wpinrui"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"wpinrui"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"wpinrui"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"wpinrui"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"wpinrui"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"wpinrui"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"wpinrui"},"content":"    private Button sendButton;","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"wpinrui"},"content":"    private Janet janet;","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"wpinrui"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Eleanor.jpg\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"wpinrui"},"content":"    private Image janetImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Janet.jpg\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"wpinrui"},"content":"    public MainWindow() {","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"wpinrui"},"content":"        janet \u003d new Janet(this);","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"wpinrui"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"wpinrui"},"content":"     * Initialises the scroll pane and displays a greeting to the user.","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"wpinrui"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"wpinrui"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"wpinrui"},"content":"    public void initialize() {","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"wpinrui"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"wpinrui"},"content":"        addDialogsInChatBox(janetDialog(Ui.INTRO_STRING));","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"wpinrui"},"content":"    public void setJanet(Janet janet) {","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"wpinrui"},"content":"        this.janet \u003d janet;","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"wpinrui"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"wpinrui"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Janet\u0027s reply and then appends them to","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"wpinrui"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"wpinrui"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"wpinrui"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"wpinrui"},"content":"    private void handleUserInput() throws IOException {","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"wpinrui"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"wpinrui"},"content":"        String response \u003d janet.getResponse(input);","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"wpinrui"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"wpinrui"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"wpinrui"},"content":"                DialogBox.getJanetDialog(response, janetImage)","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"wpinrui"},"content":"        );","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"wpinrui"},"content":"        userInput.clear();","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"wpinrui"},"content":"    void addDialogsInChatBox(DialogBox... dialogs) {","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"wpinrui"},"content":"        dialogContainer.getChildren().addAll(dialogs[0]);","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"wpinrui"},"content":"        if (dialogs.length !\u003d 1) {","lastModifiedDate":"2021-08-31"},{"lineNumber":68,"author":{"gitId":"wpinrui"},"content":"            addDialogsInChatBox(Arrays.copyOfRange(dialogs, 1, dialogs.length));","lastModifiedDate":"2021-08-31"},{"lineNumber":69,"author":{"gitId":"wpinrui"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":70,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":71,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":72,"author":{"gitId":"wpinrui"},"content":"    DialogBox janetDialog(String message) {","lastModifiedDate":"2021-08-31"},{"lineNumber":73,"author":{"gitId":"wpinrui"},"content":"        return DialogBox.getJanetDialog(message, janetImage);","lastModifiedDate":"2021-08-31"},{"lineNumber":74,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":75,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":76,"author":{"gitId":"wpinrui"},"content":"    DialogBox userDialog(String message) {","lastModifiedDate":"2021-08-31"},{"lineNumber":77,"author":{"gitId":"wpinrui"},"content":"        return DialogBox.getUserDialog(message, userImage);","lastModifiedDate":"2021-08-31"},{"lineNumber":78,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":79,"author":{"gitId":"wpinrui"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"wpinrui":79}},{"path":"src/main/java/janet/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package janet;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"wpinrui"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"wpinrui"},"content":" * Encapsulates the methods needed to parse the input given to Janet and convert","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"wpinrui"},"content":" * it into a Command that Janet understands.","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"wpinrui"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":"public class Parser {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"     * Returns a Command that Janet understands from a string passed to Janet by","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":"     * the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"wpinrui"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"wpinrui"},"content":"     * @param input String that user passed to Janet","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"wpinrui"},"content":"     * @return Command that Janet is able to execute","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"wpinrui"},"content":"     * @throws JanetException If invalid or insufficient arguments are provided","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"wpinrui"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"wpinrui"},"content":"    public static Command parseUserInput(String input) throws JanetException {","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"wpinrui"},"content":"        String[] inputStringParts \u003d input.split(\" \");","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"wpinrui"},"content":"        String operation \u003d inputStringParts[0];","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"wpinrui"},"content":"        switch (operation) {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"wpinrui"},"content":"        case \"bye\":","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"wpinrui"},"content":"            // Fallthrough","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"wpinrui"},"content":"        case \"list\":","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"wpinrui"},"content":"            return new Command(operation);","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"wpinrui"},"content":"        case \"done\":","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"wpinrui"},"content":"            if (inputStringParts.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"wpinrui"},"content":"                throw new JanetException(Ui.EXPECTED_DONE_INDEX_GOT_NONE);","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"wpinrui"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"wpinrui"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"wpinrui"},"content":"                int doneTaskNum \u003d Integer.parseInt(inputStringParts[1]);","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"wpinrui"},"content":"                return new Command(inputStringParts[0], doneTaskNum);","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"wpinrui"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"wpinrui"},"content":"                throw new JanetException(Ui.EXPECTED_DONE_INDEX_GOT_OTHER);","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"wpinrui"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"wpinrui"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"wpinrui"},"content":"            if (inputStringParts.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"wpinrui"},"content":"                throw new JanetException(Ui.EXPECTED_TO_DO_DESCRIPTION);","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"wpinrui"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"wpinrui"},"content":"            return new Command(inputStringParts[0], input.substring(5));","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"wpinrui"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"wpinrui"},"content":"            if (inputStringParts.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"wpinrui"},"content":"                throw new JanetException(Ui.EXPECTED_DEADLINE_DESCRIPTION);","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"wpinrui"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"wpinrui"},"content":"            String[] descriptionAndBy \u003d input.substring(9).split(\"/by \");","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"wpinrui"},"content":"            if (descriptionAndBy.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"wpinrui"},"content":"                throw new JanetException(Ui.EXPECTED_DEADLINE_BY);","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"wpinrui"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"wpinrui"},"content":"            return new Command(inputStringParts[0], descriptionAndBy[0], descriptionAndBy[1]);","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"wpinrui"},"content":"        case \"event\":","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"wpinrui"},"content":"            if (inputStringParts.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"wpinrui"},"content":"                throw new JanetException(Ui.EXPECTED_EVENT_DESCRIPTION);","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"wpinrui"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"wpinrui"},"content":"            String[] descriptionAndAt \u003d input.substring(6).split(\"/at \");","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"wpinrui"},"content":"            if (descriptionAndAt.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"wpinrui"},"content":"                throw new JanetException(Ui.EXPECTED_EVENT_AT);","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"wpinrui"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"wpinrui"},"content":"            return new Command(inputStringParts[0], descriptionAndAt[0], descriptionAndAt[1]);","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"wpinrui"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"wpinrui"},"content":"            if (inputStringParts.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"wpinrui"},"content":"                throw new JanetException(Ui.EXPECTED_DELETED_INDEX_GOT_NONE);","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"wpinrui"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"wpinrui"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"wpinrui"},"content":"                int delTaskNum \u003d Integer.parseInt(inputStringParts[1]);","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"wpinrui"},"content":"                return new Command(inputStringParts[0], delTaskNum);","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"wpinrui"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"wpinrui"},"content":"                throw new JanetException(Ui.EXPECTED_DELETED_INDEX_GOT_OTHER);","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"wpinrui"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"wpinrui"},"content":"        case \"find\":","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"wpinrui"},"content":"            if (inputStringParts.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-01"},{"lineNumber":70,"author":{"gitId":"wpinrui"},"content":"                throw new JanetException(Ui.EXPECTED_SEARCH_QUERY);","lastModifiedDate":"2021-08-31"},{"lineNumber":71,"author":{"gitId":"wpinrui"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"wpinrui"},"content":"            return new Command(inputStringParts[0], input.substring(5));","lastModifiedDate":"2021-09-01"},{"lineNumber":73,"author":{"gitId":"wpinrui"},"content":"        default:","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"wpinrui"},"content":"            throw new JanetException(Ui.UNRECOGNISED_OPERATION);","lastModifiedDate":"2021-08-31"},{"lineNumber":75,"author":{"gitId":"wpinrui"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"wpinrui"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"wpinrui":77}},{"path":"src/main/java/janet/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package janet;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"wpinrui"},"content":"import java.io.File;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"wpinrui"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"wpinrui"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"wpinrui"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":" * Encapsulates the methods needed to read and write to a save file.","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"wpinrui"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"wpinrui"},"content":"public class Storage {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"wpinrui"},"content":"    private final String path;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"wpinrui"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"wpinrui"},"content":"     * Class constructor which takes in the path of the save file.","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"wpinrui"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"wpinrui"},"content":"     * @param path Path of the save file","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"wpinrui"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"wpinrui"},"content":"    public Storage(String path) {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"wpinrui"},"content":"        this.path \u003d path;","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"wpinrui"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"wpinrui"},"content":"     * Writes the contents of Janet\u0027s task list to the save file","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"wpinrui"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"wpinrui"},"content":"     * @param taskList The list of tasks to be saved","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"wpinrui"},"content":"     * @throws IOException If the file cannot be written to","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"wpinrui"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"wpinrui"},"content":"    public void writeSave(TaskList taskList) throws IOException {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"wpinrui"},"content":"        FileOutputStream writeData \u003d new FileOutputStream(this.path);","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"wpinrui"},"content":"        ObjectOutputStream writeStream \u003d new ObjectOutputStream(writeData);","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"wpinrui"},"content":"        writeStream.writeObject(taskList);","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"wpinrui"},"content":"        writeStream.flush();","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"wpinrui"},"content":"        writeStream.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"wpinrui"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"wpinrui"},"content":"     * Reads the contents of the save file and returns the TaskList containing","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"wpinrui"},"content":"     * the saved tasks","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"wpinrui"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"wpinrui"},"content":"     * @return TaskList object containing saved tasks","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"wpinrui"},"content":"     * @throws IOException            If the reading of the file fails","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"wpinrui"},"content":"     * @throws ClassNotFoundException If the save data is of a missing class","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"wpinrui"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"wpinrui"},"content":"    public TaskList readSave() throws IOException, ClassNotFoundException {","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"wpinrui"},"content":"        File f \u003d new File(this.path);","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"wpinrui"},"content":"        if (!f.createNewFile()) { // save file exists","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"wpinrui"},"content":"            FileInputStream readData \u003d new FileInputStream(this.path);","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"wpinrui"},"content":"            ObjectInputStream readStream \u003d new ObjectInputStream(readData);","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"wpinrui"},"content":"            TaskList readList \u003d (TaskList) readStream.readObject();","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"wpinrui"},"content":"            readStream.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"wpinrui"},"content":"            return readList;","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"wpinrui"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"wpinrui"},"content":"            return new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"wpinrui"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"wpinrui"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"wpinrui":59}},{"path":"src/main/java/janet/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package janet;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"wpinrui"},"content":"import java.io.Serializable;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"wpinrui"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"wpinrui"},"content":" * Represents a task, which has a description and may be done or not done.","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":"public class Task implements Serializable {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":"    protected String description;","lastModifiedDate":"2021-08-13"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-13"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":12,"author":{"gitId":"wpinrui"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"wpinrui"},"content":"     * Class constructor which takes in the description of the task. The task","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"wpinrui"},"content":"     * is assumed to not be done at the time of creation.","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"wpinrui"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"wpinrui"},"content":"     * @param description Description of task","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"wpinrui"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"wpinrui"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-13"},{"lineNumber":19,"author":{"gitId":"wpinrui"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-13"},{"lineNumber":20,"author":{"gitId":"wpinrui"},"content":"        isDone \u003d false;","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":22,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":23,"author":{"gitId":"wpinrui"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"wpinrui"},"content":"     * Returns an \"X\" if the task is done, and a whitespace otherwise.","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"wpinrui"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"wpinrui"},"content":"     * @return \"X\" or whitespace depending on whether task is done","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"wpinrui"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"wpinrui"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-13"},{"lineNumber":29,"author":{"gitId":"wpinrui"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-13"},{"lineNumber":30,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":31,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":32,"author":{"gitId":"wpinrui"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"wpinrui"},"content":"     * Sets the task to be done or not done.","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"wpinrui"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"wpinrui"},"content":"     * @param bool Whether the task should be marked as done","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"wpinrui"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"wpinrui"},"content":"    public void setDone(boolean bool) {","lastModifiedDate":"2021-08-13"},{"lineNumber":38,"author":{"gitId":"wpinrui"},"content":"        isDone \u003d bool;","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":40,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":41,"author":{"gitId":"wpinrui"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"wpinrui"},"content":"     * Returns the string representation of the task, including whether it","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"wpinrui"},"content":"     * has been completed.","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"wpinrui"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"wpinrui"},"content":"     * @return String representation of task","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"wpinrui"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"wpinrui"},"content":"    @Override","lastModifiedDate":"2021-08-13"},{"lineNumber":48,"author":{"gitId":"wpinrui"},"content":"    public String toString() {","lastModifiedDate":"2021-08-13"},{"lineNumber":49,"author":{"gitId":"wpinrui"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), description);","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":51,"author":{"gitId":"wpinrui"},"content":"}","lastModifiedDate":"2021-08-13"}],"authorContributionMap":{"wpinrui":51}},{"path":"src/main/java/janet/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package janet;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"wpinrui"},"content":"import java.io.Serializable;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"wpinrui"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"wpinrui"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":" * Represents the list of tasks tracked by Janet.","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":"public class TaskList implements Serializable {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"wpinrui"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"wpinrui"},"content":"     * Class constructor which initialises a blank TaskList.","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"wpinrui"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"wpinrui"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"wpinrui"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"wpinrui"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"wpinrui"},"content":"     * Adds a task to the list.","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"wpinrui"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"wpinrui"},"content":"     * @param task Task to be added","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"wpinrui"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"wpinrui"},"content":"    public void add(Task task) {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"wpinrui"},"content":"        tasks.add(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"wpinrui"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"wpinrui"},"content":"     * Deletes the task at the specified index from the list, and returns the deleted task.","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"wpinrui"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"wpinrui"},"content":"     * @param index Index of the task in the list of tasks","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"wpinrui"},"content":"     * @return The task that has been deleted","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"wpinrui"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"wpinrui"},"content":"    public Task delete(int index) {","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"wpinrui"},"content":"        return tasks.remove(index);","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"wpinrui"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"wpinrui"},"content":"     * Returns the number of tasks in the task list.","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"wpinrui"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"wpinrui"},"content":"     * @return Number of tasks in list","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"wpinrui"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"wpinrui"},"content":"    public int size() {","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"wpinrui"},"content":"        return tasks.size();","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"wpinrui"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"wpinrui"},"content":"     * Returns the task stored at a particular index in the list.","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"wpinrui"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"wpinrui"},"content":"     * @param index Index of the task in the list of tasks","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"wpinrui"},"content":"     * @return Task found at that index in the list","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"wpinrui"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"wpinrui"},"content":"    public Task get(int index) {","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"wpinrui"},"content":"        return tasks.get(index);","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"wpinrui"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"wpinrui"},"content":"     * Returns a new TaskList containing only elements from the original TaskList","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"wpinrui"},"content":"     * which contain the query.","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"wpinrui"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"wpinrui"},"content":"     * @param query The string to be searched","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"wpinrui"},"content":"     * @return The filtered TaskList","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"wpinrui"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"wpinrui"},"content":"    public TaskList find(String query) {","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"wpinrui"},"content":"        TaskList output \u003d new TaskList();","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"wpinrui"},"content":"        for (int i \u003d 0; i \u003c this.size(); i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"wpinrui"},"content":"            if (this.get(i).toString().contains(query)) {","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"wpinrui"},"content":"                output.add(this.get(i));","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"wpinrui"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"wpinrui"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"wpinrui"},"content":"        return output;","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"wpinrui"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"wpinrui":73}},{"path":"src/main/java/janet/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package janet;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"wpinrui"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"wpinrui"},"content":" * Represents a to-do task, which is a task that has a description.","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"wpinrui"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"wpinrui"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-13"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":"     * Class constructor which takes in the description of the to-do.","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":"     * @param description Description of the to-do task","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"wpinrui"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"wpinrui"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-13"},{"lineNumber":14,"author":{"gitId":"wpinrui"},"content":"        super(description);","lastModifiedDate":"2021-08-13"},{"lineNumber":15,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":16,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"wpinrui"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"wpinrui"},"content":"     * Returns the string representation of the to-do, including whether it","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"wpinrui"},"content":"     * has been completed.","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"wpinrui"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"wpinrui"},"content":"     * @return String representation of to-do task","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"wpinrui"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"wpinrui"},"content":"    @Override","lastModifiedDate":"2021-08-13"},{"lineNumber":24,"author":{"gitId":"wpinrui"},"content":"    public String toString() {","lastModifiedDate":"2021-08-13"},{"lineNumber":25,"author":{"gitId":"wpinrui"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-13"},{"lineNumber":26,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":27,"author":{"gitId":"wpinrui"},"content":"}","lastModifiedDate":"2021-08-13"}],"authorContributionMap":{"wpinrui":27}},{"path":"src/main/java/janet/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package janet;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"wpinrui"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"wpinrui"},"content":" * Encapsulates methods needed for Janet to interact with the user through printing","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"wpinrui"},"content":" * messages to the console.","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"wpinrui"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":"public class Ui {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":"    static final String EXPECTED_SEARCH_QUERY \u003d \"The search query of a find operation cannot be empty.\";","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"    static final String INTRO_STRING \u003d \"Hey there! I\u0027m Good Janet. How many I help you today?\";","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":"    static final String OUTRO_STRING \u003d \"That was an excellent chat - I look forward to seeing you again soon!\";","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"wpinrui"},"content":"    static final String READ_SAVE_STRING \u003d \"Sorry, there was a problem reading the save file :(\";","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"wpinrui"},"content":"    static final String WRITE_SAVE_STRING \u003d \"Sorry, there was a problem saving your tasks :(\";","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"wpinrui"},"content":"    static final String NEW_SAVE_STRING \u003d \"Empty save file detected - loading a blank list.\";","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"wpinrui"},"content":"    static final String EXPECTED_DONE_INDEX_GOT_NONE \u003d","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"wpinrui"},"content":"            \"You need to indicate which task number should be marked as done.\";","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"wpinrui"},"content":"    static final String EXPECTED_DONE_INDEX_GOT_OTHER \u003d","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"wpinrui"},"content":"            \"The task to be marked as done should be indicated its list index.\";","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"wpinrui"},"content":"    static final String EXPECTED_TO_DO_DESCRIPTION \u003d \"The description of a todo cannot be empty.\";","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"wpinrui"},"content":"    static final String EXPECTED_DEADLINE_DESCRIPTION \u003d \"The description of a deadline cannot be empty.\";","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"wpinrui"},"content":"    static final String EXPECTED_DEADLINE_BY \u003d \"The done-by date of a deadline cannot be empty.\";","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"wpinrui"},"content":"    static final String EXPECTED_EVENT_DESCRIPTION \u003d \"The description of an event cannot be empty.\";","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"wpinrui"},"content":"    static final String EXPECTED_EVENT_AT \u003d \"The timing of an event cannot be empty.\";","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"wpinrui"},"content":"    static final String EXPECTED_DELETED_INDEX_GOT_NONE \u003d \"You need to indicate which task number should be deleted.\";","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"wpinrui"},"content":"    static final String EXPECTED_DELETED_INDEX_GOT_OTHER \u003d \"The task to be deleted should be indicated its list index.\";","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"wpinrui"},"content":"    static final String UNRECOGNISED_OPERATION \u003d \"Sorry, I do not understand this command.\";","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"wpinrui"},"content":"    static final String SHOW_MATCHES_STRING \u003d \"Here are the matching tasks in your list:\";","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"wpinrui"},"content":"    static final String INDEX_OUT_OF_BOUNDS_STRING \u003d \"Sorry, there is no task with the index number \";","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"wpinrui"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"wpinrui"},"content":"     * Returns a string representation of the tasks in the list.","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"wpinrui"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"wpinrui"},"content":"     * @param taskList Janet\u0027s list of tasks","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"wpinrui"},"content":"     * @return String representation of list","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"wpinrui"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"wpinrui"},"content":"    public static String taskListString(TaskList taskList) {","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"wpinrui"},"content":"        String output \u003d \"Here\u0027s what I found:\\n\";","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"wpinrui"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"wpinrui"},"content":"            output +\u003d String.format(\"%d. %s\\n\", i + 1, taskList.get(i));","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"wpinrui"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"wpinrui"},"content":"        return output;","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"wpinrui"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"wpinrui"},"content":"     * Returns a string to confirm that a task has been added to the list.","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"wpinrui"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"wpinrui"},"content":"     * @param task Task that has been added","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"wpinrui"},"content":"     * @param size Total number of tasks in the list","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"wpinrui"},"content":"     * @return String confirming that the task has been added","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"wpinrui"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"wpinrui"},"content":"    public static String addedString(Task task, int size) {","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"wpinrui"},"content":"        return String.format(\"Alright, I\u0027ve added this task: \\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"wpinrui"},"content":"                        + \"\\t%s\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"wpinrui"},"content":"                        + \"Now, you have %d tasks in the list.\\n\",","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"wpinrui"},"content":"                task, size);","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"wpinrui"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"wpinrui"},"content":"     * Returns a string to confirm that a task has marked as complete.","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"wpinrui"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"wpinrui"},"content":"     * @param task The task that has been marked as complete","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"wpinrui"},"content":"     * @return String confirming that the task has been marked as complete","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"wpinrui"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"wpinrui"},"content":"    public static String doneString(Task task) {","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"wpinrui"},"content":"        return String.format(\"Certainly, I\u0027ve marked this task as done: \\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"wpinrui"},"content":"                        + \"\\t%s\\n\",","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"wpinrui"},"content":"                task);","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"wpinrui"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":71,"author":{"gitId":"wpinrui"},"content":"     * Returns a string to confirm that a task has been deleted from the list.","lastModifiedDate":"2021-08-31"},{"lineNumber":72,"author":{"gitId":"wpinrui"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":73,"author":{"gitId":"wpinrui"},"content":"     * @param task Task that has been deleted","lastModifiedDate":"2021-08-31"},{"lineNumber":74,"author":{"gitId":"wpinrui"},"content":"     * @param size Total number of tasks left in the list","lastModifiedDate":"2021-08-31"},{"lineNumber":75,"author":{"gitId":"wpinrui"},"content":"     * @return String confirming that the task has been deleted","lastModifiedDate":"2021-08-31"},{"lineNumber":76,"author":{"gitId":"wpinrui"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":77,"author":{"gitId":"wpinrui"},"content":"    public static String deletedString(Task task, int size) {","lastModifiedDate":"2021-08-31"},{"lineNumber":78,"author":{"gitId":"wpinrui"},"content":"        return String.format(\"Certainly, I\u0027ve deleted this task: \\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":79,"author":{"gitId":"wpinrui"},"content":"                        + \"\\t%s\"","lastModifiedDate":"2021-08-31"},{"lineNumber":80,"author":{"gitId":"wpinrui"},"content":"                        + \"\\nNow, you have %d tasks in the list.\\n\",","lastModifiedDate":"2021-08-31"},{"lineNumber":81,"author":{"gitId":"wpinrui"},"content":"                task, size);","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"wpinrui"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"wpinrui"},"content":"     * Returns a string that is shown when a user tries to access a non-existent task index.","lastModifiedDate":"2021-08-31"},{"lineNumber":86,"author":{"gitId":"wpinrui"},"content":"     * @param index The index of the non-existent task that the user tried to access","lastModifiedDate":"2021-08-31"},{"lineNumber":87,"author":{"gitId":"wpinrui"},"content":"     * @return String to inform the user of index out of bounds error","lastModifiedDate":"2021-08-31"},{"lineNumber":88,"author":{"gitId":"wpinrui"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"wpinrui"},"content":"    public static String outOfBoundsString(int index) {","lastModifiedDate":"2021-08-31"},{"lineNumber":90,"author":{"gitId":"wpinrui"},"content":"        return INDEX_OUT_OF_BOUNDS_STRING + index + \".\";","lastModifiedDate":"2021-08-31"},{"lineNumber":91,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"wpinrui"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"wpinrui":92}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"wpinrui"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"wpinrui"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"wpinrui"},"content":"\u003c?import javafx.scene.effect.DropShadow?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"wpinrui"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"800.0\" style\u003d\"-fx-background-color: #333333;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/null\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"wpinrui"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" textFill\u003d\"WHITE\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\" maxHeight\u003d\"Infinity\"\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"wpinrui"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"wpinrui"},"content":"            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"20.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"wpinrui"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"wpinrui"},"content":"         \u003cfont\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"wpinrui"},"content":"            \u003cFont size\u003d\"14.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"wpinrui"},"content":"         \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"wpinrui"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"wpinrui"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"wpinrui"},"content":"            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"wpinrui"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"wpinrui"},"content":"         \u003ceffect\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"wpinrui"},"content":"            \u003cDropShadow blurType\u003d\"GAUSSIAN\" height\u003d\"10.0\" radius\u003d\"4.5\" width\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"wpinrui"},"content":"         \u003c/effect\u003e\u003c/ImageView\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"wpinrui"},"content":"  \u003c/children\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"wpinrui"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"wpinrui"},"content":"    \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"wpinrui"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"wpinrui"},"content":"   \u003copaqueInsets\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"wpinrui"},"content":"      \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"wpinrui"},"content":"   \u003c/opaqueInsets\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"wpinrui"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"wpinrui":33}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"wpinrui"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"wpinrui"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"wpinrui"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"wpinrui"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"800.0\" xmlns\u003d\"http://javafx.com/javafx/null\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"janet.MainWindow\"\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"wpinrui"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"wpinrui"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"724.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"wpinrui"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"724.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"wpinrui"},"content":"         \u003cfont\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"wpinrui"},"content":"            \u003cFont size\u003d\"14.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"wpinrui"},"content":"         \u003c/font\u003e\u003c/Button\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"wpinrui"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"800.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"wpinrui"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"wpinrui"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"788.0\" spacing\u003d\"10.0\" style\u003d\"-fx-background-color: #627d9c;\"\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"wpinrui"},"content":"               \u003copaqueInsets\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"wpinrui"},"content":"                  \u003cInsets /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"wpinrui"},"content":"               \u003c/opaqueInsets\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"wpinrui"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"wpinrui"},"content":"                  \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"wpinrui"},"content":"               \u003c/padding\u003e\u003c/VBox\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"wpinrui"},"content":"      \u003c/content\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"wpinrui"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"wpinrui"},"content":"  \u003c/children\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"wpinrui"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"wpinrui":30}},{"path":"src/test/java/janetTest/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package janetTest;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"wpinrui"},"content":"import janet.Deadline;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"wpinrui"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"wpinrui"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"    public void parseByDateTest_validDateString() {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":"        assertEquals(new Deadline(\"\", \"2020-12-31\").parseByDate(), \"Dec 31 2020\");","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"wpinrui"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"wpinrui"},"content":"    public void toStringTest_validDateString() {","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"wpinrui"},"content":"        assertEquals(new Deadline(\"Task\", \"2019-11-30\").toString(), \"[D][ ] Task (by: Nov 30 2019)\");","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"wpinrui"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"wpinrui"},"content":"    public void toStringTest_otherString() {","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"wpinrui"},"content":"        assertEquals(new Deadline(\"Task\", \"20191130\").toString(), \"[D][ ] Task (by: 20191130)\");","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"wpinrui"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"wpinrui":23}},{"path":"src/test/java/janetTest/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"package janetTest;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"wpinrui"},"content":"import janet.Task;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"wpinrui"},"content":"import janet.TaskList;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"wpinrui"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"public class TaskListTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"wpinrui"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"wpinrui"},"content":"    public void testAddTask() {","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"wpinrui"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"wpinrui"},"content":"        tasks.add(new Task(\"Description\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"wpinrui"},"content":"        assertEquals(tasks.get(0).toString(), new Task(\"Description\").toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"wpinrui"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"wpinrui"},"content":"    public void testRemoveTask_valid() {","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"wpinrui"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"wpinrui"},"content":"        tasks.add(new Task(\"Task\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"wpinrui"},"content":"        assertEquals(tasks.size(), 1);","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"wpinrui"},"content":"        assertEquals(tasks.get(0).toString(), new Task(\"Task\").toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"wpinrui"},"content":"        assertEquals(tasks.delete(0).toString(), new Task(\"Task\").toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"wpinrui"},"content":"        assertEquals(tasks.size(), 0);","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"wpinrui"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"wpinrui"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"wpinrui"},"content":"    public void testRemoveTask_invalid() {","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"wpinrui"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"wpinrui"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"wpinrui"},"content":"            assertEquals(tasks.delete(0).toString(), new Task(\"Task\").toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"wpinrui"},"content":"            fail();","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"wpinrui"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"wpinrui"},"content":"            assertEquals(e.getMessage(), \"Index 0 out of bounds for length 0\");","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"wpinrui"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"wpinrui"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"wpinrui"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"wpinrui":39}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wpinrui"},"content":"todo read book","lastModifiedDate":"2021-08-13"},{"lineNumber":2,"author":{"gitId":"wpinrui"},"content":"deadline return book /by June 6th","lastModifiedDate":"2021-08-13"},{"lineNumber":3,"author":{"gitId":"wpinrui"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2021-08-13"},{"lineNumber":4,"author":{"gitId":"wpinrui"},"content":"todo join sports club","lastModifiedDate":"2021-08-13"},{"lineNumber":5,"author":{"gitId":"wpinrui"},"content":"todo borrow book","lastModifiedDate":"2021-08-13"},{"lineNumber":6,"author":{"gitId":"wpinrui"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-13"},{"lineNumber":7,"author":{"gitId":"wpinrui"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-13"},{"lineNumber":8,"author":{"gitId":"wpinrui"},"content":"done 1","lastModifiedDate":"2021-08-13"},{"lineNumber":9,"author":{"gitId":"wpinrui"},"content":"done 4","lastModifiedDate":"2021-08-13"},{"lineNumber":10,"author":{"gitId":"wpinrui"},"content":"list","lastModifiedDate":"2021-08-13"},{"lineNumber":11,"author":{"gitId":"wpinrui"},"content":"delete 2","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"wpinrui"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"wpinrui"},"content":"delete","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"wpinrui"},"content":"todo","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"wpinrui"},"content":"blah","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"wpinrui"},"content":"bye","lastModifiedDate":"2021-08-13"}],"authorContributionMap":{"wpinrui":16}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"wpinrui"},"content":"java -classpath ..\\bin janet.Janet \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"wpinrui":1,"-":20}}]
