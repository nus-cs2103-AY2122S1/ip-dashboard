[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"hpkoh"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"hpkoh":1,"-":23}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"hpkoh"},"content":"    String javaFxVersion \u003d \u002716\u0027","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"hpkoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"hpkoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"hpkoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"hpkoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"hpkoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"hpkoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"hpkoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"hpkoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"hpkoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"hpkoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"hpkoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"hpkoh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"hpkoh"},"content":"    mainClassName \u003d \"Launcher\"","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"hpkoh"},"content":"    ignoreFailures \u003d true","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"hpkoh":17,"-":45}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"hpkoh"},"content":"D|0|return book|2019-10-15","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"hpkoh"},"content":"E|1|project meeting|2019-10-15|2019-10-15","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"hpkoh"},"content":"E|1|project meeting|2019-10-18|2019-10-18","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"hpkoh"},"content":"T|1|hehee","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"hpkoh"},"content":"D|0|ip|2021-09-17","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"hpkoh":5}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"hpkoh"},"content":"WingerIO is a task manager with a GUI.","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"hpkoh"},"content":"Start getting organized using simple text-based commands!","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"hpkoh"},"content":"***","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"hpkoh"},"content":"* [Quick Start](#quick-start)","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"hpkoh"},"content":"* [Features](#features)","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"hpkoh"},"content":"  * [Add todo task](#adding-a-todo-task-todo)","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"hpkoh"},"content":"  * [Add deadline task](#adding-a-deadline-task-deadline)","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"hpkoh"},"content":"  * [Add event task](#adding-a-event-task-event)","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"hpkoh"},"content":"  * [Mark task as done](#marking-a-task-as-done-done)","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"hpkoh"},"content":"  * [Delete task](#deleting-a-task-delete)","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"hpkoh"},"content":"  * [List tasks](#listing-all-tasks-list)","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"hpkoh"},"content":"  * [Find tasks](#finding-a-task-find)","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"hpkoh"},"content":"  * [Sort tasks](#sorting-tasks-sort)","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"hpkoh"},"content":"  * [Exit](#exiting-bye)","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"hpkoh"},"content":"* [Command Summary](#command-summary)","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"hpkoh"},"content":"***","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"hpkoh"},"content":"##Quick Start","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"hpkoh"},"content":"1. Ensure you have Java 11 or later installed","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"hpkoh"},"content":"2. Download the latest WingerIO.jar from [here](https://github.com/hpkoh/ip/releases/latest)","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"hpkoh"},"content":"3. Copy the file into the folder you want to use as the home folder","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"hpkoh"},"content":"4. Double-click the file to start the WingerIO!","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"hpkoh"},"content":"***","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"hpkoh"},"content":"### Adding a todo task: `todo`","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"hpkoh"},"content":"Add a todo task with only a description to the list of tasks.","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"hpkoh"},"content":"Format: `todo {description}`","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"hpkoh"},"content":"Example: `todo ip`","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"hpkoh"},"content":"### Adding a deadline task: `deadline`","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"hpkoh"},"content":"Add a task with a deadline to the list of tasks.","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"hpkoh"},"content":"Format: `deadline {description} /by {YYYY-MM-DD}`","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"hpkoh"},"content":"Example: `deadline ip /by 2021-09-17`","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"hpkoh"},"content":"### Adding a event task: `event`","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"hpkoh"},"content":"Add an event task with a start and end time to the list of tasks","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":50,"author":{"gitId":"hpkoh"},"content":"Format: `event {description} /from {YYYY-MM-DD} /to {YYYY-MM-DD}`","lastModifiedDate":"2021-09-15"},{"lineNumber":51,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":52,"author":{"gitId":"hpkoh"},"content":"Example: `event ip /from 2021-08-09 /to 2021-09-17`","lastModifiedDate":"2021-09-15"},{"lineNumber":53,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":54,"author":{"gitId":"hpkoh"},"content":"### Marking a task as done: `done`","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"hpkoh"},"content":"Mark a specific task as done","lastModifiedDate":"2021-09-15"},{"lineNumber":57,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"hpkoh"},"content":"Format: `done {index}`","lastModifiedDate":"2021-09-15"},{"lineNumber":59,"author":{"gitId":"hpkoh"},"content":"* mark task at the specific `{index}` as done ","lastModifiedDate":"2021-09-15"},{"lineNumber":60,"author":{"gitId":"hpkoh"},"content":"* index must be a positive integer","lastModifiedDate":"2021-09-15"},{"lineNumber":61,"author":{"gitId":"hpkoh"},"content":"* index must be less than or equal to the size of the task list","lastModifiedDate":"2021-09-15"},{"lineNumber":62,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":63,"author":{"gitId":"hpkoh"},"content":"Example: `done 3`","lastModifiedDate":"2021-09-15"},{"lineNumber":64,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":65,"author":{"gitId":"hpkoh"},"content":"### Deleting a task: `delete`","lastModifiedDate":"2021-09-15"},{"lineNumber":66,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":67,"author":{"gitId":"hpkoh"},"content":"Delete a specific task","lastModifiedDate":"2021-09-15"},{"lineNumber":68,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":69,"author":{"gitId":"hpkoh"},"content":"Format: `delete {index}`","lastModifiedDate":"2021-09-15"},{"lineNumber":70,"author":{"gitId":"hpkoh"},"content":"* delete task at the specific `{index}`","lastModifiedDate":"2021-09-15"},{"lineNumber":71,"author":{"gitId":"hpkoh"},"content":"* index must be a positive integer","lastModifiedDate":"2021-09-15"},{"lineNumber":72,"author":{"gitId":"hpkoh"},"content":"* index must be less than or equal to the size of the task list","lastModifiedDate":"2021-09-15"},{"lineNumber":73,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":74,"author":{"gitId":"hpkoh"},"content":"Example: `delete 3`","lastModifiedDate":"2021-09-15"},{"lineNumber":75,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":76,"author":{"gitId":"hpkoh"},"content":"### Listing all tasks: `list`","lastModifiedDate":"2021-09-15"},{"lineNumber":77,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":78,"author":{"gitId":"hpkoh"},"content":"Shows a list of all the tasks.","lastModifiedDate":"2021-09-15"},{"lineNumber":79,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":80,"author":{"gitId":"hpkoh"},"content":"Format: `list`","lastModifiedDate":"2021-09-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":82,"author":{"gitId":"hpkoh"},"content":"### Finding a task: `find`","lastModifiedDate":"2021-09-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":84,"author":{"gitId":"hpkoh"},"content":"Shows a list of all the tasks with given keyword in their description","lastModifiedDate":"2021-09-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":86,"author":{"gitId":"hpkoh"},"content":"Format: `find {keyword}`","lastModifiedDate":"2021-09-15"},{"lineNumber":87,"author":{"gitId":"hpkoh"},"content":"* Keywords can be partially match e.g `2103` will match `cs2103`","lastModifiedDate":"2021-09-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":89,"author":{"gitId":"hpkoh"},"content":"Example: `find ip`","lastModifiedDate":"2021-09-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":91,"author":{"gitId":"hpkoh"},"content":"### Sorting tasks: `sort`","lastModifiedDate":"2021-09-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":93,"author":{"gitId":"hpkoh"},"content":"Sort the tasks according to their due date.","lastModifiedDate":"2021-09-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":95,"author":{"gitId":"hpkoh"},"content":"Format: `sort`","lastModifiedDate":"2021-09-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":97,"author":{"gitId":"hpkoh"},"content":"### Exiting: `bye`","lastModifiedDate":"2021-09-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":99,"author":{"gitId":"hpkoh"},"content":"Exit WingerIO.","lastModifiedDate":"2021-09-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":101,"author":{"gitId":"hpkoh"},"content":"Format: `bye`","lastModifiedDate":"2021-09-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":103,"author":{"gitId":"hpkoh"},"content":"***","lastModifiedDate":"2021-09-15"},{"lineNumber":104,"author":{"gitId":"hpkoh"},"content":"##Command Summary","lastModifiedDate":"2021-09-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":106,"author":{"gitId":"hpkoh"},"content":"Command | Format","lastModifiedDate":"2021-09-15"},{"lineNumber":107,"author":{"gitId":"hpkoh"},"content":"------------ | -------------","lastModifiedDate":"2021-09-15"},{"lineNumber":108,"author":{"gitId":"hpkoh"},"content":"Add todo task | `todo {description}`","lastModifiedDate":"2021-09-15"},{"lineNumber":109,"author":{"gitId":"hpkoh"},"content":"Add deadline task | `deadline {description} /by {YYYY-MM-DD}`","lastModifiedDate":"2021-09-15"},{"lineNumber":110,"author":{"gitId":"hpkoh"},"content":"Add event task | `event {description} /from {YYYY-MM-DD} /to {YYYY-MM-DD}`","lastModifiedDate":"2021-09-15"},{"lineNumber":111,"author":{"gitId":"hpkoh"},"content":"Mark task as done | `done {index}`","lastModifiedDate":"2021-09-15"},{"lineNumber":112,"author":{"gitId":"hpkoh"},"content":"Delete task | `delete {index}`","lastModifiedDate":"2021-09-15"},{"lineNumber":113,"author":{"gitId":"hpkoh"},"content":"List tasks | `list`","lastModifiedDate":"2021-09-15"},{"lineNumber":114,"author":{"gitId":"hpkoh"},"content":"Find tasks | `find {keyword}`","lastModifiedDate":"2021-09-15"},{"lineNumber":115,"author":{"gitId":"hpkoh"},"content":"Sort tasks | `sort`","lastModifiedDate":"2021-09-15"},{"lineNumber":116,"author":{"gitId":"hpkoh"},"content":"Exit | `bye`","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"hpkoh":100,"-":16}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hpkoh"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"hpkoh"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"hpkoh"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"hpkoh"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"hpkoh"},"content":"public class Launcher {","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"hpkoh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"hpkoh"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"hpkoh"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"hpkoh":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hpkoh"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"hpkoh"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"hpkoh"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"hpkoh"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"hpkoh"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"hpkoh"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"hpkoh"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"hpkoh"},"content":"import javafx_controllers.MainWindow;","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"hpkoh"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"hpkoh"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"hpkoh"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"hpkoh"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"hpkoh"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"hpkoh"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"hpkoh"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"hpkoh"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"hpkoh"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"hpkoh"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"hpkoh"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"hpkoh"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"hpkoh"},"content":"            stage.setTitle(\"WingerIO\");","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"hpkoh"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"hpkoh"},"content":"            stage.show();","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"hpkoh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"hpkoh"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"hpkoh"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"hpkoh"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"hpkoh":32}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hpkoh"},"content":"package duke;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"hpkoh"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"hpkoh"},"content":"import duke.exceptions.InvalidInputException;","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"hpkoh"},"content":"import duke.commands.Command;","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"hpkoh"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"hpkoh"},"content":"import duke.utils.Parser;","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"hpkoh"},"content":"import duke.utils.Storage;","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"hpkoh"},"content":"public class Duke {","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"hpkoh"},"content":"    private final String FILE_PATH \u003d \"./data/duke.txt\";","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"hpkoh"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"hpkoh"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"hpkoh"},"content":"    public Duke() {","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"hpkoh"},"content":"        this.storage \u003d new Storage(FILE_PATH);","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"hpkoh"},"content":"        this.taskList \u003d new TaskList(this.storage.load());","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"hpkoh"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"hpkoh"},"content":"     * Return appropriate response as a String according to given input","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"hpkoh"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"hpkoh"},"content":"     * @param input user input","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"hpkoh"},"content":"     * @return the appropriate response","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"hpkoh"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"hpkoh"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"hpkoh"},"content":"        try {","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"hpkoh"},"content":"            Command command \u003d Parser.parse(input);","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"hpkoh"},"content":"            String message \u003d command.execute(this.taskList, this.storage);","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"hpkoh"},"content":"            this.storage.save(this.taskList.getFormattedData());","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"hpkoh"},"content":"            return message;","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"hpkoh"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"hpkoh"},"content":"            return e.getMessage();","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"hpkoh"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"hpkoh"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"hpkoh":40}},{"path":"src/main/java/duke/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hpkoh"},"content":"package duke.commands;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"hpkoh"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"hpkoh"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"hpkoh"},"content":"import duke.utils.Storage;","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"hpkoh"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"hpkoh"},"content":"    private static final String NEW_TASK_MSG \u003d \"New task added:\";","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"hpkoh"},"content":"    private Task task;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"hpkoh"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"hpkoh"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"hpkoh"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"hpkoh"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"hpkoh"},"content":"        tasks.add(this.task);","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"hpkoh"},"content":"        String message \u003d NEW_TASK_MSG + \"\\n\" + this.task.toString() + \"\\n\" + tasks.getTaskCountString();","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"hpkoh"},"content":"        return message;","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"hpkoh"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"hpkoh":25}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hpkoh"},"content":"package duke.commands;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"hpkoh"},"content":"import duke.exceptions.OutOfTaskListRangeException;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"hpkoh"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"hpkoh"},"content":"import duke.utils.Storage;","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"hpkoh"},"content":"public abstract class Command {","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"hpkoh"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"hpkoh"},"content":"     * Executes the command generated from user input","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"hpkoh"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"hpkoh"},"content":"     * @param tasks current list of tasks","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"hpkoh"},"content":"     * @param storage Storage responsible for accessing and storing Duke data","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"hpkoh"},"content":"     * @return the string representation of the command","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"hpkoh"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"hpkoh"},"content":"    public abstract String execute(TaskList tasks, Storage storage) throws OutOfTaskListRangeException;","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"hpkoh"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"hpkoh":17}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hpkoh"},"content":"package duke.commands;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"hpkoh"},"content":"import duke.exceptions.OutOfTaskListRangeException;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"hpkoh"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"hpkoh"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"hpkoh"},"content":"import duke.utils.Storage;","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"hpkoh"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"hpkoh"},"content":"    private static final String DELETE_MSG \u003d \"The following have been deleted:\";","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"hpkoh"},"content":"    private int index;","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"hpkoh"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"hpkoh"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"hpkoh"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"hpkoh"},"content":"    public String execute(TaskList tasks, Storage storage) throws OutOfTaskListRangeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"hpkoh"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"hpkoh"},"content":"            Task task \u003d tasks.delete(this.index);","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"hpkoh"},"content":"            String message \u003d DELETE_MSG + \"\\n\" + task.toString() + \"\\n\" + tasks.getTaskCountString();","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"hpkoh"},"content":"            return message;","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"hpkoh"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"hpkoh"},"content":"            throw new OutOfTaskListRangeException(","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"hpkoh"},"content":"                    \"Index out of task list range!\\n\" +","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"hpkoh"},"content":"                    \"Task list only has \" + tasks.getSize() + \" tasks!\");","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"hpkoh"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"hpkoh"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"hpkoh":34}},{"path":"src/main/java/duke/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hpkoh"},"content":"package duke.commands;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"hpkoh"},"content":"import duke.exceptions.OutOfTaskListRangeException;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"hpkoh"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"hpkoh"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"hpkoh"},"content":"import duke.utils.Storage;","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"hpkoh"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"hpkoh"},"content":"    private static final String DONE_MSG \u003d \"Well done.\";","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"hpkoh"},"content":"    private int index;","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"hpkoh"},"content":"    public DoneCommand(int index) {","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"hpkoh"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"hpkoh"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"hpkoh"},"content":"    public String execute(TaskList tasks, Storage storage) throws OutOfTaskListRangeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"hpkoh"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"hpkoh"},"content":"            Task task \u003d tasks.get(this.index);","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"hpkoh"},"content":"            task.markAsDone();","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"hpkoh"},"content":"            String message \u003d DONE_MSG + \"\\n\" + task.toString() + \"\\n\" + tasks.getTaskCountString();","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"hpkoh"},"content":"            return message;","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"hpkoh"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"hpkoh"},"content":"            throw new OutOfTaskListRangeException(","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"hpkoh"},"content":"                    \"Index out of task list range!\\n\" +","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"hpkoh"},"content":"                    \"Task list only has \" + tasks.getSize() + \" tasks!\");","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"hpkoh"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"hpkoh"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"hpkoh":35}},{"path":"src/main/java/duke/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hpkoh"},"content":"package duke.commands;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"hpkoh"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"hpkoh"},"content":"import duke.utils.Storage;","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"hpkoh"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"hpkoh"},"content":"    private static final String EXIT_MSG \u003d \"Oh hey, is that a reason to leave?\";","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"hpkoh"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"hpkoh"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"hpkoh"},"content":"        return EXIT_MSG;","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"hpkoh"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"hpkoh":13}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hpkoh"},"content":"package duke.commands;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"hpkoh"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"hpkoh"},"content":"import duke.utils.Storage;","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"hpkoh"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"hpkoh"},"content":"    private static final String FIND_MESSAGE \u003d \"Here are the matching tasks in your list:\";","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"hpkoh"},"content":"    private static final String NO_MATCH_MESSAGE \u003d \"Sorry no tasks with keyword found!\";","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"hpkoh"},"content":"    private String keyword;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"hpkoh"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"hpkoh"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"hpkoh"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"hpkoh"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"hpkoh"},"content":"        String matchingTasks \u003d tasks.find(this.keyword);","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"hpkoh"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"hpkoh"},"content":"            return NO_MATCH_MESSAGE;","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"hpkoh"},"content":"        } else {","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"hpkoh"},"content":"            String message \u003d FIND_MESSAGE + \"\\n\" + matchingTasks;","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"hpkoh"},"content":"            return message;","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"hpkoh"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"hpkoh"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"hpkoh":29}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hpkoh"},"content":"package duke.commands;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"hpkoh"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"hpkoh"},"content":"import duke.utils.Storage;","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"hpkoh"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"hpkoh"},"content":"    private static final String TASK_MSG \u003d \"Here are your tasks:\";","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"hpkoh"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"hpkoh"},"content":"        String message \u003d TASK_MSG + \"\\n\" + tasks.toString();","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"hpkoh"},"content":"        return message;","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"hpkoh"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"hpkoh"},"content":"    public String toString() {","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"hpkoh"},"content":"        return TASK_MSG;","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"hpkoh"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"hpkoh":20}},{"path":"src/main/java/duke/commands/SortCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hpkoh"},"content":"package duke.commands;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"hpkoh"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"hpkoh"},"content":"import duke.utils.Storage;","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"hpkoh"},"content":"public class SortCommand extends Command{","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"hpkoh"},"content":"    private static final String SORT_MSG \u003d \"Here are your tasks sorted:\";","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"hpkoh"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"hpkoh"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"hpkoh"},"content":"        tasks.sort();","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"hpkoh"},"content":"        String message \u003d SORT_MSG + \"\\n\" + tasks.toString();","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"hpkoh"},"content":"        return message;","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"hpkoh"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"hpkoh":17}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hpkoh"},"content":"package duke.exceptions;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"hpkoh"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"hpkoh"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"hpkoh"},"content":"        super(message);","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"hpkoh"},"content":"}","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"hpkoh":9}},{"path":"src/main/java/duke/exceptions/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hpkoh"},"content":"package duke.exceptions;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"hpkoh"},"content":"public class InvalidInputException extends DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"hpkoh"},"content":"    public InvalidInputException(String message) {","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"hpkoh"},"content":"        super(message);","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"hpkoh"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"hpkoh":8}},{"path":"src/main/java/duke/exceptions/OutOfTaskListRangeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hpkoh"},"content":"package duke.exceptions;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"hpkoh"},"content":"public class OutOfTaskListRangeException extends DukeException{","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"hpkoh"},"content":"    public OutOfTaskListRangeException(String message) {","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"hpkoh"},"content":"        super(message);","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"hpkoh"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"hpkoh":7}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hpkoh"},"content":"package duke.tasks;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"hpkoh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"hpkoh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"hpkoh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"hpkoh"},"content":"    private LocalDate date;","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"hpkoh"},"content":"    public Deadline(String description, LocalDate date) {","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"hpkoh"},"content":"        super(description, \"[D]\", false);","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"hpkoh"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"hpkoh"},"content":"    public Deadline(String description, LocalDate date, boolean status) {","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"hpkoh"},"content":"        super(description, \"[D]\", status);","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"hpkoh"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"hpkoh"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"hpkoh"},"content":"    public LocalDate getDueDate() {","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"hpkoh"},"content":"        return this.date;","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"hpkoh"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"hpkoh"},"content":"    public String getFormattedData() {","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"hpkoh"},"content":"        String formattedStatus \u003d super.isDone() ? \"1|\" : \"0|\";","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"hpkoh"},"content":"        return \"D|\" + formattedStatus + super.getDescription()","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"hpkoh"},"content":"            + \"|\" + this.date.toString();","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"hpkoh"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"hpkoh"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"hpkoh"},"content":"        return super.toString() + \" (by: \" + this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"hpkoh"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"hpkoh"},"content":"    public boolean equals(Object other){","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"hpkoh"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"hpkoh"},"content":"            return true;","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"hpkoh"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"hpkoh"},"content":"        if (other instanceof Deadline) {","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"hpkoh"},"content":"            return this.getDescription().equals(((Deadline) other).getDescription())","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"hpkoh"},"content":"                    \u0026\u0026 this.getDueDate().equals(((Deadline) other).getDueDate());","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"hpkoh"},"content":"        } else {","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"hpkoh"},"content":"            return false;","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"hpkoh"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"hpkoh"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"hpkoh":49}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hpkoh"},"content":"package duke.tasks;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"hpkoh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"hpkoh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"hpkoh"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"hpkoh"},"content":"    private LocalDate startDate;","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"hpkoh"},"content":"    private LocalDate endDate;","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"hpkoh"},"content":"    public Event(String description, LocalDate startDate, LocalDate endDate) {","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"hpkoh"},"content":"        super(description, \"[E]\", false);","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"hpkoh"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"hpkoh"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"hpkoh"},"content":"    public Event(String description, LocalDate startDate, LocalDate endDate, boolean status) {","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"hpkoh"},"content":"        super(description, \"[E]\", status);","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"hpkoh"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"hpkoh"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"hpkoh"},"content":"    public LocalDate getEndDate() {","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"hpkoh"},"content":"        return this.endDate;","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"hpkoh"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"hpkoh"},"content":"    public LocalDate getDueDate() {","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"hpkoh"},"content":"        return this.startDate;","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"hpkoh"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"hpkoh"},"content":"    public String getFormattedData() {","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"hpkoh"},"content":"        String formattedStatus \u003d super.isDone() ? \"1|\" : \"0|\";","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"hpkoh"},"content":"        return \"E|\" + formattedStatus + super.getDescription()","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"hpkoh"},"content":"                + \"|\" + this.startDate.toString()","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"hpkoh"},"content":"                + \"|\" + this.endDate.toString();","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"hpkoh"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"hpkoh"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"hpkoh"},"content":"        return super.toString() + \" (from \"","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"hpkoh"},"content":"                + this.startDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"hpkoh"},"content":"                + \" to \" + this.startDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"hpkoh"},"content":"                + \")\";","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"hpkoh"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"hpkoh"},"content":"    public boolean equals(Object other){","lastModifiedDate":"2021-09-15"},{"lineNumber":50,"author":{"gitId":"hpkoh"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2021-09-15"},{"lineNumber":51,"author":{"gitId":"hpkoh"},"content":"            return true;","lastModifiedDate":"2021-09-15"},{"lineNumber":52,"author":{"gitId":"hpkoh"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":53,"author":{"gitId":"hpkoh"},"content":"        if (other instanceof Event) {","lastModifiedDate":"2021-09-15"},{"lineNumber":54,"author":{"gitId":"hpkoh"},"content":"            return this.getDescription().equals(((Event) other).getDescription())","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"hpkoh"},"content":"                    \u0026\u0026 this.getDueDate().equals(((Event) other).getDueDate())","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"hpkoh"},"content":"                    \u0026\u0026 this.getEndDate().equals(((Event) other).getEndDate());","lastModifiedDate":"2021-09-15"},{"lineNumber":57,"author":{"gitId":"hpkoh"},"content":"        } else {","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"hpkoh"},"content":"            return false;","lastModifiedDate":"2021-09-15"},{"lineNumber":59,"author":{"gitId":"hpkoh"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":60,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":61,"author":{"gitId":"hpkoh"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"hpkoh":61}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hpkoh"},"content":"package duke.tasks;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"hpkoh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"hpkoh"},"content":"public abstract class Task implements Comparable\u003cTask\u003e{","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"hpkoh"},"content":"    private String type;","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"hpkoh"},"content":"    private String description;","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"hpkoh"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"hpkoh"},"content":"    private String statusSymbol;","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"hpkoh"},"content":"    public Task(String description, String type, boolean status) {","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"hpkoh"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"hpkoh"},"content":"        this.isDone \u003d status;","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"hpkoh"},"content":"        this.statusSymbol \u003d status ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"hpkoh"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"hpkoh"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"hpkoh"},"content":"     * Marks task as done","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"hpkoh"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"hpkoh"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"hpkoh"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"hpkoh"},"content":"        this.statusSymbol \u003d \"[X]\";","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"hpkoh"},"content":"    public boolean contains(String keyword) {","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"hpkoh"},"content":"        return this.description.contains(keyword);","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"hpkoh"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"hpkoh"},"content":"     * Returns the data of the event separated be \"|\"","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"hpkoh"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"hpkoh"},"content":"     * @return formatted data","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"hpkoh"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"hpkoh"},"content":"    public abstract String getFormattedData();","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"hpkoh"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"hpkoh"},"content":"     * Return the due date of the task","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"hpkoh"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"hpkoh"},"content":"     * @return due date","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"hpkoh"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"hpkoh"},"content":"    public abstract LocalDate getDueDate();","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"hpkoh"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"hpkoh"},"content":"        return this.isDone;","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"hpkoh"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"hpkoh"},"content":"        return this.description;","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"hpkoh"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":54,"author":{"gitId":"hpkoh"},"content":"    public int compareTo(Task otherTask) {","lastModifiedDate":"2021-09-08"},{"lineNumber":55,"author":{"gitId":"hpkoh"},"content":"        if (this \u003d\u003d otherTask) {","lastModifiedDate":"2021-09-08"},{"lineNumber":56,"author":{"gitId":"hpkoh"},"content":"            return 0;","lastModifiedDate":"2021-09-08"},{"lineNumber":57,"author":{"gitId":"hpkoh"},"content":"        } else {","lastModifiedDate":"2021-09-08"},{"lineNumber":58,"author":{"gitId":"hpkoh"},"content":"            return this.getDueDate().compareTo(otherTask.getDueDate());","lastModifiedDate":"2021-09-08"},{"lineNumber":59,"author":{"gitId":"hpkoh"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":60,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":61,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":62,"author":{"gitId":"hpkoh"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"hpkoh"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"hpkoh"},"content":"        assert isDone ? statusSymbol.equals(\"[X]\") : statusSymbol.equals(\"[ ]\");","lastModifiedDate":"2021-09-07"},{"lineNumber":65,"author":{"gitId":"hpkoh"},"content":"        return this.type + this.statusSymbol + \" \" + this.description;","lastModifiedDate":"2021-08-27"},{"lineNumber":66,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":67,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":68,"author":{"gitId":"hpkoh"},"content":"}","lastModifiedDate":"2021-08-18"},{"lineNumber":69,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":70,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"hpkoh":70}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hpkoh"},"content":"package duke.tasks;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"hpkoh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"hpkoh"},"content":"public class TaskList {","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"hpkoh"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"hpkoh"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"hpkoh"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"hpkoh"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"hpkoh"},"content":"     * Searches the task list for tasks with matching keyword within description","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"hpkoh"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"hpkoh"},"content":"     * @param keyword keyword to be searched","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"hpkoh"},"content":"     * @return the list of tasks with the keyword","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"hpkoh"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"hpkoh"},"content":"    public String find(String keyword) {","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"hpkoh"},"content":"        StringBuilder taskString \u003d new StringBuilder();","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"hpkoh"},"content":"        int len \u003d tasks.size();","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"hpkoh"},"content":"        int count \u003d 1;","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"hpkoh"},"content":"        for (int i \u003d 0; i \u003c len; i++) {","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"hpkoh"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"hpkoh"},"content":"            if (task.contains(keyword)) {","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"hpkoh"},"content":"                taskString.append(count + \". \" + task.toString() + \"\\n\");","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"hpkoh"},"content":"                count++;","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"hpkoh"},"content":"            }","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"hpkoh"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"hpkoh"},"content":"        return taskString.toString().trim();","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"hpkoh"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"hpkoh"},"content":"     * Sorts the Tasks according their due dates","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"hpkoh"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"hpkoh"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"hpkoh"},"content":"    public void sort() {","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"hpkoh"},"content":"        this.tasks.sort(null);","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"hpkoh"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"hpkoh"},"content":"     * Returns the list of tasks as a String","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"hpkoh"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"hpkoh"},"content":"     * @return formatted list of task","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"hpkoh"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"hpkoh"},"content":"    public String getFormattedData() {","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"hpkoh"},"content":"        StringBuilder data \u003d new StringBuilder();","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"hpkoh"},"content":"        int len \u003d tasks.size();","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"hpkoh"},"content":"        for (int i \u003d 0; i \u003c len - 1; i++) {","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"hpkoh"},"content":"            data.append(tasks.get(i).getFormattedData() + \"\\n\");","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"hpkoh"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"hpkoh"},"content":"        data.append(tasks.get(len - 1).getFormattedData());","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"hpkoh"},"content":"        return data.toString();","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"hpkoh"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":64,"author":{"gitId":"hpkoh"},"content":"     * Returns the number of tasks as a String response","lastModifiedDate":"2021-09-08"},{"lineNumber":65,"author":{"gitId":"hpkoh"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":66,"author":{"gitId":"hpkoh"},"content":"     * @return formatted response","lastModifiedDate":"2021-09-08"},{"lineNumber":67,"author":{"gitId":"hpkoh"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":68,"author":{"gitId":"hpkoh"},"content":"    public String getTaskCountString() {","lastModifiedDate":"2021-08-27"},{"lineNumber":69,"author":{"gitId":"hpkoh"},"content":"        return String.format(\"You have %d tasks\", this.tasks.size());","lastModifiedDate":"2021-08-27"},{"lineNumber":70,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":71,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":72,"author":{"gitId":"hpkoh"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":73,"author":{"gitId":"hpkoh"},"content":"     * Returns task at index","lastModifiedDate":"2021-09-15"},{"lineNumber":74,"author":{"gitId":"hpkoh"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":75,"author":{"gitId":"hpkoh"},"content":"     * @param index index of task","lastModifiedDate":"2021-09-15"},{"lineNumber":76,"author":{"gitId":"hpkoh"},"content":"     * @return task at index","lastModifiedDate":"2021-09-15"},{"lineNumber":77,"author":{"gitId":"hpkoh"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":78,"author":{"gitId":"hpkoh"},"content":"    public Task get(int index) {","lastModifiedDate":"2021-08-27"},{"lineNumber":79,"author":{"gitId":"hpkoh"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2021-08-27"},{"lineNumber":80,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":81,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":82,"author":{"gitId":"hpkoh"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":83,"author":{"gitId":"hpkoh"},"content":"     * Adds task to list of tasks","lastModifiedDate":"2021-09-15"},{"lineNumber":84,"author":{"gitId":"hpkoh"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":85,"author":{"gitId":"hpkoh"},"content":"     * @param task task to be added","lastModifiedDate":"2021-09-15"},{"lineNumber":86,"author":{"gitId":"hpkoh"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":87,"author":{"gitId":"hpkoh"},"content":"    public void add(Task task) {","lastModifiedDate":"2021-08-27"},{"lineNumber":88,"author":{"gitId":"hpkoh"},"content":"        this.tasks.add(task);","lastModifiedDate":"2021-08-27"},{"lineNumber":89,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":90,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":91,"author":{"gitId":"hpkoh"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":92,"author":{"gitId":"hpkoh"},"content":"     * Delete task at index from task list","lastModifiedDate":"2021-09-15"},{"lineNumber":93,"author":{"gitId":"hpkoh"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":94,"author":{"gitId":"hpkoh"},"content":"     * @param index index of task","lastModifiedDate":"2021-09-15"},{"lineNumber":95,"author":{"gitId":"hpkoh"},"content":"     * @return task that was deleted","lastModifiedDate":"2021-09-15"},{"lineNumber":96,"author":{"gitId":"hpkoh"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":97,"author":{"gitId":"hpkoh"},"content":"    public Task delete(int index) {","lastModifiedDate":"2021-08-27"},{"lineNumber":98,"author":{"gitId":"hpkoh"},"content":"        return this.tasks.remove(index);","lastModifiedDate":"2021-08-27"},{"lineNumber":99,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":100,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":101,"author":{"gitId":"hpkoh"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":102,"author":{"gitId":"hpkoh"},"content":"     * Return the size of the task list","lastModifiedDate":"2021-09-15"},{"lineNumber":103,"author":{"gitId":"hpkoh"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":104,"author":{"gitId":"hpkoh"},"content":"     * @return size of task list","lastModifiedDate":"2021-09-15"},{"lineNumber":105,"author":{"gitId":"hpkoh"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":106,"author":{"gitId":"hpkoh"},"content":"    public int getSize() {","lastModifiedDate":"2021-09-15"},{"lineNumber":107,"author":{"gitId":"hpkoh"},"content":"        return this.tasks.size();","lastModifiedDate":"2021-09-15"},{"lineNumber":108,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":109,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":110,"author":{"gitId":"hpkoh"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":111,"author":{"gitId":"hpkoh"},"content":"    public String toString() {","lastModifiedDate":"2021-08-27"},{"lineNumber":112,"author":{"gitId":"hpkoh"},"content":"        StringBuilder taskString \u003d new StringBuilder();","lastModifiedDate":"2021-08-27"},{"lineNumber":113,"author":{"gitId":"hpkoh"},"content":"        int len \u003d tasks.size();","lastModifiedDate":"2021-08-27"},{"lineNumber":114,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":115,"author":{"gitId":"hpkoh"},"content":"        for (int i \u003d 0; i \u003c len - 1; i++) {","lastModifiedDate":"2021-08-27"},{"lineNumber":116,"author":{"gitId":"hpkoh"},"content":"            taskString.append(i + 1 + \". \" + tasks.get(i).toString() + \"\\n\");","lastModifiedDate":"2021-08-27"},{"lineNumber":117,"author":{"gitId":"hpkoh"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":118,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":119,"author":{"gitId":"hpkoh"},"content":"        taskString.append(len + \". \" + tasks.get(len - 1).toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":120,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":121,"author":{"gitId":"hpkoh"},"content":"        return taskString.toString();","lastModifiedDate":"2021-08-27"},{"lineNumber":122,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":123,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":124,"author":{"gitId":"hpkoh"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"hpkoh":124}},{"path":"src/main/java/duke/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hpkoh"},"content":"package duke.tasks;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"hpkoh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"hpkoh"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"hpkoh"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"hpkoh"},"content":"        super(description, \"[T]\", false);","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"hpkoh"},"content":"    public ToDo(String description, boolean status) {","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"hpkoh"},"content":"        super(description, \"[T]\", status);","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"hpkoh"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"hpkoh"},"content":"    public LocalDate getDueDate() {","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"hpkoh"},"content":"        return LocalDate.MAX;","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"hpkoh"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"hpkoh"},"content":"    public String getFormattedData() {","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"hpkoh"},"content":"        String formattedStatus \u003d super.isDone() ? \"1|\" : \"0|\";","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"hpkoh"},"content":"        return \"T|\" + formattedStatus + super.getDescription();","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"hpkoh"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"hpkoh"},"content":"    public boolean equals(Object other){","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"hpkoh"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"hpkoh"},"content":"            return true;","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"hpkoh"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"hpkoh"},"content":"        if (other instanceof ToDo) {","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"hpkoh"},"content":"            return this.getDescription().equals(((ToDo) other).getDescription());","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"hpkoh"},"content":"        } else {","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"hpkoh"},"content":"            return false;","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"hpkoh"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"hpkoh"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"hpkoh":38}},{"path":"src/main/java/duke/utils/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hpkoh"},"content":"package duke.utils;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"hpkoh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"hpkoh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"hpkoh"},"content":"import duke.commands.*;","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"hpkoh"},"content":"import duke.exceptions.InvalidInputException;","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"hpkoh"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"hpkoh"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"hpkoh"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"hpkoh"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"hpkoh"},"content":"public class Parser {","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"hpkoh"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"hpkoh"},"content":"     * Return command according to user input","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"hpkoh"},"content":"     * ","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"hpkoh"},"content":"     * @param command the user input string","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"hpkoh"},"content":"     * @return the corresponding command according to given command String","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"hpkoh"},"content":"     * @throws InvalidInputException if input is invalid","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"hpkoh"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"hpkoh"},"content":"    public static Command parse(String command) throws InvalidInputException {","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"hpkoh"},"content":"        String[] commands \u003d command.split(\" \", 2);","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"hpkoh"},"content":"        command \u003d commands[0];","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"hpkoh"},"content":"        String description \u003d commands.length \u003d\u003d 2 ? commands[1] : \"\";","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"hpkoh"},"content":"        switch (command) {","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"hpkoh"},"content":"            case \"bye\":","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"hpkoh"},"content":"                return parseExitCommand(description);","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"hpkoh"},"content":"            case \"list\":","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"hpkoh"},"content":"                return parseListCommand(description);","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"hpkoh"},"content":"            case \"sort\":","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"hpkoh"},"content":"                return parseSortCommand(description);","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"hpkoh"},"content":"            case \"done\":","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"hpkoh"},"content":"                return parseDoneCommand(description);","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"hpkoh"},"content":"            case \"delete\":","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"hpkoh"},"content":"                return parseDeleteCommand(description);","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"hpkoh"},"content":"            case \"find\":","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"hpkoh"},"content":"                return parseFindCommand(description);","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"hpkoh"},"content":"            case \"todo\":","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"hpkoh"},"content":"                return parseTodoCommand(description);","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"hpkoh"},"content":"            case \"deadline\":","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"hpkoh"},"content":"                return parseDeadlineCommand(description);","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"hpkoh"},"content":"            case \"event\":","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"hpkoh"},"content":"                return parseEventCommand(description);","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"hpkoh"},"content":"            default:","lastModifiedDate":"2021-09-15"},{"lineNumber":50,"author":{"gitId":"hpkoh"},"content":"                throw new InvalidInputException(\"Invalid command\");","lastModifiedDate":"2021-09-15"},{"lineNumber":51,"author":{"gitId":"hpkoh"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":52,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":53,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":54,"author":{"gitId":"hpkoh"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"hpkoh"},"content":"     * Parses description for Exit command","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"hpkoh"},"content":"     * Return ExitCommand if description is empty","lastModifiedDate":"2021-09-15"},{"lineNumber":57,"author":{"gitId":"hpkoh"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"hpkoh"},"content":"     * @param description description given by user","lastModifiedDate":"2021-09-15"},{"lineNumber":59,"author":{"gitId":"hpkoh"},"content":"     * @return ExitCommand","lastModifiedDate":"2021-09-15"},{"lineNumber":60,"author":{"gitId":"hpkoh"},"content":"     * @throws InvalidInputException if description is not empty","lastModifiedDate":"2021-09-15"},{"lineNumber":61,"author":{"gitId":"hpkoh"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":62,"author":{"gitId":"hpkoh"},"content":"    public static Command parseExitCommand(String description) throws InvalidInputException {","lastModifiedDate":"2021-09-15"},{"lineNumber":63,"author":{"gitId":"hpkoh"},"content":"        if (description.isBlank()) {","lastModifiedDate":"2021-09-15"},{"lineNumber":64,"author":{"gitId":"hpkoh"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-09-15"},{"lineNumber":65,"author":{"gitId":"hpkoh"},"content":"        } else {","lastModifiedDate":"2021-09-15"},{"lineNumber":66,"author":{"gitId":"hpkoh"},"content":"            throw new InvalidInputException(\"Did you mean \\\u0027bye\\\u0027?\");","lastModifiedDate":"2021-09-15"},{"lineNumber":67,"author":{"gitId":"hpkoh"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":68,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":69,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":70,"author":{"gitId":"hpkoh"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":71,"author":{"gitId":"hpkoh"},"content":"     * Parses description for List command","lastModifiedDate":"2021-09-15"},{"lineNumber":72,"author":{"gitId":"hpkoh"},"content":"     * Return ListCommand if description is empty","lastModifiedDate":"2021-09-15"},{"lineNumber":73,"author":{"gitId":"hpkoh"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":74,"author":{"gitId":"hpkoh"},"content":"     * @param description description given by user","lastModifiedDate":"2021-09-15"},{"lineNumber":75,"author":{"gitId":"hpkoh"},"content":"     * @return ListCommand","lastModifiedDate":"2021-09-15"},{"lineNumber":76,"author":{"gitId":"hpkoh"},"content":"     * @throws InvalidInputException if description is not empty","lastModifiedDate":"2021-09-15"},{"lineNumber":77,"author":{"gitId":"hpkoh"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":78,"author":{"gitId":"hpkoh"},"content":"    public static Command parseListCommand(String description) throws InvalidInputException {","lastModifiedDate":"2021-09-15"},{"lineNumber":79,"author":{"gitId":"hpkoh"},"content":"        if (description.isBlank()) {","lastModifiedDate":"2021-09-15"},{"lineNumber":80,"author":{"gitId":"hpkoh"},"content":"            return new ListCommand();","lastModifiedDate":"2021-09-15"},{"lineNumber":81,"author":{"gitId":"hpkoh"},"content":"        } else {","lastModifiedDate":"2021-09-15"},{"lineNumber":82,"author":{"gitId":"hpkoh"},"content":"            throw new InvalidInputException(\"Did you mean \\\u0027list\\\u0027?\");","lastModifiedDate":"2021-09-15"},{"lineNumber":83,"author":{"gitId":"hpkoh"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":84,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":85,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":86,"author":{"gitId":"hpkoh"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":87,"author":{"gitId":"hpkoh"},"content":"     * Parses description for Sort command","lastModifiedDate":"2021-09-15"},{"lineNumber":88,"author":{"gitId":"hpkoh"},"content":"     * Return SortCommand if description is empty","lastModifiedDate":"2021-09-15"},{"lineNumber":89,"author":{"gitId":"hpkoh"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":90,"author":{"gitId":"hpkoh"},"content":"     * @param description description given by user","lastModifiedDate":"2021-09-15"},{"lineNumber":91,"author":{"gitId":"hpkoh"},"content":"     * @return SortCommand","lastModifiedDate":"2021-09-15"},{"lineNumber":92,"author":{"gitId":"hpkoh"},"content":"     * @throws InvalidInputException if description is not empty","lastModifiedDate":"2021-09-15"},{"lineNumber":93,"author":{"gitId":"hpkoh"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":94,"author":{"gitId":"hpkoh"},"content":"    public static Command parseSortCommand(String description) throws InvalidInputException {","lastModifiedDate":"2021-09-15"},{"lineNumber":95,"author":{"gitId":"hpkoh"},"content":"        if (description.isBlank()) {","lastModifiedDate":"2021-09-15"},{"lineNumber":96,"author":{"gitId":"hpkoh"},"content":"            return new SortCommand();","lastModifiedDate":"2021-09-15"},{"lineNumber":97,"author":{"gitId":"hpkoh"},"content":"        } else {","lastModifiedDate":"2021-09-15"},{"lineNumber":98,"author":{"gitId":"hpkoh"},"content":"            throw new InvalidInputException(\"Did you mean \\\u0027sort\\\u0027?\");","lastModifiedDate":"2021-09-15"},{"lineNumber":99,"author":{"gitId":"hpkoh"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":100,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":101,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":102,"author":{"gitId":"hpkoh"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":103,"author":{"gitId":"hpkoh"},"content":"     * Parses description for Done command","lastModifiedDate":"2021-09-15"},{"lineNumber":104,"author":{"gitId":"hpkoh"},"content":"     * Return DoneCommand if description is an integer index","lastModifiedDate":"2021-09-15"},{"lineNumber":105,"author":{"gitId":"hpkoh"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":106,"author":{"gitId":"hpkoh"},"content":"     * @param description description given by user","lastModifiedDate":"2021-09-15"},{"lineNumber":107,"author":{"gitId":"hpkoh"},"content":"     * @return DoneCommand","lastModifiedDate":"2021-09-15"},{"lineNumber":108,"author":{"gitId":"hpkoh"},"content":"     * @throws InvalidInputException if description is invalid","lastModifiedDate":"2021-09-15"},{"lineNumber":109,"author":{"gitId":"hpkoh"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":110,"author":{"gitId":"hpkoh"},"content":"    public static Command parseDoneCommand(String description) throws InvalidInputException {","lastModifiedDate":"2021-09-15"},{"lineNumber":111,"author":{"gitId":"hpkoh"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":112,"author":{"gitId":"hpkoh"},"content":"            int index \u003d Integer.parseInt(description) - 1;","lastModifiedDate":"2021-09-15"},{"lineNumber":113,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":114,"author":{"gitId":"hpkoh"},"content":"            return new DoneCommand(index);","lastModifiedDate":"2021-09-08"},{"lineNumber":115,"author":{"gitId":"hpkoh"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":116,"author":{"gitId":"hpkoh"},"content":"            throw new InvalidInputException(","lastModifiedDate":"2021-09-15"},{"lineNumber":117,"author":{"gitId":"hpkoh"},"content":"                    \"Invalid description!\\n\" +","lastModifiedDate":"2021-09-15"},{"lineNumber":118,"author":{"gitId":"hpkoh"},"content":"                    \"The command format for Done is:\\n\" +","lastModifiedDate":"2021-09-15"},{"lineNumber":119,"author":{"gitId":"hpkoh"},"content":"                    \"done {TaskIndex}\");","lastModifiedDate":"2021-09-15"},{"lineNumber":120,"author":{"gitId":"hpkoh"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":121,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":122,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":123,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":124,"author":{"gitId":"hpkoh"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":125,"author":{"gitId":"hpkoh"},"content":"     * Parses description for Delete command","lastModifiedDate":"2021-09-15"},{"lineNumber":126,"author":{"gitId":"hpkoh"},"content":"     * Return DeleteCommand if description is an integer index","lastModifiedDate":"2021-09-15"},{"lineNumber":127,"author":{"gitId":"hpkoh"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":128,"author":{"gitId":"hpkoh"},"content":"     * @param description description given by user","lastModifiedDate":"2021-09-15"},{"lineNumber":129,"author":{"gitId":"hpkoh"},"content":"     * @return DeleteCommand","lastModifiedDate":"2021-09-15"},{"lineNumber":130,"author":{"gitId":"hpkoh"},"content":"     * @throws InvalidInputException if description is invalid","lastModifiedDate":"2021-09-15"},{"lineNumber":131,"author":{"gitId":"hpkoh"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":132,"author":{"gitId":"hpkoh"},"content":"    public static Command parseDeleteCommand(String description) throws InvalidInputException {","lastModifiedDate":"2021-09-15"},{"lineNumber":133,"author":{"gitId":"hpkoh"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":134,"author":{"gitId":"hpkoh"},"content":"            int index \u003d Integer.parseInt(description) - 1;","lastModifiedDate":"2021-09-15"},{"lineNumber":135,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":136,"author":{"gitId":"hpkoh"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2021-09-08"},{"lineNumber":137,"author":{"gitId":"hpkoh"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":138,"author":{"gitId":"hpkoh"},"content":"            throw new InvalidInputException(","lastModifiedDate":"2021-09-15"},{"lineNumber":139,"author":{"gitId":"hpkoh"},"content":"                    \"Invalid description!\\n\" +","lastModifiedDate":"2021-09-15"},{"lineNumber":140,"author":{"gitId":"hpkoh"},"content":"                    \"The command format for Delete is:\\n\" +","lastModifiedDate":"2021-09-15"},{"lineNumber":141,"author":{"gitId":"hpkoh"},"content":"                    \"delete {TaskIndex}\");","lastModifiedDate":"2021-09-15"},{"lineNumber":142,"author":{"gitId":"hpkoh"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":143,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":144,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":145,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":146,"author":{"gitId":"hpkoh"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":147,"author":{"gitId":"hpkoh"},"content":"     * Parses description for Find command","lastModifiedDate":"2021-09-15"},{"lineNumber":148,"author":{"gitId":"hpkoh"},"content":"     * Return FindCommand if description is a string","lastModifiedDate":"2021-09-15"},{"lineNumber":149,"author":{"gitId":"hpkoh"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":150,"author":{"gitId":"hpkoh"},"content":"     * @param description description given by user","lastModifiedDate":"2021-09-15"},{"lineNumber":151,"author":{"gitId":"hpkoh"},"content":"     * @return FindCommand","lastModifiedDate":"2021-09-15"},{"lineNumber":152,"author":{"gitId":"hpkoh"},"content":"     * @throws InvalidInputException if description is invalid","lastModifiedDate":"2021-09-15"},{"lineNumber":153,"author":{"gitId":"hpkoh"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":154,"author":{"gitId":"hpkoh"},"content":"    public static Command parseFindCommand(String description) throws InvalidInputException {","lastModifiedDate":"2021-09-15"},{"lineNumber":155,"author":{"gitId":"hpkoh"},"content":"        if (description.isBlank()) {","lastModifiedDate":"2021-09-08"},{"lineNumber":156,"author":{"gitId":"hpkoh"},"content":"            throw new InvalidInputException(\"find\u0027s description cannot be empty!\");","lastModifiedDate":"2021-09-08"},{"lineNumber":157,"author":{"gitId":"hpkoh"},"content":"        } else {","lastModifiedDate":"2021-09-08"},{"lineNumber":158,"author":{"gitId":"hpkoh"},"content":"            return new FindCommand(description);","lastModifiedDate":"2021-09-08"},{"lineNumber":159,"author":{"gitId":"hpkoh"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":160,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":161,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":162,"author":{"gitId":"hpkoh"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":163,"author":{"gitId":"hpkoh"},"content":"     * Parses description for Todo command","lastModifiedDate":"2021-09-15"},{"lineNumber":164,"author":{"gitId":"hpkoh"},"content":"     * Return AddCommand containing Todo Task if description is a string","lastModifiedDate":"2021-09-15"},{"lineNumber":165,"author":{"gitId":"hpkoh"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":166,"author":{"gitId":"hpkoh"},"content":"     * @param description description given by user","lastModifiedDate":"2021-09-15"},{"lineNumber":167,"author":{"gitId":"hpkoh"},"content":"     * @return AddCommand containing Todo Task","lastModifiedDate":"2021-09-15"},{"lineNumber":168,"author":{"gitId":"hpkoh"},"content":"     * @throws InvalidInputException if description is invalid","lastModifiedDate":"2021-09-15"},{"lineNumber":169,"author":{"gitId":"hpkoh"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":170,"author":{"gitId":"hpkoh"},"content":"    public static Command parseTodoCommand(String description) throws InvalidInputException {","lastModifiedDate":"2021-09-15"},{"lineNumber":171,"author":{"gitId":"hpkoh"},"content":"        if (description.isBlank()) {","lastModifiedDate":"2021-09-08"},{"lineNumber":172,"author":{"gitId":"hpkoh"},"content":"            throw new InvalidInputException(\"todo\u0027s description cannot be empty!\");","lastModifiedDate":"2021-09-08"},{"lineNumber":173,"author":{"gitId":"hpkoh"},"content":"        } else {","lastModifiedDate":"2021-09-08"},{"lineNumber":174,"author":{"gitId":"hpkoh"},"content":"            Task newTask \u003d new ToDo(description);","lastModifiedDate":"2021-09-08"},{"lineNumber":175,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":176,"author":{"gitId":"hpkoh"},"content":"            return new AddCommand(newTask);","lastModifiedDate":"2021-09-08"},{"lineNumber":177,"author":{"gitId":"hpkoh"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":178,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":179,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":180,"author":{"gitId":"hpkoh"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":181,"author":{"gitId":"hpkoh"},"content":"     * Parses description for Deadline command","lastModifiedDate":"2021-09-15"},{"lineNumber":182,"author":{"gitId":"hpkoh"},"content":"     * Return AddCommand containing Deadline Task if description is of following format:","lastModifiedDate":"2021-09-15"},{"lineNumber":183,"author":{"gitId":"hpkoh"},"content":"     * \"{description} /by {date}\"","lastModifiedDate":"2021-09-15"},{"lineNumber":184,"author":{"gitId":"hpkoh"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":185,"author":{"gitId":"hpkoh"},"content":"     * @param description description given by user","lastModifiedDate":"2021-09-15"},{"lineNumber":186,"author":{"gitId":"hpkoh"},"content":"     * @return AddCommand containing Deadline Task","lastModifiedDate":"2021-09-15"},{"lineNumber":187,"author":{"gitId":"hpkoh"},"content":"     * @throws InvalidInputException if description is invalid","lastModifiedDate":"2021-09-15"},{"lineNumber":188,"author":{"gitId":"hpkoh"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":189,"author":{"gitId":"hpkoh"},"content":"    public static Command parseDeadlineCommand(String description) throws InvalidInputException {","lastModifiedDate":"2021-09-15"},{"lineNumber":190,"author":{"gitId":"hpkoh"},"content":"        if (description.isBlank()) {","lastModifiedDate":"2021-09-08"},{"lineNumber":191,"author":{"gitId":"hpkoh"},"content":"            throw new InvalidInputException(\"deadline\u0027s description cannot be empty!\");","lastModifiedDate":"2021-09-08"},{"lineNumber":192,"author":{"gitId":"hpkoh"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":193,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":194,"author":{"gitId":"hpkoh"},"content":"        String[] fields \u003d description.split(\"/by\", 2);","lastModifiedDate":"2021-09-15"},{"lineNumber":195,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":196,"author":{"gitId":"hpkoh"},"content":"        if (fields.length \u003d\u003d 2) {","lastModifiedDate":"2021-09-15"},{"lineNumber":197,"author":{"gitId":"hpkoh"},"content":"            try {","lastModifiedDate":"2021-09-15"},{"lineNumber":198,"author":{"gitId":"hpkoh"},"content":"                description \u003d fields[0].trim();","lastModifiedDate":"2021-09-15"},{"lineNumber":199,"author":{"gitId":"hpkoh"},"content":"                LocalDate date \u003d LocalDate.parse(fields[1].trim());","lastModifiedDate":"2021-09-15"},{"lineNumber":200,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":201,"author":{"gitId":"hpkoh"},"content":"                Task newTask \u003d new Deadline(description, date);","lastModifiedDate":"2021-09-15"},{"lineNumber":202,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":203,"author":{"gitId":"hpkoh"},"content":"                return new AddCommand(newTask);","lastModifiedDate":"2021-09-08"},{"lineNumber":204,"author":{"gitId":"hpkoh"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":205,"author":{"gitId":"hpkoh"},"content":"                throw new InvalidInputException(","lastModifiedDate":"2021-09-15"},{"lineNumber":206,"author":{"gitId":"hpkoh"},"content":"                        \"Invalid Date format!\\n\" +","lastModifiedDate":"2021-09-15"},{"lineNumber":207,"author":{"gitId":"hpkoh"},"content":"                        \"The Date format is:\\n\" +","lastModifiedDate":"2021-09-15"},{"lineNumber":208,"author":{"gitId":"hpkoh"},"content":"                        \"YYYY-MM-DD\");","lastModifiedDate":"2021-09-15"},{"lineNumber":209,"author":{"gitId":"hpkoh"},"content":"            }","lastModifiedDate":"2021-09-08"},{"lineNumber":210,"author":{"gitId":"hpkoh"},"content":"        } else {","lastModifiedDate":"2021-09-15"},{"lineNumber":211,"author":{"gitId":"hpkoh"},"content":"            throw new InvalidInputException(","lastModifiedDate":"2021-09-15"},{"lineNumber":212,"author":{"gitId":"hpkoh"},"content":"                    \"Invalid description!\\n\" +","lastModifiedDate":"2021-09-15"},{"lineNumber":213,"author":{"gitId":"hpkoh"},"content":"                    \"The command format for Deadline is:\\n\" +","lastModifiedDate":"2021-09-15"},{"lineNumber":214,"author":{"gitId":"hpkoh"},"content":"                    \"deadline /by {YYYY-MM-DD}\");","lastModifiedDate":"2021-09-15"},{"lineNumber":215,"author":{"gitId":"hpkoh"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":216,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":217,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":218,"author":{"gitId":"hpkoh"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":219,"author":{"gitId":"hpkoh"},"content":"     * Parses description for Event command","lastModifiedDate":"2021-09-15"},{"lineNumber":220,"author":{"gitId":"hpkoh"},"content":"     * Return AddCommand containing Event Task if description is of following format:","lastModifiedDate":"2021-09-15"},{"lineNumber":221,"author":{"gitId":"hpkoh"},"content":"     * \"{description} /from {start date} /to {end date}\"","lastModifiedDate":"2021-09-15"},{"lineNumber":222,"author":{"gitId":"hpkoh"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":223,"author":{"gitId":"hpkoh"},"content":"     * @param description description given by user","lastModifiedDate":"2021-09-15"},{"lineNumber":224,"author":{"gitId":"hpkoh"},"content":"     * @return AddCommand containing Event Task","lastModifiedDate":"2021-09-15"},{"lineNumber":225,"author":{"gitId":"hpkoh"},"content":"     * @throws InvalidInputException if description is invalid","lastModifiedDate":"2021-09-15"},{"lineNumber":226,"author":{"gitId":"hpkoh"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":227,"author":{"gitId":"hpkoh"},"content":"    public static Command parseEventCommand(String description) throws InvalidInputException {","lastModifiedDate":"2021-09-15"},{"lineNumber":228,"author":{"gitId":"hpkoh"},"content":"        if (description.isBlank()) {","lastModifiedDate":"2021-09-08"},{"lineNumber":229,"author":{"gitId":"hpkoh"},"content":"            throw new InvalidInputException(\"event\u0027s description cannot be empty!\");","lastModifiedDate":"2021-09-08"},{"lineNumber":230,"author":{"gitId":"hpkoh"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":231,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":232,"author":{"gitId":"hpkoh"},"content":"        String[] fields \u003d description.split(\"/from\", 2);","lastModifiedDate":"2021-09-15"},{"lineNumber":233,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":234,"author":{"gitId":"hpkoh"},"content":"        if (fields.length \u003d\u003d 2) {","lastModifiedDate":"2021-09-15"},{"lineNumber":235,"author":{"gitId":"hpkoh"},"content":"            description \u003d fields[0].trim();","lastModifiedDate":"2021-09-15"},{"lineNumber":236,"author":{"gitId":"hpkoh"},"content":"            String[] dateFields \u003d fields[1].split(\"/to\", 2);","lastModifiedDate":"2021-09-15"},{"lineNumber":237,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":238,"author":{"gitId":"hpkoh"},"content":"            if (dateFields.length \u003d\u003d 2) {","lastModifiedDate":"2021-09-15"},{"lineNumber":239,"author":{"gitId":"hpkoh"},"content":"                try {","lastModifiedDate":"2021-09-15"},{"lineNumber":240,"author":{"gitId":"hpkoh"},"content":"                    LocalDate startDate \u003d LocalDate.parse(dateFields[0].trim());","lastModifiedDate":"2021-09-15"},{"lineNumber":241,"author":{"gitId":"hpkoh"},"content":"                    LocalDate endDate \u003d LocalDate.parse(dateFields[1].trim());","lastModifiedDate":"2021-09-15"},{"lineNumber":242,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":243,"author":{"gitId":"hpkoh"},"content":"                    Task newTask \u003d new Event(description, startDate, endDate);","lastModifiedDate":"2021-09-15"},{"lineNumber":244,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":245,"author":{"gitId":"hpkoh"},"content":"                    return new AddCommand(newTask);","lastModifiedDate":"2021-09-08"},{"lineNumber":246,"author":{"gitId":"hpkoh"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":247,"author":{"gitId":"hpkoh"},"content":"                    throw new InvalidInputException(","lastModifiedDate":"2021-09-15"},{"lineNumber":248,"author":{"gitId":"hpkoh"},"content":"                            \"Invalid Date format!\\n\" +","lastModifiedDate":"2021-09-15"},{"lineNumber":249,"author":{"gitId":"hpkoh"},"content":"                                    \"The Date format is:\\n\" +","lastModifiedDate":"2021-09-15"},{"lineNumber":250,"author":{"gitId":"hpkoh"},"content":"                                    \"YYYY-MM-DD\");","lastModifiedDate":"2021-09-15"},{"lineNumber":251,"author":{"gitId":"hpkoh"},"content":"                }","lastModifiedDate":"2021-09-08"},{"lineNumber":252,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":253,"author":{"gitId":"hpkoh"},"content":"            }","lastModifiedDate":"2021-09-08"},{"lineNumber":254,"author":{"gitId":"hpkoh"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":255,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":256,"author":{"gitId":"hpkoh"},"content":"        throw new InvalidInputException(","lastModifiedDate":"2021-09-15"},{"lineNumber":257,"author":{"gitId":"hpkoh"},"content":"                \"Invalid description!\\n\" +","lastModifiedDate":"2021-09-15"},{"lineNumber":258,"author":{"gitId":"hpkoh"},"content":"                \"The command format for Event is:\\n\" +","lastModifiedDate":"2021-09-15"},{"lineNumber":259,"author":{"gitId":"hpkoh"},"content":"                \"event /from {YYYY-MM-DD} /to {YYYY-MM-DD}\");","lastModifiedDate":"2021-09-15"},{"lineNumber":260,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":261,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":262,"author":{"gitId":"hpkoh"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"hpkoh":262}},{"path":"src/main/java/duke/utils/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hpkoh"},"content":"package duke.utils;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"hpkoh"},"content":"import java.io.File;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"hpkoh"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"hpkoh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"hpkoh"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"hpkoh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"hpkoh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"hpkoh"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"hpkoh"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"hpkoh"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"hpkoh"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"hpkoh"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"hpkoh"},"content":"public class Storage {","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"hpkoh"},"content":"    private String filePath;","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"hpkoh"},"content":"    private File file;","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"hpkoh"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"hpkoh"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"hpkoh"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"hpkoh"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"hpkoh"},"content":"     * Returns ArrayList of Tasks loaded from filePath location","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"hpkoh"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"hpkoh"},"content":"     * @return the ArrayList","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"hpkoh"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"hpkoh"},"content":"    public ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"hpkoh"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"hpkoh"},"content":"        assert !filePath.isEmpty();","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"hpkoh"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"hpkoh"},"content":"            Scanner dataReader \u003d new Scanner(this.file);","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"hpkoh"},"content":"            while (dataReader.hasNextLine()) {","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"hpkoh"},"content":"                String[] data \u003d dataReader.nextLine().split(\"\\\\|\");","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"hpkoh"},"content":"                String type \u003d data[0];","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"hpkoh"},"content":"                boolean isDone \u003d data[1].equals(\"1\");","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"hpkoh"},"content":"                String description \u003d data[2];","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"hpkoh"},"content":"                switch (type) {","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"hpkoh"},"content":"                case \"T\":","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"hpkoh"},"content":"                    tasks.add(new ToDo(description, isDone));","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"hpkoh"},"content":"                    break;","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"hpkoh"},"content":"                case \"D\":","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"hpkoh"},"content":"                    LocalDate date \u003d LocalDate.parse(data[3].trim());","lastModifiedDate":"2021-09-15"},{"lineNumber":50,"author":{"gitId":"hpkoh"},"content":"                    tasks.add(new Deadline(description, date, isDone));","lastModifiedDate":"2021-09-15"},{"lineNumber":51,"author":{"gitId":"hpkoh"},"content":"                    break;","lastModifiedDate":"2021-09-08"},{"lineNumber":52,"author":{"gitId":"hpkoh"},"content":"                case \"E\":","lastModifiedDate":"2021-09-08"},{"lineNumber":53,"author":{"gitId":"hpkoh"},"content":"                    LocalDate startDate \u003d LocalDate.parse(data[3].trim());","lastModifiedDate":"2021-09-15"},{"lineNumber":54,"author":{"gitId":"hpkoh"},"content":"                    LocalDate endDate \u003d LocalDate.parse(data[3].trim());","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"hpkoh"},"content":"                    tasks.add(new Event(description, startDate, endDate, isDone));","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"hpkoh"},"content":"                    break;","lastModifiedDate":"2021-09-08"},{"lineNumber":57,"author":{"gitId":"hpkoh"},"content":"                }","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":59,"author":{"gitId":"hpkoh"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"hpkoh"},"content":"            dataReader.close();","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"hpkoh"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"hpkoh"},"content":"            try {","lastModifiedDate":"2021-08-27"},{"lineNumber":64,"author":{"gitId":"hpkoh"},"content":"                file.createNewFile();","lastModifiedDate":"2021-08-27"},{"lineNumber":65,"author":{"gitId":"hpkoh"},"content":"            } catch (IOException ioException) {","lastModifiedDate":"2021-08-27"},{"lineNumber":66,"author":{"gitId":"hpkoh"},"content":"                return tasks;","lastModifiedDate":"2021-08-27"},{"lineNumber":67,"author":{"gitId":"hpkoh"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":68,"author":{"gitId":"hpkoh"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":69,"author":{"gitId":"hpkoh"},"content":"        return tasks;","lastModifiedDate":"2021-08-27"},{"lineNumber":70,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":71,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":72,"author":{"gitId":"hpkoh"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":73,"author":{"gitId":"hpkoh"},"content":"     * Writes formatted data into filePath location","lastModifiedDate":"2021-08-28"},{"lineNumber":74,"author":{"gitId":"hpkoh"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"hpkoh"},"content":"    public void save(String formattedTaskList) {","lastModifiedDate":"2021-08-27"},{"lineNumber":76,"author":{"gitId":"hpkoh"},"content":"        assert !filePath.isEmpty();","lastModifiedDate":"2021-09-07"},{"lineNumber":77,"author":{"gitId":"hpkoh"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":78,"author":{"gitId":"hpkoh"},"content":"            FileWriter writer \u003d new FileWriter(filePath);","lastModifiedDate":"2021-08-27"},{"lineNumber":79,"author":{"gitId":"hpkoh"},"content":"            writer.write(formattedTaskList);","lastModifiedDate":"2021-08-27"},{"lineNumber":80,"author":{"gitId":"hpkoh"},"content":"            writer.close();","lastModifiedDate":"2021-08-27"},{"lineNumber":81,"author":{"gitId":"hpkoh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":82,"author":{"gitId":"hpkoh"},"content":"            return;","lastModifiedDate":"2021-08-27"},{"lineNumber":83,"author":{"gitId":"hpkoh"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":84,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":85,"author":{"gitId":"hpkoh"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"hpkoh":85}},{"path":"src/main/java/javafx_controllers/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hpkoh"},"content":"package javafx_controllers;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"hpkoh"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"hpkoh"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"hpkoh"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"hpkoh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"hpkoh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"hpkoh"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"hpkoh"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"hpkoh"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"hpkoh"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"hpkoh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"hpkoh"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"hpkoh"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"hpkoh"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"hpkoh"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"hpkoh"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"hpkoh"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"hpkoh"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"hpkoh"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"hpkoh"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"hpkoh"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"hpkoh"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"hpkoh"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"hpkoh"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"hpkoh"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"hpkoh"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"hpkoh"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"hpkoh"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"hpkoh"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"hpkoh"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"hpkoh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"hpkoh"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"hpkoh"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"hpkoh"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"hpkoh"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"hpkoh"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"hpkoh"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"hpkoh"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"hpkoh"},"content":"    private void flip() {","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"hpkoh"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"hpkoh"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"hpkoh"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"hpkoh"},"content":"        setAlignment(Pos.CENTER_LEFT);","lastModifiedDate":"2021-09-15"},{"lineNumber":51,"author":{"gitId":"hpkoh"},"content":"        dialog.setStyle(\"-fx-background-radius: 15; -fx-background-color:  #d1eee9;\");","lastModifiedDate":"2021-09-15"},{"lineNumber":52,"author":{"gitId":"hpkoh"},"content":"        dialog.setTextFill(Color.BLACK);","lastModifiedDate":"2021-09-15"},{"lineNumber":53,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"hpkoh"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"hpkoh"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"hpkoh"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"hpkoh"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"hpkoh"},"content":"        db.flip();","lastModifiedDate":"2021-09-02"},{"lineNumber":62,"author":{"gitId":"hpkoh"},"content":"        return db;","lastModifiedDate":"2021-09-02"},{"lineNumber":63,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":64,"author":{"gitId":"hpkoh"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"hpkoh":64}},{"path":"src/main/java/javafx_controllers/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hpkoh"},"content":"package javafx_controllers;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"hpkoh"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"hpkoh"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"hpkoh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"hpkoh"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"hpkoh"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"hpkoh"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"hpkoh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"hpkoh"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"hpkoh"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"hpkoh"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"hpkoh"},"content":" * Controller for javafx_utils.MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"hpkoh"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"hpkoh"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"hpkoh"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"hpkoh"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"hpkoh"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"hpkoh"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"hpkoh"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"hpkoh"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"hpkoh"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"hpkoh"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"hpkoh"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"hpkoh"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Pelton.png\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"hpkoh"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/JeffWinger.png\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"hpkoh"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"hpkoh"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"hpkoh"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"hpkoh"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"hpkoh"},"content":"                \"I always go the extra mile to avoid doing things\", dukeImage));","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"hpkoh"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"hpkoh"},"content":"        duke \u003d d;","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"hpkoh"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"hpkoh"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"hpkoh"},"content":"     * the dialog container.","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"hpkoh"},"content":"     * Exits application if \"bye\" command given","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"hpkoh"},"content":"     * Clears the user input after processing.","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"hpkoh"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"hpkoh"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"hpkoh"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"hpkoh"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"hpkoh"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"hpkoh"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"hpkoh"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"hpkoh"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"hpkoh"},"content":"        );","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"hpkoh"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2021-09-08"},{"lineNumber":57,"author":{"gitId":"hpkoh"},"content":"            Platform.exit();","lastModifiedDate":"2021-09-08"},{"lineNumber":58,"author":{"gitId":"hpkoh"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":59,"author":{"gitId":"hpkoh"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"hpkoh"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"hpkoh":61}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"hpkoh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"hpkoh"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"hpkoh"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"hpkoh"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"hpkoh"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"hpkoh"},"content":"\u003cfx:root alignment\u003d\"CENTER_RIGHT\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"hpkoh"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"hpkoh"},"content":"        \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"TOP_RIGHT\" contentDisplay\u003d\"CENTER\" graphicTextGap\u003d\"10.0\" layoutX\u003d\"10.0\" style\u003d\"-fx-background-radius: 15; -fx-background-color: #33767b;\" text\u003d\"label\" textFill\u003d\"WHITE\" textOverrun\u003d\"CENTER_ELLIPSIS\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"hpkoh"},"content":"         \u003copaqueInsets\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"hpkoh"},"content":"            \u003cInsets /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"hpkoh"},"content":"         \u003c/opaqueInsets\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"hpkoh"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"hpkoh"},"content":"            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"hpkoh"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"hpkoh"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"hpkoh"},"content":"            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"hpkoh"},"content":"         \u003c/HBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"hpkoh"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"hpkoh"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"hpkoh"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"hpkoh"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"hpkoh"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"hpkoh"},"content":"   \u003copaqueInsets\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"hpkoh"},"content":"      \u003cInsets /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"hpkoh"},"content":"   \u003c/opaqueInsets\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"hpkoh"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"hpkoh":28}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"hpkoh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"hpkoh"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"hpkoh"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"hpkoh"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"hpkoh"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"hpkoh"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"hpkoh"},"content":"\u003cAnchorPane minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"javafx_controllers.MainWindow\"\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"hpkoh"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"hpkoh"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"hpkoh"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"hpkoh"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"hpkoh"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"hpkoh"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"hpkoh"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"hpkoh"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"hpkoh"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"hpkoh"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"hpkoh":19}},{"path":"src/test/java/duke/tasks/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hpkoh"},"content":"package duke.tasks;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"hpkoh"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"hpkoh"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"hpkoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"hpkoh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"hpkoh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"hpkoh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"hpkoh"},"content":"import java.util.List;","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"hpkoh"},"content":"class TaskListTest {","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"hpkoh"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"hpkoh"},"content":"    @BeforeEach","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"hpkoh"},"content":"    void setUp() {","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"hpkoh"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e(","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"hpkoh"},"content":"                List.of(new ToDo(\"A\"),","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"hpkoh"},"content":"                        new Deadline(\"B\", LocalDate.parse(\"2021-09-13\")),","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"hpkoh"},"content":"                        new Event(\"C\", LocalDate.parse(\"2021-09-12\"), LocalDate.parse(\"2021-09-14\"))));","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"hpkoh"},"content":"        this.tasks \u003d new TaskList(tasks);","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"hpkoh"},"content":"    @Test","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"hpkoh"},"content":"    void findTest_taskWithB_deadlineTaskShown() {","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"hpkoh"},"content":"        String expected \u003d \"1. \" + new Deadline(\"B\", LocalDate.parse(\"2021-09-13\")).toString();","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"hpkoh"},"content":"        assertEquals(expected, tasks.find(\"B\"));","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"hpkoh"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"hpkoh":30}},{"path":"src/test/java/duke/utils/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hpkoh"},"content":"package duke.utils;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"hpkoh"},"content":"import duke.commands.AddCommand;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"hpkoh"},"content":"import duke.commands.ExitCommand;","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"hpkoh"},"content":"import duke.exceptions.InvalidInputException;","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"hpkoh"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"hpkoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"hpkoh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"hpkoh"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"hpkoh"},"content":"    @Test","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"hpkoh"},"content":"    public void parseTest_exit_exitCommandReturned(){","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"hpkoh"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"hpkoh"},"content":"            assertTrue(Parser.parse(\"bye\") instanceof ExitCommand);","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"hpkoh"},"content":"        } catch (InvalidInputException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"hpkoh"},"content":"            Assertions.fail();","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"hpkoh"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"hpkoh"},"content":"    @Test","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"hpkoh"},"content":"    public void parseTest_invalidInput_invalidInputExceptionThrown(){","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"hpkoh"},"content":"        Assertions.assertThrows(InvalidInputException.class, () -\u003e Parser.parse(\"hehexd\"));","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"hpkoh"},"content":"    @Test","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"hpkoh"},"content":"    public void parseDeadlineCommandTest_validInput_addCommandReturned(){","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"hpkoh"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"hpkoh"},"content":"            assertTrue(Parser.parseDeadlineCommand(\"assignment 1 /by 2021-12-05\") instanceof AddCommand);","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"hpkoh"},"content":"        } catch (InvalidInputException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"hpkoh"},"content":"            Assertions.fail();","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"hpkoh"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"hpkoh"},"content":"    @Test","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"hpkoh"},"content":"    public void parseDeadlineCommandTest_noDate_invalidInputExceptionThrown(){","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"hpkoh"},"content":"        Assertions.assertThrows(InvalidInputException.class, () -\u003e Parser.parseDeadlineCommand(\"hehexd\"));","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"hpkoh"},"content":"    @Test","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"hpkoh"},"content":"    public void parseDeadlineCommandTest_invalidDateFormat_invalidInputExceptionThrown(){","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"hpkoh"},"content":"        Assertions.assertThrows(InvalidInputException.class,","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"hpkoh"},"content":"                () -\u003e Parser.parseDeadlineCommand(\"hehexd /by 2020/2/2\"));","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"hpkoh"},"content":"    @Test","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"hpkoh"},"content":"    public void parseEventCommandTest_validInput_addCommandReturned(){","lastModifiedDate":"2021-09-15"},{"lineNumber":50,"author":{"gitId":"hpkoh"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":51,"author":{"gitId":"hpkoh"},"content":"            assertTrue(Parser.parseEventCommand(","lastModifiedDate":"2021-09-15"},{"lineNumber":52,"author":{"gitId":"hpkoh"},"content":"                    \"assignment 1 /from 2021-12-05 /to 2021-12-05\") instanceof AddCommand);","lastModifiedDate":"2021-09-15"},{"lineNumber":53,"author":{"gitId":"hpkoh"},"content":"        } catch (InvalidInputException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":54,"author":{"gitId":"hpkoh"},"content":"            Assertions.fail();","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"hpkoh"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":57,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"hpkoh"},"content":"    @Test","lastModifiedDate":"2021-09-15"},{"lineNumber":59,"author":{"gitId":"hpkoh"},"content":"    public void parseEventCommandTest_noStartDate_invalidInputExceptionThrown(){","lastModifiedDate":"2021-09-15"},{"lineNumber":60,"author":{"gitId":"hpkoh"},"content":"        Assertions.assertThrows(InvalidInputException.class,","lastModifiedDate":"2021-09-15"},{"lineNumber":61,"author":{"gitId":"hpkoh"},"content":"                () -\u003e Parser.parseEventCommand(\"hehexd /to 2020-05-10\"));","lastModifiedDate":"2021-09-15"},{"lineNumber":62,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":63,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":64,"author":{"gitId":"hpkoh"},"content":"    @Test","lastModifiedDate":"2021-09-15"},{"lineNumber":65,"author":{"gitId":"hpkoh"},"content":"    public void parseEventCommandTest_noEndDate_invalidInputExceptionThrown(){","lastModifiedDate":"2021-09-15"},{"lineNumber":66,"author":{"gitId":"hpkoh"},"content":"        Assertions.assertThrows(InvalidInputException.class,","lastModifiedDate":"2021-09-15"},{"lineNumber":67,"author":{"gitId":"hpkoh"},"content":"                () -\u003e Parser.parseEventCommand(\"hehexd /from 2020-05-10\"));","lastModifiedDate":"2021-09-15"},{"lineNumber":68,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":69,"author":{"gitId":"hpkoh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":70,"author":{"gitId":"hpkoh"},"content":"    @Test","lastModifiedDate":"2021-09-15"},{"lineNumber":71,"author":{"gitId":"hpkoh"},"content":"    public void parseEventCommandTest_invalidDateFormat_invalidInputExceptionThrown(){","lastModifiedDate":"2021-09-15"},{"lineNumber":72,"author":{"gitId":"hpkoh"},"content":"        Assertions.assertThrows(InvalidInputException.class,","lastModifiedDate":"2021-09-15"},{"lineNumber":73,"author":{"gitId":"hpkoh"},"content":"                () -\u003e Parser.parseEventCommand(\"hehexd /from 2020/05/10 /to 2020/05/10\"));","lastModifiedDate":"2021-09-15"},{"lineNumber":74,"author":{"gitId":"hpkoh"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"hpkoh"},"content":"    ","lastModifiedDate":"2021-08-28"},{"lineNumber":76,"author":{"gitId":"hpkoh"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"hpkoh":76}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"hpkoh"},"content":"todo borrow book","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"hpkoh"},"content":"deadline return book /by 2019-10-15","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"hpkoh"},"content":"event project meeting /from 2019-10-15 /to 2019-10-15","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"hpkoh"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"hpkoh"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"hpkoh":5}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"hpkoh"},"content":"# run the program, feed duke.commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"hpkoh":1,"-":37}}]
