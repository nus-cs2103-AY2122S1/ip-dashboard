[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"charliemoweng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"charliemoweng"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"charliemoweng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"charliemoweng"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"charliemoweng"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"charliemoweng"},"content":"    // protected String ddlByTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"charliemoweng"},"content":"    protected LocalDateTime ddlDateTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"charliemoweng"},"content":"    private DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"EEE, dd/MMM/yyyy hh:mm a\");","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"charliemoweng"},"content":"    public Deadline(String deadlineName, LocalDateTime byTime) {","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"charliemoweng"},"content":"        super(deadlineName);","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"charliemoweng"},"content":"        this.ddlDateTime \u003d byTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"charliemoweng"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"charliemoweng"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"charliemoweng"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formatter.format(ddlDateTime) + \")\";","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"charliemoweng"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"charliemoweng":20}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"charliemoweng"},"content":"import java.util.Locale;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"charliemoweng"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"charliemoweng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"charliemoweng"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"charliemoweng"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"charliemoweng"},"content":"import java.io.File;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"charliemoweng"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"charliemoweng"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"charliemoweng"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"charliemoweng"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"charliemoweng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"charliemoweng"},"content":"    private static void appendToFile(String filePath, String textToAppend) throws IOException {","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"charliemoweng"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true); // create a FileWriter in append mode","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"charliemoweng"},"content":"        fw.write(textToAppend);","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"charliemoweng"},"content":"        fw.close();","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"charliemoweng"},"content":"    private static void writeToFile(String filePath, String textToAdd) throws IOException {","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"charliemoweng"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"charliemoweng"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"charliemoweng"},"content":"        fw.close();","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"charliemoweng"},"content":"//    private static void printFileContents(File file) throws FileNotFoundException {","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"charliemoweng"},"content":"//        //File f \u003d new File(filePath); // create a File for the given file path","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"charliemoweng"},"content":"//        Scanner s \u003d new Scanner(file); // create a Scanner using the File as the source","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"charliemoweng"},"content":"//        while (s.hasNext()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"charliemoweng"},"content":"//            System.out.println(s.nextLine());","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"charliemoweng"},"content":"//        }","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"charliemoweng"},"content":"//    }","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":36,"author":{"gitId":"charliemoweng"},"content":"        String end \u003d \"bye\";","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"charliemoweng"},"content":"        String display \u003d \"list\";","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"charliemoweng"},"content":"        String lineBreak \u003d \"------------------------------\";","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"charliemoweng"},"content":"        String markDone \u003d \"done\";","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"charliemoweng"},"content":"        String deleteTask \u003d \"delete\";","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"charliemoweng"},"content":"        String taskTodo \u003d \"todo\";","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"charliemoweng"},"content":"        String taskDdl \u003d \"deadline\";","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"charliemoweng"},"content":"        String taskEve \u003d \"event\";","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"charliemoweng"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy kk:mm\", Locale.ENGLISH);","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"charliemoweng"},"content":"        // a List to store all user-generated Tasks","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"charliemoweng"},"content":"        ArrayList\u003cTask\u003e inputs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"charliemoweng"},"content":"        // a List to store all Tasks read from data.txt","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"charliemoweng"},"content":"        ArrayList\u003cString\u003e dataRead \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"charliemoweng"},"content":"        // check and create folder and file to save data","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"charliemoweng"},"content":"        File data \u003d new File(\"./data\");","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"charliemoweng"},"content":"        File dataFile \u003d new File(\"./data/data.txt\");","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"charliemoweng"},"content":"        // if data folder does not exist, create folder and file","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"charliemoweng"},"content":"        if (!data.exists()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"charliemoweng"},"content":"            data.mkdir();","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"charliemoweng"},"content":"            try {","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"charliemoweng"},"content":"                File dataDirectory \u003d new File(\"./data/data.txt\");","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"charliemoweng"},"content":"                if (dataDirectory.createNewFile()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"charliemoweng"},"content":"                    System.out.println(\"Data file has been created.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"charliemoweng"},"content":"                } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"charliemoweng"},"content":"                    // System.out.println(\"Data folder is already present.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"charliemoweng"},"content":"                }","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"charliemoweng"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"charliemoweng"},"content":"                System.out.println(\"An error occurred.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"charliemoweng"},"content":"                e.printStackTrace();","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"charliemoweng"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"charliemoweng"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"charliemoweng"},"content":"        // if data.txt does not exist, create file","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"charliemoweng"},"content":"        if (!dataFile.exists()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"charliemoweng"},"content":"            try {","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"charliemoweng"},"content":"                File dataDirectory \u003d new File(\"./data/data.txt\");","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"charliemoweng"},"content":"                if (dataDirectory.createNewFile()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"charliemoweng"},"content":"                    System.out.println(\"Data file has been created.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"charliemoweng"},"content":"                } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"charliemoweng"},"content":"                    // System.out.println(\"Data folder is already present.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"charliemoweng"},"content":"                }","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"charliemoweng"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"charliemoweng"},"content":"                System.out.println(\"An error occurred.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"charliemoweng"},"content":"                e.printStackTrace();","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"charliemoweng"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"charliemoweng"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"charliemoweng"},"content":"        // if data.txt exists","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"charliemoweng"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"charliemoweng"},"content":"            Scanner scanner \u003d new Scanner(dataFile);","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"charliemoweng"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"charliemoweng"},"content":"                dataRead.add(scanner.nextLine());","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"charliemoweng"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"charliemoweng"},"content":"            for (int i \u003d 0; i \u003c dataRead.size(); i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"charliemoweng"},"content":"                String toAdd \u003d dataRead.get(i);","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"charliemoweng"},"content":"                // case Todo","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"charliemoweng"},"content":"                if (toAdd.charAt(1) \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"charliemoweng"},"content":"                    String[] parts \u003d toAdd.split(\"] \");","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"charliemoweng"},"content":"                    String todoName \u003d parts[1];","lastModifiedDate":"2021-08-26"},{"lineNumber":99,"author":{"gitId":"charliemoweng"},"content":"                    Todo todoToAdd \u003d new Todo(todoName);","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"charliemoweng"},"content":"                    if (toAdd.charAt(4) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"charliemoweng"},"content":"                        todoToAdd.setDone();","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"charliemoweng"},"content":"                    }","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"charliemoweng"},"content":"                    inputs.add(todoToAdd);","lastModifiedDate":"2021-08-26"},{"lineNumber":104,"author":{"gitId":"charliemoweng"},"content":"                }","lastModifiedDate":"2021-08-26"},{"lineNumber":105,"author":{"gitId":"charliemoweng"},"content":"                // case Deadline","lastModifiedDate":"2021-08-26"},{"lineNumber":106,"author":{"gitId":"charliemoweng"},"content":"                if (toAdd.charAt(1) \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2021-08-26"},{"lineNumber":107,"author":{"gitId":"charliemoweng"},"content":"                    String[] parts1 \u003d toAdd.split(\"] \");","lastModifiedDate":"2021-08-26"},{"lineNumber":108,"author":{"gitId":"charliemoweng"},"content":"                    String nameTime \u003d parts1[1];","lastModifiedDate":"2021-08-26"},{"lineNumber":109,"author":{"gitId":"charliemoweng"},"content":"                    String[] parts2 \u003d nameTime.split(\" \\\\(by: \");","lastModifiedDate":"2021-08-26"},{"lineNumber":110,"author":{"gitId":"charliemoweng"},"content":"                    String ddlName \u003d parts2[0];","lastModifiedDate":"2021-08-26"},{"lineNumber":111,"author":{"gitId":"charliemoweng"},"content":"                    String ddlTimeStr \u003d parts2[1].substring(0, parts2[1].length() - 1);","lastModifiedDate":"2021-08-26"},{"lineNumber":112,"author":{"gitId":"charliemoweng"},"content":"                    DateTimeFormatter formatterDdl \u003d DateTimeFormatter.ofPattern(","lastModifiedDate":"2021-08-26"},{"lineNumber":113,"author":{"gitId":"charliemoweng"},"content":"                            \"EEE, dd/MMM/yyyy hh:mm a\");","lastModifiedDate":"2021-08-26"},{"lineNumber":114,"author":{"gitId":"charliemoweng"},"content":"                    LocalDateTime dateTime \u003d LocalDateTime.parse(ddlTimeStr, formatterDdl);","lastModifiedDate":"2021-08-26"},{"lineNumber":115,"author":{"gitId":"charliemoweng"},"content":"                    Deadline ddlToAdd \u003d new Deadline(ddlName, dateTime);","lastModifiedDate":"2021-08-26"},{"lineNumber":116,"author":{"gitId":"charliemoweng"},"content":"                    if (toAdd.charAt(4) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2021-08-26"},{"lineNumber":117,"author":{"gitId":"charliemoweng"},"content":"                        ddlToAdd.setDone();","lastModifiedDate":"2021-08-26"},{"lineNumber":118,"author":{"gitId":"charliemoweng"},"content":"                    }","lastModifiedDate":"2021-08-26"},{"lineNumber":119,"author":{"gitId":"charliemoweng"},"content":"                    inputs.add(ddlToAdd);","lastModifiedDate":"2021-08-26"},{"lineNumber":120,"author":{"gitId":"charliemoweng"},"content":"                }","lastModifiedDate":"2021-08-26"},{"lineNumber":121,"author":{"gitId":"charliemoweng"},"content":"                // case Event","lastModifiedDate":"2021-08-26"},{"lineNumber":122,"author":{"gitId":"charliemoweng"},"content":"                if (toAdd.charAt(1) \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2021-08-26"},{"lineNumber":123,"author":{"gitId":"charliemoweng"},"content":"                    String[] parts1 \u003d toAdd.split(\"] \");","lastModifiedDate":"2021-08-26"},{"lineNumber":124,"author":{"gitId":"charliemoweng"},"content":"                    String nameTime \u003d parts1[1];","lastModifiedDate":"2021-08-26"},{"lineNumber":125,"author":{"gitId":"charliemoweng"},"content":"                    String[] parts2 \u003d nameTime.split(\" \\\\(at: \");","lastModifiedDate":"2021-08-26"},{"lineNumber":126,"author":{"gitId":"charliemoweng"},"content":"                    String eveName \u003d parts2[0];","lastModifiedDate":"2021-08-26"},{"lineNumber":127,"author":{"gitId":"charliemoweng"},"content":"                    String eveTimeStr \u003d parts2[1].substring(0, parts2[1].length() - 1);","lastModifiedDate":"2021-08-26"},{"lineNumber":128,"author":{"gitId":"charliemoweng"},"content":"                    DateTimeFormatter formatterEve \u003d DateTimeFormatter.ofPattern(","lastModifiedDate":"2021-08-26"},{"lineNumber":129,"author":{"gitId":"charliemoweng"},"content":"                            \"EEE, dd/MMM/yyyy hh:mm a\");","lastModifiedDate":"2021-08-26"},{"lineNumber":130,"author":{"gitId":"charliemoweng"},"content":"                    LocalDateTime dateTime \u003d LocalDateTime.parse(eveTimeStr, formatterEve);","lastModifiedDate":"2021-08-26"},{"lineNumber":131,"author":{"gitId":"charliemoweng"},"content":"                    Event eveToAdd \u003d new Event(eveName, dateTime);","lastModifiedDate":"2021-08-26"},{"lineNumber":132,"author":{"gitId":"charliemoweng"},"content":"                    if (toAdd.charAt(4) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2021-08-26"},{"lineNumber":133,"author":{"gitId":"charliemoweng"},"content":"                        eveToAdd.setDone();","lastModifiedDate":"2021-08-26"},{"lineNumber":134,"author":{"gitId":"charliemoweng"},"content":"                    }","lastModifiedDate":"2021-08-26"},{"lineNumber":135,"author":{"gitId":"charliemoweng"},"content":"                    inputs.add(eveToAdd);","lastModifiedDate":"2021-08-26"},{"lineNumber":136,"author":{"gitId":"charliemoweng"},"content":"                }","lastModifiedDate":"2021-08-26"},{"lineNumber":137,"author":{"gitId":"charliemoweng"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":138,"author":{"gitId":"charliemoweng"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":139,"author":{"gitId":"charliemoweng"},"content":"            System.out.println(\"data.txt is not found.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":140,"author":{"gitId":"charliemoweng"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":141,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":142,"author":{"gitId":"charliemoweng"},"content":"//        for (int i \u003d 0; i \u003c inputs.size(); i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":143,"author":{"gitId":"charliemoweng"},"content":"//            System.out.println(\"test read todo and ddl\\n\" + dataRead.get(i));","lastModifiedDate":"2021-08-26"},{"lineNumber":144,"author":{"gitId":"charliemoweng"},"content":"//        }","lastModifiedDate":"2021-08-26"},{"lineNumber":145,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":146,"author":{"gitId":"charliemoweng"},"content":"        String dataFileStr \u003d \"./data/data.txt\";","lastModifiedDate":"2021-08-26"},{"lineNumber":147,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":148,"author":{"gitId":"charliemoweng"},"content":"        // Welcome message","lastModifiedDate":"2021-08-19"},{"lineNumber":149,"author":{"gitId":"charliemoweng"},"content":"        System.out.println(lineBreak","lastModifiedDate":"2021-08-19"},{"lineNumber":150,"author":{"gitId":"charliemoweng"},"content":"                + \"\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":151,"author":{"gitId":"charliemoweng"},"content":"                + \"Hello! I\u0027m Azure.\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":152,"author":{"gitId":"charliemoweng"},"content":"                + \"You can create Tasks here.\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":153,"author":{"gitId":"charliemoweng"},"content":"                + \"To add a Todo, simply key in `todo` followed by the name;\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":154,"author":{"gitId":"charliemoweng"},"content":"                + \"To add a Deadline, simply key in `deadline` followed by its name, `/by` and the deadline;\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":155,"author":{"gitId":"charliemoweng"},"content":"                + \"To add an Event, simply key in `event` followed by its name, `/at` and its time.\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":156,"author":{"gitId":"charliemoweng"},"content":"                + \"Please key in the date and time in the format of `26/08/2021 20:20`.\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":157,"author":{"gitId":"charliemoweng"},"content":"                + \"How can I help you today?\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":158,"author":{"gitId":"charliemoweng"},"content":"                + lineBreak + \"\\n\");","lastModifiedDate":"2021-08-19"},{"lineNumber":159,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":160,"author":{"gitId":"charliemoweng"},"content":"        Scanner myObj \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-19"},{"lineNumber":161,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":162,"author":{"gitId":"charliemoweng"},"content":"        // String input","lastModifiedDate":"2021-08-19"},{"lineNumber":163,"author":{"gitId":"charliemoweng"},"content":"        while(true) {","lastModifiedDate":"2021-08-19"},{"lineNumber":164,"author":{"gitId":"charliemoweng"},"content":"            String input \u003d myObj.nextLine();","lastModifiedDate":"2021-08-19"},{"lineNumber":165,"author":{"gitId":"charliemoweng"},"content":"            Task newTask \u003d new Task(input);","lastModifiedDate":"2021-08-19"},{"lineNumber":166,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":167,"author":{"gitId":"charliemoweng"},"content":"            // mark a task as Done","lastModifiedDate":"2021-08-19"},{"lineNumber":168,"author":{"gitId":"charliemoweng"},"content":"            Pattern pattern \u003d Pattern.compile(\"done\\\\s\\\\d+\");","lastModifiedDate":"2021-08-19"},{"lineNumber":169,"author":{"gitId":"charliemoweng"},"content":"            Matcher matcher \u003d pattern.matcher(input);","lastModifiedDate":"2021-08-19"},{"lineNumber":170,"author":{"gitId":"charliemoweng"},"content":"            boolean matchFound \u003d matcher.find();","lastModifiedDate":"2021-08-19"},{"lineNumber":171,"author":{"gitId":"charliemoweng"},"content":"            if (matchFound) {","lastModifiedDate":"2021-08-19"},{"lineNumber":172,"author":{"gitId":"charliemoweng"},"content":"                String[] parts \u003d input.split(\" \");","lastModifiedDate":"2021-08-19"},{"lineNumber":173,"author":{"gitId":"charliemoweng"},"content":"                int index \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2021-08-19"},{"lineNumber":174,"author":{"gitId":"charliemoweng"},"content":"                if (parts[0].equals(markDone) \u0026\u0026 index \u003c inputs.size()) {","lastModifiedDate":"2021-08-19"},{"lineNumber":175,"author":{"gitId":"charliemoweng"},"content":"                    inputs.get(index).setDone();","lastModifiedDate":"2021-08-19"},{"lineNumber":176,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":177,"author":{"gitId":"charliemoweng"},"content":"                    try {","lastModifiedDate":"2021-08-26"},{"lineNumber":178,"author":{"gitId":"charliemoweng"},"content":"                        writeToFile(dataFileStr, inputs.get(0).toString() + System.lineSeparator());","lastModifiedDate":"2021-08-26"},{"lineNumber":179,"author":{"gitId":"charliemoweng"},"content":"                    } catch (IOException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":180,"author":{"gitId":"charliemoweng"},"content":"                        System.out.println(\"Something is wrong... \" + e.getMessage());","lastModifiedDate":"2021-08-26"},{"lineNumber":181,"author":{"gitId":"charliemoweng"},"content":"                    }","lastModifiedDate":"2021-08-26"},{"lineNumber":182,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":183,"author":{"gitId":"charliemoweng"},"content":"                    for (int i \u003d 1; i \u003c inputs.size(); i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":184,"author":{"gitId":"charliemoweng"},"content":"                        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":185,"author":{"gitId":"charliemoweng"},"content":"                            appendToFile(dataFileStr, inputs.get(i).toString() + System.lineSeparator());","lastModifiedDate":"2021-08-26"},{"lineNumber":186,"author":{"gitId":"charliemoweng"},"content":"                        } catch (IOException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":187,"author":{"gitId":"charliemoweng"},"content":"                            System.out.println(\"Something is wrong... \" + e.getMessage());","lastModifiedDate":"2021-08-26"},{"lineNumber":188,"author":{"gitId":"charliemoweng"},"content":"                        }","lastModifiedDate":"2021-08-26"},{"lineNumber":189,"author":{"gitId":"charliemoweng"},"content":"                    }","lastModifiedDate":"2021-08-26"},{"lineNumber":190,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":191,"author":{"gitId":"charliemoweng"},"content":"                    System.out.println(\"Nice! I\u0027ve marked this task as done: \");","lastModifiedDate":"2021-08-19"},{"lineNumber":192,"author":{"gitId":"charliemoweng"},"content":"                    System.out.println(inputs.get(index).toString());","lastModifiedDate":"2021-08-19"},{"lineNumber":193,"author":{"gitId":"charliemoweng"},"content":"                    System.out.println(lineBreak + \"\\n\");","lastModifiedDate":"2021-08-19"},{"lineNumber":194,"author":{"gitId":"charliemoweng"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":195,"author":{"gitId":"charliemoweng"},"content":"                continue;","lastModifiedDate":"2021-08-19"},{"lineNumber":196,"author":{"gitId":"charliemoweng"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":197,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":198,"author":{"gitId":"charliemoweng"},"content":"            // delete a task","lastModifiedDate":"2021-08-19"},{"lineNumber":199,"author":{"gitId":"charliemoweng"},"content":"            Pattern patternDelete \u003d Pattern.compile(\"delete\\\\s\\\\d+\");","lastModifiedDate":"2021-08-19"},{"lineNumber":200,"author":{"gitId":"charliemoweng"},"content":"            Matcher matcherDelete \u003d patternDelete.matcher(input);","lastModifiedDate":"2021-08-19"},{"lineNumber":201,"author":{"gitId":"charliemoweng"},"content":"            boolean matchFoundDelete \u003d matcherDelete.find();","lastModifiedDate":"2021-08-19"},{"lineNumber":202,"author":{"gitId":"charliemoweng"},"content":"            if (matchFoundDelete) {","lastModifiedDate":"2021-08-19"},{"lineNumber":203,"author":{"gitId":"charliemoweng"},"content":"                String[] parts \u003d input.split(\" \");","lastModifiedDate":"2021-08-19"},{"lineNumber":204,"author":{"gitId":"charliemoweng"},"content":"                int index \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2021-08-19"},{"lineNumber":205,"author":{"gitId":"charliemoweng"},"content":"                if (parts[0].equals(deleteTask) \u0026\u0026 index \u003c inputs.size()) {","lastModifiedDate":"2021-08-19"},{"lineNumber":206,"author":{"gitId":"charliemoweng"},"content":"                    System.out.println(\"Noted. I\u0027ve removed this task: \");","lastModifiedDate":"2021-08-19"},{"lineNumber":207,"author":{"gitId":"charliemoweng"},"content":"                    System.out.println(inputs.get(index).toString());","lastModifiedDate":"2021-08-19"},{"lineNumber":208,"author":{"gitId":"charliemoweng"},"content":"                    inputs.remove(index);","lastModifiedDate":"2021-08-19"},{"lineNumber":209,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":210,"author":{"gitId":"charliemoweng"},"content":"                    try {","lastModifiedDate":"2021-08-26"},{"lineNumber":211,"author":{"gitId":"charliemoweng"},"content":"                        writeToFile(dataFileStr, inputs.get(0).toString() + System.lineSeparator());","lastModifiedDate":"2021-08-26"},{"lineNumber":212,"author":{"gitId":"charliemoweng"},"content":"                    } catch (IOException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":213,"author":{"gitId":"charliemoweng"},"content":"                        System.out.println(\"Something is wrong... \" + e.getMessage());","lastModifiedDate":"2021-08-26"},{"lineNumber":214,"author":{"gitId":"charliemoweng"},"content":"                    }","lastModifiedDate":"2021-08-26"},{"lineNumber":215,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":216,"author":{"gitId":"charliemoweng"},"content":"                    for (int i \u003d 1; i \u003c inputs.size(); i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":217,"author":{"gitId":"charliemoweng"},"content":"                        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":218,"author":{"gitId":"charliemoweng"},"content":"                            appendToFile(dataFileStr, inputs.get(i).toString() + System.lineSeparator());","lastModifiedDate":"2021-08-26"},{"lineNumber":219,"author":{"gitId":"charliemoweng"},"content":"                        } catch (IOException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":220,"author":{"gitId":"charliemoweng"},"content":"                            System.out.println(\"Something is wrong... \" + e.getMessage());","lastModifiedDate":"2021-08-26"},{"lineNumber":221,"author":{"gitId":"charliemoweng"},"content":"                        }","lastModifiedDate":"2021-08-26"},{"lineNumber":222,"author":{"gitId":"charliemoweng"},"content":"                    }","lastModifiedDate":"2021-08-26"},{"lineNumber":223,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":224,"author":{"gitId":"charliemoweng"},"content":"                    System.out.println(lineBreak + \"\\n\");","lastModifiedDate":"2021-08-19"},{"lineNumber":225,"author":{"gitId":"charliemoweng"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":226,"author":{"gitId":"charliemoweng"},"content":"                continue;","lastModifiedDate":"2021-08-19"},{"lineNumber":227,"author":{"gitId":"charliemoweng"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":228,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":229,"author":{"gitId":"charliemoweng"},"content":"            // normal input","lastModifiedDate":"2021-08-19"},{"lineNumber":230,"author":{"gitId":"charliemoweng"},"content":"            if (!input.equals(end) \u0026\u0026 !input.equals(display)) {","lastModifiedDate":"2021-08-19"},{"lineNumber":231,"author":{"gitId":"charliemoweng"},"content":"                String[] group \u003d input.split(\" \");","lastModifiedDate":"2021-08-19"},{"lineNumber":232,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":233,"author":{"gitId":"charliemoweng"},"content":"                // Case Todo","lastModifiedDate":"2021-08-19"},{"lineNumber":234,"author":{"gitId":"charliemoweng"},"content":"                if (group[0].equals(taskTodo) \u0026\u0026 group.length \u003e 1) {","lastModifiedDate":"2021-08-19"},{"lineNumber":235,"author":{"gitId":"charliemoweng"},"content":"                    String todoToAdd \u003d input.substring(5); // name of the task is after \"todo\" and space","lastModifiedDate":"2021-08-19"},{"lineNumber":236,"author":{"gitId":"charliemoweng"},"content":"                    Task newTodo \u003d new Todo(todoToAdd);","lastModifiedDate":"2021-08-19"},{"lineNumber":237,"author":{"gitId":"charliemoweng"},"content":"                    inputs.add(newTodo);","lastModifiedDate":"2021-08-19"},{"lineNumber":238,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":239,"author":{"gitId":"charliemoweng"},"content":"                    try {","lastModifiedDate":"2021-08-26"},{"lineNumber":240,"author":{"gitId":"charliemoweng"},"content":"                        writeToFile(dataFileStr, inputs.get(0).toString() + System.lineSeparator());","lastModifiedDate":"2021-08-26"},{"lineNumber":241,"author":{"gitId":"charliemoweng"},"content":"                    } catch (IOException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":242,"author":{"gitId":"charliemoweng"},"content":"                        System.out.println(\"Something is wrong... \" + e.getMessage());","lastModifiedDate":"2021-08-26"},{"lineNumber":243,"author":{"gitId":"charliemoweng"},"content":"                    }","lastModifiedDate":"2021-08-26"},{"lineNumber":244,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":245,"author":{"gitId":"charliemoweng"},"content":"                    for (int i \u003d 1; i \u003c inputs.size(); i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":246,"author":{"gitId":"charliemoweng"},"content":"                        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":247,"author":{"gitId":"charliemoweng"},"content":"                            appendToFile(dataFileStr, inputs.get(i).toString() + System.lineSeparator());","lastModifiedDate":"2021-08-26"},{"lineNumber":248,"author":{"gitId":"charliemoweng"},"content":"                        } catch (IOException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":249,"author":{"gitId":"charliemoweng"},"content":"                            System.out.println(\"Something is wrong... \" + e.getMessage());","lastModifiedDate":"2021-08-26"},{"lineNumber":250,"author":{"gitId":"charliemoweng"},"content":"                        }","lastModifiedDate":"2021-08-26"},{"lineNumber":251,"author":{"gitId":"charliemoweng"},"content":"                    }","lastModifiedDate":"2021-08-26"},{"lineNumber":252,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":253,"author":{"gitId":"charliemoweng"},"content":"                    System.out.println(\"Roger! Added the task: \");","lastModifiedDate":"2021-08-19"},{"lineNumber":254,"author":{"gitId":"charliemoweng"},"content":"                    System.out.println(\"    \" + newTodo.toString());","lastModifiedDate":"2021-08-19"},{"lineNumber":255,"author":{"gitId":"charliemoweng"},"content":"                    System.out.println(\"Now you have \" + inputs.size() + \" tasks in your list.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":256,"author":{"gitId":"charliemoweng"},"content":"                    System.out.println(lineBreak + \"\\n\");","lastModifiedDate":"2021-08-19"},{"lineNumber":257,"author":{"gitId":"charliemoweng"},"content":"                    continue;","lastModifiedDate":"2021-08-19"},{"lineNumber":258,"author":{"gitId":"charliemoweng"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":259,"author":{"gitId":"charliemoweng"},"content":"                if (group[0].equals(taskTodo) \u0026\u0026 group.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-19"},{"lineNumber":260,"author":{"gitId":"charliemoweng"},"content":"                    System.out.println(\" OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":261,"author":{"gitId":"charliemoweng"},"content":"                    System.out.println(lineBreak + \"\\n\");","lastModifiedDate":"2021-08-19"},{"lineNumber":262,"author":{"gitId":"charliemoweng"},"content":"                    continue;","lastModifiedDate":"2021-08-19"},{"lineNumber":263,"author":{"gitId":"charliemoweng"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":264,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":265,"author":{"gitId":"charliemoweng"},"content":"                // Case Deadline","lastModifiedDate":"2021-08-19"},{"lineNumber":266,"author":{"gitId":"charliemoweng"},"content":"                if (group[0].equals(taskDdl) \u0026\u0026 input.contains(\" /by \")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":267,"author":{"gitId":"charliemoweng"},"content":"                    String[] ddlGroup \u003d input.split(\" /by \");","lastModifiedDate":"2021-08-19"},{"lineNumber":268,"author":{"gitId":"charliemoweng"},"content":"                    String ddlToAdd \u003d ddlGroup[0].substring(9); // name of the task is after \"deadline\" and space","lastModifiedDate":"2021-08-19"},{"lineNumber":269,"author":{"gitId":"charliemoweng"},"content":"                    String ddlByTime \u003d ddlGroup[1];","lastModifiedDate":"2021-08-19"},{"lineNumber":270,"author":{"gitId":"charliemoweng"},"content":"                    LocalDateTime dateTime \u003d LocalDateTime.parse(ddlByTime, formatter);","lastModifiedDate":"2021-08-26"},{"lineNumber":271,"author":{"gitId":"charliemoweng"},"content":"                    Task newDeadline \u003d new Deadline(ddlToAdd, dateTime);","lastModifiedDate":"2021-08-26"},{"lineNumber":272,"author":{"gitId":"charliemoweng"},"content":"                    inputs.add(newDeadline);","lastModifiedDate":"2021-08-19"},{"lineNumber":273,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":274,"author":{"gitId":"charliemoweng"},"content":"                    try {","lastModifiedDate":"2021-08-26"},{"lineNumber":275,"author":{"gitId":"charliemoweng"},"content":"                        writeToFile(dataFileStr, inputs.get(0).toString() + System.lineSeparator());","lastModifiedDate":"2021-08-26"},{"lineNumber":276,"author":{"gitId":"charliemoweng"},"content":"                    } catch (IOException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":277,"author":{"gitId":"charliemoweng"},"content":"                        System.out.println(\"Something is wrong... \" + e.getMessage());","lastModifiedDate":"2021-08-26"},{"lineNumber":278,"author":{"gitId":"charliemoweng"},"content":"                    }","lastModifiedDate":"2021-08-26"},{"lineNumber":279,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":280,"author":{"gitId":"charliemoweng"},"content":"                    for (int i \u003d 1; i \u003c inputs.size(); i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":281,"author":{"gitId":"charliemoweng"},"content":"                        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":282,"author":{"gitId":"charliemoweng"},"content":"                            appendToFile(dataFileStr, inputs.get(i).toString() + System.lineSeparator());","lastModifiedDate":"2021-08-26"},{"lineNumber":283,"author":{"gitId":"charliemoweng"},"content":"                        } catch (IOException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":284,"author":{"gitId":"charliemoweng"},"content":"                            System.out.println(\"Something is wrong... \" + e.getMessage());","lastModifiedDate":"2021-08-26"},{"lineNumber":285,"author":{"gitId":"charliemoweng"},"content":"                        }","lastModifiedDate":"2021-08-26"},{"lineNumber":286,"author":{"gitId":"charliemoweng"},"content":"                    }","lastModifiedDate":"2021-08-26"},{"lineNumber":287,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":288,"author":{"gitId":"charliemoweng"},"content":"                    System.out.println(\"Roger! Added the task: \");","lastModifiedDate":"2021-08-19"},{"lineNumber":289,"author":{"gitId":"charliemoweng"},"content":"                    System.out.println(\"    \" + newDeadline.toString());","lastModifiedDate":"2021-08-19"},{"lineNumber":290,"author":{"gitId":"charliemoweng"},"content":"                    System.out.println(\"Now you have \" + inputs.size() + \" tasks in your list.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":291,"author":{"gitId":"charliemoweng"},"content":"                    System.out.println(lineBreak + \"\\n\");","lastModifiedDate":"2021-08-19"},{"lineNumber":292,"author":{"gitId":"charliemoweng"},"content":"                    continue;","lastModifiedDate":"2021-08-19"},{"lineNumber":293,"author":{"gitId":"charliemoweng"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":294,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":295,"author":{"gitId":"charliemoweng"},"content":"                // Case Event","lastModifiedDate":"2021-08-19"},{"lineNumber":296,"author":{"gitId":"charliemoweng"},"content":"                if (group[0].equals(taskEve) \u0026\u0026 input.contains(\" /at \")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":297,"author":{"gitId":"charliemoweng"},"content":"                    String[] eveGroup \u003d input.split(\" /at \");","lastModifiedDate":"2021-08-19"},{"lineNumber":298,"author":{"gitId":"charliemoweng"},"content":"                    String eveToAdd \u003d eveGroup[0].substring(6); // name of the task is after \"event\" and space","lastModifiedDate":"2021-08-19"},{"lineNumber":299,"author":{"gitId":"charliemoweng"},"content":"                    String eveAtTime \u003d eveGroup[1];","lastModifiedDate":"2021-08-19"},{"lineNumber":300,"author":{"gitId":"charliemoweng"},"content":"                    LocalDateTime dateTime \u003d LocalDateTime.parse(eveAtTime, formatter);","lastModifiedDate":"2021-08-26"},{"lineNumber":301,"author":{"gitId":"charliemoweng"},"content":"                    Task newEvent \u003d new Event(eveToAdd, dateTime);","lastModifiedDate":"2021-08-26"},{"lineNumber":302,"author":{"gitId":"charliemoweng"},"content":"                    inputs.add(newEvent);","lastModifiedDate":"2021-08-19"},{"lineNumber":303,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":304,"author":{"gitId":"charliemoweng"},"content":"                    try {","lastModifiedDate":"2021-08-26"},{"lineNumber":305,"author":{"gitId":"charliemoweng"},"content":"                        writeToFile(dataFileStr, inputs.get(0).toString() + System.lineSeparator());","lastModifiedDate":"2021-08-26"},{"lineNumber":306,"author":{"gitId":"charliemoweng"},"content":"                    } catch (IOException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":307,"author":{"gitId":"charliemoweng"},"content":"                        System.out.println(\"Something is wrong... \" + e.getMessage());","lastModifiedDate":"2021-08-26"},{"lineNumber":308,"author":{"gitId":"charliemoweng"},"content":"                    }","lastModifiedDate":"2021-08-26"},{"lineNumber":309,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":310,"author":{"gitId":"charliemoweng"},"content":"                    for (int i \u003d 1; i \u003c inputs.size(); i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":311,"author":{"gitId":"charliemoweng"},"content":"                        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":312,"author":{"gitId":"charliemoweng"},"content":"                            appendToFile(dataFileStr, inputs.get(i).toString() + System.lineSeparator());","lastModifiedDate":"2021-08-26"},{"lineNumber":313,"author":{"gitId":"charliemoweng"},"content":"                        } catch (IOException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":314,"author":{"gitId":"charliemoweng"},"content":"                            System.out.println(\"Something is wrong... \" + e.getMessage());","lastModifiedDate":"2021-08-26"},{"lineNumber":315,"author":{"gitId":"charliemoweng"},"content":"                        }","lastModifiedDate":"2021-08-26"},{"lineNumber":316,"author":{"gitId":"charliemoweng"},"content":"                    }","lastModifiedDate":"2021-08-26"},{"lineNumber":317,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":318,"author":{"gitId":"charliemoweng"},"content":"                    System.out.println(\"Roger! Added the task: \");","lastModifiedDate":"2021-08-19"},{"lineNumber":319,"author":{"gitId":"charliemoweng"},"content":"                    System.out.println(\"    \" + newEvent.toString());","lastModifiedDate":"2021-08-19"},{"lineNumber":320,"author":{"gitId":"charliemoweng"},"content":"                    System.out.println(\"Now you have \" + inputs.size() + \" tasks in your list.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":321,"author":{"gitId":"charliemoweng"},"content":"                    System.out.println(lineBreak + \"\\n\");","lastModifiedDate":"2021-08-19"},{"lineNumber":322,"author":{"gitId":"charliemoweng"},"content":"                    continue;","lastModifiedDate":"2021-08-19"},{"lineNumber":323,"author":{"gitId":"charliemoweng"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":324,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":325,"author":{"gitId":"charliemoweng"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":326,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":327,"author":{"gitId":"charliemoweng"},"content":"            // display saved inputs","lastModifiedDate":"2021-08-19"},{"lineNumber":328,"author":{"gitId":"charliemoweng"},"content":"            if (input.equals(display)) {","lastModifiedDate":"2021-08-19"},{"lineNumber":329,"author":{"gitId":"charliemoweng"},"content":"                System.out.println(\"Here are the tasks in your list: \");","lastModifiedDate":"2021-08-19"},{"lineNumber":330,"author":{"gitId":"charliemoweng"},"content":"                for (int i \u003d 0; i \u003c inputs.size(); i++) {","lastModifiedDate":"2021-08-19"},{"lineNumber":331,"author":{"gitId":"charliemoweng"},"content":"                    int index \u003d i + 1;","lastModifiedDate":"2021-08-19"},{"lineNumber":332,"author":{"gitId":"charliemoweng"},"content":"                    System.out.println(index + \". \" + inputs.get(i).toString());","lastModifiedDate":"2021-08-19"},{"lineNumber":333,"author":{"gitId":"charliemoweng"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":334,"author":{"gitId":"charliemoweng"},"content":"                System.out.println(lineBreak + \"\\n\");","lastModifiedDate":"2021-08-19"},{"lineNumber":335,"author":{"gitId":"charliemoweng"},"content":"                continue;","lastModifiedDate":"2021-08-19"},{"lineNumber":336,"author":{"gitId":"charliemoweng"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":337,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":338,"author":{"gitId":"charliemoweng"},"content":"            // exit","lastModifiedDate":"2021-08-19"},{"lineNumber":339,"author":{"gitId":"charliemoweng"},"content":"            if (input.equals(end)) {","lastModifiedDate":"2021-08-19"},{"lineNumber":340,"author":{"gitId":"charliemoweng"},"content":"                System.out.println(\"     Bye! See you next time! :)\" + \"\\n\" + lineBreak + \"\\n\");","lastModifiedDate":"2021-08-19"},{"lineNumber":341,"author":{"gitId":"charliemoweng"},"content":"                break;","lastModifiedDate":"2021-08-19"},{"lineNumber":342,"author":{"gitId":"charliemoweng"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":343,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":344,"author":{"gitId":"charliemoweng"},"content":"            // other inputs","lastModifiedDate":"2021-08-19"},{"lineNumber":345,"author":{"gitId":"charliemoweng"},"content":"            System.out.println(\" OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-19"},{"lineNumber":346,"author":{"gitId":"charliemoweng"},"content":"            System.out.println(lineBreak + \"\\n\");","lastModifiedDate":"2021-08-19"},{"lineNumber":347,"author":{"gitId":"charliemoweng"},"content":"            continue;","lastModifiedDate":"2021-08-19"},{"lineNumber":348,"author":{"gitId":"charliemoweng"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"charliemoweng":346,"-":4}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"charliemoweng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"charliemoweng"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"charliemoweng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"charliemoweng"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"charliemoweng"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"charliemoweng"},"content":"    protected LocalDateTime eveDateTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"charliemoweng"},"content":"    private DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"EEE, dd/MMM/yyyy hh:mm a\");","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"charliemoweng"},"content":"    public Event(String eventName, LocalDateTime atTime) {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"charliemoweng"},"content":"        super(eventName);","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"charliemoweng"},"content":"        this.eveDateTime \u003d atTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"charliemoweng"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"charliemoweng"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"charliemoweng"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + formatter.format(eveDateTime) + \")\";","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"charliemoweng"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"charliemoweng":19}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"charliemoweng"},"content":"public class Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"charliemoweng"},"content":"     protected String taskName;","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"charliemoweng"},"content":"     protected boolean isDone;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"charliemoweng"},"content":"     public Task(String taskName) {","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"charliemoweng"},"content":"         this.taskName \u003d taskName;","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"charliemoweng"},"content":"         this.isDone \u003d false;","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"charliemoweng"},"content":"     }","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"charliemoweng"},"content":"     public void setDone() {","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"charliemoweng"},"content":"         isDone \u003d true;","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"charliemoweng"},"content":"     }","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"charliemoweng"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"charliemoweng"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"charliemoweng"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"charliemoweng"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"charliemoweng"},"content":"         return \"[\" + this.getStatusIcon() + \"] \" + this.taskName;","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"charliemoweng"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"charliemoweng":23}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"charliemoweng"},"content":"public class Todo extends Task{","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"charliemoweng"},"content":"    public Todo(String todoName) {","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"charliemoweng"},"content":"        super(todoName);","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"charliemoweng"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"charliemoweng"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"charliemoweng"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"charliemoweng"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"charliemoweng":10}},{"path":"src/main/java/data/data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"charliemoweng"},"content":"[T][ ] todo1","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"charliemoweng"},"content":"[D][ ] ddl1 (by: Thu, 26/Aug/2021 08:20 pm)","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"charliemoweng"},"content":"[E][ ] event1 (at: Thu, 26/Aug/2021 08:20 pm)","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"charliemoweng":3}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"charliemoweng"},"content":"todo clean table","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"charliemoweng":1}}]
