[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"charliemoweng"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"charliemoweng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"charliemoweng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"charliemoweng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"charliemoweng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"charliemoweng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"charliemoweng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"charliemoweng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"charliemoweng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"charliemoweng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"charliemoweng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"charliemoweng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"charliemoweng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"charliemoweng"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-09-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"charliemoweng"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-09-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":45,"charliemoweng":17}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"charliemoweng"},"content":"package duke;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"charliemoweng"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"charliemoweng"},"content":"import duke.components.Parser;","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"charliemoweng"},"content":"import duke.components.Storage;","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"charliemoweng"},"content":"import duke.components.TaskList;","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"charliemoweng"},"content":"import duke.components.Ui;","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"charliemoweng"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"charliemoweng"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"charliemoweng"},"content":" * Duke is an application that can store Tasks for users.","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"charliemoweng"},"content":" * Users can store three types of tasks, Deadline, Event, and Todo.","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"charliemoweng"},"content":" * They can also mark a task as completed and view all tasks they have.","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"charliemoweng"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"charliemoweng"},"content":"    private static final String FILE_PATH \u003d \"./data/data.txt\";","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"charliemoweng"},"content":"    private Ui ui;","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"charliemoweng"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"charliemoweng"},"content":"    private Parser parser;","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"charliemoweng"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"charliemoweng"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"charliemoweng"},"content":"     * Creates a Duke object.","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"charliemoweng"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"charliemoweng"},"content":"    public Duke() {","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"charliemoweng"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"charliemoweng"},"content":"        this.storage \u003d new Storage(FILE_PATH);","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"charliemoweng"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"charliemoweng"},"content":"        this.taskList \u003d new TaskList(this.storage, this.ui, this.parser);","lastModifiedDate":"2021-09-04"},{"lineNumber":32,"author":{"gitId":"charliemoweng"},"content":"        storage.loadInto(taskList);","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"charliemoweng"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"charliemoweng"},"content":"     * Activates and runs the Duke application.","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"charliemoweng"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"charliemoweng"},"content":"    public void run() {","lastModifiedDate":"2021-09-04"},{"lineNumber":39,"author":{"gitId":"charliemoweng"},"content":"        storage.loadInto(taskList);","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"charliemoweng"},"content":"        ui.displayWelcomeMessage();","lastModifiedDate":"2021-09-04"},{"lineNumber":41,"author":{"gitId":"charliemoweng"},"content":"        Scanner myObj \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"charliemoweng"},"content":"        // String input","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"charliemoweng"},"content":"        while (true) {","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"charliemoweng"},"content":"            String input \u003d myObj.nextLine();","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"charliemoweng"},"content":"            if (parser.isMarkDoneCommand(input)) {","lastModifiedDate":"2021-09-04"},{"lineNumber":48,"author":{"gitId":"charliemoweng"},"content":"                taskList.markDone(input);","lastModifiedDate":"2021-09-04"},{"lineNumber":49,"author":{"gitId":"charliemoweng"},"content":"                continue;","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"charliemoweng"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"charliemoweng"},"content":"            if (parser.isDeleteTaskCommand(input)) {","lastModifiedDate":"2021-09-04"},{"lineNumber":53,"author":{"gitId":"charliemoweng"},"content":"                taskList.deleteTask(input);","lastModifiedDate":"2021-09-04"},{"lineNumber":54,"author":{"gitId":"charliemoweng"},"content":"                continue;","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"charliemoweng"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"charliemoweng"},"content":"            if (!parser.isEnd(input) \u0026\u0026 !parser.isDisplay(input) \u0026\u0026 !parser.isFindTask(input)) {","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"charliemoweng"},"content":"                taskList.addTaskFromInput(input);","lastModifiedDate":"2021-09-04"},{"lineNumber":59,"author":{"gitId":"charliemoweng"},"content":"                continue;","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"charliemoweng"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"charliemoweng"},"content":"            if (parser.isDisplay(input)) {","lastModifiedDate":"2021-09-04"},{"lineNumber":63,"author":{"gitId":"charliemoweng"},"content":"                taskList.displayAllTasks();","lastModifiedDate":"2021-09-04"},{"lineNumber":64,"author":{"gitId":"charliemoweng"},"content":"                continue;","lastModifiedDate":"2021-08-19"},{"lineNumber":65,"author":{"gitId":"charliemoweng"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":66,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"charliemoweng"},"content":"            if (parser.isFindTask(input)) {","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"charliemoweng"},"content":"                taskList.displayFindTasks(input);","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"charliemoweng"},"content":"                continue;","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"charliemoweng"},"content":"            }","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"charliemoweng"},"content":"            if (parser.isEnd(input)) {","lastModifiedDate":"2021-09-04"},{"lineNumber":73,"author":{"gitId":"charliemoweng"},"content":"                ui.displayExitMessage();","lastModifiedDate":"2021-09-04"},{"lineNumber":74,"author":{"gitId":"charliemoweng"},"content":"                break;","lastModifiedDate":"2021-09-04"},{"lineNumber":75,"author":{"gitId":"charliemoweng"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":76,"author":{"gitId":"charliemoweng"},"content":"            ui.displayOtherInputsMessage();","lastModifiedDate":"2021-09-04"},{"lineNumber":77,"author":{"gitId":"charliemoweng"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":78,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":79,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":80,"author":{"gitId":"charliemoweng"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-04"},{"lineNumber":81,"author":{"gitId":"charliemoweng"},"content":"        new Duke().run();","lastModifiedDate":"2021-09-18"},{"lineNumber":82,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":83,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":84,"author":{"gitId":"charliemoweng"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":85,"author":{"gitId":"charliemoweng"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2021-09-18"},{"lineNumber":86,"author":{"gitId":"charliemoweng"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2021-09-18"},{"lineNumber":87,"author":{"gitId":"charliemoweng"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":88,"author":{"gitId":"charliemoweng"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-09-18"},{"lineNumber":89,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":90,"author":{"gitId":"charliemoweng"},"content":"        if (parser.isMarkDoneCommand(input)) {","lastModifiedDate":"2021-09-18"},{"lineNumber":91,"author":{"gitId":"charliemoweng"},"content":"            return taskList.markDone(input);","lastModifiedDate":"2021-09-18"},{"lineNumber":92,"author":{"gitId":"charliemoweng"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":93,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":94,"author":{"gitId":"charliemoweng"},"content":"        if (parser.isDeleteTaskCommand(input)) {","lastModifiedDate":"2021-09-18"},{"lineNumber":95,"author":{"gitId":"charliemoweng"},"content":"            return taskList.deleteTask(input);","lastModifiedDate":"2021-09-18"},{"lineNumber":96,"author":{"gitId":"charliemoweng"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":97,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":98,"author":{"gitId":"charliemoweng"},"content":"        if (!parser.isEnd(input) \u0026\u0026 !parser.isDisplay(input) \u0026\u0026 !parser.isFindTask(input)) {","lastModifiedDate":"2021-09-18"},{"lineNumber":99,"author":{"gitId":"charliemoweng"},"content":"            return taskList.addTaskFromInput(input);","lastModifiedDate":"2021-09-18"},{"lineNumber":100,"author":{"gitId":"charliemoweng"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":101,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":102,"author":{"gitId":"charliemoweng"},"content":"        if (parser.isDisplay(input)) {","lastModifiedDate":"2021-09-18"},{"lineNumber":103,"author":{"gitId":"charliemoweng"},"content":"            return taskList.displayAllTasks();","lastModifiedDate":"2021-09-18"},{"lineNumber":104,"author":{"gitId":"charliemoweng"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":105,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":106,"author":{"gitId":"charliemoweng"},"content":"        if (parser.isFindTask(input)) {","lastModifiedDate":"2021-09-18"},{"lineNumber":107,"author":{"gitId":"charliemoweng"},"content":"            return taskList.displayFindTasks(input);","lastModifiedDate":"2021-09-18"},{"lineNumber":108,"author":{"gitId":"charliemoweng"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":109,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":110,"author":{"gitId":"charliemoweng"},"content":"        if (parser.isEnd(input)) {","lastModifiedDate":"2021-09-18"},{"lineNumber":111,"author":{"gitId":"charliemoweng"},"content":"            Platform.exit();","lastModifiedDate":"2021-09-18"},{"lineNumber":112,"author":{"gitId":"charliemoweng"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":113,"author":{"gitId":"charliemoweng"},"content":"        return ui.displayOtherInputsMessage();","lastModifiedDate":"2021-09-18"},{"lineNumber":114,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"charliemoweng":113,"-":3}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"charliemoweng"},"content":"package duke;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"charliemoweng"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"charliemoweng"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"charliemoweng"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"charliemoweng"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"charliemoweng"},"content":"public class Launcher {","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"charliemoweng"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"charliemoweng"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"charliemoweng"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"charliemoweng":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"charliemoweng"},"content":"package duke;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"charliemoweng"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"charliemoweng"},"content":"import duke.controller.MainWindow;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"charliemoweng"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"charliemoweng"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"charliemoweng"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"charliemoweng"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"charliemoweng"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"charliemoweng"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"charliemoweng"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"charliemoweng"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"charliemoweng"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"charliemoweng"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"charliemoweng"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"charliemoweng"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"charliemoweng"},"content":"        try {","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"charliemoweng"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"charliemoweng"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"charliemoweng"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"charliemoweng"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"charliemoweng"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"charliemoweng"},"content":"            stage.show();","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"charliemoweng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"charliemoweng"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"charliemoweng"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"charliemoweng"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"charliemoweng":32}},{"path":"src/main/java/duke/components/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"charliemoweng"},"content":"package duke.components;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"charliemoweng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"charliemoweng"},"content":"import java.util.Locale;","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"charliemoweng"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"charliemoweng"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"charliemoweng"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"charliemoweng"},"content":" * Represents a parser that will make sense of user input.","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"charliemoweng"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"charliemoweng"},"content":"public class Parser {","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"charliemoweng"},"content":"    private static final String END \u003d \"bye\";","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"charliemoweng"},"content":"    private static final String DISPLAY \u003d \"list\";","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"charliemoweng"},"content":"    private static final String MARK_DONE \u003d \"done\";","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"charliemoweng"},"content":"    private static final String DELETE_TASK \u003d \"delete\";","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"charliemoweng"},"content":"    private static final String TASK_TODO \u003d \"todo\";","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"charliemoweng"},"content":"    private static final String TASK_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"charliemoweng"},"content":"    private static final String TASK_EVENT \u003d \"event\";","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"charliemoweng"},"content":"    private static final String FIND \u003d \"find\";","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"charliemoweng"},"content":"    private static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"charliemoweng"},"content":"            \"dd/MM/yyyy kk:mm\", Locale.ENGLISH);","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"charliemoweng"},"content":"    public Parser() {","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"charliemoweng"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"charliemoweng"},"content":"     * Checks if user input is \"bye\".","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"charliemoweng"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"charliemoweng"},"content":"     * @param input The user input.","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"charliemoweng"},"content":"     * @return Boolean that represents whether the user input is \"bye\".","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"charliemoweng"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"charliemoweng"},"content":"    public boolean isEnd(String input) {","lastModifiedDate":"2021-09-04"},{"lineNumber":33,"author":{"gitId":"charliemoweng"},"content":"        return input.equals(END);","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":35,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":36,"author":{"gitId":"charliemoweng"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"charliemoweng"},"content":"     * Checks if user input is \"list\".","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"charliemoweng"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"charliemoweng"},"content":"     * @param input The user input.","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"charliemoweng"},"content":"     * @return Boolean that represents whether the user input is \"list\".","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"charliemoweng"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"charliemoweng"},"content":"    public boolean isDisplay(String input) {","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"charliemoweng"},"content":"        return input.equals(DISPLAY);","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":45,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":46,"author":{"gitId":"charliemoweng"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"charliemoweng"},"content":"     * Checks if user input is \"done\".","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"charliemoweng"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"charliemoweng"},"content":"     * @param input The user input.","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"charliemoweng"},"content":"     * @return Boolean that represents whether the user input is \"done\".","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"charliemoweng"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"charliemoweng"},"content":"    public boolean isDone(String input) {","lastModifiedDate":"2021-09-04"},{"lineNumber":53,"author":{"gitId":"charliemoweng"},"content":"        return input.equals(MARK_DONE);","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":55,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":56,"author":{"gitId":"charliemoweng"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"charliemoweng"},"content":"     * Checks if user input is \"delete\".","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"charliemoweng"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"charliemoweng"},"content":"     * @param input The user input.","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"charliemoweng"},"content":"     * @return Boolean that represents whether the user input is \"delete\".","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"charliemoweng"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"charliemoweng"},"content":"    public boolean isDelete(String input) {","lastModifiedDate":"2021-09-04"},{"lineNumber":63,"author":{"gitId":"charliemoweng"},"content":"        return input.equals(DELETE_TASK);","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":65,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":66,"author":{"gitId":"charliemoweng"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"charliemoweng"},"content":"     * Checks if user input is \"todo\".","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"charliemoweng"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"charliemoweng"},"content":"     * @param input The user input.","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"charliemoweng"},"content":"     * @return Boolean that represents whether the user input is \"todo\".","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"charliemoweng"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"charliemoweng"},"content":"    public boolean isTodo(String input) {","lastModifiedDate":"2021-09-04"},{"lineNumber":73,"author":{"gitId":"charliemoweng"},"content":"        return input.equals(TASK_TODO);","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":75,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":76,"author":{"gitId":"charliemoweng"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"charliemoweng"},"content":"     * Checks if user input is \"deadline\".","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"charliemoweng"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"charliemoweng"},"content":"     * @param input The user input.","lastModifiedDate":"2021-09-17"},{"lineNumber":80,"author":{"gitId":"charliemoweng"},"content":"     * @return Boolean that represents whether the user input is \"deadline\".","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"charliemoweng"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":82,"author":{"gitId":"charliemoweng"},"content":"    public boolean isDeadline(String input) {","lastModifiedDate":"2021-09-04"},{"lineNumber":83,"author":{"gitId":"charliemoweng"},"content":"        return input.equals(TASK_DEADLINE);","lastModifiedDate":"2021-09-17"},{"lineNumber":84,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":85,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":86,"author":{"gitId":"charliemoweng"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":87,"author":{"gitId":"charliemoweng"},"content":"     * Checks if user input is \"event\".","lastModifiedDate":"2021-09-17"},{"lineNumber":88,"author":{"gitId":"charliemoweng"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":89,"author":{"gitId":"charliemoweng"},"content":"     * @param input The user input.","lastModifiedDate":"2021-09-17"},{"lineNumber":90,"author":{"gitId":"charliemoweng"},"content":"     * @return Boolean that represents whether the user input is \"event\".","lastModifiedDate":"2021-09-17"},{"lineNumber":91,"author":{"gitId":"charliemoweng"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":92,"author":{"gitId":"charliemoweng"},"content":"    public boolean isEvent(String input) {","lastModifiedDate":"2021-09-04"},{"lineNumber":93,"author":{"gitId":"charliemoweng"},"content":"        return input.equals(TASK_EVENT);","lastModifiedDate":"2021-09-17"},{"lineNumber":94,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":95,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":96,"author":{"gitId":"charliemoweng"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":97,"author":{"gitId":"charliemoweng"},"content":"     * Returns the formatter used for format date and time.","lastModifiedDate":"2021-09-17"},{"lineNumber":98,"author":{"gitId":"charliemoweng"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":99,"author":{"gitId":"charliemoweng"},"content":"     * @return The DateTimeFormatter used in Duke.","lastModifiedDate":"2021-09-17"},{"lineNumber":100,"author":{"gitId":"charliemoweng"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":101,"author":{"gitId":"charliemoweng"},"content":"    public DateTimeFormatter getFormatter() {","lastModifiedDate":"2021-09-04"},{"lineNumber":102,"author":{"gitId":"charliemoweng"},"content":"        return FORMATTER;","lastModifiedDate":"2021-09-17"},{"lineNumber":103,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":104,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":105,"author":{"gitId":"charliemoweng"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":106,"author":{"gitId":"charliemoweng"},"content":"     * Checks if user input is \"done\".","lastModifiedDate":"2021-09-17"},{"lineNumber":107,"author":{"gitId":"charliemoweng"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":108,"author":{"gitId":"charliemoweng"},"content":"     * @param input The user input.","lastModifiedDate":"2021-09-17"},{"lineNumber":109,"author":{"gitId":"charliemoweng"},"content":"     * @return Boolean that represents whether the user input is \"done\".","lastModifiedDate":"2021-09-17"},{"lineNumber":110,"author":{"gitId":"charliemoweng"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":111,"author":{"gitId":"charliemoweng"},"content":"    public boolean isMarkDoneCommand(String input) {","lastModifiedDate":"2021-09-04"},{"lineNumber":112,"author":{"gitId":"charliemoweng"},"content":"        Pattern pattern \u003d Pattern.compile(\"done\\\\s\\\\d+\");","lastModifiedDate":"2021-09-04"},{"lineNumber":113,"author":{"gitId":"charliemoweng"},"content":"        Matcher matcher \u003d pattern.matcher(input);","lastModifiedDate":"2021-09-04"},{"lineNumber":114,"author":{"gitId":"charliemoweng"},"content":"        return matcher.find();","lastModifiedDate":"2021-09-04"},{"lineNumber":115,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":116,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":117,"author":{"gitId":"charliemoweng"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":118,"author":{"gitId":"charliemoweng"},"content":"     * Checks if user input is \"delete\".","lastModifiedDate":"2021-09-17"},{"lineNumber":119,"author":{"gitId":"charliemoweng"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":120,"author":{"gitId":"charliemoweng"},"content":"     * @param input The user input.","lastModifiedDate":"2021-09-17"},{"lineNumber":121,"author":{"gitId":"charliemoweng"},"content":"     * @return Boolean that represents whether the user input is \"delete\".","lastModifiedDate":"2021-09-17"},{"lineNumber":122,"author":{"gitId":"charliemoweng"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":123,"author":{"gitId":"charliemoweng"},"content":"    public boolean isDeleteTaskCommand(String input) {","lastModifiedDate":"2021-09-04"},{"lineNumber":124,"author":{"gitId":"charliemoweng"},"content":"        Pattern patternDelete \u003d Pattern.compile(\"delete\\\\s\\\\d+\");","lastModifiedDate":"2021-09-04"},{"lineNumber":125,"author":{"gitId":"charliemoweng"},"content":"        Matcher matcherDelete \u003d patternDelete.matcher(input);","lastModifiedDate":"2021-09-04"},{"lineNumber":126,"author":{"gitId":"charliemoweng"},"content":"        return matcherDelete.find();","lastModifiedDate":"2021-09-04"},{"lineNumber":127,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":128,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":129,"author":{"gitId":"charliemoweng"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":130,"author":{"gitId":"charliemoweng"},"content":"     * Checks if user input is \"find\".","lastModifiedDate":"2021-09-17"},{"lineNumber":131,"author":{"gitId":"charliemoweng"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":132,"author":{"gitId":"charliemoweng"},"content":"     * @param input The user input.","lastModifiedDate":"2021-09-17"},{"lineNumber":133,"author":{"gitId":"charliemoweng"},"content":"     * @return Boolean that represents whether the user input is \"find\".","lastModifiedDate":"2021-09-17"},{"lineNumber":134,"author":{"gitId":"charliemoweng"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":135,"author":{"gitId":"charliemoweng"},"content":"    public boolean isFindTask(String input) {","lastModifiedDate":"2021-09-17"},{"lineNumber":136,"author":{"gitId":"charliemoweng"},"content":"        if (input.length() \u003e\u003d 5) {","lastModifiedDate":"2021-09-17"},{"lineNumber":137,"author":{"gitId":"charliemoweng"},"content":"            return input.substring(0, 4).equals(FIND);","lastModifiedDate":"2021-09-17"},{"lineNumber":138,"author":{"gitId":"charliemoweng"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":139,"author":{"gitId":"charliemoweng"},"content":"        return false;","lastModifiedDate":"2021-09-17"},{"lineNumber":140,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":141,"author":{"gitId":"charliemoweng"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"charliemoweng":141}},{"path":"src/main/java/duke/components/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"charliemoweng"},"content":"package duke.components;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"charliemoweng"},"content":"import java.io.File;","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"charliemoweng"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"charliemoweng"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"charliemoweng"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"charliemoweng"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"charliemoweng"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"charliemoweng"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"charliemoweng"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"charliemoweng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"charliemoweng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"charliemoweng"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"charliemoweng"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"charliemoweng"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"charliemoweng"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"charliemoweng"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"charliemoweng"},"content":" * Represents the storage file that Duke can read from and write to.","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"charliemoweng"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"charliemoweng"},"content":"public class Storage {","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"charliemoweng"},"content":"    private final File dataFile;","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"charliemoweng"},"content":"    private final String filePath;","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"charliemoweng"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"charliemoweng"},"content":"     * Creates a Storage object.","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"charliemoweng"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"charliemoweng"},"content":"     * @param filePath The file path to the data file.","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"charliemoweng"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"charliemoweng"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-09-04"},{"lineNumber":32,"author":{"gitId":"charliemoweng"},"content":"        this.dataFile \u003d new File(filePath); // \"./data/data.txt\"","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"charliemoweng"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":35,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":36,"author":{"gitId":"charliemoweng"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"charliemoweng"},"content":"     * Reads tasks stored in data file and add them into TaskList.","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"charliemoweng"},"content":"     * Creates the date file if it does not exist.","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"charliemoweng"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"charliemoweng"},"content":"     * @param taskList The Task List of Duke to receive tasks from data file.","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"charliemoweng"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"charliemoweng"},"content":"    public void loadInto(TaskList taskList) {","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"charliemoweng"},"content":"        createDatafile();","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"charliemoweng"},"content":"        // a List to store all Tasks read from data.txt","lastModifiedDate":"2021-09-04"},{"lineNumber":46,"author":{"gitId":"charliemoweng"},"content":"        ArrayList\u003cString\u003e dataRead \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-04"},{"lineNumber":47,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":48,"author":{"gitId":"charliemoweng"},"content":"        try {","lastModifiedDate":"2021-09-04"},{"lineNumber":49,"author":{"gitId":"charliemoweng"},"content":"            Scanner scanner \u003d new Scanner(dataFile);","lastModifiedDate":"2021-09-04"},{"lineNumber":50,"author":{"gitId":"charliemoweng"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2021-09-04"},{"lineNumber":51,"author":{"gitId":"charliemoweng"},"content":"                dataRead.add(scanner.nextLine());","lastModifiedDate":"2021-09-04"},{"lineNumber":52,"author":{"gitId":"charliemoweng"},"content":"            }","lastModifiedDate":"2021-09-04"},{"lineNumber":53,"author":{"gitId":"charliemoweng"},"content":"            for (int i \u003d 0; i \u003c dataRead.size(); i++) {","lastModifiedDate":"2021-09-04"},{"lineNumber":54,"author":{"gitId":"charliemoweng"},"content":"                String toAdd \u003d dataRead.get(i);","lastModifiedDate":"2021-09-04"},{"lineNumber":55,"author":{"gitId":"charliemoweng"},"content":"                char firstLetter \u003d toAdd.charAt(1);","lastModifiedDate":"2021-09-19"},{"lineNumber":56,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":57,"author":{"gitId":"charliemoweng"},"content":"                switch (firstLetter) {","lastModifiedDate":"2021-09-19"},{"lineNumber":58,"author":{"gitId":"charliemoweng"},"content":"                    case \u0027T\u0027:","lastModifiedDate":"2021-09-19"},{"lineNumber":59,"author":{"gitId":"charliemoweng"},"content":"                        taskList.addTaskFromDataFile(addTodo(toAdd));","lastModifiedDate":"2021-09-19"},{"lineNumber":60,"author":{"gitId":"charliemoweng"},"content":"                        break;","lastModifiedDate":"2021-09-19"},{"lineNumber":61,"author":{"gitId":"charliemoweng"},"content":"                    case \u0027D\u0027:","lastModifiedDate":"2021-09-19"},{"lineNumber":62,"author":{"gitId":"charliemoweng"},"content":"                        taskList.addTaskFromDataFile(addDeadline(toAdd));","lastModifiedDate":"2021-09-19"},{"lineNumber":63,"author":{"gitId":"charliemoweng"},"content":"                        break;","lastModifiedDate":"2021-09-19"},{"lineNumber":64,"author":{"gitId":"charliemoweng"},"content":"                    case \u0027E\u0027:","lastModifiedDate":"2021-09-19"},{"lineNumber":65,"author":{"gitId":"charliemoweng"},"content":"                        taskList.addTaskFromDataFile(addEvent(toAdd));","lastModifiedDate":"2021-09-19"},{"lineNumber":66,"author":{"gitId":"charliemoweng"},"content":"                        break;","lastModifiedDate":"2021-09-19"},{"lineNumber":67,"author":{"gitId":"charliemoweng"},"content":"                }","lastModifiedDate":"2021-09-04"},{"lineNumber":68,"author":{"gitId":"charliemoweng"},"content":"            }","lastModifiedDate":"2021-09-04"},{"lineNumber":69,"author":{"gitId":"charliemoweng"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":70,"author":{"gitId":"charliemoweng"},"content":"            System.out.println(\"data.txt is not found.\" + e.getMessage());","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"charliemoweng"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":72,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":73,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":74,"author":{"gitId":"charliemoweng"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":75,"author":{"gitId":"charliemoweng"},"content":"     * Writes a task to the data file.","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"charliemoweng"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"charliemoweng"},"content":"     * @param taskToWrite The string representation of the task to be written.","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"charliemoweng"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"charliemoweng"},"content":"    public void writeTaskToFile(String taskToWrite) {","lastModifiedDate":"2021-09-04"},{"lineNumber":80,"author":{"gitId":"charliemoweng"},"content":"        try {","lastModifiedDate":"2021-09-04"},{"lineNumber":81,"author":{"gitId":"charliemoweng"},"content":"            writeToFile(filePath, taskToWrite);","lastModifiedDate":"2021-09-04"},{"lineNumber":82,"author":{"gitId":"charliemoweng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":83,"author":{"gitId":"charliemoweng"},"content":"            System.out.println(\"Something is wrong... \" + e.getMessage());","lastModifiedDate":"2021-09-04"},{"lineNumber":84,"author":{"gitId":"charliemoweng"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":85,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":86,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":87,"author":{"gitId":"charliemoweng"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":88,"author":{"gitId":"charliemoweng"},"content":"     * Appends a task to the end of the data file.","lastModifiedDate":"2021-09-17"},{"lineNumber":89,"author":{"gitId":"charliemoweng"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":90,"author":{"gitId":"charliemoweng"},"content":"     * @param taskToAppend The string representation of the task to be appended.","lastModifiedDate":"2021-09-17"},{"lineNumber":91,"author":{"gitId":"charliemoweng"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":92,"author":{"gitId":"charliemoweng"},"content":"    public void appendTaskToFile(String taskToAppend) {","lastModifiedDate":"2021-09-04"},{"lineNumber":93,"author":{"gitId":"charliemoweng"},"content":"        try {","lastModifiedDate":"2021-09-04"},{"lineNumber":94,"author":{"gitId":"charliemoweng"},"content":"            appendToFile(filePath, taskToAppend);","lastModifiedDate":"2021-09-04"},{"lineNumber":95,"author":{"gitId":"charliemoweng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":96,"author":{"gitId":"charliemoweng"},"content":"            System.out.println(\"Something is wrong... \" + e.getMessage());","lastModifiedDate":"2021-09-04"},{"lineNumber":97,"author":{"gitId":"charliemoweng"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":98,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":99,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":100,"author":{"gitId":"charliemoweng"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":101,"author":{"gitId":"charliemoweng"},"content":"     * Appends a text to the end of a file.","lastModifiedDate":"2021-09-17"},{"lineNumber":102,"author":{"gitId":"charliemoweng"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":103,"author":{"gitId":"charliemoweng"},"content":"     * @param filePath The path to the file to be appended to.","lastModifiedDate":"2021-09-17"},{"lineNumber":104,"author":{"gitId":"charliemoweng"},"content":"     * @param textToAppend The text to be appended.","lastModifiedDate":"2021-09-17"},{"lineNumber":105,"author":{"gitId":"charliemoweng"},"content":"     * @throws IOException If there is an error while appending.","lastModifiedDate":"2021-09-17"},{"lineNumber":106,"author":{"gitId":"charliemoweng"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":107,"author":{"gitId":"charliemoweng"},"content":"    private static void appendToFile(String filePath, String textToAppend) throws IOException {","lastModifiedDate":"2021-09-04"},{"lineNumber":108,"author":{"gitId":"charliemoweng"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true); // create a FileWriter in append mode","lastModifiedDate":"2021-09-04"},{"lineNumber":109,"author":{"gitId":"charliemoweng"},"content":"        fw.write(textToAppend);","lastModifiedDate":"2021-09-04"},{"lineNumber":110,"author":{"gitId":"charliemoweng"},"content":"        fw.close();","lastModifiedDate":"2021-09-04"},{"lineNumber":111,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":112,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":113,"author":{"gitId":"charliemoweng"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":114,"author":{"gitId":"charliemoweng"},"content":"     * Writes a text to the end of a file.","lastModifiedDate":"2021-09-17"},{"lineNumber":115,"author":{"gitId":"charliemoweng"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":116,"author":{"gitId":"charliemoweng"},"content":"     * @param filePath The path to the file to be written into.","lastModifiedDate":"2021-09-17"},{"lineNumber":117,"author":{"gitId":"charliemoweng"},"content":"     * @param textToAdd The text to be written.","lastModifiedDate":"2021-09-17"},{"lineNumber":118,"author":{"gitId":"charliemoweng"},"content":"     * @throws IOException If there is an error while writing.","lastModifiedDate":"2021-09-17"},{"lineNumber":119,"author":{"gitId":"charliemoweng"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":120,"author":{"gitId":"charliemoweng"},"content":"    private static void writeToFile(String filePath, String textToAdd) throws IOException {","lastModifiedDate":"2021-09-04"},{"lineNumber":121,"author":{"gitId":"charliemoweng"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2021-09-04"},{"lineNumber":122,"author":{"gitId":"charliemoweng"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2021-09-04"},{"lineNumber":123,"author":{"gitId":"charliemoweng"},"content":"        fw.close();","lastModifiedDate":"2021-09-04"},{"lineNumber":124,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":125,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":126,"author":{"gitId":"charliemoweng"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":127,"author":{"gitId":"charliemoweng"},"content":"     * Erases the content of a file.","lastModifiedDate":"2021-09-17"},{"lineNumber":128,"author":{"gitId":"charliemoweng"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":129,"author":{"gitId":"charliemoweng"},"content":"    public void eraseFileContent() {","lastModifiedDate":"2021-09-04"},{"lineNumber":130,"author":{"gitId":"charliemoweng"},"content":"        try {","lastModifiedDate":"2021-09-04"},{"lineNumber":131,"author":{"gitId":"charliemoweng"},"content":"            new FileWriter(filePath, false).close();","lastModifiedDate":"2021-09-04"},{"lineNumber":132,"author":{"gitId":"charliemoweng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":133,"author":{"gitId":"charliemoweng"},"content":"            System.out.println(\"Something is wrong... \" + e.getMessage());","lastModifiedDate":"2021-09-04"},{"lineNumber":134,"author":{"gitId":"charliemoweng"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":135,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":136,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":137,"author":{"gitId":"charliemoweng"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":138,"author":{"gitId":"charliemoweng"},"content":"     * Creates and returns a Todo object.","lastModifiedDate":"2021-09-19"},{"lineNumber":139,"author":{"gitId":"charliemoweng"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":140,"author":{"gitId":"charliemoweng"},"content":"     * @param toAdd The String from which a Todo object is created.","lastModifiedDate":"2021-09-19"},{"lineNumber":141,"author":{"gitId":"charliemoweng"},"content":"     * @return The Todo object created.","lastModifiedDate":"2021-09-19"},{"lineNumber":142,"author":{"gitId":"charliemoweng"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":143,"author":{"gitId":"charliemoweng"},"content":"    private Todo addTodo(String toAdd) {","lastModifiedDate":"2021-09-19"},{"lineNumber":144,"author":{"gitId":"charliemoweng"},"content":"        String[] parts \u003d toAdd.split(\"] \");","lastModifiedDate":"2021-09-19"},{"lineNumber":145,"author":{"gitId":"charliemoweng"},"content":"        String todoName \u003d parts[1];","lastModifiedDate":"2021-09-19"},{"lineNumber":146,"author":{"gitId":"charliemoweng"},"content":"        Todo todoToAdd \u003d new Todo(todoName);","lastModifiedDate":"2021-09-19"},{"lineNumber":147,"author":{"gitId":"charliemoweng"},"content":"        if (toAdd.charAt(4) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2021-09-19"},{"lineNumber":148,"author":{"gitId":"charliemoweng"},"content":"            todoToAdd.setDone();","lastModifiedDate":"2021-09-19"},{"lineNumber":149,"author":{"gitId":"charliemoweng"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":150,"author":{"gitId":"charliemoweng"},"content":"        return todoToAdd;","lastModifiedDate":"2021-09-19"},{"lineNumber":151,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":152,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":153,"author":{"gitId":"charliemoweng"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":154,"author":{"gitId":"charliemoweng"},"content":"     * Creates and returns a Deadline object.","lastModifiedDate":"2021-09-19"},{"lineNumber":155,"author":{"gitId":"charliemoweng"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":156,"author":{"gitId":"charliemoweng"},"content":"     * @param toAdd The String from which a Deadline object is created.","lastModifiedDate":"2021-09-19"},{"lineNumber":157,"author":{"gitId":"charliemoweng"},"content":"     * @return The Deadline object created.","lastModifiedDate":"2021-09-19"},{"lineNumber":158,"author":{"gitId":"charliemoweng"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":159,"author":{"gitId":"charliemoweng"},"content":"    private Deadline addDeadline(String toAdd) {","lastModifiedDate":"2021-09-19"},{"lineNumber":160,"author":{"gitId":"charliemoweng"},"content":"        String[] parts1 \u003d toAdd.split(\"] \");","lastModifiedDate":"2021-09-19"},{"lineNumber":161,"author":{"gitId":"charliemoweng"},"content":"        String nameTime \u003d parts1[1];","lastModifiedDate":"2021-09-19"},{"lineNumber":162,"author":{"gitId":"charliemoweng"},"content":"        String[] parts2 \u003d nameTime.split(\" \\\\(by: \");","lastModifiedDate":"2021-09-19"},{"lineNumber":163,"author":{"gitId":"charliemoweng"},"content":"        String ddlName \u003d parts2[0];","lastModifiedDate":"2021-09-19"},{"lineNumber":164,"author":{"gitId":"charliemoweng"},"content":"        String ddlTimeStr \u003d parts2[1].substring(0, parts2[1].length() - 1);","lastModifiedDate":"2021-09-19"},{"lineNumber":165,"author":{"gitId":"charliemoweng"},"content":"        DateTimeFormatter formatterDdl \u003d DateTimeFormatter.ofPattern(","lastModifiedDate":"2021-09-19"},{"lineNumber":166,"author":{"gitId":"charliemoweng"},"content":"                \"EEE, dd/MMM/yyyy hh:mm a\");","lastModifiedDate":"2021-09-19"},{"lineNumber":167,"author":{"gitId":"charliemoweng"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(ddlTimeStr, formatterDdl);","lastModifiedDate":"2021-09-19"},{"lineNumber":168,"author":{"gitId":"charliemoweng"},"content":"        Deadline ddlToAdd \u003d new Deadline(ddlName, dateTime);","lastModifiedDate":"2021-09-19"},{"lineNumber":169,"author":{"gitId":"charliemoweng"},"content":"        if (toAdd.charAt(4) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2021-09-19"},{"lineNumber":170,"author":{"gitId":"charliemoweng"},"content":"            ddlToAdd.setDone();","lastModifiedDate":"2021-09-19"},{"lineNumber":171,"author":{"gitId":"charliemoweng"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":172,"author":{"gitId":"charliemoweng"},"content":"        return ddlToAdd;","lastModifiedDate":"2021-09-19"},{"lineNumber":173,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":174,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":175,"author":{"gitId":"charliemoweng"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":176,"author":{"gitId":"charliemoweng"},"content":"     * Creates and returns an Event object.","lastModifiedDate":"2021-09-19"},{"lineNumber":177,"author":{"gitId":"charliemoweng"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":178,"author":{"gitId":"charliemoweng"},"content":"     * @param toAdd The String from which an Event object is created.","lastModifiedDate":"2021-09-19"},{"lineNumber":179,"author":{"gitId":"charliemoweng"},"content":"     * @return The Event object created.","lastModifiedDate":"2021-09-19"},{"lineNumber":180,"author":{"gitId":"charliemoweng"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":181,"author":{"gitId":"charliemoweng"},"content":"    private Event addEvent(String toAdd) {","lastModifiedDate":"2021-09-19"},{"lineNumber":182,"author":{"gitId":"charliemoweng"},"content":"        String[] parts1 \u003d toAdd.split(\"] \");","lastModifiedDate":"2021-09-19"},{"lineNumber":183,"author":{"gitId":"charliemoweng"},"content":"        String nameTime \u003d parts1[1];","lastModifiedDate":"2021-09-19"},{"lineNumber":184,"author":{"gitId":"charliemoweng"},"content":"        String[] parts2 \u003d nameTime.split(\" \\\\(at: \");","lastModifiedDate":"2021-09-19"},{"lineNumber":185,"author":{"gitId":"charliemoweng"},"content":"        String eveName \u003d parts2[0];","lastModifiedDate":"2021-09-19"},{"lineNumber":186,"author":{"gitId":"charliemoweng"},"content":"        String eveTimeStr \u003d parts2[1].substring(0, parts2[1].length() - 1);","lastModifiedDate":"2021-09-19"},{"lineNumber":187,"author":{"gitId":"charliemoweng"},"content":"        DateTimeFormatter formatterEve \u003d DateTimeFormatter.ofPattern(","lastModifiedDate":"2021-09-19"},{"lineNumber":188,"author":{"gitId":"charliemoweng"},"content":"                \"EEE, dd/MMM/yyyy hh:mm a\");","lastModifiedDate":"2021-09-19"},{"lineNumber":189,"author":{"gitId":"charliemoweng"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(eveTimeStr, formatterEve);","lastModifiedDate":"2021-09-19"},{"lineNumber":190,"author":{"gitId":"charliemoweng"},"content":"        Event eveToAdd \u003d new Event(eveName, dateTime);","lastModifiedDate":"2021-09-19"},{"lineNumber":191,"author":{"gitId":"charliemoweng"},"content":"        if (toAdd.charAt(4) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2021-09-19"},{"lineNumber":192,"author":{"gitId":"charliemoweng"},"content":"            eveToAdd.setDone();","lastModifiedDate":"2021-09-19"},{"lineNumber":193,"author":{"gitId":"charliemoweng"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":194,"author":{"gitId":"charliemoweng"},"content":"        return eveToAdd;","lastModifiedDate":"2021-09-19"},{"lineNumber":195,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":196,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":197,"author":{"gitId":"charliemoweng"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":198,"author":{"gitId":"charliemoweng"},"content":"     * Create data.txt.","lastModifiedDate":"2021-09-19"},{"lineNumber":199,"author":{"gitId":"charliemoweng"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":200,"author":{"gitId":"charliemoweng"},"content":"    private void createDatafile() {","lastModifiedDate":"2021-09-19"},{"lineNumber":201,"author":{"gitId":"charliemoweng"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":202,"author":{"gitId":"charliemoweng"},"content":"            Path path \u003d Paths.get(filePath);","lastModifiedDate":"2021-09-19"},{"lineNumber":203,"author":{"gitId":"charliemoweng"},"content":"            Files.createDirectories(path.getParent());","lastModifiedDate":"2021-09-19"},{"lineNumber":204,"author":{"gitId":"charliemoweng"},"content":"            Files.createFile(path);","lastModifiedDate":"2021-09-19"},{"lineNumber":205,"author":{"gitId":"charliemoweng"},"content":"            System.out.println(\"Directories for data.txt are created.\");","lastModifiedDate":"2021-09-19"},{"lineNumber":206,"author":{"gitId":"charliemoweng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":207,"author":{"gitId":"charliemoweng"},"content":"            System.out.println(\"Failed to create data directories (they may already exist)\" + e.getMessage());","lastModifiedDate":"2021-09-19"},{"lineNumber":208,"author":{"gitId":"charliemoweng"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":209,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":210,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":211,"author":{"gitId":"charliemoweng"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"charliemoweng":211}},{"path":"src/main/java/duke/components/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"charliemoweng"},"content":"package duke.components;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"charliemoweng"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"charliemoweng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"charliemoweng"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"charliemoweng"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"charliemoweng"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"charliemoweng"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"charliemoweng"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"charliemoweng"},"content":" * Represents a Task List that contains all tasks.","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"charliemoweng"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"charliemoweng"},"content":"public class TaskList {","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"charliemoweng"},"content":"    private ArrayList\u003cTask\u003e inputs;","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"charliemoweng"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"charliemoweng"},"content":"    private Ui ui;","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"charliemoweng"},"content":"    private Parser parser;","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"charliemoweng"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"charliemoweng"},"content":"     * Creates a TaskList object.","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"charliemoweng"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"charliemoweng"},"content":"     * @param storage The Storage of Duke.","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"charliemoweng"},"content":"     * @param ui The UI of Duke.","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"charliemoweng"},"content":"     * @param parser The Parser of Duke.","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"charliemoweng"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"charliemoweng"},"content":"    public TaskList(Storage storage, Ui ui, Parser parser) {","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"charliemoweng"},"content":"        inputs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"charliemoweng"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"charliemoweng"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"charliemoweng"},"content":"        this.parser \u003d parser;","lastModifiedDate":"2021-09-04"},{"lineNumber":32,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":33,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"charliemoweng"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"charliemoweng"},"content":"     * Gets the length of the task list.","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"charliemoweng"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"charliemoweng"},"content":"     * @return The length of the task list.","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"charliemoweng"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"charliemoweng"},"content":"    public int getSize() {","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"charliemoweng"},"content":"        return this.inputs.size();","lastModifiedDate":"2021-09-04"},{"lineNumber":41,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":42,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"charliemoweng"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"charliemoweng"},"content":"     * Adds a task read from data file to task list.","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"charliemoweng"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"charliemoweng"},"content":"     * @param task A task read from data file.","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"charliemoweng"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"charliemoweng"},"content":"    public void addTaskFromDataFile(Task task) {","lastModifiedDate":"2021-09-04"},{"lineNumber":49,"author":{"gitId":"charliemoweng"},"content":"        inputs.add(task);","lastModifiedDate":"2021-09-04"},{"lineNumber":50,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":51,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":52,"author":{"gitId":"charliemoweng"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"charliemoweng"},"content":"     * Takes in user input, parse it and create a task.","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"charliemoweng"},"content":"     * Adds it into task list and writes the updated list to data file.","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"charliemoweng"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"charliemoweng"},"content":"     * @param input User input used to create a task.","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"charliemoweng"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"charliemoweng"},"content":"    public String addTaskFromInput(String input) {","lastModifiedDate":"2021-09-18"},{"lineNumber":59,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":60,"author":{"gitId":"charliemoweng"},"content":"        String[] group \u003d input.split(\" \");","lastModifiedDate":"2021-09-04"},{"lineNumber":61,"author":{"gitId":"charliemoweng"},"content":"        assert group.length \u003e 0;","lastModifiedDate":"2021-09-18"},{"lineNumber":62,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":63,"author":{"gitId":"charliemoweng"},"content":"        // Case Todo","lastModifiedDate":"2021-09-04"},{"lineNumber":64,"author":{"gitId":"charliemoweng"},"content":"        if (parser.isTodo(group[0]) \u0026\u0026 group.length \u003e 1) {","lastModifiedDate":"2021-09-04"},{"lineNumber":65,"author":{"gitId":"charliemoweng"},"content":"            return addTodo(input, inputs, storage, ui);","lastModifiedDate":"2021-09-19"},{"lineNumber":66,"author":{"gitId":"charliemoweng"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":67,"author":{"gitId":"charliemoweng"},"content":"        if (parser.isTodo(group[0]) \u0026\u0026 group.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-04"},{"lineNumber":68,"author":{"gitId":"charliemoweng"},"content":"            return ui.displayTodoEmptyMessage();","lastModifiedDate":"2021-09-18"},{"lineNumber":69,"author":{"gitId":"charliemoweng"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":70,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":71,"author":{"gitId":"charliemoweng"},"content":"        // Case Deadline","lastModifiedDate":"2021-09-04"},{"lineNumber":72,"author":{"gitId":"charliemoweng"},"content":"        if (parser.isDeadline(group[0]) \u0026\u0026 input.contains(\" /by \")) {","lastModifiedDate":"2021-09-04"},{"lineNumber":73,"author":{"gitId":"charliemoweng"},"content":"            return addDeadline(input, inputs, storage, ui);","lastModifiedDate":"2021-09-19"},{"lineNumber":74,"author":{"gitId":"charliemoweng"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":75,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":76,"author":{"gitId":"charliemoweng"},"content":"        // Case Event","lastModifiedDate":"2021-09-04"},{"lineNumber":77,"author":{"gitId":"charliemoweng"},"content":"        if (parser.isEvent(group[0]) \u0026\u0026 input.contains(\" /at \")) {","lastModifiedDate":"2021-09-04"},{"lineNumber":78,"author":{"gitId":"charliemoweng"},"content":"            return addEvent(input, inputs, storage, ui);","lastModifiedDate":"2021-09-19"},{"lineNumber":79,"author":{"gitId":"charliemoweng"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":80,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":81,"author":{"gitId":"charliemoweng"},"content":"        assert !group[0].equals(\"todo\") \u0026\u0026 !group[0].equals(\"deadline\") \u0026\u0026 !group[0].equals(\"event\");","lastModifiedDate":"2021-09-18"},{"lineNumber":82,"author":{"gitId":"charliemoweng"},"content":"        return \"Sorry I don\u0027t understand that.\";","lastModifiedDate":"2021-09-18"},{"lineNumber":83,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":84,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":85,"author":{"gitId":"charliemoweng"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":86,"author":{"gitId":"charliemoweng"},"content":"     * Deletes a task based on user input.","lastModifiedDate":"2021-09-17"},{"lineNumber":87,"author":{"gitId":"charliemoweng"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":88,"author":{"gitId":"charliemoweng"},"content":"     * @param input User input used to delete a task.","lastModifiedDate":"2021-09-17"},{"lineNumber":89,"author":{"gitId":"charliemoweng"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":90,"author":{"gitId":"charliemoweng"},"content":"    public String deleteTask(String input) {","lastModifiedDate":"2021-09-18"},{"lineNumber":91,"author":{"gitId":"charliemoweng"},"content":"        String[] parts \u003d input.split(\" \");","lastModifiedDate":"2021-09-04"},{"lineNumber":92,"author":{"gitId":"charliemoweng"},"content":"        int index \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2021-09-04"},{"lineNumber":93,"author":{"gitId":"charliemoweng"},"content":"        if (parser.isDelete(parts[0]) \u0026\u0026 index \u003c inputs.size()) {","lastModifiedDate":"2021-09-04"},{"lineNumber":94,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":95,"author":{"gitId":"charliemoweng"},"content":"            Task deleted \u003d inputs.remove(index);","lastModifiedDate":"2021-09-18"},{"lineNumber":96,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":97,"author":{"gitId":"charliemoweng"},"content":"            if (inputs.size() \u003d\u003d 0) {","lastModifiedDate":"2021-09-04"},{"lineNumber":98,"author":{"gitId":"charliemoweng"},"content":"                storage.eraseFileContent();","lastModifiedDate":"2021-09-04"},{"lineNumber":99,"author":{"gitId":"charliemoweng"},"content":"            } else {","lastModifiedDate":"2021-09-04"},{"lineNumber":100,"author":{"gitId":"charliemoweng"},"content":"                storage.writeTaskToFile(inputs.get(0).toString() + System.lineSeparator());","lastModifiedDate":"2021-09-04"},{"lineNumber":101,"author":{"gitId":"charliemoweng"},"content":"                for (int i \u003d 1; i \u003c inputs.size(); i++) {","lastModifiedDate":"2021-09-04"},{"lineNumber":102,"author":{"gitId":"charliemoweng"},"content":"                    storage.appendTaskToFile(inputs.get(i).toString() + System.lineSeparator());","lastModifiedDate":"2021-09-04"},{"lineNumber":103,"author":{"gitId":"charliemoweng"},"content":"                }","lastModifiedDate":"2021-09-04"},{"lineNumber":104,"author":{"gitId":"charliemoweng"},"content":"            }","lastModifiedDate":"2021-09-04"},{"lineNumber":105,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":106,"author":{"gitId":"charliemoweng"},"content":"            return \"Noted. I\u0027ve removed this task: \\n\" + deleted.toString();","lastModifiedDate":"2021-09-18"},{"lineNumber":107,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":108,"author":{"gitId":"charliemoweng"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":109,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":110,"author":{"gitId":"charliemoweng"},"content":"        assert !parts[0].equals(\"delete\") : \"should not be delete command\";","lastModifiedDate":"2021-09-18"},{"lineNumber":111,"author":{"gitId":"charliemoweng"},"content":"        return \"Sorry I don\u0027t understand that.\";","lastModifiedDate":"2021-09-18"},{"lineNumber":112,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":113,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":114,"author":{"gitId":"charliemoweng"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":115,"author":{"gitId":"charliemoweng"},"content":"     * Mark a task as done.","lastModifiedDate":"2021-09-17"},{"lineNumber":116,"author":{"gitId":"charliemoweng"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":117,"author":{"gitId":"charliemoweng"},"content":"     * @param input User input used to mark a task as done.","lastModifiedDate":"2021-09-17"},{"lineNumber":118,"author":{"gitId":"charliemoweng"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":119,"author":{"gitId":"charliemoweng"},"content":"    public String markDone(String input) {","lastModifiedDate":"2021-09-18"},{"lineNumber":120,"author":{"gitId":"charliemoweng"},"content":"        String[] parts \u003d input.split(\" \");","lastModifiedDate":"2021-09-04"},{"lineNumber":121,"author":{"gitId":"charliemoweng"},"content":"        int index \u003d Integer.parseInt(parts[1]) - 1;","lastModifiedDate":"2021-09-04"},{"lineNumber":122,"author":{"gitId":"charliemoweng"},"content":"        if (parser.isDone(parts[0]) \u0026\u0026 index \u003c inputs.size()) {","lastModifiedDate":"2021-09-04"},{"lineNumber":123,"author":{"gitId":"charliemoweng"},"content":"            inputs.get(index).setDone();","lastModifiedDate":"2021-09-04"},{"lineNumber":124,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":125,"author":{"gitId":"charliemoweng"},"content":"            storage.writeTaskToFile(inputs.get(0).toString() + System.lineSeparator());","lastModifiedDate":"2021-09-04"},{"lineNumber":126,"author":{"gitId":"charliemoweng"},"content":"            for (int i \u003d 1; i \u003c inputs.size(); i++) {","lastModifiedDate":"2021-09-04"},{"lineNumber":127,"author":{"gitId":"charliemoweng"},"content":"                storage.appendTaskToFile(inputs.get(i).toString() + System.lineSeparator());","lastModifiedDate":"2021-09-04"},{"lineNumber":128,"author":{"gitId":"charliemoweng"},"content":"            }","lastModifiedDate":"2021-09-04"},{"lineNumber":129,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":130,"author":{"gitId":"charliemoweng"},"content":"            return ui.displayMarkDoneMessage(inputs.get(index).toString());","lastModifiedDate":"2021-09-18"},{"lineNumber":131,"author":{"gitId":"charliemoweng"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":132,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":133,"author":{"gitId":"charliemoweng"},"content":"        assert !parts[0].equals(\"done\");","lastModifiedDate":"2021-09-18"},{"lineNumber":134,"author":{"gitId":"charliemoweng"},"content":"        return \"Sorry I don\u0027t understand that.\";","lastModifiedDate":"2021-09-18"},{"lineNumber":135,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":136,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":137,"author":{"gitId":"charliemoweng"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":138,"author":{"gitId":"charliemoweng"},"content":"     * Display all tasks in task list.","lastModifiedDate":"2021-09-17"},{"lineNumber":139,"author":{"gitId":"charliemoweng"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":140,"author":{"gitId":"charliemoweng"},"content":"    public String displayAllTasks() {","lastModifiedDate":"2021-09-18"},{"lineNumber":141,"author":{"gitId":"charliemoweng"},"content":"        String allTasks \u003d \"Here are the tasks in your list: \\n\";","lastModifiedDate":"2021-09-18"},{"lineNumber":142,"author":{"gitId":"charliemoweng"},"content":"        for (int i \u003d 0; i \u003c inputs.size(); i++) {","lastModifiedDate":"2021-09-04"},{"lineNumber":143,"author":{"gitId":"charliemoweng"},"content":"            int index \u003d i + 1;","lastModifiedDate":"2021-09-04"},{"lineNumber":144,"author":{"gitId":"charliemoweng"},"content":"            allTasks +\u003d index + \". \" + inputs.get(i).toString() + \"\\n\";","lastModifiedDate":"2021-09-18"},{"lineNumber":145,"author":{"gitId":"charliemoweng"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":146,"author":{"gitId":"charliemoweng"},"content":"        return allTasks;","lastModifiedDate":"2021-09-18"},{"lineNumber":147,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":148,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":149,"author":{"gitId":"charliemoweng"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":150,"author":{"gitId":"charliemoweng"},"content":"     * Finds and displays all tasks matched with user input.","lastModifiedDate":"2021-09-17"},{"lineNumber":151,"author":{"gitId":"charliemoweng"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":152,"author":{"gitId":"charliemoweng"},"content":"     * @param input User input used to find matching tasks.","lastModifiedDate":"2021-09-17"},{"lineNumber":153,"author":{"gitId":"charliemoweng"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":154,"author":{"gitId":"charliemoweng"},"content":"    public String displayFindTasks(String input) {","lastModifiedDate":"2021-09-18"},{"lineNumber":155,"author":{"gitId":"charliemoweng"},"content":"        String toBeFound \u003d input.substring(5);","lastModifiedDate":"2021-09-17"},{"lineNumber":156,"author":{"gitId":"charliemoweng"},"content":"        ArrayList\u003cTask\u003e tasksFound \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-17"},{"lineNumber":157,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":158,"author":{"gitId":"charliemoweng"},"content":"        // find and add matching tasks to another list","lastModifiedDate":"2021-09-17"},{"lineNumber":159,"author":{"gitId":"charliemoweng"},"content":"        for (int i \u003d 0; i \u003c inputs.size(); i++) {","lastModifiedDate":"2021-09-17"},{"lineNumber":160,"author":{"gitId":"charliemoweng"},"content":"            Task element \u003d inputs.get(i);","lastModifiedDate":"2021-09-17"},{"lineNumber":161,"author":{"gitId":"charliemoweng"},"content":"            if (element.toString().contains(toBeFound)) {","lastModifiedDate":"2021-09-17"},{"lineNumber":162,"author":{"gitId":"charliemoweng"},"content":"                tasksFound.add(element);","lastModifiedDate":"2021-09-17"},{"lineNumber":163,"author":{"gitId":"charliemoweng"},"content":"            }","lastModifiedDate":"2021-09-17"},{"lineNumber":164,"author":{"gitId":"charliemoweng"},"content":"            assert !element.toString().contains(toBeFound);","lastModifiedDate":"2021-09-18"},{"lineNumber":165,"author":{"gitId":"charliemoweng"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":166,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":167,"author":{"gitId":"charliemoweng"},"content":"        String tasks \u003d \"Here are the matching tasks in your list: \\n\";","lastModifiedDate":"2021-09-18"},{"lineNumber":168,"author":{"gitId":"charliemoweng"},"content":"        for (int i \u003d 0; i \u003c tasksFound.size(); i++) {","lastModifiedDate":"2021-09-17"},{"lineNumber":169,"author":{"gitId":"charliemoweng"},"content":"            int index \u003d i + 1;","lastModifiedDate":"2021-09-17"},{"lineNumber":170,"author":{"gitId":"charliemoweng"},"content":"            tasks +\u003d index + \". \" + tasksFound.get(i).toString();","lastModifiedDate":"2021-09-18"},{"lineNumber":171,"author":{"gitId":"charliemoweng"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":172,"author":{"gitId":"charliemoweng"},"content":"        return tasks;","lastModifiedDate":"2021-09-18"},{"lineNumber":173,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":174,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":175,"author":{"gitId":"charliemoweng"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":176,"author":{"gitId":"charliemoweng"},"content":"     * Adds a Todo object to the TaskList.","lastModifiedDate":"2021-09-19"},{"lineNumber":177,"author":{"gitId":"charliemoweng"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":178,"author":{"gitId":"charliemoweng"},"content":"     * @param input The user input.","lastModifiedDate":"2021-09-19"},{"lineNumber":179,"author":{"gitId":"charliemoweng"},"content":"     * @param inputs An ArrayList of Tasks.","lastModifiedDate":"2021-09-19"},{"lineNumber":180,"author":{"gitId":"charliemoweng"},"content":"     * @param storage The storage of Duke.","lastModifiedDate":"2021-09-19"},{"lineNumber":181,"author":{"gitId":"charliemoweng"},"content":"     * @param ui The ui of Duke.","lastModifiedDate":"2021-09-19"},{"lineNumber":182,"author":{"gitId":"charliemoweng"},"content":"     * @return The Duke\u0027s response.","lastModifiedDate":"2021-09-19"},{"lineNumber":183,"author":{"gitId":"charliemoweng"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":184,"author":{"gitId":"charliemoweng"},"content":"    private String addTodo(String input, ArrayList\u003cTask\u003e inputs, Storage storage, Ui ui) {","lastModifiedDate":"2021-09-19"},{"lineNumber":185,"author":{"gitId":"charliemoweng"},"content":"        String todoToAdd \u003d input.substring(5); // name of the task is after \"todo\" and space","lastModifiedDate":"2021-09-19"},{"lineNumber":186,"author":{"gitId":"charliemoweng"},"content":"        Task newTodo \u003d new Todo(todoToAdd);","lastModifiedDate":"2021-09-19"},{"lineNumber":187,"author":{"gitId":"charliemoweng"},"content":"        inputs.add(newTodo);","lastModifiedDate":"2021-09-19"},{"lineNumber":188,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":189,"author":{"gitId":"charliemoweng"},"content":"        storage.writeTaskToFile(inputs.get(0).toString() + System.lineSeparator());","lastModifiedDate":"2021-09-19"},{"lineNumber":190,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":191,"author":{"gitId":"charliemoweng"},"content":"        for (int i \u003d 1; i \u003c inputs.size(); i++) {","lastModifiedDate":"2021-09-19"},{"lineNumber":192,"author":{"gitId":"charliemoweng"},"content":"            storage.appendTaskToFile(inputs.get(i).toString() + System.lineSeparator());","lastModifiedDate":"2021-09-19"},{"lineNumber":193,"author":{"gitId":"charliemoweng"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":194,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":195,"author":{"gitId":"charliemoweng"},"content":"        return ui.displayAddTaskMessage(newTodo) + \"\\n\" + ui.displayTaskNumber(this);","lastModifiedDate":"2021-09-19"},{"lineNumber":196,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":197,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":198,"author":{"gitId":"charliemoweng"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":199,"author":{"gitId":"charliemoweng"},"content":"     * Adds a Deadline object to the TaskList.","lastModifiedDate":"2021-09-19"},{"lineNumber":200,"author":{"gitId":"charliemoweng"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":201,"author":{"gitId":"charliemoweng"},"content":"     * @param input The user input.","lastModifiedDate":"2021-09-19"},{"lineNumber":202,"author":{"gitId":"charliemoweng"},"content":"     * @param inputs An ArrayList of Tasks.","lastModifiedDate":"2021-09-19"},{"lineNumber":203,"author":{"gitId":"charliemoweng"},"content":"     * @param storage The storage of Duke.","lastModifiedDate":"2021-09-19"},{"lineNumber":204,"author":{"gitId":"charliemoweng"},"content":"     * @param ui The ui of Duke.","lastModifiedDate":"2021-09-19"},{"lineNumber":205,"author":{"gitId":"charliemoweng"},"content":"     * @return The Duke\u0027s response.","lastModifiedDate":"2021-09-19"},{"lineNumber":206,"author":{"gitId":"charliemoweng"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":207,"author":{"gitId":"charliemoweng"},"content":"    private String addDeadline(String input, ArrayList\u003cTask\u003e inputs, Storage storage, Ui ui) {","lastModifiedDate":"2021-09-19"},{"lineNumber":208,"author":{"gitId":"charliemoweng"},"content":"        String[] ddlGroup \u003d input.split(\" /by \");","lastModifiedDate":"2021-09-19"},{"lineNumber":209,"author":{"gitId":"charliemoweng"},"content":"        String ddlToAdd \u003d ddlGroup[0].substring(9); // name of the task is after \"deadline\" and space","lastModifiedDate":"2021-09-19"},{"lineNumber":210,"author":{"gitId":"charliemoweng"},"content":"        String ddlByTime \u003d ddlGroup[1];","lastModifiedDate":"2021-09-19"},{"lineNumber":211,"author":{"gitId":"charliemoweng"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(ddlByTime, parser.getFormatter());","lastModifiedDate":"2021-09-19"},{"lineNumber":212,"author":{"gitId":"charliemoweng"},"content":"        Task newDeadline \u003d new Deadline(ddlToAdd, dateTime);","lastModifiedDate":"2021-09-19"},{"lineNumber":213,"author":{"gitId":"charliemoweng"},"content":"        inputs.add(newDeadline);","lastModifiedDate":"2021-09-19"},{"lineNumber":214,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":215,"author":{"gitId":"charliemoweng"},"content":"        storage.writeTaskToFile(inputs.get(0).toString() + System.lineSeparator());","lastModifiedDate":"2021-09-19"},{"lineNumber":216,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":217,"author":{"gitId":"charliemoweng"},"content":"        for (int i \u003d 1; i \u003c inputs.size(); i++) {","lastModifiedDate":"2021-09-19"},{"lineNumber":218,"author":{"gitId":"charliemoweng"},"content":"            storage.appendTaskToFile(inputs.get(i).toString() + System.lineSeparator());","lastModifiedDate":"2021-09-19"},{"lineNumber":219,"author":{"gitId":"charliemoweng"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":220,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":221,"author":{"gitId":"charliemoweng"},"content":"        return ui.displayAddTaskMessage(newDeadline) + ui.displayTaskNumber(this);","lastModifiedDate":"2021-09-19"},{"lineNumber":222,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":223,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":224,"author":{"gitId":"charliemoweng"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":225,"author":{"gitId":"charliemoweng"},"content":"     * Adds an Event object to the TaskList.","lastModifiedDate":"2021-09-19"},{"lineNumber":226,"author":{"gitId":"charliemoweng"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":227,"author":{"gitId":"charliemoweng"},"content":"     * @param input The user input.","lastModifiedDate":"2021-09-19"},{"lineNumber":228,"author":{"gitId":"charliemoweng"},"content":"     * @param inputs An ArrayList of Tasks.","lastModifiedDate":"2021-09-19"},{"lineNumber":229,"author":{"gitId":"charliemoweng"},"content":"     * @param storage The storage of Duke.","lastModifiedDate":"2021-09-19"},{"lineNumber":230,"author":{"gitId":"charliemoweng"},"content":"     * @param ui The ui of Duke.","lastModifiedDate":"2021-09-19"},{"lineNumber":231,"author":{"gitId":"charliemoweng"},"content":"     * @return The Duke\u0027s response.","lastModifiedDate":"2021-09-19"},{"lineNumber":232,"author":{"gitId":"charliemoweng"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":233,"author":{"gitId":"charliemoweng"},"content":"    private String addEvent(String input, ArrayList\u003cTask\u003e inputs, Storage storage, Ui ui) {","lastModifiedDate":"2021-09-19"},{"lineNumber":234,"author":{"gitId":"charliemoweng"},"content":"        String[] eveGroup \u003d input.split(\" /at \");","lastModifiedDate":"2021-09-19"},{"lineNumber":235,"author":{"gitId":"charliemoweng"},"content":"        String eveToAdd \u003d eveGroup[0].substring(6); // name of the task is after \"event\" and space","lastModifiedDate":"2021-09-19"},{"lineNumber":236,"author":{"gitId":"charliemoweng"},"content":"        String eveAtTime \u003d eveGroup[1];","lastModifiedDate":"2021-09-19"},{"lineNumber":237,"author":{"gitId":"charliemoweng"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(eveAtTime, parser.getFormatter());","lastModifiedDate":"2021-09-19"},{"lineNumber":238,"author":{"gitId":"charliemoweng"},"content":"        Task newEvent \u003d new Event(eveToAdd, dateTime);","lastModifiedDate":"2021-09-19"},{"lineNumber":239,"author":{"gitId":"charliemoweng"},"content":"        inputs.add(newEvent);","lastModifiedDate":"2021-09-19"},{"lineNumber":240,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":241,"author":{"gitId":"charliemoweng"},"content":"        storage.writeTaskToFile(inputs.get(0).toString() + System.lineSeparator());","lastModifiedDate":"2021-09-19"},{"lineNumber":242,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":243,"author":{"gitId":"charliemoweng"},"content":"        for (int i \u003d 1; i \u003c inputs.size(); i++) {","lastModifiedDate":"2021-09-19"},{"lineNumber":244,"author":{"gitId":"charliemoweng"},"content":"            storage.appendTaskToFile(inputs.get(i).toString() + System.lineSeparator());","lastModifiedDate":"2021-09-19"},{"lineNumber":245,"author":{"gitId":"charliemoweng"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":246,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":247,"author":{"gitId":"charliemoweng"},"content":"        return ui.displayAddTaskMessage(newEvent) + ui.displayTaskNumber(this);","lastModifiedDate":"2021-09-19"},{"lineNumber":248,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":249,"author":{"gitId":"charliemoweng"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"charliemoweng":249}},{"path":"src/main/java/duke/components/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"charliemoweng"},"content":"package duke.components;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"charliemoweng"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"charliemoweng"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"charliemoweng"},"content":" * Represents the UI that the user will be interacting with.","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"charliemoweng"},"content":" * It displays messages to users after their actions.","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"charliemoweng"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"charliemoweng"},"content":"public class Ui {","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"charliemoweng"},"content":"    private final String lineBreak;","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"charliemoweng"},"content":"    public Ui() {","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"charliemoweng"},"content":"        this.lineBreak \u003d \"------------------------------\";","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"charliemoweng"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"charliemoweng"},"content":"     * Display the welcome message when Duke starts up.","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"charliemoweng"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"charliemoweng"},"content":"    public void displayWelcomeMessage() {","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"charliemoweng"},"content":"        System.out.println(lineBreak","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"charliemoweng"},"content":"                + \"\\n\"","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"charliemoweng"},"content":"                + \"Hello! I\u0027m Duke.\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"charliemoweng"},"content":"                + \"How can I help you today?\\n\"","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"charliemoweng"},"content":"                + lineBreak + \"\\n\"","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"charliemoweng"},"content":"                + \"You can create Tasks here.\\n\"","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"charliemoweng"},"content":"                + \"To add a Todo, \\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"charliemoweng"},"content":"                + \" simply key in `todo` followed by the name;\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"charliemoweng"},"content":"                + \"To add a Deadline, \\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"charliemoweng"},"content":"                + \" simply key in `deadline` followed by its name, `/by` and the deadline;\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"charliemoweng"},"content":"                + \"To add an Event, \\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"charliemoweng"},"content":"                + \" simply key in `event` followed by its name, `/at` and its time.\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"charliemoweng"},"content":"                + \"Please key in the date and time in the format of `26/08/2021 20:20`.\\n\"","lastModifiedDate":"2021-09-04"},{"lineNumber":33,"author":{"gitId":"charliemoweng"},"content":"                + lineBreak + \"\\n\"","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"charliemoweng"},"content":"                + \"To display the current list, \\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"charliemoweng"},"content":"                + \" simply enter \u0027list\u0027.\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"charliemoweng"},"content":"                + \"To delete a task, \\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"charliemoweng"},"content":"                + \" simply enter \u0027delete\u0027 and space, followed by the task index.\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"charliemoweng"},"content":"                + \"To mark a task as done, \\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"charliemoweng"},"content":"                + \" simple enter \u0027done\u0027 and space, followed by the task index.\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"charliemoweng"},"content":"                + \"To exit, \\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"charliemoweng"},"content":"                + \" simply enter \u0027bye\u0027.\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"charliemoweng"},"content":"                + lineBreak + \"\\n\"","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"charliemoweng"},"content":"        );","lastModifiedDate":"2021-09-04"},{"lineNumber":44,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":45,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":46,"author":{"gitId":"charliemoweng"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"charliemoweng"},"content":"     * Display a message when user successfully adds a task.","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"charliemoweng"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"charliemoweng"},"content":"     * @param newTask The new task user added.","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"charliemoweng"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"charliemoweng"},"content":"    public String displayAddTaskMessage(Task newTask) {","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"charliemoweng"},"content":"        return \"Roger! Added the task: \\n\" + \"    \" + newTask.toString();","lastModifiedDate":"2021-09-18"},{"lineNumber":53,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":54,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":55,"author":{"gitId":"charliemoweng"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"charliemoweng"},"content":"     * Display the number of tasks in task list.","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"charliemoweng"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"charliemoweng"},"content":"     * @param taskList The task list that user is enquiring.","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"charliemoweng"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"charliemoweng"},"content":"    public String displayTaskNumber(TaskList taskList) {","lastModifiedDate":"2021-09-18"},{"lineNumber":61,"author":{"gitId":"charliemoweng"},"content":"        return \"Now you have \" + taskList.getSize() + \" tasks in your list.\";","lastModifiedDate":"2021-09-18"},{"lineNumber":62,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":63,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":64,"author":{"gitId":"charliemoweng"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"charliemoweng"},"content":"     * Display a linebreak.","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"charliemoweng"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"charliemoweng"},"content":"    public String displayLinebreak() {","lastModifiedDate":"2021-09-18"},{"lineNumber":68,"author":{"gitId":"charliemoweng"},"content":"        return lineBreak + \"\\n\";","lastModifiedDate":"2021-09-18"},{"lineNumber":69,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":70,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":71,"author":{"gitId":"charliemoweng"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"charliemoweng"},"content":"     * Display a message when description of a todo is empty.","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"charliemoweng"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"charliemoweng"},"content":"    public String displayTodoEmptyMessage() {","lastModifiedDate":"2021-09-18"},{"lineNumber":75,"author":{"gitId":"charliemoweng"},"content":"        return \" OOPS!!! The description of a todo cannot be empty.\";","lastModifiedDate":"2021-09-18"},{"lineNumber":76,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":77,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":78,"author":{"gitId":"charliemoweng"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"charliemoweng"},"content":"     * Display a message when user marks a task as done.","lastModifiedDate":"2021-09-17"},{"lineNumber":80,"author":{"gitId":"charliemoweng"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"charliemoweng"},"content":"     * @param taskMarkDone The task that is done.","lastModifiedDate":"2021-09-17"},{"lineNumber":82,"author":{"gitId":"charliemoweng"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":83,"author":{"gitId":"charliemoweng"},"content":"    public String displayMarkDoneMessage(String taskMarkDone) {","lastModifiedDate":"2021-09-18"},{"lineNumber":84,"author":{"gitId":"charliemoweng"},"content":"        return \"Nice! I\u0027ve marked this task as done: \\n\" + taskMarkDone;","lastModifiedDate":"2021-09-18"},{"lineNumber":85,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":86,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":87,"author":{"gitId":"charliemoweng"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":88,"author":{"gitId":"charliemoweng"},"content":"     * Display a message when user is exiting Duke.","lastModifiedDate":"2021-09-17"},{"lineNumber":89,"author":{"gitId":"charliemoweng"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":90,"author":{"gitId":"charliemoweng"},"content":"    public String displayExitMessage() {","lastModifiedDate":"2021-09-18"},{"lineNumber":91,"author":{"gitId":"charliemoweng"},"content":"        return \"     Bye! See you next time! :)\" + \"\\n\" + lineBreak + \"\\n\";","lastModifiedDate":"2021-09-18"},{"lineNumber":92,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":93,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":94,"author":{"gitId":"charliemoweng"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":95,"author":{"gitId":"charliemoweng"},"content":"     * Display a message when user input is not standard.","lastModifiedDate":"2021-09-17"},{"lineNumber":96,"author":{"gitId":"charliemoweng"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":97,"author":{"gitId":"charliemoweng"},"content":"    public String displayOtherInputsMessage() {","lastModifiedDate":"2021-09-18"},{"lineNumber":98,"author":{"gitId":"charliemoweng"},"content":"        return \" OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-( \\n\" + lineBreak + \"\\n\";","lastModifiedDate":"2021-09-18"},{"lineNumber":99,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":100,"author":{"gitId":"charliemoweng"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"charliemoweng":100}},{"path":"src/main/java/duke/controller/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"charliemoweng"},"content":"package duke.controller;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"charliemoweng"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"charliemoweng"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"charliemoweng"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"charliemoweng"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"charliemoweng"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"charliemoweng"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"charliemoweng"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"charliemoweng"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"charliemoweng"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"charliemoweng"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"charliemoweng"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"charliemoweng"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"charliemoweng"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"charliemoweng"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"charliemoweng"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"charliemoweng"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"charliemoweng"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"charliemoweng"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"charliemoweng"},"content":"    @FXML","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"charliemoweng"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"charliemoweng"},"content":"    @FXML","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"charliemoweng"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"charliemoweng"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"charliemoweng"},"content":"        try {","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"charliemoweng"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"charliemoweng"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"charliemoweng"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"charliemoweng"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"charliemoweng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"charliemoweng"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"charliemoweng"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"charliemoweng"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"charliemoweng"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"charliemoweng"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"charliemoweng"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"charliemoweng"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"charliemoweng"},"content":"    private void flip() {","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"charliemoweng"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"charliemoweng"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-18"},{"lineNumber":48,"author":{"gitId":"charliemoweng"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"charliemoweng"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"charliemoweng"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-18"},{"lineNumber":53,"author":{"gitId":"charliemoweng"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-09-18"},{"lineNumber":54,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":55,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":56,"author":{"gitId":"charliemoweng"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-18"},{"lineNumber":57,"author":{"gitId":"charliemoweng"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-18"},{"lineNumber":58,"author":{"gitId":"charliemoweng"},"content":"        db.flip();","lastModifiedDate":"2021-09-18"},{"lineNumber":59,"author":{"gitId":"charliemoweng"},"content":"        return db;","lastModifiedDate":"2021-09-18"},{"lineNumber":60,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":61,"author":{"gitId":"charliemoweng"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"charliemoweng":61}},{"path":"src/main/java/duke/controller/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"charliemoweng"},"content":"package duke.controller;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"charliemoweng"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"charliemoweng"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"charliemoweng"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"charliemoweng"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"charliemoweng"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"charliemoweng"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"charliemoweng"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"charliemoweng"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"charliemoweng"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"charliemoweng"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"charliemoweng"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"charliemoweng"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"charliemoweng"},"content":"    @FXML","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"charliemoweng"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"charliemoweng"},"content":"    @FXML","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"charliemoweng"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"charliemoweng"},"content":"    @FXML","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"charliemoweng"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"charliemoweng"},"content":"    @FXML","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"charliemoweng"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"charliemoweng"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"charliemoweng"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"charliemoweng"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"charliemoweng"},"content":"    @FXML","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"charliemoweng"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"charliemoweng"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"charliemoweng"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"charliemoweng"},"content":"        duke \u003d d;","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"charliemoweng"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"charliemoweng"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"charliemoweng"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"charliemoweng"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"charliemoweng"},"content":"    @FXML","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"charliemoweng"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"charliemoweng"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"charliemoweng"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"charliemoweng"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-18"},{"lineNumber":48,"author":{"gitId":"charliemoweng"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"charliemoweng"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"charliemoweng"},"content":"        );","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"charliemoweng"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":53,"author":{"gitId":"charliemoweng"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"charliemoweng":53}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"charliemoweng"},"content":"package duke.task;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"charliemoweng"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"charliemoweng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"charliemoweng"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"charliemoweng"},"content":" * Represents a Task of type Deadline, which has a due time.","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"charliemoweng"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"charliemoweng"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"charliemoweng"},"content":"    protected LocalDateTime ddlDateTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"charliemoweng"},"content":"    private DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"EEE, dd/MMM/yyyy hh:mm a\");","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"charliemoweng"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"charliemoweng"},"content":"     * Creates a Deadline object.","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"charliemoweng"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"charliemoweng"},"content":"     * @param deadlineName The name of the deadline.","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"charliemoweng"},"content":"     * @param byTime The due time of the deadline.","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"charliemoweng"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"charliemoweng"},"content":"    public Deadline(String deadlineName, LocalDateTime byTime) {","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"charliemoweng"},"content":"        super(deadlineName);","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"charliemoweng"},"content":"        this.ddlDateTime \u003d byTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"charliemoweng"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"charliemoweng"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"charliemoweng"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formatter.format(ddlDateTime) + \")\";","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"charliemoweng"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"charliemoweng":28}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"charliemoweng"},"content":"package duke.task;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"charliemoweng"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"charliemoweng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"charliemoweng"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"charliemoweng"},"content":" * Represents a Task of type Event, which has a time at which it happens.","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"charliemoweng"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"charliemoweng"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"charliemoweng"},"content":"    protected LocalDateTime eveDateTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"charliemoweng"},"content":"    private DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"EEE, dd/MMM/yyyy hh:mm a\");","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"charliemoweng"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"charliemoweng"},"content":"     * Creates an Event object.","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"charliemoweng"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"charliemoweng"},"content":"     * @param eventName The name of the event.","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"charliemoweng"},"content":"     * @param atTime The time the event happens.","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"charliemoweng"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"charliemoweng"},"content":"    public Event(String eventName, LocalDateTime atTime) {","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"charliemoweng"},"content":"        super(eventName);","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"charliemoweng"},"content":"        this.eveDateTime \u003d atTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"charliemoweng"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"charliemoweng"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"charliemoweng"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + formatter.format(eveDateTime) + \")\";","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"charliemoweng"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"charliemoweng":28}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"charliemoweng"},"content":"package duke.task;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"charliemoweng"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"charliemoweng"},"content":" * Represents a Task, which has a name and can be marked as done.","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"charliemoweng"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"charliemoweng"},"content":"public class Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"charliemoweng"},"content":"    protected String taskName;","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"charliemoweng"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"charliemoweng"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"charliemoweng"},"content":"     * Creates a Task object.","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"charliemoweng"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"charliemoweng"},"content":"     * @param taskName The name of the Task.","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"charliemoweng"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"charliemoweng"},"content":"    public Task(String taskName) {","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"charliemoweng"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"charliemoweng"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"charliemoweng"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"charliemoweng"},"content":"     * Sets the task as done.","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"charliemoweng"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"charliemoweng"},"content":"    public void setDone() {","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"charliemoweng"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"charliemoweng"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"charliemoweng"},"content":"     * Returns the status icon of the task, X means done, empty means undone.","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"charliemoweng"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"charliemoweng"},"content":"     * @return The status icon of the task.","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"charliemoweng"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"charliemoweng"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"charliemoweng"},"content":"        // mark done task with X","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"charliemoweng"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"charliemoweng"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"charliemoweng"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"charliemoweng"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.taskName;","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"charliemoweng"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"charliemoweng":42}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"charliemoweng"},"content":"package duke.task;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"charliemoweng"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"charliemoweng"},"content":" * Represents a Task of type Event.","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"charliemoweng"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"charliemoweng"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"charliemoweng"},"content":"    public Todo(String todoName) {","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"charliemoweng"},"content":"        super(todoName);","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"charliemoweng"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"charliemoweng"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"charliemoweng"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"charliemoweng"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"charliemoweng":15}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"charliemoweng"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"charliemoweng"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"charliemoweng"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"charliemoweng"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"charliemoweng"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"charliemoweng"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"charliemoweng"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"charliemoweng"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"charliemoweng"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"charliemoweng"},"content":"         \u003cfont\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"charliemoweng"},"content":"            \u003cFont size\u003d\"18.0\" /\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"charliemoweng"},"content":"         \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"charliemoweng"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"charliemoweng"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"charliemoweng"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"charliemoweng"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"charliemoweng"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"charliemoweng"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"charliemoweng":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"charliemoweng"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"charliemoweng"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"charliemoweng"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"charliemoweng"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"charliemoweng"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"charliemoweng"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"charliemoweng"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\"","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"charliemoweng"},"content":"            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"charliemoweng"},"content":"            fx:controller\u003d\"duke.controller.MainWindow\"\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"charliemoweng"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"charliemoweng"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" promptText\u003d\"Key in here\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"charliemoweng"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"charliemoweng"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"charliemoweng"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"charliemoweng"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"charliemoweng"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"charliemoweng"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"charliemoweng"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"charliemoweng"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"charliemoweng":21}},{"path":"src/test/java/duke/components/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"charliemoweng"},"content":"package duke.components;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"charliemoweng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"charliemoweng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"charliemoweng"},"content":"public class ParserTest {","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"charliemoweng"},"content":"    @Test","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"charliemoweng"},"content":"    public void testParserIsMarkDoneCommand() {","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"charliemoweng"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"charliemoweng"},"content":"        assertEquals(true, parser.isMarkDoneCommand(\"done 1\"));","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"charliemoweng"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"charliemoweng":13}},{"path":"src/test/java/duke/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"charliemoweng"},"content":"package duke.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"charliemoweng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"charliemoweng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"charliemoweng"},"content":"public class TaskTest {","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"charliemoweng"},"content":"    @Test","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"charliemoweng"},"content":"    public void testTaskSetDone() {","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"charliemoweng"},"content":"        Task task \u003d new Task(\"taskTest\");","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"charliemoweng"},"content":"        task.setDone();","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"charliemoweng"},"content":"        assertEquals(\"[X] taskTest\", task.toString());","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"charliemoweng"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"charliemoweng":15}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"charliemoweng"},"content":"package duke.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"charliemoweng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"charliemoweng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"charliemoweng"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"charliemoweng"},"content":"public class TodoTest {","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"charliemoweng"},"content":"    @Test","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"charliemoweng"},"content":"    public void testTodoToString() {","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"charliemoweng"},"content":"        Todo todo \u003d new Todo(\"test1\");","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"charliemoweng"},"content":"        assertEquals(\"[T][ ] test1\", todo.toString());","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"charliemoweng"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"charliemoweng"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"charliemoweng":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"charliemoweng"},"content":"todo clean table","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"charliemoweng":1}}]
