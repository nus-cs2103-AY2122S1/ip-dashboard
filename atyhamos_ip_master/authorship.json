[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"atyhamos"},"content":"# Duchess","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"atyhamos"},"content":"\u003e I am looking forward to helping you as much as I can - Duchess of Cambridge, Kate Middleton ðŸ‘‘ [(source)](https://abcnews.go.com/Entertainment/prince-william-kate-middleton-interview-transcript/story?id\u003d12163826) ","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"atyhamos"},"content":"Duchess is a Chatbot counterpart based off the Java mascot, [_Duke_](https://www.oracle.com/java/duke.html).","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"atyhamos"},"content":"It\u0027s","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"atyhamos"},"content":"* Text-based","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"atyhamos"},"content":"* Easy to learn","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"atyhamos"},"content":"* ~~Fast~~ SUPER fast to use","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"atyhamos"},"content":"Steps to install:","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"atyhamos"},"content":"1. Download it from [here](https://github.com/atyhamos/ip/releases) for **FREE**.","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"atyhamos"},"content":"2. Double-click it.","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"atyhamos"},"content":"3. Add your tasks.","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"atyhamos"},"content":"4. Let her manage your tasks for youðŸ˜‰","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"atyhamos"},"content":"Features:","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"atyhamos"},"content":"- [x] Todos","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"atyhamos"},"content":"- [x] Deadlines","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"atyhamos"},"content":"- [x] Events","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"atyhamos"},"content":"- [ ] GUI ","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"atyhamos"},"content":"***","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"atyhamos"},"content":"If you are a Java programmer, you can use it as a template to build upon. Here\u0027s the `main` method:","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"atyhamos"},"content":"```java","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"atyhamos"},"content":"public class Duchess {","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"atyhamos"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"atyhamos"},"content":"        new Duchess().run();","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"atyhamos"},"content":"}","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"atyhamos":26,"-":5}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"atyhamos"},"content":"plugins {","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"atyhamos"},"content":"    id \u0027java\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"atyhamos"},"content":"    id \u0027application\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"atyhamos"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"atyhamos"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"atyhamos"},"content":"}","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"atyhamos"},"content":"repositories {","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"atyhamos"},"content":"    mavenCentral()","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"atyhamos"},"content":"}","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"atyhamos"},"content":"dependencies {","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"atyhamos"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"atyhamos"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"atyhamos"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"atyhamos"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"atyhamos"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"atyhamos"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"atyhamos"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"atyhamos"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"atyhamos"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"atyhamos"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"atyhamos"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"atyhamos"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"atyhamos"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"atyhamos"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"atyhamos"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"atyhamos"},"content":"}","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"atyhamos"},"content":"test {","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"atyhamos"},"content":"    useJUnitPlatform()","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"atyhamos"},"content":"    testLogging {","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"atyhamos"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"atyhamos"},"content":"        showExceptions true","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"atyhamos"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"atyhamos"},"content":"        showCauses true","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"atyhamos"},"content":"        showStackTraces true","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"atyhamos"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"atyhamos"},"content":"}","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"atyhamos"},"content":"application {","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"atyhamos"},"content":"    mainClassName \u003d \"duchess.gui.Launcher\"","lastModifiedDate":"2021-09-06"},{"lineNumber":47,"author":{"gitId":"atyhamos"},"content":"}","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"atyhamos"},"content":"shadowJar {","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"atyhamos"},"content":"    archiveBaseName \u003d \"duchess\"","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"atyhamos"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"atyhamos"},"content":"}","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"atyhamos"},"content":"checkstyle {","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"atyhamos"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"atyhamos"},"content":"}","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"atyhamos"},"content":"run{","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"atyhamos"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"atyhamos"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"atyhamos"},"content":"}","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"atyhamos"},"content":"sourceSets.main.java.srcDirs \u003d [\u0027src/main/java\u0027]","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"atyhamos"},"content":"sourceSets.test.java.srcDirs \u003d [\u0027src/test/java\u0027]","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"atyhamos":64}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"atyhamos"},"content":"@rem","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"atyhamos"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"atyhamos"},"content":"@rem","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"atyhamos"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"atyhamos"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"atyhamos"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"atyhamos"},"content":"@rem","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"atyhamos"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"atyhamos"},"content":"@rem","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"atyhamos"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"atyhamos"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"atyhamos"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"atyhamos"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"atyhamos"},"content":"@rem limitations under the License.","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"atyhamos"},"content":"@rem","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"atyhamos"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"atyhamos"},"content":"@rem ##########################################################################","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"atyhamos"},"content":"@rem","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"atyhamos"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"atyhamos"},"content":"@rem","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"atyhamos"},"content":"@rem ##########################################################################","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"atyhamos"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"atyhamos"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"atyhamos"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"atyhamos"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"atyhamos"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"atyhamos"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"atyhamos"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"atyhamos"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"atyhamos"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"atyhamos"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"atyhamos"},"content":"@rem Find java.exe","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"atyhamos"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"atyhamos"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"atyhamos"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"atyhamos"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"atyhamos"},"content":"echo.","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"atyhamos"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"atyhamos"},"content":"echo.","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"atyhamos"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"atyhamos"},"content":"echo location of your Java installation.","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"atyhamos"},"content":"goto fail","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"atyhamos"},"content":":findJavaFromJavaHome","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"atyhamos"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"atyhamos"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"atyhamos"},"content":"if exist \"%JAVA_EXE%\" goto init","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"atyhamos"},"content":"echo.","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"atyhamos"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"atyhamos"},"content":"echo.","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"atyhamos"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"atyhamos"},"content":"echo location of your Java installation.","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"atyhamos"},"content":"goto fail","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"atyhamos"},"content":":init","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"atyhamos"},"content":"@rem Get command-line arguments, handling Windows variants","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"atyhamos"},"content":"if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"atyhamos"},"content":":win9xME_args","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"atyhamos"},"content":"@rem Slurp the command line arguments.","lastModifiedDate":"2021-08-29"},{"lineNumber":74,"author":{"gitId":"atyhamos"},"content":"set CMD_LINE_ARGS\u003d","lastModifiedDate":"2021-08-29"},{"lineNumber":75,"author":{"gitId":"atyhamos"},"content":"set _SKIP\u003d2","lastModifiedDate":"2021-08-29"},{"lineNumber":76,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":77,"author":{"gitId":"atyhamos"},"content":":win9xME_args_slurp","lastModifiedDate":"2021-08-29"},{"lineNumber":78,"author":{"gitId":"atyhamos"},"content":"if \"x%~1\" \u003d\u003d \"x\" goto execute","lastModifiedDate":"2021-08-29"},{"lineNumber":79,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":80,"author":{"gitId":"atyhamos"},"content":"set CMD_LINE_ARGS\u003d%*","lastModifiedDate":"2021-08-29"},{"lineNumber":81,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":82,"author":{"gitId":"atyhamos"},"content":":execute","lastModifiedDate":"2021-08-29"},{"lineNumber":83,"author":{"gitId":"atyhamos"},"content":"@rem Setup the command line","lastModifiedDate":"2021-08-29"},{"lineNumber":84,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":85,"author":{"gitId":"atyhamos"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2021-08-29"},{"lineNumber":86,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":87,"author":{"gitId":"atyhamos"},"content":"@rem Execute Gradle","lastModifiedDate":"2021-08-29"},{"lineNumber":88,"author":{"gitId":"atyhamos"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%","lastModifiedDate":"2021-08-29"},{"lineNumber":89,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":90,"author":{"gitId":"atyhamos"},"content":":end","lastModifiedDate":"2021-08-29"},{"lineNumber":91,"author":{"gitId":"atyhamos"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2021-08-29"},{"lineNumber":92,"author":{"gitId":"atyhamos"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2021-08-29"},{"lineNumber":93,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":94,"author":{"gitId":"atyhamos"},"content":":fail","lastModifiedDate":"2021-08-29"},{"lineNumber":95,"author":{"gitId":"atyhamos"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2021-08-29"},{"lineNumber":96,"author":{"gitId":"atyhamos"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2021-08-29"},{"lineNumber":97,"author":{"gitId":"atyhamos"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2021-08-29"},{"lineNumber":98,"author":{"gitId":"atyhamos"},"content":"exit /b 1","lastModifiedDate":"2021-08-29"},{"lineNumber":99,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":100,"author":{"gitId":"atyhamos"},"content":":mainEnd","lastModifiedDate":"2021-08-29"},{"lineNumber":101,"author":{"gitId":"atyhamos"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2021-08-29"},{"lineNumber":102,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":103,"author":{"gitId":"atyhamos"},"content":":omega","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"atyhamos":103}},{"path":"src/main/java/duchess/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"atyhamos"},"content":"package duchess.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"atyhamos"},"content":"import duchess.main.DuchessList;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"atyhamos"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"atyhamos"},"content":" * This class contains the logic to handle the bye command.","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"atyhamos"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"atyhamos"},"content":" * @author Amos Tan","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"atyhamos"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"atyhamos"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"atyhamos"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"atyhamos"},"content":"     * Constructs a ByeCommand.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"atyhamos"},"content":"    public ByeCommand() {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"atyhamos"},"content":"        super(null);","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"atyhamos"},"content":"     * Handles the logic for exiting the Duchess interface.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"atyhamos"},"content":"     * @param duchessList The DuchessList to read or write tasks to.","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"atyhamos"},"content":"     * @return The reply from Duchess to the user.","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"atyhamos"},"content":"    public String handleLogic(DuchessList duchessList) {","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"atyhamos"},"content":"        return \"I bid thee farewell.\";","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"atyhamos"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"atyhamos":28}},{"path":"src/main/java/duchess/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"atyhamos"},"content":"package duchess.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"atyhamos"},"content":"import duchess.main.DuchessList;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"atyhamos"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"atyhamos"},"content":" * This abstract class contains the logic to handle commands.","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"atyhamos"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"atyhamos"},"content":" * @author Amos Tan","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"atyhamos"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"atyhamos"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"atyhamos"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"atyhamos"},"content":"    /** The name of the Command.*/","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"atyhamos"},"content":"    private String name;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"atyhamos"},"content":"    /** Constructs a Command.*/","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"atyhamos"},"content":"    public Command(String name) {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"atyhamos"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"atyhamos"},"content":"    /** Construct either a ByeCommand or ListCommand.*/","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"atyhamos"},"content":"    public static Command of(String name) {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"atyhamos"},"content":"        switch (name) {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"atyhamos"},"content":"        case \"bye\":","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"atyhamos"},"content":"            return new ByeCommand();","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"atyhamos"},"content":"        case \"list\":","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"atyhamos"},"content":"            return new ListCommand();","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"atyhamos"},"content":"        default:","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"atyhamos"},"content":"            assert false : \"Code execution should not reach here. Something went wrong. Command does not match any\"","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"atyhamos"},"content":"                    + \" known commands.\";","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"atyhamos"},"content":"            return null;","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"atyhamos"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"atyhamos"},"content":"    /** Constructs one of the other commands.*/","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"atyhamos"},"content":"    public static Command of(String name, String description) {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"atyhamos"},"content":"        switch (name) {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"atyhamos"},"content":"        case \"done\":","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"atyhamos"},"content":"            return new DoneCommand(description);","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"atyhamos"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"atyhamos"},"content":"            return new TodoCommand(description);","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"atyhamos"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"atyhamos"},"content":"            return new DeadlineCommand(description);","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"atyhamos"},"content":"        case \"event\":","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"atyhamos"},"content":"            return new EventCommand(description);","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"atyhamos"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"atyhamos"},"content":"            return new DeleteCommand(description);","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"atyhamos"},"content":"        case \"tasks\":","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"atyhamos"},"content":"            return new TasksCommand(description);","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"atyhamos"},"content":"        case \"find\":","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"atyhamos"},"content":"            return new FindCommand(description);","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"atyhamos"},"content":"        default:","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"atyhamos"},"content":"            assert false : \"Code execution should not reach here. Something went wrong. Command does not match any\"","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"atyhamos"},"content":"                    + \" known commands.\";","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"atyhamos"},"content":"            return null;","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"atyhamos"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"atyhamos"},"content":"    public String getDescription() {","lastModifiedDate":"2021-09-07"},{"lineNumber":56,"author":{"gitId":"atyhamos"},"content":"        return this.name;","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":60,"author":{"gitId":"atyhamos"},"content":"     * Handles the logic specific to the command.","lastModifiedDate":"2021-09-07"},{"lineNumber":61,"author":{"gitId":"atyhamos"},"content":"     * @param duchessList The DuchessList to read or write tasks to.","lastModifiedDate":"2021-09-07"},{"lineNumber":62,"author":{"gitId":"atyhamos"},"content":"     * @return The reply from Duchess to the user.","lastModifiedDate":"2021-09-07"},{"lineNumber":63,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":64,"author":{"gitId":"atyhamos"},"content":"    public abstract String handleLogic(DuchessList duchessList);","lastModifiedDate":"2021-09-07"},{"lineNumber":65,"author":{"gitId":"atyhamos"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"atyhamos":65}},{"path":"src/main/java/duchess/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"atyhamos"},"content":"package duchess.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"atyhamos"},"content":"import duchess.main.DuchessException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"atyhamos"},"content":"import duchess.main.DuchessFileHandler;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"atyhamos"},"content":"import duchess.main.DuchessList;","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"atyhamos"},"content":"import duchess.task.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"atyhamos"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"atyhamos"},"content":" * This class contains the logic to handle the deadline command.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"atyhamos"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"atyhamos"},"content":" * @author Amos Tan","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"atyhamos"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"atyhamos"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"atyhamos"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"atyhamos"},"content":"    /** The message on the usage of the deadline command. */","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"atyhamos"},"content":"    private static final String INVALID_MESSAGE \u003d \"The command \\\"deadline\\\" should be followed by \"","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"atyhamos"},"content":"            + \"a task and a date and time, e.g (read book /by 11/10/2019 4pm).\";","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"atyhamos"},"content":"     * Constructs a DeadlineCommand.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"atyhamos"},"content":"     * @param name The description of the deadline.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"atyhamos"},"content":"    public DeadlineCommand(String name) {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"atyhamos"},"content":"        super(name);","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"atyhamos"},"content":"     * Handles the logic for checking and creating Deadline tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"atyhamos"},"content":"     * @param duchessList The DuchessList to read or write tasks to.","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"atyhamos"},"content":"     * @return The reply from Duchess to the user.","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"atyhamos"},"content":"    public String handleLogic(DuchessList duchessList) {","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"atyhamos"},"content":"        String description \u003d getDescription();","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"atyhamos"},"content":"        String reply \u003d \"\";","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"atyhamos"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"atyhamos"},"content":"            Deadline deadline \u003d buildDeadline(description);","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"atyhamos"},"content":"            if (duchessList.checkForDuplicates(deadline)) {","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"atyhamos"},"content":"                reply \u003d \"This deadline already exists in your list.\";","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"atyhamos"},"content":"            } else {","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"atyhamos"},"content":"                duchessList.add(deadline);","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"atyhamos"},"content":"                int listSize \u003d duchessList.getSize();","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"atyhamos"},"content":"                reply \u003d \"Understood. I\u0027ve added this task:\\n    \" + deadline","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"atyhamos"},"content":"                        + \"\\nYou now have \" + listSize","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"atyhamos"},"content":"                        + (listSize \u003e 1 ? \" tasks in the list.\" : \" task in the list.\");","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"atyhamos"},"content":"                DuchessFileHandler.writeToFile(duchessList);","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"atyhamos"},"content":"            }","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"atyhamos"},"content":"        } catch (DuchessException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"atyhamos"},"content":"            reply \u003d e.getMessage();","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"atyhamos"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"atyhamos"},"content":"        assert !reply.isBlank() : \"Reply should not be empty.\";","lastModifiedDate":"2021-09-08"},{"lineNumber":52,"author":{"gitId":"atyhamos"},"content":"        return reply;","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":56,"author":{"gitId":"atyhamos"},"content":"     * Builds a Deadline if the description is a valid input.","lastModifiedDate":"2021-09-07"},{"lineNumber":57,"author":{"gitId":"atyhamos"},"content":"     * @param description The user given input following the deadline command.","lastModifiedDate":"2021-09-07"},{"lineNumber":58,"author":{"gitId":"atyhamos"},"content":"     * @return The generated Deadline.","lastModifiedDate":"2021-09-07"},{"lineNumber":59,"author":{"gitId":"atyhamos"},"content":"     * @throws DuchessException If the input does not follow the Deadline template.","lastModifiedDate":"2021-09-07"},{"lineNumber":60,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":61,"author":{"gitId":"atyhamos"},"content":"    public static Deadline buildDeadline(String description) throws DuchessException {","lastModifiedDate":"2021-09-07"},{"lineNumber":62,"author":{"gitId":"atyhamos"},"content":"        if (!description.contains(\" /by \")) {","lastModifiedDate":"2021-09-07"},{"lineNumber":63,"author":{"gitId":"atyhamos"},"content":"            throw new DuchessException(INVALID_MESSAGE);","lastModifiedDate":"2021-09-07"},{"lineNumber":64,"author":{"gitId":"atyhamos"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":65,"author":{"gitId":"atyhamos"},"content":"        String[] taskParts \u003d description.split(\" /by \", 2);","lastModifiedDate":"2021-09-07"},{"lineNumber":66,"author":{"gitId":"atyhamos"},"content":"        String checkTask \u003d taskParts[0];","lastModifiedDate":"2021-09-07"},{"lineNumber":67,"author":{"gitId":"atyhamos"},"content":"        String checkBy \u003d taskParts[1];","lastModifiedDate":"2021-09-07"},{"lineNumber":68,"author":{"gitId":"atyhamos"},"content":"        if (checkBy.equals(\"\")) {","lastModifiedDate":"2021-09-07"},{"lineNumber":69,"author":{"gitId":"atyhamos"},"content":"            throw new DuchessException(INVALID_MESSAGE);","lastModifiedDate":"2021-09-07"},{"lineNumber":70,"author":{"gitId":"atyhamos"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":71,"author":{"gitId":"atyhamos"},"content":"        // Valid input","lastModifiedDate":"2021-09-07"},{"lineNumber":72,"author":{"gitId":"atyhamos"},"content":"        return new Deadline(checkTask, Deadline.convertStringToDate(checkBy));","lastModifiedDate":"2021-09-07"},{"lineNumber":73,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":74,"author":{"gitId":"atyhamos"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"atyhamos":74}},{"path":"src/main/java/duchess/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"atyhamos"},"content":"package duchess.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"atyhamos"},"content":"import duchess.main.DuchessException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"atyhamos"},"content":"import duchess.main.DuchessFileHandler;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"atyhamos"},"content":"import duchess.main.DuchessList;","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"atyhamos"},"content":"import duchess.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"atyhamos"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"atyhamos"},"content":" * This class contains the logic to handle the delete command.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"atyhamos"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"atyhamos"},"content":" * @author Amos Tan","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"atyhamos"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"atyhamos"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"atyhamos"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"atyhamos"},"content":"     * Constructs a DeleteCommand.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"atyhamos"},"content":"     * @param name The name of the task to be deleted.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"atyhamos"},"content":"    public DeleteCommand(String name) {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"atyhamos"},"content":"        super(name);","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"atyhamos"},"content":"     * Handles the logic for deleting a task.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"atyhamos"},"content":"     * @param duchessList The DuchessList to read or write tasks to.","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"atyhamos"},"content":"     * @return The reply from Duchess to the user.","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"atyhamos"},"content":"    public String handleLogic(DuchessList duchessList) {","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"atyhamos"},"content":"        String index \u003d getDescription();","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"atyhamos"},"content":"        String reply;","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"atyhamos"},"content":"        // Parsing a non-numeric string will throw a NumberFormatException","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"atyhamos"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"atyhamos"},"content":"            if (duchessList.checkWithinRange(Integer.parseInt(index))) {","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"atyhamos"},"content":"                // Valid delete task","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"atyhamos"},"content":"                Task deletedTask \u003d duchessList.delete(Integer.parseInt(index));","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"atyhamos"},"content":"                reply \u003d \"Alright. I\u0027ve removed this task:   \\n  \" + deletedTask","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"atyhamos"},"content":"                        + \"\\nNow you have \" + duchessList.getSize() + \" tasks in the list.\";","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"atyhamos"},"content":"                DuchessFileHandler.writeToFile(duchessList);","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"atyhamos"},"content":"            } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"atyhamos"},"content":"                // \"delete\" followed by an integer outside of range of the list","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"atyhamos"},"content":"                throw new DuchessException(\"Apologies, that task does not exist and cannot be deleted.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"atyhamos"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"atyhamos"},"content":"        } catch (NumberFormatException | DuchessException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"atyhamos"},"content":"            // \"delete\" followed by an invalid non-integer string input","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"atyhamos"},"content":"            if (e instanceof NumberFormatException) {","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"atyhamos"},"content":"                reply \u003d \"The command \\\"delete\\\" should be followed by an integer.\";","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"atyhamos"},"content":"            } else {","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"atyhamos"},"content":"                reply \u003d e.getMessage();","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"atyhamos"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"atyhamos"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"atyhamos"},"content":"        assert !reply.isBlank() : \"Reply should not be empty.\";","lastModifiedDate":"2021-09-08"},{"lineNumber":53,"author":{"gitId":"atyhamos"},"content":"        return reply;","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"atyhamos"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"atyhamos":55}},{"path":"src/main/java/duchess/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"atyhamos"},"content":"package duchess.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"atyhamos"},"content":"import duchess.main.DuchessException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"atyhamos"},"content":"import duchess.main.DuchessFileHandler;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"atyhamos"},"content":"import duchess.main.DuchessList;","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"atyhamos"},"content":"import duchess.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"atyhamos"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"atyhamos"},"content":" * This class contains the logic to handle the done command.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"atyhamos"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"atyhamos"},"content":" * @author Amos Tan","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"atyhamos"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"atyhamos"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"atyhamos"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"atyhamos"},"content":"     * Constructs a DoneCommand.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"atyhamos"},"content":"     * @param name The name of the task to be marked as done.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"atyhamos"},"content":"    public DoneCommand(String name) {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"atyhamos"},"content":"        super(name);","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"atyhamos"},"content":"     * Handles the logic for marking a task a done.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"atyhamos"},"content":"     * @param duchessList The DuchessList to read or write tasks to.","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"atyhamos"},"content":"     * @return The reply from Duchess to the user.","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"atyhamos"},"content":"    public String handleLogic(DuchessList duchessList) {","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"atyhamos"},"content":"        String index \u003d getDescription();","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"atyhamos"},"content":"        String reply;","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"atyhamos"},"content":"        // Parsing a non-numeric string will throw a NumberFormatException","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"atyhamos"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"atyhamos"},"content":"            if (duchessList.checkWithinRange(Integer.parseInt(index))) {","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"atyhamos"},"content":"                // Valid done task","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"atyhamos"},"content":"                Task task \u003d duchessList.getTask(Integer.parseInt(index));","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"atyhamos"},"content":"                if (task.isDone()) {","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"atyhamos"},"content":"                    throw new DuchessException(\"Oops... This task is already done.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"atyhamos"},"content":"                }","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"atyhamos"},"content":"                task.setDoneStatus(true);","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"atyhamos"},"content":"                reply \u003d \"Brilliant! I\u0027ve marked this task as done:   \\n  \" + task;","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"atyhamos"},"content":"                DuchessFileHandler.writeToFile(duchessList);","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"atyhamos"},"content":"            } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"atyhamos"},"content":"                // \"done\" followed by an integer outside of range of the list","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"atyhamos"},"content":"                throw new DuchessException(\"Apologies, that task does not exist and cannot be marked as done.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"atyhamos"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"atyhamos"},"content":"        } catch (NumberFormatException | DuchessException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"atyhamos"},"content":"            // \"done\" followed by an invalid non-integer string input","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"atyhamos"},"content":"            if (e instanceof NumberFormatException) {","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"atyhamos"},"content":"                reply \u003d \"The command \\\"done\\\" should be followed by an integer.\";","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"atyhamos"},"content":"            } else {","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"atyhamos"},"content":"                reply \u003d e.getMessage();","lastModifiedDate":"2021-09-07"},{"lineNumber":53,"author":{"gitId":"atyhamos"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"atyhamos"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"atyhamos"},"content":"        assert !reply.isBlank() : \"Reply should not be empty.\";","lastModifiedDate":"2021-09-08"},{"lineNumber":56,"author":{"gitId":"atyhamos"},"content":"        return reply;","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"atyhamos"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"atyhamos":58}},{"path":"src/main/java/duchess/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"atyhamos"},"content":"package duchess.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"atyhamos"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"atyhamos"},"content":"import duchess.main.DuchessException;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"atyhamos"},"content":"import duchess.main.DuchessFileHandler;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"atyhamos"},"content":"import duchess.main.DuchessList;","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"atyhamos"},"content":"import duchess.task.Event;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"atyhamos"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"atyhamos"},"content":" * This class contains the logic to handle the event command.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"atyhamos"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"atyhamos"},"content":" * @author Amos Tan","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"atyhamos"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"atyhamos"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"atyhamos"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"atyhamos"},"content":"    /** The message on the usage of the event command. */","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"atyhamos"},"content":"    private static final String INVALID_MESSAGE \u003d \"The command \\\"event\\\" should be followed by \"","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"atyhamos"},"content":"            + \"a task and a date and time, e.g (meeting /at 2/10/2019 2pm-4pm).\";","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"atyhamos"},"content":"     * Constructs an EventCommand.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"atyhamos"},"content":"     * @param name The description of the Event.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"atyhamos"},"content":"    public EventCommand(String name) {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"atyhamos"},"content":"        super(name);","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"atyhamos"},"content":"     * Handles the logic for checking and creating Event tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"atyhamos"},"content":"     * @param duchessList The DuchessList to read or write tasks to.","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"atyhamos"},"content":"     * @return The reply from Duchess to the user.","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"atyhamos"},"content":"    public String handleLogic(DuchessList duchessList) {","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"atyhamos"},"content":"        String reply;","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"atyhamos"},"content":"        String taskAndDuration \u003d getDescription();","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"atyhamos"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"atyhamos"},"content":"            Event event \u003d buildEvent(taskAndDuration);","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"atyhamos"},"content":"            if (duchessList.checkForDuplicates(event)) {","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"atyhamos"},"content":"                reply \u003d \"This event already exists in your list.\";","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"atyhamos"},"content":"            } else {","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"atyhamos"},"content":"                duchessList.add(event);","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"atyhamos"},"content":"                int listSize \u003d duchessList.getSize();","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"atyhamos"},"content":"                reply \u003d \"Understood. I\u0027ve added this task:\\n    \" + event","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"atyhamos"},"content":"                        + \"\\nYou now have \" + listSize","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"atyhamos"},"content":"                        + (listSize \u003e 1 ? \" tasks in the list.\" : \" task in the list.\");","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"atyhamos"},"content":"                DuchessFileHandler.writeToFile(duchessList);","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"atyhamos"},"content":"            }","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"atyhamos"},"content":"        } catch (DuchessException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"atyhamos"},"content":"            reply \u003d e.getMessage();","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"atyhamos"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"atyhamos"},"content":"        assert !reply.isBlank() : \"Reply should not be empty.\";","lastModifiedDate":"2021-09-08"},{"lineNumber":54,"author":{"gitId":"atyhamos"},"content":"        return reply;","lastModifiedDate":"2021-09-07"},{"lineNumber":55,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":57,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":58,"author":{"gitId":"atyhamos"},"content":"     * Builds an Event if the description is a valid input.","lastModifiedDate":"2021-09-07"},{"lineNumber":59,"author":{"gitId":"atyhamos"},"content":"     * @param description The user given input following the event command.","lastModifiedDate":"2021-09-07"},{"lineNumber":60,"author":{"gitId":"atyhamos"},"content":"     * @return The generated Event.","lastModifiedDate":"2021-09-07"},{"lineNumber":61,"author":{"gitId":"atyhamos"},"content":"     * @throws DuchessException If the input does not follow the Event template.","lastModifiedDate":"2021-09-07"},{"lineNumber":62,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":63,"author":{"gitId":"atyhamos"},"content":"    public static Event buildEvent(String description) throws DuchessException {","lastModifiedDate":"2021-09-07"},{"lineNumber":64,"author":{"gitId":"atyhamos"},"content":"        if (!description.contains(\" /at \")) {","lastModifiedDate":"2021-09-07"},{"lineNumber":65,"author":{"gitId":"atyhamos"},"content":"            throw new DuchessException(INVALID_MESSAGE);","lastModifiedDate":"2021-09-07"},{"lineNumber":66,"author":{"gitId":"atyhamos"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":67,"author":{"gitId":"atyhamos"},"content":"        String[] taskParts \u003d description.split(\" /at \", 2);","lastModifiedDate":"2021-09-07"},{"lineNumber":68,"author":{"gitId":"atyhamos"},"content":"        String task \u003d taskParts[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"atyhamos"},"content":"        String time \u003d taskParts[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"atyhamos"},"content":"        if (!time.contains(\" \")) {","lastModifiedDate":"2021-09-02"},{"lineNumber":71,"author":{"gitId":"atyhamos"},"content":"            throw new DuchessException(INVALID_MESSAGE);","lastModifiedDate":"2021-09-07"},{"lineNumber":72,"author":{"gitId":"atyhamos"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":73,"author":{"gitId":"atyhamos"},"content":"        String[] timeParts \u003d time.split(\" \", 2);","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"atyhamos"},"content":"        String day \u003d timeParts[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"atyhamos"},"content":"        String duration \u003d timeParts[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"atyhamos"},"content":"        if (!duration.contains(\"-\")) {","lastModifiedDate":"2021-09-02"},{"lineNumber":77,"author":{"gitId":"atyhamos"},"content":"            throw new DuchessException(INVALID_MESSAGE);","lastModifiedDate":"2021-09-07"},{"lineNumber":78,"author":{"gitId":"atyhamos"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":79,"author":{"gitId":"atyhamos"},"content":"        LocalDateTime[] events \u003d Event.convertStringToDates(day, duration);","lastModifiedDate":"2021-09-07"},{"lineNumber":80,"author":{"gitId":"atyhamos"},"content":"        return new Event(task, events[0], events[1]);","lastModifiedDate":"2021-09-07"},{"lineNumber":81,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"atyhamos"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"atyhamos":82}},{"path":"src/main/java/duchess/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"atyhamos"},"content":"package duchess.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"atyhamos"},"content":"import duchess.main.DuchessList;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"atyhamos"},"content":"import duchess.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"atyhamos"},"content":"/**","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"atyhamos"},"content":" * This class contains the logic to handle the find command.","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"atyhamos"},"content":" *","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"atyhamos"},"content":" * @author Amos Tan","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"atyhamos"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"atyhamos"},"content":" */","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"atyhamos"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"atyhamos"},"content":"    public FindCommand(String name) {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"atyhamos"},"content":"        super(name);","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"atyhamos"},"content":"     * Handles the logic for finding tasks containing a keyword.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"atyhamos"},"content":"     * @param duchessList The DuchessList to read or write tasks to.","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"atyhamos"},"content":"     * @return The reply from Duchess to the user.","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"atyhamos"},"content":"    public String handleLogic(DuchessList duchessList) {","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"atyhamos"},"content":"        String invalidMessage \u003d \"There are no tasks with that keyword.\";","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"atyhamos"},"content":"        String keyword \u003d getDescription();","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"atyhamos"},"content":"        String reply \u003d \"\";","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"atyhamos"},"content":"        int counter \u003d 0;","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"atyhamos"},"content":"        for (int i \u003d 0; i \u003c duchessList.getSize(); i++) {","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"atyhamos"},"content":"            Task t \u003d duchessList.getTask(i + 1);","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"atyhamos"},"content":"            if (t.contains(keyword)) {","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"atyhamos"},"content":"                reply +\u003d String.format(\"%d. %s\\n\", ++counter, t);","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"atyhamos"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"atyhamos"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"atyhamos"},"content":"        if (reply.isEmpty()) {","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"atyhamos"},"content":"            return invalidMessage;","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"atyhamos"},"content":"        } else {","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"atyhamos"},"content":"            return reply;","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"atyhamos"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"atyhamos"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"atyhamos":40}},{"path":"src/main/java/duchess/command/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"atyhamos"},"content":"package duchess.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"atyhamos"},"content":"import duchess.main.DuchessList;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"atyhamos"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"atyhamos"},"content":" * This class implements the logic to handle invalid commands.","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"atyhamos"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"atyhamos"},"content":" * @author Amos Tan","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"atyhamos"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"atyhamos"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"atyhamos"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"atyhamos"},"content":"    /** Constructs an InvalidCommand.*/","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"atyhamos"},"content":"    public InvalidCommand() {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"atyhamos"},"content":"        super(null);","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"atyhamos"},"content":"     * Handles the logic for creating an invalid command.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"atyhamos"},"content":"     * @param duchessList The DuchessList to read or write tasks to.","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"atyhamos"},"content":"     * @return The reply from Duchess to the user.","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"atyhamos"},"content":"    public String handleLogic(DuchessList duchessList) {","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"atyhamos"},"content":"        return \"Apologies, I didn\u0027t catch that.\";","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"atyhamos"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"atyhamos":26}},{"path":"src/main/java/duchess/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"atyhamos"},"content":"package duchess.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"atyhamos"},"content":"import duchess.main.DuchessList;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"atyhamos"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"atyhamos"},"content":" * This class contains the logic to handle the deadline command.","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"atyhamos"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"atyhamos"},"content":" * @author Amos Tan","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"atyhamos"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"atyhamos"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"atyhamos"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"atyhamos"},"content":"    /** Constructs a ListCommand.*/","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"atyhamos"},"content":"    public ListCommand() {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"atyhamos"},"content":"        super(null);","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"atyhamos"},"content":"     * Handles the logic for creating an list command.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"atyhamos"},"content":"     * @param duchessList The DuchessList to read or write tasks to.","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"atyhamos"},"content":"     * @return The reply from Duchess to the user.","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"atyhamos"},"content":"    public String handleLogic(DuchessList duchessList) {","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"atyhamos"},"content":"        String reply \u003d duchessList.printList();","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"atyhamos"},"content":"        assert !reply.isBlank() : \"Reply should not be empty.\";","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"atyhamos"},"content":"        return reply;","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"atyhamos"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"atyhamos":28}},{"path":"src/main/java/duchess/command/TasksCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"atyhamos"},"content":"package duchess.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"atyhamos"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"atyhamos"},"content":"import duchess.main.DuchessException;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"atyhamos"},"content":"import duchess.main.DuchessList;","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"atyhamos"},"content":"import duchess.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"atyhamos"},"content":"/**","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"atyhamos"},"content":" * This class contains the logic to handle the tasks command.","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"atyhamos"},"content":" *","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"atyhamos"},"content":" * @author Amos Tan","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"atyhamos"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"atyhamos"},"content":" */","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"atyhamos"},"content":"public class TasksCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"atyhamos"},"content":"    /** The message on the usage of the tasks command. */","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"atyhamos"},"content":"    private static final String INVALID_MESSAGE \u003d \"The command \\\"tasks\\\" should be followed by \"","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"atyhamos"},"content":"            + \"a keyword \\\"/after\\\" or \\\"/before\\\", a date and/or a time (e.g before 2/10/2019 2pm\"","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"atyhamos"},"content":"            + \" or after today)\";","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"atyhamos"},"content":"    public TasksCommand(String name) {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"atyhamos"},"content":"        super(name);","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"atyhamos"},"content":"     * Handles the logic for checking tasks before or after a date.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"atyhamos"},"content":"     * @param duchessList The DuchessList to read or write tasks to.","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"atyhamos"},"content":"     * @return The reply from Duchess to the user.","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"atyhamos"},"content":"    public String handleLogic(DuchessList duchessList) {","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"atyhamos"},"content":"        String reply;","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"atyhamos"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"atyhamos"},"content":"            String[] timeSplit \u003d getDescription().substring(1).split(\" \", 2);","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"atyhamos"},"content":"            String keyword \u003d timeSplit[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"atyhamos"},"content":"            String date \u003d timeSplit[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"atyhamos"},"content":"            boolean isBefore \u003d checkKeyword(keyword);","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"atyhamos"},"content":"            LocalDateTime dateAndTime \u003d date.equals(\"today\") ? LocalDateTime.now() : Task.convertStringToDate(date);","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"atyhamos"},"content":"            String tasksToPrint \u003d filterTasks(duchessList, isBefore, dateAndTime);","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"atyhamos"},"content":"            reply \u003d tasksToPrint.isBlank() ? \"You have no tasks \" + keyword + \" \" + date","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"atyhamos"},"content":"                    : tasksToPrint;","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"atyhamos"},"content":"        } catch (ArrayIndexOutOfBoundsException | DuchessException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"atyhamos"},"content":"            if (e instanceof ArrayIndexOutOfBoundsException) {","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"atyhamos"},"content":"                reply \u003d INVALID_MESSAGE;","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"atyhamos"},"content":"            } else {","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"atyhamos"},"content":"                reply \u003d e.getMessage();","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"atyhamos"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"atyhamos"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"atyhamos"},"content":"        assert !reply.isBlank() : \"Reply should not be empty.\";","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"atyhamos"},"content":"        return reply;","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":53,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":54,"author":{"gitId":"atyhamos"},"content":"     * Checks the given keyword if it matches before or after.","lastModifiedDate":"2021-09-07"},{"lineNumber":55,"author":{"gitId":"atyhamos"},"content":"     * @param keyword The given keyword.","lastModifiedDate":"2021-09-07"},{"lineNumber":56,"author":{"gitId":"atyhamos"},"content":"     * @return True if keyword is before, false if keyword is after.","lastModifiedDate":"2021-09-07"},{"lineNumber":57,"author":{"gitId":"atyhamos"},"content":"     * @throws DuchessException If keyword is neither before nor after.","lastModifiedDate":"2021-09-07"},{"lineNumber":58,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":59,"author":{"gitId":"atyhamos"},"content":"    public boolean checkKeyword(String keyword) throws DuchessException {","lastModifiedDate":"2021-09-07"},{"lineNumber":60,"author":{"gitId":"atyhamos"},"content":"        if (keyword.equals(\"before\")) {","lastModifiedDate":"2021-09-07"},{"lineNumber":61,"author":{"gitId":"atyhamos"},"content":"            return true;","lastModifiedDate":"2021-09-07"},{"lineNumber":62,"author":{"gitId":"atyhamos"},"content":"        } else if (keyword.equals(\"after\")) {","lastModifiedDate":"2021-09-07"},{"lineNumber":63,"author":{"gitId":"atyhamos"},"content":"            return false;","lastModifiedDate":"2021-09-07"},{"lineNumber":64,"author":{"gitId":"atyhamos"},"content":"        } else {","lastModifiedDate":"2021-09-07"},{"lineNumber":65,"author":{"gitId":"atyhamos"},"content":"            throw new DuchessException(INVALID_MESSAGE);","lastModifiedDate":"2021-09-07"},{"lineNumber":66,"author":{"gitId":"atyhamos"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":67,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":68,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":69,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":70,"author":{"gitId":"atyhamos"},"content":"     * Filters the tasks in the DuchessList before or after a certain time.","lastModifiedDate":"2021-09-07"},{"lineNumber":71,"author":{"gitId":"atyhamos"},"content":"     * @param duchessList The DuchessList to check from.","lastModifiedDate":"2021-09-07"},{"lineNumber":72,"author":{"gitId":"atyhamos"},"content":"     * @param isBefore Whether to search before or after a certain time.","lastModifiedDate":"2021-09-07"},{"lineNumber":73,"author":{"gitId":"atyhamos"},"content":"     * @param dateAndTime The time to search from.","lastModifiedDate":"2021-09-07"},{"lineNumber":74,"author":{"gitId":"atyhamos"},"content":"     * @return The tasks which match the specified condition.","lastModifiedDate":"2021-09-07"},{"lineNumber":75,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":76,"author":{"gitId":"atyhamos"},"content":"    public String filterTasks(DuchessList duchessList, boolean isBefore, LocalDateTime dateAndTime) {","lastModifiedDate":"2021-09-07"},{"lineNumber":77,"author":{"gitId":"atyhamos"},"content":"        String tasksToPrint \u003d \"\";","lastModifiedDate":"2021-09-07"},{"lineNumber":78,"author":{"gitId":"atyhamos"},"content":"        for (int i \u003d 1; i \u003c duchessList.getSize() + 1; i++) {","lastModifiedDate":"2021-09-07"},{"lineNumber":79,"author":{"gitId":"atyhamos"},"content":"            Task t \u003d duchessList.getTask(i);","lastModifiedDate":"2021-09-07"},{"lineNumber":80,"author":{"gitId":"atyhamos"},"content":"            if (isBefore \u0026\u0026 t.getDateTimeStart().isBefore(dateAndTime)) {","lastModifiedDate":"2021-09-08"},{"lineNumber":81,"author":{"gitId":"atyhamos"},"content":"                tasksToPrint +\u003d t + \"\\n\";","lastModifiedDate":"2021-09-07"},{"lineNumber":82,"author":{"gitId":"atyhamos"},"content":"            } else if (!isBefore \u0026\u0026 t.getDateTimeStart().isAfter(dateAndTime)) {","lastModifiedDate":"2021-09-08"},{"lineNumber":83,"author":{"gitId":"atyhamos"},"content":"                tasksToPrint +\u003d t + \"\\n\";","lastModifiedDate":"2021-09-07"},{"lineNumber":84,"author":{"gitId":"atyhamos"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":85,"author":{"gitId":"atyhamos"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":86,"author":{"gitId":"atyhamos"},"content":"        return tasksToPrint;","lastModifiedDate":"2021-09-07"},{"lineNumber":87,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":88,"author":{"gitId":"atyhamos"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"atyhamos":88}},{"path":"src/main/java/duchess/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"atyhamos"},"content":"package duchess.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"atyhamos"},"content":"import duchess.main.DuchessFileHandler;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"atyhamos"},"content":"import duchess.main.DuchessList;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"atyhamos"},"content":"import duchess.task.ToDo;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"atyhamos"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"atyhamos"},"content":" * This class contains the logic to handle the todo command.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"atyhamos"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"atyhamos"},"content":" * @author Amos Tan","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"atyhamos"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"atyhamos"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"atyhamos"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"atyhamos"},"content":"     * Constructs a TodoCommand.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"atyhamos"},"content":"     * @param name The description of the todo.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"atyhamos"},"content":"    public TodoCommand(String name) {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"atyhamos"},"content":"        super(name);","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"atyhamos"},"content":"     * Handles the logic for checking and creating ToDo tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"atyhamos"},"content":"     * @param duchessList The DuchessList to read or write tasks to.","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"atyhamos"},"content":"     * @return The reply from Duchess to the user.","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"atyhamos"},"content":"    public String handleLogic(DuchessList duchessList) {","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"atyhamos"},"content":"        String task \u003d getDescription();","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"atyhamos"},"content":"        // Valid input","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"atyhamos"},"content":"        ToDo todo \u003d new ToDo(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"atyhamos"},"content":"        if (duchessList.checkForDuplicates(todo)) {","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"atyhamos"},"content":"            return \"This todo already exists in your list.\";","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"atyhamos"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"atyhamos"},"content":"        duchessList.add(todo);","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"atyhamos"},"content":"        int listSize \u003d duchessList.getSize();","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"atyhamos"},"content":"        String reply \u003d \"Understood. I\u0027ve added this task:\\n    \" + todo","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"atyhamos"},"content":"                + \"\\nYou now have \" + listSize","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"atyhamos"},"content":"                + (listSize \u003e 1 ? \" tasks in the list.\" : \" task in the list.\");","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"atyhamos"},"content":"        DuchessFileHandler.writeToFile(duchessList);","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"atyhamos"},"content":"        assert !reply.isBlank() : \"Reply should not be empty.\";","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"atyhamos"},"content":"        return reply;","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"atyhamos"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"atyhamos":45}},{"path":"src/main/java/duchess/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"atyhamos"},"content":"package duchess.gui;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"atyhamos"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"atyhamos"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"atyhamos"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"atyhamos"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"atyhamos"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"atyhamos"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"atyhamos"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"atyhamos"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"atyhamos"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"atyhamos"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"atyhamos"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"atyhamos"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"atyhamos"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"atyhamos"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"atyhamos"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"atyhamos"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"atyhamos"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"atyhamos"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"atyhamos"},"content":" * This class implements a DialogBox.","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"atyhamos"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"atyhamos"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"atyhamos"},"content":"    /** A circle used to clip images to a circle its size.*/","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"atyhamos"},"content":"    final Circle circleClip \u003d new Circle(50, 50, 50);","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"atyhamos"},"content":"    /** The user\u0027s text or Duchess\u0027 reply.*/","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"atyhamos"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"atyhamos"},"content":"    private Label dialog;","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"atyhamos"},"content":"    /** The display picture of the user or Duchess.*/","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"atyhamos"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"atyhamos"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"atyhamos"},"content":"     * Constructs a DialogBox.","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"atyhamos"},"content":"     * @param text The text by the user or Duchess.","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"atyhamos"},"content":"     * @param img The display picture of the user or Duchess.","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"atyhamos"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"atyhamos"},"content":"        super(10);","lastModifiedDate":"2021-09-06"},{"lineNumber":45,"author":{"gitId":"atyhamos"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"atyhamos"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"atyhamos"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"atyhamos"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"atyhamos"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"atyhamos"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"atyhamos"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"atyhamos"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"atyhamos"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"atyhamos"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"atyhamos"},"content":"        displayPicture.setClip(circleClip);","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"atyhamos"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"atyhamos"},"content":"    private void flip() {","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"atyhamos"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"atyhamos"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"atyhamos"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"atyhamos"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":68,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":69,"author":{"gitId":"atyhamos"},"content":"     * Gets the user dialog and colours the background blue and centers the text.","lastModifiedDate":"2021-08-31"},{"lineNumber":70,"author":{"gitId":"atyhamos"},"content":"     * @param text The user\u0027s text.","lastModifiedDate":"2021-08-31"},{"lineNumber":71,"author":{"gitId":"atyhamos"},"content":"     * @param iv The user\u0027s display picture.","lastModifiedDate":"2021-08-31"},{"lineNumber":72,"author":{"gitId":"atyhamos"},"content":"     * @return The DialogBox of the user.","lastModifiedDate":"2021-08-31"},{"lineNumber":73,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":74,"author":{"gitId":"atyhamos"},"content":"    public static DialogBox getUserDialog(String text, Image iv) {","lastModifiedDate":"2021-08-31"},{"lineNumber":75,"author":{"gitId":"atyhamos"},"content":"        var db \u003d new DialogBox(text, iv);","lastModifiedDate":"2021-08-31"},{"lineNumber":76,"author":{"gitId":"atyhamos"},"content":"        db.setBackground(new Background(new BackgroundFill(Color.SKYBLUE, new CornerRadii(100),","lastModifiedDate":"2021-09-15"},{"lineNumber":77,"author":{"gitId":"atyhamos"},"content":"                new Insets(5))));","lastModifiedDate":"2021-09-15"},{"lineNumber":78,"author":{"gitId":"atyhamos"},"content":"        db.dialog.setStyle(\"-fx-font-weight: bold;\" + \"-fx-font-family: \u0027SF Pro Display\u0027 \");","lastModifiedDate":"2021-09-15"},{"lineNumber":79,"author":{"gitId":"atyhamos"},"content":"        db.setStyle(\"-fx-padding: 0;\" + \"-fx-border-style: solid inside;\"","lastModifiedDate":"2021-09-15"},{"lineNumber":80,"author":{"gitId":"atyhamos"},"content":"                + \"-fx-border-width: 2;\" + \"-fx-border-insets: 5;\"","lastModifiedDate":"2021-09-15"},{"lineNumber":81,"author":{"gitId":"atyhamos"},"content":"                + \"-fx-border-color: deepskyblue;\" + \"-fx-border-radius: 100\");","lastModifiedDate":"2021-09-15"},{"lineNumber":82,"author":{"gitId":"atyhamos"},"content":"        return db;","lastModifiedDate":"2021-08-31"},{"lineNumber":83,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":84,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":85,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":86,"author":{"gitId":"atyhamos"},"content":"     * Gets the Duchess\u0027 dialog and colours the background green.","lastModifiedDate":"2021-08-31"},{"lineNumber":87,"author":{"gitId":"atyhamos"},"content":"     * @param text The Duchess\u0027 text.","lastModifiedDate":"2021-08-31"},{"lineNumber":88,"author":{"gitId":"atyhamos"},"content":"     * @param iv Duchess\u0027 display picture.","lastModifiedDate":"2021-08-31"},{"lineNumber":89,"author":{"gitId":"atyhamos"},"content":"     * @return The DialogBox of the Duchess.","lastModifiedDate":"2021-08-31"},{"lineNumber":90,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":91,"author":{"gitId":"atyhamos"},"content":"    public static DialogBox getDuchessDialog(String text, Image iv) {","lastModifiedDate":"2021-08-31"},{"lineNumber":92,"author":{"gitId":"atyhamos"},"content":"        var db \u003d new DialogBox(text, iv);","lastModifiedDate":"2021-08-31"},{"lineNumber":93,"author":{"gitId":"atyhamos"},"content":"        db.flip();","lastModifiedDate":"2021-08-31"},{"lineNumber":94,"author":{"gitId":"atyhamos"},"content":"        db.setBackground(new Background(new BackgroundFill(Color.LIGHTPINK, new CornerRadii(100),","lastModifiedDate":"2021-09-15"},{"lineNumber":95,"author":{"gitId":"atyhamos"},"content":"                new Insets(5))));","lastModifiedDate":"2021-09-15"},{"lineNumber":96,"author":{"gitId":"atyhamos"},"content":"        db.dialog.setStyle(\"-fx-font-family: \u0027SF Pro Display\u0027\");","lastModifiedDate":"2021-09-15"},{"lineNumber":97,"author":{"gitId":"atyhamos"},"content":"        db.setStyle(\"-fx-padding: 0;\" + \"-fx-border-style: solid inside;\"","lastModifiedDate":"2021-09-15"},{"lineNumber":98,"author":{"gitId":"atyhamos"},"content":"                + \"-fx-border-width: 2;\" + \"-fx-border-insets: 5;\"","lastModifiedDate":"2021-09-15"},{"lineNumber":99,"author":{"gitId":"atyhamos"},"content":"                + \"-fx-border-color: orchid;\" + \"-fx-border-radius: 100\");","lastModifiedDate":"2021-09-15"},{"lineNumber":100,"author":{"gitId":"atyhamos"},"content":"        return db;","lastModifiedDate":"2021-08-31"},{"lineNumber":101,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":102,"author":{"gitId":"atyhamos"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"atyhamos":102}},{"path":"src/main/java/duchess/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"atyhamos"},"content":"package duchess.gui;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"atyhamos"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"atyhamos"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"atyhamos"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"atyhamos"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"atyhamos"},"content":"public class Launcher {","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"atyhamos"},"content":"     * Drives the GUI code.","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"atyhamos"},"content":"     * @param args The arguments from the System.","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"atyhamos"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"atyhamos"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"atyhamos"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"atyhamos":17}},{"path":"src/main/java/duchess/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"atyhamos"},"content":"package duchess.gui;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"atyhamos"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"atyhamos"},"content":"import duchess.main.Duchess;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"atyhamos"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"atyhamos"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"atyhamos"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"atyhamos"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"atyhamos"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"atyhamos"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"atyhamos"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"atyhamos"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"atyhamos"},"content":"public class Main extends Application {","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"atyhamos"},"content":"    /** The Duchess object to serve the user.*/","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"atyhamos"},"content":"    private Duchess duchess \u003d new Duchess();","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"atyhamos"},"content":"     * Starts the setting of the stage and showing the window to the user.","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"atyhamos"},"content":"     * @param stage The Main window to show the user.","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"atyhamos"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"atyhamos"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"atyhamos"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"atyhamos"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"atyhamos"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"atyhamos"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"atyhamos"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"atyhamos"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuchess(duchess);","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"atyhamos"},"content":"            stage.setTitle(\"Duchess\");","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"atyhamos"},"content":"            stage.show();","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"atyhamos"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"atyhamos"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"atyhamos"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"atyhamos"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"atyhamos":38}},{"path":"src/main/java/duchess/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"atyhamos"},"content":"package duchess.gui;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"atyhamos"},"content":"import duchess.command.ByeCommand;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"atyhamos"},"content":"import duchess.main.Duchess;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"atyhamos"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"atyhamos"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"atyhamos"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"atyhamos"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"atyhamos"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"atyhamos"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"atyhamos"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"atyhamos"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"atyhamos"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"atyhamos"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"atyhamos"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"atyhamos"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"atyhamos"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"atyhamos"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"atyhamos"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"atyhamos"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"atyhamos"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"atyhamos"},"content":"    /** The exit message to detect for closing the window. */","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"atyhamos"},"content":"    private static final String BYE_MESSAGE \u003d new ByeCommand().handleLogic(null);","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"atyhamos"},"content":"    /** A scroll pane to vertical scroll.*/","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"atyhamos"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"atyhamos"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"atyhamos"},"content":"    /** A VBox to hold text and images.*/","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"atyhamos"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"atyhamos"},"content":"    private VBox dialogContainer \u003d new VBox(100);","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"atyhamos"},"content":"    /** The user\u0027s input text field.*/","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"atyhamos"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"atyhamos"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"atyhamos"},"content":"    /** The user\u0027s submit button.*/","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"atyhamos"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"atyhamos"},"content":"    private Button sendButton;","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"atyhamos"},"content":"    /** The Duchess that serves the user.*/","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"atyhamos"},"content":"    private Duchess duchess;","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"atyhamos"},"content":"    /** The display image of the Duchess.*/","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"atyhamos"},"content":"    private Image duchessImage \u003d new Image(MainWindow.class.getResource(\"/images/duchess-icon.png\").toString());","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"atyhamos"},"content":"    /** The display image of the user.*/","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"atyhamos"},"content":"    private Image userImage \u003d new Image(MainWindow.class.getResource(\"/images/user-icon.png\").toString());","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"atyhamos"},"content":"     * Initializes the main window.","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"atyhamos"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"atyhamos"},"content":"    public void initialize() {","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"atyhamos"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"atyhamos"},"content":"        dialogContainer.setBackground(new Background(new BackgroundFill(Color.LAVENDER, new CornerRadii(0),","lastModifiedDate":"2021-09-15"},{"lineNumber":51,"author":{"gitId":"atyhamos"},"content":"                new Insets(0))));","lastModifiedDate":"2021-09-15"},{"lineNumber":52,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"atyhamos"},"content":"    public void setDuchess(Duchess d) {","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"atyhamos"},"content":"        duchess \u003d d;","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"atyhamos"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"atyhamos"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"atyhamos"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"atyhamos"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"atyhamos"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"atyhamos"},"content":"        String response \u003d duchess.getResponse(input);","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"atyhamos"},"content":"        if (response.equals(BYE_MESSAGE)) {","lastModifiedDate":"2021-09-08"},{"lineNumber":67,"author":{"gitId":"atyhamos"},"content":"            Stage stage \u003d (Stage) sendButton.getScene().getWindow();","lastModifiedDate":"2021-08-31"},{"lineNumber":68,"author":{"gitId":"atyhamos"},"content":"            stage.close();","lastModifiedDate":"2021-08-31"},{"lineNumber":69,"author":{"gitId":"atyhamos"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":70,"author":{"gitId":"atyhamos"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-31"},{"lineNumber":71,"author":{"gitId":"atyhamos"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-08-31"},{"lineNumber":72,"author":{"gitId":"atyhamos"},"content":"                DialogBox.getDuchessDialog(response, duchessImage)","lastModifiedDate":"2021-08-31"},{"lineNumber":73,"author":{"gitId":"atyhamos"},"content":"        );","lastModifiedDate":"2021-08-31"},{"lineNumber":74,"author":{"gitId":"atyhamos"},"content":"        userInput.clear();","lastModifiedDate":"2021-08-31"},{"lineNumber":75,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":76,"author":{"gitId":"atyhamos"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"atyhamos":76}},{"path":"src/main/java/duchess/main/Duchess.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"atyhamos"},"content":"package duchess.main;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"atyhamos"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"atyhamos"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"atyhamos"},"content":" * This class implements a Duke Chatbot variant: Duchess","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"atyhamos"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"atyhamos"},"content":" * @author Amos Tan","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"atyhamos"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"atyhamos"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"atyhamos"},"content":"public class Duchess {","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"atyhamos"},"content":"    /** The DuchessList which holds the string stored by the user.*/","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"atyhamos"},"content":"    private DuchessList duchessList;","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"atyhamos"},"content":"    /** The Scanner used to read in user input.*/","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"atyhamos"},"content":"    private Scanner sc;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"atyhamos"},"content":"    /** The parser to determine the respective commands from the user input.*/","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"atyhamos"},"content":"    private Parser parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"atyhamos"},"content":"     * Constructs a Duchess object.","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"atyhamos"},"content":"    public Duchess() {","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"atyhamos"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"atyhamos"},"content":"        this.duchessList \u003d DuchessFileHandler.load();","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"atyhamos"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"atyhamos"},"content":"    public DuchessList getDuchessList() {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"atyhamos"},"content":"        return this.duchessList;","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"atyhamos"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"atyhamos"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"atyhamos"},"content":"            return parser.checkPrefix(input).handleLogic(this.duchessList);","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"atyhamos"},"content":"        } catch (DuchessException d) {","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"atyhamos"},"content":"            return d.getMessage();","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"atyhamos"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"atyhamos"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"atyhamos":40}},{"path":"src/main/java/duchess/main/DuchessException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"atyhamos"},"content":"package duchess.main;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"atyhamos"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"atyhamos"},"content":" * This class implements a DuchessException to be thrown by Duchess","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"atyhamos"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"atyhamos"},"content":" * @author Amos Tan","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"atyhamos"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"atyhamos"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"atyhamos"},"content":"public class DuchessException extends Exception {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"atyhamos"},"content":"     * Constructs a DuchessException.","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"atyhamos"},"content":"     * @param errorMessage The error message associated with the exception.","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"atyhamos"},"content":"    public DuchessException(String errorMessage) {","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"atyhamos"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"atyhamos"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"atyhamos":18}},{"path":"src/main/java/duchess/main/DuchessFileHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"atyhamos"},"content":"package duchess.main;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"atyhamos"},"content":"import java.io.File;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"atyhamos"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"atyhamos"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"atyhamos"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"atyhamos"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"atyhamos"},"content":"import duchess.task.Deadline;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"atyhamos"},"content":"import duchess.task.Event;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"atyhamos"},"content":"import duchess.task.ToDo;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"atyhamos"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"atyhamos"},"content":" * This class implements a file handler to be used in reading and writing files.","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"atyhamos"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"atyhamos"},"content":" * @author Amos Tan","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"atyhamos"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"atyhamos"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"atyhamos"},"content":"public class DuchessFileHandler {","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"atyhamos"},"content":"    /** The home of the user to search for existing Duchess.*/","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"atyhamos"},"content":"    private static final String DATA_FOLDER \u003d \"data\";","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"atyhamos"},"content":"    /** The file name of the existing Duchess.*/","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"atyhamos"},"content":"    private static final String FILE_LOCATION \u003d \"data/duchess.txt\";","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"atyhamos"},"content":"    /** The save file of the tasks from Duchess. */","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"atyhamos"},"content":"    private static File savedDuchessFile;","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"atyhamos"},"content":"     * Extracts the DuchessList from the save file.","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"atyhamos"},"content":"     * @param existingDuchessFile The save file.","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"atyhamos"},"content":"     * @return The DuchessList from the save file.","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"atyhamos"},"content":"    public static DuchessList extractListFromFile(File existingDuchessFile) {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"atyhamos"},"content":"        String tasksAsString \u003d \"\";","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"atyhamos"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"atyhamos"},"content":"            Scanner sc \u003d new Scanner(existingDuchessFile);","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"atyhamos"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"atyhamos"},"content":"                tasksAsString +\u003d sc.nextLine() + \"\\n\";","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"atyhamos"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"atyhamos"},"content":"            sc.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"atyhamos"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"atyhamos"},"content":"            System.out.println(\"File not found.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"atyhamos"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"atyhamos"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"atyhamos"},"content":"        return tasksAsString.isBlank() ? new DuchessList() : convertStringToList(tasksAsString);","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"atyhamos"},"content":"     * Converts the given tasks as String to a DuchessList.","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"atyhamos"},"content":"     * @param tasksAsString The given tasks as String.","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"atyhamos"},"content":"     * @return The DuchessList with the tasks converted from the String","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"atyhamos"},"content":"    public static DuchessList convertStringToList(String tasksAsString) {","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"atyhamos"},"content":"        DuchessList d \u003d new DuchessList();","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"atyhamos"},"content":"        String[] taskStringArray \u003d tasksAsString.split(\"\\n\");","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"atyhamos"},"content":"        for (String task : taskStringArray) {","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"atyhamos"},"content":"            char identifier \u003d task.charAt(0);","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"atyhamos"},"content":"            switch (identifier) {","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"atyhamos"},"content":"            case \u0027T\u0027: {","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"atyhamos"},"content":"                String[] nameAndDone \u003d task.substring(1).split(\",\");","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"atyhamos"},"content":"                ToDo todo \u003d new ToDo(nameAndDone[0]);","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"atyhamos"},"content":"                todo.setDoneStatus(Boolean.parseBoolean(nameAndDone[1]));","lastModifiedDate":"2021-09-07"},{"lineNumber":63,"author":{"gitId":"atyhamos"},"content":"                d.add(todo);","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"atyhamos"},"content":"                break;","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"atyhamos"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"atyhamos"},"content":"            case \u0027D\u0027: {","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"atyhamos"},"content":"                String[] nameByAndDone \u003d task.substring(1).split(\",\");","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"atyhamos"},"content":"                Deadline deadline \u003d new Deadline(nameByAndDone[0], Deadline.convertTextToDate(nameByAndDone[1]));","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"atyhamos"},"content":"                deadline.setDoneStatus(Boolean.parseBoolean(nameByAndDone[2]));","lastModifiedDate":"2021-09-07"},{"lineNumber":70,"author":{"gitId":"atyhamos"},"content":"                d.add(deadline);","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"atyhamos"},"content":"                break;","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"atyhamos"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"atyhamos"},"content":"            case \u0027E\u0027: {","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"atyhamos"},"content":"                String[] nameDayTimeAndDone \u003d task.substring(1).split(\",\");","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"atyhamos"},"content":"                Event event \u003d new Event(nameDayTimeAndDone[0], Event.convertTextToDate(nameDayTimeAndDone[1]),","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"atyhamos"},"content":"                        Event.convertTextToDate(nameDayTimeAndDone[2]));","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"atyhamos"},"content":"                event.setDoneStatus(Boolean.parseBoolean(nameDayTimeAndDone[3]));","lastModifiedDate":"2021-09-07"},{"lineNumber":78,"author":{"gitId":"atyhamos"},"content":"                d.add(event);","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"atyhamos"},"content":"                break;","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"atyhamos"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"atyhamos"},"content":"            default: {","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"atyhamos"},"content":"                assert false : \"Code execution should not reach here. Something went wrong. \"","lastModifiedDate":"2021-09-08"},{"lineNumber":83,"author":{"gitId":"atyhamos"},"content":"                        + \"Save file is in wrong format.\";","lastModifiedDate":"2021-09-08"},{"lineNumber":84,"author":{"gitId":"atyhamos"},"content":"                return null;","lastModifiedDate":"2021-09-08"},{"lineNumber":85,"author":{"gitId":"atyhamos"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"atyhamos"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"atyhamos"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"atyhamos"},"content":"        return d;","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"atyhamos"},"content":"     * Writes the tasks as String to the save file.","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"atyhamos"},"content":"     * @param tasks The tasks inputted by the user of Duchess.","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"atyhamos"},"content":"    public static void writeToFile(DuchessList tasks) {","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"atyhamos"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"atyhamos"},"content":"            FileWriter fw \u003d new FileWriter(savedDuchessFile);","lastModifiedDate":"2021-09-08"},{"lineNumber":98,"author":{"gitId":"atyhamos"},"content":"            for (int i \u003d 1; i \u003c tasks.getSize() + 1; i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"atyhamos"},"content":"                fw.write(tasks.getTask(i).toFileFormat() + \"\\n\");","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"atyhamos"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"atyhamos"},"content":"            System.out.println(\"Writing task to file...\");","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"atyhamos"},"content":"            fw.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"atyhamos"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"atyhamos"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"atyhamos"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"atyhamos"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":107,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"atyhamos"},"content":"     * Loads the DuchessList from storage if found.","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"atyhamos"},"content":"     * @return The DuchessList saved to storage.","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"atyhamos"},"content":"    public static DuchessList load() {","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"atyhamos"},"content":"        // Solution below adapted from https://www.w3schools.com/java/java_files_create.asp","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"atyhamos"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"atyhamos"},"content":"            File savedDuchess \u003d new File(FILE_LOCATION);","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"atyhamos"},"content":"            DuchessFileHandler.savedDuchessFile \u003d savedDuchess;","lastModifiedDate":"2021-09-08"},{"lineNumber":118,"author":{"gitId":"atyhamos"},"content":"            if (savedDuchess.createNewFile()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"atyhamos"},"content":"                System.out.println(\"File created: \" + savedDuchess.getName());","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"atyhamos"},"content":"                return new DuchessList();","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"atyhamos"},"content":"            } else {","lastModifiedDate":"2021-09-02"},{"lineNumber":122,"author":{"gitId":"atyhamos"},"content":"                System.out.println(\"Found saved duchess file!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"atyhamos"},"content":"                return DuchessFileHandler.extractListFromFile(savedDuchess);","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"atyhamos"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":125,"author":{"gitId":"atyhamos"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"atyhamos"},"content":"            // Directory does not exist","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"atyhamos"},"content":"            System.out.println(\"Directory does not exist, creating one now.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"atyhamos"},"content":"            File dir \u003d new File(DATA_FOLDER);","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"atyhamos"},"content":"            if (!dir.exists()) {","lastModifiedDate":"2021-09-02"},{"lineNumber":130,"author":{"gitId":"atyhamos"},"content":"                dir.mkdir();","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"atyhamos"},"content":"            }","lastModifiedDate":"2021-09-02"},{"lineNumber":132,"author":{"gitId":"atyhamos"},"content":"            DuchessFileHandler.savedDuchessFile \u003d new File(FILE_LOCATION);","lastModifiedDate":"2021-09-08"},{"lineNumber":133,"author":{"gitId":"atyhamos"},"content":"            return new DuchessList();","lastModifiedDate":"2021-08-24"},{"lineNumber":134,"author":{"gitId":"atyhamos"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":135,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":136,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":137,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":138,"author":{"gitId":"atyhamos"},"content":"     * Clears saved data.","lastModifiedDate":"2021-09-02"},{"lineNumber":139,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":140,"author":{"gitId":"atyhamos"},"content":"    public static void clearData() {","lastModifiedDate":"2021-09-02"},{"lineNumber":141,"author":{"gitId":"atyhamos"},"content":"        File savedDuchess \u003d new File(FILE_LOCATION);","lastModifiedDate":"2021-08-25"},{"lineNumber":142,"author":{"gitId":"atyhamos"},"content":"        savedDuchess.delete();","lastModifiedDate":"2021-08-25"},{"lineNumber":143,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":144,"author":{"gitId":"atyhamos"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"atyhamos":144}},{"path":"src/main/java/duchess/main/DuchessList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"atyhamos"},"content":"package duchess.main;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"atyhamos"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"atyhamos"},"content":"import duchess.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"atyhamos"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"atyhamos"},"content":" * This class implements a DuchessList to be used in storing string from Duchess.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"atyhamos"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"atyhamos"},"content":" * @author Amos Tan","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"atyhamos"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"atyhamos"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"atyhamos"},"content":"public class DuchessList {","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"atyhamos"},"content":"    /** The ArrayList which stores the messages by the user.*/","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"atyhamos"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"atyhamos"},"content":"     * Constructs a DuchessList.","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"atyhamos"},"content":"    public DuchessList() {","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"atyhamos"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"atyhamos"},"content":"     * Adds a string to the back of the DuchessList.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"atyhamos"},"content":"     * @param taskToAdd The string to be added.","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"atyhamos"},"content":"    public void add(Task taskToAdd) {","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"atyhamos"},"content":"        taskList.add(taskToAdd);","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"atyhamos"},"content":"     * Prints the items in the DuchessList in order.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"atyhamos"},"content":"     * @return The string of printed items in a list.","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"atyhamos"},"content":"    public String printList() {","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"atyhamos"},"content":"        String printed \u003d \"\";","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"atyhamos"},"content":"        int size \u003d taskList.size();","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"atyhamos"},"content":"        for (int i \u003d 0; i \u003c size; i++) {","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"atyhamos"},"content":"            printed +\u003d String.format(\"%d. \" + taskList.get(i) + (i \u003d\u003d size - 1 ? \"\" : \"\\n\"), i + 1);","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"atyhamos"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"atyhamos"},"content":"        return printed.isBlank() ? \"You have nothing in your list.\" : printed;","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"atyhamos"},"content":"     * Checks if the item number is within range of the list\u0027s items.","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"atyhamos"},"content":"     * @param listNumber The item number (not ArrayList index) to be checked.","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"atyhamos"},"content":"     * @return Whether the number is within the list\u0027s range.","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"atyhamos"},"content":"    public boolean checkWithinRange(int listNumber) {","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"atyhamos"},"content":"        return 0 \u003c listNumber \u0026\u0026 listNumber \u003c\u003d taskList.size();","lastModifiedDate":"2021-09-08"},{"lineNumber":52,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"atyhamos"},"content":"     * Returns the item at the list number.","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"atyhamos"},"content":"     * @param listNumber The item number whose item is to be returned.","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"atyhamos"},"content":"     * @return The item at the list number.","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"atyhamos"},"content":"     * @throws IllegalArgumentException Only accepts integers whose values are within range of the ArrayList.","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"atyhamos"},"content":"    public Task getTask(int listNumber) throws IllegalArgumentException {","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"atyhamos"},"content":"        if (checkWithinRange(listNumber)) {","lastModifiedDate":"2021-09-02"},{"lineNumber":62,"author":{"gitId":"atyhamos"},"content":"            return taskList.get(listNumber - 1); // -1 due to difference between item list number and array indexes","lastModifiedDate":"2021-09-08"},{"lineNumber":63,"author":{"gitId":"atyhamos"},"content":"        } else {","lastModifiedDate":"2021-09-02"},{"lineNumber":64,"author":{"gitId":"atyhamos"},"content":"            throw new IllegalArgumentException(\"Task index is not within range.\"); // Not within range","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"atyhamos"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":67,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":69,"author":{"gitId":"atyhamos"},"content":"     * Gets the size of the DuchessList.","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"atyhamos"},"content":"     * @return The number of elements in the DuchessList.","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":72,"author":{"gitId":"atyhamos"},"content":"    public int getSize() {","lastModifiedDate":"2021-08-18"},{"lineNumber":73,"author":{"gitId":"atyhamos"},"content":"        return taskList.size();","lastModifiedDate":"2021-09-08"},{"lineNumber":74,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":75,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":76,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":77,"author":{"gitId":"atyhamos"},"content":"     * Deletes the task with the given number in the list.","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"atyhamos"},"content":"     * @param listNumber The number in the list of the task to be deleted.","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"atyhamos"},"content":"     * @return The deleted task.","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":81,"author":{"gitId":"atyhamos"},"content":"    public Task delete(int listNumber) {","lastModifiedDate":"2021-09-02"},{"lineNumber":82,"author":{"gitId":"atyhamos"},"content":"        assert checkWithinRange(listNumber) : \"Number should be within the list.\";","lastModifiedDate":"2021-09-08"},{"lineNumber":83,"author":{"gitId":"atyhamos"},"content":"        return taskList.remove(listNumber - 1); // -1 due to difference between item list number and indexes","lastModifiedDate":"2021-09-08"},{"lineNumber":84,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":85,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":86,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":87,"author":{"gitId":"atyhamos"},"content":"     * Checks if a task already exists in the list.","lastModifiedDate":"2021-09-08"},{"lineNumber":88,"author":{"gitId":"atyhamos"},"content":"     * @param taskToCheck The task to be checked for duplicate entries in the list.","lastModifiedDate":"2021-09-08"},{"lineNumber":89,"author":{"gitId":"atyhamos"},"content":"     * @return Whether the task already exists in the list.","lastModifiedDate":"2021-09-08"},{"lineNumber":90,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":91,"author":{"gitId":"atyhamos"},"content":"    public boolean checkForDuplicates(Task taskToCheck) {","lastModifiedDate":"2021-09-08"},{"lineNumber":92,"author":{"gitId":"atyhamos"},"content":"        for (Task t : taskList) {","lastModifiedDate":"2021-09-08"},{"lineNumber":93,"author":{"gitId":"atyhamos"},"content":"            if (t.equals(taskToCheck)) {","lastModifiedDate":"2021-09-08"},{"lineNumber":94,"author":{"gitId":"atyhamos"},"content":"                return true;","lastModifiedDate":"2021-09-08"},{"lineNumber":95,"author":{"gitId":"atyhamos"},"content":"            }","lastModifiedDate":"2021-09-08"},{"lineNumber":96,"author":{"gitId":"atyhamos"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":97,"author":{"gitId":"atyhamos"},"content":"        return false;","lastModifiedDate":"2021-09-08"},{"lineNumber":98,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":99,"author":{"gitId":"atyhamos"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"atyhamos":99}},{"path":"src/main/java/duchess/main/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"atyhamos"},"content":"package duchess.main;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"atyhamos"},"content":"import duchess.command.Command;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"atyhamos"},"content":"import duchess.command.InvalidCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"atyhamos"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"atyhamos"},"content":" * This class implements a Parser to read in user input commands.","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"atyhamos"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"atyhamos"},"content":" * @author Amos Tan","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"atyhamos"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"atyhamos"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"atyhamos"},"content":"public class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"atyhamos"},"content":"     * The commands recognised by Duchess.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"atyhamos"},"content":"    private enum CommandNames {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"atyhamos"},"content":"        BYE (\"bye\"),","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"atyhamos"},"content":"        LIST (\"list\"),","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"atyhamos"},"content":"        DONE (\"done\"),","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"atyhamos"},"content":"        TODO (\"todo\"),","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"atyhamos"},"content":"        DEADLINE (\"deadline\"),","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"atyhamos"},"content":"        EVENT (\"event\"),","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"atyhamos"},"content":"        DELETE (\"delete\"),","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"atyhamos"},"content":"        TASKS (\"tasks\"),","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"atyhamos"},"content":"        FIND (\"find\");","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"atyhamos"},"content":"        private String commandName;","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"atyhamos"},"content":"        CommandNames(String commandName) {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"atyhamos"},"content":"            this.commandName \u003d commandName;","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"atyhamos"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"atyhamos"},"content":"     * Checks if a given string is present at the front of another string.","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"atyhamos"},"content":"     * @param input The string to be checked against.","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"atyhamos"},"content":"     * @return The prefix enum present at the front of the string.","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"atyhamos"},"content":"     * @throws DuchessException  Exception thrown when the prefix is preceded by an empty string.","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"atyhamos"},"content":"    public Command checkPrefix(String input) throws DuchessException {","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"atyhamos"},"content":"        String[] parts \u003d input.split(\" \", 2);","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"atyhamos"},"content":"        String front \u003d parts[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"atyhamos"},"content":"        // Check if the prefix matches any command recognised by Duchess","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"atyhamos"},"content":"        for (CommandNames c : CommandNames.values()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"atyhamos"},"content":"            if (!front.equals(c.commandName)) {","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"atyhamos"},"content":"                // No command recognised","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"atyhamos"},"content":"                continue;","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"atyhamos"},"content":"            } else {","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"atyhamos"},"content":"                try {","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"atyhamos"},"content":"                    if (front.equals(\"bye\") || front.equals(\"list\")) {","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"atyhamos"},"content":"                        return Command.of(front); // No need second argument","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"atyhamos"},"content":"                    }","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"atyhamos"},"content":"                    String back \u003d parts[1]; // May throw ArrayIndexOutOfBoundsException","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"atyhamos"},"content":"                    if (back.isBlank()) {","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"atyhamos"},"content":"                        // Second argument is only whitespaces","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"atyhamos"},"content":"                        throw new DuchessException(\"The description of \" + front + \" cannot be empty.\");","lastModifiedDate":"2021-09-07"},{"lineNumber":56,"author":{"gitId":"atyhamos"},"content":"                    }","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"atyhamos"},"content":"                    return Command.of(front, back);","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"atyhamos"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"atyhamos"},"content":"                    throw new DuchessException(\"The description of \" + front + \" cannot be empty.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"atyhamos"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"atyhamos"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"atyhamos"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":63,"author":{"gitId":"atyhamos"},"content":"        // No command recognised at all","lastModifiedDate":"2021-09-07"},{"lineNumber":64,"author":{"gitId":"atyhamos"},"content":"        return new InvalidCommand();","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"atyhamos"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"atyhamos":66}},{"path":"src/main/java/duchess/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"atyhamos"},"content":"package duchess.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"atyhamos"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"atyhamos"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"atyhamos"},"content":"import duchess.main.DuchessException;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"atyhamos"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"atyhamos"},"content":" * This class implements a Deadline task.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"atyhamos"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"atyhamos"},"content":" * @author Amos Tan","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"atyhamos"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"atyhamos"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"atyhamos"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"atyhamos"},"content":"    /** The DateTimeFormatter used when printing the Event.*/","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"atyhamos"},"content":"    private static final DateTimeFormatter PRINT_DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\");","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"atyhamos"},"content":"    /** The date and time of the deadline task.*/","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"atyhamos"},"content":"    protected LocalDateTime dueDate;","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"atyhamos"},"content":"     * Constructs a Deadline.","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"atyhamos"},"content":"     * @param name The name of the deadline task.","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"atyhamos"},"content":"     * @param dueDate The deadline of the task.","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"atyhamos"},"content":"    public Deadline(String name, LocalDateTime dueDate) {","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"atyhamos"},"content":"        super(name);","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"atyhamos"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"atyhamos"},"content":"     * Returns a simplified representation of the Deadline for easier recovery from save file.","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"atyhamos"},"content":"     * @return The file formatted string representation of the Deadline.","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"atyhamos"},"content":"    public String toFileFormat() {","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"atyhamos"},"content":"        return String.format(\"D%s,%s,%b\", name, PRINT_DATE_FORMATTER.format(dueDate), isDone);","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"atyhamos"},"content":"     * Converts the user input string to a LocalDateTime.","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"atyhamos"},"content":"     * @param by The date as text within the file.","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"atyhamos"},"content":"     * @return The LocalDateTime representation.","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"atyhamos"},"content":"     * @throws DuchessException Exception thrown when an incorrect format is used for Deadline.","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"atyhamos"},"content":"    public static LocalDateTime convertTextToDate (String by) {","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"atyhamos"},"content":"        return LocalDateTime.parse(by, PRINT_DATE_FORMATTER);","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"atyhamos"},"content":"    public LocalDateTime getDateTimeStart() {","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"atyhamos"},"content":"        return this.dueDate;","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"atyhamos"},"content":"     * Returns a string representation of the Deadline, with an [X] marked for done and [ ] as undone.","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"atyhamos"},"content":"     * @return the string representation of the Deadline.","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"atyhamos"},"content":"    */","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"atyhamos"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"atyhamos"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"atyhamos"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + PRINT_DATE_FORMATTER.format(dueDate) + \")\";","lastModifiedDate":"2021-09-08"},{"lineNumber":61,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":62,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":63,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":64,"author":{"gitId":"atyhamos"},"content":"     * Compares the Deadline with another object.","lastModifiedDate":"2021-09-08"},{"lineNumber":65,"author":{"gitId":"atyhamos"},"content":"     * @param o The object to compare with.","lastModifiedDate":"2021-09-08"},{"lineNumber":66,"author":{"gitId":"atyhamos"},"content":"     * @return Whether the object is a Deadline with the same description and date.","lastModifiedDate":"2021-09-08"},{"lineNumber":67,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":68,"author":{"gitId":"atyhamos"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":69,"author":{"gitId":"atyhamos"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-09-08"},{"lineNumber":70,"author":{"gitId":"atyhamos"},"content":"        if (!(o instanceof Deadline)) {","lastModifiedDate":"2021-09-15"},{"lineNumber":71,"author":{"gitId":"atyhamos"},"content":"            return false;","lastModifiedDate":"2021-09-08"},{"lineNumber":72,"author":{"gitId":"atyhamos"},"content":"        } else {","lastModifiedDate":"2021-09-08"},{"lineNumber":73,"author":{"gitId":"atyhamos"},"content":"            Deadline d \u003d (Deadline) o;","lastModifiedDate":"2021-09-08"},{"lineNumber":74,"author":{"gitId":"atyhamos"},"content":"            return d.name.equals(this.name) \u0026\u0026 d.dueDate.equals(this.dueDate);","lastModifiedDate":"2021-09-08"},{"lineNumber":75,"author":{"gitId":"atyhamos"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":76,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":77,"author":{"gitId":"atyhamos"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"atyhamos":77}},{"path":"src/main/java/duchess/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"atyhamos"},"content":"package duchess.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"atyhamos"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"atyhamos"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"atyhamos"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"atyhamos"},"content":"import duchess.main.DuchessException;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"atyhamos"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"atyhamos"},"content":" * This class implements an Event task.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"atyhamos"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"atyhamos"},"content":" * @author Amos Tan","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"atyhamos"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"atyhamos"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"atyhamos"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"atyhamos"},"content":"    /** The DateTimeFormatter used when printing the Event.*/","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"atyhamos"},"content":"    private static final DateTimeFormatter PRINT_DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\");","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"atyhamos"},"content":"    /** The DateTimeFormatter when converting time from string.*/","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"atyhamos"},"content":"    private static final DateTimeFormatter DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy ha\");","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"atyhamos"},"content":"    /** The DateTimeFormatter when converting time with minutes from string.*/","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"atyhamos"},"content":"    private static final DateTimeFormatter DATE_MINUTES_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy h:mma\");","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"atyhamos"},"content":"    /** The date and time of the deadline task when it starts.*/","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"atyhamos"},"content":"    protected LocalDateTime dateTimeStart;","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"atyhamos"},"content":"    /** The date and time of the deadline task when it ends.*/","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"atyhamos"},"content":"    protected LocalDateTime dateTimeEnd;","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"atyhamos"},"content":"     * Constructs an Event.","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"atyhamos"},"content":"     * @param name The name of the event.","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"atyhamos"},"content":"     * @param dateTimeStart The time which the event starts.","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"atyhamos"},"content":"     * @param dateTimeEnd The time which the event ends.","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"atyhamos"},"content":"    public Event(String name, LocalDateTime dateTimeStart, LocalDateTime dateTimeEnd) {","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"atyhamos"},"content":"        super(name);","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"atyhamos"},"content":"        this.dateTimeStart \u003d dateTimeStart;","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"atyhamos"},"content":"        this.dateTimeEnd \u003d dateTimeEnd;","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"atyhamos"},"content":"     * Converts the user input string to a LocalDateTime.","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"atyhamos"},"content":"     * @param date The user input date as a string.","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"atyhamos"},"content":"     * @param duration The user input duration as a string.","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"atyhamos"},"content":"     * @return An array of LocalDateTime containing the start and end LocalDateTimes respectively.","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"atyhamos"},"content":"     * @throws DuchessException When an incorrect format is used for Event.","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"atyhamos"},"content":"    public static LocalDateTime[] convertStringToDates(String date, String duration) throws DuchessException {","lastModifiedDate":"2021-09-07"},{"lineNumber":53,"author":{"gitId":"atyhamos"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"atyhamos"},"content":"            String replacement \u003d duration.replace(\"am\", \"AM\").replace(\"pm\", \"PM\");","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"atyhamos"},"content":"            String[] timeParts \u003d replacement.split(\"-\");","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"atyhamos"},"content":"            String startTime \u003d timeParts[0];","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"atyhamos"},"content":"            String endTime \u003d timeParts[1];","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"atyhamos"},"content":"            LocalDateTime startEvent \u003d LocalDateTime.parse(date + \" \" + startTime,","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"atyhamos"},"content":"                    startTime.contains(\":\") ? DATE_MINUTES_FORMATTER : DATE_FORMATTER);","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"atyhamos"},"content":"            LocalDateTime endEvent \u003d LocalDateTime.parse(date + \" \" + endTime,","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"atyhamos"},"content":"                    endTime.contains(\":\") ? DATE_MINUTES_FORMATTER : DATE_FORMATTER);","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"atyhamos"},"content":"            LocalDateTime[] localDateTimes \u003d {startEvent, endEvent};","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"atyhamos"},"content":"            return localDateTimes;","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"atyhamos"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"atyhamos"},"content":"            throw new DuchessException(\"Wrong format used.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"atyhamos"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"atyhamos"},"content":"     * Returns a simplified representation of the Event for easier recovery from save file.","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"atyhamos"},"content":"     * @return The file formatted string representation of the Event.","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"atyhamos"},"content":"    public String toFileFormat() {","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"atyhamos"},"content":"        return String.format(\"E%s,%s,%s,%s\", name, dateTimeStart.format(PRINT_DATE_FORMATTER),","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"atyhamos"},"content":"                dateTimeEnd.format(PRINT_DATE_FORMATTER), isDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"atyhamos"},"content":"     * Converts the user input string to a LocalDateTime.","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"atyhamos"},"content":"     * @param by The date as text within the file.","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"atyhamos"},"content":"     * @return The LocalDateTime representation.","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"atyhamos"},"content":"     * @throws DuchessException Exception thrown when an incorrect format is used for Deadline.","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"atyhamos"},"content":"    public static LocalDateTime convertTextToDate (String by) {","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"atyhamos"},"content":"        return LocalDateTime.parse(by, PRINT_DATE_FORMATTER);","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"atyhamos"},"content":"    public LocalDateTime getDateTimeStart() {","lastModifiedDate":"2021-09-08"},{"lineNumber":89,"author":{"gitId":"atyhamos"},"content":"        return this.dateTimeStart;","lastModifiedDate":"2021-09-08"},{"lineNumber":90,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":91,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":92,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"atyhamos"},"content":"     * Returns a string representation of the Event, with an [X] marked for done and [ ] as undone.","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"atyhamos"},"content":"     * @return the string representation of the Event.","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"atyhamos"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":97,"author":{"gitId":"atyhamos"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":98,"author":{"gitId":"atyhamos"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"atyhamos"},"content":"                + \" (at: \" + dateTimeStart.format(PRINT_DATE_FORMATTER) + \" to \"","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"atyhamos"},"content":"                + dateTimeEnd.format(PRINT_DATE_FORMATTER) + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":102,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":103,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":104,"author":{"gitId":"atyhamos"},"content":"     * Compares the Event with another object.","lastModifiedDate":"2021-09-08"},{"lineNumber":105,"author":{"gitId":"atyhamos"},"content":"     * @param o The object to compare with.","lastModifiedDate":"2021-09-08"},{"lineNumber":106,"author":{"gitId":"atyhamos"},"content":"     * @return Whether the object is an Event with the same description and dates.","lastModifiedDate":"2021-09-08"},{"lineNumber":107,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":108,"author":{"gitId":"atyhamos"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":109,"author":{"gitId":"atyhamos"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-09-08"},{"lineNumber":110,"author":{"gitId":"atyhamos"},"content":"        if (!(o instanceof Event)) {","lastModifiedDate":"2021-09-15"},{"lineNumber":111,"author":{"gitId":"atyhamos"},"content":"            return false;","lastModifiedDate":"2021-09-08"},{"lineNumber":112,"author":{"gitId":"atyhamos"},"content":"        } else {","lastModifiedDate":"2021-09-08"},{"lineNumber":113,"author":{"gitId":"atyhamos"},"content":"            Event e \u003d (Event) o;","lastModifiedDate":"2021-09-08"},{"lineNumber":114,"author":{"gitId":"atyhamos"},"content":"            return e.name.equals(this.name) \u0026\u0026 e.dateTimeStart.equals(this.dateTimeStart)","lastModifiedDate":"2021-09-08"},{"lineNumber":115,"author":{"gitId":"atyhamos"},"content":"                    \u0026\u0026 e.dateTimeEnd.equals(this.dateTimeEnd);","lastModifiedDate":"2021-09-08"},{"lineNumber":116,"author":{"gitId":"atyhamos"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":117,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":118,"author":{"gitId":"atyhamos"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"atyhamos":118}},{"path":"src/main/java/duchess/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"atyhamos"},"content":"package duchess.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"atyhamos"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"atyhamos"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"atyhamos"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"atyhamos"},"content":"import duchess.main.DuchessException;","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"atyhamos"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"atyhamos"},"content":" * This class implements a Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"atyhamos"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"atyhamos"},"content":" * @author Amos Tan","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"atyhamos"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"atyhamos"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"atyhamos"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"atyhamos"},"content":"    /** The DateTimeFormatter when converting time from string.*/","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"atyhamos"},"content":"    private static final DateTimeFormatter DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy ha\");","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"atyhamos"},"content":"    /** The DateTimeFormatter when converting time with minutes from string.*/","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"atyhamos"},"content":"    private static final DateTimeFormatter DATE_MINUTES_FORMATTER \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy h:mma\");","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"atyhamos"},"content":"    /** The boolean to mark whether a task is completed.*/","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"atyhamos"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"atyhamos"},"content":"    /** The name of the task.*/","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"atyhamos"},"content":"    protected String name;","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"atyhamos"},"content":"     * Constructs a task.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"atyhamos"},"content":"     * @param name The name of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"atyhamos"},"content":"    public Task(String name) {","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"atyhamos"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"atyhamos"},"content":"        setDoneStatus(false);","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"atyhamos"},"content":"     * Setter method to set a task as done or undone.","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"atyhamos"},"content":"     * @param doneOrNot The boolean to set the task as.","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"atyhamos"},"content":"    public void setDoneStatus(boolean doneOrNot) {","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"atyhamos"},"content":"        isDone \u003d doneOrNot;","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"atyhamos"},"content":"     * Returns a simplified representation of the task for easier recovery from save file.","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"atyhamos"},"content":"     * @return The file formatted string representation of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"atyhamos"},"content":"    public abstract String toFileFormat();","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"atyhamos"},"content":"     * Checks if a task contains a certain keyword.","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"atyhamos"},"content":"     * @param keyword The keyword to check in a task.","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"atyhamos"},"content":"     * @return Whether the task contains part of or all of the keyword.","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"atyhamos"},"content":"    public boolean contains(String keyword) {","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"atyhamos"},"content":"        return name.contains(keyword);","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"atyhamos"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-09-07"},{"lineNumber":59,"author":{"gitId":"atyhamos"},"content":"        return isDone;","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"atyhamos"},"content":"    public abstract LocalDateTime getDateTimeStart();","lastModifiedDate":"2021-09-08"},{"lineNumber":63,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":65,"author":{"gitId":"atyhamos"},"content":"     * Converts the user input string to a LocalDateTime.","lastModifiedDate":"2021-09-07"},{"lineNumber":66,"author":{"gitId":"atyhamos"},"content":"     * @param by The user input date as a string.","lastModifiedDate":"2021-09-07"},{"lineNumber":67,"author":{"gitId":"atyhamos"},"content":"     * @return The LocalDateTime representation.","lastModifiedDate":"2021-09-07"},{"lineNumber":68,"author":{"gitId":"atyhamos"},"content":"     * @throws DuchessException When an incorrect format is used for Deadline.","lastModifiedDate":"2021-09-07"},{"lineNumber":69,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":70,"author":{"gitId":"atyhamos"},"content":"    public static LocalDateTime convertStringToDate (String by) throws DuchessException {","lastModifiedDate":"2021-09-07"},{"lineNumber":71,"author":{"gitId":"atyhamos"},"content":"        try {","lastModifiedDate":"2021-09-07"},{"lineNumber":72,"author":{"gitId":"atyhamos"},"content":"            String replacement \u003d by.replace(\"am\", \"AM\").replace(\"pm\", \"PM\");","lastModifiedDate":"2021-09-07"},{"lineNumber":73,"author":{"gitId":"atyhamos"},"content":"            return LocalDateTime.parse(replacement,","lastModifiedDate":"2021-09-07"},{"lineNumber":74,"author":{"gitId":"atyhamos"},"content":"                    replacement.contains(\":\") ? DATE_MINUTES_FORMATTER : DATE_FORMATTER);","lastModifiedDate":"2021-09-07"},{"lineNumber":75,"author":{"gitId":"atyhamos"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":76,"author":{"gitId":"atyhamos"},"content":"            throw new DuchessException(\"Wrong format used.\");","lastModifiedDate":"2021-09-07"},{"lineNumber":77,"author":{"gitId":"atyhamos"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":78,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":79,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":80,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"atyhamos"},"content":"     * Returns a string representation of the task, with an [X] marked for done and [ ] as undone.","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"atyhamos"},"content":"     * @return the string representation of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":84,"author":{"gitId":"atyhamos"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":85,"author":{"gitId":"atyhamos"},"content":"    public String toString() {","lastModifiedDate":"2021-09-02"},{"lineNumber":86,"author":{"gitId":"atyhamos"},"content":"        return String.format(\"[\" + (isDone ? \"X\" : \" \") + \"] \" + name);","lastModifiedDate":"2021-08-18"},{"lineNumber":87,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":88,"author":{"gitId":"atyhamos"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"atyhamos":88}},{"path":"src/main/java/duchess/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"atyhamos"},"content":"package duchess.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"atyhamos"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"atyhamos"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"atyhamos"},"content":" * This class implements a ToDo task.","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"atyhamos"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"atyhamos"},"content":" * @author Amos Tan","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"atyhamos"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"atyhamos"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"atyhamos"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"atyhamos"},"content":"     * Constructs a ToDo.","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"atyhamos"},"content":"     * @param name the name of the todo task","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"atyhamos"},"content":"    public ToDo(String name) {","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"atyhamos"},"content":"        super(name);","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"atyhamos"},"content":"     * Returns a simplified representation of the ToDo for easier recovery from save file.","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"atyhamos"},"content":"     * @return The file formatted string representation of the ToDo.","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"atyhamos"},"content":"    public String toFileFormat() {","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"atyhamos"},"content":"        return String.format(\"T%s,%b\", name, isDone);","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"atyhamos"},"content":"     * Returns a string representation of the ToDo, with an [X] marked for done and [ ] as undone.","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"atyhamos"},"content":"     * @return the string representation of the ToDo.","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"atyhamos"},"content":"    public LocalDateTime getDateTimeStart() {","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"atyhamos"},"content":"        return LocalDateTime.MAX;","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"atyhamos"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"atyhamos"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"atyhamos"},"content":"        return String.format(\"[T]\" + super.toString());","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"atyhamos"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"atyhamos"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"atyhamos"},"content":"        if (!(o instanceof ToDo)) {","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"atyhamos"},"content":"            return false;","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"atyhamos"},"content":"        } else {","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"atyhamos"},"content":"            ToDo t \u003d (ToDo) o;","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"atyhamos"},"content":"            return t.name.equals(name);","lastModifiedDate":"2021-09-15"},{"lineNumber":50,"author":{"gitId":"atyhamos"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":51,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":52,"author":{"gitId":"atyhamos"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"atyhamos":52}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"atyhamos"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"atyhamos"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"atyhamos"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"atyhamos"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"atyhamos"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"atyhamos"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"atyhamos"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/null\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"atyhamos"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"atyhamos"},"content":"    \u003cLabel fx:id\u003d\"dialog\" ellipsisString\u003d\"more...\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" text\u003d\"Text\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"atyhamos"},"content":"         \u003cfont\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"atyhamos"},"content":"            \u003cFont name\u003d\"SansSerif Regular\" size\u003d\"14.0\" /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"atyhamos"},"content":"         \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"atyhamos"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"atyhamos"},"content":"  \u003c/children\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"atyhamos"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"atyhamos"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"atyhamos"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"atyhamos"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"atyhamos":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"atyhamos"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"atyhamos"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"atyhamos"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"atyhamos"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"atyhamos"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"atyhamos"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"atyhamos"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"atyhamos"},"content":"\u003cAnchorPane maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/null\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duchess.gui.MainWindow\"\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"atyhamos"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"atyhamos"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" maxHeight\u003d\"41.0\" maxWidth\u003d\"1.7976931348623157E308\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"320.0\" promptText\u003d\"Enter command here\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"80.0\"\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"atyhamos"},"content":"         \u003cfont\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"atyhamos"},"content":"            \u003cFont name\u003d\"Calibri\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"atyhamos"},"content":"         \u003c/font\u003e\u003c/TextField\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"atyhamos"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"atyhamos"},"content":"         \u003cfont\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"atyhamos"},"content":"            \u003cFont name\u003d\"Calibri Bold\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"atyhamos"},"content":"         \u003c/font\u003e\u003c/Button\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"atyhamos"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" pickOnBounds\u003d\"false\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"atyhamos"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"atyhamos"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"atyhamos"},"content":"      \u003c/content\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"atyhamos"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"atyhamos"},"content":"  \u003c/children\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"atyhamos"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"atyhamos":26}},{"path":"src/test/java/duchess/command/ByeCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"atyhamos"},"content":"package duchess.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"atyhamos"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"atyhamos"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"atyhamos"},"content":"import duchess.main.Duchess;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"atyhamos"},"content":"import duchess.main.DuchessFileHandler;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"atyhamos"},"content":"/**","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"atyhamos"},"content":" * This class implements a JUnit Test for the Bye Command.","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"atyhamos"},"content":" *","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"atyhamos"},"content":" * @author Amos Tan","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"atyhamos"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"atyhamos"},"content":" */","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"atyhamos"},"content":"public class ByeCommandTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"atyhamos"},"content":"     * Tests the logic of the ByeCommand.","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"atyhamos"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"atyhamos"},"content":"    public void testHandleLogic() {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"atyhamos"},"content":"        DuchessFileHandler.clearData();","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"atyhamos"},"content":"        Duchess d \u003d new Duchess();","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"atyhamos"},"content":"        assertEquals(new ByeCommand().handleLogic(d.getDuchessList()), \"I bid thee farewell.\");","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"atyhamos"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"atyhamos":26}},{"path":"src/test/java/duchess/command/DeadlineCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"atyhamos"},"content":"package duchess.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"atyhamos"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"atyhamos"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"atyhamos"},"content":"import duchess.main.Duchess;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"atyhamos"},"content":"import duchess.main.DuchessFileHandler;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"atyhamos"},"content":"/**","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"atyhamos"},"content":" * This class implements a JUnit Test for the Deadline Command.","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"atyhamos"},"content":" *","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"atyhamos"},"content":" * @author Amos Tan","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"atyhamos"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"atyhamos"},"content":" */","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"atyhamos"},"content":"public class DeadlineCommandTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"atyhamos"},"content":"     * Tests the logic of the DeadlineCommand.","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"atyhamos"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"atyhamos"},"content":"    public void testHandleLogic() {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"atyhamos"},"content":"        DuchessFileHandler.clearData();","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"atyhamos"},"content":"        Duchess d \u003d new Duchess();","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"atyhamos"},"content":"        String expectedResponse1 \u003d \"Understood. I\u0027ve added this task:\\n    \"","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"atyhamos"},"content":"                + \"[D][ ] assignment (by: Aug 25 2021 16:00)\"","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"atyhamos"},"content":"                + \"\\nYou now have 1 task in the list.\";","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"atyhamos"},"content":"        String expectedResponse2 \u003d \"Understood. I\u0027ve added this task:\\n    \"","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"atyhamos"},"content":"                + \"[D][ ] assignment (by: Dec 25 2021 12:00)\"","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"atyhamos"},"content":"                + \"\\nYou now have 2 tasks in the list.\";","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"atyhamos"},"content":"        assertEquals(new DeadlineCommand(\"assignment /by 25/8/2021 4pm\").handleLogic(d.getDuchessList()),","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"atyhamos"},"content":"                expectedResponse1);","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"atyhamos"},"content":"        assertEquals(new DeadlineCommand(\"assignment /by 25/12/2021 12pm\").handleLogic(d.getDuchessList()),","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"atyhamos"},"content":"                expectedResponse2);","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"atyhamos"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"atyhamos":36}},{"path":"src/test/java/duchess/command/DeleteCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"atyhamos"},"content":"package duchess.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"atyhamos"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"atyhamos"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"atyhamos"},"content":"import duchess.main.Duchess;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"atyhamos"},"content":"import duchess.main.DuchessFileHandler;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"atyhamos"},"content":"import duchess.task.ToDo;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"atyhamos"},"content":"/**","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"atyhamos"},"content":" * This class implements a JUnit Test for the Delete Command.","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"atyhamos"},"content":" *","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"atyhamos"},"content":" * @author Amos Tan","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"atyhamos"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"atyhamos"},"content":" */","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"atyhamos"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"atyhamos"},"content":"     * Tests the logic of the DeleteCommand.","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"atyhamos"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"atyhamos"},"content":"    public void testHandleLogic() {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"atyhamos"},"content":"        DuchessFileHandler.clearData();","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"atyhamos"},"content":"        Duchess d \u003d new Duchess();","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"atyhamos"},"content":"        ToDo t \u003d new ToDo(\"foo\");","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"atyhamos"},"content":"        d.getDuchessList().add(t);","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"atyhamos"},"content":"        String expectedResponse1 \u003d \"Alright. I\u0027ve removed this task:   \\n  \" + t","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"atyhamos"},"content":"                + \"\\nNow you have 0 tasks in the list.\";","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"atyhamos"},"content":"        String expectedResponse2 \u003d \"Apologies, that task does not exist and cannot be deleted.\";","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"atyhamos"},"content":"        assertEquals(new DeleteCommand(\"1\").handleLogic(d.getDuchessList()), expectedResponse1);","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"atyhamos"},"content":"        assertEquals(new DeleteCommand(\"1\").handleLogic(d.getDuchessList()), expectedResponse2);","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"atyhamos"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"atyhamos":34}},{"path":"src/test/java/duchess/command/DoneCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"atyhamos"},"content":"package duchess.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"atyhamos"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"atyhamos"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"atyhamos"},"content":"import duchess.main.Duchess;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"atyhamos"},"content":"import duchess.main.DuchessFileHandler;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"atyhamos"},"content":"import duchess.task.ToDo;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"atyhamos"},"content":"/**","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"atyhamos"},"content":" * This class implements a JUnit Test for the Done Command.","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"atyhamos"},"content":" *","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"atyhamos"},"content":" * @author Amos Tan","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"atyhamos"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"atyhamos"},"content":" */","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"atyhamos"},"content":"public class DoneCommandTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"atyhamos"},"content":"     * Tests the logic of the DoneCommand.","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"atyhamos"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"atyhamos"},"content":"    public void testHandleLogic() {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"atyhamos"},"content":"        DuchessFileHandler.clearData();","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"atyhamos"},"content":"        Duchess d \u003d new Duchess();","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"atyhamos"},"content":"        ToDo t \u003d new ToDo(\"foo\");","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"atyhamos"},"content":"        d.getDuchessList().add(t);","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"atyhamos"},"content":"        String expectedResponse1 \u003d \"Apologies, that task does not exist and cannot be marked as done.\";","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"atyhamos"},"content":"        String expectedResponse2 \u003d \"Oops... This task is already done.\";","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"atyhamos"},"content":"        assertEquals(new DoneCommand(\"1\").handleLogic(d.getDuchessList()),","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"atyhamos"},"content":"                \"Brilliant! I\u0027ve marked this task as done:   \\n  \" + t);","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"atyhamos"},"content":"        assertEquals(new DoneCommand(\"5\").handleLogic(d.getDuchessList()), expectedResponse1);","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"atyhamos"},"content":"        assertEquals(new DoneCommand(\"1\").handleLogic(d.getDuchessList()), expectedResponse2);","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"atyhamos"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"atyhamos":35}},{"path":"src/test/java/duchess/command/EventCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"atyhamos"},"content":"package duchess.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"atyhamos"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"atyhamos"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"atyhamos"},"content":"import duchess.main.Duchess;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"atyhamos"},"content":"import duchess.main.DuchessFileHandler;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"atyhamos"},"content":"/**","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"atyhamos"},"content":" * This class implements a JUnit Test for the Event Command.","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"atyhamos"},"content":" *","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"atyhamos"},"content":" * @author Amos Tan","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"atyhamos"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"atyhamos"},"content":" */","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"atyhamos"},"content":"public class EventCommandTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"atyhamos"},"content":"     * Tests the logic of the EventCommand.","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"atyhamos"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"atyhamos"},"content":"    public void testHandleLogic() {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"atyhamos"},"content":"        DuchessFileHandler.clearData();","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"atyhamos"},"content":"        Duchess d \u003d new Duchess();","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"atyhamos"},"content":"        String expectedResponse1 \u003d \"Understood. I\u0027ve added this task:\\n    \"","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"atyhamos"},"content":"                + \"[E][ ] exam (at: Dec 25 2021 12:00 to Dec 25 2021 16:00)\"","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"atyhamos"},"content":"                + \"\\nYou now have 1 task in the list.\";","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"atyhamos"},"content":"        String expectedResponse2 \u003d \"Understood. I\u0027ve added this task:\\n    \"","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"atyhamos"},"content":"                + \"[E][ ] exam (at: Jan 1 2022 08:00 to Jan 1 2022 16:00)\"","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"atyhamos"},"content":"                + \"\\nYou now have 2 tasks in the list.\";","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"atyhamos"},"content":"        assertEquals(new EventCommand(\"exam /at 25/12/2021 12pm-4pm\").handleLogic(d.getDuchessList()),","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"atyhamos"},"content":"                expectedResponse1);","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"atyhamos"},"content":"        assertEquals(new EventCommand(\"exam /at 1/01/2022 8am-4pm\").handleLogic(d.getDuchessList()), expectedResponse2);","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"atyhamos"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"atyhamos":35}},{"path":"src/test/java/duchess/command/FindCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"atyhamos"},"content":"package duchess.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"atyhamos"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"atyhamos"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"atyhamos"},"content":"import duchess.main.Duchess;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"atyhamos"},"content":"import duchess.main.DuchessFileHandler;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"atyhamos"},"content":"import duchess.task.ToDo;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"atyhamos"},"content":"/**","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"atyhamos"},"content":" * This class implements a JUnit Test for the Find Command.","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"atyhamos"},"content":" *","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"atyhamos"},"content":" * @author Amos Tan","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"atyhamos"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"atyhamos"},"content":" */","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"atyhamos"},"content":"public class FindCommandTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"atyhamos"},"content":"     * Tests the logic of the FindCommand.","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"atyhamos"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"atyhamos"},"content":"    public void testHandleLogic() {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"atyhamos"},"content":"        DuchessFileHandler.clearData();","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"atyhamos"},"content":"        Duchess d \u003d new Duchess();","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"atyhamos"},"content":"        ToDo t \u003d new ToDo(\"assignment\");","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"atyhamos"},"content":"        d.getDuchessList().add(t);","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"atyhamos"},"content":"        assertEquals(new FindCommand(\"assignment\").handleLogic(d.getDuchessList()), \"1. \" + t + \"\\n\");","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"atyhamos"},"content":"        assertEquals(new FindCommand(\"hahaha\").handleLogic(d.getDuchessList()),","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"atyhamos"},"content":"                \"There are no tasks with that keyword.\");","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"atyhamos"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"atyhamos":31}},{"path":"src/test/java/duchess/command/ListCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"atyhamos"},"content":"package duchess.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"atyhamos"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"atyhamos"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"atyhamos"},"content":"import duchess.main.Duchess;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"atyhamos"},"content":"import duchess.main.DuchessFileHandler;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"atyhamos"},"content":"/**","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"atyhamos"},"content":" * This class implements a JUnit Test for the List Command.","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"atyhamos"},"content":" *","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"atyhamos"},"content":" * @author Amos Tan","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"atyhamos"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"atyhamos"},"content":" */","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"atyhamos"},"content":"public class ListCommandTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"atyhamos"},"content":"     * Tests the logic of the ListCommand.","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"atyhamos"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"atyhamos"},"content":"    public void testHandleLogic() {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"atyhamos"},"content":"        DuchessFileHandler.clearData();","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"atyhamos"},"content":"        Duchess d \u003d new Duchess();","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"atyhamos"},"content":"        assertEquals(new ListCommand().handleLogic(d.getDuchessList()), d.getDuchessList().printList());","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"atyhamos"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"atyhamos":26}},{"path":"src/test/java/duchess/command/TasksCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"atyhamos"},"content":"package duchess.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"atyhamos"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"atyhamos"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"atyhamos"},"content":"import duchess.main.Duchess;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"atyhamos"},"content":"import duchess.main.DuchessFileHandler;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"atyhamos"},"content":"import duchess.task.ToDo;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"atyhamos"},"content":"/**","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"atyhamos"},"content":" * This class implements a JUnit Test for the Tasks Command.","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"atyhamos"},"content":" *","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"atyhamos"},"content":" * @author Amos Tan","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"atyhamos"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"atyhamos"},"content":" */","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"atyhamos"},"content":"public class TasksCommandTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"atyhamos"},"content":"     * Tests the logic of the TasksCommand.","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"atyhamos"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"atyhamos"},"content":"    public void testHandleLogic() {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"atyhamos"},"content":"        DuchessFileHandler.clearData();","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"atyhamos"},"content":"        Duchess d \u003d new Duchess();","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"atyhamos"},"content":"        String expectedResponse1 \u003d \"You have no tasks before 25/8/2021 12pm\";","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"atyhamos"},"content":"        ToDo t \u003d new ToDo(\"foo\");","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"atyhamos"},"content":"        d.getDuchessList().add(t);","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"atyhamos"},"content":"        String expectedResponse2 \u003d t + \"\\n\";","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"atyhamos"},"content":"        assertEquals(new TasksCommand(\"/before 25/8/2021 12pm\").handleLogic(d.getDuchessList()),","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"atyhamos"},"content":"                expectedResponse1);","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"atyhamos"},"content":"        assertEquals(new TasksCommand(\"/after 25/8/2021 12pm\").handleLogic(d.getDuchessList()),","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"atyhamos"},"content":"                expectedResponse2);","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"atyhamos"},"content":"        assertEquals(new TasksCommand(\"/after today\").handleLogic(d.getDuchessList()), expectedResponse2);","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"atyhamos"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"atyhamos":35}},{"path":"src/test/java/duchess/command/TodoCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"atyhamos"},"content":"package duchess.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"atyhamos"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"atyhamos"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"atyhamos"},"content":"import duchess.main.Duchess;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"atyhamos"},"content":"import duchess.main.DuchessFileHandler;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"atyhamos"},"content":"import duchess.task.ToDo;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"atyhamos"},"content":"/**","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"atyhamos"},"content":" * This class implements a JUnit Test for the Todo Command.","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"atyhamos"},"content":" *","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"atyhamos"},"content":" * @author Amos Tan","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"atyhamos"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"atyhamos"},"content":" */","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"atyhamos"},"content":"public class TodoCommandTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"atyhamos"},"content":"     * Tests the logic of the TodoCommand.","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"atyhamos"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"atyhamos"},"content":"    public void testHandleLogic() {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"atyhamos"},"content":"        DuchessFileHandler.clearData();","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"atyhamos"},"content":"        Duchess d \u003d new Duchess();","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"atyhamos"},"content":"        ToDo t \u003d new ToDo(\"homework\");","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"atyhamos"},"content":"        String expectedResponse \u003d \"Understood. I\u0027ve added this task:\\n    \" + t","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"atyhamos"},"content":"                + \"\\nYou now have 1 task in the list.\";","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"atyhamos"},"content":"        assertEquals(new TodoCommand(\"homework\").handleLogic(d.getDuchessList()), expectedResponse);","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"atyhamos"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"atyhamos":30}},{"path":"src/test/java/duchess/main/DuchessListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"atyhamos"},"content":"package duchess.main;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"atyhamos"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"atyhamos"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"atyhamos"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"atyhamos"},"content":"import duchess.task.Deadline;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"atyhamos"},"content":"import duchess.task.Event;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"atyhamos"},"content":"import duchess.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"atyhamos"},"content":"import duchess.task.ToDo;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"atyhamos"},"content":"/**","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"atyhamos"},"content":" * This class implements a JUnit Test for the DuchessList methods.","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"atyhamos"},"content":" *","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"atyhamos"},"content":" * @author Amos Tan","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"atyhamos"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"atyhamos"},"content":" */","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"atyhamos"},"content":"public class DuchessListTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"atyhamos"},"content":"     * Tests the add() and getTask() methods.","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"atyhamos"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"atyhamos"},"content":"    public void testAddAndGetTask() {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"atyhamos"},"content":"        DuchessList d \u003d new DuchessList();","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"atyhamos"},"content":"        Task t \u003d new ToDo(\"homework\");","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"atyhamos"},"content":"        d.add(t);","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"atyhamos"},"content":"        assertEquals(t, d.getTask(1));","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"atyhamos"},"content":"     * Tests the printList() method.","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"atyhamos"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"atyhamos"},"content":"    public void testPrintList() {","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"atyhamos"},"content":"        DuchessList dl \u003d new DuchessList();","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"atyhamos"},"content":"        dl.add(new ToDo(\"homework\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"atyhamos"},"content":"        dl.add(new Deadline(\"assignment\", LocalDateTime.MAX));","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"atyhamos"},"content":"        dl.add(new Event(\"meeting\", LocalDateTime.MIN, LocalDateTime.MAX));","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"atyhamos"},"content":"        assertEquals(dl.printList(),","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"atyhamos"},"content":"                \"1. [T][ ] homework\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"atyhamos"},"content":"                        + \"2. [D][ ] assignment (by: Dec 31 +999999999 23:59)\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"atyhamos"},"content":"                        + \"3. [E][ ] meeting (at: Jan 1 +1000000000 00:00 to Dec 31 +999999999 23:59)\");","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"atyhamos"},"content":"     * Tests the checkWithinRange() method.","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"atyhamos"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"atyhamos"},"content":"    public void testCheckWithinRange() {","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"atyhamos"},"content":"        DuchessList dl \u003d new DuchessList();","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"atyhamos"},"content":"        dl.add(new ToDo(\"foo\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"atyhamos"},"content":"        dl.add(new ToDo(\"bar\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"atyhamos"},"content":"        assertEquals(dl.checkWithinRange(0), false);","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"atyhamos"},"content":"        assertEquals(dl.checkWithinRange(1), true);","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"atyhamos"},"content":"        assertEquals(dl.checkWithinRange(2), true);","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"atyhamos"},"content":"        assertEquals(dl.checkWithinRange(3), false);","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":64,"author":{"gitId":"atyhamos"},"content":"     * Tests the delete() method.","lastModifiedDate":"2021-09-07"},{"lineNumber":65,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":66,"author":{"gitId":"atyhamos"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"atyhamos"},"content":"    public void testDelete() {","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"atyhamos"},"content":"        DuchessList dl \u003d new DuchessList();","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"atyhamos"},"content":"        Task t \u003d new ToDo(\"foo\");","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"atyhamos"},"content":"        dl.add(t);","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"atyhamos"},"content":"        assertEquals(dl.delete(1), t);","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"atyhamos"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"atyhamos":73}},{"path":"src/test/java/duchess/main/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"atyhamos"},"content":"package duchess.main;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"atyhamos"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"atyhamos"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"atyhamos"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"atyhamos"},"content":"/**","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"atyhamos"},"content":" * This class implements a JUnit Test for the Parser methods.","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"atyhamos"},"content":" *","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"atyhamos"},"content":" * @author Amos Tan","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"atyhamos"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"atyhamos"},"content":" */","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"atyhamos"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"atyhamos"},"content":"     * Tests the checkPrefix() method using valid input.","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"atyhamos"},"content":"     * @throws DuchessException Exception thrown when the prefix is preceded by an empty string.","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"atyhamos"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"atyhamos"},"content":"    public void checkPrefix_validInput_success() throws DuchessException {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"atyhamos"},"content":"        Parser p \u003d new Parser();","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"atyhamos"},"content":"        assertEquals(p.checkPrefix(\"bye\").getDescription(), null);","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"atyhamos"},"content":"        assertEquals(p.checkPrefix(\"list\").getDescription(), null);","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"atyhamos"},"content":"        assertEquals(p.checkPrefix(\"adsad\").getDescription(), null);","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"atyhamos"},"content":"        assertEquals(p.checkPrefix(\"todo homework\").getDescription(), \"homework\");","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"atyhamos"},"content":"        assertEquals(p.checkPrefix(\"deadline assignment /by 25/12/2021 3pm\").getDescription(),","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"atyhamos"},"content":"                \"assignment /by 25/12/2021 3pm\");","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"atyhamos"},"content":"        assertEquals(p.checkPrefix(\"event lesson /at 1/1/2022 1pm-4pm\").getDescription(),","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"atyhamos"},"content":"                \"lesson /at 1/1/2022 1pm-4pm\");","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"atyhamos"},"content":"        assertEquals(p.checkPrefix(\"delete 1\").getDescription(), \"1\");","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"atyhamos"},"content":"        assertEquals(p.checkPrefix(\"done 1\").getDescription(), \"1\");","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"atyhamos"},"content":"        assertEquals(p.checkPrefix(\"tasks /after today\").getDescription(), \"/after today\");","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"atyhamos"},"content":"        assertEquals(p.checkPrefix(\"tasks /before today\").getDescription(), \"/before today\");","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"atyhamos"},"content":"     * Tests the checkPrefix() method using invalid input.","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"atyhamos"},"content":"     * @throws DuchessException Exception thrown when the prefix is preceded by an empty string.","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"atyhamos"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"atyhamos"},"content":"    public void checkPrefix_singleInvalidInput_exceptionThrown() {","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"atyhamos"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"atyhamos"},"content":"            Parser p \u003d new Parser();","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"atyhamos"},"content":"            assertEquals(p.checkPrefix(\"done\").getDescription(), null);","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"atyhamos"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"atyhamos"},"content":"        } catch (DuchessException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"atyhamos"},"content":"            assertEquals(\"The description of done cannot be empty.\", e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"atyhamos"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"atyhamos"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"atyhamos":50}},{"path":"src/test/java/duchess/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"atyhamos"},"content":"package duchess.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"atyhamos"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"atyhamos"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"atyhamos"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"atyhamos"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"atyhamos"},"content":"import duchess.main.DuchessException;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"atyhamos"},"content":"/**","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"atyhamos"},"content":" * This class implements a JUnit Test for the Deadline class\u0027 methods.","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"atyhamos"},"content":" *","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"atyhamos"},"content":" * @author Amos Tan","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"atyhamos"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"atyhamos"},"content":" */","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"atyhamos"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"atyhamos"},"content":"     * Tests the toFileFormat() method.","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"atyhamos"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"atyhamos"},"content":"    public void testToFileFormat() {","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"atyhamos"},"content":"        Deadline d \u003d new Deadline(\"homework\",","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"atyhamos"},"content":"                LocalDateTime.of(2021, 12, 25, 12, 00));","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"atyhamos"},"content":"        assertEquals(d.toFileFormat(), \"Dhomework,Dec 25 2021 12:00,false\");","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"atyhamos"},"content":"        d.setDoneStatus(true);","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"atyhamos"},"content":"        assertEquals(d.toFileFormat(), \"Dhomework,Dec 25 2021 12:00,true\");","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"atyhamos"},"content":"     * Tests the convertStringToDate() method with valid input.","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"atyhamos"},"content":"     * @throws DuchessException When an incorrect format is used for Deadline.","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"atyhamos"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"atyhamos"},"content":"    public void testConvertStringToDate_validDate_success() throws DuchessException {","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"atyhamos"},"content":"        assertEquals(Deadline.convertStringToDate(\"25/12/2021 12pm\"),","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"atyhamos"},"content":"                LocalDateTime.of(2021, 12, 25, 12, 00));","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"atyhamos"},"content":"     * Tests the convertStringToDate() method with invalid input.","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"atyhamos"},"content":"     * @throws DuchessException When an incorrect format is used for Deadline.","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"atyhamos"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"atyhamos"},"content":"    public void testConvertStringToDate_invalidDate_exceptionThrown() {","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"atyhamos"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"atyhamos"},"content":"            assertEquals(Deadline.convertStringToDate(\"25/13/2021 12pm\"),","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"atyhamos"},"content":"                    LocalDateTime.of(2021, 13, 25, 12, 00));","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"atyhamos"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"atyhamos"},"content":"        } catch (DuchessException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"atyhamos"},"content":"            assertEquals(\"Wrong format used.\", e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"atyhamos"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":57,"author":{"gitId":"atyhamos"},"content":"     * Tests the convertTextToDate() method.","lastModifiedDate":"2021-09-07"},{"lineNumber":58,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":59,"author":{"gitId":"atyhamos"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"atyhamos"},"content":"    public void testConvertTextToDate() {","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"atyhamos"},"content":"        assertEquals(Deadline.convertTextToDate(\"Dec 25 2021 12:00\"),","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"atyhamos"},"content":"                LocalDateTime.of(2021, 12, 25, 12, 00));","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"atyhamos"},"content":"        assertEquals(Deadline.convertTextToDate(\"Jan 4 2022 13:26\"),","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"atyhamos"},"content":"                LocalDateTime.of(2022, 1, 4, 13, 26));","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"atyhamos"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"atyhamos":66}},{"path":"src/test/java/duchess/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"atyhamos"},"content":"package duchess.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"atyhamos"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"atyhamos"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"atyhamos"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"atyhamos"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"atyhamos"},"content":"import duchess.main.DuchessException;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"atyhamos"},"content":"/**","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"atyhamos"},"content":" * This class implements a JUnit Test for the Event class\u0027 methods.","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"atyhamos"},"content":" *","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"atyhamos"},"content":" * @author Amos Tan","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"atyhamos"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"atyhamos"},"content":" */","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"atyhamos"},"content":"public class EventTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"atyhamos"},"content":"     * Tests the toFileFormat() method.","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"atyhamos"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"atyhamos"},"content":"    public void testToFileFormat() {","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"atyhamos"},"content":"        Event e \u003d new Event(\"homework\",","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"atyhamos"},"content":"                LocalDateTime.of(2021, 12, 25, 12, 00),","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"atyhamos"},"content":"                LocalDateTime.of(2021, 12, 25, 16, 00));","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"atyhamos"},"content":"        assertEquals(e.toFileFormat(), \"Ehomework,Dec 25 2021 12:00,Dec 25 2021 16:00,false\");","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"atyhamos"},"content":"        e.setDoneStatus(true);","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"atyhamos"},"content":"        assertEquals(e.toFileFormat(), \"Ehomework,Dec 25 2021 12:00,Dec 25 2021 16:00,true\");","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"atyhamos"},"content":"     * Tests the convertStringToDate() method with valid input.","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"atyhamos"},"content":"     * @throws DuchessException When an incorrect format is used for Deadline.","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"atyhamos"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"atyhamos"},"content":"    public void testConvertStringToDate_validDate_success() throws DuchessException {","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"atyhamos"},"content":"        LocalDateTime[] eventConvertedDates \u003d Event.convertStringToDates(\"25/12/2021\", \"12pm-4pm\");","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"atyhamos"},"content":"        LocalDateTime[] dates \u003d { LocalDateTime.of(2021, 12, 25, 12, 00),","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"atyhamos"},"content":"                LocalDateTime.of(2021, 12, 25, 16, 00)};","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"atyhamos"},"content":"        assertEquals(dates[0], eventConvertedDates[0]);","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"atyhamos"},"content":"        assertEquals(dates[1], eventConvertedDates[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"atyhamos"},"content":"     * Tests the convertStringToDate() method with invalid input.","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"atyhamos"},"content":"     * @throws DuchessException When an incorrect format is used for Deadline.","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"atyhamos"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"atyhamos"},"content":"    public void testConvertStringToDate_invalidDate_exceptionThrown() {","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"atyhamos"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"atyhamos"},"content":"            LocalDateTime[] eventConvertedDates \u003d Event.convertStringToDates(\"25/13/2021\", \"12pm-4pm\");","lastModifiedDate":"2021-09-07"},{"lineNumber":53,"author":{"gitId":"atyhamos"},"content":"            LocalDateTime[] dates \u003d { LocalDateTime.of(2021, 13, 25, 12, 00),","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"atyhamos"},"content":"                    LocalDateTime.of(2021, 13, 25, 16, 00)};","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"atyhamos"},"content":"            assertEquals(dates[0], eventConvertedDates[0]);","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"atyhamos"},"content":"            assertEquals(dates[1], eventConvertedDates[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"atyhamos"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"atyhamos"},"content":"        } catch (DuchessException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"atyhamos"},"content":"            assertEquals(\"Wrong format used.\", e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"atyhamos"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":64,"author":{"gitId":"atyhamos"},"content":"     * Tests the convertTextToDate() method.","lastModifiedDate":"2021-09-07"},{"lineNumber":65,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":66,"author":{"gitId":"atyhamos"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"atyhamos"},"content":"    public void testConvertTextToDate() {","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"atyhamos"},"content":"        assertEquals(Event.convertTextToDate(\"Dec 25 2021 12:00\"),","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"atyhamos"},"content":"                LocalDateTime.of(2021, 12, 25, 12, 00));","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"atyhamos"},"content":"        assertEquals(Event.convertTextToDate(\"Jan 4 2022 13:26\"),","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"atyhamos"},"content":"                LocalDateTime.of(2022, 1, 4, 13, 26));","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"atyhamos"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"atyhamos":73}},{"path":"src/test/java/duchess/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"atyhamos"},"content":"package duchess.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"atyhamos"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"atyhamos"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"atyhamos"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"atyhamos"},"content":"/**","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"atyhamos"},"content":" * This class implements a JUnit Test for the Deadline class\u0027 methods.","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"atyhamos"},"content":" *","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"atyhamos"},"content":" * @author Amos Tan","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"atyhamos"},"content":" * @version CS2103T AY21/22 Semester 1","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"atyhamos"},"content":" */","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"atyhamos"},"content":"public class ToDoTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"atyhamos"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"atyhamos"},"content":"     * Tests the toFileFormat() method.","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"atyhamos"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"atyhamos"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"atyhamos"},"content":"    public void testToFileFormat() {","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"atyhamos"},"content":"        ToDo t \u003d new ToDo(\"test\");","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"atyhamos"},"content":"        assertEquals(t.toFileFormat(), \"Ttest,false\");","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"atyhamos"},"content":"        t.setDoneStatus(true);","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"atyhamos"},"content":"        assertEquals(t.toFileFormat(), \"Ttest,true\");","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"atyhamos"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"atyhamos"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"atyhamos":24}}]
