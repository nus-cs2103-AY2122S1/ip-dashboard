[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"jiarong15"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"jiarong15"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"jiarong15"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"jiarong15"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"jiarong15"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"jiarong15"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"jiarong15"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"jiarong15"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"jiarong15"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"jiarong15"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"jiarong15"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"jiarong15"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"jiarong15"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"jiarong15"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-09-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jiarong15":15,"-":45}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jiarong15"},"content":"T | 1 | read book","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"jiarong15"},"content":"T | 1 | sleep in","lastModifiedDate":"2021-09-13"},{"lineNumber":3,"author":{"gitId":"jiarong15"},"content":"E | 1 | me in 12-12-2012 18:29","lastModifiedDate":"2021-09-13"}],"authorContributionMap":{"jiarong15":3}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"jiarong15"},"content":"# My Duke Bot - DukeJR :smile:","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":3,"author":{"gitId":"jiarong15"},"content":"### DukeJR accelerates your workflow by tracking your daily tasks.","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"jiarong15"},"content":"\u003e No other apps better than this - Elon Musk.","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"jiarong15"},"content":"#### User Guide :sunglasses: :sunglasses: :","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"jiarong15"},"content":"1. List Command (list) ","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"jiarong15"},"content":"   * Displays all the tasks you have previously stored with completion status denoted by [X] or [].","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"jiarong15"},"content":"2. To Do Command (todo [details] [details])","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"jiarong15"},"content":"   * Stores task details of a to do task with completion status marked as uncompleted initially.","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"jiarong15"},"content":"3. Event Command (event [details] [details] /at [dd/mm/yyy] [HH:MM])","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"jiarong15"},"content":"   * Stores task details of a event task specifying the start date and time with completion status marked as uncompleted initially.","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"jiarong15"},"content":"4. Deadline Command (deadline [details] [details] /by [dd/mm/yyyy] [HH:MM])","lastModifiedDate":"2021-09-13"},{"lineNumber":13,"author":{"gitId":"jiarong15"},"content":"   * Stores task details of a deadline task specifying the date and time that the task needs to be completed by. Completion status marked as uncompleted initially.","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"jiarong15"},"content":"5. Schedule Command (schedule [dd/mm/yyyy])","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"jiarong15"},"content":"   * Retrieves all the event or deadline tasks with date matching the date specified by you.","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"jiarong15"},"content":"6. Find Command (find *[details])","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"jiarong15"},"content":"   * Retrieves all the tasks that have matching details as specified by you. *[details] denotes any length of description separated by spaces.","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"jiarong15"},"content":"7. Done Command (done [N])","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"jiarong15"},"content":"   * Where N is a numerical number, this command marks the Nth task as completed and changes completion status from uncompleted to completed ([] -\u003e [X]).","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"jiarong15"},"content":"8. Delete Command (delete [N])","lastModifiedDate":"2021-09-13"},{"lineNumber":21,"author":{"gitId":"jiarong15"},"content":"   * Where N is a numerical number, this command deletes the Nth task from all the stored tasks.","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"jiarong15"},"content":"9. Bye Command (bye)","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"jiarong15"},"content":"   * Triggers duke to exit the application.","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"jiarong15"},"content":"#### How to get started:","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"jiarong15"},"content":"1. Download DukeJR by cloning repository from https://github.com/jiarong15/ip - Over here! :grinning::grinning:","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"jiarong15"},"content":"2. cd build/libs","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"jiarong15"},"content":"3. Run program: java -jar duke.jar","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"jiarong15"},"content":"4. You\u0027re all set with the slew of commands given above!! :muscle: :grinning:","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":31,"author":{"gitId":"jiarong15"},"content":"Totally **FREE!**","lastModifiedDate":"2021-09-13"}],"authorContributionMap":{"jiarong15":31}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiarong15"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"jiarong15"},"content":"import duke.commands.Command;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"jiarong15"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"jiarong15"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"jiarong15"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"jiarong15"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"jiarong15"},"content":" * Duke object class,","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"jiarong15"},"content":" * contains methods to run the duke bot.","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"jiarong15"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"jiarong15"},"content":"public class Duke {","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"jiarong15"},"content":"     * Helps convert string input by user","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"jiarong15"},"content":"     * to commands.","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"jiarong15"},"content":"    private final Parser parser;","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":21,"author":{"gitId":"jiarong15"},"content":"     * Helps in storing tasks and retrieving","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"jiarong15"},"content":"     * when required by user.","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"jiarong15"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"jiarong15"},"content":"     * Helps in displaying tasks to user.","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"jiarong15"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":31,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":32,"author":{"gitId":"jiarong15"},"content":"     * Keeps track of tasks while duke","lastModifiedDate":"2021-09-13"},{"lineNumber":33,"author":{"gitId":"jiarong15"},"content":"     * program is running.","lastModifiedDate":"2021-09-13"},{"lineNumber":34,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":35,"author":{"gitId":"jiarong15"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"jiarong15"},"content":"     * Instantiates Parser, Storage, Ui and","lastModifiedDate":"2021-09-13"},{"lineNumber":40,"author":{"gitId":"jiarong15"},"content":"     * taskList and passes the filepath to storage class.","lastModifiedDate":"2021-09-13"},{"lineNumber":41,"author":{"gitId":"jiarong15"},"content":"     * Catches both exceptions from storage class.","lastModifiedDate":"2021-09-13"},{"lineNumber":42,"author":{"gitId":"jiarong15"},"content":"     * If either 1 exception happens, taskList is","lastModifiedDate":"2021-09-13"},{"lineNumber":43,"author":{"gitId":"jiarong15"},"content":"     * initialized as empty, with no tasks in it.","lastModifiedDate":"2021-09-13"},{"lineNumber":44,"author":{"gitId":"jiarong15"},"content":"     * @param filePath String containing the relative file path","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"jiarong15"},"content":"     * that storage class takes in to store and read tasks.","lastModifiedDate":"2021-09-13"},{"lineNumber":46,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"jiarong15"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"jiarong15"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"jiarong15"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"jiarong15"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"jiarong15"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"jiarong15"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"jiarong15"},"content":"        } catch (DukeException | FileNotFoundException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"jiarong15"},"content":"            ui.showLoadingError();","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"jiarong15"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":60,"author":{"gitId":"jiarong15"},"content":"     * Gives the starting welcome message.","lastModifiedDate":"2021-09-13"},{"lineNumber":61,"author":{"gitId":"jiarong15"},"content":"     * @return String welcome message.","lastModifiedDate":"2021-09-13"},{"lineNumber":62,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":63,"author":{"gitId":"jiarong15"},"content":"    public String getWelcomeMessage() {","lastModifiedDate":"2021-09-05"},{"lineNumber":64,"author":{"gitId":"jiarong15"},"content":"        return ui.showWelcomeMsg();","lastModifiedDate":"2021-09-05"},{"lineNumber":65,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":66,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":67,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"jiarong15"},"content":"     * Retrieves the response of the bot","lastModifiedDate":"2021-09-13"},{"lineNumber":69,"author":{"gitId":"jiarong15"},"content":"     * given the input command by user.","lastModifiedDate":"2021-09-13"},{"lineNumber":70,"author":{"gitId":"jiarong15"},"content":"     * Interacts with the different classes","lastModifiedDate":"2021-09-13"},{"lineNumber":71,"author":{"gitId":"jiarong15"},"content":"     * to achieve the bot behaviour.","lastModifiedDate":"2021-09-13"},{"lineNumber":72,"author":{"gitId":"jiarong15"},"content":"     * Run stops when a \"bye\" command is","lastModifiedDate":"2021-09-13"},{"lineNumber":73,"author":{"gitId":"jiarong15"},"content":"     * entered and ends the bot processes.","lastModifiedDate":"2021-09-13"},{"lineNumber":74,"author":{"gitId":"jiarong15"},"content":"     * @param fullCommand String of command given","lastModifiedDate":"2021-09-13"},{"lineNumber":75,"author":{"gitId":"jiarong15"},"content":"     * by user.","lastModifiedDate":"2021-09-13"},{"lineNumber":76,"author":{"gitId":"jiarong15"},"content":"     * @return String of output to be displayed","lastModifiedDate":"2021-09-13"},{"lineNumber":77,"author":{"gitId":"jiarong15"},"content":"     * to user via UI.","lastModifiedDate":"2021-09-13"},{"lineNumber":78,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":79,"author":{"gitId":"jiarong15"},"content":"    public String run(String fullCommand) {","lastModifiedDate":"2021-09-05"},{"lineNumber":80,"author":{"gitId":"jiarong15"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":81,"author":{"gitId":"jiarong15"},"content":"            Command c \u003d parser.parse(fullCommand);","lastModifiedDate":"2021-08-29"},{"lineNumber":82,"author":{"gitId":"jiarong15"},"content":"            String outputMessage \u003d c.execute(tasks, ui, storage);","lastModifiedDate":"2021-09-05"},{"lineNumber":83,"author":{"gitId":"jiarong15"},"content":"            if (c.isExit()) {","lastModifiedDate":"2021-09-05"},{"lineNumber":84,"author":{"gitId":"jiarong15"},"content":"                Platform.exit();","lastModifiedDate":"2021-09-05"},{"lineNumber":85,"author":{"gitId":"jiarong15"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":86,"author":{"gitId":"jiarong15"},"content":"            return outputMessage;","lastModifiedDate":"2021-09-05"},{"lineNumber":87,"author":{"gitId":"jiarong15"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":88,"author":{"gitId":"jiarong15"},"content":"            return ui.displayErrorMessage(e.getMessage());","lastModifiedDate":"2021-09-05"},{"lineNumber":89,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":90,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":91,"author":{"gitId":"jiarong15"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"jiarong15":91}},{"path":"src/main/java/duke/LaunchDuke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiarong15"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"jiarong15"},"content":"import javafxgui.MainWindow;","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"jiarong15"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"jiarong15"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"jiarong15"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"jiarong15"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"jiarong15"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"jiarong15"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"jiarong15"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"jiarong15"},"content":" * A Class to initialize Duke Object and","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"jiarong15"},"content":" * run the entire program.","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"jiarong15"},"content":" * @author Jia Rong","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"jiarong15"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"jiarong15"},"content":"public class LaunchDuke extends Application {","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"jiarong15"},"content":"     * Specifies the relative path of where to","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"jiarong15"},"content":"     * write user stored tasks to.","lastModifiedDate":"2021-09-13"},{"lineNumber":21,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"jiarong15"},"content":"    private static final String PATH \u003d \"./data/duke.txt\";","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"jiarong15"},"content":"     * Initializes a new duke to kickstart the","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"jiarong15"},"content":"     * run of the program.","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"jiarong15"},"content":"    private Duke duke \u003d new Duke(PATH);","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":31,"author":{"gitId":"jiarong15"},"content":"     * Loads the FXML for display of GUI.","lastModifiedDate":"2021-09-13"},{"lineNumber":32,"author":{"gitId":"jiarong15"},"content":"     * @param stage displays tasks to user","lastModifiedDate":"2021-09-13"},{"lineNumber":33,"author":{"gitId":"jiarong15"},"content":"     * via the GUI.","lastModifiedDate":"2021-09-13"},{"lineNumber":34,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":35,"author":{"gitId":"jiarong15"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"jiarong15"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"jiarong15"},"content":"        try {","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"jiarong15"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(","lastModifiedDate":"2021-09-13"},{"lineNumber":39,"author":{"gitId":"jiarong15"},"content":"                    LaunchDuke.","lastModifiedDate":"2021-09-13"},{"lineNumber":40,"author":{"gitId":"jiarong15"},"content":"                            class.","lastModifiedDate":"2021-09-13"},{"lineNumber":41,"author":{"gitId":"jiarong15"},"content":"                            getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-13"},{"lineNumber":42,"author":{"gitId":"jiarong15"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"jiarong15"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"jiarong15"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"jiarong15"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"jiarong15"},"content":"            stage.show();","lastModifiedDate":"2021-09-05"},{"lineNumber":47,"author":{"gitId":"jiarong15"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"jiarong15"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":50,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":52,"author":{"gitId":"jiarong15"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"jiarong15":52}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiarong15"},"content":"package duke;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"jiarong15"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"jiarong15"},"content":"/**","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"jiarong15"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"jiarong15"},"content":" */","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"jiarong15"},"content":"public class Launcher {","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"jiarong15"},"content":"     * Launches the entire app.","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"jiarong15"},"content":"     * @param args String[] of inputs to start","lastModifiedDate":"2021-09-13"},{"lineNumber":13,"author":{"gitId":"jiarong15"},"content":"     * running the application.","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"jiarong15"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"jiarong15"},"content":"        Application.launch(LaunchDuke.class, args);","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"jiarong15"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"jiarong15":18}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiarong15"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"jiarong15"},"content":"import duke.exceptions.NoSuchCommandException;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"jiarong15"},"content":"import duke.commands.Command;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"jiarong15"},"content":"import duke.commands.DeleteCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"jiarong15"},"content":"import duke.commands.ByeCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"jiarong15"},"content":"import duke.commands.TaskCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"jiarong15"},"content":"import duke.commands.ListCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"jiarong15"},"content":"import duke.commands.DoneCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"jiarong15"},"content":"import duke.commands.FindCommand;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"jiarong15"},"content":"import duke.commands.ScheduleCommand;","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"jiarong15"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"jiarong15"},"content":" * Class that converts inputs by user","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"jiarong15"},"content":" * to Command Object to be used.","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"jiarong15"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"jiarong15"},"content":"public class Parser {","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"jiarong15"},"content":"     * Bye command string structure.","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":21,"author":{"gitId":"jiarong15"},"content":"    private static final String BYE_COMMAND \u003d \"bye\";","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"jiarong15"},"content":"     * List command string structure.","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"jiarong15"},"content":"    private static final String LIST_COMMAND \u003d \"list\";","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"jiarong15"},"content":"     * Done command string structure.","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":31,"author":{"gitId":"jiarong15"},"content":"    private static final String DONE_COMMAND \u003d \"done\";","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":33,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":34,"author":{"gitId":"jiarong15"},"content":"     * To do command string structure.","lastModifiedDate":"2021-09-13"},{"lineNumber":35,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":36,"author":{"gitId":"jiarong15"},"content":"    private static final String TODO_COMMAND \u003d \"todo\";","lastModifiedDate":"2021-08-20"},{"lineNumber":37,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":38,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":39,"author":{"gitId":"jiarong15"},"content":"     * DeadLine command string structure.","lastModifiedDate":"2021-09-13"},{"lineNumber":40,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":41,"author":{"gitId":"jiarong15"},"content":"    private static final String DEADLINE_COMMAND \u003d \"deadline\";","lastModifiedDate":"2021-08-20"},{"lineNumber":42,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":43,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":44,"author":{"gitId":"jiarong15"},"content":"     * Event command string structure.","lastModifiedDate":"2021-09-13"},{"lineNumber":45,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":46,"author":{"gitId":"jiarong15"},"content":"    private static final String EVENT_COMMAND \u003d \"event\";","lastModifiedDate":"2021-08-20"},{"lineNumber":47,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":48,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":49,"author":{"gitId":"jiarong15"},"content":"     * Delete command string structure.","lastModifiedDate":"2021-09-13"},{"lineNumber":50,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":51,"author":{"gitId":"jiarong15"},"content":"    private static final String DELETE_COMMAND \u003d \"delete\";","lastModifiedDate":"2021-08-20"},{"lineNumber":52,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":53,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":54,"author":{"gitId":"jiarong15"},"content":"     * Find command string structure.","lastModifiedDate":"2021-09-13"},{"lineNumber":55,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":56,"author":{"gitId":"jiarong15"},"content":"    private static final String FIND_COMMAND \u003d \"find\";","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":58,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":59,"author":{"gitId":"jiarong15"},"content":"     * Schedule command string structure.","lastModifiedDate":"2021-09-13"},{"lineNumber":60,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":61,"author":{"gitId":"jiarong15"},"content":"    private static final String SCHEDULE_COMMAND \u003d \"schedule\";","lastModifiedDate":"2021-09-11"},{"lineNumber":62,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":63,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"jiarong15"},"content":"     * Instantiates a new Parser class.","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":66,"author":{"gitId":"jiarong15"},"content":"    public Parser() {","lastModifiedDate":"2021-09-13"},{"lineNumber":67,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":68,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":70,"author":{"gitId":"jiarong15"},"content":"     * Reads the given string by the user and","lastModifiedDate":"2021-09-13"},{"lineNumber":71,"author":{"gitId":"jiarong15"},"content":"     * checks what type of command is it and","lastModifiedDate":"2021-09-13"},{"lineNumber":72,"author":{"gitId":"jiarong15"},"content":"     * returns the matching Command Object.","lastModifiedDate":"2021-09-13"},{"lineNumber":73,"author":{"gitId":"jiarong15"},"content":"     * @param input String instructions given by the user.","lastModifiedDate":"2021-09-13"},{"lineNumber":74,"author":{"gitId":"jiarong15"},"content":"     * @return Command object of the relating to","lastModifiedDate":"2021-09-13"},{"lineNumber":75,"author":{"gitId":"jiarong15"},"content":"     * the input given by user.","lastModifiedDate":"2021-09-13"},{"lineNumber":76,"author":{"gitId":"jiarong15"},"content":"     * @throws NoSuchCommandException If command do","lastModifiedDate":"2021-09-13"},{"lineNumber":77,"author":{"gitId":"jiarong15"},"content":"     * not fulfill the requirements of the bot and thus","lastModifiedDate":"2021-09-13"},{"lineNumber":78,"author":{"gitId":"jiarong15"},"content":"     * not recognized.","lastModifiedDate":"2021-09-13"},{"lineNumber":79,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":80,"author":{"gitId":"jiarong15"},"content":"    Command parse(String input) throws NoSuchCommandException {","lastModifiedDate":"2021-08-29"},{"lineNumber":81,"author":{"gitId":"jiarong15"},"content":"        String formattedInput \u003d input.trim();","lastModifiedDate":"2021-08-30"},{"lineNumber":82,"author":{"gitId":"jiarong15"},"content":"        String[] commandItems \u003d formattedInput.split(\" \");","lastModifiedDate":"2021-08-30"},{"lineNumber":83,"author":{"gitId":"jiarong15"},"content":"        String commandInput \u003d commandItems[0];","lastModifiedDate":"2021-08-17"},{"lineNumber":84,"author":{"gitId":"jiarong15"},"content":"        if (this.isNormalCommandType(commandInput)) {","lastModifiedDate":"2021-08-20"},{"lineNumber":85,"author":{"gitId":"jiarong15"},"content":"            return this.extractNormalCommand(commandInput, formattedInput);","lastModifiedDate":"2021-08-30"},{"lineNumber":86,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":87,"author":{"gitId":"jiarong15"},"content":"        return this.extractSpecialCommand(","lastModifiedDate":"2021-09-13"},{"lineNumber":88,"author":{"gitId":"jiarong15"},"content":"                commandInput,","lastModifiedDate":"2021-09-13"},{"lineNumber":89,"author":{"gitId":"jiarong15"},"content":"                formattedInput,","lastModifiedDate":"2021-09-13"},{"lineNumber":90,"author":{"gitId":"jiarong15"},"content":"                commandItems);","lastModifiedDate":"2021-09-13"},{"lineNumber":91,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":93,"author":{"gitId":"jiarong15"},"content":"    private Command extractSpecialCommand(","lastModifiedDate":"2021-08-30"},{"lineNumber":94,"author":{"gitId":"jiarong15"},"content":"            String commandName,","lastModifiedDate":"2021-08-31"},{"lineNumber":95,"author":{"gitId":"jiarong15"},"content":"            String fullCommandInput,","lastModifiedDate":"2021-08-31"},{"lineNumber":96,"author":{"gitId":"jiarong15"},"content":"            String[] commandList)","lastModifiedDate":"2021-08-31"},{"lineNumber":97,"author":{"gitId":"jiarong15"},"content":"            throws NoSuchCommandException {","lastModifiedDate":"2021-08-30"},{"lineNumber":98,"author":{"gitId":"jiarong15"},"content":"        if (commandList.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-20"},{"lineNumber":99,"author":{"gitId":"jiarong15"},"content":"            String errorMessage \u003d \"☹ OOPS!!! The description of a \"","lastModifiedDate":"2021-08-31"},{"lineNumber":100,"author":{"gitId":"jiarong15"},"content":"                    + commandName","lastModifiedDate":"2021-08-31"},{"lineNumber":101,"author":{"gitId":"jiarong15"},"content":"                    + \" cannot be empty.\";","lastModifiedDate":"2021-08-31"},{"lineNumber":102,"author":{"gitId":"jiarong15"},"content":"            throw new NoSuchCommandException(errorMessage);","lastModifiedDate":"2021-08-20"},{"lineNumber":103,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":104,"author":{"gitId":"jiarong15"},"content":"        assert (commandList.length \u003e 1) : \"Commands should have at least a description!\";","lastModifiedDate":"2021-09-13"},{"lineNumber":105,"author":{"gitId":"jiarong15"},"content":"        String actualInputs \u003d String.join(\" \", commandList);","lastModifiedDate":"2021-08-29"},{"lineNumber":106,"author":{"gitId":"jiarong15"},"content":"        return new TaskCommand(actualInputs);","lastModifiedDate":"2021-08-29"},{"lineNumber":107,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":108,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":109,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":110,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":111,"author":{"gitId":"jiarong15"},"content":"     * Returns the respective command of","lastModifiedDate":"2021-09-13"},{"lineNumber":112,"author":{"gitId":"jiarong15"},"content":"     * the user as a Command object.","lastModifiedDate":"2021-09-13"},{"lineNumber":113,"author":{"gitId":"jiarong15"},"content":"     * @param commandName String of the name of","lastModifiedDate":"2021-09-13"},{"lineNumber":114,"author":{"gitId":"jiarong15"},"content":"     * the type of the command given.","lastModifiedDate":"2021-09-13"},{"lineNumber":115,"author":{"gitId":"jiarong15"},"content":"     * @param fullCommandInput String of the","lastModifiedDate":"2021-09-13"},{"lineNumber":116,"author":{"gitId":"jiarong15"},"content":"     * full instructions given by user.","lastModifiedDate":"2021-09-13"},{"lineNumber":117,"author":{"gitId":"jiarong15"},"content":"     * @return Command of the correct type.","lastModifiedDate":"2021-09-13"},{"lineNumber":118,"author":{"gitId":"jiarong15"},"content":"     * @throws NoSuchCommandException if the command given","lastModifiedDate":"2021-09-13"},{"lineNumber":119,"author":{"gitId":"jiarong15"},"content":"     * by user is not something that this bot is supposed to handle.","lastModifiedDate":"2021-09-13"},{"lineNumber":120,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":121,"author":{"gitId":"jiarong15"},"content":"    private Command extractNormalCommand(","lastModifiedDate":"2021-08-30"},{"lineNumber":122,"author":{"gitId":"jiarong15"},"content":"            String commandName,","lastModifiedDate":"2021-08-31"},{"lineNumber":123,"author":{"gitId":"jiarong15"},"content":"            String fullCommandInput) throws NoSuchCommandException {","lastModifiedDate":"2021-08-31"},{"lineNumber":124,"author":{"gitId":"jiarong15"},"content":"        if (commandName.equals(DELETE_COMMAND)) {","lastModifiedDate":"2021-08-26"},{"lineNumber":125,"author":{"gitId":"jiarong15"},"content":"            return new DeleteCommand(fullCommandInput);","lastModifiedDate":"2021-08-20"},{"lineNumber":126,"author":{"gitId":"jiarong15"},"content":"        } else if (commandName.equals(LIST_COMMAND)) {","lastModifiedDate":"2021-08-20"},{"lineNumber":127,"author":{"gitId":"jiarong15"},"content":"            return new ListCommand(fullCommandInput);","lastModifiedDate":"2021-08-20"},{"lineNumber":128,"author":{"gitId":"jiarong15"},"content":"        } else if (commandName.equals(BYE_COMMAND)) {","lastModifiedDate":"2021-08-20"},{"lineNumber":129,"author":{"gitId":"jiarong15"},"content":"            return new ByeCommand(fullCommandInput);","lastModifiedDate":"2021-08-20"},{"lineNumber":130,"author":{"gitId":"jiarong15"},"content":"        } else if (commandName.equals(DONE_COMMAND)) {","lastModifiedDate":"2021-08-20"},{"lineNumber":131,"author":{"gitId":"jiarong15"},"content":"            return new DoneCommand(fullCommandInput);","lastModifiedDate":"2021-08-20"},{"lineNumber":132,"author":{"gitId":"jiarong15"},"content":"        } else if (commandName.equals(FIND_COMMAND)) {","lastModifiedDate":"2021-08-30"},{"lineNumber":133,"author":{"gitId":"jiarong15"},"content":"            return new FindCommand(fullCommandInput);","lastModifiedDate":"2021-08-30"},{"lineNumber":134,"author":{"gitId":"jiarong15"},"content":"        } else if (commandName.equals(SCHEDULE_COMMAND)) {","lastModifiedDate":"2021-09-11"},{"lineNumber":135,"author":{"gitId":"jiarong15"},"content":"            return new ScheduleCommand(fullCommandInput);","lastModifiedDate":"2021-09-11"},{"lineNumber":136,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":137,"author":{"gitId":"jiarong15"},"content":"        String errorMessage \u003d \"☹ OOPS!!! I\u0027m sorry, \"","lastModifiedDate":"2021-08-31"},{"lineNumber":138,"author":{"gitId":"jiarong15"},"content":"                + \"but I don\u0027t know what that means :-(\";","lastModifiedDate":"2021-08-31"},{"lineNumber":139,"author":{"gitId":"jiarong15"},"content":"        throw new NoSuchCommandException(errorMessage);","lastModifiedDate":"2021-08-20"},{"lineNumber":140,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":141,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":142,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":143,"author":{"gitId":"jiarong15"},"content":"     * Checks if the respective command is","lastModifiedDate":"2021-09-13"},{"lineNumber":144,"author":{"gitId":"jiarong15"},"content":"     * of todo, deadline or event to distinguish","lastModifiedDate":"2021-09-13"},{"lineNumber":145,"author":{"gitId":"jiarong15"},"content":"     * how the command Object is to be initialized.","lastModifiedDate":"2021-09-13"},{"lineNumber":146,"author":{"gitId":"jiarong15"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":147,"author":{"gitId":"jiarong15"},"content":"     * @param commandName String of the command","lastModifiedDate":"2021-08-30"},{"lineNumber":148,"author":{"gitId":"jiarong15"},"content":"     * @return boolean to indicate if the command given","lastModifiedDate":"2021-08-31"},{"lineNumber":149,"author":{"gitId":"jiarong15"},"content":"     * is a todo, event, deadline or otherwise","lastModifiedDate":"2021-08-31"},{"lineNumber":150,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":151,"author":{"gitId":"jiarong15"},"content":"    private boolean isNormalCommandType(String commandName) {","lastModifiedDate":"2021-08-20"},{"lineNumber":152,"author":{"gitId":"jiarong15"},"content":"        boolean isToDo \u003d !commandName.equals(TODO_COMMAND);","lastModifiedDate":"2021-09-07"},{"lineNumber":153,"author":{"gitId":"jiarong15"},"content":"        boolean isDeadLine \u003d !commandName.equals(DEADLINE_COMMAND);","lastModifiedDate":"2021-09-07"},{"lineNumber":154,"author":{"gitId":"jiarong15"},"content":"        boolean isEvent \u003d !commandName.equals(EVENT_COMMAND);","lastModifiedDate":"2021-09-07"},{"lineNumber":155,"author":{"gitId":"jiarong15"},"content":"        return isToDo \u0026\u0026 isDeadLine \u0026\u0026 isEvent;","lastModifiedDate":"2021-09-07"},{"lineNumber":156,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":157,"author":{"gitId":"jiarong15"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"jiarong15":157}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiarong15"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"jiarong15"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"jiarong15"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"jiarong15"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"jiarong15"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jiarong15"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"jiarong15"},"content":"import duke.status.Status;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"jiarong15"},"content":"import duke.status.TypeTask;","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"jiarong15"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"jiarong15"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"jiarong15"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"jiarong15"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"jiarong15"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"jiarong15"},"content":"import java.util.Map;","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"jiarong15"},"content":"import java.util.List;","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"jiarong15"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"jiarong15"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"jiarong15"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"jiarong15"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"jiarong15"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"jiarong15"},"content":" * Class that manages the reading from and","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"jiarong15"},"content":" * writing to local files in the local directory.","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"jiarong15"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"jiarong15"},"content":"public class Storage {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"jiarong15"},"content":"     * To do task identifier.","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"jiarong15"},"content":"    private static final String TODO_IDENTIFIER \u003d \"T\";","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":32,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":33,"author":{"gitId":"jiarong15"},"content":"     * Event task identifier.","lastModifiedDate":"2021-09-13"},{"lineNumber":34,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":35,"author":{"gitId":"jiarong15"},"content":"    private static final String EVENT_IDENTIFIER \u003d \"E\";","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":37,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":38,"author":{"gitId":"jiarong15"},"content":"     * Deadline task identifier.","lastModifiedDate":"2021-09-13"},{"lineNumber":39,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":40,"author":{"gitId":"jiarong15"},"content":"    private static final String DEADLINE_IDENTIFIER \u003d \"D\";","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":43,"author":{"gitId":"jiarong15"},"content":"     * Full identity of to do task.","lastModifiedDate":"2021-09-13"},{"lineNumber":44,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":45,"author":{"gitId":"jiarong15"},"content":"    private static final String TODO_FULL_IDEN \u003d","lastModifiedDate":"2021-09-13"},{"lineNumber":46,"author":{"gitId":"jiarong15"},"content":"            TypeTask.TODO.getTask();","lastModifiedDate":"2021-09-13"},{"lineNumber":47,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":48,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":49,"author":{"gitId":"jiarong15"},"content":"     * Full identity of event task.","lastModifiedDate":"2021-09-13"},{"lineNumber":50,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":51,"author":{"gitId":"jiarong15"},"content":"    private static final String EVENT_FULL_IDEN \u003d","lastModifiedDate":"2021-09-13"},{"lineNumber":52,"author":{"gitId":"jiarong15"},"content":"            TypeTask.EVENT.getTask();","lastModifiedDate":"2021-09-13"},{"lineNumber":53,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":54,"author":{"gitId":"jiarong15"},"content":"     * Full identity of deadline task.","lastModifiedDate":"2021-09-13"},{"lineNumber":55,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":56,"author":{"gitId":"jiarong15"},"content":"    private static final String DEADLINE_FULL_IDEN \u003d","lastModifiedDate":"2021-09-13"},{"lineNumber":57,"author":{"gitId":"jiarong15"},"content":"            TypeTask.DEADLINE.getTask();","lastModifiedDate":"2021-09-13"},{"lineNumber":58,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":60,"author":{"gitId":"jiarong15"},"content":"     * Tasks represented as complete in storage file.","lastModifiedDate":"2021-09-13"},{"lineNumber":61,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":62,"author":{"gitId":"jiarong15"},"content":"    private static final String INDICATOR_COMPLETE \u003d \"1\";","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":64,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":65,"author":{"gitId":"jiarong15"},"content":"     * Event task indicator of date and time.","lastModifiedDate":"2021-09-13"},{"lineNumber":66,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":67,"author":{"gitId":"jiarong15"},"content":"    private static final String INDICATOR_EVENT \u003d \"/at\";","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":69,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":70,"author":{"gitId":"jiarong15"},"content":"     * Deadline task indicator of date and time.","lastModifiedDate":"2021-09-13"},{"lineNumber":71,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":72,"author":{"gitId":"jiarong15"},"content":"    private static final String INDICATOR_DEADLINE \u003d \"/by\";","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":75,"author":{"gitId":"jiarong15"},"content":"     * The file source in which tasks are stored","lastModifiedDate":"2021-09-13"},{"lineNumber":76,"author":{"gitId":"jiarong15"},"content":"     * and retrieved from.","lastModifiedDate":"2021-09-13"},{"lineNumber":77,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":78,"author":{"gitId":"jiarong15"},"content":"    private final File fileSource;","lastModifiedDate":"2021-08-30"},{"lineNumber":79,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":80,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":81,"author":{"gitId":"jiarong15"},"content":"     * All the tasks are stored while processing.","lastModifiedDate":"2021-09-13"},{"lineNumber":82,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":83,"author":{"gitId":"jiarong15"},"content":"    private List\u003cString\u003e allStringTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-30"},{"lineNumber":84,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":86,"author":{"gitId":"jiarong15"},"content":"     * Index of the array to modify.","lastModifiedDate":"2021-09-13"},{"lineNumber":87,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":88,"author":{"gitId":"jiarong15"},"content":"    private static final int INDEX_TO_MODIFY \u003d 3;","lastModifiedDate":"2021-09-13"},{"lineNumber":89,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":90,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":91,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":92,"author":{"gitId":"jiarong15"},"content":"     * Initializes a new storage class.","lastModifiedDate":"2021-08-31"},{"lineNumber":93,"author":{"gitId":"jiarong15"},"content":"     * @param filePath String indicating the path of","lastModifiedDate":"2021-08-30"},{"lineNumber":94,"author":{"gitId":"jiarong15"},"content":"     * the local file to write to or read from.","lastModifiedDate":"2021-08-30"},{"lineNumber":95,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":96,"author":{"gitId":"jiarong15"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-29"},{"lineNumber":97,"author":{"gitId":"jiarong15"},"content":"        this.fileSource \u003d new File(filePath);","lastModifiedDate":"2021-08-30"},{"lineNumber":98,"author":{"gitId":"jiarong15"},"content":"        Path path \u003d this.fileSource.toPath();","lastModifiedDate":"2021-08-30"},{"lineNumber":99,"author":{"gitId":"jiarong15"},"content":"        try {","lastModifiedDate":"2021-08-30"},{"lineNumber":100,"author":{"gitId":"jiarong15"},"content":"            Path parentPath \u003d path.getParent();","lastModifiedDate":"2021-08-30"},{"lineNumber":101,"author":{"gitId":"jiarong15"},"content":"            Files.createDirectories(parentPath);","lastModifiedDate":"2021-08-30"},{"lineNumber":102,"author":{"gitId":"jiarong15"},"content":"            if (!Files.exists(path)) {","lastModifiedDate":"2021-08-30"},{"lineNumber":103,"author":{"gitId":"jiarong15"},"content":"                Files.createFile(path);","lastModifiedDate":"2021-08-30"},{"lineNumber":104,"author":{"gitId":"jiarong15"},"content":"            }","lastModifiedDate":"2021-08-30"},{"lineNumber":105,"author":{"gitId":"jiarong15"},"content":"            this.allStringTasks \u003d Files.readAllLines(path);","lastModifiedDate":"2021-08-30"},{"lineNumber":106,"author":{"gitId":"jiarong15"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":107,"author":{"gitId":"jiarong15"},"content":"            System.err.println(\"Error in path set!\");","lastModifiedDate":"2021-08-30"},{"lineNumber":108,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":109,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":112,"author":{"gitId":"jiarong15"},"content":"     * Returns all the tasks stored in","lastModifiedDate":"2021-09-13"},{"lineNumber":113,"author":{"gitId":"jiarong15"},"content":"     * the local directory as an arraylist.","lastModifiedDate":"2021-09-13"},{"lineNumber":114,"author":{"gitId":"jiarong15"},"content":"     * @return Arraylist of Task object","lastModifiedDate":"2021-08-30"},{"lineNumber":115,"author":{"gitId":"jiarong15"},"content":"     * @throws FileNotFoundException if local file directory does not exist","lastModifiedDate":"2021-08-30"},{"lineNumber":116,"author":{"gitId":"jiarong15"},"content":"     * @throws DukeException if either the Todo, Event,","lastModifiedDate":"2021-09-13"},{"lineNumber":117,"author":{"gitId":"jiarong15"},"content":"     * Deadline task is not initialized because of a","lastModifiedDate":"2021-09-13"},{"lineNumber":118,"author":{"gitId":"jiarong15"},"content":"     * wrong input given by the user.","lastModifiedDate":"2021-09-13"},{"lineNumber":119,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":120,"author":{"gitId":"jiarong15"},"content":"    protected ArrayList\u003cTask\u003e load() throws FileNotFoundException,","lastModifiedDate":"2021-08-31"},{"lineNumber":121,"author":{"gitId":"jiarong15"},"content":"            DukeException {","lastModifiedDate":"2021-08-31"},{"lineNumber":122,"author":{"gitId":"jiarong15"},"content":"        HashMap\u003cString, Boolean\u003e stringTasks \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-08-29"},{"lineNumber":123,"author":{"gitId":"jiarong15"},"content":"        for (String tasks : allStringTasks) {","lastModifiedDate":"2021-08-30"},{"lineNumber":124,"author":{"gitId":"jiarong15"},"content":"            this.storeDiskStorageInputs(tasks, stringTasks);","lastModifiedDate":"2021-08-30"},{"lineNumber":125,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"jiarong15"},"content":"        return this.changeStorageToTasks(stringTasks);","lastModifiedDate":"2021-08-29"},{"lineNumber":127,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":128,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":129,"author":{"gitId":"jiarong15"},"content":"    private ArrayList\u003cTask\u003e changeStorageToTasks(","lastModifiedDate":"2021-08-30"},{"lineNumber":130,"author":{"gitId":"jiarong15"},"content":"            HashMap\u003cString, Boolean\u003e stringTasks) throws DukeException {","lastModifiedDate":"2021-08-30"},{"lineNumber":131,"author":{"gitId":"jiarong15"},"content":"        ArrayList\u003cTask\u003e finalOutputTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-29"},{"lineNumber":132,"author":{"gitId":"jiarong15"},"content":"        for (Map.Entry\u003cString, Boolean\u003e entry : stringTasks.entrySet()) {","lastModifiedDate":"2021-08-29"},{"lineNumber":133,"author":{"gitId":"jiarong15"},"content":"            String fullInstructions \u003d entry.getKey();","lastModifiedDate":"2021-08-29"},{"lineNumber":134,"author":{"gitId":"jiarong15"},"content":"            String[] instructionsArray \u003d fullInstructions.split(\" \");","lastModifiedDate":"2021-08-29"},{"lineNumber":135,"author":{"gitId":"jiarong15"},"content":"            String crucialInstructions \u003d String.join(\" \",","lastModifiedDate":"2021-08-30"},{"lineNumber":136,"author":{"gitId":"jiarong15"},"content":"                    Arrays.copyOfRange(","lastModifiedDate":"2021-08-31"},{"lineNumber":137,"author":{"gitId":"jiarong15"},"content":"                            instructionsArray,","lastModifiedDate":"2021-08-31"},{"lineNumber":138,"author":{"gitId":"jiarong15"},"content":"                            1,","lastModifiedDate":"2021-08-31"},{"lineNumber":139,"author":{"gitId":"jiarong15"},"content":"                            instructionsArray.length));","lastModifiedDate":"2021-08-31"},{"lineNumber":140,"author":{"gitId":"jiarong15"},"content":"            String identity \u003d instructionsArray[0];","lastModifiedDate":"2021-08-29"},{"lineNumber":141,"author":{"gitId":"jiarong15"},"content":"            this.addToOutputTaskList(","lastModifiedDate":"2021-09-07"},{"lineNumber":142,"author":{"gitId":"jiarong15"},"content":"                    identity,","lastModifiedDate":"2021-09-07"},{"lineNumber":143,"author":{"gitId":"jiarong15"},"content":"                    entry.getValue(),","lastModifiedDate":"2021-09-07"},{"lineNumber":144,"author":{"gitId":"jiarong15"},"content":"                    crucialInstructions,","lastModifiedDate":"2021-09-07"},{"lineNumber":145,"author":{"gitId":"jiarong15"},"content":"                    finalOutputTasks);","lastModifiedDate":"2021-09-07"},{"lineNumber":146,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":147,"author":{"gitId":"jiarong15"},"content":"        return finalOutputTasks;","lastModifiedDate":"2021-09-07"},{"lineNumber":148,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":149,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":150,"author":{"gitId":"jiarong15"},"content":"    private void addToOutputTaskList(","lastModifiedDate":"2021-09-07"},{"lineNumber":151,"author":{"gitId":"jiarong15"},"content":"            String identifier,","lastModifiedDate":"2021-09-07"},{"lineNumber":152,"author":{"gitId":"jiarong15"},"content":"            boolean isCompleted,","lastModifiedDate":"2021-09-07"},{"lineNumber":153,"author":{"gitId":"jiarong15"},"content":"            String instructions,","lastModifiedDate":"2021-09-07"},{"lineNumber":154,"author":{"gitId":"jiarong15"},"content":"            ArrayList\u003cTask\u003e taskList) throws DukeException {","lastModifiedDate":"2021-09-07"},{"lineNumber":155,"author":{"gitId":"jiarong15"},"content":"        Task outputTask;","lastModifiedDate":"2021-09-07"},{"lineNumber":156,"author":{"gitId":"jiarong15"},"content":"        if (identifier.equals(TODO_FULL_IDEN)","lastModifiedDate":"2021-09-07"},{"lineNumber":157,"author":{"gitId":"jiarong15"},"content":"                \u0026\u0026 isCompleted) {","lastModifiedDate":"2021-09-07"},{"lineNumber":158,"author":{"gitId":"jiarong15"},"content":"            outputTask \u003d new ToDo(instructions).","lastModifiedDate":"2021-09-07"},{"lineNumber":159,"author":{"gitId":"jiarong15"},"content":"                    updateStatus(Status.COMPLETED.getStatus());","lastModifiedDate":"2021-08-30"},{"lineNumber":160,"author":{"gitId":"jiarong15"},"content":"        } else if (identifier.equals(TODO_FULL_IDEN)","lastModifiedDate":"2021-09-07"},{"lineNumber":161,"author":{"gitId":"jiarong15"},"content":"                \u0026\u0026 !isCompleted) {","lastModifiedDate":"2021-09-07"},{"lineNumber":162,"author":{"gitId":"jiarong15"},"content":"            outputTask \u003d new ToDo(instructions);","lastModifiedDate":"2021-09-07"},{"lineNumber":163,"author":{"gitId":"jiarong15"},"content":"        } else if (identifier.equals(DEADLINE_FULL_IDEN)","lastModifiedDate":"2021-09-07"},{"lineNumber":164,"author":{"gitId":"jiarong15"},"content":"                \u0026\u0026 isCompleted) {","lastModifiedDate":"2021-09-07"},{"lineNumber":165,"author":{"gitId":"jiarong15"},"content":"            outputTask \u003d new Deadline(instructions).","lastModifiedDate":"2021-09-07"},{"lineNumber":166,"author":{"gitId":"jiarong15"},"content":"                    updateStatus(Status.COMPLETED.getStatus());","lastModifiedDate":"2021-09-07"},{"lineNumber":167,"author":{"gitId":"jiarong15"},"content":"        } else if (identifier.equals(DEADLINE_FULL_IDEN)","lastModifiedDate":"2021-09-07"},{"lineNumber":168,"author":{"gitId":"jiarong15"},"content":"                \u0026\u0026 !isCompleted) {","lastModifiedDate":"2021-09-07"},{"lineNumber":169,"author":{"gitId":"jiarong15"},"content":"            outputTask \u003d new Deadline(instructions);","lastModifiedDate":"2021-09-07"},{"lineNumber":170,"author":{"gitId":"jiarong15"},"content":"        } else if (identifier.equals(EVENT_FULL_IDEN)","lastModifiedDate":"2021-09-07"},{"lineNumber":171,"author":{"gitId":"jiarong15"},"content":"                \u0026\u0026 isCompleted) {","lastModifiedDate":"2021-09-07"},{"lineNumber":172,"author":{"gitId":"jiarong15"},"content":"            outputTask \u003d new Event(instructions).","lastModifiedDate":"2021-09-07"},{"lineNumber":173,"author":{"gitId":"jiarong15"},"content":"                    updateStatus(Status.COMPLETED.getStatus());","lastModifiedDate":"2021-09-07"},{"lineNumber":174,"author":{"gitId":"jiarong15"},"content":"        } else if (identifier.equals(EVENT_FULL_IDEN)","lastModifiedDate":"2021-09-07"},{"lineNumber":175,"author":{"gitId":"jiarong15"},"content":"                \u0026\u0026 !isCompleted) {","lastModifiedDate":"2021-09-07"},{"lineNumber":176,"author":{"gitId":"jiarong15"},"content":"            outputTask \u003d new Event(instructions);","lastModifiedDate":"2021-09-07"},{"lineNumber":177,"author":{"gitId":"jiarong15"},"content":"        } else {","lastModifiedDate":"2021-08-29"},{"lineNumber":178,"author":{"gitId":"jiarong15"},"content":"            String errorMsg \u003d \"No such task!\";","lastModifiedDate":"2021-08-29"},{"lineNumber":179,"author":{"gitId":"jiarong15"},"content":"            throw new DukeException(errorMsg);","lastModifiedDate":"2021-08-29"},{"lineNumber":180,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":181,"author":{"gitId":"jiarong15"},"content":"        taskList.add(outputTask);","lastModifiedDate":"2021-09-07"},{"lineNumber":182,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":183,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":184,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":185,"author":{"gitId":"jiarong15"},"content":"     * Reads in all the task that user have keyed in to the bot","lastModifiedDate":"2021-08-30"},{"lineNumber":186,"author":{"gitId":"jiarong15"},"content":"     * and writes it to the local directory file.","lastModifiedDate":"2021-08-30"},{"lineNumber":187,"author":{"gitId":"jiarong15"},"content":"     * catches exception if the file does not","lastModifiedDate":"2021-08-31"},{"lineNumber":188,"author":{"gitId":"jiarong15"},"content":"     * exist and hence cannot be written to.","lastModifiedDate":"2021-08-31"},{"lineNumber":189,"author":{"gitId":"jiarong15"},"content":"     * @param storageTaskList arraylist of task","lastModifiedDate":"2021-08-30"},{"lineNumber":190,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":191,"author":{"gitId":"jiarong15"},"content":"    public void updateStorageList(ArrayList\u003cTask\u003e storageTaskList) {","lastModifiedDate":"2021-08-29"},{"lineNumber":192,"author":{"gitId":"jiarong15"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":193,"author":{"gitId":"jiarong15"},"content":"            FileWriter fw \u003d new FileWriter(fileSource);","lastModifiedDate":"2021-08-30"},{"lineNumber":194,"author":{"gitId":"jiarong15"},"content":"            StringBuilder sb \u003d new StringBuilder(\"\");","lastModifiedDate":"2021-08-24"},{"lineNumber":195,"author":{"gitId":"jiarong15"},"content":"            for (int i \u003d 0; i \u003c storageTaskList.size(); i++) {","lastModifiedDate":"2021-08-29"},{"lineNumber":196,"author":{"gitId":"jiarong15"},"content":"                Task task \u003d storageTaskList.get(i);","lastModifiedDate":"2021-08-29"},{"lineNumber":197,"author":{"gitId":"jiarong15"},"content":"                String fullInstr \u003d task.getOriginalFormatForStorage();","lastModifiedDate":"2021-08-29"},{"lineNumber":198,"author":{"gitId":"jiarong15"},"content":"                String[] instr \u003d fullInstr.split(\" \");","lastModifiedDate":"2021-08-24"},{"lineNumber":199,"author":{"gitId":"jiarong15"},"content":"                String indicator \u003d instr[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":200,"author":{"gitId":"jiarong15"},"content":"                if (i \u003d\u003d storageTaskList.size() - 1) {","lastModifiedDate":"2021-08-29"},{"lineNumber":201,"author":{"gitId":"jiarong15"},"content":"                    this.addToStringBuilder(sb, indicator,","lastModifiedDate":"2021-08-30"},{"lineNumber":202,"author":{"gitId":"jiarong15"},"content":"                            instr, fullInstr, \"\");","lastModifiedDate":"2021-08-30"},{"lineNumber":203,"author":{"gitId":"jiarong15"},"content":"                } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":204,"author":{"gitId":"jiarong15"},"content":"                    this.addToStringBuilder(sb, indicator,","lastModifiedDate":"2021-08-30"},{"lineNumber":205,"author":{"gitId":"jiarong15"},"content":"                            instr, fullInstr, System.lineSeparator());","lastModifiedDate":"2021-08-30"},{"lineNumber":206,"author":{"gitId":"jiarong15"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":207,"author":{"gitId":"jiarong15"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":208,"author":{"gitId":"jiarong15"},"content":"            fw.write(sb.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":209,"author":{"gitId":"jiarong15"},"content":"            fw.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":210,"author":{"gitId":"jiarong15"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":211,"author":{"gitId":"jiarong15"},"content":"            System.out.println(\"Error occurred while updating file storage\");","lastModifiedDate":"2021-09-13"},{"lineNumber":212,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":213,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":214,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":215,"author":{"gitId":"jiarong15"},"content":"    private void addToStringBuilder(","lastModifiedDate":"2021-08-30"},{"lineNumber":216,"author":{"gitId":"jiarong15"},"content":"            StringBuilder sb, String indicator,","lastModifiedDate":"2021-08-30"},{"lineNumber":217,"author":{"gitId":"jiarong15"},"content":"            String[] instr, String fullInstr, String extra) {","lastModifiedDate":"2021-08-30"},{"lineNumber":218,"author":{"gitId":"jiarong15"},"content":"        if (indicator.contains(TODO_IDENTIFIER)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":219,"author":{"gitId":"jiarong15"},"content":"            String details \u003d String.join(\" \",","lastModifiedDate":"2021-08-30"},{"lineNumber":220,"author":{"gitId":"jiarong15"},"content":"                    Arrays.copyOfRange(instr, 1, instr.length));","lastModifiedDate":"2021-08-30"},{"lineNumber":221,"author":{"gitId":"jiarong15"},"content":"            this.addToStringBuilder(","lastModifiedDate":"2021-09-07"},{"lineNumber":222,"author":{"gitId":"jiarong15"},"content":"                    sb,","lastModifiedDate":"2021-09-07"},{"lineNumber":223,"author":{"gitId":"jiarong15"},"content":"                    indicator.contains(\"X\"),","lastModifiedDate":"2021-09-07"},{"lineNumber":224,"author":{"gitId":"jiarong15"},"content":"                    TODO_IDENTIFIER,","lastModifiedDate":"2021-09-07"},{"lineNumber":225,"author":{"gitId":"jiarong15"},"content":"                    details,","lastModifiedDate":"2021-09-07"},{"lineNumber":226,"author":{"gitId":"jiarong15"},"content":"                    extra);","lastModifiedDate":"2021-09-07"},{"lineNumber":227,"author":{"gitId":"jiarong15"},"content":"        } else if (indicator.contains(DEADLINE_IDENTIFIER)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":228,"author":{"gitId":"jiarong15"},"content":"            String details \u003d this.getImptContentsOfDescription(fullInstr);","lastModifiedDate":"2021-08-24"},{"lineNumber":229,"author":{"gitId":"jiarong15"},"content":"            this.addToStringBuilder(","lastModifiedDate":"2021-09-07"},{"lineNumber":230,"author":{"gitId":"jiarong15"},"content":"                    sb,","lastModifiedDate":"2021-09-07"},{"lineNumber":231,"author":{"gitId":"jiarong15"},"content":"                    indicator.contains(\"X\"),","lastModifiedDate":"2021-09-07"},{"lineNumber":232,"author":{"gitId":"jiarong15"},"content":"                    DEADLINE_IDENTIFIER,","lastModifiedDate":"2021-09-07"},{"lineNumber":233,"author":{"gitId":"jiarong15"},"content":"                    details,","lastModifiedDate":"2021-09-07"},{"lineNumber":234,"author":{"gitId":"jiarong15"},"content":"                    extra);","lastModifiedDate":"2021-09-07"},{"lineNumber":235,"author":{"gitId":"jiarong15"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":236,"author":{"gitId":"jiarong15"},"content":"            String details \u003d this.getImptContentsOfDescription(fullInstr);","lastModifiedDate":"2021-08-24"},{"lineNumber":237,"author":{"gitId":"jiarong15"},"content":"            this.addToStringBuilder(","lastModifiedDate":"2021-09-07"},{"lineNumber":238,"author":{"gitId":"jiarong15"},"content":"                    sb,","lastModifiedDate":"2021-09-07"},{"lineNumber":239,"author":{"gitId":"jiarong15"},"content":"                    indicator.contains(\"X\"),","lastModifiedDate":"2021-09-07"},{"lineNumber":240,"author":{"gitId":"jiarong15"},"content":"                    EVENT_IDENTIFIER,","lastModifiedDate":"2021-09-07"},{"lineNumber":241,"author":{"gitId":"jiarong15"},"content":"                    details,","lastModifiedDate":"2021-09-07"},{"lineNumber":242,"author":{"gitId":"jiarong15"},"content":"                    extra);","lastModifiedDate":"2021-09-07"},{"lineNumber":243,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":244,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":245,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":246,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":247,"author":{"gitId":"jiarong15"},"content":"    private void addToStringBuilder(","lastModifiedDate":"2021-09-07"},{"lineNumber":248,"author":{"gitId":"jiarong15"},"content":"        StringBuilder sb,","lastModifiedDate":"2021-09-07"},{"lineNumber":249,"author":{"gitId":"jiarong15"},"content":"        boolean containsX,","lastModifiedDate":"2021-09-07"},{"lineNumber":250,"author":{"gitId":"jiarong15"},"content":"        String taskIdentifier,","lastModifiedDate":"2021-09-07"},{"lineNumber":251,"author":{"gitId":"jiarong15"},"content":"        String toModify,","lastModifiedDate":"2021-09-07"},{"lineNumber":252,"author":{"gitId":"jiarong15"},"content":"        String extra) {","lastModifiedDate":"2021-09-07"},{"lineNumber":253,"author":{"gitId":"jiarong15"},"content":"        String output;","lastModifiedDate":"2021-09-07"},{"lineNumber":254,"author":{"gitId":"jiarong15"},"content":"        if (containsX) {","lastModifiedDate":"2021-09-07"},{"lineNumber":255,"author":{"gitId":"jiarong15"},"content":"            output \u003d taskIdentifier","lastModifiedDate":"2021-09-07"},{"lineNumber":256,"author":{"gitId":"jiarong15"},"content":"            + \" | 1 | \"","lastModifiedDate":"2021-08-31"},{"lineNumber":257,"author":{"gitId":"jiarong15"},"content":"            + toModify;","lastModifiedDate":"2021-09-07"},{"lineNumber":258,"author":{"gitId":"jiarong15"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":259,"author":{"gitId":"jiarong15"},"content":"            output \u003d taskIdentifier","lastModifiedDate":"2021-09-07"},{"lineNumber":260,"author":{"gitId":"jiarong15"},"content":"            + \" | 0 | \"","lastModifiedDate":"2021-08-31"},{"lineNumber":261,"author":{"gitId":"jiarong15"},"content":"            + toModify;","lastModifiedDate":"2021-09-07"},{"lineNumber":262,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":263,"author":{"gitId":"jiarong15"},"content":"        sb.append(output +  extra);","lastModifiedDate":"2021-09-07"},{"lineNumber":264,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":265,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":266,"author":{"gitId":"jiarong15"},"content":"    private String getImptContentsOfDescription(String input) {","lastModifiedDate":"2021-08-24"},{"lineNumber":267,"author":{"gitId":"jiarong15"},"content":"        StringBuilder sb \u003d new StringBuilder(\"\");","lastModifiedDate":"2021-08-24"},{"lineNumber":268,"author":{"gitId":"jiarong15"},"content":"        String[] stringParts \u003d input.split(\" \");","lastModifiedDate":"2021-08-24"},{"lineNumber":269,"author":{"gitId":"jiarong15"},"content":"        for (int i \u003d 0; i \u003c stringParts.length; i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":270,"author":{"gitId":"jiarong15"},"content":"            String str \u003d stringParts[i];","lastModifiedDate":"2021-08-24"},{"lineNumber":271,"author":{"gitId":"jiarong15"},"content":"            if (str.matches(\"[/|(a-zA-Z0-9)|-]+\")","lastModifiedDate":"2021-08-31"},{"lineNumber":272,"author":{"gitId":"jiarong15"},"content":"                    \u0026\u0026 i !\u003d stringParts.length - 1) {","lastModifiedDate":"2021-08-31"},{"lineNumber":273,"author":{"gitId":"jiarong15"},"content":"                sb.append(str + \" \");","lastModifiedDate":"2021-08-24"},{"lineNumber":274,"author":{"gitId":"jiarong15"},"content":"            } else if (i \u003d\u003d stringParts.length - 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":275,"author":{"gitId":"jiarong15"},"content":"                sb.append(str.substring(0, str.length() - 1));","lastModifiedDate":"2021-08-24"},{"lineNumber":276,"author":{"gitId":"jiarong15"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":277,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":278,"author":{"gitId":"jiarong15"},"content":"        return sb.toString();","lastModifiedDate":"2021-08-24"},{"lineNumber":279,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":280,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":281,"author":{"gitId":"jiarong15"},"content":"    private void storeDiskStorageInputs(","lastModifiedDate":"2021-08-30"},{"lineNumber":282,"author":{"gitId":"jiarong15"},"content":"            String input, HashMap\u003cString, Boolean\u003e stringStorage) {","lastModifiedDate":"2021-08-30"},{"lineNumber":283,"author":{"gitId":"jiarong15"},"content":"        String[] formatted \u003d input.trim().split(\"[|]+\");","lastModifiedDate":"2021-08-24"},{"lineNumber":284,"author":{"gitId":"jiarong15"},"content":"        String[] trimFormatted \u003d this.formatStringToProperInput(","lastModifiedDate":"2021-08-31"},{"lineNumber":285,"author":{"gitId":"jiarong15"},"content":"                formatted).","lastModifiedDate":"2021-08-31"},{"lineNumber":286,"author":{"gitId":"jiarong15"},"content":"                split(\" \");","lastModifiedDate":"2021-08-31"},{"lineNumber":287,"author":{"gitId":"jiarong15"},"content":"        boolean isDone \u003d this.isTaskCompleted(trimFormatted);","lastModifiedDate":"2021-08-24"},{"lineNumber":288,"author":{"gitId":"jiarong15"},"content":"        String[] finalFormatted \u003d this.removeDigitIndicator(trimFormatted);","lastModifiedDate":"2021-08-24"},{"lineNumber":289,"author":{"gitId":"jiarong15"},"content":"        String formattedIden \u003d finalFormatted[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":290,"author":{"gitId":"jiarong15"},"content":"        String[] finalToOutput \u003d this.","lastModifiedDate":"2021-09-05"},{"lineNumber":291,"author":{"gitId":"jiarong15"},"content":"                updateToCommandConverterReadableFormat(","lastModifiedDate":"2021-08-30"},{"lineNumber":292,"author":{"gitId":"jiarong15"},"content":"                        formattedIden, finalFormatted);","lastModifiedDate":"2021-08-30"},{"lineNumber":293,"author":{"gitId":"jiarong15"},"content":"        String outputStorageInput \u003d String.join(\" \", finalToOutput);","lastModifiedDate":"2021-09-05"},{"lineNumber":294,"author":{"gitId":"jiarong15"},"content":"        stringStorage.put(outputStorageInput, isDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":295,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":296,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":297,"author":{"gitId":"jiarong15"},"content":"    private String[] updateToCommandConverterReadableFormat(","lastModifiedDate":"2021-08-30"},{"lineNumber":298,"author":{"gitId":"jiarong15"},"content":"            String identifier,","lastModifiedDate":"2021-08-31"},{"lineNumber":299,"author":{"gitId":"jiarong15"},"content":"            String[] finalFormatted) {","lastModifiedDate":"2021-08-31"},{"lineNumber":300,"author":{"gitId":"jiarong15"},"content":"        if (identifier.equals(TODO_IDENTIFIER)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":301,"author":{"gitId":"jiarong15"},"content":"            finalFormatted[0] \u003d \"todo\";","lastModifiedDate":"2021-08-24"},{"lineNumber":302,"author":{"gitId":"jiarong15"},"content":"            return finalFormatted;","lastModifiedDate":"2021-08-24"},{"lineNumber":303,"author":{"gitId":"jiarong15"},"content":"        } else if (identifier.equals(EVENT_IDENTIFIER)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":304,"author":{"gitId":"jiarong15"},"content":"            finalFormatted[0] \u003d \"event\";","lastModifiedDate":"2021-08-24"},{"lineNumber":305,"author":{"gitId":"jiarong15"},"content":"            return this.addIndicator(","lastModifiedDate":"2021-08-30"},{"lineNumber":306,"author":{"gitId":"jiarong15"},"content":"                    finalFormatted,","lastModifiedDate":"2021-08-31"},{"lineNumber":307,"author":{"gitId":"jiarong15"},"content":"                    INDEX_TO_MODIFY,","lastModifiedDate":"2021-09-07"},{"lineNumber":308,"author":{"gitId":"jiarong15"},"content":"                    INDICATOR_EVENT);","lastModifiedDate":"2021-08-30"},{"lineNumber":309,"author":{"gitId":"jiarong15"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":310,"author":{"gitId":"jiarong15"},"content":"            finalFormatted[0] \u003d \"deadline\";","lastModifiedDate":"2021-08-24"},{"lineNumber":311,"author":{"gitId":"jiarong15"},"content":"            return this.addIndicator(","lastModifiedDate":"2021-08-30"},{"lineNumber":312,"author":{"gitId":"jiarong15"},"content":"                    finalFormatted,","lastModifiedDate":"2021-08-31"},{"lineNumber":313,"author":{"gitId":"jiarong15"},"content":"                    INDEX_TO_MODIFY,","lastModifiedDate":"2021-09-07"},{"lineNumber":314,"author":{"gitId":"jiarong15"},"content":"                    INDICATOR_DEADLINE);","lastModifiedDate":"2021-08-30"},{"lineNumber":315,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":316,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":317,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":318,"author":{"gitId":"jiarong15"},"content":"    private boolean isTaskCompleted(String[] input) {","lastModifiedDate":"2021-08-24"},{"lineNumber":319,"author":{"gitId":"jiarong15"},"content":"        return (input[1].equals(INDICATOR_COMPLETE)) ? true : false;","lastModifiedDate":"2021-08-24"},{"lineNumber":320,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":321,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":322,"author":{"gitId":"jiarong15"},"content":"    private String[] addIndicator(","lastModifiedDate":"2021-08-30"},{"lineNumber":323,"author":{"gitId":"jiarong15"},"content":"            String[] input,","lastModifiedDate":"2021-08-31"},{"lineNumber":324,"author":{"gitId":"jiarong15"},"content":"            int index,","lastModifiedDate":"2021-08-31"},{"lineNumber":325,"author":{"gitId":"jiarong15"},"content":"            String indicator) {","lastModifiedDate":"2021-08-31"},{"lineNumber":326,"author":{"gitId":"jiarong15"},"content":"        String[] output \u003d new String[input.length + 1];","lastModifiedDate":"2021-08-24"},{"lineNumber":327,"author":{"gitId":"jiarong15"},"content":"        for (int i \u003d 0; i \u003c output.length; i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":328,"author":{"gitId":"jiarong15"},"content":"            if (i \u003d\u003d index) {","lastModifiedDate":"2021-08-24"},{"lineNumber":329,"author":{"gitId":"jiarong15"},"content":"                output[i] \u003d indicator;","lastModifiedDate":"2021-08-24"},{"lineNumber":330,"author":{"gitId":"jiarong15"},"content":"                continue;","lastModifiedDate":"2021-08-24"},{"lineNumber":331,"author":{"gitId":"jiarong15"},"content":"            } else if (i \u003e index) {","lastModifiedDate":"2021-08-24"},{"lineNumber":332,"author":{"gitId":"jiarong15"},"content":"                output[i] \u003d input[i - 1];","lastModifiedDate":"2021-08-24"},{"lineNumber":333,"author":{"gitId":"jiarong15"},"content":"                continue;","lastModifiedDate":"2021-08-24"},{"lineNumber":334,"author":{"gitId":"jiarong15"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":335,"author":{"gitId":"jiarong15"},"content":"            output[i] \u003d input[i];","lastModifiedDate":"2021-08-24"},{"lineNumber":336,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":337,"author":{"gitId":"jiarong15"},"content":"        return output;","lastModifiedDate":"2021-08-24"},{"lineNumber":338,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":339,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":340,"author":{"gitId":"jiarong15"},"content":"    private String[] removeDigitIndicator(String[] input) {","lastModifiedDate":"2021-08-24"},{"lineNumber":341,"author":{"gitId":"jiarong15"},"content":"        String[] output \u003d new String[input.length - 1];","lastModifiedDate":"2021-08-24"},{"lineNumber":342,"author":{"gitId":"jiarong15"},"content":"        for (int i \u003d 0; i \u003c input.length; i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":343,"author":{"gitId":"jiarong15"},"content":"            if (i \u003d\u003d 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":344,"author":{"gitId":"jiarong15"},"content":"                continue;","lastModifiedDate":"2021-08-24"},{"lineNumber":345,"author":{"gitId":"jiarong15"},"content":"            } else if (i \u003e 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":346,"author":{"gitId":"jiarong15"},"content":"                output[i - 1] \u003d input[i];","lastModifiedDate":"2021-08-24"},{"lineNumber":347,"author":{"gitId":"jiarong15"},"content":"                continue;","lastModifiedDate":"2021-08-24"},{"lineNumber":348,"author":{"gitId":"jiarong15"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":349,"author":{"gitId":"jiarong15"},"content":"            output[i] \u003d input[i];","lastModifiedDate":"2021-08-24"},{"lineNumber":350,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":351,"author":{"gitId":"jiarong15"},"content":"        return output;","lastModifiedDate":"2021-08-24"},{"lineNumber":352,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":353,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":354,"author":{"gitId":"jiarong15"},"content":"    private String formatStringToProperInput(String[] input) {","lastModifiedDate":"2021-08-24"},{"lineNumber":355,"author":{"gitId":"jiarong15"},"content":"        for (int i \u003d 0; i \u003c input.length; i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":356,"author":{"gitId":"jiarong15"},"content":"            input[i] \u003d input[i].trim();","lastModifiedDate":"2021-08-24"},{"lineNumber":357,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":358,"author":{"gitId":"jiarong15"},"content":"        return String.join(\" \", input);","lastModifiedDate":"2021-08-24"},{"lineNumber":359,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":360,"author":{"gitId":"jiarong15"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"jiarong15":360}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiarong15"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"jiarong15"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"jiarong15"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"jiarong15"},"content":"import duke.status.Status;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"jiarong15"},"content":"import duke.exceptions.DoneOutOfBoundsException;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"jiarong15"},"content":"import duke.exceptions.DeleteOutOfBoundsException;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"jiarong15"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"jiarong15"},"content":" * Class that keeps track of all the","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"jiarong15"},"content":" * tasks given by the user.","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"jiarong15"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"jiarong15"},"content":"public class TaskList {","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"jiarong15"},"content":"     * Keeps track of all the taskk that has been stored.","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"jiarong15"},"content":"    private final ArrayList\u003cTask\u003e allTasks;","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"jiarong15"},"content":"     * Initializes the TaskList class with","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"jiarong15"},"content":"     * arraylist to store tasks in future.","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"jiarong15"},"content":"     * @param allTasks arraylist of tasks to be stored.","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"jiarong15"},"content":"    public TaskList(ArrayList\u003cTask\u003e allTasks) {","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"jiarong15"},"content":"        this.allTasks \u003d allTasks;","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"jiarong15"},"content":"     * Overloaded constructor that returns a TaskList class","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"jiarong15"},"content":"     * with no prior tasks stored, which may due to reading","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"jiarong15"},"content":"     * error from storage class.","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"jiarong15"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"jiarong15"},"content":"        this.allTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"jiarong15"},"content":"     * Adds a newly input task by user into the","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"jiarong15"},"content":"     * task arraylist for keeping track.","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"jiarong15"},"content":"     * @param newTask Task object of the new task to be added","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"jiarong15"},"content":"     * @return boolean whether a new task has been added to the task arraylist","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"jiarong15"},"content":"    public boolean addNewTask(Task newTask) {","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"jiarong15"},"content":"        return allTasks.add(newTask);","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"jiarong15"},"content":"     * Returns all the tasks that users have input thus far.","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"jiarong15"},"content":"     * @return ArrayList of all the tasks","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"jiarong15"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"jiarong15"},"content":"        return allTasks;","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"jiarong15"},"content":"     * Returns the task that user wishes to mark as completed.","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"jiarong15"},"content":"     * @param taskNumber Integer of the position","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"jiarong15"},"content":"     * of task to be marked as completed","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"jiarong15"},"content":"     * @return Task that is marked as completed","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"jiarong15"},"content":"     * @throws DoneOutOfBoundsException if user specify the task number","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"jiarong15"},"content":"     * to be marked done is greater than the total tasks in the","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"jiarong15"},"content":"     * tracking arraylist","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"jiarong15"},"content":"    public Task markTaskAsDone(int taskNumber) throws DoneOutOfBoundsException {","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"jiarong15"},"content":"        if (taskNumber \u003e allTasks.size()) {","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"jiarong15"},"content":"            throw new DoneOutOfBoundsException(allTasks.size());","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"jiarong15"},"content":"        assert (taskNumber \u003e\u003d 1) : \"Number provided should not be 0!\";","lastModifiedDate":"2021-09-13"},{"lineNumber":70,"author":{"gitId":"jiarong15"},"content":"        Task updatedTask \u003d allTasks.","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"jiarong15"},"content":"        get(taskNumber - 1).","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"jiarong15"},"content":"        updateStatus(Status.COMPLETED.getStatus());","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"jiarong15"},"content":"        allTasks.set(taskNumber - 1, updatedTask);","lastModifiedDate":"2021-08-29"},{"lineNumber":74,"author":{"gitId":"jiarong15"},"content":"        return updatedTask;","lastModifiedDate":"2021-08-29"},{"lineNumber":75,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":76,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":77,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":78,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":79,"author":{"gitId":"jiarong15"},"content":"     * Returns the task that user wishes to remove.","lastModifiedDate":"2021-08-30"},{"lineNumber":80,"author":{"gitId":"jiarong15"},"content":"     * @param taskNumber Integer of the position of","lastModifiedDate":"2021-08-30"},{"lineNumber":81,"author":{"gitId":"jiarong15"},"content":"     * task to be removed from tracking arraylist.","lastModifiedDate":"2021-08-30"},{"lineNumber":82,"author":{"gitId":"jiarong15"},"content":"     * @return Task that is going to be removed from tracking arraylist","lastModifiedDate":"2021-08-30"},{"lineNumber":83,"author":{"gitId":"jiarong15"},"content":"     * @throws DeleteOutOfBoundsException if user specify the task","lastModifiedDate":"2021-08-31"},{"lineNumber":84,"author":{"gitId":"jiarong15"},"content":"     * number to be deleted is greater than the total tasks","lastModifiedDate":"2021-08-31"},{"lineNumber":85,"author":{"gitId":"jiarong15"},"content":"     * in the tracking arraylist","lastModifiedDate":"2021-08-31"},{"lineNumber":86,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":87,"author":{"gitId":"jiarong15"},"content":"    public Task deleteTask(","lastModifiedDate":"2021-08-30"},{"lineNumber":88,"author":{"gitId":"jiarong15"},"content":"            int taskNumber) throws DeleteOutOfBoundsException {","lastModifiedDate":"2021-08-30"},{"lineNumber":89,"author":{"gitId":"jiarong15"},"content":"        if (taskNumber \u003e allTasks.size()) {","lastModifiedDate":"2021-08-29"},{"lineNumber":90,"author":{"gitId":"jiarong15"},"content":"            throw new DeleteOutOfBoundsException(allTasks.size());","lastModifiedDate":"2021-08-29"},{"lineNumber":91,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":92,"author":{"gitId":"jiarong15"},"content":"        assert (taskNumber \u003e\u003d 1) : \"Number provided should not be 0!\";","lastModifiedDate":"2021-09-13"},{"lineNumber":93,"author":{"gitId":"jiarong15"},"content":"        return allTasks.remove(taskNumber - 1);","lastModifiedDate":"2021-08-29"},{"lineNumber":94,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":95,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":96,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":97,"author":{"gitId":"jiarong15"},"content":"     * returns length of arraylist of tasks that are stored.","lastModifiedDate":"2021-08-30"},{"lineNumber":98,"author":{"gitId":"jiarong15"},"content":"     * @return Integer of the length of all the tasks user has input","lastModifiedDate":"2021-08-30"},{"lineNumber":99,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":100,"author":{"gitId":"jiarong15"},"content":"    public int getTaskListLength() {","lastModifiedDate":"2021-08-29"},{"lineNumber":101,"author":{"gitId":"jiarong15"},"content":"        return allTasks.size();","lastModifiedDate":"2021-08-29"},{"lineNumber":102,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":103,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":104,"author":{"gitId":"jiarong15"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":105,"author":{"gitId":"jiarong15"},"content":"    public String toString() {","lastModifiedDate":"2021-08-29"},{"lineNumber":106,"author":{"gitId":"jiarong15"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-08-29"},{"lineNumber":107,"author":{"gitId":"jiarong15"},"content":"        for (int i \u003d 1; i \u003c\u003d allTasks.size(); i++) {","lastModifiedDate":"2021-08-29"},{"lineNumber":108,"author":{"gitId":"jiarong15"},"content":"            if (i \u003d\u003d allTasks.size()) {","lastModifiedDate":"2021-08-29"},{"lineNumber":109,"author":{"gitId":"jiarong15"},"content":"                sb.append(i + \". \" + allTasks.get(i - 1) + \"\\n\");","lastModifiedDate":"2021-08-29"},{"lineNumber":110,"author":{"gitId":"jiarong15"},"content":"                continue;","lastModifiedDate":"2021-08-29"},{"lineNumber":111,"author":{"gitId":"jiarong15"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":112,"author":{"gitId":"jiarong15"},"content":"            sb.append(i + \". \" + allTasks.get(i - 1) + \"\\n\");","lastModifiedDate":"2021-08-29"},{"lineNumber":113,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":114,"author":{"gitId":"jiarong15"},"content":"        return sb.toString();","lastModifiedDate":"2021-08-29"},{"lineNumber":115,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":116,"author":{"gitId":"jiarong15"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"jiarong15":116}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiarong15"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"jiarong15"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"jiarong15"},"content":" * Class that handles the interaction with the user","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"jiarong15"},"content":" * by displaying the information and receiving user inputs.","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"jiarong15"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"jiarong15"},"content":"public class Ui {","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"jiarong15"},"content":"     * Default message when duke starts up.","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"jiarong15"},"content":"    private static final String GREETING_MESSAGE \u003d \"Hello! I\u0027m Duke\"","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"jiarong15"},"content":"            + \"\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"jiarong15"},"content":"            + \"What can I do for you?\";","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"jiarong15"},"content":"     * Instantiates a new UI class.","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"jiarong15"},"content":"    public Ui() { }","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"jiarong15"},"content":"     * Prints out the welcome message when","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"jiarong15"},"content":"     * user first uses the bot.","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"jiarong15"},"content":"     * @return String the start up message.","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"jiarong15"},"content":"    protected String showWelcomeMsg() {","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"jiarong15"},"content":"        return GREETING_MESSAGE;","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"jiarong15"},"content":"     * Displays all the task matching to the user input date.","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"jiarong15"},"content":"     * @param displayMessage String of display message.","lastModifiedDate":"2021-09-13"},{"lineNumber":33,"author":{"gitId":"jiarong15"},"content":"     * @return String of final displayed message on GUI.","lastModifiedDate":"2021-09-13"},{"lineNumber":34,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"jiarong15"},"content":"    public String displayTaskMatchingDate(","lastModifiedDate":"2021-09-11"},{"lineNumber":36,"author":{"gitId":"jiarong15"},"content":"            String displayMessage) {","lastModifiedDate":"2021-09-11"},{"lineNumber":37,"author":{"gitId":"jiarong15"},"content":"        return \"Here are the tasks matching your search date:\"","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"jiarong15"},"content":"                + \"\\n\"","lastModifiedDate":"2021-09-11"},{"lineNumber":39,"author":{"gitId":"jiarong15"},"content":"                + displayMessage;","lastModifiedDate":"2021-09-11"},{"lineNumber":40,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":41,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":42,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"jiarong15"},"content":"     * Prints out that reading from storage","lastModifiedDate":"2021-09-13"},{"lineNumber":44,"author":{"gitId":"jiarong15"},"content":"     * of past stored tasks have failed.","lastModifiedDate":"2021-09-13"},{"lineNumber":45,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"jiarong15"},"content":"    protected void showLoadingError() {","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"jiarong15"},"content":"        System.out.println(\"Error in loading task in local disk!\");","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"jiarong15"},"content":"     * Prints the exit message when user exits the bot","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"jiarong15"},"content":"     * and closes the scanner classes.","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"jiarong15"},"content":"     * @return String bye message when exiting.","lastModifiedDate":"2021-09-13"},{"lineNumber":54,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"jiarong15"},"content":"    public String displayByeMessage() {","lastModifiedDate":"2021-09-05"},{"lineNumber":56,"author":{"gitId":"jiarong15"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-09-05"},{"lineNumber":57,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"jiarong15"},"content":"     * Prints the task that is marked completed by user.","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"jiarong15"},"content":"     * @param completedMessage String of task that is completed.","lastModifiedDate":"2021-09-13"},{"lineNumber":62,"author":{"gitId":"jiarong15"},"content":"     * @return String of a specific completed task.","lastModifiedDate":"2021-09-13"},{"lineNumber":63,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"jiarong15"},"content":"    public String displayCompletedMessage(String completedMessage) {","lastModifiedDate":"2021-09-05"},{"lineNumber":65,"author":{"gitId":"jiarong15"},"content":"        return \"Nice! I\u0027ve marked this task as done:\"","lastModifiedDate":"2021-09-05"},{"lineNumber":66,"author":{"gitId":"jiarong15"},"content":"                + \"\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"jiarong15"},"content":"                + completedMessage;","lastModifiedDate":"2021-09-05"},{"lineNumber":68,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":71,"author":{"gitId":"jiarong15"},"content":"     * Prints the task that is going to be deleted by user.","lastModifiedDate":"2021-08-30"},{"lineNumber":72,"author":{"gitId":"jiarong15"},"content":"     * @param deleteMessage String of task to be deleted","lastModifiedDate":"2021-08-30"},{"lineNumber":73,"author":{"gitId":"jiarong15"},"content":"     * @param taskLength Integer of length of taskList ArrayList","lastModifiedDate":"2021-08-30"},{"lineNumber":74,"author":{"gitId":"jiarong15"},"content":"     * @return String of the task deleted.","lastModifiedDate":"2021-09-13"},{"lineNumber":75,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":76,"author":{"gitId":"jiarong15"},"content":"    public String displayDeleteMessage(String deleteMessage, int taskLength) {","lastModifiedDate":"2021-09-05"},{"lineNumber":77,"author":{"gitId":"jiarong15"},"content":"        return \"Noted. I\u0027ve removed this task\"","lastModifiedDate":"2021-09-05"},{"lineNumber":78,"author":{"gitId":"jiarong15"},"content":"                + \"\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":79,"author":{"gitId":"jiarong15"},"content":"                + \"Now you have \"","lastModifiedDate":"2021-08-31"},{"lineNumber":80,"author":{"gitId":"jiarong15"},"content":"                + taskLength","lastModifiedDate":"2021-08-31"},{"lineNumber":81,"author":{"gitId":"jiarong15"},"content":"                + \" tasks in the list.\";","lastModifiedDate":"2021-09-05"},{"lineNumber":82,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":83,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":84,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":85,"author":{"gitId":"jiarong15"},"content":"     * Prints the task that user has just","lastModifiedDate":"2021-09-13"},{"lineNumber":86,"author":{"gitId":"jiarong15"},"content":"     * specified to be stored in TaskList.","lastModifiedDate":"2021-09-13"},{"lineNumber":87,"author":{"gitId":"jiarong15"},"content":"     * @param displayMessage String of task to","lastModifiedDate":"2021-09-13"},{"lineNumber":88,"author":{"gitId":"jiarong15"},"content":"     * be added to TaskList.","lastModifiedDate":"2021-09-13"},{"lineNumber":89,"author":{"gitId":"jiarong15"},"content":"     * @param taskLength Integer of length","lastModifiedDate":"2021-09-13"},{"lineNumber":90,"author":{"gitId":"jiarong15"},"content":"     * of taskList ArrayList.","lastModifiedDate":"2021-09-13"},{"lineNumber":91,"author":{"gitId":"jiarong15"},"content":"     * @return String of the task added.","lastModifiedDate":"2021-09-13"},{"lineNumber":92,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":93,"author":{"gitId":"jiarong15"},"content":"    public String displayTaskInstructions(","lastModifiedDate":"2021-09-05"},{"lineNumber":94,"author":{"gitId":"jiarong15"},"content":"            String displayMessage,","lastModifiedDate":"2021-08-31"},{"lineNumber":95,"author":{"gitId":"jiarong15"},"content":"            int taskLength) {","lastModifiedDate":"2021-08-31"},{"lineNumber":96,"author":{"gitId":"jiarong15"},"content":"        return \"Got it. I\u0027ve added this task:\"","lastModifiedDate":"2021-09-05"},{"lineNumber":97,"author":{"gitId":"jiarong15"},"content":"                + \"\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":98,"author":{"gitId":"jiarong15"},"content":"                + displayMessage","lastModifiedDate":"2021-08-31"},{"lineNumber":99,"author":{"gitId":"jiarong15"},"content":"                + \"\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":100,"author":{"gitId":"jiarong15"},"content":"                + \"Now you have \"","lastModifiedDate":"2021-08-31"},{"lineNumber":101,"author":{"gitId":"jiarong15"},"content":"                + taskLength","lastModifiedDate":"2021-08-31"},{"lineNumber":102,"author":{"gitId":"jiarong15"},"content":"                + \" tasks in the list.\";","lastModifiedDate":"2021-09-05"},{"lineNumber":103,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":104,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":105,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":106,"author":{"gitId":"jiarong15"},"content":"     * Prints out all the tasks stored by user","lastModifiedDate":"2021-09-13"},{"lineNumber":107,"author":{"gitId":"jiarong15"},"content":"     * in chronological order.","lastModifiedDate":"2021-09-13"},{"lineNumber":108,"author":{"gitId":"jiarong15"},"content":"     * @param listMessage String of the all the","lastModifiedDate":"2021-09-13"},{"lineNumber":109,"author":{"gitId":"jiarong15"},"content":"     * tasks stored in taskList.","lastModifiedDate":"2021-09-13"},{"lineNumber":110,"author":{"gitId":"jiarong15"},"content":"     * @return String of all the tasks in list.","lastModifiedDate":"2021-09-13"},{"lineNumber":111,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":112,"author":{"gitId":"jiarong15"},"content":"    public String displayTaskList(String listMessage) {","lastModifiedDate":"2021-09-05"},{"lineNumber":113,"author":{"gitId":"jiarong15"},"content":"        return \"Here are the tasks in your list:\"","lastModifiedDate":"2021-09-05"},{"lineNumber":114,"author":{"gitId":"jiarong15"},"content":"                + \"\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":115,"author":{"gitId":"jiarong15"},"content":"                + listMessage;","lastModifiedDate":"2021-09-05"},{"lineNumber":116,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":117,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":118,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":119,"author":{"gitId":"jiarong15"},"content":"     * Displays the task found.","lastModifiedDate":"2021-09-13"},{"lineNumber":120,"author":{"gitId":"jiarong15"},"content":"     * @param tasksFound String of tasks.","lastModifiedDate":"2021-09-13"},{"lineNumber":121,"author":{"gitId":"jiarong15"},"content":"     * @return String of all the tasks found through","lastModifiedDate":"2021-09-13"},{"lineNumber":122,"author":{"gitId":"jiarong15"},"content":"     * find command.","lastModifiedDate":"2021-09-13"},{"lineNumber":123,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":124,"author":{"gitId":"jiarong15"},"content":"    public String displayFoundTasks(String tasksFound) {","lastModifiedDate":"2021-09-05"},{"lineNumber":125,"author":{"gitId":"jiarong15"},"content":"        return \"Here are the matching tasks in your list:\"","lastModifiedDate":"2021-09-05"},{"lineNumber":126,"author":{"gitId":"jiarong15"},"content":"                + \"\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":127,"author":{"gitId":"jiarong15"},"content":"                + tasksFound;","lastModifiedDate":"2021-09-05"},{"lineNumber":128,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":129,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":130,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":131,"author":{"gitId":"jiarong15"},"content":"     *Displays to GUI of error message when error","lastModifiedDate":"2021-09-13"},{"lineNumber":132,"author":{"gitId":"jiarong15"},"content":"     * is encountered.","lastModifiedDate":"2021-09-13"},{"lineNumber":133,"author":{"gitId":"jiarong15"},"content":"     * @param errorMessage String of error message","lastModifiedDate":"2021-09-13"},{"lineNumber":134,"author":{"gitId":"jiarong15"},"content":"     * @return String error message when error","lastModifiedDate":"2021-09-13"},{"lineNumber":135,"author":{"gitId":"jiarong15"},"content":"     * is encountered.","lastModifiedDate":"2021-09-13"},{"lineNumber":136,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":137,"author":{"gitId":"jiarong15"},"content":"    public String displayErrorMessage(String errorMessage) {","lastModifiedDate":"2021-09-05"},{"lineNumber":138,"author":{"gitId":"jiarong15"},"content":"        return errorMessage;","lastModifiedDate":"2021-09-05"},{"lineNumber":139,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":140,"author":{"gitId":"jiarong15"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"jiarong15":140}},{"path":"src/main/java/duke/assignment/AssignmentType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiarong15"},"content":"package duke.assignment;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":3,"author":{"gitId":"jiarong15"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"jiarong15"},"content":" * Enumeration to indicate the type of task.","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"jiarong15"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"jiarong15"},"content":"public enum AssignmentType {","lastModifiedDate":"2021-08-20"},{"lineNumber":7,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"jiarong15"},"content":"     * TODO marks a to do task input by user.","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"jiarong15"},"content":"     * EVENT marks a to do task input by user.","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"jiarong15"},"content":"     * DEADLINE marks a to do task input by user.","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"jiarong15"},"content":"    TODO(\"[T]\"), EVENT(\"[E]\"), DEADLINE(\"[D]\");","lastModifiedDate":"2021-08-20"},{"lineNumber":13,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"jiarong15"},"content":"     * Stores the string format of each task.","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"jiarong15"},"content":"     * of [T], [E], [D]","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"jiarong15"},"content":"    private final String type;","lastModifiedDate":"2021-08-20"},{"lineNumber":19,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":20,"author":{"gitId":"jiarong15"},"content":"    AssignmentType(String type) {","lastModifiedDate":"2021-08-20"},{"lineNumber":21,"author":{"gitId":"jiarong15"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-08-20"},{"lineNumber":22,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":23,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":24,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"jiarong15"},"content":"     * returns the task type in their corresponding label format.","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"jiarong15"},"content":"     * @return String of the Task type","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"jiarong15"},"content":"    public String getStatus() {","lastModifiedDate":"2021-08-20"},{"lineNumber":29,"author":{"gitId":"jiarong15"},"content":"        return this.type;","lastModifiedDate":"2021-08-20"},{"lineNumber":30,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":31,"author":{"gitId":"jiarong15"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"jiarong15":31}},{"path":"src/main/java/duke/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiarong15"},"content":"package duke.commands;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"jiarong15"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"jiarong15"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"jiarong15"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"jiarong15"},"content":"/**","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"jiarong15"},"content":" * Class that specifies the properties","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"jiarong15"},"content":" * of a bye command.","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"jiarong15"},"content":" */","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"jiarong15"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":13,"author":{"gitId":"jiarong15"},"content":"     * Calls parent class to initialise the","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"jiarong15"},"content":"     * bye command with description \"bye\".","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"jiarong15"},"content":"     * @param desc String description of","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"jiarong15"},"content":"     * bye.","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"jiarong15"},"content":"    public ByeCommand(String desc) {","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"jiarong15"},"content":"        super(desc);","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"jiarong15"},"content":"     * Indicates whether the program should","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"jiarong15"},"content":"     * stop running, and in this is case yes.","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"jiarong15"},"content":"     * @return boolean that this command","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"jiarong15"},"content":"     * should exit the application or not.","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"jiarong15"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"jiarong15"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"jiarong15"},"content":"        return true;","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":34,"author":{"gitId":"jiarong15"},"content":"     * Displays the bye message when exiting the program.","lastModifiedDate":"2021-09-13"},{"lineNumber":35,"author":{"gitId":"jiarong15"},"content":"     * @param tasks TaskList to update change given by user","lastModifiedDate":"2021-09-13"},{"lineNumber":36,"author":{"gitId":"jiarong15"},"content":"     * @param ui Ui class to display messages to user","lastModifiedDate":"2021-09-13"},{"lineNumber":37,"author":{"gitId":"jiarong15"},"content":"     * @param storage Storage updates each time a command make changes","lastModifiedDate":"2021-09-13"},{"lineNumber":38,"author":{"gitId":"jiarong15"},"content":"     * to the existing stored tasks","lastModifiedDate":"2021-09-13"},{"lineNumber":39,"author":{"gitId":"jiarong15"},"content":"     * @return String of executed bye command.","lastModifiedDate":"2021-09-13"},{"lineNumber":40,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":41,"author":{"gitId":"jiarong15"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"jiarong15"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"jiarong15"},"content":"        return ui.displayByeMessage();","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"jiarong15"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"jiarong15":45}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiarong15"},"content":"package duke.commands;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"jiarong15"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"jiarong15"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"jiarong15"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"jiarong15"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"jiarong15"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"jiarong15"},"content":" * Abstract class that specifies the properties of a command.","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"jiarong15"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"jiarong15"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":13,"author":{"gitId":"jiarong15"},"content":"     * description attribute of the command.","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"jiarong15"},"content":"    protected final String commandDescription;","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"jiarong15"},"content":"     * Initializes the Command class with user input.","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"jiarong15"},"content":"     * @param commandDescription String of the user input.","lastModifiedDate":"2021-09-13"},{"lineNumber":21,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"jiarong15"},"content":"    Command(String commandDescription) {","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"jiarong15"},"content":"        this.commandDescription \u003d commandDescription;","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"jiarong15"},"content":"     * returns if the command is an exit command","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"jiarong15"},"content":"     * to stop the duke bot from further running.","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"jiarong15"},"content":"     * @return boolean if the command is an exit command.","lastModifiedDate":"2021-09-13"},{"lineNumber":31,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"jiarong15"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"jiarong15"},"content":"     * Does potentially 3 operations of displaying messages to user,","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"jiarong15"},"content":"     * adding new task to stored tasks and updating of local file tasks.","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"jiarong15"},"content":"     * @param tasks TaskList to update change given by user.","lastModifiedDate":"2021-09-13"},{"lineNumber":38,"author":{"gitId":"jiarong15"},"content":"     * @param ui Ui class to display messages to user.","lastModifiedDate":"2021-09-13"},{"lineNumber":39,"author":{"gitId":"jiarong15"},"content":"     * @param storage Storage updates each time a command make changes","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"jiarong15"},"content":"     * to the existing stored tasks.","lastModifiedDate":"2021-09-13"},{"lineNumber":41,"author":{"gitId":"jiarong15"},"content":"     * @throws DukeException if any of the commands come up erroneous.","lastModifiedDate":"2021-09-13"},{"lineNumber":42,"author":{"gitId":"jiarong15"},"content":"     * @return String of task executed.","lastModifiedDate":"2021-09-13"},{"lineNumber":43,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"jiarong15"},"content":"    public abstract String execute(TaskList tasks,","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"jiarong15"},"content":"    Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"jiarong15"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"jiarong15":47}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiarong15"},"content":"package duke.commands;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"jiarong15"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"jiarong15"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"jiarong15"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"jiarong15"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"jiarong15"},"content":"import duke.exceptions.DeleteOutOfBoundsException;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"jiarong15"},"content":"import duke.exceptions.WrongDeleteFormatException;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"jiarong15"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"jiarong15"},"content":"    public DeleteCommand(String desc) {","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"jiarong15"},"content":"        super(desc);","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"jiarong15"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"jiarong15"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"jiarong15"},"content":"        return false;","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"jiarong15"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"jiarong15"},"content":"    public String execute(","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"jiarong15"},"content":"            TaskList tasks, Ui ui,","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"jiarong15"},"content":"            Storage storage) throws WrongDeleteFormatException,","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"jiarong15"},"content":"            DeleteOutOfBoundsException {","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"jiarong15"},"content":"        String[] instructions \u003d this.commandDescription.split(\" \");","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"jiarong15"},"content":"        if (instructions.length !\u003d 2) {","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"jiarong15"},"content":"            throw new WrongDeleteFormatException();","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"jiarong15"},"content":"        int taskNumber \u003d Integer.valueOf(instructions[1]);","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"jiarong15"},"content":"        Task taskRemoved \u003d tasks.deleteTask(taskNumber);","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"jiarong15"},"content":"        storage.updateStorageList(tasks.getTaskList());","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"jiarong15"},"content":"        return ui.displayDeleteMessage(taskRemoved.toString(), tasks.getTaskListLength());","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"jiarong15"},"content":"    ","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"jiarong15"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"jiarong15":36}},{"path":"src/main/java/duke/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiarong15"},"content":"package duke.commands;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"jiarong15"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"jiarong15"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"jiarong15"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"jiarong15"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"jiarong15"},"content":"import duke.exceptions.DoneOutOfBoundsException;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"jiarong15"},"content":"import duke.exceptions.WrongDoneFormatException;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"jiarong15"},"content":"/**","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"jiarong15"},"content":" * Class that specifies the properties","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"jiarong15"},"content":" * of a done command.","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"jiarong15"},"content":" */","lastModifiedDate":"2021-09-13"},{"lineNumber":13,"author":{"gitId":"jiarong15"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"jiarong15"},"content":"     * Calls parent class to initialise the","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"jiarong15"},"content":"     * done command with description \"done\"","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"jiarong15"},"content":"     * followed by integer.","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"jiarong15"},"content":"     * @param desc String description of","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"jiarong15"},"content":"     * done command.","lastModifiedDate":"2021-09-13"},{"lineNumber":21,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"jiarong15"},"content":"    public DoneCommand(String desc) {","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"jiarong15"},"content":"        super(desc);","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"jiarong15"},"content":"     * Indicates whether the program should","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"jiarong15"},"content":"     * stop running, and in this is case no.","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"jiarong15"},"content":"     * @return boolean that this command","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"jiarong15"},"content":"     * should exit the application or not.","lastModifiedDate":"2021-09-13"},{"lineNumber":31,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":32,"author":{"gitId":"jiarong15"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"jiarong15"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"jiarong15"},"content":"        return false;","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":38,"author":{"gitId":"jiarong15"},"content":"     * marks selected tasks as done and return all tasks.","lastModifiedDate":"2021-09-13"},{"lineNumber":39,"author":{"gitId":"jiarong15"},"content":"     * @param tasks TaskList to update change given by user.","lastModifiedDate":"2021-09-13"},{"lineNumber":40,"author":{"gitId":"jiarong15"},"content":"     * @param ui Ui class to display messages to user.","lastModifiedDate":"2021-09-13"},{"lineNumber":41,"author":{"gitId":"jiarong15"},"content":"     * @param storage Storage updates each time a command make changes","lastModifiedDate":"2021-09-13"},{"lineNumber":42,"author":{"gitId":"jiarong15"},"content":"     * to the existing stored tasks.","lastModifiedDate":"2021-09-13"},{"lineNumber":43,"author":{"gitId":"jiarong15"},"content":"     * @return String of all tasks with the task","lastModifiedDate":"2021-09-13"},{"lineNumber":44,"author":{"gitId":"jiarong15"},"content":"     * updated to done as [X].","lastModifiedDate":"2021-09-13"},{"lineNumber":45,"author":{"gitId":"jiarong15"},"content":"     * @throws WrongDoneFormatException if done","lastModifiedDate":"2021-09-13"},{"lineNumber":46,"author":{"gitId":"jiarong15"},"content":"     * command is given more than 2 fields.","lastModifiedDate":"2021-09-13"},{"lineNumber":47,"author":{"gitId":"jiarong15"},"content":"     * @throws DoneOutOfBoundsException if user gives an","lastModifiedDate":"2021-09-13"},{"lineNumber":48,"author":{"gitId":"jiarong15"},"content":"     * integer greater than the number of tasks","lastModifiedDate":"2021-09-13"},{"lineNumber":49,"author":{"gitId":"jiarong15"},"content":"     * stored.","lastModifiedDate":"2021-09-13"},{"lineNumber":50,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":51,"author":{"gitId":"jiarong15"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"jiarong15"},"content":"    public String execute(","lastModifiedDate":"2021-09-05"},{"lineNumber":53,"author":{"gitId":"jiarong15"},"content":"            TaskList tasks, Ui ui,","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"jiarong15"},"content":"            Storage storage) throws WrongDoneFormatException,","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"jiarong15"},"content":"            DoneOutOfBoundsException {","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"jiarong15"},"content":"        String[] instructions \u003d this.commandDescription.split(\" \");","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"jiarong15"},"content":"        if (instructions.length !\u003d 2) {","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"jiarong15"},"content":"            throw new WrongDoneFormatException();","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"jiarong15"},"content":"        int taskNumber \u003d Integer.valueOf(instructions[1]);","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"jiarong15"},"content":"        Task completedTask \u003d tasks.markTaskAsDone(taskNumber);","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"jiarong15"},"content":"        storage.updateStorageList(tasks.getTaskList());","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"jiarong15"},"content":"        return ui.displayCompletedMessage(completedTask.toString());","lastModifiedDate":"2021-09-05"},{"lineNumber":64,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"jiarong15"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"jiarong15":65}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiarong15"},"content":"package duke.commands;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"jiarong15"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"jiarong15"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"jiarong15"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"jiarong15"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"jiarong15"},"content":"import duke.exceptions.NoTaskMatchException;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"jiarong15"},"content":"import duke.exceptions.WrongFindFormatException;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"jiarong15"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"jiarong15"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"jiarong15"},"content":"/**","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"jiarong15"},"content":" * Class that specifies the properties","lastModifiedDate":"2021-09-13"},{"lineNumber":13,"author":{"gitId":"jiarong15"},"content":" * of a find command.","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"jiarong15"},"content":" */","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"jiarong15"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"jiarong15"},"content":"     * Calls parent class to initialise the","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"jiarong15"},"content":"     * find command with description \"find\"","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"jiarong15"},"content":"     * followed by user description.","lastModifiedDate":"2021-09-13"},{"lineNumber":21,"author":{"gitId":"jiarong15"},"content":"     * @param desc String description of","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"jiarong15"},"content":"     * find.","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"jiarong15"},"content":"    public FindCommand(String desc) {","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"jiarong15"},"content":"        super(desc);","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"jiarong15"},"content":"     * Indicates whether the program should","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"jiarong15"},"content":"     * stop running, and in this is case no.","lastModifiedDate":"2021-09-13"},{"lineNumber":31,"author":{"gitId":"jiarong15"},"content":"     * @return boolean that this command","lastModifiedDate":"2021-09-13"},{"lineNumber":32,"author":{"gitId":"jiarong15"},"content":"     * should exit the application or not.","lastModifiedDate":"2021-09-13"},{"lineNumber":33,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":34,"author":{"gitId":"jiarong15"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"jiarong15"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"jiarong15"},"content":"        return false;","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"jiarong15"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"jiarong15"},"content":"    public String execute(","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"jiarong15"},"content":"        TaskList tasks, Ui ui,","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"jiarong15"},"content":"        Storage storage) throws WrongFindFormatException,","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"jiarong15"},"content":"        NoTaskMatchException {","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"jiarong15"},"content":"        String[] instructions \u003d this.commandDescription.split(\" \");","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"jiarong15"},"content":"        if (instructions.length \u003c\u003d 1) {","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"jiarong15"},"content":"            throw new WrongFindFormatException();","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"jiarong15"},"content":"        String toFind \u003d String.join(\" \",","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"jiarong15"},"content":"                Arrays.copyOfRange(instructions,","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"jiarong15"},"content":"                        1,","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"jiarong15"},"content":"                        instructions.length));","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"jiarong15"},"content":"        String displayString \u003d this.convertMatchingTaskToStringDisplay(","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"jiarong15"},"content":"            toFind, tasks);","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"jiarong15"},"content":"        if (displayString.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"jiarong15"},"content":"            throw new NoTaskMatchException();","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"jiarong15"},"content":"        return ui.displayFoundTasks(displayString);","lastModifiedDate":"2021-09-05"},{"lineNumber":58,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"jiarong15"},"content":"    private String convertMatchingTaskToStringDisplay(","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"jiarong15"},"content":"        String searchString, TaskList tasks) {","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"jiarong15"},"content":"        StringBuilder sb \u003d new StringBuilder(\"\");","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"jiarong15"},"content":"        ArrayList\u003cTask\u003e taskItems \u003d tasks.getTaskList();","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"jiarong15"},"content":"        int counter \u003d 1;","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"jiarong15"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.getTaskListLength(); i++) {","lastModifiedDate":"2021-08-30"},{"lineNumber":66,"author":{"gitId":"jiarong15"},"content":"            Task task \u003d taskItems.get(i - 1);","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"jiarong15"},"content":"            String taskString \u003d task.toString();","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"jiarong15"},"content":"            if (taskString.contains(searchString) \u0026\u0026 counter \u003d\u003d 1) {","lastModifiedDate":"2021-09-13"},{"lineNumber":69,"author":{"gitId":"jiarong15"},"content":"                sb.append(counter + \". \" + taskString);","lastModifiedDate":"2021-08-30"},{"lineNumber":70,"author":{"gitId":"jiarong15"},"content":"                counter++;","lastModifiedDate":"2021-09-13"},{"lineNumber":71,"author":{"gitId":"jiarong15"},"content":"            } else if (taskString.contains(searchString) \u0026\u0026 counter !\u003d 1) {","lastModifiedDate":"2021-09-13"},{"lineNumber":72,"author":{"gitId":"jiarong15"},"content":"                sb.append(\"\\n\" + counter + \". \" + taskString);","lastModifiedDate":"2021-08-30"},{"lineNumber":73,"author":{"gitId":"jiarong15"},"content":"                counter++;","lastModifiedDate":"2021-08-30"},{"lineNumber":74,"author":{"gitId":"jiarong15"},"content":"            }","lastModifiedDate":"2021-08-30"},{"lineNumber":75,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":76,"author":{"gitId":"jiarong15"},"content":"        return sb.toString();","lastModifiedDate":"2021-08-30"},{"lineNumber":77,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":78,"author":{"gitId":"jiarong15"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"jiarong15":78}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiarong15"},"content":"package duke.commands;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"jiarong15"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"jiarong15"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"jiarong15"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"jiarong15"},"content":"/**","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"jiarong15"},"content":" * Class that specifies the properties","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"jiarong15"},"content":" * of a list command.","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"jiarong15"},"content":" */","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"jiarong15"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":13,"author":{"gitId":"jiarong15"},"content":"     * Calls parent class to initialise the","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"jiarong15"},"content":"     * list command with description \"list\".","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"jiarong15"},"content":"     * @param desc String description of","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"jiarong15"},"content":"     * list.","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"jiarong15"},"content":"    public ListCommand(String desc) {","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"jiarong15"},"content":"        super(desc);","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"jiarong15"},"content":"     * Indicates whether the program should","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"jiarong15"},"content":"     * stop running, and in this is case no.","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"jiarong15"},"content":"     * @return boolean that this command","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"jiarong15"},"content":"     * should exit the application or not.","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"jiarong15"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"jiarong15"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"jiarong15"},"content":"        return false;","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":34,"author":{"gitId":"jiarong15"},"content":"     * Displays all the task previously stored by user.","lastModifiedDate":"2021-09-13"},{"lineNumber":35,"author":{"gitId":"jiarong15"},"content":"     * @param tasks TaskList to update change given by user.","lastModifiedDate":"2021-09-13"},{"lineNumber":36,"author":{"gitId":"jiarong15"},"content":"     * @param ui Ui class to display messages to user.","lastModifiedDate":"2021-09-13"},{"lineNumber":37,"author":{"gitId":"jiarong15"},"content":"     * @param storage Storage updates each time a command","lastModifiedDate":"2021-09-13"},{"lineNumber":38,"author":{"gitId":"jiarong15"},"content":"     * make changes to the existing stored tasks.","lastModifiedDate":"2021-09-13"},{"lineNumber":39,"author":{"gitId":"jiarong15"},"content":"     * @return String of all the tasks.","lastModifiedDate":"2021-09-13"},{"lineNumber":40,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":41,"author":{"gitId":"jiarong15"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"jiarong15"},"content":"    public String execute(","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"jiarong15"},"content":"            TaskList tasks,","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"jiarong15"},"content":"            Ui ui,","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"jiarong15"},"content":"            Storage storage) {","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"jiarong15"},"content":"        return ui.displayTaskList(tasks.toString());","lastModifiedDate":"2021-09-05"},{"lineNumber":47,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"jiarong15"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"jiarong15":49}},{"path":"src/main/java/duke/commands/ScheduleCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiarong15"},"content":"package duke.commands;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"jiarong15"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"jiarong15"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"jiarong15"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"jiarong15"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"jiarong15"},"content":"import java.util.Optional;","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"jiarong15"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"jiarong15"},"content":"import duke.date.Date;","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"jiarong15"},"content":"import duke.exceptions.WrongDateFormatException;","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"jiarong15"},"content":"import duke.exceptions.WrongScheduleFormatException;","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"jiarong15"},"content":"/**","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"jiarong15"},"content":" * Class that specifies the properties","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"jiarong15"},"content":" * of a schedule command.","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"jiarong15"},"content":" */","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"jiarong15"},"content":"public class ScheduleCommand extends Command {","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"jiarong15"},"content":"     * Calls parent class to initialise the","lastModifiedDate":"2021-09-13"},{"lineNumber":21,"author":{"gitId":"jiarong15"},"content":"     * bye command with description \"schedule\"","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"jiarong15"},"content":"     * followed by a date input.","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"jiarong15"},"content":"     * @param desc String description of","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"jiarong15"},"content":"     * schedule.","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"jiarong15"},"content":"    public ScheduleCommand(String desc) {","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"jiarong15"},"content":"        super(desc);","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":31,"author":{"gitId":"jiarong15"},"content":"     * Indicates whether the program should","lastModifiedDate":"2021-09-13"},{"lineNumber":32,"author":{"gitId":"jiarong15"},"content":"     * stop running, and in this is case no.","lastModifiedDate":"2021-09-13"},{"lineNumber":33,"author":{"gitId":"jiarong15"},"content":"     * @return boolean that this command","lastModifiedDate":"2021-09-13"},{"lineNumber":34,"author":{"gitId":"jiarong15"},"content":"     * should exit the application or not.","lastModifiedDate":"2021-09-13"},{"lineNumber":35,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":36,"author":{"gitId":"jiarong15"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":37,"author":{"gitId":"jiarong15"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"jiarong15"},"content":"        return false;","lastModifiedDate":"2021-09-11"},{"lineNumber":39,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":40,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":41,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":42,"author":{"gitId":"jiarong15"},"content":"     * Search through all the tasks to find","lastModifiedDate":"2021-09-13"},{"lineNumber":43,"author":{"gitId":"jiarong15"},"content":"     * event or deadline task with matching dates.","lastModifiedDate":"2021-09-13"},{"lineNumber":44,"author":{"gitId":"jiarong15"},"content":"     * @param tasks TaskList to update change given by user.","lastModifiedDate":"2021-09-13"},{"lineNumber":45,"author":{"gitId":"jiarong15"},"content":"     * @param ui Ui class to display messages to user.","lastModifiedDate":"2021-09-13"},{"lineNumber":46,"author":{"gitId":"jiarong15"},"content":"     * @param storage Storage updates each time a command make changes","lastModifiedDate":"2021-09-13"},{"lineNumber":47,"author":{"gitId":"jiarong15"},"content":"     * to the existing stored tasks.","lastModifiedDate":"2021-09-13"},{"lineNumber":48,"author":{"gitId":"jiarong15"},"content":"     * @return String output of all matching tasks found.","lastModifiedDate":"2021-09-13"},{"lineNumber":49,"author":{"gitId":"jiarong15"},"content":"     * @throws WrongScheduleFormatException if schedule command","lastModifiedDate":"2021-09-13"},{"lineNumber":50,"author":{"gitId":"jiarong15"},"content":"     * input given by user is not of \"schedule dd/mm/yyyy\" format.","lastModifiedDate":"2021-09-13"},{"lineNumber":51,"author":{"gitId":"jiarong15"},"content":"     * @throws WrongDateFormatException if the date format is inherently","lastModifiedDate":"2021-09-13"},{"lineNumber":52,"author":{"gitId":"jiarong15"},"content":"     * wrong.","lastModifiedDate":"2021-09-13"},{"lineNumber":53,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":54,"author":{"gitId":"jiarong15"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":55,"author":{"gitId":"jiarong15"},"content":"    public String execute(","lastModifiedDate":"2021-09-11"},{"lineNumber":56,"author":{"gitId":"jiarong15"},"content":"            TaskList tasks,","lastModifiedDate":"2021-09-11"},{"lineNumber":57,"author":{"gitId":"jiarong15"},"content":"            Ui ui,","lastModifiedDate":"2021-09-11"},{"lineNumber":58,"author":{"gitId":"jiarong15"},"content":"            Storage storage) throws WrongScheduleFormatException,","lastModifiedDate":"2021-09-11"},{"lineNumber":59,"author":{"gitId":"jiarong15"},"content":"            WrongDateFormatException {","lastModifiedDate":"2021-09-11"},{"lineNumber":60,"author":{"gitId":"jiarong15"},"content":"        String[] instructions \u003d this.","lastModifiedDate":"2021-09-11"},{"lineNumber":61,"author":{"gitId":"jiarong15"},"content":"                commandDescription.","lastModifiedDate":"2021-09-11"},{"lineNumber":62,"author":{"gitId":"jiarong15"},"content":"                split(\" \");","lastModifiedDate":"2021-09-11"},{"lineNumber":63,"author":{"gitId":"jiarong15"},"content":"        if (instructions.length !\u003d 2) {","lastModifiedDate":"2021-09-11"},{"lineNumber":64,"author":{"gitId":"jiarong15"},"content":"            throw new WrongScheduleFormatException();","lastModifiedDate":"2021-09-11"},{"lineNumber":65,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":66,"author":{"gitId":"jiarong15"},"content":"        Date userInputDate \u003d new Date(instructions);","lastModifiedDate":"2021-09-11"},{"lineNumber":67,"author":{"gitId":"jiarong15"},"content":"        ArrayList\u003cTask\u003e allTasksItems \u003d tasks.getTaskList();","lastModifiedDate":"2021-09-13"},{"lineNumber":68,"author":{"gitId":"jiarong15"},"content":"        String allTasksFound \u003d this.findMatchingDates(","lastModifiedDate":"2021-09-13"},{"lineNumber":69,"author":{"gitId":"jiarong15"},"content":"                userInputDate, allTasksItems, tasks);","lastModifiedDate":"2021-09-13"},{"lineNumber":70,"author":{"gitId":"jiarong15"},"content":"        return ui.displayTaskMatchingDate(allTasksFound);","lastModifiedDate":"2021-09-13"},{"lineNumber":71,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":72,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":73,"author":{"gitId":"jiarong15"},"content":"    private String findMatchingDates(","lastModifiedDate":"2021-09-13"},{"lineNumber":74,"author":{"gitId":"jiarong15"},"content":"            Date userInputDate,","lastModifiedDate":"2021-09-13"},{"lineNumber":75,"author":{"gitId":"jiarong15"},"content":"            ArrayList\u003cTask\u003e taskItems,","lastModifiedDate":"2021-09-13"},{"lineNumber":76,"author":{"gitId":"jiarong15"},"content":"            TaskList tasks) {","lastModifiedDate":"2021-09-13"},{"lineNumber":77,"author":{"gitId":"jiarong15"},"content":"        StringBuilder sb \u003d new StringBuilder(\"\");","lastModifiedDate":"2021-09-11"},{"lineNumber":78,"author":{"gitId":"jiarong15"},"content":"        int counter \u003d 1;","lastModifiedDate":"2021-09-11"},{"lineNumber":79,"author":{"gitId":"jiarong15"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.getTaskListLength(); i++) {","lastModifiedDate":"2021-09-11"},{"lineNumber":80,"author":{"gitId":"jiarong15"},"content":"            Task task \u003d taskItems.get(i - 1);","lastModifiedDate":"2021-09-13"},{"lineNumber":81,"author":{"gitId":"jiarong15"},"content":"            Optional\u003cDate\u003e date \u003d task.getOptionalDate();","lastModifiedDate":"2021-09-11"},{"lineNumber":82,"author":{"gitId":"jiarong15"},"content":"           if (counter \u003d\u003d 1","lastModifiedDate":"2021-09-13"},{"lineNumber":83,"author":{"gitId":"jiarong15"},"content":"                   \u0026\u0026 hasDateAndIsEquivalent(date, userInputDate)) {","lastModifiedDate":"2021-09-13"},{"lineNumber":84,"author":{"gitId":"jiarong15"},"content":"               sb.append(counter + \". \" + task.toString());","lastModifiedDate":"2021-09-11"},{"lineNumber":85,"author":{"gitId":"jiarong15"},"content":"               counter++;","lastModifiedDate":"2021-09-13"},{"lineNumber":86,"author":{"gitId":"jiarong15"},"content":"            } else if (counter !\u003d 1","lastModifiedDate":"2021-09-13"},{"lineNumber":87,"author":{"gitId":"jiarong15"},"content":"                   \u0026\u0026 hasDateAndIsEquivalent(date, userInputDate)) {","lastModifiedDate":"2021-09-13"},{"lineNumber":88,"author":{"gitId":"jiarong15"},"content":"                sb.append(\"\\n\" + counter + \". \" + task.toString());","lastModifiedDate":"2021-09-11"},{"lineNumber":89,"author":{"gitId":"jiarong15"},"content":"                counter++;","lastModifiedDate":"2021-09-11"},{"lineNumber":90,"author":{"gitId":"jiarong15"},"content":"            }","lastModifiedDate":"2021-09-11"},{"lineNumber":91,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":92,"author":{"gitId":"jiarong15"},"content":"        return sb.toString();","lastModifiedDate":"2021-09-13"},{"lineNumber":93,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":94,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":95,"author":{"gitId":"jiarong15"},"content":"    private boolean hasDateAndIsEquivalent(","lastModifiedDate":"2021-09-13"},{"lineNumber":96,"author":{"gitId":"jiarong15"},"content":"            Optional\u003cDate\u003e date,","lastModifiedDate":"2021-09-13"},{"lineNumber":97,"author":{"gitId":"jiarong15"},"content":"            Date userInputDate) {","lastModifiedDate":"2021-09-13"},{"lineNumber":98,"author":{"gitId":"jiarong15"},"content":"        boolean hasDate \u003d date.isPresent();","lastModifiedDate":"2021-09-13"},{"lineNumber":99,"author":{"gitId":"jiarong15"},"content":"        boolean isEquivalentDates \u003d false;","lastModifiedDate":"2021-09-13"},{"lineNumber":100,"author":{"gitId":"jiarong15"},"content":"        if (hasDate) {","lastModifiedDate":"2021-09-13"},{"lineNumber":101,"author":{"gitId":"jiarong15"},"content":"            isEquivalentDates \u003d userInputDate.","lastModifiedDate":"2021-09-13"},{"lineNumber":102,"author":{"gitId":"jiarong15"},"content":"                    isEquivalentDate(date.get());","lastModifiedDate":"2021-09-13"},{"lineNumber":103,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":104,"author":{"gitId":"jiarong15"},"content":"        return hasDate \u0026\u0026 isEquivalentDates;","lastModifiedDate":"2021-09-13"},{"lineNumber":105,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":106,"author":{"gitId":"jiarong15"},"content":"}","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"jiarong15":106}},{"path":"src/main/java/duke/commands/TaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiarong15"},"content":"package duke.commands;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"jiarong15"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"jiarong15"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"jiarong15"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"jiarong15"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"jiarong15"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"jiarong15"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"jiarong15"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"jiarong15"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"jiarong15"},"content":"import duke.status.TypeTask;","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"jiarong15"},"content":"import duke.exceptions.NoSuchCommandException;","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"jiarong15"},"content":"import duke.exceptions.WrongDateFormatException;","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"jiarong15"},"content":"import duke.exceptions.WrongEventOrDeadlineFormatException;","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"jiarong15"},"content":"import duke.exceptions.WrongTimeFormatException;","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"jiarong15"},"content":"/**","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"jiarong15"},"content":" * Class that specifies the properties","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"jiarong15"},"content":" * of a task command.","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"jiarong15"},"content":" */","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"jiarong15"},"content":"public class TaskCommand extends Command {","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"jiarong15"},"content":"     * Calls parent class to initialise the","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"jiarong15"},"content":"     * bye command with description \"task\",","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"jiarong15"},"content":"     * either event, to do or deadline.","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"jiarong15"},"content":"     * @param desc String description of","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"jiarong15"},"content":"     * task.","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"jiarong15"},"content":"    public TaskCommand(String desc) {","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"jiarong15"},"content":"        super(desc);","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":34,"author":{"gitId":"jiarong15"},"content":"     * Indicates whether the program should","lastModifiedDate":"2021-09-13"},{"lineNumber":35,"author":{"gitId":"jiarong15"},"content":"     * stop running, and in this is case no.","lastModifiedDate":"2021-09-13"},{"lineNumber":36,"author":{"gitId":"jiarong15"},"content":"     * @return boolean that this command","lastModifiedDate":"2021-09-13"},{"lineNumber":37,"author":{"gitId":"jiarong15"},"content":"     * should exit the application or not.","lastModifiedDate":"2021-09-13"},{"lineNumber":38,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":39,"author":{"gitId":"jiarong15"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"jiarong15"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"jiarong15"},"content":"        return false;","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":45,"author":{"gitId":"jiarong15"},"content":"     * Displays the task stored and entered by","lastModifiedDate":"2021-09-13"},{"lineNumber":46,"author":{"gitId":"jiarong15"},"content":"     * the user.","lastModifiedDate":"2021-09-13"},{"lineNumber":47,"author":{"gitId":"jiarong15"},"content":"     * @param taskList all the tasks stored.","lastModifiedDate":"2021-09-13"},{"lineNumber":48,"author":{"gitId":"jiarong15"},"content":"     * @param ui Ui class to display messages to user.","lastModifiedDate":"2021-09-13"},{"lineNumber":49,"author":{"gitId":"jiarong15"},"content":"     * @param storage Storage updates each time a command","lastModifiedDate":"2021-09-13"},{"lineNumber":50,"author":{"gitId":"jiarong15"},"content":"     * make changes to the existing stored tasks.","lastModifiedDate":"2021-09-13"},{"lineNumber":51,"author":{"gitId":"jiarong15"},"content":"     * @return String of the task description.","lastModifiedDate":"2021-09-13"},{"lineNumber":52,"author":{"gitId":"jiarong15"},"content":"     * @throws WrongDateFormatException if date format","lastModifiedDate":"2021-09-13"},{"lineNumber":53,"author":{"gitId":"jiarong15"},"content":"     * is not in dd/mm/yyyy format.","lastModifiedDate":"2021-09-13"},{"lineNumber":54,"author":{"gitId":"jiarong15"},"content":"     * @throws WrongTimeFormatException if time format","lastModifiedDate":"2021-09-13"},{"lineNumber":55,"author":{"gitId":"jiarong15"},"content":"     * is not in HH:MM format.","lastModifiedDate":"2021-09-13"},{"lineNumber":56,"author":{"gitId":"jiarong15"},"content":"     * @throws WrongEventOrDeadlineFormatException if user","lastModifiedDate":"2021-09-13"},{"lineNumber":57,"author":{"gitId":"jiarong15"},"content":"     * inputs an erroneous event or deadline format.","lastModifiedDate":"2021-09-13"},{"lineNumber":58,"author":{"gitId":"jiarong15"},"content":"     * @throws NoSuchCommandException if the user inputs","lastModifiedDate":"2021-09-13"},{"lineNumber":59,"author":{"gitId":"jiarong15"},"content":"     * gibberish.","lastModifiedDate":"2021-09-13"},{"lineNumber":60,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":61,"author":{"gitId":"jiarong15"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"jiarong15"},"content":"    public String execute(","lastModifiedDate":"2021-09-05"},{"lineNumber":63,"author":{"gitId":"jiarong15"},"content":"            TaskList taskList, Ui ui,","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"jiarong15"},"content":"            Storage storage) throws WrongDateFormatException,","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"jiarong15"},"content":"            WrongTimeFormatException,","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"jiarong15"},"content":"            WrongEventOrDeadlineFormatException,","lastModifiedDate":"2021-09-07"},{"lineNumber":67,"author":{"gitId":"jiarong15"},"content":"            NoSuchCommandException {","lastModifiedDate":"2021-09-07"},{"lineNumber":68,"author":{"gitId":"jiarong15"},"content":"        String[] instructions \u003d this.commandDescription.split(\" \");","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"jiarong15"},"content":"        assert (instructions.length \u003e\u003d 2) : \"Task should have descriptions!\";","lastModifiedDate":"2021-09-13"},{"lineNumber":70,"author":{"gitId":"jiarong15"},"content":"        String importantInstructions \u003d String.join(\" \",","lastModifiedDate":"2021-08-30"},{"lineNumber":71,"author":{"gitId":"jiarong15"},"content":"                Arrays.copyOfRange(instructions,","lastModifiedDate":"2021-08-30"},{"lineNumber":72,"author":{"gitId":"jiarong15"},"content":"                        1, instructions.length));","lastModifiedDate":"2021-08-30"},{"lineNumber":73,"author":{"gitId":"jiarong15"},"content":"        String identity \u003d instructions[0];","lastModifiedDate":"2021-08-29"},{"lineNumber":74,"author":{"gitId":"jiarong15"},"content":"        Task task \u003d this.","lastModifiedDate":"2021-09-11"},{"lineNumber":75,"author":{"gitId":"jiarong15"},"content":"                convertInstructionToTask(","lastModifiedDate":"2021-09-11"},{"lineNumber":76,"author":{"gitId":"jiarong15"},"content":"                        identity,","lastModifiedDate":"2021-09-11"},{"lineNumber":77,"author":{"gitId":"jiarong15"},"content":"                        importantInstructions);","lastModifiedDate":"2021-09-11"},{"lineNumber":78,"author":{"gitId":"jiarong15"},"content":"        taskList.addNewTask(task);","lastModifiedDate":"2021-09-11"},{"lineNumber":79,"author":{"gitId":"jiarong15"},"content":"        storage.updateStorageList(taskList.getTaskList());","lastModifiedDate":"2021-09-11"},{"lineNumber":80,"author":{"gitId":"jiarong15"},"content":"        return ui.displayTaskInstructions(task.toString(),","lastModifiedDate":"2021-09-13"},{"lineNumber":81,"author":{"gitId":"jiarong15"},"content":"                taskList.getTaskListLength());","lastModifiedDate":"2021-09-13"},{"lineNumber":82,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":83,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":84,"author":{"gitId":"jiarong15"},"content":"    private Task convertInstructionToTask(","lastModifiedDate":"2021-09-11"},{"lineNumber":85,"author":{"gitId":"jiarong15"},"content":"            String taskIdentity,","lastModifiedDate":"2021-09-11"},{"lineNumber":86,"author":{"gitId":"jiarong15"},"content":"            String taskBody) throws WrongDateFormatException,","lastModifiedDate":"2021-09-11"},{"lineNumber":87,"author":{"gitId":"jiarong15"},"content":"            WrongTimeFormatException,","lastModifiedDate":"2021-09-11"},{"lineNumber":88,"author":{"gitId":"jiarong15"},"content":"            WrongEventOrDeadlineFormatException,","lastModifiedDate":"2021-09-11"},{"lineNumber":89,"author":{"gitId":"jiarong15"},"content":"            NoSuchCommandException {","lastModifiedDate":"2021-09-11"},{"lineNumber":90,"author":{"gitId":"jiarong15"},"content":"        Task task;","lastModifiedDate":"2021-08-29"},{"lineNumber":91,"author":{"gitId":"jiarong15"},"content":"        if (taskIdentity.equals(TypeTask.TODO.getTask())) {","lastModifiedDate":"2021-09-13"},{"lineNumber":92,"author":{"gitId":"jiarong15"},"content":"            task \u003d new ToDo(taskBody);","lastModifiedDate":"2021-09-11"},{"lineNumber":93,"author":{"gitId":"jiarong15"},"content":"        } else if (taskIdentity.equals(TypeTask.DEADLINE.getTask())) {","lastModifiedDate":"2021-09-13"},{"lineNumber":94,"author":{"gitId":"jiarong15"},"content":"            task \u003d new Deadline(taskBody);","lastModifiedDate":"2021-09-11"},{"lineNumber":95,"author":{"gitId":"jiarong15"},"content":"        } else if (taskIdentity.equals(TypeTask.EVENT.getTask())) {","lastModifiedDate":"2021-09-13"},{"lineNumber":96,"author":{"gitId":"jiarong15"},"content":"            task \u003d new Event(taskBody);","lastModifiedDate":"2021-09-11"},{"lineNumber":97,"author":{"gitId":"jiarong15"},"content":"        } else {","lastModifiedDate":"2021-09-07"},{"lineNumber":98,"author":{"gitId":"jiarong15"},"content":"            String errorCommand \u003d \"No such command!\";","lastModifiedDate":"2021-09-07"},{"lineNumber":99,"author":{"gitId":"jiarong15"},"content":"            throw new NoSuchCommandException(errorCommand);","lastModifiedDate":"2021-09-07"},{"lineNumber":100,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":101,"author":{"gitId":"jiarong15"},"content":"        return task;","lastModifiedDate":"2021-09-11"},{"lineNumber":102,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":103,"author":{"gitId":"jiarong15"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"jiarong15":103}},{"path":"src/main/java/duke/date/Date.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiarong15"},"content":"package duke.date;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"jiarong15"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"jiarong15"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"jiarong15"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"jiarong15"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"jiarong15"},"content":"import duke.exceptions.WrongDateFormatException;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"jiarong15"},"content":"import duke.exceptions.WrongTimeFormatException;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"jiarong15"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"jiarong15"},"content":" * Class that stores and format date time values.","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"jiarong15"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"jiarong15"},"content":"public class Date {","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"jiarong15"},"content":"     * Indicates morning time before 12pm.","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"jiarong15"},"content":"    private static final String MORNING_INDICATOR \u003d \"am\";","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":21,"author":{"gitId":"jiarong15"},"content":"     * Indicates afternoon to evening time after 12pm","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"jiarong15"},"content":"     * and before 12am.","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"jiarong15"},"content":"    private static final String EVENING_INDICATOR \u003d \"pm\";","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"jiarong15"},"content":"     * Indicates exact noon timing of 12.00pm.","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"jiarong15"},"content":"    private static final int NOON \u003d 12;","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":31,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":32,"author":{"gitId":"jiarong15"},"content":"     * Indicates universal date length of 3","lastModifiedDate":"2021-09-13"},{"lineNumber":33,"author":{"gitId":"jiarong15"},"content":"     * with date, month and year.","lastModifiedDate":"2021-09-13"},{"lineNumber":34,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":35,"author":{"gitId":"jiarong15"},"content":"    private static final int LENGTH_OF_DATE \u003d 3;","lastModifiedDate":"2021-09-13"},{"lineNumber":36,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":37,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":38,"author":{"gitId":"jiarong15"},"content":"     * Keeps track of date of event or deadline task.","lastModifiedDate":"2021-09-13"},{"lineNumber":39,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":40,"author":{"gitId":"jiarong15"},"content":"    private final LocalDate globalDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":43,"author":{"gitId":"jiarong15"},"content":"     * Keeps track of time of event or deadline task.","lastModifiedDate":"2021-09-13"},{"lineNumber":44,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":45,"author":{"gitId":"jiarong15"},"content":"    private final LocalTime globalTime;","lastModifiedDate":"2021-09-13"},{"lineNumber":46,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"jiarong15"},"content":"     * Initializes the date class with","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"jiarong15"},"content":"     * a given string form of date and time.","lastModifiedDate":"2021-09-13"},{"lineNumber":50,"author":{"gitId":"jiarong15"},"content":"     * @param dateAndTime String of the date and time user input.","lastModifiedDate":"2021-09-13"},{"lineNumber":51,"author":{"gitId":"jiarong15"},"content":"     * @throws WrongTimeFormatException if the expected time","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"jiarong15"},"content":"     * format given by user is wrong.","lastModifiedDate":"2021-09-13"},{"lineNumber":53,"author":{"gitId":"jiarong15"},"content":"     * @throws WrongDateFormatException if the expected date","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"jiarong15"},"content":"     * format given by user is wrong.","lastModifiedDate":"2021-09-13"},{"lineNumber":55,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"jiarong15"},"content":"    public Date(","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"jiarong15"},"content":"            String dateAndTime) throws WrongTimeFormatException,","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"jiarong15"},"content":"            WrongDateFormatException {","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"jiarong15"},"content":"        String[] dateTimeSplit \u003d dateAndTime.split(\" \");","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"jiarong15"},"content":"        LocalDate inputDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"jiarong15"},"content":"        LocalTime inputTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"jiarong15"},"content":"        inputDate \u003d formatDate(dateTimeSplit[0]);","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"jiarong15"},"content":"        inputTime \u003d formatTime(dateTimeSplit[1]);","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"jiarong15"},"content":"        this.globalDate \u003d inputDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"jiarong15"},"content":"        this.globalTime \u003d inputTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":69,"author":{"gitId":"jiarong15"},"content":"     * Utilized by the the schedule command class","lastModifiedDate":"2021-09-11"},{"lineNumber":70,"author":{"gitId":"jiarong15"},"content":"     * to have compare dates against all the task in taskList.","lastModifiedDate":"2021-09-13"},{"lineNumber":71,"author":{"gitId":"jiarong15"},"content":"     * @param commandWithDate Array of string that.","lastModifiedDate":"2021-09-13"},{"lineNumber":72,"author":{"gitId":"jiarong15"},"content":"     * consists of command name and the date input from user.","lastModifiedDate":"2021-09-11"},{"lineNumber":73,"author":{"gitId":"jiarong15"},"content":"     * @throws WrongDateFormatException throws error when the date.","lastModifiedDate":"2021-09-13"},{"lineNumber":74,"author":{"gitId":"jiarong15"},"content":"     * format is not in the standards acceptable of 12:12:2020,","lastModifiedDate":"2021-09-11"},{"lineNumber":75,"author":{"gitId":"jiarong15"},"content":"     * 12-12-2020 or 12/12/2020.","lastModifiedDate":"2021-09-13"},{"lineNumber":76,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":77,"author":{"gitId":"jiarong15"},"content":"    public Date(String[] commandWithDate) throws WrongDateFormatException {","lastModifiedDate":"2021-09-11"},{"lineNumber":78,"author":{"gitId":"jiarong15"},"content":"        String actualDate \u003d commandWithDate[1];","lastModifiedDate":"2021-09-11"},{"lineNumber":79,"author":{"gitId":"jiarong15"},"content":"        LocalDate inputDate \u003d formatDate(actualDate);","lastModifiedDate":"2021-09-11"},{"lineNumber":80,"author":{"gitId":"jiarong15"},"content":"        this.globalDate \u003d inputDate;","lastModifiedDate":"2021-09-11"},{"lineNumber":81,"author":{"gitId":"jiarong15"},"content":"        this.globalTime \u003d LocalTime.now();","lastModifiedDate":"2021-09-11"},{"lineNumber":82,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":83,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":84,"author":{"gitId":"jiarong15"},"content":"    private LocalTime formatTime(","lastModifiedDate":"2021-08-30"},{"lineNumber":85,"author":{"gitId":"jiarong15"},"content":"            String timeString) throws NumberFormatException,","lastModifiedDate":"2021-08-30"},{"lineNumber":86,"author":{"gitId":"jiarong15"},"content":"            WrongTimeFormatException, DateTimeParseException {","lastModifiedDate":"2021-08-30"},{"lineNumber":87,"author":{"gitId":"jiarong15"},"content":"        String[] hourAndMinutes \u003d timeString.split(\"[-/:]+\");","lastModifiedDate":"2021-09-13"},{"lineNumber":88,"author":{"gitId":"jiarong15"},"content":"        LocalTime time;","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"jiarong15"},"content":"        if (hourAndMinutes.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-13"},{"lineNumber":90,"author":{"gitId":"jiarong15"},"content":"            DateTimeFormatter timeFormatter \u003d DateTimeFormatter.","lastModifiedDate":"2021-08-31"},{"lineNumber":91,"author":{"gitId":"jiarong15"},"content":"                    ofPattern(\"HHmm\");","lastModifiedDate":"2021-08-31"},{"lineNumber":92,"author":{"gitId":"jiarong15"},"content":"            time \u003d LocalTime.parse(timeString, timeFormatter);","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"jiarong15"},"content":"        } else if (hourAndMinutes.length \u003e 2) {","lastModifiedDate":"2021-09-13"},{"lineNumber":94,"author":{"gitId":"jiarong15"},"content":"            throw new WrongTimeFormatException();","lastModifiedDate":"2021-08-29"},{"lineNumber":95,"author":{"gitId":"jiarong15"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"jiarong15"},"content":"            int hours \u003d Integer.valueOf(hourAndMinutes[0]);","lastModifiedDate":"2021-09-13"},{"lineNumber":97,"author":{"gitId":"jiarong15"},"content":"            int minutes \u003d Integer.valueOf(hourAndMinutes[1]);","lastModifiedDate":"2021-09-13"},{"lineNumber":98,"author":{"gitId":"jiarong15"},"content":"            time \u003d LocalTime.of(hours, minutes);","lastModifiedDate":"2021-09-13"},{"lineNumber":99,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"jiarong15"},"content":"        return time;","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"jiarong15"},"content":"    private LocalDate formatDate(","lastModifiedDate":"2021-08-30"},{"lineNumber":104,"author":{"gitId":"jiarong15"},"content":"            String dateString) throws NumberFormatException,","lastModifiedDate":"2021-08-30"},{"lineNumber":105,"author":{"gitId":"jiarong15"},"content":"            WrongDateFormatException {","lastModifiedDate":"2021-08-30"},{"lineNumber":106,"author":{"gitId":"jiarong15"},"content":"        String[] dateMonthYear \u003d dateString.split(\"[-/:]+\");","lastModifiedDate":"2021-09-13"},{"lineNumber":107,"author":{"gitId":"jiarong15"},"content":"        if (dateMonthYear.length !\u003d LENGTH_OF_DATE) {","lastModifiedDate":"2021-09-13"},{"lineNumber":108,"author":{"gitId":"jiarong15"},"content":"            throw new WrongDateFormatException();","lastModifiedDate":"2021-08-29"},{"lineNumber":109,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":110,"author":{"gitId":"jiarong15"},"content":"        int year \u003d Integer.valueOf(dateMonthYear[2]);","lastModifiedDate":"2021-09-13"},{"lineNumber":111,"author":{"gitId":"jiarong15"},"content":"        int month \u003d Integer.valueOf(dateMonthYear[1]);","lastModifiedDate":"2021-09-13"},{"lineNumber":112,"author":{"gitId":"jiarong15"},"content":"        int date \u003d Integer.valueOf(dateMonthYear[0]);","lastModifiedDate":"2021-09-13"},{"lineNumber":113,"author":{"gitId":"jiarong15"},"content":"        LocalDate currentDate \u003d LocalDate.of(year, month, date);","lastModifiedDate":"2021-08-26"},{"lineNumber":114,"author":{"gitId":"jiarong15"},"content":"        return currentDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":115,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":116,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":117,"author":{"gitId":"jiarong15"},"content":"    /**.","lastModifiedDate":"2021-08-31"},{"lineNumber":118,"author":{"gitId":"jiarong15"},"content":"     * returns the proper format of date","lastModifiedDate":"2021-08-30"},{"lineNumber":119,"author":{"gitId":"jiarong15"},"content":"     * and time used for ONLY storing.","lastModifiedDate":"2021-09-13"},{"lineNumber":120,"author":{"gitId":"jiarong15"},"content":"     * @return String of date and time format.","lastModifiedDate":"2021-09-13"},{"lineNumber":121,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":122,"author":{"gitId":"jiarong15"},"content":"    public String getOriginalFormat() {","lastModifiedDate":"2021-08-26"},{"lineNumber":123,"author":{"gitId":"jiarong15"},"content":"        DateTimeFormatter dateFormat \u003d DateTimeFormatter.","lastModifiedDate":"2021-09-13"},{"lineNumber":124,"author":{"gitId":"jiarong15"},"content":"                ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2021-08-31"},{"lineNumber":125,"author":{"gitId":"jiarong15"},"content":"        return this.globalDate.format(dateFormat)","lastModifiedDate":"2021-09-13"},{"lineNumber":126,"author":{"gitId":"jiarong15"},"content":"                + \" \"","lastModifiedDate":"2021-08-31"},{"lineNumber":127,"author":{"gitId":"jiarong15"},"content":"                + this.globalTime.toString();","lastModifiedDate":"2021-08-31"},{"lineNumber":128,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":129,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":130,"author":{"gitId":"jiarong15"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":131,"author":{"gitId":"jiarong15"},"content":"    public String toString() {","lastModifiedDate":"2021-08-26"},{"lineNumber":132,"author":{"gitId":"jiarong15"},"content":"        return this.globalDate.getMonth()","lastModifiedDate":"2021-08-31"},{"lineNumber":133,"author":{"gitId":"jiarong15"},"content":"                + \" \"","lastModifiedDate":"2021-08-31"},{"lineNumber":134,"author":{"gitId":"jiarong15"},"content":"                + this.globalDate.getDayOfMonth()","lastModifiedDate":"2021-08-31"},{"lineNumber":135,"author":{"gitId":"jiarong15"},"content":"                + \" \"","lastModifiedDate":"2021-08-31"},{"lineNumber":136,"author":{"gitId":"jiarong15"},"content":"                + this.globalDate.getYear()","lastModifiedDate":"2021-08-31"},{"lineNumber":137,"author":{"gitId":"jiarong15"},"content":"                + \" \"","lastModifiedDate":"2021-08-31"},{"lineNumber":138,"author":{"gitId":"jiarong15"},"content":"                + this.getStringTime();","lastModifiedDate":"2021-08-31"},{"lineNumber":139,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":140,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":141,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":142,"author":{"gitId":"jiarong15"},"content":"     * checks if 2 dates are equivalent.","lastModifiedDate":"2021-09-11"},{"lineNumber":143,"author":{"gitId":"jiarong15"},"content":"     * @param otherDate Another date object to be compared.","lastModifiedDate":"2021-09-13"},{"lineNumber":144,"author":{"gitId":"jiarong15"},"content":"     * @return boolean if 2 dates are equivalent.","lastModifiedDate":"2021-09-13"},{"lineNumber":145,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":146,"author":{"gitId":"jiarong15"},"content":"    public boolean isEquivalentDate(Date otherDate) {","lastModifiedDate":"2021-09-11"},{"lineNumber":147,"author":{"gitId":"jiarong15"},"content":"        return this.globalDate.equals(otherDate.globalDate);","lastModifiedDate":"2021-09-11"},{"lineNumber":148,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":149,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":150,"author":{"gitId":"jiarong15"},"content":"    private String getStringTime() {","lastModifiedDate":"2021-08-26"},{"lineNumber":151,"author":{"gitId":"jiarong15"},"content":"        int timeInHours \u003d this.globalTime.getHour();","lastModifiedDate":"2021-08-26"},{"lineNumber":152,"author":{"gitId":"jiarong15"},"content":"        int timeInMinutes \u003d this.globalTime.getMinute();","lastModifiedDate":"2021-09-13"},{"lineNumber":153,"author":{"gitId":"jiarong15"},"content":"        if (timeInHours \u003d\u003d NOON) {","lastModifiedDate":"2021-08-31"},{"lineNumber":154,"author":{"gitId":"jiarong15"},"content":"            return this.getStringHelper(","lastModifiedDate":"2021-09-07"},{"lineNumber":155,"author":{"gitId":"jiarong15"},"content":"                (timeInMinutes \u003e 0),","lastModifiedDate":"2021-09-13"},{"lineNumber":156,"author":{"gitId":"jiarong15"},"content":"                    timeInMinutes,","lastModifiedDate":"2021-09-13"},{"lineNumber":157,"author":{"gitId":"jiarong15"},"content":"                String.valueOf(timeInHours),","lastModifiedDate":"2021-09-07"},{"lineNumber":158,"author":{"gitId":"jiarong15"},"content":"                EVENING_INDICATOR);","lastModifiedDate":"2021-09-07"},{"lineNumber":159,"author":{"gitId":"jiarong15"},"content":"        } else if (timeInHours \u003e NOON) {","lastModifiedDate":"2021-08-31"},{"lineNumber":160,"author":{"gitId":"jiarong15"},"content":"            return this.getStringHelper(","lastModifiedDate":"2021-09-07"},{"lineNumber":161,"author":{"gitId":"jiarong15"},"content":"                (timeInMinutes \u003e 0),","lastModifiedDate":"2021-09-13"},{"lineNumber":162,"author":{"gitId":"jiarong15"},"content":"                timeInMinutes,","lastModifiedDate":"2021-09-13"},{"lineNumber":163,"author":{"gitId":"jiarong15"},"content":"                String.valueOf(timeInHours - NOON),","lastModifiedDate":"2021-09-07"},{"lineNumber":164,"author":{"gitId":"jiarong15"},"content":"                EVENING_INDICATOR);","lastModifiedDate":"2021-09-07"},{"lineNumber":165,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":166,"author":{"gitId":"jiarong15"},"content":"        return this.getStringHelper(","lastModifiedDate":"2021-09-07"},{"lineNumber":167,"author":{"gitId":"jiarong15"},"content":"            (timeInMinutes \u003e 0),","lastModifiedDate":"2021-09-13"},{"lineNumber":168,"author":{"gitId":"jiarong15"},"content":"            timeInMinutes,","lastModifiedDate":"2021-09-13"},{"lineNumber":169,"author":{"gitId":"jiarong15"},"content":"            String.valueOf(timeInHours),","lastModifiedDate":"2021-09-07"},{"lineNumber":170,"author":{"gitId":"jiarong15"},"content":"            MORNING_INDICATOR);","lastModifiedDate":"2021-09-07"},{"lineNumber":171,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":172,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":173,"author":{"gitId":"jiarong15"},"content":"    private String getStringHelper(","lastModifiedDate":"2021-09-07"},{"lineNumber":174,"author":{"gitId":"jiarong15"},"content":"            boolean hasMinutes,","lastModifiedDate":"2021-09-13"},{"lineNumber":175,"author":{"gitId":"jiarong15"},"content":"            int timeInMinutes,","lastModifiedDate":"2021-09-13"},{"lineNumber":176,"author":{"gitId":"jiarong15"},"content":"            String timeString,","lastModifiedDate":"2021-09-07"},{"lineNumber":177,"author":{"gitId":"jiarong15"},"content":"            String indicator) {","lastModifiedDate":"2021-09-07"},{"lineNumber":178,"author":{"gitId":"jiarong15"},"content":"        if (hasMinutes) {","lastModifiedDate":"2021-09-13"},{"lineNumber":179,"author":{"gitId":"jiarong15"},"content":"            return timeString + \".\" + timeInMinutes + indicator;","lastModifiedDate":"2021-09-13"},{"lineNumber":180,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":181,"author":{"gitId":"jiarong15"},"content":"        return timeString + indicator;","lastModifiedDate":"2021-09-07"},{"lineNumber":182,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":183,"author":{"gitId":"jiarong15"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"jiarong15":183}},{"path":"src/main/java/duke/exceptions/DeleteOutOfBoundsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiarong15"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"jiarong15"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"jiarong15"},"content":" * Class of exception that handles deleting task","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"jiarong15"},"content":" * number greater than number odf task available.","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"jiarong15"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"jiarong15"},"content":"public class DeleteOutOfBoundsException extends DukeException {","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"jiarong15"},"content":"     * Instantiates a deleting exception.","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"jiarong15"},"content":"     * @param taskLength Integer of the length of the taskList","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"jiarong15"},"content":"    public DeleteOutOfBoundsException(int taskLength) {","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"jiarong15"},"content":"        super(\"You only have \" + taskLength + \" tasks! Cannot delete task!\");","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"jiarong15"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"jiarong15":16}},{"path":"src/main/java/duke/exceptions/DoneOutOfBoundsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiarong15"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"jiarong15"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"jiarong15"},"content":" * Class of exception that handles marking task","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"jiarong15"},"content":" * number greater than number of task available as done.","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"jiarong15"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"jiarong15"},"content":"public class DoneOutOfBoundsException extends DukeException {","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"jiarong15"},"content":"     * Instantiates a done exception.","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"jiarong15"},"content":"     * @param taskLength Integer of the length of the tasklist","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"jiarong15"},"content":"    public DoneOutOfBoundsException(int taskLength) {","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"jiarong15"},"content":"        super(\"You only have \" + taskLength + \" tasks! Cannot mark as Done!\");","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"jiarong15"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"jiarong15":15}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiarong15"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"jiarong15"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"jiarong15"},"content":" * Class of exception that handles all exceptions that","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"jiarong15"},"content":" * occur in the running of duke bot.","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"jiarong15"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"jiarong15"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"jiarong15"},"content":"     * Instantiates a duke exception","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"jiarong15"},"content":"     * capturing all errors that may occur in duke.","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"jiarong15"},"content":"     * @param exceptionMsg String error message.","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"jiarong15"},"content":"    public DukeException(String exceptionMsg) {","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"jiarong15"},"content":"        super(exceptionMsg);","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"jiarong15"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"jiarong15":16}},{"path":"src/main/java/duke/exceptions/NoSuchCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiarong15"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"jiarong15"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"jiarong15"},"content":" * Class of exception that handles","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"jiarong15"},"content":" * command unknown to the duke bot.","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"jiarong15"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"jiarong15"},"content":"public class NoSuchCommandException extends DukeException {","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"jiarong15"},"content":"     * Instantiates a NoSuchCommand exception.","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"jiarong15"},"content":"     * @param errorMsg String error message of the","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"jiarong15"},"content":"     * unknown command.","lastModifiedDate":"2021-09-13"},{"lineNumber":13,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"jiarong15"},"content":"    public NoSuchCommandException(String errorMsg) {","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"jiarong15"},"content":"        super(errorMsg);","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"jiarong15"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"jiarong15":17}},{"path":"src/main/java/duke/exceptions/NoTaskMatchException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiarong15"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"jiarong15"},"content":"/**","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"jiarong15"},"content":" * Class that handles cases where the find command","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"jiarong15"},"content":" * is unable to find a matching task in taskList.","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"jiarong15"},"content":" */","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"jiarong15"},"content":"public class NoTaskMatchException extends DukeException {","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"jiarong15"},"content":"     * Throws a standard error when unable to find","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"jiarong15"},"content":"     * task in taskList.","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"jiarong15"},"content":"    public NoTaskMatchException() {","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"jiarong15"},"content":"        super(\"You have no task matching this description!\");","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"jiarong15"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"jiarong15":16}},{"path":"src/main/java/duke/exceptions/WrongDateFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiarong15"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"jiarong15"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"jiarong15"},"content":" * Class of exception that handles marking task","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"jiarong15"},"content":" * with a wrong format of date.","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"jiarong15"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"jiarong15"},"content":"public class WrongDateFormatException extends DukeException {","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"jiarong15"},"content":"     * Instantiates a exception that","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"jiarong15"},"content":"     * is wrong in its date format.","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"jiarong15"},"content":"    public WrongDateFormatException() {","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"jiarong15"},"content":"        super(\"Date format needs to be of the form dd-MM-yyyy or dd/MM/yyyy!\");","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"jiarong15"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"jiarong15":15}},{"path":"src/main/java/duke/exceptions/WrongDeleteFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiarong15"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"jiarong15"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"jiarong15"},"content":" * Class of exception that handles a","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"jiarong15"},"content":" *  wrong format of command to delete task.","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"jiarong15"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"jiarong15"},"content":"public class WrongDeleteFormatException extends DukeException {","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"jiarong15"},"content":"     * Instantiates a exception that is wrong","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"jiarong15"},"content":"     * in the command in deleting a task.","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"jiarong15"},"content":"    public WrongDeleteFormatException() {","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"jiarong15"},"content":"        super(\"Delete command requires a number!\");","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"jiarong15"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"jiarong15":16}},{"path":"src/main/java/duke/exceptions/WrongDoneFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiarong15"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"jiarong15"},"content":"/**Class of exception that handles a","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"jiarong15"},"content":" * wrong format of command to mark task as done.","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"jiarong15"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"jiarong15"},"content":"public class WrongDoneFormatException extends DukeException {","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"jiarong15"},"content":"    /**Instantiates a exception that is wrong","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"jiarong15"},"content":"     *in the format of command in marking task as done.","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"jiarong15"},"content":"    public WrongDoneFormatException() {","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"jiarong15"},"content":"        super(\"Done command requires a number!\");","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"jiarong15"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"jiarong15":13}},{"path":"src/main/java/duke/exceptions/WrongEventOrDeadlineFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiarong15"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"jiarong15"},"content":"/**","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"jiarong15"},"content":" * Class that handles event or deadline command without","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"jiarong15"},"content":" * a date or time stated.","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"jiarong15"},"content":" */","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"jiarong15"},"content":"public class WrongEventOrDeadlineFormatException extends DukeException {","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"jiarong15"},"content":"     * Throws standard error message when event or deadline has","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"jiarong15"},"content":"     * date or time not specified.","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"jiarong15"},"content":"    public WrongEventOrDeadlineFormatException() {","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"jiarong15"},"content":"        super(\"Event or Deadline task requires a date and time input!\");","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"jiarong15"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"jiarong15":16}},{"path":"src/main/java/duke/exceptions/WrongFindFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiarong15"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"jiarong15"},"content":"/**","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"jiarong15"},"content":" * Class that handles command without descriptions.","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"jiarong15"},"content":" */","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"jiarong15"},"content":"public class WrongFindFormatException extends DukeException {","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"jiarong15"},"content":"     * Throws standard error message when unable to","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"jiarong15"},"content":"     * find description of a command given by user.","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"jiarong15"},"content":"    public WrongFindFormatException() {","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"jiarong15"},"content":"        super(\"Find command requires a description of what you want to find!\");","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"jiarong15"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"jiarong15":16}},{"path":"src/main/java/duke/exceptions/WrongScheduleFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiarong15"},"content":"package duke.exceptions;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"jiarong15"},"content":"/**","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"jiarong15"},"content":" * Class of exception that handles","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"jiarong15"},"content":" * invalid schedule format.","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"jiarong15"},"content":" */","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"jiarong15"},"content":"public class WrongScheduleFormatException extends DukeException {","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"jiarong15"},"content":"     * Throws a standard exception when user inputs","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"jiarong15"},"content":"     * a format that cannot be processed","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"jiarong15"},"content":"     * for schedule command.","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"jiarong15"},"content":"    public WrongScheduleFormatException() {","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"jiarong15"},"content":"        super(\"Schedule command should only have 1 date input, nothing more or less!\");","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"jiarong15"},"content":"}","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"jiarong15":17}},{"path":"src/main/java/duke/exceptions/WrongTimeFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiarong15"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"jiarong15"},"content":"/** Class of exception that handles marking task","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"jiarong15"},"content":" *  with a wrong format of time.","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"jiarong15"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"jiarong15"},"content":"public class WrongTimeFormatException extends DukeException {","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"jiarong15"},"content":"    /** Instantiates a exception that is wrong in its time format.","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"jiarong15"},"content":"    public WrongTimeFormatException() {","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"jiarong15"},"content":"        super(\"Time format needs to be of the form HH:mm!\");","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"jiarong15"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"jiarong15":13}},{"path":"src/main/java/duke/status/Status.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiarong15"},"content":"package duke.status;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":3,"author":{"gitId":"jiarong15"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"jiarong15"},"content":" * Enumeration to indicate if","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"jiarong15"},"content":" * task is completed or not.","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"jiarong15"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"jiarong15"},"content":"public enum Status {","lastModifiedDate":"2021-08-20"},{"lineNumber":8,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"jiarong15"},"content":"     * Marks a task as completed or not.","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"jiarong15"},"content":"    COMPLETED(\"[X]\"), NOT_COMPLETED(\"[]\");","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"jiarong15"},"content":"     * Status of a task where","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"jiarong15"},"content":"     * completed is [X] and uncompleted","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"jiarong15"},"content":"     * is [].","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"jiarong15"},"content":"    private final String status;","lastModifiedDate":"2021-08-20"},{"lineNumber":20,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":21,"author":{"gitId":"jiarong15"},"content":"    Status(String status) {","lastModifiedDate":"2021-08-20"},{"lineNumber":22,"author":{"gitId":"jiarong15"},"content":"        this.status \u003d status;","lastModifiedDate":"2021-08-20"},{"lineNumber":23,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":24,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":25,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"jiarong15"},"content":"     * returns the status of task in their","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"jiarong15"},"content":"     * corresponding label format.","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"jiarong15"},"content":"     * @return String of the status","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"jiarong15"},"content":"    public String getStatus() {","lastModifiedDate":"2021-08-20"},{"lineNumber":31,"author":{"gitId":"jiarong15"},"content":"        return this.status;","lastModifiedDate":"2021-08-20"},{"lineNumber":32,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":33,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":34,"author":{"gitId":"jiarong15"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"jiarong15":34}},{"path":"src/main/java/duke/status/TypeTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiarong15"},"content":"package duke.status;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":3,"author":{"gitId":"jiarong15"},"content":"/**","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"jiarong15"},"content":" * Enumeration to indicate task name.","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"jiarong15"},"content":" */","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"jiarong15"},"content":"public enum TypeTask {","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"jiarong15"},"content":"     * Indicates what type of task is it.","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"jiarong15"},"content":"    TODO(\"todo\"), DEADLINE(\"deadline\"), EVENT(\"event\");","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":13,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"jiarong15"},"content":"     * String version of each task.","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"jiarong15"},"content":"    private final String typeOfTask;","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"jiarong15"},"content":"    TypeTask(String typeOfTask) {","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"jiarong15"},"content":"        this.typeOfTask \u003d typeOfTask;","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":21,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"jiarong15"},"content":"     * Returns corresponding name of task.","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"jiarong15"},"content":"     * @return String of task name.","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"jiarong15"},"content":"    public String getTask() {","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"jiarong15"},"content":"        return this.typeOfTask;","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"jiarong15"},"content":"}","lastModifiedDate":"2021-09-13"}],"authorContributionMap":{"jiarong15":30}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiarong15"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"jiarong15"},"content":"import duke.assignment.AssignmentType;","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"jiarong15"},"content":"import duke.date.Date;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"jiarong15"},"content":"import java.util.Optional;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"jiarong15"},"content":"import duke.exceptions.WrongDateFormatException;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"jiarong15"},"content":"import duke.exceptions.WrongEventOrDeadlineFormatException;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"jiarong15"},"content":"import duke.exceptions.WrongTimeFormatException;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":9,"author":{"gitId":"jiarong15"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"jiarong15"},"content":" * Class that specifies the properties of deadline task.","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"jiarong15"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"jiarong15"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"jiarong15"},"content":"     * Indicates the expected input of a","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"jiarong15"},"content":"     * deadline task when input by user.","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"jiarong15"},"content":"    private static final String TASK_DIRECTIVE \u003d \"by\";","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":21,"author":{"gitId":"jiarong15"},"content":"     * Displays the type of task assignment of","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"jiarong15"},"content":"     * deadline task in this case [D].","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"jiarong15"},"content":"    private static final String ASSIGNMENT_TYPE \u003d AssignmentType.","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"jiarong15"},"content":"            DEADLINE.","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"jiarong15"},"content":"            getStatus();","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"jiarong15"},"content":"     * Indicates whether deadline task has a date","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"jiarong15"},"content":"     * and time element to it.","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":31,"author":{"gitId":"jiarong15"},"content":"    private static final boolean HAS_DATE_TIME \u003d true;","lastModifiedDate":"2021-09-13"},{"lineNumber":32,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":33,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"jiarong15"},"content":"     * Initializes deadline class with a description given by user.","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"jiarong15"},"content":"     * @param desc String of the user input.","lastModifiedDate":"2021-09-13"},{"lineNumber":37,"author":{"gitId":"jiarong15"},"content":"     * @throws WrongDateFormatException if format of date in deadline is wrong.","lastModifiedDate":"2021-09-13"},{"lineNumber":38,"author":{"gitId":"jiarong15"},"content":"     * @throws WrongTimeFormatException if format of time in deadline is wrong.","lastModifiedDate":"2021-09-13"},{"lineNumber":39,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"jiarong15"},"content":"    public Deadline(","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"jiarong15"},"content":"            String desc) throws WrongDateFormatException,","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"jiarong15"},"content":"            WrongTimeFormatException,","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"jiarong15"},"content":"            WrongEventOrDeadlineFormatException {","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"jiarong15"},"content":"        super(desc, HAS_DATE_TIME, TASK_DIRECTIVE);","lastModifiedDate":"2021-09-13"},{"lineNumber":45,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":46,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":47,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"jiarong15"},"content":"     * Initializes a new deadline class with a change of the completion status.","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"jiarong15"},"content":"     * @param desc String of the user input.","lastModifiedDate":"2021-09-13"},{"lineNumber":50,"author":{"gitId":"jiarong15"},"content":"     * @param newStatus String updated status of the task.","lastModifiedDate":"2021-09-13"},{"lineNumber":51,"author":{"gitId":"jiarong15"},"content":"     * @param date Optional date if date exist.","lastModifiedDate":"2021-09-13"},{"lineNumber":52,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"jiarong15"},"content":"    public Deadline(String desc, String newStatus, Optional\u003cDate\u003e date) {","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"jiarong15"},"content":"        super(desc, newStatus, date);","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":56,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":57,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"jiarong15"},"content":"     * returns new deadline task with its completion status updated.","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"jiarong15"},"content":"     * @param newStatus String new completion status of the deadline task.","lastModifiedDate":"2021-09-13"},{"lineNumber":60,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"jiarong15"},"content":"    @Override","lastModifiedDate":"2021-08-20"},{"lineNumber":62,"author":{"gitId":"jiarong15"},"content":"    public Deadline updateStatus(String newStatus) {","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"jiarong15"},"content":"        return new Deadline(this.taskDescription, newStatus, this.date);","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":65,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":66,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"jiarong15"},"content":"     * returns the string of the deadline task to be stored in storage.","lastModifiedDate":"2021-08-31"},{"lineNumber":68,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"jiarong15"},"content":"    @Override","lastModifiedDate":"2021-08-20"},{"lineNumber":70,"author":{"gitId":"jiarong15"},"content":"    public String getOriginalFormatForStorage() {","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"jiarong15"},"content":"        return ASSIGNMENT_TYPE","lastModifiedDate":"2021-09-13"},{"lineNumber":72,"author":{"gitId":"jiarong15"},"content":"                + this.status","lastModifiedDate":"2021-08-31"},{"lineNumber":73,"author":{"gitId":"jiarong15"},"content":"                + \" \"","lastModifiedDate":"2021-08-31"},{"lineNumber":74,"author":{"gitId":"jiarong15"},"content":"                + this.getOutputMessage(","lastModifiedDate":"2021-08-31"},{"lineNumber":75,"author":{"gitId":"jiarong15"},"content":"                        this.date.","lastModifiedDate":"2021-08-31"},{"lineNumber":76,"author":{"gitId":"jiarong15"},"content":"                                get().","lastModifiedDate":"2021-08-31"},{"lineNumber":77,"author":{"gitId":"jiarong15"},"content":"                                getOriginalFormat());","lastModifiedDate":"2021-08-31"},{"lineNumber":78,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":79,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":80,"author":{"gitId":"jiarong15"},"content":"    @Override","lastModifiedDate":"2021-08-20"},{"lineNumber":81,"author":{"gitId":"jiarong15"},"content":"    public String toString() {","lastModifiedDate":"2021-08-20"},{"lineNumber":82,"author":{"gitId":"jiarong15"},"content":"        String outputString \u003d this.getOutputMessage(","lastModifiedDate":"2021-08-31"},{"lineNumber":83,"author":{"gitId":"jiarong15"},"content":"                this.date.","lastModifiedDate":"2021-08-31"},{"lineNumber":84,"author":{"gitId":"jiarong15"},"content":"                        get().","lastModifiedDate":"2021-08-31"},{"lineNumber":85,"author":{"gitId":"jiarong15"},"content":"                        toString());","lastModifiedDate":"2021-08-31"},{"lineNumber":86,"author":{"gitId":"jiarong15"},"content":"        String assignmentProg \u003d ASSIGNMENT_TYPE","lastModifiedDate":"2021-09-13"},{"lineNumber":87,"author":{"gitId":"jiarong15"},"content":"                + this.status","lastModifiedDate":"2021-08-31"},{"lineNumber":88,"author":{"gitId":"jiarong15"},"content":"                + \" \"","lastModifiedDate":"2021-08-31"},{"lineNumber":89,"author":{"gitId":"jiarong15"},"content":"                + outputString;","lastModifiedDate":"2021-08-31"},{"lineNumber":90,"author":{"gitId":"jiarong15"},"content":"        return assignmentProg;","lastModifiedDate":"2021-08-20"},{"lineNumber":91,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":92,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":93,"author":{"gitId":"jiarong15"},"content":"    private String getOutputMessage(String dateExpression) {","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"jiarong15"},"content":"        StringBuilder sb \u003d new StringBuilder(\"\");","lastModifiedDate":"2021-08-20"},{"lineNumber":95,"author":{"gitId":"jiarong15"},"content":"        String[] updatedDesc \u003d this.taskDescription.split(\" \");","lastModifiedDate":"2021-08-29"},{"lineNumber":96,"author":{"gitId":"jiarong15"},"content":"        for (int i \u003d 0; i \u003c updatedDesc.length; i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"jiarong15"},"content":"            String item \u003d updatedDesc[i];","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"jiarong15"},"content":"            if (item.contains(\"/\" + TASK_DIRECTIVE)) {","lastModifiedDate":"2021-09-13"},{"lineNumber":99,"author":{"gitId":"jiarong15"},"content":"                break;","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"jiarong15"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"jiarong15"},"content":"            sb.append(item + \" \");","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"jiarong15"},"content":"        return sb.toString()","lastModifiedDate":"2021-08-31"},{"lineNumber":104,"author":{"gitId":"jiarong15"},"content":"                + \"(\"","lastModifiedDate":"2021-08-31"},{"lineNumber":105,"author":{"gitId":"jiarong15"},"content":"                + TASK_DIRECTIVE","lastModifiedDate":"2021-09-13"},{"lineNumber":106,"author":{"gitId":"jiarong15"},"content":"                + \": \"","lastModifiedDate":"2021-08-31"},{"lineNumber":107,"author":{"gitId":"jiarong15"},"content":"                + dateExpression","lastModifiedDate":"2021-08-31"},{"lineNumber":108,"author":{"gitId":"jiarong15"},"content":"                + \")\";","lastModifiedDate":"2021-08-31"},{"lineNumber":109,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":110,"author":{"gitId":"jiarong15"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"jiarong15":110}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiarong15"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"jiarong15"},"content":"import duke.assignment.AssignmentType;","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"jiarong15"},"content":"import duke.exceptions.WrongDateFormatException;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"jiarong15"},"content":"import duke.exceptions.WrongEventOrDeadlineFormatException;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"jiarong15"},"content":"import duke.exceptions.WrongTimeFormatException;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"jiarong15"},"content":"import duke.date.Date;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"jiarong15"},"content":"import java.util.Optional;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":9,"author":{"gitId":"jiarong15"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"jiarong15"},"content":" * Class that specifies the properties of event task.","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"jiarong15"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"jiarong15"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"jiarong15"},"content":"     * Indicates the expected input of a","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"jiarong15"},"content":"     * event task when input by user.","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"jiarong15"},"content":"    private static final String TASK_DIRECTIVE \u003d \"at\";","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":21,"author":{"gitId":"jiarong15"},"content":"     * Displays the type of task assignment of","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"jiarong15"},"content":"     * event task in this case [E].","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"jiarong15"},"content":"    private static final String ASSIGNMENT_TYPE \u003d AssignmentType.","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"jiarong15"},"content":"            EVENT.","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"jiarong15"},"content":"            getStatus();","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":28,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"jiarong15"},"content":"     * Indicates whether event task has a date","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"jiarong15"},"content":"     * and time element to it.","lastModifiedDate":"2021-09-13"},{"lineNumber":31,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"jiarong15"},"content":"    private static final boolean HAS_DATE_TIME \u003d true;","lastModifiedDate":"2021-09-13"},{"lineNumber":33,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":35,"author":{"gitId":"jiarong15"},"content":"     * Initializes event class with a description given by user.","lastModifiedDate":"2021-09-13"},{"lineNumber":36,"author":{"gitId":"jiarong15"},"content":"     * @param desc String of user input.","lastModifiedDate":"2021-09-13"},{"lineNumber":37,"author":{"gitId":"jiarong15"},"content":"     * @throws WrongDateFormatException if format of date in","lastModifiedDate":"2021-09-13"},{"lineNumber":38,"author":{"gitId":"jiarong15"},"content":"     * event is wrong.","lastModifiedDate":"2021-09-13"},{"lineNumber":39,"author":{"gitId":"jiarong15"},"content":"     * @throws WrongTimeFormatException if format of time in","lastModifiedDate":"2021-09-13"},{"lineNumber":40,"author":{"gitId":"jiarong15"},"content":"     * event is wrong.","lastModifiedDate":"2021-09-13"},{"lineNumber":41,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":42,"author":{"gitId":"jiarong15"},"content":"    public Event(","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"jiarong15"},"content":"            String desc) throws WrongDateFormatException,","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"jiarong15"},"content":"            WrongTimeFormatException,","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"jiarong15"},"content":"            WrongEventOrDeadlineFormatException {","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"jiarong15"},"content":"        super(desc, HAS_DATE_TIME, TASK_DIRECTIVE);","lastModifiedDate":"2021-09-13"},{"lineNumber":47,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":48,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":49,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"jiarong15"},"content":"     * Initializes a new event class with a change of the completion status.","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"jiarong15"},"content":"     * @param desc String of the user input","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"jiarong15"},"content":"     * @param newStatus String updated status of the task","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"jiarong15"},"content":"     * @param date Optional date if date exist","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"jiarong15"},"content":"    public Event(String desc, String newStatus, Optional\u003cDate\u003e date) {","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"jiarong15"},"content":"        super(desc, newStatus, date);","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":58,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":59,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"jiarong15"},"content":"     * Returns new event task with","lastModifiedDate":"2021-09-13"},{"lineNumber":61,"author":{"gitId":"jiarong15"},"content":"     * its completion status updated.","lastModifiedDate":"2021-09-13"},{"lineNumber":62,"author":{"gitId":"jiarong15"},"content":"     * @param newStatus String new completion","lastModifiedDate":"2021-09-13"},{"lineNumber":63,"author":{"gitId":"jiarong15"},"content":"     * status of the event task.","lastModifiedDate":"2021-09-13"},{"lineNumber":64,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"jiarong15"},"content":"    @Override","lastModifiedDate":"2021-08-20"},{"lineNumber":66,"author":{"gitId":"jiarong15"},"content":"    public Event updateStatus(String newStatus) {","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"jiarong15"},"content":"        return new Event(this.taskDescription, newStatus, this.date);","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":69,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":70,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":71,"author":{"gitId":"jiarong15"},"content":"     * Returns the string of the event","lastModifiedDate":"2021-09-13"},{"lineNumber":72,"author":{"gitId":"jiarong15"},"content":"     * task to be stored in storage.","lastModifiedDate":"2021-09-13"},{"lineNumber":73,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":74,"author":{"gitId":"jiarong15"},"content":"    @Override","lastModifiedDate":"2021-08-20"},{"lineNumber":75,"author":{"gitId":"jiarong15"},"content":"    public String getOriginalFormatForStorage() {","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"jiarong15"},"content":"        return ASSIGNMENT_TYPE","lastModifiedDate":"2021-09-13"},{"lineNumber":77,"author":{"gitId":"jiarong15"},"content":"                + this.status","lastModifiedDate":"2021-08-31"},{"lineNumber":78,"author":{"gitId":"jiarong15"},"content":"                + \" \"","lastModifiedDate":"2021-08-31"},{"lineNumber":79,"author":{"gitId":"jiarong15"},"content":"                + this.getOutputMessage(","lastModifiedDate":"2021-08-31"},{"lineNumber":80,"author":{"gitId":"jiarong15"},"content":"                        this.date.","lastModifiedDate":"2021-08-31"},{"lineNumber":81,"author":{"gitId":"jiarong15"},"content":"                                get().","lastModifiedDate":"2021-08-31"},{"lineNumber":82,"author":{"gitId":"jiarong15"},"content":"                                getOriginalFormat());","lastModifiedDate":"2021-08-31"},{"lineNumber":83,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":84,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":85,"author":{"gitId":"jiarong15"},"content":"    @Override","lastModifiedDate":"2021-08-20"},{"lineNumber":86,"author":{"gitId":"jiarong15"},"content":"    public String toString() {","lastModifiedDate":"2021-08-20"},{"lineNumber":87,"author":{"gitId":"jiarong15"},"content":"        String outputString \u003d this.getOutputMessage(","lastModifiedDate":"2021-08-30"},{"lineNumber":88,"author":{"gitId":"jiarong15"},"content":"                this.date.","lastModifiedDate":"2021-08-31"},{"lineNumber":89,"author":{"gitId":"jiarong15"},"content":"                        get().","lastModifiedDate":"2021-08-31"},{"lineNumber":90,"author":{"gitId":"jiarong15"},"content":"                        toString());","lastModifiedDate":"2021-08-31"},{"lineNumber":91,"author":{"gitId":"jiarong15"},"content":"        String assignmentProg \u003d ASSIGNMENT_TYPE","lastModifiedDate":"2021-09-13"},{"lineNumber":92,"author":{"gitId":"jiarong15"},"content":"                + this.status","lastModifiedDate":"2021-08-31"},{"lineNumber":93,"author":{"gitId":"jiarong15"},"content":"                + \" \"","lastModifiedDate":"2021-08-31"},{"lineNumber":94,"author":{"gitId":"jiarong15"},"content":"                + outputString;","lastModifiedDate":"2021-08-31"},{"lineNumber":95,"author":{"gitId":"jiarong15"},"content":"        return assignmentProg;","lastModifiedDate":"2021-08-20"},{"lineNumber":96,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":97,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":98,"author":{"gitId":"jiarong15"},"content":"    private String getOutputMessage(String dateExpression) {","lastModifiedDate":"2021-08-26"},{"lineNumber":99,"author":{"gitId":"jiarong15"},"content":"        StringBuilder sb \u003d new StringBuilder(\"\");","lastModifiedDate":"2021-08-20"},{"lineNumber":100,"author":{"gitId":"jiarong15"},"content":"        String[] updatedDesc \u003d this.taskDescription.split(\" \");","lastModifiedDate":"2021-08-29"},{"lineNumber":101,"author":{"gitId":"jiarong15"},"content":"        for (int i \u003d 0; i \u003c updatedDesc.length; i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"jiarong15"},"content":"            String item \u003d updatedDesc[i];","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"jiarong15"},"content":"            if (item.contains(\"/\" + TASK_DIRECTIVE)) {","lastModifiedDate":"2021-09-13"},{"lineNumber":104,"author":{"gitId":"jiarong15"},"content":"                break;","lastModifiedDate":"2021-08-26"},{"lineNumber":105,"author":{"gitId":"jiarong15"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":106,"author":{"gitId":"jiarong15"},"content":"            sb.append(item + \" \");","lastModifiedDate":"2021-08-26"},{"lineNumber":107,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":108,"author":{"gitId":"jiarong15"},"content":"        return sb.toString()","lastModifiedDate":"2021-08-31"},{"lineNumber":109,"author":{"gitId":"jiarong15"},"content":"                + \"(\"","lastModifiedDate":"2021-08-31"},{"lineNumber":110,"author":{"gitId":"jiarong15"},"content":"                + TASK_DIRECTIVE","lastModifiedDate":"2021-09-13"},{"lineNumber":111,"author":{"gitId":"jiarong15"},"content":"                + \": \"","lastModifiedDate":"2021-08-31"},{"lineNumber":112,"author":{"gitId":"jiarong15"},"content":"                + dateExpression","lastModifiedDate":"2021-08-31"},{"lineNumber":113,"author":{"gitId":"jiarong15"},"content":"                + \")\";","lastModifiedDate":"2021-08-31"},{"lineNumber":114,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":115,"author":{"gitId":"jiarong15"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"jiarong15":115}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiarong15"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"jiarong15"},"content":"import duke.date.Date;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"jiarong15"},"content":"import duke.exceptions.WrongDateFormatException;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"jiarong15"},"content":"import duke.exceptions.WrongEventOrDeadlineFormatException;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"jiarong15"},"content":"import duke.exceptions.WrongTimeFormatException;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"jiarong15"},"content":"import java.util.Optional;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"jiarong15"},"content":"import duke.status.Status;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"jiarong15"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"jiarong15"},"content":" * Abstract class that outlines the","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"jiarong15"},"content":" * base structure of a task.","lastModifiedDate":"2021-09-13"},{"lineNumber":13,"author":{"gitId":"jiarong15"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"jiarong15"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"jiarong15"},"content":"     * Displays the task description as string.","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"jiarong15"},"content":"    protected final String taskDescription;","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":21,"author":{"gitId":"jiarong15"},"content":"     * Completed or uncompleted status.","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"jiarong15"},"content":"    protected final String status;","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"jiarong15"},"content":"     * Optional date if it exists.","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"jiarong15"},"content":"    protected final Optional\u003cDate\u003e date;","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"jiarong15"},"content":"     * Initializes a new task object with description","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"jiarong15"},"content":"     * of Task and its placement if any.","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"jiarong15"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"jiarong15"},"content":"     * @param desc String of description of task","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"jiarong15"},"content":"     * @param hasDateTime boolean if the task has a date time attribute","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"jiarong15"},"content":"     * @param taskDirective String of the task with a placement \"at\" or \"by\"","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"jiarong15"},"content":"     * @throws WrongDateFormatException if format of date in a task is wrong","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"jiarong15"},"content":"     * @throws WrongTimeFormatException if format of time in a task is wrong","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"jiarong15"},"content":"    public Task(","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"jiarong15"},"content":"            String desc, boolean hasDateTime,","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"jiarong15"},"content":"            String taskDirective) throws WrongDateFormatException,","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"jiarong15"},"content":"            WrongTimeFormatException,","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"jiarong15"},"content":"            WrongEventOrDeadlineFormatException {","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"jiarong15"},"content":"        this.taskDescription \u003d desc;","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"jiarong15"},"content":"        this.status \u003d Status.NOT_COMPLETED.getStatus();","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"jiarong15"},"content":"        this.date \u003d this.getDateAndTime(desc, hasDateTime, taskDirective);","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"jiarong15"},"content":"    private Optional\u003cDate\u003e getDateAndTime(","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"jiarong15"},"content":"            String desc, boolean hasDateTime,","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"jiarong15"},"content":"            String taskDirective) throws WrongDateFormatException,","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"jiarong15"},"content":"            WrongTimeFormatException,","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"jiarong15"},"content":"            WrongEventOrDeadlineFormatException {","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"jiarong15"},"content":"        if (hasDateTime) {","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"jiarong15"},"content":"            String[] descArray \u003d desc.split(\"/\" + taskDirective);","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"jiarong15"},"content":"            if (descArray.length \u003c\u003d 1) {","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"jiarong15"},"content":"                throw new WrongEventOrDeadlineFormatException();","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"jiarong15"},"content":"            }","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"jiarong15"},"content":"            String dateAndTime \u003d descArray[1].trim();","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"jiarong15"},"content":"            Date outputDate \u003d new Date(dateAndTime);","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"jiarong15"},"content":"            return Optional.ofNullable(outputDate);","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"jiarong15"},"content":"        return Optional.empty();","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"jiarong15"},"content":"     * Overloaded task constructor to update","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"jiarong15"},"content":"     * completion status of a task.","lastModifiedDate":"2021-08-31"},{"lineNumber":70,"author":{"gitId":"jiarong15"},"content":"     * @param desc String description of the task","lastModifiedDate":"2021-08-30"},{"lineNumber":71,"author":{"gitId":"jiarong15"},"content":"     * @param newStatus String updated status of task","lastModifiedDate":"2021-08-31"},{"lineNumber":72,"author":{"gitId":"jiarong15"},"content":"     * @param date Optional date attribute of task","lastModifiedDate":"2021-08-31"},{"lineNumber":73,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":74,"author":{"gitId":"jiarong15"},"content":"    public Task(","lastModifiedDate":"2021-08-30"},{"lineNumber":75,"author":{"gitId":"jiarong15"},"content":"            String desc, String newStatus,","lastModifiedDate":"2021-08-30"},{"lineNumber":76,"author":{"gitId":"jiarong15"},"content":"            Optional\u003cDate\u003e date) {","lastModifiedDate":"2021-08-30"},{"lineNumber":77,"author":{"gitId":"jiarong15"},"content":"        this.taskDescription \u003d desc;","lastModifiedDate":"2021-08-29"},{"lineNumber":78,"author":{"gitId":"jiarong15"},"content":"        this.status \u003d newStatus;","lastModifiedDate":"2021-08-29"},{"lineNumber":79,"author":{"gitId":"jiarong15"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-29"},{"lineNumber":80,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":81,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":82,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":83,"author":{"gitId":"jiarong15"},"content":"     * Converts to appropriate format for storing of tasks.","lastModifiedDate":"2021-09-11"},{"lineNumber":84,"author":{"gitId":"jiarong15"},"content":"     * @return String format of tasks.","lastModifiedDate":"2021-09-11"},{"lineNumber":85,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":86,"author":{"gitId":"jiarong15"},"content":"    public abstract String getOriginalFormatForStorage();","lastModifiedDate":"2021-08-29"},{"lineNumber":87,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":88,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":89,"author":{"gitId":"jiarong15"},"content":"     * Changes the status of a task if it is marked","lastModifiedDate":"2021-09-11"},{"lineNumber":90,"author":{"gitId":"jiarong15"},"content":"     * completed by the user.","lastModifiedDate":"2021-09-11"},{"lineNumber":91,"author":{"gitId":"jiarong15"},"content":"     * @param newStatus String of new status task should be changed to.","lastModifiedDate":"2021-09-11"},{"lineNumber":92,"author":{"gitId":"jiarong15"},"content":"     * @return Task with a status changed if its completed or not.","lastModifiedDate":"2021-09-11"},{"lineNumber":93,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":94,"author":{"gitId":"jiarong15"},"content":"    public abstract Task updateStatus(String newStatus);","lastModifiedDate":"2021-08-29"},{"lineNumber":95,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":96,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":97,"author":{"gitId":"jiarong15"},"content":"     * Returns an optional date object.","lastModifiedDate":"2021-09-13"},{"lineNumber":98,"author":{"gitId":"jiarong15"},"content":"     * @return Optional date","lastModifiedDate":"2021-09-11"},{"lineNumber":99,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":100,"author":{"gitId":"jiarong15"},"content":"    public Optional\u003cDate\u003e getOptionalDate() {","lastModifiedDate":"2021-09-11"},{"lineNumber":101,"author":{"gitId":"jiarong15"},"content":"        return this.date;","lastModifiedDate":"2021-09-11"},{"lineNumber":102,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":103,"author":{"gitId":"jiarong15"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"jiarong15":103}},{"path":"src/main/java/duke/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiarong15"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"jiarong15"},"content":"import duke.assignment.AssignmentType;","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"jiarong15"},"content":"import duke.exceptions.WrongDateFormatException;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"jiarong15"},"content":"import duke.exceptions.WrongEventOrDeadlineFormatException;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"jiarong15"},"content":"import duke.exceptions.WrongTimeFormatException;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"jiarong15"},"content":"import duke.date.Date;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"jiarong15"},"content":"import java.util.Optional;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"jiarong15"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"jiarong15"},"content":" * Class that specifies the","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"jiarong15"},"content":" * properties of todo task.","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"jiarong15"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"jiarong15"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"jiarong15"},"content":"     * To do status.","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"jiarong15"},"content":"    private static final String ASSIGNMENT_TYPE","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"jiarong15"},"content":"            \u003d AssignmentType.TODO.getStatus();","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":21,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"jiarong15"},"content":"     * To do event has no date time element by default.","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"jiarong15"},"content":"    private static final boolean HAS_DATE_TIME \u003d false;","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"jiarong15"},"content":"     * Initializes todo class with a","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"jiarong15"},"content":"     * description given by user.","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"jiarong15"},"content":"     * @param desc String of user input.","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"jiarong15"},"content":"     * @throws WrongDateFormatException if format of date","lastModifiedDate":"2021-09-13"},{"lineNumber":31,"author":{"gitId":"jiarong15"},"content":"     * in todo is wrong.","lastModifiedDate":"2021-09-13"},{"lineNumber":32,"author":{"gitId":"jiarong15"},"content":"     * @throws WrongTimeFormatException if format of time","lastModifiedDate":"2021-09-13"},{"lineNumber":33,"author":{"gitId":"jiarong15"},"content":"     * in todo is wrong.","lastModifiedDate":"2021-09-13"},{"lineNumber":34,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"jiarong15"},"content":"    public ToDo(","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"jiarong15"},"content":"            String desc) throws WrongDateFormatException,","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"jiarong15"},"content":"            WrongTimeFormatException,","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"jiarong15"},"content":"            WrongEventOrDeadlineFormatException {","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"jiarong15"},"content":"        super(desc, HAS_DATE_TIME, \"\");","lastModifiedDate":"2021-09-13"},{"lineNumber":40,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"jiarong15"},"content":"     * Initializes a new todo class with","lastModifiedDate":"2021-09-13"},{"lineNumber":44,"author":{"gitId":"jiarong15"},"content":"     * a change of the completion status.","lastModifiedDate":"2021-09-13"},{"lineNumber":45,"author":{"gitId":"jiarong15"},"content":"     * @param desc String of the user input.","lastModifiedDate":"2021-09-13"},{"lineNumber":46,"author":{"gitId":"jiarong15"},"content":"     * @param newStatus String updated status of the task.","lastModifiedDate":"2021-09-13"},{"lineNumber":47,"author":{"gitId":"jiarong15"},"content":"     * @param date Optional date if date exist.","lastModifiedDate":"2021-09-13"},{"lineNumber":48,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"jiarong15"},"content":"    public ToDo(String desc, String newStatus, Optional\u003cDate\u003e date) {","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"jiarong15"},"content":"        super(desc, newStatus, date);","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"jiarong15"},"content":"     * Returns the string of the todo","lastModifiedDate":"2021-09-13"},{"lineNumber":54,"author":{"gitId":"jiarong15"},"content":"     * task to be stored in storage.","lastModifiedDate":"2021-09-13"},{"lineNumber":55,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"jiarong15"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"jiarong15"},"content":"    public String getOriginalFormatForStorage() {","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"jiarong15"},"content":"        return this.toString();","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"jiarong15"},"content":"     * returns new todo task with its completion status updated.","lastModifiedDate":"2021-09-13"},{"lineNumber":63,"author":{"gitId":"jiarong15"},"content":"     * @param newStatus String new completion","lastModifiedDate":"2021-09-13"},{"lineNumber":64,"author":{"gitId":"jiarong15"},"content":"     * status of the todo task.","lastModifiedDate":"2021-09-13"},{"lineNumber":65,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":66,"author":{"gitId":"jiarong15"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"jiarong15"},"content":"    public ToDo updateStatus(String newStatus) {","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"jiarong15"},"content":"        return new ToDo(this.taskDescription, newStatus, this.date);","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"jiarong15"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"jiarong15"},"content":"    public String toString() {","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"jiarong15"},"content":"        String assignmentProg \u003d ASSIGNMENT_TYPE","lastModifiedDate":"2021-09-13"},{"lineNumber":74,"author":{"gitId":"jiarong15"},"content":"                + this.status","lastModifiedDate":"2021-09-13"},{"lineNumber":75,"author":{"gitId":"jiarong15"},"content":"                + \" \"","lastModifiedDate":"2021-09-13"},{"lineNumber":76,"author":{"gitId":"jiarong15"},"content":"                + this.taskDescription;","lastModifiedDate":"2021-09-13"},{"lineNumber":77,"author":{"gitId":"jiarong15"},"content":"        return assignmentProg;","lastModifiedDate":"2021-08-29"},{"lineNumber":78,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":79,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":80,"author":{"gitId":"jiarong15"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"jiarong15":80}},{"path":"src/main/java/javafxgui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiarong15"},"content":"package javafxgui;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"jiarong15"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"jiarong15"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"jiarong15"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"jiarong15"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"jiarong15"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"jiarong15"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"jiarong15"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"jiarong15"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"jiarong15"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"jiarong15"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"jiarong15"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"jiarong15"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"jiarong15"},"content":"/**","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"jiarong15"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"jiarong15"},"content":" * This control represents a dialog box consisting","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"jiarong15"},"content":" * of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"jiarong15"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"jiarong15"},"content":" */","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"jiarong15"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"jiarong15"},"content":"    @FXML","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"jiarong15"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"jiarong15"},"content":"    @FXML","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"jiarong15"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"jiarong15"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"jiarong15"},"content":"        try {","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"jiarong15"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"jiarong15"},"content":"                    MainWindow.","lastModifiedDate":"2021-09-13"},{"lineNumber":31,"author":{"gitId":"jiarong15"},"content":"                            class.","lastModifiedDate":"2021-09-13"},{"lineNumber":32,"author":{"gitId":"jiarong15"},"content":"                            getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-13"},{"lineNumber":33,"author":{"gitId":"jiarong15"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"jiarong15"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"jiarong15"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"jiarong15"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"jiarong15"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"jiarong15"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"jiarong15"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"jiarong15"},"content":"     * Flips the dialog box such that the","lastModifiedDate":"2021-09-13"},{"lineNumber":45,"author":{"gitId":"jiarong15"},"content":"     * ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-13"},{"lineNumber":46,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":47,"author":{"gitId":"jiarong15"},"content":"    private void flip() {","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"jiarong15"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.","lastModifiedDate":"2021-09-13"},{"lineNumber":49,"author":{"gitId":"jiarong15"},"content":"                observableArrayList(","lastModifiedDate":"2021-09-13"},{"lineNumber":50,"author":{"gitId":"jiarong15"},"content":"                        this.getChildren());","lastModifiedDate":"2021-09-13"},{"lineNumber":51,"author":{"gitId":"jiarong15"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-05"},{"lineNumber":52,"author":{"gitId":"jiarong15"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-05"},{"lineNumber":53,"author":{"gitId":"jiarong15"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-05"},{"lineNumber":54,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":55,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":56,"author":{"gitId":"jiarong15"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-05"},{"lineNumber":57,"author":{"gitId":"jiarong15"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-09-05"},{"lineNumber":58,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":59,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":60,"author":{"gitId":"jiarong15"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-05"},{"lineNumber":61,"author":{"gitId":"jiarong15"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-05"},{"lineNumber":62,"author":{"gitId":"jiarong15"},"content":"        db.flip();","lastModifiedDate":"2021-09-05"},{"lineNumber":63,"author":{"gitId":"jiarong15"},"content":"        return db;","lastModifiedDate":"2021-09-05"},{"lineNumber":64,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":65,"author":{"gitId":"jiarong15"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"jiarong15":65}},{"path":"src/main/java/javafxgui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiarong15"},"content":"package javafxgui;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"jiarong15"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"jiarong15"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"jiarong15"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"jiarong15"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"jiarong15"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"jiarong15"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"jiarong15"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"jiarong15"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"jiarong15"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"jiarong15"},"content":"    @FXML","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"jiarong15"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"jiarong15"},"content":"    @FXML","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"jiarong15"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"jiarong15"},"content":"    @FXML","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"jiarong15"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"jiarong15"},"content":"    @FXML","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"jiarong15"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"jiarong15"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"jiarong15"},"content":"    private Image userImage \u003d new Image(","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"jiarong15"},"content":"            this.getClass().","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"jiarong15"},"content":"                    getResourceAsStream(\"/images/thanos.png\"));","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"jiarong15"},"content":"    private Image dukeImage \u003d new Image(","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"jiarong15"},"content":"            this.getClass().","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"jiarong15"},"content":"                    getResourceAsStream(\"/images/ironman.png\"));","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"jiarong15"},"content":"    @FXML","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"jiarong15"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"jiarong15"},"content":"        scrollPane.","lastModifiedDate":"2021-09-13"},{"lineNumber":34,"author":{"gitId":"jiarong15"},"content":"                vvalueProperty().","lastModifiedDate":"2021-09-13"},{"lineNumber":35,"author":{"gitId":"jiarong15"},"content":"                bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-13"},{"lineNumber":36,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"jiarong15"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"jiarong15"},"content":"        duke \u003d d;","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"jiarong15"},"content":"        dialogContainer.","lastModifiedDate":"2021-09-13"},{"lineNumber":41,"author":{"gitId":"jiarong15"},"content":"                getChildren().","lastModifiedDate":"2021-09-13"},{"lineNumber":42,"author":{"gitId":"jiarong15"},"content":"                add(DialogBox.","lastModifiedDate":"2021-09-13"},{"lineNumber":43,"author":{"gitId":"jiarong15"},"content":"                        getDukeDialog(","lastModifiedDate":"2021-09-13"},{"lineNumber":44,"author":{"gitId":"jiarong15"},"content":"                                duke.getWelcomeMessage(),","lastModifiedDate":"2021-09-13"},{"lineNumber":45,"author":{"gitId":"jiarong15"},"content":"                                dukeImage));","lastModifiedDate":"2021-09-13"},{"lineNumber":46,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":47,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"jiarong15"},"content":"     * Creates two dialog boxes, one echoing user input","lastModifiedDate":"2021-09-13"},{"lineNumber":50,"author":{"gitId":"jiarong15"},"content":"     * and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-13"},{"lineNumber":51,"author":{"gitId":"jiarong15"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-05"},{"lineNumber":52,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":53,"author":{"gitId":"jiarong15"},"content":"    @FXML","lastModifiedDate":"2021-09-05"},{"lineNumber":54,"author":{"gitId":"jiarong15"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-05"},{"lineNumber":55,"author":{"gitId":"jiarong15"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-05"},{"lineNumber":56,"author":{"gitId":"jiarong15"},"content":"        String response \u003d duke.run(input);","lastModifiedDate":"2021-09-05"},{"lineNumber":57,"author":{"gitId":"jiarong15"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-05"},{"lineNumber":58,"author":{"gitId":"jiarong15"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-05"},{"lineNumber":59,"author":{"gitId":"jiarong15"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-09-05"},{"lineNumber":60,"author":{"gitId":"jiarong15"},"content":"        );","lastModifiedDate":"2021-09-05"},{"lineNumber":61,"author":{"gitId":"jiarong15"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-05"},{"lineNumber":62,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":63,"author":{"gitId":"jiarong15"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"jiarong15":63}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jiarong15"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"jiarong15"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"jiarong15"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"jiarong15"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"jiarong15"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"jiarong15"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"jiarong15"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"jiarong15"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"jiarong15"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"jiarong15"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"jiarong15"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"jiarong15"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"jiarong15"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"jiarong15"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"jiarong15":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jiarong15"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"jiarong15"},"content":"\u003c?import java.lang.*?\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"jiarong15"},"content":"\u003c?import java.util.*?\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"jiarong15"},"content":"\u003c?import javafx.scene.*?\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"jiarong15"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"jiarong15"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"jiarong15"},"content":"\u003cAnchorPane xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"jiarong15"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml\"","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"jiarong15"},"content":"            fx:controller\u003d\"javafxgui.MainWindow\"","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"jiarong15"},"content":"            prefHeight\u003d\"400.0\" prefWidth\u003d\"600.0\"\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"jiarong15"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"jiarong15"},"content":"        \u003cGridPane AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"jiarong15"},"content":"            \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"jiarong15"},"content":"                \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"jiarong15"},"content":"                \u003cColumnConstraints /\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"jiarong15"},"content":"            \u003c/columnConstraints\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"jiarong15"},"content":"            \u003crowConstraints\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"jiarong15"},"content":"                \u003cRowConstraints vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"jiarong15"},"content":"                \u003cRowConstraints /\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"jiarong15"},"content":"                \u003cRowConstraints /\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"jiarong15"},"content":"                \u003cRowConstraints /\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"jiarong15"},"content":"            \u003c/rowConstraints\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"jiarong15"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"jiarong15"},"content":"                \u003cTextField fx:id\u003d\"userInput\" minHeight\u003d\"41.0\" minWidth\u003d\"324.0\" onAction\u003d\"#handleUserInput\" AnchorPane.bottomAnchor\u003d\"1.0\" GridPane.columnIndex\u003d\"0\" GridPane.rowIndex\u003d\"3\" GridPane.valignment\u003d\"CENTER\" /\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"jiarong15"},"content":"                \u003cButton fx:id\u003d\"sendButton\" minHeight\u003d\"41.0\" minWidth\u003d\"76.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" text\u003d\"Send\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"3\" GridPane.valignment\u003d\"CENTER\" /\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"jiarong15"},"content":"                \u003cScrollPane fx:id\u003d\"scrollPane\" style\u003d\"-fx-background: #fff2e5;-fx-border-color: #fff2e5\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" maxHeight\u003d\"Infinity\" vvalue\u003d\"1.0\" GridPane.columnIndex\u003d\"0\" GridPane.columnSpan\u003d\"2\" GridPane.rowIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"jiarong15"},"content":"                    \u003ccontent\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"jiarong15"},"content":"                        \u003cVBox fx:id\u003d\"dialogContainer\" maxHeight\u003d\"Infinity\" /\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"jiarong15"},"content":"                    \u003c/content\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"jiarong15"},"content":"                \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"jiarong15"},"content":"            \u003c/children\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"jiarong15"},"content":"        \u003c/GridPane\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"jiarong15"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"jiarong15"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"jiarong15":36}},{"path":"src/test/java/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiarong15"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"jiarong15"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"jiarong15"},"content":"import duke.exceptions.DeleteOutOfBoundsException;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"jiarong15"},"content":"import duke.exceptions.DoneOutOfBoundsException;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"jiarong15"},"content":"import duke.exceptions.WrongDateFormatException;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"jiarong15"},"content":"import duke.exceptions.WrongTimeFormatException;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"jiarong15"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"jiarong15"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"jiarong15"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"jiarong15"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"jiarong15"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"jiarong15"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"jiarong15"},"content":"public class TaskListTest {","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"jiarong15"},"content":"    @Test","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"jiarong15"},"content":"    public void taskList_toString()","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"jiarong15"},"content":"            throws WrongDateFormatException, WrongTimeFormatException {","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"jiarong15"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"jiarong15"},"content":"        tasks.add(new ToDo(\"read book\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"jiarong15"},"content":"        tasks.add(new Event(\"return book /at 2/12/2019 1725\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"jiarong15"},"content":"        TaskList tasklist \u003d new TaskList(tasks);","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"jiarong15"},"content":"        String expectedString \u003d \"1. [T][] read book\"","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"jiarong15"},"content":"                + \"\\n\"","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"jiarong15"},"content":"                + \"2. return book (at: DECEMBER 2 2019 5.25pm\";","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"jiarong15"},"content":"        assertEquals(expectedString, tasklist.toString());","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"jiarong15"},"content":"    @Test","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"jiarong15"},"content":"    public void taskList_deleteTask_success()","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"jiarong15"},"content":"            throws WrongDateFormatException,","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"jiarong15"},"content":"            WrongTimeFormatException,","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"jiarong15"},"content":"            DeleteOutOfBoundsException {","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"jiarong15"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"jiarong15"},"content":"        tasks.add(new ToDo(\"read book\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"jiarong15"},"content":"        tasks.add(new Deadline(\"return book /by 2/12/2019 1800\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"jiarong15"},"content":"        TaskList tasklist \u003d new TaskList(tasks);","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"jiarong15"},"content":"        Task taskRemoved \u003d tasklist.deleteTask(1);","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"jiarong15"},"content":"        assertEquals(\"[T][] read book\", taskRemoved.toString());","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"jiarong15"},"content":"    @Test","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"jiarong15"},"content":"    public void testTaskList()","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"jiarong15"},"content":"            throws WrongDateFormatException, WrongTimeFormatException {","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"jiarong15"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"jiarong15"},"content":"        tasks.add(new ToDo(\"read book\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"jiarong15"},"content":"        tasks.add(new Event(\"return book /at 2/12/2019 1800\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"jiarong15"},"content":"        TaskList tasklist \u003d new TaskList(tasks);","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"jiarong15"},"content":"        assertEquals(tasks, tasklist.getTaskList());","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"jiarong15"},"content":"    @Test","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"jiarong15"},"content":"    public void taskList_markAsDone_Success()","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"jiarong15"},"content":"            throws WrongDateFormatException,","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"jiarong15"},"content":"            WrongTimeFormatException,","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"jiarong15"},"content":"            DoneOutOfBoundsException {","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"jiarong15"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"jiarong15"},"content":"        tasks.add(new ToDo(\"read book\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"jiarong15"},"content":"        tasks.add(new Event(\"return book /at 2/12/2019 1725\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"jiarong15"},"content":"        TaskList tasklist \u003d new TaskList(tasks);","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"jiarong15"},"content":"        Task doneTask \u003d tasklist.markTaskAsDone(2);","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"jiarong15"},"content":"        assertEquals(","lastModifiedDate":"2021-09-13"},{"lineNumber":63,"author":{"gitId":"jiarong15"},"content":"                \"[E][X] return book (at: DECEMBER 2 2019 5.25pm)\",","lastModifiedDate":"2021-09-13"},{"lineNumber":64,"author":{"gitId":"jiarong15"},"content":"                doneTask, toString());","lastModifiedDate":"2021-09-13"},{"lineNumber":65,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":66,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"jiarong15"},"content":"    @Test","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"jiarong15"},"content":"    public void taskList_lengthSuccess()","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"jiarong15"},"content":"            throws WrongDateFormatException, WrongTimeFormatException {","lastModifiedDate":"2021-08-30"},{"lineNumber":70,"author":{"gitId":"jiarong15"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-30"},{"lineNumber":71,"author":{"gitId":"jiarong15"},"content":"        tasks.add(new ToDo(\"read book\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":72,"author":{"gitId":"jiarong15"},"content":"        tasks.add(new Event(\"return book /at 2/12/2019 1800\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":73,"author":{"gitId":"jiarong15"},"content":"        TaskList tasklist \u003d new TaskList(tasks);","lastModifiedDate":"2021-08-30"},{"lineNumber":74,"author":{"gitId":"jiarong15"},"content":"        assertEquals(2, tasklist.getTaskListLength());","lastModifiedDate":"2021-08-30"},{"lineNumber":75,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":76,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":77,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":78,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":79,"author":{"gitId":"jiarong15"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"jiarong15":79}},{"path":"src/test/java/TasksTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiarong15"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"jiarong15"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"jiarong15"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"jiarong15"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"jiarong15"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"jiarong15"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"jiarong15"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"jiarong15"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"jiarong15"},"content":"import duke.exceptions.WrongTimeFormatException;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"jiarong15"},"content":"import duke.exceptions.WrongDateFormatException;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"jiarong15"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"jiarong15"},"content":"public class TasksTest {","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"jiarong15"},"content":"    @Test","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"jiarong15"},"content":"    public void eventTask_errorDate_exceptionThrown() {","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"jiarong15"},"content":"        assertThrows(WrongDateFormatException.class,","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"jiarong15"},"content":"                () -\u003e new Event(\"return book /at Aug 1800\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"jiarong15"},"content":"    @Test","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"jiarong15"},"content":"    public void eventTask_errorTime_exceptionThrown() {","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"jiarong15"},"content":"        assertThrows(DateTimeParseException.class,","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"jiarong15"},"content":"                () -\u003e new Event(\"return book /at 12/12/2019 6pm\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"jiarong15"},"content":"    @Test","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"jiarong15"},"content":"    public void updateEventStatus_success()","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"jiarong15"},"content":"            throws WrongDateFormatException,","lastModifiedDate":"2021-09-13"},{"lineNumber":32,"author":{"gitId":"jiarong15"},"content":"            WrongTimeFormatException {","lastModifiedDate":"2021-09-13"},{"lineNumber":33,"author":{"gitId":"jiarong15"},"content":"        String completed \u003d \"[X]\";","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"jiarong15"},"content":"        Task eventTask \u003d new Event(","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"jiarong15"},"content":"                \"return book /at 12/12/2019 18:00\")","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"jiarong15"},"content":"                .updateStatus(completed);","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"jiarong15"},"content":"        assertEquals(","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"jiarong15"},"content":"                \"[E][X] return book (at: DECEMBER 12 2019 6pm)\",","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"jiarong15"},"content":"                eventTask.toString());","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"jiarong15"},"content":"    @Test","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"jiarong15"},"content":"    public void eventTask_storageString()","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"jiarong15"},"content":"            throws WrongDateFormatException,","lastModifiedDate":"2021-09-13"},{"lineNumber":45,"author":{"gitId":"jiarong15"},"content":"            WrongTimeFormatException {","lastModifiedDate":"2021-09-13"},{"lineNumber":46,"author":{"gitId":"jiarong15"},"content":"        Task eventTask \u003d new Event(\"project meeting /at 12-12-2019 18:00\");","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"jiarong15"},"content":"        assertEquals(","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"jiarong15"},"content":"                \"[E][] project meeting (at: 12-12-2019 18:00)\",","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"jiarong15"},"content":"                eventTask.getOriginalFormatForStorage());","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"jiarong15"},"content":"    @Test","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"jiarong15"},"content":"    public void eventTask_success() {","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"jiarong15"},"content":"        boolean isFailure \u003d false;","lastModifiedDate":"2021-09-13"},{"lineNumber":55,"author":{"gitId":"jiarong15"},"content":"        try {","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"jiarong15"},"content":"            Task eventTask \u003d new Event(\"return book /at 12/12/2019 18:00\");","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"jiarong15"},"content":"            assertFalse(isFailure, \"Event task is indeed a success!\");","lastModifiedDate":"2021-09-13"},{"lineNumber":58,"author":{"gitId":"jiarong15"},"content":"        } catch (WrongTimeFormatException | WrongDateFormatException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"jiarong15"},"content":"            isFailure \u003d true;","lastModifiedDate":"2021-09-13"},{"lineNumber":60,"author":{"gitId":"jiarong15"},"content":"            assertFalse(isFailure, \"Shouldn\u0027t be failing\");","lastModifiedDate":"2021-09-13"},{"lineNumber":61,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"jiarong15"},"content":"    @Test","lastModifiedDate":"2021-08-30"},{"lineNumber":66,"author":{"gitId":"jiarong15"},"content":"    public void toDo_success() {","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"jiarong15"},"content":"        boolean isFailure \u003d false;","lastModifiedDate":"2021-09-13"},{"lineNumber":68,"author":{"gitId":"jiarong15"},"content":"        try {","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"jiarong15"},"content":"            Task todoTask \u003d new ToDo(\"read book\");","lastModifiedDate":"2021-08-30"},{"lineNumber":70,"author":{"gitId":"jiarong15"},"content":"            assertFalse(isFailure, \"To Do task is a success\");","lastModifiedDate":"2021-09-13"},{"lineNumber":71,"author":{"gitId":"jiarong15"},"content":"        } catch (WrongTimeFormatException | WrongDateFormatException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":72,"author":{"gitId":"jiarong15"},"content":"            isFailure \u003d true;","lastModifiedDate":"2021-09-13"},{"lineNumber":73,"author":{"gitId":"jiarong15"},"content":"            assertFalse(isFailure, \"Shouldn\u0027t be failing\");","lastModifiedDate":"2021-09-13"},{"lineNumber":74,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":75,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":76,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":77,"author":{"gitId":"jiarong15"},"content":"    @Test","lastModifiedDate":"2021-08-30"},{"lineNumber":78,"author":{"gitId":"jiarong15"},"content":"    public void toDo_updateStatus_Success()","lastModifiedDate":"2021-08-30"},{"lineNumber":79,"author":{"gitId":"jiarong15"},"content":"            throws WrongDateFormatException, WrongTimeFormatException {","lastModifiedDate":"2021-08-30"},{"lineNumber":80,"author":{"gitId":"jiarong15"},"content":"        String completed \u003d \"[X]\";","lastModifiedDate":"2021-08-30"},{"lineNumber":81,"author":{"gitId":"jiarong15"},"content":"        Task toDoEvent \u003d new ToDo(\"read book\").updateStatus(completed);","lastModifiedDate":"2021-08-30"},{"lineNumber":82,"author":{"gitId":"jiarong15"},"content":"        assertEquals(\"[T][X] read book\", toDoEvent.toString());","lastModifiedDate":"2021-08-30"},{"lineNumber":83,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":84,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":85,"author":{"gitId":"jiarong15"},"content":"    @Test","lastModifiedDate":"2021-08-30"},{"lineNumber":86,"author":{"gitId":"jiarong15"},"content":"    public void toDoTask_updateStatus_storageString()","lastModifiedDate":"2021-08-30"},{"lineNumber":87,"author":{"gitId":"jiarong15"},"content":"            throws WrongDateFormatException, WrongTimeFormatException {","lastModifiedDate":"2021-08-30"},{"lineNumber":88,"author":{"gitId":"jiarong15"},"content":"        Task toDoTask \u003d new ToDo(\"sleep well\");","lastModifiedDate":"2021-08-30"},{"lineNumber":89,"author":{"gitId":"jiarong15"},"content":"        String completed \u003d \"[X]\";","lastModifiedDate":"2021-08-30"},{"lineNumber":90,"author":{"gitId":"jiarong15"},"content":"        assertEquals(\"[T][X] sleep well\",","lastModifiedDate":"2021-08-30"},{"lineNumber":91,"author":{"gitId":"jiarong15"},"content":"                toDoTask","lastModifiedDate":"2021-08-30"},{"lineNumber":92,"author":{"gitId":"jiarong15"},"content":"                        .updateStatus(completed)","lastModifiedDate":"2021-08-30"},{"lineNumber":93,"author":{"gitId":"jiarong15"},"content":"                        .getOriginalFormatForStorage());","lastModifiedDate":"2021-08-30"},{"lineNumber":94,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":95,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":96,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":97,"author":{"gitId":"jiarong15"},"content":"    @Test","lastModifiedDate":"2021-08-30"},{"lineNumber":98,"author":{"gitId":"jiarong15"},"content":"    public void deadlineTask_Success() {","lastModifiedDate":"2021-08-30"},{"lineNumber":99,"author":{"gitId":"jiarong15"},"content":"        boolean isFailure \u003d false;","lastModifiedDate":"2021-09-13"},{"lineNumber":100,"author":{"gitId":"jiarong15"},"content":"        try {","lastModifiedDate":"2021-08-30"},{"lineNumber":101,"author":{"gitId":"jiarong15"},"content":"            Task deadlineTask \u003d new Deadline(","lastModifiedDate":"2021-09-13"},{"lineNumber":102,"author":{"gitId":"jiarong15"},"content":"                    \"return book /by 12/12/2019 18:00\");","lastModifiedDate":"2021-09-13"},{"lineNumber":103,"author":{"gitId":"jiarong15"},"content":"            assertFalse(isFailure, \"Deadline task is a success\");","lastModifiedDate":"2021-09-13"},{"lineNumber":104,"author":{"gitId":"jiarong15"},"content":"        } catch (WrongTimeFormatException | WrongDateFormatException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":105,"author":{"gitId":"jiarong15"},"content":"            isFailure \u003d true;","lastModifiedDate":"2021-09-13"},{"lineNumber":106,"author":{"gitId":"jiarong15"},"content":"            assertFalse(isFailure, \"Shouldn\u0027t be failing\");","lastModifiedDate":"2021-09-13"},{"lineNumber":107,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":108,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":109,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":110,"author":{"gitId":"jiarong15"},"content":"    @Test","lastModifiedDate":"2021-08-30"},{"lineNumber":111,"author":{"gitId":"jiarong15"},"content":"    public void deadlineTask_Date_exceptionThrown() {","lastModifiedDate":"2021-08-30"},{"lineNumber":112,"author":{"gitId":"jiarong15"},"content":"        assertThrows(WrongDateFormatException.class,","lastModifiedDate":"2021-08-30"},{"lineNumber":113,"author":{"gitId":"jiarong15"},"content":"                () -\u003e new Deadline(","lastModifiedDate":"2021-09-13"},{"lineNumber":114,"author":{"gitId":"jiarong15"},"content":"                        \"project meeting /by December 12 2019 1800\"));","lastModifiedDate":"2021-09-13"},{"lineNumber":115,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":116,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":117,"author":{"gitId":"jiarong15"},"content":"    @Test","lastModifiedDate":"2021-08-30"},{"lineNumber":118,"author":{"gitId":"jiarong15"},"content":"    public void deadlineTask_Time_exceptionThrown() {","lastModifiedDate":"2021-08-30"},{"lineNumber":119,"author":{"gitId":"jiarong15"},"content":"        assertThrows(DateTimeParseException.class,","lastModifiedDate":"2021-08-30"},{"lineNumber":120,"author":{"gitId":"jiarong15"},"content":"                () -\u003e new Deadline(\"project meeting /by 12/08/2020 6pm\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":121,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":122,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":123,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":124,"author":{"gitId":"jiarong15"},"content":"    @Test","lastModifiedDate":"2021-08-30"},{"lineNumber":125,"author":{"gitId":"jiarong15"},"content":"    public void deadlineTask_updateStatus_success()","lastModifiedDate":"2021-08-30"},{"lineNumber":126,"author":{"gitId":"jiarong15"},"content":"            throws WrongDateFormatException, WrongTimeFormatException {","lastModifiedDate":"2021-08-30"},{"lineNumber":127,"author":{"gitId":"jiarong15"},"content":"        String completed \u003d \"[X]\";","lastModifiedDate":"2021-08-30"},{"lineNumber":128,"author":{"gitId":"jiarong15"},"content":"        Task deadlineTask \u003d new Deadline(","lastModifiedDate":"2021-08-30"},{"lineNumber":129,"author":{"gitId":"jiarong15"},"content":"                \"return book /by 12/12/2019 18:20\")","lastModifiedDate":"2021-08-30"},{"lineNumber":130,"author":{"gitId":"jiarong15"},"content":"                .updateStatus(completed);","lastModifiedDate":"2021-08-30"},{"lineNumber":131,"author":{"gitId":"jiarong15"},"content":"        assertEquals(","lastModifiedDate":"2021-08-30"},{"lineNumber":132,"author":{"gitId":"jiarong15"},"content":"                \"[D][X] return book (by: DECEMBER 12 2019 6.20pm)\",","lastModifiedDate":"2021-08-30"},{"lineNumber":133,"author":{"gitId":"jiarong15"},"content":"                deadlineTask.toString());","lastModifiedDate":"2021-08-30"},{"lineNumber":134,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":135,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":136,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":137,"author":{"gitId":"jiarong15"},"content":"    @Test","lastModifiedDate":"2021-08-30"},{"lineNumber":138,"author":{"gitId":"jiarong15"},"content":"    public void deadlineTask_updateStatus_storageString()","lastModifiedDate":"2021-08-30"},{"lineNumber":139,"author":{"gitId":"jiarong15"},"content":"            throws WrongDateFormatException,","lastModifiedDate":"2021-09-13"},{"lineNumber":140,"author":{"gitId":"jiarong15"},"content":"            WrongTimeFormatException {","lastModifiedDate":"2021-09-13"},{"lineNumber":141,"author":{"gitId":"jiarong15"},"content":"        Task deadlineTask \u003d new Deadline(","lastModifiedDate":"2021-09-13"},{"lineNumber":142,"author":{"gitId":"jiarong15"},"content":"                \"return book /by 12/12/2019 18:20\");","lastModifiedDate":"2021-09-13"},{"lineNumber":143,"author":{"gitId":"jiarong15"},"content":"        String completed \u003d \"[X]\";","lastModifiedDate":"2021-08-30"},{"lineNumber":144,"author":{"gitId":"jiarong15"},"content":"        assertEquals(\"[D][X] return book (by: 12-12-2019 18:20)\",","lastModifiedDate":"2021-08-30"},{"lineNumber":145,"author":{"gitId":"jiarong15"},"content":"                deadlineTask","lastModifiedDate":"2021-08-30"},{"lineNumber":146,"author":{"gitId":"jiarong15"},"content":"                        .updateStatus(completed)","lastModifiedDate":"2021-08-30"},{"lineNumber":147,"author":{"gitId":"jiarong15"},"content":"                        .getOriginalFormatForStorage());","lastModifiedDate":"2021-08-30"},{"lineNumber":148,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":149,"author":{"gitId":"jiarong15"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"jiarong15":149}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jiarong15"},"content":"todo borrow book","lastModifiedDate":"2021-08-20"},{"lineNumber":2,"author":{"gitId":"jiarong15"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-20"},{"lineNumber":3,"author":{"gitId":"jiarong15"},"content":"list","lastModifiedDate":"2021-08-20"},{"lineNumber":4,"author":{"gitId":"jiarong15"},"content":"done 2","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"jiarong15"},"content":"list","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"jiarong15":5}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"jiarong15"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java ..\\src\\main\\java\\commands\\*.java ..\\src\\main\\java\\assignment\\*.java ..\\src\\main\\java\\exceptions\\*.java ..\\src\\main\\java\\status\\*.java","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"jiarong15"},"content":"java -classpath ..\\bin LaunchDuke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jiarong15":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"jiarong15"},"content":"if ! javac -cp ../src/main/java; ./src/main/java/commands; ../src/main/java/assignment; ../src/main/java/exceptions; ../src/main/java/status -Xlint:none -d ../bin ../src/main/java/*.java; ../src/main/java/commands/*.java ../src/main/java/assignment/*.java ../src/main/java/exceptions/*.java ../src/main/java/status/*.java","lastModifiedDate":"2021-08-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"jiarong15"},"content":"java -classpath ../bin LaunchDuke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jiarong15":2,"-":36}}]
