[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"lhw-1"},"content":"# main.java.Duke project template","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"lhw-1"},"content":"3. After that, locate the `src/main/java/main.java.Duke.java` file, right-click it, and choose `Run main.java.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"lhw-1":2,"-":22}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lhw-1"},"content":"package main.java;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"lhw-1"},"content":"import main.java.bot.Bot;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"lhw-1"},"content":"        Bot bot \u003d new Bot();","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"lhw-1"},"content":"        bot.start();","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"lhw-1"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"lhw-1":8,"-":3}},{"path":"src/main/java/bot/Bot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lhw-1"},"content":"package main.java.bot;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"lhw-1"},"content":"import main.java.command.Command;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"lhw-1"},"content":"public class Bot {","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"lhw-1"},"content":"     private TaskList tasks;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"lhw-1"},"content":"     private UserInterface ui;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"lhw-1"},"content":"     private static boolean isRunning;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"lhw-1"},"content":"     public Bot() {","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"lhw-1"},"content":"         ui \u003d new UserInterface();","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"lhw-1"},"content":"         try {","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"lhw-1"},"content":"            tasks \u003d Storage.load();","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"lhw-1"},"content":"         } catch (DukeException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"lhw-1"},"content":"            ui.showLoadingError();","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"lhw-1"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"lhw-1"},"content":"         }","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"lhw-1"},"content":"     }","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"lhw-1"},"content":"     public void start() {","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"lhw-1"},"content":"         ui.showWelcome();","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"lhw-1"},"content":"         isRunning \u003d false;","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"lhw-1"},"content":"         while (!isRunning) {","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"lhw-1"},"content":"             try {","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"lhw-1"},"content":"                 String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"lhw-1"},"content":"                 Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"lhw-1"},"content":"                 c.execute(tasks, ui);","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"lhw-1"},"content":"             } catch (DukeException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"lhw-1"},"content":"                 ui.showError(e.getMessage());","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"lhw-1"},"content":"             }","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"lhw-1"},"content":"         }","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"lhw-1"},"content":"     }","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"lhw-1"},"content":"     public static void stop() {","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"lhw-1"},"content":"         isRunning \u003d true;","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"lhw-1"},"content":"     }","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"lhw-1"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"lhw-1":42}},{"path":"src/main/java/bot/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lhw-1"},"content":"package main.java.bot;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"lhw-1"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"lhw-1"},"content":" * A class that handles exceptions for the Chatbot.","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"lhw-1"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"lhw-1"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"lhw-1"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"lhw-1"},"content":"     * Constructor for the DukeException class","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"lhw-1"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"lhw-1"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"lhw-1"},"content":"        super(\"☹ OOPS!!! It looks like was an error handling your request!\\n\\nThe error is as follows:\\n\" + errorMessage);","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"lhw-1"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"lhw-1":14}},{"path":"src/main/java/bot/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lhw-1"},"content":"package main.java.bot;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"lhw-1"},"content":"import main.java.command.Command;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"lhw-1"},"content":"import main.java.command.ListCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"lhw-1"},"content":"import main.java.command.DoneCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"lhw-1"},"content":"import main.java.command.DeleteCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"lhw-1"},"content":"import main.java.command.TodoCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"lhw-1"},"content":"import main.java.command.DeadlineCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"lhw-1"},"content":"import main.java.command.EventCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"lhw-1"},"content":"import main.java.command.ExitCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"lhw-1"},"content":"public class Parser {","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"lhw-1"},"content":"    private Command command;","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"lhw-1"},"content":"    public static Command parse(String input) throws DukeException {","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"lhw-1"},"content":"        if (input.equals(\"list\")) {","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"lhw-1"},"content":"            return new ListCommand(input);","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"lhw-1"},"content":"        } else if (input.startsWith(\"done \")) {","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"lhw-1"},"content":"            return new DoneCommand(input);","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"lhw-1"},"content":"        } else if (input.startsWith(\"delete \")) {","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"lhw-1"},"content":"            return new DeleteCommand(input);","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"lhw-1"},"content":"        } else if (input.startsWith(\"todo \")) {","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"lhw-1"},"content":"            return new TodoCommand(input);","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"lhw-1"},"content":"        } else if (input.startsWith(\"deadline \") \u0026\u0026 input.contains(\"/by \")) {","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"lhw-1"},"content":"            return new DeadlineCommand(input);","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"lhw-1"},"content":"        } else if (input.startsWith(\"event \") \u0026\u0026 input.contains(\"/at \")) {","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"lhw-1"},"content":"            return new EventCommand(input);","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"lhw-1"},"content":"        } else if (input.equals(\"bye\")) {","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"lhw-1"},"content":"            return new ExitCommand(input);","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"lhw-1"},"content":"        } else {","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"lhw-1"},"content":"            throw new DukeException(\"You\u0027ve entered an unknown request... The main.java.bot doesn\u0027t know what that means!\");","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"lhw-1"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"lhw-1"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"lhw-1":52}},{"path":"src/main/java/bot/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lhw-1"},"content":"package main.java.bot;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"lhw-1"},"content":"import main.java.task.Task;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"lhw-1"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"lhw-1"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"lhw-1"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"lhw-1"},"content":"import java.io.File;","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"lhw-1"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"lhw-1"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"lhw-1"},"content":"public class Storage {","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"lhw-1"},"content":"    private static final String FILE_PATH \u003d \"data/duke.txt\";","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"lhw-1"},"content":"    public static TaskList load() throws DukeException {","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"lhw-1"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"lhw-1"},"content":"            // Set up the list of lines and the reader","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"lhw-1"},"content":"            TaskList list \u003d new TaskList();","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"lhw-1"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(FILE_PATH));","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"lhw-1"},"content":"            // Read the lines from the file specified","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"lhw-1"},"content":"            // FileNotFoundException \u003c: IOException","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"lhw-1"},"content":"            String line;","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"lhw-1"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"lhw-1"},"content":"                list.addTask(Task.parseFromStorage(line));","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"lhw-1"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"lhw-1"},"content":"            // Return the parsed list of tasks","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"lhw-1"},"content":"            return list;","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"lhw-1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"lhw-1"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"lhw-1"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"lhw-1"},"content":"    public static void save(TaskList list) throws DukeException {","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"lhw-1"},"content":"        // Set up the file","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"lhw-1"},"content":"        String absolutePath \u003d new File(FILE_PATH).getAbsolutePath();","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"lhw-1"},"content":"        File file \u003d new File(absolutePath);","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"lhw-1"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"lhw-1"},"content":"            if (!file.exists()) {","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"lhw-1"},"content":"                file.createNewFile();","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"lhw-1"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"lhw-1"},"content":"            // Set up the writer using absolute path","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"lhw-1"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(absolutePath));","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"lhw-1"},"content":"            // Write the lines from the list into the file","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"lhw-1"},"content":"            for (int i \u003d 0; i \u003c list.getSize(); i++) {","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"lhw-1"},"content":"                writer.write(list.getTask(i).convertToStorageFormat());","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"lhw-1"},"content":"                writer.newLine();","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"lhw-1"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"lhw-1"},"content":"            writer.close();","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"lhw-1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"lhw-1"},"content":"            throw new DukeException(e.getMessage() + \".\");","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"lhw-1"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"lhw-1"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"lhw-1":63}},{"path":"src/main/java/bot/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lhw-1"},"content":"package main.java.bot;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"lhw-1"},"content":"import main.java.task.Task;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"lhw-1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"lhw-1"},"content":"public class TaskList {","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"lhw-1"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"lhw-1"},"content":"    TaskList() {","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"lhw-1"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"lhw-1"},"content":"    TaskList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"lhw-1"},"content":"        this.list \u003d list;","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"lhw-1"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"lhw-1"},"content":"        return this.list;","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"lhw-1"},"content":"    public void setList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"lhw-1"},"content":"        this.list \u003d list;","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"lhw-1"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"lhw-1"},"content":"        return this.list.get(index);","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"lhw-1"},"content":"    public void setTask(int index, Task task) {","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"lhw-1"},"content":"        this.list.set(index, task);","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"lhw-1"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"lhw-1"},"content":"        this.list.add(task);","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"lhw-1"},"content":"    public void removeTask(int index) {","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"lhw-1"},"content":"        this.list.remove(index);","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"lhw-1"},"content":"    public int getSize() { return this.list.size(); }","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"lhw-1"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"lhw-1":44}},{"path":"src/main/java/bot/UserInterface.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lhw-1"},"content":"package main.java.bot;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"lhw-1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"lhw-1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"lhw-1"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"lhw-1"},"content":"public class UserInterface {","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"lhw-1"},"content":"    private Scanner reader;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"lhw-1"},"content":"    private static DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy kkmm\");","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"lhw-1"},"content":"    private static DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy - hh:mm a\");","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"lhw-1"},"content":"    UserInterface() {","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"lhw-1"},"content":"        this.reader \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"lhw-1"},"content":"    public String readCommand() {","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"lhw-1"},"content":"        return reader.nextLine();","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"lhw-1"},"content":"    public void showError(String error) {","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"lhw-1"},"content":"        System.out.println(\"-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"lhw-1"},"content":"                + error","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"lhw-1"},"content":"                + \"\\n-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~\\n\");","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"lhw-1"},"content":"    public void showLoadingError() {","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"lhw-1"},"content":"        System.out.println(\"-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"lhw-1"},"content":"                + \"Creating a new storage for the user...\"","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"lhw-1"},"content":"                + \"\\n-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~\\n\");","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"lhw-1"},"content":"    public void showWelcome() {","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"lhw-1"},"content":"        System.out.println(\"-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"lhw-1"},"content":"                + \"Hello! My name is Duke!\\n\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"lhw-1"},"content":"                + \" ____        _        \\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"lhw-1"},"content":"                + \"|  _ \\\\ _   _| |  ____ \\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"lhw-1"},"content":"                + \"| | | | | | | |_/ _  \\\\\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"lhw-1"},"content":"                + \"| |_| | |_| |  \u003c   __/\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"lhw-1"},"content":"                + \"|____/ \\\\____|_|\\\\_\\\\___|\\n\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"lhw-1"},"content":"                + \"What can I do for you today?\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"lhw-1"},"content":"                + \"-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~\\n\");","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"lhw-1"},"content":"    public void showBye() {","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"lhw-1"},"content":"        System.out.println(\"-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"lhw-1"},"content":"                + \"Bye... Hope to see you again soon!\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"lhw-1"},"content":"                + \"-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~\\n\");","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"lhw-1"},"content":"        Bot.stop();","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"lhw-1"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"lhw-1"},"content":"     * Shows the message for a main.java.task being added, according to the type of the main.java.task given.","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"lhw-1"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"lhw-1"},"content":"     * @param input The main.java.task to be added to the list.","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"lhw-1"},"content":"     * @param type  The type id. Todo: 1, Deadline: 2, Event: 3.","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"lhw-1"},"content":"     * @param length The current length of the list.","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"lhw-1"},"content":"     * @param time  The information regarding the main.java.task (In the format of \"(By: ...)\" or \"(At: ...)\", or \"\" for Todos)","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"lhw-1"},"content":"     * @return The String sequence showing that the main.java.task has been added to the list.","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"lhw-1"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"lhw-1"},"content":"    public static void showTaskAdded(String input, int type, int length, String time) {","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"lhw-1"},"content":"        // Determine the string that displays the type of main.java.task","lastModifiedDate":"2021-08-28"},{"lineNumber":66,"author":{"gitId":"lhw-1"},"content":"        String taskType;","lastModifiedDate":"2021-08-28"},{"lineNumber":67,"author":{"gitId":"lhw-1"},"content":"        String prefix;","lastModifiedDate":"2021-08-28"},{"lineNumber":68,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":69,"author":{"gitId":"lhw-1"},"content":"        switch (type) {","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"lhw-1"},"content":"            case 1:","lastModifiedDate":"2021-08-28"},{"lineNumber":71,"author":{"gitId":"lhw-1"},"content":"                taskType \u003d \"main.java.task (Todo)\";","lastModifiedDate":"2021-08-28"},{"lineNumber":72,"author":{"gitId":"lhw-1"},"content":"                prefix \u003d \"[T][ ]\";","lastModifiedDate":"2021-08-28"},{"lineNumber":73,"author":{"gitId":"lhw-1"},"content":"                break;","lastModifiedDate":"2021-08-28"},{"lineNumber":74,"author":{"gitId":"lhw-1"},"content":"            case 2:","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"lhw-1"},"content":"                taskType \u003d \"main.java.task (Deadline)\";","lastModifiedDate":"2021-08-28"},{"lineNumber":76,"author":{"gitId":"lhw-1"},"content":"                prefix \u003d \"[D][ ]\";","lastModifiedDate":"2021-08-28"},{"lineNumber":77,"author":{"gitId":"lhw-1"},"content":"                break;","lastModifiedDate":"2021-08-28"},{"lineNumber":78,"author":{"gitId":"lhw-1"},"content":"            case 3:","lastModifiedDate":"2021-08-28"},{"lineNumber":79,"author":{"gitId":"lhw-1"},"content":"                taskType \u003d \"main.java.task (Event)\";","lastModifiedDate":"2021-08-28"},{"lineNumber":80,"author":{"gitId":"lhw-1"},"content":"                prefix \u003d \"[E][ ]\";","lastModifiedDate":"2021-08-28"},{"lineNumber":81,"author":{"gitId":"lhw-1"},"content":"                break;","lastModifiedDate":"2021-08-28"},{"lineNumber":82,"author":{"gitId":"lhw-1"},"content":"            default:","lastModifiedDate":"2021-08-28"},{"lineNumber":83,"author":{"gitId":"lhw-1"},"content":"                taskType \u003d \"\";","lastModifiedDate":"2021-08-28"},{"lineNumber":84,"author":{"gitId":"lhw-1"},"content":"                prefix \u003d \"\";","lastModifiedDate":"2021-08-28"},{"lineNumber":85,"author":{"gitId":"lhw-1"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":86,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":87,"author":{"gitId":"lhw-1"},"content":"        // Return the message accordingly","lastModifiedDate":"2021-08-28"},{"lineNumber":88,"author":{"gitId":"lhw-1"},"content":"        System.out.println(\"-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":89,"author":{"gitId":"lhw-1"},"content":"                + \"Alright. I\u0027ve added the following \"","lastModifiedDate":"2021-08-28"},{"lineNumber":90,"author":{"gitId":"lhw-1"},"content":"                + taskType","lastModifiedDate":"2021-08-28"},{"lineNumber":91,"author":{"gitId":"lhw-1"},"content":"                + \":\\n--\u003e \"","lastModifiedDate":"2021-08-28"},{"lineNumber":92,"author":{"gitId":"lhw-1"},"content":"                + prefix","lastModifiedDate":"2021-08-28"},{"lineNumber":93,"author":{"gitId":"lhw-1"},"content":"                + \" \"","lastModifiedDate":"2021-08-28"},{"lineNumber":94,"author":{"gitId":"lhw-1"},"content":"                + input","lastModifiedDate":"2021-08-28"},{"lineNumber":95,"author":{"gitId":"lhw-1"},"content":"                + (type \u003d\u003d 2","lastModifiedDate":"2021-08-28"},{"lineNumber":96,"author":{"gitId":"lhw-1"},"content":"                ? \"(By: \" + LocalDateTime.parse(time, inputFormatter).format(outputFormatter) + \")\"","lastModifiedDate":"2021-08-28"},{"lineNumber":97,"author":{"gitId":"lhw-1"},"content":"                : type \u003d\u003d 3","lastModifiedDate":"2021-08-28"},{"lineNumber":98,"author":{"gitId":"lhw-1"},"content":"                ? \"(At: \" + LocalDateTime.parse(time, inputFormatter).format(outputFormatter) + \")\"","lastModifiedDate":"2021-08-28"},{"lineNumber":99,"author":{"gitId":"lhw-1"},"content":"                : \"\")","lastModifiedDate":"2021-08-28"},{"lineNumber":100,"author":{"gitId":"lhw-1"},"content":"                + \"\\n\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":101,"author":{"gitId":"lhw-1"},"content":"                + \"You now have \"","lastModifiedDate":"2021-08-28"},{"lineNumber":102,"author":{"gitId":"lhw-1"},"content":"                + (length + 1)","lastModifiedDate":"2021-08-28"},{"lineNumber":103,"author":{"gitId":"lhw-1"},"content":"                + (length \u003d\u003d 0 ? \"main/java/task\" : \" tasks\")","lastModifiedDate":"2021-08-28"},{"lineNumber":104,"author":{"gitId":"lhw-1"},"content":"                + \" in the list.\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":105,"author":{"gitId":"lhw-1"},"content":"                + \"-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~\\n\");","lastModifiedDate":"2021-08-28"},{"lineNumber":106,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":107,"author":{"gitId":"lhw-1"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"lhw-1":107}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lhw-1"},"content":"package main.java.command;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"lhw-1"},"content":"import main.java.bot.DukeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"lhw-1"},"content":"import main.java.bot.TaskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"lhw-1"},"content":"import main.java.bot.UserInterface;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"lhw-1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"lhw-1"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"lhw-1"},"content":"    protected String input;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"lhw-1"},"content":"    protected DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy kkmm\");","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"lhw-1"},"content":"    public Command(String input) {","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"lhw-1"},"content":"        this.input \u003d input;","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"lhw-1"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"lhw-1"},"content":"     * An abstract function that creates and returns the reply according to the user input.","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"lhw-1"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"lhw-1"},"content":"     * @return A response corresponding to the user input / main.java.command.","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"lhw-1"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"lhw-1"},"content":"    public abstract void execute(TaskList list, UserInterface ui) throws DukeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"lhw-1"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"lhw-1":26}},{"path":"src/main/java/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lhw-1"},"content":"package main.java.command;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"lhw-1"},"content":"import main.java.bot.DukeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"lhw-1"},"content":"import main.java.bot.Storage;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"lhw-1"},"content":"import main.java.bot.TaskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"lhw-1"},"content":"import main.java.bot.UserInterface;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"lhw-1"},"content":"import main.java.task.DeadlineTask;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"lhw-1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"lhw-1"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"lhw-1"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"lhw-1"},"content":"    public DeadlineCommand(String input) {","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"lhw-1"},"content":"        super(input);","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"lhw-1"},"content":"    public void execute(TaskList list, UserInterface ui) throws DukeException {","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"lhw-1"},"content":"        int position \u003d input.indexOf(\"/by\");","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"lhw-1"},"content":"        String newTask \u003d input.substring(9, position);","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"lhw-1"},"content":"        String newTime \u003d input.substring(position + 4);","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"lhw-1"},"content":"        if (newTask.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"lhw-1"},"content":"            throw new DukeException(\"The description of a deadline cannot be empty. Please try again!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"lhw-1"},"content":"        } else if (newTime.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"lhw-1"},"content":"            throw new DukeException(\"The date of a deadline cannot be empty. Please try again!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"lhw-1"},"content":"        } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"lhw-1"},"content":"            try {","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"lhw-1"},"content":"                LocalDateTime time \u003d LocalDateTime.parse(newTime.trim(), inputFormatter);","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"lhw-1"},"content":"                list.addTask(new DeadlineTask(newTask, time));","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"lhw-1"},"content":"                Storage.save(list);","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"lhw-1"},"content":"                UserInterface.showTaskAdded(newTask, 2, list.getSize() - 1, newTime.trim());","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"lhw-1"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"lhw-1"},"content":"                throw new DukeException(","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"lhw-1"},"content":"                        \"Your time format is wrong. Please enter the time in the format DD/MM/YYYY HHMM and try again!\");","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"lhw-1"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"lhw-1"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"lhw-1"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"lhw-1":39}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lhw-1"},"content":"package main.java.command;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"lhw-1"},"content":"import main.java.bot.DukeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"lhw-1"},"content":"import main.java.bot.Storage;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"lhw-1"},"content":"import main.java.bot.TaskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"lhw-1"},"content":"import main.java.bot.UserInterface;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"lhw-1"},"content":"import main.java.task.Task;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"lhw-1"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"lhw-1"},"content":"    public DeleteCommand(String input) {","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"lhw-1"},"content":"        super(input);","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"lhw-1"},"content":"    public void execute(TaskList list, UserInterface ui) throws DukeException {","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"lhw-1"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"lhw-1"},"content":"            int index \u003d Integer.parseInt(input.substring(7)) - 1;","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"lhw-1"},"content":"            Task removedTask \u003d list.getTask(index);","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"lhw-1"},"content":"            list.removeTask(index);","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"lhw-1"},"content":"            Storage.save(list);","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"lhw-1"},"content":"            System.out.println(\"-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"lhw-1"},"content":"                    + \"Noted. I\u0027ve removed the following main.java.task:\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"lhw-1"},"content":"                    + (index + 1)","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"lhw-1"},"content":"                    + \". \"","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"lhw-1"},"content":"                    + removedTask.getTaskState()","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"lhw-1"},"content":"                    + \"\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"lhw-1"},"content":"                    + \"-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~\\n\");","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"lhw-1"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"lhw-1"},"content":"            throw new DukeException(\"It looks like you did not enter a valid integer for the \\\"delete\\\" main.java.command. Please try again!\");","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"lhw-1"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"lhw-1"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"lhw-1":35}},{"path":"src/main/java/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lhw-1"},"content":"package main.java.command;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"lhw-1"},"content":"import main.java.bot.DukeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"lhw-1"},"content":"import main.java.bot.Storage;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"lhw-1"},"content":"import main.java.bot.TaskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"lhw-1"},"content":"import main.java.bot.UserInterface;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"lhw-1"},"content":"import main.java.task.Task;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"lhw-1"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"lhw-1"},"content":"    public DoneCommand(String input) {","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"lhw-1"},"content":"        super(input);","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"lhw-1"},"content":"    public void execute(TaskList list, UserInterface ui) throws DukeException {","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"lhw-1"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"lhw-1"},"content":"            int index \u003d Integer.parseInt(input.substring(5)) - 1;","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"lhw-1"},"content":"            Task newTask \u003d list.getTask(index);","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"lhw-1"},"content":"            newTask.markAsDone();","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"lhw-1"},"content":"            list.setTask(index, newTask);","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"lhw-1"},"content":"            Storage.save(list);","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"lhw-1"},"content":"            System.out.println(\"-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"lhw-1"},"content":"                    + \"Great! I\u0027ve marked the following main.java.task as done:\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"lhw-1"},"content":"                    + list.getTask(index).getTaskState()","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"lhw-1"},"content":"                    + \"\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"lhw-1"},"content":"                    + \"-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~\\n\");","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"lhw-1"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"lhw-1"},"content":"            throw new DukeException(\"It looks like you did not enter a valid integer for the \\\"done\\\" main.java.command. Please try again!\");","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"lhw-1"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"lhw-1"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"lhw-1":34}},{"path":"src/main/java/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lhw-1"},"content":"package main.java.command;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"lhw-1"},"content":"import main.java.bot.DukeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"lhw-1"},"content":"import main.java.bot.Storage;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"lhw-1"},"content":"import main.java.bot.TaskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"lhw-1"},"content":"import main.java.bot.UserInterface;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"lhw-1"},"content":"import main.java.task.EventTask;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"lhw-1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"lhw-1"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"lhw-1"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"lhw-1"},"content":"    public EventCommand(String input) {","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"lhw-1"},"content":"        super(input);","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"lhw-1"},"content":"    public void execute(TaskList list, UserInterface ui) throws DukeException {","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"lhw-1"},"content":"        int position \u003d input.indexOf(\"/at\");","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"lhw-1"},"content":"        String newTask \u003d input.substring(6, position);","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"lhw-1"},"content":"        String newTime \u003d input.substring(position + 4);","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"lhw-1"},"content":"        if (newTask.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"lhw-1"},"content":"            throw new DukeException(\"The description of an event cannot be empty. Please try again!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"lhw-1"},"content":"        } else if (newTime.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"lhw-1"},"content":"            throw new DukeException(\"The date of an event cannot be empty. Please try again!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"lhw-1"},"content":"        } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"lhw-1"},"content":"            try {","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"lhw-1"},"content":"                LocalDateTime time \u003d LocalDateTime.parse(newTime.trim(), inputFormatter);","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"lhw-1"},"content":"                list.addTask(new EventTask(newTask, time));","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"lhw-1"},"content":"                Storage.save(list);","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"lhw-1"},"content":"                UserInterface.showTaskAdded(newTask, 3, list.getSize() - 1, newTime.trim());","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"lhw-1"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"lhw-1"},"content":"                throw new DukeException(","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"lhw-1"},"content":"                        \"Your time format is wrong. Please enter the time in the format DD/MM/YYYY HHMM and try again!\");","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"lhw-1"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"lhw-1"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"lhw-1"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"lhw-1":39}},{"path":"src/main/java/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lhw-1"},"content":"package main.java.command;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"lhw-1"},"content":"import main.java.bot.TaskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"lhw-1"},"content":"import main.java.bot.UserInterface;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"lhw-1"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"lhw-1"},"content":"    public ExitCommand(String input) {","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"lhw-1"},"content":"        super(input);","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"lhw-1"},"content":"    public void execute(TaskList list, UserInterface ui) {","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"lhw-1"},"content":"        ui.showBye();","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"lhw-1"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"lhw-1":15}},{"path":"src/main/java/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lhw-1"},"content":"package main.java.command;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"lhw-1"},"content":"import main.java.bot.TaskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"lhw-1"},"content":"import main.java.bot.UserInterface;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"lhw-1"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"lhw-1"},"content":"    public ListCommand(String input) {","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"lhw-1"},"content":"        super(input);","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"lhw-1"},"content":"    public void execute(TaskList list, UserInterface ui) {","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"lhw-1"},"content":"        String tasks \u003d \"\";","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"lhw-1"},"content":"        for (int i \u003d 0; i \u003c list.getSize(); i++) {","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"lhw-1"},"content":"            tasks \u003d tasks","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"lhw-1"},"content":"                    + String.valueOf(i + 1)","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"lhw-1"},"content":"                    + \". \"","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"lhw-1"},"content":"                    + list.getTask(i).getTaskState()","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"lhw-1"},"content":"                    + \"\\n\";","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"lhw-1"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"lhw-1"},"content":"        System.out.println(\"-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"lhw-1"},"content":"                + tasks","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"lhw-1"},"content":"                + \"-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~\\n\");","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"lhw-1"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"lhw-1":27}},{"path":"src/main/java/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lhw-1"},"content":"package main.java.command;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"lhw-1"},"content":"import main.java.bot.DukeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"lhw-1"},"content":"import main.java.bot.Storage;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"lhw-1"},"content":"import main.java.bot.TaskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"lhw-1"},"content":"import main.java.bot.UserInterface;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"lhw-1"},"content":"import main.java.task.TodoTask;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"lhw-1"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"lhw-1"},"content":"    public TodoCommand(String input) {","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"lhw-1"},"content":"        super(input);","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"lhw-1"},"content":"    public void execute(TaskList list, UserInterface ui) throws DukeException {","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"lhw-1"},"content":"        String newTask \u003d input.substring(5);","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"lhw-1"},"content":"        if (newTask.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"lhw-1"},"content":"            throw new DukeException(\"The description of a todo cannot be empty. Please try again!\");","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"lhw-1"},"content":"        } else {","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"lhw-1"},"content":"            list.addTask(new TodoTask(newTask));","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"lhw-1"},"content":"            Storage.save(list);","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"lhw-1"},"content":"            UserInterface.showTaskAdded(newTask, 1, list.getSize() - 1, \"\");","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"lhw-1"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"lhw-1"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"lhw-1":26}},{"path":"src/main/java/task/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lhw-1"},"content":"package main.java.task;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"lhw-1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"lhw-1"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"lhw-1"},"content":" * Task subclass that encapsulates the individual \"Deadline\" main.java.task passed into the main.java.bot.","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"lhw-1"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"lhw-1"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"lhw-1"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"lhw-1"},"content":"     * Variable that holds the deadline time as a LocalDateTime object","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"lhw-1"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"lhw-1"},"content":"    protected LocalDateTime time;","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"lhw-1"},"content":"    protected String storedTime \u003d \"\";","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"lhw-1"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"lhw-1"},"content":"     * Constructor for the Deadline class","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"lhw-1"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"lhw-1"},"content":"    public DeadlineTask(String task, LocalDateTime time) {","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"lhw-1"},"content":"        super(task);","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"lhw-1"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"lhw-1"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"lhw-1"},"content":"     * Constructor for the Deadline class","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"lhw-1"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"lhw-1"},"content":"    public DeadlineTask(String task, String storedTime, boolean done) {","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"lhw-1"},"content":"        super(task, done);","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"lhw-1"},"content":"        this.storedTime \u003d storedTime;","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"lhw-1"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"lhw-1"},"content":"     * Retrieves the completion state of the main.java.task, followed by the main.java.task input.","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"lhw-1"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"lhw-1"},"content":"     * @return The String representation of the main.java.task completion state and the main.java.task input.","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"lhw-1"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"lhw-1"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"lhw-1"},"content":"    public String getTaskState() {","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"lhw-1"},"content":"        return \"[D]\" + super.getTaskState() + \"(By: \" + (storedTime.isEmpty() ? time.format(outputFormatter) : storedTime) + \")\";","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"lhw-1"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"lhw-1"},"content":"    public String convertToStorageFormat() {","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"lhw-1"},"content":"        return \"D,\"","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"lhw-1"},"content":"                + (done ? \"1,\" : \"0,\")","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"lhw-1"},"content":"                + task","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"lhw-1"},"content":"                + \",\"","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"lhw-1"},"content":"                + (storedTime.isEmpty() ? time.format(outputFormatter) : storedTime);","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"lhw-1"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lhw-1":51}},{"path":"src/main/java/task/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lhw-1"},"content":"package main.java.task;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"lhw-1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"lhw-1"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"lhw-1"},"content":" * Task subclass that encapsulates the individual \"Event\" main.java.task passed into the main.java.bot.","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"lhw-1"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"lhw-1"},"content":"public class EventTask extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"lhw-1"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"lhw-1"},"content":"     * Variable that holds the deadline time as a LocalDateTime object","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"lhw-1"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"lhw-1"},"content":"    protected LocalDateTime time;","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"lhw-1"},"content":"    protected String storedTime \u003d \"\";","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"lhw-1"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"lhw-1"},"content":"     * Constructor for the Event class","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"lhw-1"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"lhw-1"},"content":"    public EventTask(String task, LocalDateTime time) {","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"lhw-1"},"content":"        super(task);","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"lhw-1"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"lhw-1"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"lhw-1"},"content":"     * Constructor for the Event class","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"lhw-1"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"lhw-1"},"content":"    public EventTask(String task, String storedTime, boolean done) {","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"lhw-1"},"content":"        super(task, done);","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"lhw-1"},"content":"        this.storedTime \u003d storedTime;","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"lhw-1"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"lhw-1"},"content":"     * Retrieves the completion state of the main.java.task, followed by the main.java.task input.","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"lhw-1"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"lhw-1"},"content":"     * @return The String representation of the main.java.task completion state and the main.java.task input.","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"lhw-1"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"lhw-1"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"lhw-1"},"content":"    public String getTaskState() {","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"lhw-1"},"content":"        return \"[E]\" + super.getTaskState() + \"(At: \" + (storedTime.isEmpty() ? time.format(outputFormatter) : storedTime) + \")\";","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"lhw-1"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"lhw-1"},"content":"    public String convertToStorageFormat() {","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"lhw-1"},"content":"        return \"E,\"","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"lhw-1"},"content":"                + (done ? \"1,\" : \"0,\")","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"lhw-1"},"content":"                + task","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"lhw-1"},"content":"                + \",\"","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"lhw-1"},"content":"                + (storedTime.isEmpty() ? time.format(outputFormatter) : storedTime);","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"lhw-1"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lhw-1":51}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lhw-1"},"content":"package main.java.task;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"lhw-1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"lhw-1"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"lhw-1"},"content":" * Task class that encapsulates the individual main.java.task passed into the main.java.bot.","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"lhw-1"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"lhw-1"},"content":"public class Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"lhw-1"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"lhw-1"},"content":"     * Variable that holds the main.java.task input as String","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"lhw-1"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"lhw-1"},"content":"    protected String task;","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"lhw-1"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"lhw-1"},"content":"     * Variable that holds the main.java.task completion state as boolean","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"lhw-1"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"lhw-1"},"content":"    protected boolean done;","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"lhw-1"},"content":"    protected DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy kkmm\");","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"lhw-1"},"content":"    protected DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy - hh:mm a\");","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"lhw-1"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"lhw-1"},"content":"     * Constructor for the Task class","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"lhw-1"},"content":"     * Default: not done","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"lhw-1"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"lhw-1"},"content":"    public Task(String task) {","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"lhw-1"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"lhw-1"},"content":"        this.done \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"lhw-1"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"lhw-1"},"content":"     * Constructor for the Task class","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"lhw-1"},"content":"     * According to specified state","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"lhw-1"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"lhw-1"},"content":"    public Task(String task, boolean done) {","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"lhw-1"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"lhw-1"},"content":"        this.done \u003d done;","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"lhw-1"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"lhw-1"},"content":"     * Retrieves the completion state of the main.java.task, followed by the main.java.task input.","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"lhw-1"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"lhw-1"},"content":"     * @return The String representation of the main.java.task completion state and the main.java.task input.","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"lhw-1"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"lhw-1"},"content":"    public String getTaskState() {","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"lhw-1"},"content":"        return this.done ? \"[X] \" + this.task : \"[ ] \" + this.task;","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"lhw-1"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"lhw-1"},"content":"     * Toggles the current state by negating the boolean state value. (Done vs not done)","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"lhw-1"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"lhw-1"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"lhw-1"},"content":"        this.done \u003d true;","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"lhw-1"},"content":"    public static Task parseFromStorage(String task) {","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"lhw-1"},"content":"        String[] splitTask \u003d task.split(\",\");","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"lhw-1"},"content":"        String taskType \u003d splitTask[0];","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"lhw-1"},"content":"        switch (taskType) {","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"lhw-1"},"content":"            case \"T\":","lastModifiedDate":"2021-08-27"},{"lineNumber":64,"author":{"gitId":"lhw-1"},"content":"                return new TodoTask(splitTask[2], splitTask[1].equals(\"1\"));","lastModifiedDate":"2021-08-27"},{"lineNumber":65,"author":{"gitId":"lhw-1"},"content":"            case \"D\":","lastModifiedDate":"2021-08-27"},{"lineNumber":66,"author":{"gitId":"lhw-1"},"content":"                return new DeadlineTask(splitTask[2], splitTask[3], splitTask[1].equals(\"1\"));","lastModifiedDate":"2021-08-27"},{"lineNumber":67,"author":{"gitId":"lhw-1"},"content":"            case \"E\":","lastModifiedDate":"2021-08-27"},{"lineNumber":68,"author":{"gitId":"lhw-1"},"content":"                return new EventTask(splitTask[2], splitTask[3], splitTask[1].equals(\"1\"));","lastModifiedDate":"2021-08-27"},{"lineNumber":69,"author":{"gitId":"lhw-1"},"content":"            default:","lastModifiedDate":"2021-08-27"},{"lineNumber":70,"author":{"gitId":"lhw-1"},"content":"                return new Task(\"\");","lastModifiedDate":"2021-08-27"},{"lineNumber":71,"author":{"gitId":"lhw-1"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":72,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":73,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":74,"author":{"gitId":"lhw-1"},"content":"    public String convertToStorageFormat() {","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"lhw-1"},"content":"        return \"\";","lastModifiedDate":"2021-08-27"},{"lineNumber":76,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":77,"author":{"gitId":"lhw-1"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lhw-1":77}},{"path":"src/main/java/task/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lhw-1"},"content":"package main.java.task;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"lhw-1"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"lhw-1"},"content":" * Task subclass that encapsulates the individual \"Todo\" main.java.task passed into the main.java.bot.","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"lhw-1"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"lhw-1"},"content":"public class TodoTask extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"lhw-1"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"lhw-1"},"content":"     * Constructor for the Todo class","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"lhw-1"},"content":"     * Only takes in the string","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"lhw-1"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"lhw-1"},"content":"    public TodoTask(String task) {","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"lhw-1"},"content":"        super(task);","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"lhw-1"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"lhw-1"},"content":"     * Constructor for the Todo class","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"lhw-1"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"lhw-1"},"content":"    public TodoTask(String task, boolean done) {","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"lhw-1"},"content":"        super(task, done);","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"lhw-1"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"lhw-1"},"content":"     * Retrieves the completion state of the main.java.task, followed by the main.java.task input.","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"lhw-1"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"lhw-1"},"content":"     * @return The String representation of the main.java.task completion state and the main.java.task input.","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"lhw-1"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"lhw-1"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"lhw-1"},"content":"    public String getTaskState() {","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"lhw-1"},"content":"        return \"[T]\" + super.getTaskState();","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"lhw-1"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"lhw-1"},"content":"    public String convertToStorageFormat() {","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"lhw-1"},"content":"        return \"T,\"","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"lhw-1"},"content":"                + (done ? \"1,\" : \"0,\")","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"lhw-1"},"content":"                + task;","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"lhw-1"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lhw-1":39}},{"path":"src/test/java/bot/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lhw-1"},"content":"package java.bot;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"lhw-1"},"content":"import main.java.bot.TaskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"lhw-1"},"content":"import main.java.task.Task;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"lhw-1"},"content":"import main.java.task.TodoTask;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"lhw-1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"lhw-1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"lhw-1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"lhw-1"},"content":"public class TaskListTest {","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"lhw-1"},"content":"    ArrayList\u003cTask\u003e arrayList;","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"lhw-1"},"content":"    TaskList taskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"lhw-1"},"content":"    @Test","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"lhw-1"},"content":"    public void testGetSize() {","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"lhw-1"},"content":"        arrayList.add(new TodoTask(\"Test1\"));","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"lhw-1"},"content":"        arrayList.add(new TodoTask(\"Test2\"));","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"lhw-1"},"content":"        arrayList.add(new TodoTask(\"Test3\"));","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"lhw-1"},"content":"        taskList.addTask(new TodoTask(\"Test1\"));","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"lhw-1"},"content":"        taskList.addTask(new TodoTask(\"Test2\"));","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"lhw-1"},"content":"        taskList.addTask(new TodoTask(\"Test3\"));","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"lhw-1"},"content":"        assertEquals(arrayList.size(), taskList.getSize());","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"lhw-1"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"lhw-1":30}},{"path":"src/test/java/task/DeadlineTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lhw-1"},"content":"package java.task;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"lhw-1"},"content":"import main.java.task.DeadlineTask;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"lhw-1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"lhw-1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"lhw-1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"lhw-1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"lhw-1"},"content":"public class DeadlineTaskTest {","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"lhw-1"},"content":"    DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy kkmm\");","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"lhw-1"},"content":"    String testTimeInput \u003d \"11/11/1111 1111\";","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"lhw-1"},"content":"    LocalDateTime testTime \u003d LocalDateTime.parse(testTimeInput.trim(), inputFormatter);","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"lhw-1"},"content":"    DeadlineTask testTask \u003d new DeadlineTask(\"Test\", testTime);","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"lhw-1"},"content":"    @Test","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"lhw-1"},"content":"    public void testGetTaskState() {","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"lhw-1"},"content":"        assertEquals(testTask.getTaskState(), \"[D][ ] Test (By: Nov 11 1111 - 11:11 AM)\");","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"lhw-1"},"content":"    @Test","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"lhw-1"},"content":"    public void testConvertToStorageFormat() {","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"lhw-1"},"content":"        assertEquals(testTask.convertToStorageFormat(), \"D,0,Test ,Nov 11 1111 - 11:11 AM\");","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"lhw-1"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"lhw-1":27}},{"path":"src/test/java/task/EventTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lhw-1"},"content":"package java.task;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"lhw-1"},"content":"import main.java.task.EventTask;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"lhw-1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"lhw-1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"lhw-1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"lhw-1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"lhw-1"},"content":"public class EventTaskTest {","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"lhw-1"},"content":"    DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy kkmm\");","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"lhw-1"},"content":"    String testTimeInput \u003d \"11/11/1111 1111\";","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"lhw-1"},"content":"    LocalDateTime testTime \u003d LocalDateTime.parse(testTimeInput.trim(), inputFormatter);","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"lhw-1"},"content":"    EventTask testTask \u003d new EventTask(\"Test\", testTime);","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"lhw-1"},"content":"    @Test","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"lhw-1"},"content":"    public void testGetTaskState() {","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"lhw-1"},"content":"        assertEquals(testTask.getTaskState(), \"[E][ ] Test (At: Nov 11 1111 - 11:11 AM)\");","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"lhw-1"},"content":"    @Test","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"lhw-1"},"content":"    public void testConvertToStorageFormat() {","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"lhw-1"},"content":"        assertEquals(testTask.convertToStorageFormat(), \"E,0,Test ,Nov 11 1111 - 11:11 AM\");","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"lhw-1"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"lhw-1":27}},{"path":"src/test/java/task/TodoTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lhw-1"},"content":"package java.task;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"lhw-1"},"content":"import main.java.task.TodoTask;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"lhw-1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"lhw-1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"lhw-1"},"content":"public class TodoTaskTest {","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"lhw-1"},"content":"    TodoTask testTask \u003d new TodoTask(\"Test\");","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"lhw-1"},"content":"    @Test","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"lhw-1"},"content":"    public void testGetTaskState() {","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"lhw-1"},"content":"        assertEquals(testTask.getTaskState(), \"[T][ ] Test\");","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"lhw-1"},"content":"    @Test","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"lhw-1"},"content":"    public void testConvertToStorageFormat() {","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"lhw-1"},"content":"        assertEquals(testTask.convertToStorageFormat(), \"T,0,Test\");","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"lhw-1"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"lhw-1":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lhw-1"},"content":"hi","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"lhw-1"},"content":"todo","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"lhw-1"},"content":"todo","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"lhw-1"},"content":"todo todo #1","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"lhw-1"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"lhw-1"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"lhw-1"},"content":"todo todo #2","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"lhw-1"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"lhw-1"},"content":"deadline","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"lhw-1"},"content":"deadline","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"lhw-1"},"content":"deadline deadline #1","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"lhw-1"},"content":"deadline deadline #1 /by","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"lhw-1"},"content":"deadline deadline #1 /by","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"lhw-1"},"content":"deadline deadline #1 /at","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"lhw-1"},"content":"deadline deadline #1 /by 1234","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"lhw-1"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"lhw-1"},"content":"event event #1","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"lhw-1"},"content":"event event #1 /at","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"lhw-1"},"content":"event event #1 /at","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"lhw-1"},"content":"event event #1 /by","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"lhw-1"},"content":"event event #1 /at 4321","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"lhw-1"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"lhw-1"},"content":"done 1","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"lhw-1"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"lhw-1"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"lhw-1"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"lhw-1"},"content":"delete 1","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"lhw-1"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"lhw-1"},"content":"todo todo #3","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"lhw-1"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"lhw-1"},"content":"done 3","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"lhw-1"},"content":"done 4","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"lhw-1"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"lhw-1"},"content":"done","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"lhw-1"},"content":"done","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"lhw-1"},"content":"delete","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"lhw-1"},"content":"delete","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"lhw-1"},"content":"delete 1","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"lhw-1"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"lhw-1"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"lhw-1":40}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"lhw-1"},"content":"java -classpath ..\\bin main.java.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"lhw-1":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"lhw-1"},"content":"# dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"lhw-1":1}}]
