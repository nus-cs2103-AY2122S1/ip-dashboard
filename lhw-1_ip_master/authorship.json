[{"path":"src/main/java/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lhw-1"},"content":"package main.java;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"lhw-1"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"lhw-1"},"content":"    protected String input;","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"lhw-1"},"content":"    ByeCommand(String input) {","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"lhw-1"},"content":"        this.input \u003d input;","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"lhw-1"},"content":"    public String reply() {","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"lhw-1"},"content":"        return \"-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"lhw-1"},"content":"                + \"Bye... Hope to see you again soon!\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"lhw-1"},"content":"                + \"-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~\\n\";","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"lhw-1"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"lhw-1":16}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lhw-1"},"content":"package main.java;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"lhw-1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"lhw-1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"lhw-1"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"lhw-1"},"content":"    protected DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy kkmm\");","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"lhw-1"},"content":"    protected DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy - hh:mm a\");","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"lhw-1"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"lhw-1"},"content":"     * Displays the task added message according to the task input given.","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"lhw-1"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"lhw-1"},"content":"     * @param input The task input to be added to the list.","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"lhw-1"},"content":"     * @param type  The type id. Todo: 1, Deadline: 2, Event: 3.","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"lhw-1"},"content":"     * @param index The current index of the list.","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"lhw-1"},"content":"     * @param time  The information regarding the task (In the format of \"(By: ...)\" or \"(At: ...)\", or \"\" for Todos)","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"lhw-1"},"content":"     * @return The String sequence showing that the task has been added to the list.","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"lhw-1"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"lhw-1"},"content":"    public String addTask(String input, int type, int index, String time) {","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"lhw-1"},"content":"        // Determine the string that displays the type of task","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"lhw-1"},"content":"        String taskType;","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"lhw-1"},"content":"        String prefix;","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"lhw-1"},"content":"        if (type \u003d\u003d 1) {","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"lhw-1"},"content":"            taskType \u003d \"task (Todo)\";","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"lhw-1"},"content":"            prefix \u003d \"[T][ ]\";","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"lhw-1"},"content":"        } else if (type \u003d\u003d 2) {","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"lhw-1"},"content":"            taskType \u003d \"task (Deadline)\";","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"lhw-1"},"content":"            prefix \u003d \"[D][ ]\";","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"lhw-1"},"content":"        } else if (type \u003d\u003d 3) {","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"lhw-1"},"content":"            taskType \u003d \"task (Event)\";","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"lhw-1"},"content":"            prefix \u003d \"[E][ ]\";","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"lhw-1"},"content":"        } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"lhw-1"},"content":"            taskType \u003d \"\";","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"lhw-1"},"content":"            prefix \u003d \"\";","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"lhw-1"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"lhw-1"},"content":"        // Return the message accordingly","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"lhw-1"},"content":"        return \"-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"lhw-1"},"content":"                + \"Alright. I\u0027ve added the following \"","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"lhw-1"},"content":"                + taskType","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"lhw-1"},"content":"                + \":\\n--\u003e \"","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"lhw-1"},"content":"                + prefix","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"lhw-1"},"content":"                + \" \"","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"lhw-1"},"content":"                + input","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"lhw-1"},"content":"                + (type \u003d\u003d 2","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"lhw-1"},"content":"                    ? \"(By: \" + LocalDateTime.parse(time, inputFormatter).format(outputFormatter) + \")\"","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"lhw-1"},"content":"                    : type \u003d\u003d 3","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"lhw-1"},"content":"                        ? \"(At: \" + LocalDateTime.parse(time, inputFormatter).format(outputFormatter) + \")\"","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"lhw-1"},"content":"                        : \"\")","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"lhw-1"},"content":"                + \"\\n\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"lhw-1"},"content":"                + \"You currently have \"","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"lhw-1"},"content":"                + (index + 1)","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"lhw-1"},"content":"                + (index \u003d\u003d 0 ? \" task\" : \" tasks\")","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"lhw-1"},"content":"                + \" in the list.\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"lhw-1"},"content":"                + \"-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~\\n\";","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"lhw-1"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"lhw-1"},"content":"     * An abstract function that creates and returns the reply according to the user input.","lastModifiedDate":"2021-08-19"},{"lineNumber":63,"author":{"gitId":"lhw-1"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":64,"author":{"gitId":"lhw-1"},"content":"     * @return A response corresponding to the user input / command.","lastModifiedDate":"2021-08-19"},{"lineNumber":65,"author":{"gitId":"lhw-1"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":66,"author":{"gitId":"lhw-1"},"content":"    abstract String reply() throws DukeException;","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"lhw-1"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"lhw-1":67}},{"path":"src/main/java/CommandHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lhw-1"},"content":"package main.java;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"lhw-1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"lhw-1"},"content":"public class CommandHandler {","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"lhw-1"},"content":"    protected String input;","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"lhw-1"},"content":"    protected ArrayList\u003cTask\u003e list;","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"lhw-1"},"content":"    enum CommandStart {","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"lhw-1"},"content":"        LIST, DONE, DELETE, TODO, DEADLINE, EVENT","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"lhw-1"},"content":"    CommandHandler(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"lhw-1"},"content":"        this.list \u003d list;","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"lhw-1"},"content":"    public void handle(String input) throws DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"lhw-1"},"content":"        CommandStart start \u003d null;","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"lhw-1"},"content":"        Command command;","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"lhw-1"},"content":"        if (input.equals(\"list\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"lhw-1"},"content":"            // If the user types \"list\", show the list of tasks","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"lhw-1"},"content":"            start \u003d CommandStart.LIST;","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"lhw-1"},"content":"        } else if (input.startsWith(\"done \")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"lhw-1"},"content":"            // If the user types \"done X\" where X is a non-zero integer, mark the task as","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"lhw-1"},"content":"            // complete","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"lhw-1"},"content":"            start \u003d CommandStart.DONE;","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"lhw-1"},"content":"        } else if (input.startsWith(\"delete \")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"lhw-1"},"content":"            // If the user types \"delete X\" where X is a non-zero integer, remove the task","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"lhw-1"},"content":"            start \u003d CommandStart.DELETE;","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"lhw-1"},"content":"        } else if (input.startsWith(\"todo \")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"lhw-1"},"content":"            start \u003d CommandStart.TODO;","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"lhw-1"},"content":"        } else if (input.startsWith(\"deadline \") \u0026\u0026 input.contains(\"/by \")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"lhw-1"},"content":"            start \u003d CommandStart.DEADLINE;","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"lhw-1"},"content":"        } else if (input.startsWith(\"event \") \u0026\u0026 input.contains(\"/at \")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"lhw-1"},"content":"            start \u003d CommandStart.EVENT;","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"lhw-1"},"content":"        } else if (!input.equals(\"bye\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"lhw-1"},"content":"            throw new DukeException(\"You\u0027ve entered an unknown request... The bot doesn\u0027t know what that means!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"lhw-1"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"lhw-1"},"content":"        if (start !\u003d null) {","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"lhw-1"},"content":"            switch (start) {","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"lhw-1"},"content":"                case LIST:","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"lhw-1"},"content":"                    command \u003d new ListCommand(input, this.list);","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"lhw-1"},"content":"                    System.out.println(command.reply());","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"lhw-1"},"content":"                    break;","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"lhw-1"},"content":"                case DONE:","lastModifiedDate":"2021-08-19"},{"lineNumber":63,"author":{"gitId":"lhw-1"},"content":"                    command \u003d new DoneCommand(input, this.list);","lastModifiedDate":"2021-08-19"},{"lineNumber":64,"author":{"gitId":"lhw-1"},"content":"                    System.out.println(command.reply());","lastModifiedDate":"2021-08-19"},{"lineNumber":65,"author":{"gitId":"lhw-1"},"content":"                    Storage.save(this.list);","lastModifiedDate":"2021-08-27"},{"lineNumber":66,"author":{"gitId":"lhw-1"},"content":"                    break;","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"lhw-1"},"content":"                case DELETE:","lastModifiedDate":"2021-08-19"},{"lineNumber":68,"author":{"gitId":"lhw-1"},"content":"                    command \u003d new DeleteCommand(input, this.list);","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"lhw-1"},"content":"                    System.out.println(command.reply());","lastModifiedDate":"2021-08-19"},{"lineNumber":70,"author":{"gitId":"lhw-1"},"content":"                    Storage.save(this.list);","lastModifiedDate":"2021-08-27"},{"lineNumber":71,"author":{"gitId":"lhw-1"},"content":"                    break;","lastModifiedDate":"2021-08-19"},{"lineNumber":72,"author":{"gitId":"lhw-1"},"content":"                case TODO:","lastModifiedDate":"2021-08-19"},{"lineNumber":73,"author":{"gitId":"lhw-1"},"content":"                    command \u003d new TodoCommand(input, this.list);","lastModifiedDate":"2021-08-27"},{"lineNumber":74,"author":{"gitId":"lhw-1"},"content":"                    System.out.println(command.reply());","lastModifiedDate":"2021-08-19"},{"lineNumber":75,"author":{"gitId":"lhw-1"},"content":"                    Storage.save(this.list);","lastModifiedDate":"2021-08-27"},{"lineNumber":76,"author":{"gitId":"lhw-1"},"content":"                    break;","lastModifiedDate":"2021-08-19"},{"lineNumber":77,"author":{"gitId":"lhw-1"},"content":"                case DEADLINE:","lastModifiedDate":"2021-08-19"},{"lineNumber":78,"author":{"gitId":"lhw-1"},"content":"                    command \u003d new DeadlineCommand(input, this.list);","lastModifiedDate":"2021-08-27"},{"lineNumber":79,"author":{"gitId":"lhw-1"},"content":"                    System.out.println(command.reply());","lastModifiedDate":"2021-08-19"},{"lineNumber":80,"author":{"gitId":"lhw-1"},"content":"                    Storage.save(this.list);","lastModifiedDate":"2021-08-27"},{"lineNumber":81,"author":{"gitId":"lhw-1"},"content":"                    break;","lastModifiedDate":"2021-08-19"},{"lineNumber":82,"author":{"gitId":"lhw-1"},"content":"                case EVENT:","lastModifiedDate":"2021-08-19"},{"lineNumber":83,"author":{"gitId":"lhw-1"},"content":"                    command \u003d new EventCommand(input, this.list);","lastModifiedDate":"2021-08-27"},{"lineNumber":84,"author":{"gitId":"lhw-1"},"content":"                    System.out.println(command.reply());","lastModifiedDate":"2021-08-19"},{"lineNumber":85,"author":{"gitId":"lhw-1"},"content":"                    Storage.save(this.list);","lastModifiedDate":"2021-08-27"},{"lineNumber":86,"author":{"gitId":"lhw-1"},"content":"                    break;","lastModifiedDate":"2021-08-19"},{"lineNumber":87,"author":{"gitId":"lhw-1"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":88,"author":{"gitId":"lhw-1"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":89,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":90,"author":{"gitId":"lhw-1"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"lhw-1":90}},{"path":"src/main/java/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lhw-1"},"content":"package main.java;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"lhw-1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"lhw-1"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"lhw-1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"lhw-1"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"lhw-1"},"content":"    protected String input;","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"lhw-1"},"content":"    protected ArrayList\u003cTask\u003e list;","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"lhw-1"},"content":"    DeadlineCommand(String input, ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"lhw-1"},"content":"        this.input \u003d input;","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"lhw-1"},"content":"        this.list \u003d list;","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"lhw-1"},"content":"    public String reply() throws DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"lhw-1"},"content":"        int position \u003d input.indexOf(\"/by\");","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"lhw-1"},"content":"        String newTask \u003d input.substring(9, position);","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"lhw-1"},"content":"        String newTime \u003d input.substring(position + 4);","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"lhw-1"},"content":"        if (newTask.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"lhw-1"},"content":"            throw new DukeException(\"The description of a deadline cannot be empty. Please try again!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"lhw-1"},"content":"        } else if (newTime.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"lhw-1"},"content":"            throw new DukeException(\"The date of a deadline cannot be empty. Please try again!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"lhw-1"},"content":"        } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"lhw-1"},"content":"            try {","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"lhw-1"},"content":"                LocalDateTime time \u003d LocalDateTime.parse(newTime.trim(), inputFormatter);","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"lhw-1"},"content":"                list.add(new DeadlineTask(newTask, time));","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"lhw-1"},"content":"                return addTask(newTask, 2, list.size() - 1, newTime.trim());","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"lhw-1"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"lhw-1"},"content":"                throw new DukeException(","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"lhw-1"},"content":"                        \"Your time format is wrong. Please enter the time in the format DD/MM/YYYY HHMM and try again!\");","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"lhw-1"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"lhw-1"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"lhw-1"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"lhw-1":38}},{"path":"src/main/java/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lhw-1"},"content":"package main.java;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"lhw-1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"lhw-1"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"lhw-1"},"content":" * Task subclass that encapsulates the individual \"Deadline\" task passed into the bot.","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"lhw-1"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"lhw-1"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"lhw-1"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"lhw-1"},"content":"     * Variable that holds the deadline time as a LocalDateTime object","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"lhw-1"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"lhw-1"},"content":"    protected LocalDateTime time;","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"lhw-1"},"content":"    protected String storedTime \u003d \"\";","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"lhw-1"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"lhw-1"},"content":"     * Constructor for the Deadline class","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"lhw-1"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"lhw-1"},"content":"    DeadlineTask(String task, LocalDateTime time) {","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"lhw-1"},"content":"        super(task);","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"lhw-1"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"lhw-1"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"lhw-1"},"content":"     * Constructor for the Deadline class","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"lhw-1"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"lhw-1"},"content":"    DeadlineTask(String task, String storedTime, boolean done) {","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"lhw-1"},"content":"        super(task, done);","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"lhw-1"},"content":"        this.storedTime \u003d storedTime;","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"lhw-1"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"lhw-1"},"content":"     * Retrieves the completion state of the task, followed by the task input.","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"lhw-1"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"lhw-1"},"content":"     * @return The String representation of the task completion state and the task input.","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"lhw-1"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"lhw-1"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"lhw-1"},"content":"    public String getTaskState() {","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"lhw-1"},"content":"        return \"[D]\" + super.getTaskState() + \"(By: \" + (storedTime.isEmpty() ? time.format(outputFormatter) : storedTime) + \")\";","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"lhw-1"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"lhw-1"},"content":"    public String convertToStorageFormat() {","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"lhw-1"},"content":"        return \"D,\"","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"lhw-1"},"content":"                + (done ? \"1,\" : \"0,\")","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"lhw-1"},"content":"                + task","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"lhw-1"},"content":"                + \",\"","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"lhw-1"},"content":"                + (storedTime.isEmpty() ? time.format(outputFormatter) : storedTime);","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"lhw-1"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lhw-1":51}},{"path":"src/main/java/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lhw-1"},"content":"package main.java;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"lhw-1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"lhw-1"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"lhw-1"},"content":"    protected String input;","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"lhw-1"},"content":"    protected ArrayList\u003cTask\u003e list;","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"lhw-1"},"content":"    DeleteCommand(String input, ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"lhw-1"},"content":"        this.input \u003d input;","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"lhw-1"},"content":"        this.list \u003d list;","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"lhw-1"},"content":"    public String reply() throws DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"lhw-1"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"lhw-1"},"content":"            int index \u003d Integer.parseInt(input.substring(7)) - 1;","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"lhw-1"},"content":"            Task removedTask \u003d list.get(index);","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"lhw-1"},"content":"            list.remove(index);","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"lhw-1"},"content":"            return \"-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"lhw-1"},"content":"                    + \"Noted. I\u0027ve removed the following task:\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"lhw-1"},"content":"                    + (index + 1)","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"lhw-1"},"content":"                    + \". \"","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"lhw-1"},"content":"                    + removedTask.getTaskState()","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"lhw-1"},"content":"                    + \"\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"lhw-1"},"content":"                    + \"-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~\\n\";","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"lhw-1"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"lhw-1"},"content":"            throw new DukeException(\"It looks like you did not enter a valid integer for the \\\"delete\\\" command. Please try again!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"lhw-1"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"lhw-1"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"lhw-1":35}},{"path":"src/main/java/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lhw-1"},"content":"package main.java;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"lhw-1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"lhw-1"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"lhw-1"},"content":"    protected String input;","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"lhw-1"},"content":"    protected ArrayList\u003cTask\u003e list;","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"lhw-1"},"content":"    DoneCommand(String input, ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"lhw-1"},"content":"        this.input \u003d input;","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"lhw-1"},"content":"        this.list \u003d list;","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"lhw-1"},"content":"    public String reply() throws DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"lhw-1"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"lhw-1"},"content":"            int index \u003d Integer.parseInt(input.substring(5)) - 1;","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"lhw-1"},"content":"            Task newTask \u003d list.get(index);","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"lhw-1"},"content":"            newTask.markAsDone();","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"lhw-1"},"content":"            list.set(index, newTask);","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"lhw-1"},"content":"            return \"-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"lhw-1"},"content":"                    + \"Great! I\u0027ve marked the following task as done:\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"lhw-1"},"content":"                    + this.list.get(index).getTaskState()","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"lhw-1"},"content":"                    + \"\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"lhw-1"},"content":"                    + \"-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~\\n\";","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"lhw-1"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"lhw-1"},"content":"            throw new DukeException(\"It looks like you did not enter a valid integer for the \\\"done\\\" command. Please try again!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"lhw-1"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"lhw-1"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"lhw-1":33}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lhw-1"},"content":"package main.java;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"lhw-1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"lhw-1"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"lhw-1"},"content":"//    private Storage storage;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"lhw-1"},"content":"//    private TaskList tasks;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"lhw-1"},"content":"//    private Ui ui;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"lhw-1"},"content":"//","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"lhw-1"},"content":"//    public Duke(String filePath) {","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"lhw-1"},"content":"//        ui \u003d new Ui();","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"lhw-1"},"content":"//        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"lhw-1"},"content":"//        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"lhw-1"},"content":"//            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"lhw-1"},"content":"//        } catch (DukeException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"lhw-1"},"content":"//            ui.showLoadingError();","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"lhw-1"},"content":"//            tasks \u003d new TaskList();","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"lhw-1"},"content":"//        }","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"lhw-1"},"content":"//    }","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"lhw-1"},"content":"//","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"lhw-1"},"content":"//    public void run() {","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"lhw-1"},"content":"//        //...","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"lhw-1"},"content":"//    }","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"lhw-1"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"lhw-1"},"content":"     * Main function for the Chatbot.","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"lhw-1"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"lhw-1"},"content":"     * @param args ...","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"lhw-1"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"lhw-1"},"content":"//    public static void main(String[] args) throws DukeException {","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"lhw-1"},"content":"//        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"lhw-1"},"content":"//    }","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"lhw-1"},"content":"    public static void main(String[] args) throws DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"lhw-1"},"content":"        // Starting message","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"lhw-1"},"content":"        String start \u003d \"-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~\\n\"","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"lhw-1"},"content":"                + \"Hello! My name is LHWBot!\\n\"","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"lhw-1"},"content":"                + \"What can I do for you today?\\n\"","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"lhw-1"},"content":"                + \"-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~\\n\";","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"lhw-1"},"content":"        System.out.println(start);","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"lhw-1"},"content":"        // Array of String to store user inputs","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"lhw-1"},"content":"        ArrayList\u003cTask\u003e list \u003d Storage.load();","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"lhw-1"},"content":"        // Define the scanner to read user inputs","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"lhw-1"},"content":"        Scanner reader \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"lhw-1"},"content":"        String input \u003d \"\";","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"lhw-1"},"content":"        // Define the Command handler to handle user inputs","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"lhw-1"},"content":"        CommandHandler handler \u003d new CommandHandler(list);","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"lhw-1"},"content":"        // Continuously listen for user inputs","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"lhw-1"},"content":"        while (!input.equals(\"bye\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"lhw-1"},"content":"            // Get the next input from the user","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"lhw-1"},"content":"            input \u003d reader.nextLine();","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"lhw-1"},"content":"            try {","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"lhw-1"},"content":"                // Continuously get the CommandHandler to handle new inputs from user","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"lhw-1"},"content":"                handler.handle(input);","lastModifiedDate":"2021-08-19"},{"lineNumber":63,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":64,"author":{"gitId":"lhw-1"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":65,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":66,"author":{"gitId":"lhw-1"},"content":"                System.out.println(\"-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"lhw-1"},"content":"                        + e.getMessage()","lastModifiedDate":"2021-08-19"},{"lineNumber":68,"author":{"gitId":"lhw-1"},"content":"                        +\"\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"lhw-1"},"content":"                        + \"-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~\\n\");","lastModifiedDate":"2021-08-19"},{"lineNumber":70,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":71,"author":{"gitId":"lhw-1"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":72,"author":{"gitId":"lhw-1"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":73,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":74,"author":{"gitId":"lhw-1"},"content":"        // If the user types \"bye\", print out the relevant text, close the scanner, and exit the bot.","lastModifiedDate":"2021-08-19"},{"lineNumber":75,"author":{"gitId":"lhw-1"},"content":"        ByeCommand command \u003d new ByeCommand(input);","lastModifiedDate":"2021-08-19"},{"lineNumber":76,"author":{"gitId":"lhw-1"},"content":"        System.out.println(command.reply());","lastModifiedDate":"2021-08-19"},{"lineNumber":77,"author":{"gitId":"lhw-1"},"content":"        reader.close();","lastModifiedDate":"2021-08-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":79,"author":{"gitId":"lhw-1"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"lhw-1":77,"-":2}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lhw-1"},"content":"package main.java;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"lhw-1"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"lhw-1"},"content":" * A class that handles exceptions for the Chatbot.","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"lhw-1"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"lhw-1"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"lhw-1"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"lhw-1"},"content":"     * Constructor for the DukeException class","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"lhw-1"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"lhw-1"},"content":"    DukeException(String errorMessage) {","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"lhw-1"},"content":"        super(\"☹ OOPS!!! It looks like was an error handling your request!\\n\\nThe error is as follows:\\n\" + errorMessage);","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"lhw-1"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"lhw-1":14}},{"path":"src/main/java/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lhw-1"},"content":"package main.java;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"lhw-1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"lhw-1"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"lhw-1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"lhw-1"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"lhw-1"},"content":"    protected String input;","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"lhw-1"},"content":"    protected ArrayList\u003cTask\u003e list;","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"lhw-1"},"content":"    EventCommand(String input, ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"lhw-1"},"content":"        this.input \u003d input;","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"lhw-1"},"content":"        this.list \u003d list;","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"lhw-1"},"content":"    public String reply() throws DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"lhw-1"},"content":"        int position \u003d input.indexOf(\"/at\");","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"lhw-1"},"content":"        String newTask \u003d input.substring(6, position);","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"lhw-1"},"content":"        String newTime \u003d input.substring(position + 4);","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"lhw-1"},"content":"        if (newTask.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"lhw-1"},"content":"            throw new DukeException(\"The description of an event cannot be empty. Please try again!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"lhw-1"},"content":"        } else if (newTime.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"lhw-1"},"content":"            throw new DukeException(\"The date of an event cannot be empty. Please try again!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"lhw-1"},"content":"        } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"lhw-1"},"content":"            try {","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"lhw-1"},"content":"                LocalDateTime time \u003d LocalDateTime.parse(newTime.trim(), inputFormatter);","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"lhw-1"},"content":"                list.add(new EventTask(newTask, time));","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"lhw-1"},"content":"                return addTask(newTask, 3, list.size() - 1, newTime.trim());","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"lhw-1"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"lhw-1"},"content":"                throw new DukeException(","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"lhw-1"},"content":"                        \"Your time format is wrong. Please enter the time in the format DD/MM/YYYY HHMM and try again!\");","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"lhw-1"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"lhw-1"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"lhw-1"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"lhw-1":38}},{"path":"src/main/java/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lhw-1"},"content":"package main.java;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"lhw-1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"lhw-1"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"lhw-1"},"content":" * Task subclass that encapsulates the individual \"Event\" task passed into the bot.","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"lhw-1"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"lhw-1"},"content":"public class EventTask extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"lhw-1"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"lhw-1"},"content":"     * Variable that holds the deadline time as a LocalDateTime object","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"lhw-1"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"lhw-1"},"content":"    protected LocalDateTime time;","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"lhw-1"},"content":"    protected String storedTime \u003d \"\";","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"lhw-1"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"lhw-1"},"content":"     * Constructor for the Event class","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"lhw-1"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"lhw-1"},"content":"    EventTask(String task, LocalDateTime time) {","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"lhw-1"},"content":"        super(task);","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"lhw-1"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"lhw-1"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"lhw-1"},"content":"     * Constructor for the Event class","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"lhw-1"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"lhw-1"},"content":"    EventTask(String task, String storedTime, boolean done) {","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"lhw-1"},"content":"        super(task, done);","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"lhw-1"},"content":"        this.storedTime \u003d storedTime;","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"lhw-1"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"lhw-1"},"content":"     * Retrieves the completion state of the task, followed by the task input.","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"lhw-1"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"lhw-1"},"content":"     * @return The String representation of the task completion state and the task input.","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"lhw-1"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"lhw-1"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"lhw-1"},"content":"    public String getTaskState() {","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"lhw-1"},"content":"        return \"[E]\" + super.getTaskState() + \"(At: \" + (storedTime.isEmpty() ? time.format(outputFormatter) : storedTime) + \")\";","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"lhw-1"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"lhw-1"},"content":"    public String convertToStorageFormat() {","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"lhw-1"},"content":"        return \"E,\"","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"lhw-1"},"content":"                + (done ? \"1,\" : \"0,\")","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"lhw-1"},"content":"                + task","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"lhw-1"},"content":"                + \",\"","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"lhw-1"},"content":"                + (storedTime.isEmpty() ? time.format(outputFormatter) : storedTime);","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"lhw-1"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lhw-1":51}},{"path":"src/main/java/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lhw-1"},"content":"package main.java;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"lhw-1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"lhw-1"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"lhw-1"},"content":"    protected String input;","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"lhw-1"},"content":"    protected ArrayList\u003cTask\u003e list;","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"lhw-1"},"content":"    ListCommand(String input, ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"lhw-1"},"content":"        this.input \u003d input;","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"lhw-1"},"content":"        this.list \u003d list;","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"lhw-1"},"content":"    public String reply() {","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"lhw-1"},"content":"        String tasks \u003d \"\";","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"lhw-1"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"lhw-1"},"content":"            tasks \u003d tasks","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"lhw-1"},"content":"                    + String.valueOf(i + 1)","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"lhw-1"},"content":"                    + \". \"","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"lhw-1"},"content":"                    + list.get(i).getTaskState()","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"lhw-1"},"content":"                    + \"\\n\";","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"lhw-1"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"lhw-1"},"content":"        return \"-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"lhw-1"},"content":"                + tasks","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"lhw-1"},"content":"                + \"-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~\\n\";","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"lhw-1"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"lhw-1":30}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lhw-1"},"content":"package main.java;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"lhw-1"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"lhw-1"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"lhw-1"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"lhw-1"},"content":"import java.io.File;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"lhw-1"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"lhw-1"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"lhw-1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"lhw-1"},"content":"public class Storage {","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"lhw-1"},"content":"    protected static final String FILE_PATH \u003d \"data/duke.txt\";","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"lhw-1"},"content":"    public static ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"lhw-1"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"lhw-1"},"content":"            // Set up the list of lines and the reader","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"lhw-1"},"content":"            ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"lhw-1"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(FILE_PATH));","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"lhw-1"},"content":"            // Read the lines from the file specified","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"lhw-1"},"content":"            // FileNotFoundException \u003c: IOException","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"lhw-1"},"content":"            String line;","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"lhw-1"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"lhw-1"},"content":"                list.add(Task.parseFromStorage(line));","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"lhw-1"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"lhw-1"},"content":"            // Return the parsed list of tasks","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"lhw-1"},"content":"            return list;","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"lhw-1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"lhw-1"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"lhw-1"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"lhw-1"},"content":"    public static void save(ArrayList\u003cTask\u003e list) throws DukeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"lhw-1"},"content":"        // Set up the file","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"lhw-1"},"content":"        String absolutePath \u003d new File(FILE_PATH).getAbsolutePath();","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"lhw-1"},"content":"        File file \u003d new File(absolutePath);","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"lhw-1"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"lhw-1"},"content":"            if (!file.exists()) {","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"lhw-1"},"content":"                file.createNewFile();","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"lhw-1"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"lhw-1"},"content":"            // Set up the writer using absolute path","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"lhw-1"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(absolutePath));","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"lhw-1"},"content":"            // Write the lines from the list into the file","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"lhw-1"},"content":"            for (Task task : list) {","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"lhw-1"},"content":"                writer.write(task.convertToStorageFormat());","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"lhw-1"},"content":"                writer.newLine();","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"lhw-1"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"lhw-1"},"content":"            writer.close();","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"lhw-1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"lhw-1"},"content":"            throw new DukeException(e.getMessage() + \".\");","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"lhw-1"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"lhw-1"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"lhw-1":62}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lhw-1"},"content":"package main.java;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"lhw-1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"lhw-1"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"lhw-1"},"content":" * Task class that encapsulates the individual task passed into the bot.","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"lhw-1"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"lhw-1"},"content":"public class Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"lhw-1"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"lhw-1"},"content":"     * Variable that holds the task input as String","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"lhw-1"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"lhw-1"},"content":"    protected String task;","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"lhw-1"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"lhw-1"},"content":"     * Variable that holds the task completion state as boolean","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"lhw-1"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"lhw-1"},"content":"    protected boolean done;","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"lhw-1"},"content":"    protected DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy kkmm\");","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"lhw-1"},"content":"    protected DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy - hh:mm a\");","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"lhw-1"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"lhw-1"},"content":"     * Constructor for the Task class","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"lhw-1"},"content":"     * Default: not done","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"lhw-1"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"lhw-1"},"content":"    Task(String task) {","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"lhw-1"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"lhw-1"},"content":"        this.done \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"lhw-1"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"lhw-1"},"content":"     * Constructor for the Task class","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"lhw-1"},"content":"     * According to specified state","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"lhw-1"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"lhw-1"},"content":"    Task(String task, boolean done) {","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"lhw-1"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"lhw-1"},"content":"        this.done \u003d done;","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"lhw-1"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"lhw-1"},"content":"     * Retrieves the completion state of the task, followed by the task input.","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"lhw-1"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"lhw-1"},"content":"     * @return The String representation of the task completion state and the task input.","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"lhw-1"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"lhw-1"},"content":"    public String getTaskState() {","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"lhw-1"},"content":"        return this.done ? \"[X] \" + this.task : \"[ ] \" + this.task;","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"lhw-1"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"lhw-1"},"content":"     * Toggles the current state by negating the boolean state value. (Done vs not done)","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"lhw-1"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"lhw-1"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"lhw-1"},"content":"        this.done \u003d true;","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"lhw-1"},"content":"    public static Task parseFromStorage(String task) {","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"lhw-1"},"content":"        String[] splitTask \u003d task.split(\",\");","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"lhw-1"},"content":"        String taskType \u003d splitTask[0];","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"lhw-1"},"content":"        switch (taskType) {","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"lhw-1"},"content":"            case \"T\":","lastModifiedDate":"2021-08-27"},{"lineNumber":64,"author":{"gitId":"lhw-1"},"content":"                return new TodoTask(splitTask[2], splitTask[1].equals(\"1\"));","lastModifiedDate":"2021-08-27"},{"lineNumber":65,"author":{"gitId":"lhw-1"},"content":"            case \"D\":","lastModifiedDate":"2021-08-27"},{"lineNumber":66,"author":{"gitId":"lhw-1"},"content":"                return new DeadlineTask(splitTask[2], splitTask[3], splitTask[1].equals(\"1\"));","lastModifiedDate":"2021-08-27"},{"lineNumber":67,"author":{"gitId":"lhw-1"},"content":"            case \"E\":","lastModifiedDate":"2021-08-27"},{"lineNumber":68,"author":{"gitId":"lhw-1"},"content":"                return new EventTask(splitTask[2], splitTask[3], splitTask[1].equals(\"1\"));","lastModifiedDate":"2021-08-27"},{"lineNumber":69,"author":{"gitId":"lhw-1"},"content":"            default:","lastModifiedDate":"2021-08-27"},{"lineNumber":70,"author":{"gitId":"lhw-1"},"content":"                return new Task(\"\");","lastModifiedDate":"2021-08-27"},{"lineNumber":71,"author":{"gitId":"lhw-1"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":72,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":73,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":74,"author":{"gitId":"lhw-1"},"content":"    public String convertToStorageFormat() {","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"lhw-1"},"content":"        return \"\";","lastModifiedDate":"2021-08-27"},{"lineNumber":76,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":77,"author":{"gitId":"lhw-1"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lhw-1":77}},{"path":"src/main/java/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lhw-1"},"content":"package main.java;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"lhw-1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"lhw-1"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"lhw-1"},"content":"    protected String input;","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"lhw-1"},"content":"    protected ArrayList\u003cTask\u003e list;","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"lhw-1"},"content":"    TodoCommand(String input, ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"lhw-1"},"content":"        this.input \u003d input;","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"lhw-1"},"content":"        this.list \u003d list;","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"lhw-1"},"content":"    public String reply() throws DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"lhw-1"},"content":"        String newTask \u003d input.substring(5);","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"lhw-1"},"content":"        if (newTask.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"lhw-1"},"content":"            throw new DukeException(\"The description of a todo cannot be empty. Please try again!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"lhw-1"},"content":"        } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"lhw-1"},"content":"            list.add(new TodoTask(newTask));","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"lhw-1"},"content":"            return addTask(newTask, 1, list.size() - 1, \"\");","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"lhw-1"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"lhw-1"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"lhw-1":25}},{"path":"src/main/java/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lhw-1"},"content":"package main.java;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"lhw-1"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"lhw-1"},"content":" * Task subclass that encapsulates the individual \"Todo\" task passed into the bot.","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"lhw-1"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"lhw-1"},"content":"public class TodoTask extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"lhw-1"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"lhw-1"},"content":"     * Constructor for the Todo class","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"lhw-1"},"content":"     * Only takes in the string","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"lhw-1"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"lhw-1"},"content":"    TodoTask(String task) {","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"lhw-1"},"content":"        super(task);","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"lhw-1"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"lhw-1"},"content":"     * Constructor for the Todo class","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"lhw-1"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"lhw-1"},"content":"    TodoTask(String task, boolean done) {","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"lhw-1"},"content":"        super(task, done);","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"lhw-1"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"lhw-1"},"content":"     * Retrieves the completion state of the task, followed by the task input.","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"lhw-1"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"lhw-1"},"content":"     * @return The String representation of the task completion state and the task input.","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"lhw-1"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"lhw-1"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"lhw-1"},"content":"    public String getTaskState() {","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"lhw-1"},"content":"        return \"[T]\" + super.getTaskState();","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"lhw-1"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"lhw-1"},"content":"    public String convertToStorageFormat() {","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"lhw-1"},"content":"        return \"T,\"","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"lhw-1"},"content":"                + (done ? \"1,\" : \"0,\")","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"lhw-1"},"content":"                + task;","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"lhw-1"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lhw-1":39}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lhw-1"},"content":"hi","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"lhw-1"},"content":"todo","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"lhw-1"},"content":"todo","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"lhw-1"},"content":"todo todo #1","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"lhw-1"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"lhw-1"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"lhw-1"},"content":"todo todo #2","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"lhw-1"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"lhw-1"},"content":"deadline","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"lhw-1"},"content":"deadline","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"lhw-1"},"content":"deadline deadline #1","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"lhw-1"},"content":"deadline deadline #1 /by","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"lhw-1"},"content":"deadline deadline #1 /by","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"lhw-1"},"content":"deadline deadline #1 /at","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"lhw-1"},"content":"deadline deadline #1 /by 1234","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"lhw-1"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"lhw-1"},"content":"event event #1","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"lhw-1"},"content":"event event #1 /at","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"lhw-1"},"content":"event event #1 /at","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"lhw-1"},"content":"event event #1 /by","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"lhw-1"},"content":"event event #1 /at 4321","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"lhw-1"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"lhw-1"},"content":"done 1","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"lhw-1"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"lhw-1"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"lhw-1"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"lhw-1"},"content":"delete 1","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"lhw-1"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"lhw-1"},"content":"todo todo #3","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"lhw-1"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"lhw-1"},"content":"done 3","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"lhw-1"},"content":"done 4","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"lhw-1"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"lhw-1"},"content":"done","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"lhw-1"},"content":"done","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"lhw-1"},"content":"delete","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"lhw-1"},"content":"delete","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"lhw-1"},"content":"delete 1","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"lhw-1"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"lhw-1"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"lhw-1":40}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"lhw-1"},"content":"# dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"lhw-1":1}}]
