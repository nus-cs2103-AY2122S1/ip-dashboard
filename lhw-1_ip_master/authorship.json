[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lhw-1"},"content":"package main.java;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"lhw-1"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"lhw-1"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"lhw-1"},"content":"     * Variable that holds the deadline time as String","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"lhw-1"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"lhw-1"},"content":"    protected String by;","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"lhw-1"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"lhw-1"},"content":"     * Constructor for the Deadline class","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"lhw-1"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"lhw-1"},"content":"    Deadline(String task, String by) {","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"lhw-1"},"content":"        super(task);","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"lhw-1"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"lhw-1"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"lhw-1"},"content":"     * Retrieves the completion state of the task, followed by the task input.","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"lhw-1"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"lhw-1"},"content":"     * @return The String representation of the task completion state and the task input.","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"lhw-1"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"lhw-1"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"lhw-1"},"content":"    public String getTaskState() {","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"lhw-1"},"content":"        return \"[D]\" + (this.done ? \"[X] \" + this.task : \"[ ] \" + this.task) + \"(By: \" + this.by + \")\";","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"lhw-1"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lhw-1":27}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lhw-1"},"content":"package main.java;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"lhw-1"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"lhw-1"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"lhw-1"},"content":"     * Displays the task added message according to the task input given.","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"lhw-1"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"lhw-1"},"content":"     * @param input The task input to be added to the list.","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"lhw-1"},"content":"     * @param type The type id. Todo: 1, Deadline: 2, Event: 3.","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"lhw-1"},"content":"     * @param index The current index of the list.","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"lhw-1"},"content":"     * @param info The information regarding the task (In the format of \"(By: ...)\" or \"(At: ...)\", or \"\" for Todos)","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"lhw-1"},"content":"     * @return The String sequence showing that the task has been added to the list.","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"lhw-1"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"lhw-1"},"content":"    public static String addTask(String input, int type, int index, String info) {","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"lhw-1"},"content":"        // Determine the string that displays the type of task","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"lhw-1"},"content":"        String taskType;","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"lhw-1"},"content":"        String prefix;","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"lhw-1"},"content":"        if (type \u003d\u003d 1) {","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"lhw-1"},"content":"            taskType \u003d \"task (Todo)\";","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"lhw-1"},"content":"            prefix \u003d \"[T][ ]\";","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"lhw-1"},"content":"        } else if (type \u003d\u003d 2) {","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"lhw-1"},"content":"            taskType \u003d \"task (Deadline)\";","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"lhw-1"},"content":"            prefix \u003d \"[D][ ]\";","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"lhw-1"},"content":"        } else if (type \u003d\u003d 3) {","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"lhw-1"},"content":"            taskType \u003d \"task (Event)\";","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"lhw-1"},"content":"            prefix \u003d \"[E][ ]\";","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"lhw-1"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"lhw-1"},"content":"            taskType \u003d \"\";","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"lhw-1"},"content":"            prefix \u003d \"\";","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"lhw-1"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"lhw-1"},"content":"        // Return the message accordingly","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"lhw-1"},"content":"        return \"-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~\\n\"","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"lhw-1"},"content":"                + \"Alright. I\u0027ve added the following \"","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"lhw-1"},"content":"                + taskType","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"lhw-1"},"content":"                + \":\\n--\u003e \"","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"lhw-1"},"content":"                + prefix","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"lhw-1"},"content":"                + \" \"","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"lhw-1"},"content":"                + input","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"lhw-1"},"content":"                + (type \u003d\u003d 2 ? \"(By: \" + info + \")\" : type \u003d\u003d 3 ? \"(At: \" + info + \")\" : \"\")","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"lhw-1"},"content":"                + \"\\n\\n\"","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"lhw-1"},"content":"                + \"You currently have \"","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"lhw-1"},"content":"                + index","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"lhw-1"},"content":"                + (index \u003d\u003d 1 ? \" task\" : \" tasks\")","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"lhw-1"},"content":"                + \" in the list.\\n\"","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"lhw-1"},"content":"                + \"-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~\\n\";","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"lhw-1"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"lhw-1"},"content":"     * Main function for the Chatbot.","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"lhw-1"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"lhw-1"},"content":"     * @param args ...","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"lhw-1"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":57,"author":{"gitId":"lhw-1"},"content":"        // Starting message","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"lhw-1"},"content":"        String start \u003d \"-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~\\n\"","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"lhw-1"},"content":"                + \"Hello! My name is LHWBot!\\n\"","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"lhw-1"},"content":"                + \"What can I do for you today?\\n\"","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"lhw-1"},"content":"                + \"-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~\\n\";","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"lhw-1"},"content":"        System.out.println(start);","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"lhw-1"},"content":"        // Array of String to store user inputs","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"lhw-1"},"content":"        Task[] TaskArray \u003d new Task[250];","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"lhw-1"},"content":"        int index \u003d 0;","lastModifiedDate":"2021-08-18"},{"lineNumber":67,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"lhw-1"},"content":"        // Define the scanner to read user inputs","lastModifiedDate":"2021-08-18"},{"lineNumber":69,"author":{"gitId":"lhw-1"},"content":"        Scanner reader \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-18"},{"lineNumber":70,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":71,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":72,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":73,"author":{"gitId":"lhw-1"},"content":"        // Continuously listen for user inputs","lastModifiedDate":"2021-08-18"},{"lineNumber":74,"author":{"gitId":"lhw-1"},"content":"        while(true) {","lastModifiedDate":"2021-08-18"},{"lineNumber":75,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":76,"author":{"gitId":"lhw-1"},"content":"            // Get the next input from the user","lastModifiedDate":"2021-08-18"},{"lineNumber":77,"author":{"gitId":"lhw-1"},"content":"            String input \u003d reader.nextLine();","lastModifiedDate":"2021-08-18"},{"lineNumber":78,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":79,"author":{"gitId":"lhw-1"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":80,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":81,"author":{"gitId":"lhw-1"},"content":"                // If the user types \"bye\", end bot","lastModifiedDate":"2021-08-18"},{"lineNumber":82,"author":{"gitId":"lhw-1"},"content":"                String bye \u003d \"-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~\\n\"","lastModifiedDate":"2021-08-18"},{"lineNumber":83,"author":{"gitId":"lhw-1"},"content":"                        + \"Bye... Hope to see you again soon!\\n\"","lastModifiedDate":"2021-08-18"},{"lineNumber":84,"author":{"gitId":"lhw-1"},"content":"                        + \"-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~\\n\";","lastModifiedDate":"2021-08-18"},{"lineNumber":85,"author":{"gitId":"lhw-1"},"content":"                System.out.println(bye);","lastModifiedDate":"2021-08-18"},{"lineNumber":86,"author":{"gitId":"lhw-1"},"content":"                break;","lastModifiedDate":"2021-08-18"},{"lineNumber":87,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":88,"author":{"gitId":"lhw-1"},"content":"            } else if (input.equals(\"list\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":89,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":90,"author":{"gitId":"lhw-1"},"content":"                // If the user types \"list\", show the list of tasks","lastModifiedDate":"2021-08-18"},{"lineNumber":91,"author":{"gitId":"lhw-1"},"content":"                String list \u003d \"-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~\\n\";","lastModifiedDate":"2021-08-18"},{"lineNumber":92,"author":{"gitId":"lhw-1"},"content":"                for (int i \u003d 0; i \u003c index; i++) {","lastModifiedDate":"2021-08-18"},{"lineNumber":93,"author":{"gitId":"lhw-1"},"content":"                    list \u003d list","lastModifiedDate":"2021-08-18"},{"lineNumber":94,"author":{"gitId":"lhw-1"},"content":"                            + String.valueOf(i + 1)","lastModifiedDate":"2021-08-18"},{"lineNumber":95,"author":{"gitId":"lhw-1"},"content":"                            + \". \"","lastModifiedDate":"2021-08-18"},{"lineNumber":96,"author":{"gitId":"lhw-1"},"content":"                            + TaskArray[i].getTaskState()","lastModifiedDate":"2021-08-18"},{"lineNumber":97,"author":{"gitId":"lhw-1"},"content":"                            + \"\\n\";","lastModifiedDate":"2021-08-18"},{"lineNumber":98,"author":{"gitId":"lhw-1"},"content":"                }","lastModifiedDate":"2021-08-18"},{"lineNumber":99,"author":{"gitId":"lhw-1"},"content":"                list +\u003d \"-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~\\n\";","lastModifiedDate":"2021-08-18"},{"lineNumber":100,"author":{"gitId":"lhw-1"},"content":"                System.out.println(list);","lastModifiedDate":"2021-08-18"},{"lineNumber":101,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":102,"author":{"gitId":"lhw-1"},"content":"            } else if (input.startsWith(\"done \")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":103,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":104,"author":{"gitId":"lhw-1"},"content":"                // If the user types \"done X\" where X is a non-zero integer, mark the task as complete","lastModifiedDate":"2021-08-18"},{"lineNumber":105,"author":{"gitId":"lhw-1"},"content":"                // TODO Error handling for inputs","lastModifiedDate":"2021-08-18"},{"lineNumber":106,"author":{"gitId":"lhw-1"},"content":"                int doneIndex \u003d Integer.parseInt(input.substring(5)) - 1;","lastModifiedDate":"2021-08-18"},{"lineNumber":107,"author":{"gitId":"lhw-1"},"content":"                TaskArray[doneIndex].toggleState();","lastModifiedDate":"2021-08-18"},{"lineNumber":108,"author":{"gitId":"lhw-1"},"content":"                String done \u003d \"-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~\\n\"","lastModifiedDate":"2021-08-18"},{"lineNumber":109,"author":{"gitId":"lhw-1"},"content":"                        + \"Great! I\u0027ve marked the following task as done:\\n\"","lastModifiedDate":"2021-08-18"},{"lineNumber":110,"author":{"gitId":"lhw-1"},"content":"                        + TaskArray[doneIndex].getTaskState()","lastModifiedDate":"2021-08-18"},{"lineNumber":111,"author":{"gitId":"lhw-1"},"content":"                        + \"\\n\";","lastModifiedDate":"2021-08-18"},{"lineNumber":112,"author":{"gitId":"lhw-1"},"content":"                done +\u003d \"-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~\\n\";","lastModifiedDate":"2021-08-18"},{"lineNumber":113,"author":{"gitId":"lhw-1"},"content":"                System.out.println(done);","lastModifiedDate":"2021-08-18"},{"lineNumber":114,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":115,"author":{"gitId":"lhw-1"},"content":"            } else if (input.startsWith(\"todo \") \u0026\u0026 input.length() \u003e 5) {","lastModifiedDate":"2021-08-18"},{"lineNumber":116,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":117,"author":{"gitId":"lhw-1"},"content":"                // If the user types \"todo [XXX]\" where [XXX] is a substring, store substring as a Todo object","lastModifiedDate":"2021-08-18"},{"lineNumber":118,"author":{"gitId":"lhw-1"},"content":"                // TODO Error handling for inputs","lastModifiedDate":"2021-08-18"},{"lineNumber":119,"author":{"gitId":"lhw-1"},"content":"                String newTask \u003d input.substring(5);","lastModifiedDate":"2021-08-18"},{"lineNumber":120,"author":{"gitId":"lhw-1"},"content":"                TaskArray[index] \u003d new Todo(newTask);","lastModifiedDate":"2021-08-18"},{"lineNumber":121,"author":{"gitId":"lhw-1"},"content":"                index++;","lastModifiedDate":"2021-08-18"},{"lineNumber":122,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":123,"author":{"gitId":"lhw-1"},"content":"                // After storing it, repeat it back to the user","lastModifiedDate":"2021-08-18"},{"lineNumber":124,"author":{"gitId":"lhw-1"},"content":"                System.out.println(addTask(newTask, 1, index, \"\"));","lastModifiedDate":"2021-08-18"},{"lineNumber":125,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":126,"author":{"gitId":"lhw-1"},"content":"            } else if (input.startsWith(\"deadline \") \u0026\u0026 input.contains(\"/by \")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":127,"author":{"gitId":"lhw-1"},"content":"                // If the user types \"deadline [XXX]\" where [XXX] is a substring, store substring as a Deadline object","lastModifiedDate":"2021-08-18"},{"lineNumber":128,"author":{"gitId":"lhw-1"},"content":"                // TODO Error handling for inputs","lastModifiedDate":"2021-08-18"},{"lineNumber":129,"author":{"gitId":"lhw-1"},"content":"                int position \u003d input.indexOf(\"/by\");","lastModifiedDate":"2021-08-18"},{"lineNumber":130,"author":{"gitId":"lhw-1"},"content":"                String newTask \u003d input.substring(9, position);","lastModifiedDate":"2021-08-18"},{"lineNumber":131,"author":{"gitId":"lhw-1"},"content":"                String newInfo \u003d input.substring(position + 4);","lastModifiedDate":"2021-08-18"},{"lineNumber":132,"author":{"gitId":"lhw-1"},"content":"                TaskArray[index] \u003d new Deadline(newTask, newInfo);","lastModifiedDate":"2021-08-18"},{"lineNumber":133,"author":{"gitId":"lhw-1"},"content":"                index++;","lastModifiedDate":"2021-08-18"},{"lineNumber":134,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":135,"author":{"gitId":"lhw-1"},"content":"                // After storing it, repeat it back to the user","lastModifiedDate":"2021-08-18"},{"lineNumber":136,"author":{"gitId":"lhw-1"},"content":"                System.out.println(addTask(newTask, 2, index, newInfo));","lastModifiedDate":"2021-08-18"},{"lineNumber":137,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":138,"author":{"gitId":"lhw-1"},"content":"            } else if (input.startsWith(\"event \") \u0026\u0026 input.contains(\"/at \")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":139,"author":{"gitId":"lhw-1"},"content":"                // If the user types \"event [XXX]\" where [XXX] is a substring, store substring as an Event object","lastModifiedDate":"2021-08-18"},{"lineNumber":140,"author":{"gitId":"lhw-1"},"content":"                // TODO Error handling for inputs","lastModifiedDate":"2021-08-18"},{"lineNumber":141,"author":{"gitId":"lhw-1"},"content":"                int position \u003d input.indexOf(\"/at\");","lastModifiedDate":"2021-08-18"},{"lineNumber":142,"author":{"gitId":"lhw-1"},"content":"                String newTask \u003d input.substring(6, position);","lastModifiedDate":"2021-08-18"},{"lineNumber":143,"author":{"gitId":"lhw-1"},"content":"                String newInfo \u003d input.substring(position + 4);","lastModifiedDate":"2021-08-18"},{"lineNumber":144,"author":{"gitId":"lhw-1"},"content":"                TaskArray[index] \u003d new Event(newTask, newInfo);","lastModifiedDate":"2021-08-18"},{"lineNumber":145,"author":{"gitId":"lhw-1"},"content":"                index++;","lastModifiedDate":"2021-08-18"},{"lineNumber":146,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":147,"author":{"gitId":"lhw-1"},"content":"                // After storing it, repeat it back to the user","lastModifiedDate":"2021-08-18"},{"lineNumber":148,"author":{"gitId":"lhw-1"},"content":"                System.out.println(addTask(newTask, 3, index, newInfo));","lastModifiedDate":"2021-08-18"},{"lineNumber":149,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":150,"author":{"gitId":"lhw-1"},"content":"            } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":151,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":152,"author":{"gitId":"lhw-1"},"content":"                System.out.println(\"-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~\\n\"","lastModifiedDate":"2021-08-18"},{"lineNumber":153,"author":{"gitId":"lhw-1"},"content":"                        + \"OOPS! Sorry, I don\u0027t know what that means...\\n\"","lastModifiedDate":"2021-08-18"},{"lineNumber":154,"author":{"gitId":"lhw-1"},"content":"                        + \"-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~\\n\");","lastModifiedDate":"2021-08-18"},{"lineNumber":155,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":156,"author":{"gitId":"lhw-1"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":157,"author":{"gitId":"lhw-1"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-18"},{"lineNumber":160,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lhw-1":156,"-":4}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lhw-1"},"content":"package main.java;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"lhw-1"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"lhw-1"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"lhw-1"},"content":"     * Variable that holds the event time as String","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"lhw-1"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"lhw-1"},"content":"    protected String at;","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"lhw-1"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"lhw-1"},"content":"     * Constructor for the Event class","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"lhw-1"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"lhw-1"},"content":"    Event(String task, String at) {","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"lhw-1"},"content":"        super(task);","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"lhw-1"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"lhw-1"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"lhw-1"},"content":"     * Retrieves the completion state of the task, followed by the task input.","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"lhw-1"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"lhw-1"},"content":"     * @return The String representation of the task completion state and the task input.","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"lhw-1"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"lhw-1"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"lhw-1"},"content":"    public String getTaskState() {","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"lhw-1"},"content":"        return \"[E]\" + (this.done ? \"[X] \" + this.task : \"[ ] \" + this.task) + \"(At: \" + this.at + \")\";","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"lhw-1"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lhw-1":27}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lhw-1"},"content":"package main.java;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"lhw-1"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"lhw-1"},"content":" * Task class that encapsulates the individual task passed into the bot.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"lhw-1"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"lhw-1"},"content":"public class Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"lhw-1"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"lhw-1"},"content":"     * Variable that holds the task input as String","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"lhw-1"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"lhw-1"},"content":"    protected String task;","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"lhw-1"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"lhw-1"},"content":"     * Variable that holds the task completion state as boolean","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"lhw-1"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"lhw-1"},"content":"    protected boolean done;","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"lhw-1"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"lhw-1"},"content":"     * Constructor for the Task class","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"lhw-1"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"lhw-1"},"content":"    Task(String task) {","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"lhw-1"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"lhw-1"},"content":"        this.done \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"lhw-1"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"lhw-1"},"content":"     * Retrieves the completion state of the task, followed by the task input.","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"lhw-1"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"lhw-1"},"content":"     * @return The String representation of the task completion state and the task input.","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"lhw-1"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"lhw-1"},"content":"    public String getTaskState() {","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"lhw-1"},"content":"        return this.done ? \"[X] \" + this.task : \"[ ] \" + this.task;","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"lhw-1"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"lhw-1"},"content":"     * Toggles the current state by negating the boolean state value. (Done vs not done)","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"lhw-1"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"lhw-1"},"content":"    public void toggleState() {","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"lhw-1"},"content":"        this.done \u003d !this.done;","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"lhw-1"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lhw-1":41}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lhw-1"},"content":"package main.java;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"lhw-1"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"lhw-1"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"lhw-1"},"content":"     * Constructor for the Todo class","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"lhw-1"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"lhw-1"},"content":"    Todo(String task) {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"lhw-1"},"content":"        super(task);","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"lhw-1"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"lhw-1"},"content":"     * Retrieves the completion state of the task, followed by the task input.","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"lhw-1"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"lhw-1"},"content":"     * @return The String representation of the task completion state and the task input.","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"lhw-1"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"lhw-1"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"lhw-1"},"content":"    public String getTaskState() {","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"lhw-1"},"content":"        return \"[T]\" + (this.done ? \"[X] \" + this.task : \"[ ] \" + this.task);","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"lhw-1"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"lhw-1":21}}]
