[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"limdanqi"},"content":"# duke.Duke project template","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"limdanqi"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"limdanqi":2,"-":22}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limdanqi"},"content":"package duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"limdanqi"},"content":"import java.io.File;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"limdanqi"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"limdanqi"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"limdanqi"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"limdanqi"},"content":"import duke.data.exceptions.DukeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"limdanqi"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"limdanqi"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"limdanqi"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"limdanqi"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"limdanqi"},"content":"//todo command to print deadlines/events occuring on specific date","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"limdanqi"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"limdanqi"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"limdanqi"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"limdanqi"},"content":"    private String storagePath;","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"limdanqi"},"content":"    private File dataFile;","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"limdanqi"},"content":"    private static final String STORAGE_PATH \u003d \"data/duke.txt\";","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"limdanqi"},"content":"    private static final File DATA_FILE \u003d new File(STORAGE_PATH);","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"limdanqi"},"content":"    public Duke(String storagePath) {","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"limdanqi"},"content":"        this.storagePath \u003d storagePath;","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"limdanqi"},"content":"        this.dataFile \u003d new File(storagePath);","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"limdanqi"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"limdanqi"},"content":"        storage \u003d new Storage(storagePath);","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"limdanqi"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"limdanqi"},"content":"            boolean isFileCreated \u003d dataFile.createNewFile();","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"limdanqi"},"content":"            if (!isFileCreated) {","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"limdanqi"},"content":"                taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"limdanqi"},"content":"            } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"limdanqi"},"content":"                taskList \u003d new TaskList();","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"limdanqi"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"limdanqi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"limdanqi"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"limdanqi"},"content":"//    private static List\u003cduke.task.Task\u003e initialiseBot() {","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"limdanqi"},"content":"//        List\u003cduke.task.Task\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"limdanqi"},"content":"//        duke.storage.Storage dataManager \u003d new duke.storage.Storage();","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"limdanqi"},"content":"//","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"limdanqi"},"content":"//        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"limdanqi"},"content":"//            boolean isFileCreated \u003d DATA_FILE.createNewFile();","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"limdanqi"},"content":"//            if (!isFileCreated) {","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"limdanqi"},"content":"//                taskList \u003d dataManager.txtToList(DATA_FILE);","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"limdanqi"},"content":"//            }","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"limdanqi"},"content":"//        } catch (IOException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"limdanqi"},"content":"//            e.printStackTrace();","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"limdanqi"},"content":"//        }","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"limdanqi"},"content":"//","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"limdanqi"},"content":"//        String message \u003d \"Hello! I\u0027m duke.Duke\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"limdanqi"},"content":"//                + \"What can I do for you?\";","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"limdanqi"},"content":"//        System.out.println(message);","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"limdanqi"},"content":"//","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"limdanqi"},"content":"//        return taskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"limdanqi"},"content":"//    }","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"limdanqi"},"content":"//","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"limdanqi"},"content":"//    private static void closeBot() {","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"limdanqi"},"content":"//        String message \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-08-28"},{"lineNumber":66,"author":{"gitId":"limdanqi"},"content":"//        System.out.println(message);","lastModifiedDate":"2021-08-28"},{"lineNumber":67,"author":{"gitId":"limdanqi"},"content":"//    }","lastModifiedDate":"2021-08-28"},{"lineNumber":68,"author":{"gitId":"limdanqi"},"content":"//","lastModifiedDate":"2021-08-28"},{"lineNumber":69,"author":{"gitId":"limdanqi"},"content":"//    private static duke.task.Task getTask(String message, String taskType) throws duke.data.exceptions.EmptyTaskDescriptionException, duke.data.exceptions.InvalidDateAndTimeException, duke.data.exceptions.InvalidInputException {","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"limdanqi"},"content":"//","lastModifiedDate":"2021-08-28"},{"lineNumber":71,"author":{"gitId":"limdanqi"},"content":"//        switch (taskType) {","lastModifiedDate":"2021-08-28"},{"lineNumber":72,"author":{"gitId":"limdanqi"},"content":"//            case TODO:","lastModifiedDate":"2021-08-28"},{"lineNumber":73,"author":{"gitId":"limdanqi"},"content":"//                if (message.trim().equals(TODO)) {","lastModifiedDate":"2021-08-28"},{"lineNumber":74,"author":{"gitId":"limdanqi"},"content":"//                    throw new duke.data.exceptions.EmptyTaskDescriptionException(\"Empty duke.task.Todo Description\", TODO);","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"limdanqi"},"content":"//                } else {","lastModifiedDate":"2021-08-28"},{"lineNumber":76,"author":{"gitId":"limdanqi"},"content":"//                    if (!Character.isWhitespace(message.charAt(4))) {","lastModifiedDate":"2021-08-28"},{"lineNumber":77,"author":{"gitId":"limdanqi"},"content":"//                        throw new duke.data.exceptions.InvalidInputException(\"invalid input\");","lastModifiedDate":"2021-08-28"},{"lineNumber":78,"author":{"gitId":"limdanqi"},"content":"//                    } else {","lastModifiedDate":"2021-08-28"},{"lineNumber":79,"author":{"gitId":"limdanqi"},"content":"//                        String taskName \u003d message.substring(TODO.length() + 1);","lastModifiedDate":"2021-08-28"},{"lineNumber":80,"author":{"gitId":"limdanqi"},"content":"//                        return new duke.task.Todo(taskName);","lastModifiedDate":"2021-08-28"},{"lineNumber":81,"author":{"gitId":"limdanqi"},"content":"//                    }","lastModifiedDate":"2021-08-28"},{"lineNumber":82,"author":{"gitId":"limdanqi"},"content":"//                }","lastModifiedDate":"2021-08-28"},{"lineNumber":83,"author":{"gitId":"limdanqi"},"content":"//            case DEADLINE:","lastModifiedDate":"2021-08-28"},{"lineNumber":84,"author":{"gitId":"limdanqi"},"content":"//                if (message.trim().equals(DEADLINE)) {","lastModifiedDate":"2021-08-28"},{"lineNumber":85,"author":{"gitId":"limdanqi"},"content":"//                    throw new duke.data.exceptions.EmptyTaskDescriptionException(\"Empty duke.task.Deadline Description\", DEADLINE);","lastModifiedDate":"2021-08-28"},{"lineNumber":86,"author":{"gitId":"limdanqi"},"content":"//                } else {","lastModifiedDate":"2021-08-28"},{"lineNumber":87,"author":{"gitId":"limdanqi"},"content":"//                    String deadline \u003d getDateAndTime(message, DEADLINE);","lastModifiedDate":"2021-08-28"},{"lineNumber":88,"author":{"gitId":"limdanqi"},"content":"//","lastModifiedDate":"2021-08-28"},{"lineNumber":89,"author":{"gitId":"limdanqi"},"content":"//                    int startingIndex \u003d message.indexOf(\" \");","lastModifiedDate":"2021-08-28"},{"lineNumber":90,"author":{"gitId":"limdanqi"},"content":"//                    int endingIndex \u003d message.indexOf(\"/\");","lastModifiedDate":"2021-08-28"},{"lineNumber":91,"author":{"gitId":"limdanqi"},"content":"//                    String taskName \u003d message.substring(startingIndex + 1, endingIndex - 1);","lastModifiedDate":"2021-08-28"},{"lineNumber":92,"author":{"gitId":"limdanqi"},"content":"//","lastModifiedDate":"2021-08-28"},{"lineNumber":93,"author":{"gitId":"limdanqi"},"content":"//                    //todo deadline return book being invalid input rather than invalid date.","lastModifiedDate":"2021-08-28"},{"lineNumber":94,"author":{"gitId":"limdanqi"},"content":"//","lastModifiedDate":"2021-08-28"},{"lineNumber":95,"author":{"gitId":"limdanqi"},"content":"//                    return new duke.task.Deadline(taskName, deadline);","lastModifiedDate":"2021-08-28"},{"lineNumber":96,"author":{"gitId":"limdanqi"},"content":"//                }","lastModifiedDate":"2021-08-28"},{"lineNumber":97,"author":{"gitId":"limdanqi"},"content":"//            case EVENT:","lastModifiedDate":"2021-08-28"},{"lineNumber":98,"author":{"gitId":"limdanqi"},"content":"//                if (message.trim().equals(EVENT)) {","lastModifiedDate":"2021-08-28"},{"lineNumber":99,"author":{"gitId":"limdanqi"},"content":"//                    throw new duke.data.exceptions.EmptyTaskDescriptionException(\"Empty duke.task.Event Description\", EVENT);","lastModifiedDate":"2021-08-28"},{"lineNumber":100,"author":{"gitId":"limdanqi"},"content":"//                } else {","lastModifiedDate":"2021-08-28"},{"lineNumber":101,"author":{"gitId":"limdanqi"},"content":"//                    String eventTime \u003d getDateAndTime(message, EVENT);","lastModifiedDate":"2021-08-28"},{"lineNumber":102,"author":{"gitId":"limdanqi"},"content":"//","lastModifiedDate":"2021-08-28"},{"lineNumber":103,"author":{"gitId":"limdanqi"},"content":"//                    int startingIndex \u003d message.indexOf(\" \");","lastModifiedDate":"2021-08-28"},{"lineNumber":104,"author":{"gitId":"limdanqi"},"content":"//                    int endingIndex \u003d message.indexOf(\"/\");","lastModifiedDate":"2021-08-28"},{"lineNumber":105,"author":{"gitId":"limdanqi"},"content":"//                    String taskName \u003d message.substring(startingIndex + 1, endingIndex - 1);","lastModifiedDate":"2021-08-28"},{"lineNumber":106,"author":{"gitId":"limdanqi"},"content":"//","lastModifiedDate":"2021-08-28"},{"lineNumber":107,"author":{"gitId":"limdanqi"},"content":"//                    return new duke.task.Event(taskName, eventTime);","lastModifiedDate":"2021-08-28"},{"lineNumber":108,"author":{"gitId":"limdanqi"},"content":"//                }","lastModifiedDate":"2021-08-28"},{"lineNumber":109,"author":{"gitId":"limdanqi"},"content":"//        }","lastModifiedDate":"2021-08-28"},{"lineNumber":110,"author":{"gitId":"limdanqi"},"content":"//","lastModifiedDate":"2021-08-28"},{"lineNumber":111,"author":{"gitId":"limdanqi"},"content":"//        return new duke.task.Task();","lastModifiedDate":"2021-08-28"},{"lineNumber":112,"author":{"gitId":"limdanqi"},"content":"//    }","lastModifiedDate":"2021-08-28"},{"lineNumber":113,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":114,"author":{"gitId":"limdanqi"},"content":"    public void run() {","lastModifiedDate":"2021-08-28"},{"lineNumber":115,"author":{"gitId":"limdanqi"},"content":"        ui.showWelcome();","lastModifiedDate":"2021-08-28"},{"lineNumber":116,"author":{"gitId":"limdanqi"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-08-28"},{"lineNumber":117,"author":{"gitId":"limdanqi"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-16"},{"lineNumber":118,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":119,"author":{"gitId":"limdanqi"},"content":"        while (!isExit) {","lastModifiedDate":"2021-08-28"},{"lineNumber":120,"author":{"gitId":"limdanqi"},"content":"            try {","lastModifiedDate":"2021-08-17"},{"lineNumber":121,"author":{"gitId":"limdanqi"},"content":"                String command \u003d ui.readCommand(sc);","lastModifiedDate":"2021-08-28"},{"lineNumber":122,"author":{"gitId":"limdanqi"},"content":"                ui.showLine();","lastModifiedDate":"2021-08-28"},{"lineNumber":123,"author":{"gitId":"limdanqi"},"content":"                Parser p \u003d new Parser();","lastModifiedDate":"2021-08-28"},{"lineNumber":124,"author":{"gitId":"limdanqi"},"content":"                Command c \u003d p.parse(command);","lastModifiedDate":"2021-08-28"},{"lineNumber":125,"author":{"gitId":"limdanqi"},"content":"                c.execute(taskList, ui, storage);","lastModifiedDate":"2021-08-28"},{"lineNumber":126,"author":{"gitId":"limdanqi"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2021-08-28"},{"lineNumber":127,"author":{"gitId":"limdanqi"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-17"},{"lineNumber":128,"author":{"gitId":"limdanqi"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2021-08-28"},{"lineNumber":129,"author":{"gitId":"limdanqi"},"content":"            } finally {","lastModifiedDate":"2021-08-28"},{"lineNumber":130,"author":{"gitId":"limdanqi"},"content":"                ui.showLine();","lastModifiedDate":"2021-08-28"},{"lineNumber":131,"author":{"gitId":"limdanqi"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":133,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":134,"author":{"gitId":"limdanqi"},"content":"        sc.close();","lastModifiedDate":"2021-08-16"},{"lineNumber":135,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":136,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":137,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":138,"author":{"gitId":"limdanqi"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-28"},{"lineNumber":139,"author":{"gitId":"limdanqi"},"content":"        new Duke(STORAGE_PATH).run();","lastModifiedDate":"2021-08-28"},{"lineNumber":140,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":141,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":142,"author":{"gitId":"limdanqi"},"content":"//        boolean status \u003d true;","lastModifiedDate":"2021-08-28"},{"lineNumber":143,"author":{"gitId":"limdanqi"},"content":"//        List\u003cduke.task.Task\u003e tasks \u003d initialiseBot();","lastModifiedDate":"2021-08-28"},{"lineNumber":144,"author":{"gitId":"limdanqi"},"content":"//","lastModifiedDate":"2021-08-28"},{"lineNumber":145,"author":{"gitId":"limdanqi"},"content":"//        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-28"},{"lineNumber":146,"author":{"gitId":"limdanqi"},"content":"//","lastModifiedDate":"2021-08-28"},{"lineNumber":147,"author":{"gitId":"limdanqi"},"content":"//        while (status) {","lastModifiedDate":"2021-08-28"},{"lineNumber":148,"author":{"gitId":"limdanqi"},"content":"//            String message \u003d sc.nextLine();","lastModifiedDate":"2021-08-28"},{"lineNumber":149,"author":{"gitId":"limdanqi"},"content":"//","lastModifiedDate":"2021-08-28"},{"lineNumber":150,"author":{"gitId":"limdanqi"},"content":"//            if (message.equals(\"bye\")) {","lastModifiedDate":"2021-08-28"},{"lineNumber":151,"author":{"gitId":"limdanqi"},"content":"//                status \u003d false;","lastModifiedDate":"2021-08-28"},{"lineNumber":152,"author":{"gitId":"limdanqi"},"content":"//                closeBot();","lastModifiedDate":"2021-08-28"},{"lineNumber":153,"author":{"gitId":"limdanqi"},"content":"//            } else if (message.equals(\"list\")) {","lastModifiedDate":"2021-08-28"},{"lineNumber":154,"author":{"gitId":"limdanqi"},"content":"//                printTasks(tasks);","lastModifiedDate":"2021-08-28"},{"lineNumber":155,"author":{"gitId":"limdanqi"},"content":"//            } else if (message.startsWith(\"done\")) {","lastModifiedDate":"2021-08-28"},{"lineNumber":156,"author":{"gitId":"limdanqi"},"content":"//                markTaskAsDone(message, tasks);","lastModifiedDate":"2021-08-28"},{"lineNumber":157,"author":{"gitId":"limdanqi"},"content":"//            } else if (message.startsWith(\"delete\")) {","lastModifiedDate":"2021-08-28"},{"lineNumber":158,"author":{"gitId":"limdanqi"},"content":"//                deleteTask(message, tasks);","lastModifiedDate":"2021-08-28"},{"lineNumber":159,"author":{"gitId":"limdanqi"},"content":"//            } else if (message.startsWith(\"todo\")) {","lastModifiedDate":"2021-08-28"},{"lineNumber":160,"author":{"gitId":"limdanqi"},"content":"//                addTaskFromCommand(tasks, message, TODO);","lastModifiedDate":"2021-08-28"},{"lineNumber":161,"author":{"gitId":"limdanqi"},"content":"//            } else if (message.startsWith(\"deadline\")) {","lastModifiedDate":"2021-08-28"},{"lineNumber":162,"author":{"gitId":"limdanqi"},"content":"//                addTaskFromCommand(tasks, message, DEADLINE);","lastModifiedDate":"2021-08-28"},{"lineNumber":163,"author":{"gitId":"limdanqi"},"content":"//            } else if (message.startsWith(\"event\")) {","lastModifiedDate":"2021-08-28"},{"lineNumber":164,"author":{"gitId":"limdanqi"},"content":"//                addTaskFromCommand(tasks, message, EVENT);","lastModifiedDate":"2021-08-28"},{"lineNumber":165,"author":{"gitId":"limdanqi"},"content":"//            } else {","lastModifiedDate":"2021-08-28"},{"lineNumber":166,"author":{"gitId":"limdanqi"},"content":"//                try {","lastModifiedDate":"2021-08-28"},{"lineNumber":167,"author":{"gitId":"limdanqi"},"content":"//                    throw new duke.data.exceptions.InvalidInputException(\"invalid input\");","lastModifiedDate":"2021-08-28"},{"lineNumber":168,"author":{"gitId":"limdanqi"},"content":"//                } catch (duke.data.DukeException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":169,"author":{"gitId":"limdanqi"},"content":"//                    System.out.println(e.getMessage());","lastModifiedDate":"2021-08-28"},{"lineNumber":170,"author":{"gitId":"limdanqi"},"content":"//                }","lastModifiedDate":"2021-08-28"},{"lineNumber":171,"author":{"gitId":"limdanqi"},"content":"//            }","lastModifiedDate":"2021-08-28"},{"lineNumber":172,"author":{"gitId":"limdanqi"},"content":"//","lastModifiedDate":"2021-08-28"},{"lineNumber":173,"author":{"gitId":"limdanqi"},"content":"//        }","lastModifiedDate":"2021-08-28"},{"lineNumber":174,"author":{"gitId":"limdanqi"},"content":"//","lastModifiedDate":"2021-08-28"},{"lineNumber":175,"author":{"gitId":"limdanqi"},"content":"//        sc.close();","lastModifiedDate":"2021-08-28"},{"lineNumber":176,"author":{"gitId":"limdanqi"},"content":"//    }","lastModifiedDate":"2021-08-28"},{"lineNumber":177,"author":{"gitId":"limdanqi"},"content":"//","lastModifiedDate":"2021-08-28"},{"lineNumber":178,"author":{"gitId":"limdanqi"},"content":"//    private static void addTaskFromCommand(List\u003cduke.task.Task\u003e tasks, String message, String taskType) {","lastModifiedDate":"2021-08-28"},{"lineNumber":179,"author":{"gitId":"limdanqi"},"content":"//        duke.task.Task task \u003d null;","lastModifiedDate":"2021-08-28"},{"lineNumber":180,"author":{"gitId":"limdanqi"},"content":"//        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":181,"author":{"gitId":"limdanqi"},"content":"//            task \u003d getTask(message, taskType);","lastModifiedDate":"2021-08-28"},{"lineNumber":182,"author":{"gitId":"limdanqi"},"content":"//            if (task.isEmpty()) {","lastModifiedDate":"2021-08-28"},{"lineNumber":183,"author":{"gitId":"limdanqi"},"content":"//                throw new duke.data.exceptions.InvalidInputException(\"error\");","lastModifiedDate":"2021-08-28"},{"lineNumber":184,"author":{"gitId":"limdanqi"},"content":"//            }","lastModifiedDate":"2021-08-28"},{"lineNumber":185,"author":{"gitId":"limdanqi"},"content":"//            addTask(task, tasks);","lastModifiedDate":"2021-08-28"},{"lineNumber":186,"author":{"gitId":"limdanqi"},"content":"//        } catch (duke.data.DukeException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":187,"author":{"gitId":"limdanqi"},"content":"//            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-28"},{"lineNumber":188,"author":{"gitId":"limdanqi"},"content":"//        }","lastModifiedDate":"2021-08-28"},{"lineNumber":189,"author":{"gitId":"limdanqi"},"content":"//    }","lastModifiedDate":"2021-08-28"},{"lineNumber":190,"author":{"gitId":"limdanqi"},"content":"//","lastModifiedDate":"2021-08-28"},{"lineNumber":191,"author":{"gitId":"limdanqi"},"content":"//    private static void deleteTask(String message, List\u003cduke.task.Task\u003e tasks) {","lastModifiedDate":"2021-08-28"},{"lineNumber":192,"author":{"gitId":"limdanqi"},"content":"//        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":193,"author":{"gitId":"limdanqi"},"content":"//            int taskPosition \u003d getTaskNumber(message) - 1;","lastModifiedDate":"2021-08-28"},{"lineNumber":194,"author":{"gitId":"limdanqi"},"content":"//            if (taskPosition \u003e\u003d tasks.size()) {","lastModifiedDate":"2021-08-28"},{"lineNumber":195,"author":{"gitId":"limdanqi"},"content":"//                throw new duke.data.exceptions.InvalidInputException(\"invalid task number entered\");","lastModifiedDate":"2021-08-28"},{"lineNumber":196,"author":{"gitId":"limdanqi"},"content":"//            } else {","lastModifiedDate":"2021-08-28"},{"lineNumber":197,"author":{"gitId":"limdanqi"},"content":"//                duke.task.Task removedTask \u003d tasks.get(taskPosition);","lastModifiedDate":"2021-08-28"},{"lineNumber":198,"author":{"gitId":"limdanqi"},"content":"//                tasks.remove(taskPosition);","lastModifiedDate":"2021-08-28"},{"lineNumber":199,"author":{"gitId":"limdanqi"},"content":"//","lastModifiedDate":"2021-08-28"},{"lineNumber":200,"author":{"gitId":"limdanqi"},"content":"//                //TODO make better","lastModifiedDate":"2021-08-28"},{"lineNumber":201,"author":{"gitId":"limdanqi"},"content":"//                duke.storage.Storage dataManager \u003d new duke.storage.Storage(tasks);","lastModifiedDate":"2021-08-28"},{"lineNumber":202,"author":{"gitId":"limdanqi"},"content":"//                dataManager.update(tasks);","lastModifiedDate":"2021-08-28"},{"lineNumber":203,"author":{"gitId":"limdanqi"},"content":"//","lastModifiedDate":"2021-08-28"},{"lineNumber":204,"author":{"gitId":"limdanqi"},"content":"//                String displayedMessage \u003d \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":205,"author":{"gitId":"limdanqi"},"content":"//                        + \"  \" + removedTask.toString() + \"\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":206,"author":{"gitId":"limdanqi"},"content":"//                        + getTotalTaskString(tasks);","lastModifiedDate":"2021-08-28"},{"lineNumber":207,"author":{"gitId":"limdanqi"},"content":"//                System.out.println(displayedMessage);","lastModifiedDate":"2021-08-28"},{"lineNumber":208,"author":{"gitId":"limdanqi"},"content":"//            }","lastModifiedDate":"2021-08-28"},{"lineNumber":209,"author":{"gitId":"limdanqi"},"content":"//        } catch (duke.data.DukeException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":210,"author":{"gitId":"limdanqi"},"content":"//            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-28"},{"lineNumber":211,"author":{"gitId":"limdanqi"},"content":"//        }","lastModifiedDate":"2021-08-28"},{"lineNumber":212,"author":{"gitId":"limdanqi"},"content":"//    }","lastModifiedDate":"2021-08-28"},{"lineNumber":213,"author":{"gitId":"limdanqi"},"content":"//","lastModifiedDate":"2021-08-28"},{"lineNumber":214,"author":{"gitId":"limdanqi"},"content":"//    private static void addTask(duke.task.Task task, List\u003cduke.task.Task\u003e tasks) {","lastModifiedDate":"2021-08-28"},{"lineNumber":215,"author":{"gitId":"limdanqi"},"content":"//        tasks.add(task);","lastModifiedDate":"2021-08-28"},{"lineNumber":216,"author":{"gitId":"limdanqi"},"content":"//","lastModifiedDate":"2021-08-28"},{"lineNumber":217,"author":{"gitId":"limdanqi"},"content":"//        //TODO make better","lastModifiedDate":"2021-08-28"},{"lineNumber":218,"author":{"gitId":"limdanqi"},"content":"//        duke.storage.Storage storage \u003d new duke.storage.Storage(tasks);","lastModifiedDate":"2021-08-28"},{"lineNumber":219,"author":{"gitId":"limdanqi"},"content":"//        storage.update(tasks);","lastModifiedDate":"2021-08-28"},{"lineNumber":220,"author":{"gitId":"limdanqi"},"content":"//","lastModifiedDate":"2021-08-28"},{"lineNumber":221,"author":{"gitId":"limdanqi"},"content":"//        String displayedMessage \u003d getAddedSuccessMessage(task, tasks);","lastModifiedDate":"2021-08-28"},{"lineNumber":222,"author":{"gitId":"limdanqi"},"content":"//        System.out.println(displayedMessage);","lastModifiedDate":"2021-08-28"},{"lineNumber":223,"author":{"gitId":"limdanqi"},"content":"//    }","lastModifiedDate":"2021-08-28"},{"lineNumber":224,"author":{"gitId":"limdanqi"},"content":"//","lastModifiedDate":"2021-08-28"},{"lineNumber":225,"author":{"gitId":"limdanqi"},"content":"//    private static String getTotalTaskString(List\u003cduke.task.Task\u003e tasks) {","lastModifiedDate":"2021-08-28"},{"lineNumber":226,"author":{"gitId":"limdanqi"},"content":"//        return String.format(\"Now you have %d tasks in the list.\", getTotalTaskNumber(tasks));","lastModifiedDate":"2021-08-28"},{"lineNumber":227,"author":{"gitId":"limdanqi"},"content":"//    }","lastModifiedDate":"2021-08-28"},{"lineNumber":228,"author":{"gitId":"limdanqi"},"content":"//","lastModifiedDate":"2021-08-28"},{"lineNumber":229,"author":{"gitId":"limdanqi"},"content":"//    private static String getAddedSuccessMessage(duke.task.Task task, List\u003cduke.task.Task\u003e tasks) {","lastModifiedDate":"2021-08-28"},{"lineNumber":230,"author":{"gitId":"limdanqi"},"content":"//        String successMessage \u003d \"Got it. I\u0027ve added this task:\";","lastModifiedDate":"2021-08-28"},{"lineNumber":231,"author":{"gitId":"limdanqi"},"content":"//        String taskString \u003d task.toString();","lastModifiedDate":"2021-08-28"},{"lineNumber":232,"author":{"gitId":"limdanqi"},"content":"//        String result \u003d successMessage + \"\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":233,"author":{"gitId":"limdanqi"},"content":"//                + \"  \" + taskString + \"\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":234,"author":{"gitId":"limdanqi"},"content":"//                + getTotalTaskString(tasks);","lastModifiedDate":"2021-08-28"},{"lineNumber":235,"author":{"gitId":"limdanqi"},"content":"//        return result;","lastModifiedDate":"2021-08-28"},{"lineNumber":236,"author":{"gitId":"limdanqi"},"content":"//    }","lastModifiedDate":"2021-08-28"},{"lineNumber":237,"author":{"gitId":"limdanqi"},"content":"//","lastModifiedDate":"2021-08-28"},{"lineNumber":238,"author":{"gitId":"limdanqi"},"content":"//    private static int getTotalTaskNumber(List\u003cduke.task.Task\u003e tasks) {","lastModifiedDate":"2021-08-28"},{"lineNumber":239,"author":{"gitId":"limdanqi"},"content":"//        return tasks.size();","lastModifiedDate":"2021-08-28"},{"lineNumber":240,"author":{"gitId":"limdanqi"},"content":"//    }","lastModifiedDate":"2021-08-28"},{"lineNumber":241,"author":{"gitId":"limdanqi"},"content":"//","lastModifiedDate":"2021-08-28"},{"lineNumber":242,"author":{"gitId":"limdanqi"},"content":"//    private static void checkValidTaskName(String message) throws duke.data.exceptions.InvalidInputException {","lastModifiedDate":"2021-08-28"},{"lineNumber":243,"author":{"gitId":"limdanqi"},"content":"//        int startingIndex \u003d message.indexOf(\" \");","lastModifiedDate":"2021-08-28"},{"lineNumber":244,"author":{"gitId":"limdanqi"},"content":"//        int endingIndex \u003d message.indexOf(\"/\");","lastModifiedDate":"2021-08-28"},{"lineNumber":245,"author":{"gitId":"limdanqi"},"content":"//","lastModifiedDate":"2021-08-28"},{"lineNumber":246,"author":{"gitId":"limdanqi"},"content":"//        if (startingIndex \u003c 0 || endingIndex - startingIndex \u003c\u003d 1) {","lastModifiedDate":"2021-08-28"},{"lineNumber":247,"author":{"gitId":"limdanqi"},"content":"//            throw new duke.data.exceptions.InvalidInputException(\"invalid input\");","lastModifiedDate":"2021-08-28"},{"lineNumber":248,"author":{"gitId":"limdanqi"},"content":"//        }","lastModifiedDate":"2021-08-28"},{"lineNumber":249,"author":{"gitId":"limdanqi"},"content":"//    }","lastModifiedDate":"2021-08-28"},{"lineNumber":250,"author":{"gitId":"limdanqi"},"content":"//","lastModifiedDate":"2021-08-28"},{"lineNumber":251,"author":{"gitId":"limdanqi"},"content":"//    private static String getDateAndTime(String message, String taskType) throws duke.data.exceptions.InvalidDateAndTimeException, duke.data.exceptions.InvalidInputException {","lastModifiedDate":"2021-08-28"},{"lineNumber":252,"author":{"gitId":"limdanqi"},"content":"//        int startingIndex;","lastModifiedDate":"2021-08-28"},{"lineNumber":253,"author":{"gitId":"limdanqi"},"content":"//","lastModifiedDate":"2021-08-28"},{"lineNumber":254,"author":{"gitId":"limdanqi"},"content":"//        checkValidTaskName(message);  //todo move to better slot?","lastModifiedDate":"2021-08-28"},{"lineNumber":255,"author":{"gitId":"limdanqi"},"content":"//","lastModifiedDate":"2021-08-28"},{"lineNumber":256,"author":{"gitId":"limdanqi"},"content":"//        switch (taskType) {","lastModifiedDate":"2021-08-28"},{"lineNumber":257,"author":{"gitId":"limdanqi"},"content":"//            case DEADLINE:","lastModifiedDate":"2021-08-28"},{"lineNumber":258,"author":{"gitId":"limdanqi"},"content":"//                startingIndex \u003d message.indexOf(\"/by \");","lastModifiedDate":"2021-08-28"},{"lineNumber":259,"author":{"gitId":"limdanqi"},"content":"//","lastModifiedDate":"2021-08-28"},{"lineNumber":260,"author":{"gitId":"limdanqi"},"content":"//                if (startingIndex \u003c 0 || startingIndex + 3 \u003d\u003d message.length() - 1) {","lastModifiedDate":"2021-08-28"},{"lineNumber":261,"author":{"gitId":"limdanqi"},"content":"//                    throw new duke.data.exceptions.InvalidDateAndTimeException(\"missing deadline\");","lastModifiedDate":"2021-08-28"},{"lineNumber":262,"author":{"gitId":"limdanqi"},"content":"//                }","lastModifiedDate":"2021-08-28"},{"lineNumber":263,"author":{"gitId":"limdanqi"},"content":"//","lastModifiedDate":"2021-08-28"},{"lineNumber":264,"author":{"gitId":"limdanqi"},"content":"//                duke.data.DateAndTime dateAndTime1 \u003d new duke.data.DateAndTime(message);","lastModifiedDate":"2021-08-28"},{"lineNumber":265,"author":{"gitId":"limdanqi"},"content":"//                return dateAndTime1.getReformattedDateAndTime();","lastModifiedDate":"2021-08-28"},{"lineNumber":266,"author":{"gitId":"limdanqi"},"content":"//            case EVENT:","lastModifiedDate":"2021-08-28"},{"lineNumber":267,"author":{"gitId":"limdanqi"},"content":"//                startingIndex \u003d message.indexOf(\"/at \");","lastModifiedDate":"2021-08-28"},{"lineNumber":268,"author":{"gitId":"limdanqi"},"content":"//","lastModifiedDate":"2021-08-28"},{"lineNumber":269,"author":{"gitId":"limdanqi"},"content":"//                if (startingIndex \u003c 0 || startingIndex + 3 \u003d\u003d message.length() - 1) {","lastModifiedDate":"2021-08-28"},{"lineNumber":270,"author":{"gitId":"limdanqi"},"content":"//                    throw new duke.data.exceptions.InvalidDateAndTimeException(\"missing event time\");","lastModifiedDate":"2021-08-28"},{"lineNumber":271,"author":{"gitId":"limdanqi"},"content":"//                }","lastModifiedDate":"2021-08-28"},{"lineNumber":272,"author":{"gitId":"limdanqi"},"content":"//","lastModifiedDate":"2021-08-28"},{"lineNumber":273,"author":{"gitId":"limdanqi"},"content":"//                duke.data.DateAndTime dateAndTime2 \u003d new duke.data.DateAndTime(message);","lastModifiedDate":"2021-08-28"},{"lineNumber":274,"author":{"gitId":"limdanqi"},"content":"//                return dateAndTime2.getReformattedDateAndTime();","lastModifiedDate":"2021-08-28"},{"lineNumber":275,"author":{"gitId":"limdanqi"},"content":"//            }","lastModifiedDate":"2021-08-28"},{"lineNumber":276,"author":{"gitId":"limdanqi"},"content":"//        return \"\";","lastModifiedDate":"2021-08-28"},{"lineNumber":277,"author":{"gitId":"limdanqi"},"content":"//    }","lastModifiedDate":"2021-08-28"},{"lineNumber":278,"author":{"gitId":"limdanqi"},"content":"//","lastModifiedDate":"2021-08-28"},{"lineNumber":279,"author":{"gitId":"limdanqi"},"content":"//    private static int getTaskNumber (String message) throws duke.data.exceptions.InvalidInputException {","lastModifiedDate":"2021-08-28"},{"lineNumber":280,"author":{"gitId":"limdanqi"},"content":"//        String numberString \u003d \"\";","lastModifiedDate":"2021-08-28"},{"lineNumber":281,"author":{"gitId":"limdanqi"},"content":"//        for (int i \u003d 0; i \u003c message.length(); i++) {","lastModifiedDate":"2021-08-28"},{"lineNumber":282,"author":{"gitId":"limdanqi"},"content":"//            char currentChar \u003d message.charAt(i);","lastModifiedDate":"2021-08-28"},{"lineNumber":283,"author":{"gitId":"limdanqi"},"content":"//            if (!numberString.isEmpty() \u0026\u0026 Character.isWhitespace(currentChar)) {","lastModifiedDate":"2021-08-28"},{"lineNumber":284,"author":{"gitId":"limdanqi"},"content":"//                break; //task number string complete","lastModifiedDate":"2021-08-28"},{"lineNumber":285,"author":{"gitId":"limdanqi"},"content":"//            } else if (Character.isDigit(currentChar)) {","lastModifiedDate":"2021-08-28"},{"lineNumber":286,"author":{"gitId":"limdanqi"},"content":"//                numberString +\u003d message.charAt(i);","lastModifiedDate":"2021-08-28"},{"lineNumber":287,"author":{"gitId":"limdanqi"},"content":"//            } else {}","lastModifiedDate":"2021-08-28"},{"lineNumber":288,"author":{"gitId":"limdanqi"},"content":"//        }","lastModifiedDate":"2021-08-28"},{"lineNumber":289,"author":{"gitId":"limdanqi"},"content":"//","lastModifiedDate":"2021-08-28"},{"lineNumber":290,"author":{"gitId":"limdanqi"},"content":"//        int number;","lastModifiedDate":"2021-08-28"},{"lineNumber":291,"author":{"gitId":"limdanqi"},"content":"//        if (numberString.isEmpty()) {","lastModifiedDate":"2021-08-28"},{"lineNumber":292,"author":{"gitId":"limdanqi"},"content":"//            throw new duke.data.exceptions.InvalidInputException(\"invalid task number entered\");","lastModifiedDate":"2021-08-28"},{"lineNumber":293,"author":{"gitId":"limdanqi"},"content":"//        } else {","lastModifiedDate":"2021-08-28"},{"lineNumber":294,"author":{"gitId":"limdanqi"},"content":"//            number \u003d Integer.parseInt(numberString);","lastModifiedDate":"2021-08-28"},{"lineNumber":295,"author":{"gitId":"limdanqi"},"content":"//        }","lastModifiedDate":"2021-08-28"},{"lineNumber":296,"author":{"gitId":"limdanqi"},"content":"//        return number;","lastModifiedDate":"2021-08-28"},{"lineNumber":297,"author":{"gitId":"limdanqi"},"content":"//    }","lastModifiedDate":"2021-08-28"},{"lineNumber":298,"author":{"gitId":"limdanqi"},"content":"//","lastModifiedDate":"2021-08-28"},{"lineNumber":299,"author":{"gitId":"limdanqi"},"content":"//    private static void markTaskAsDone(String message, List\u003cduke.task.Task\u003e tasks) {","lastModifiedDate":"2021-08-28"},{"lineNumber":300,"author":{"gitId":"limdanqi"},"content":"//        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":301,"author":{"gitId":"limdanqi"},"content":"//            int taskPosition \u003d getTaskNumber(message) - 1;","lastModifiedDate":"2021-08-28"},{"lineNumber":302,"author":{"gitId":"limdanqi"},"content":"//            if (taskPosition \u003e\u003d tasks.size()) {","lastModifiedDate":"2021-08-28"},{"lineNumber":303,"author":{"gitId":"limdanqi"},"content":"//                throw new duke.data.exceptions.InvalidInputException(\"invalid task number entered\");","lastModifiedDate":"2021-08-28"},{"lineNumber":304,"author":{"gitId":"limdanqi"},"content":"//            } else {","lastModifiedDate":"2021-08-28"},{"lineNumber":305,"author":{"gitId":"limdanqi"},"content":"//                duke.task.Task taskMarked \u003d tasks.get(taskPosition);","lastModifiedDate":"2021-08-28"},{"lineNumber":306,"author":{"gitId":"limdanqi"},"content":"//                taskMarked.markAsDone();","lastModifiedDate":"2021-08-28"},{"lineNumber":307,"author":{"gitId":"limdanqi"},"content":"//","lastModifiedDate":"2021-08-28"},{"lineNumber":308,"author":{"gitId":"limdanqi"},"content":"//                //TODO make better","lastModifiedDate":"2021-08-28"},{"lineNumber":309,"author":{"gitId":"limdanqi"},"content":"//                duke.storage.Storage storage \u003d new duke.storage.Storage(tasks);","lastModifiedDate":"2021-08-28"},{"lineNumber":310,"author":{"gitId":"limdanqi"},"content":"//                storage.update(tasks);","lastModifiedDate":"2021-08-28"},{"lineNumber":311,"author":{"gitId":"limdanqi"},"content":"//","lastModifiedDate":"2021-08-28"},{"lineNumber":312,"author":{"gitId":"limdanqi"},"content":"//                String displayedMessage \u003d \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":313,"author":{"gitId":"limdanqi"},"content":"//                        + \"  \"","lastModifiedDate":"2021-08-28"},{"lineNumber":314,"author":{"gitId":"limdanqi"},"content":"//                        + taskMarked.toString();","lastModifiedDate":"2021-08-28"},{"lineNumber":315,"author":{"gitId":"limdanqi"},"content":"//                System.out.println(displayedMessage);","lastModifiedDate":"2021-08-28"},{"lineNumber":316,"author":{"gitId":"limdanqi"},"content":"//            }","lastModifiedDate":"2021-08-28"},{"lineNumber":317,"author":{"gitId":"limdanqi"},"content":"//        } catch (duke.data.DukeException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":318,"author":{"gitId":"limdanqi"},"content":"//            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-28"},{"lineNumber":319,"author":{"gitId":"limdanqi"},"content":"//        }","lastModifiedDate":"2021-08-28"},{"lineNumber":320,"author":{"gitId":"limdanqi"},"content":"//    }","lastModifiedDate":"2021-08-28"},{"lineNumber":321,"author":{"gitId":"limdanqi"},"content":"//","lastModifiedDate":"2021-08-28"},{"lineNumber":322,"author":{"gitId":"limdanqi"},"content":"//    private static void printTasks(List\u003cduke.task.Task\u003e tasks) {","lastModifiedDate":"2021-08-28"},{"lineNumber":323,"author":{"gitId":"limdanqi"},"content":"//        String message \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2021-08-28"},{"lineNumber":324,"author":{"gitId":"limdanqi"},"content":"//        System.out.println(message);","lastModifiedDate":"2021-08-28"},{"lineNumber":325,"author":{"gitId":"limdanqi"},"content":"//        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2021-08-28"},{"lineNumber":326,"author":{"gitId":"limdanqi"},"content":"//            duke.task.Task currentTask \u003d tasks.get(i - 1);","lastModifiedDate":"2021-08-28"},{"lineNumber":327,"author":{"gitId":"limdanqi"},"content":"//            String displayedTask \u003d i + \".\" + currentTask.toString();","lastModifiedDate":"2021-08-28"},{"lineNumber":328,"author":{"gitId":"limdanqi"},"content":"//            System.out.println(displayedTask);","lastModifiedDate":"2021-08-28"},{"lineNumber":329,"author":{"gitId":"limdanqi"},"content":"//        }","lastModifiedDate":"2021-08-28"},{"lineNumber":330,"author":{"gitId":"limdanqi"},"content":"//    }","lastModifiedDate":"2021-08-28"},{"lineNumber":331,"author":{"gitId":"limdanqi"},"content":"//","lastModifiedDate":"2021-08-28"},{"lineNumber":332,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":333,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":334,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":335,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":336,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":337,"author":{"gitId":"limdanqi"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"limdanqi":335,"-":2}},{"path":"src/main/java/duke/command/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limdanqi"},"content":"package duke.command;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"limdanqi"},"content":"import duke.data.exceptions.DukeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"limdanqi"},"content":"import duke.data.exceptions.InvalidInputException;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"limdanqi"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"limdanqi"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"limdanqi"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"limdanqi"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"limdanqi"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"limdanqi"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"limdanqi"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"limdanqi"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"limdanqi"},"content":"    private static final String TODO \u003d \"todo\";","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"limdanqi"},"content":"    private static final String DEADLINE \u003d \"deadline\";","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"limdanqi"},"content":"    private static final String EVENT \u003d \"event\";","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"limdanqi"},"content":"    private String taskType;","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"limdanqi"},"content":"    private String taskName;","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"limdanqi"},"content":"    private String dateAndTime;","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"limdanqi"},"content":"    public AddTaskCommand(String taskType, String taskName) {","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"limdanqi"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"limdanqi"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"limdanqi"},"content":"    public AddTaskCommand(String taskType, String taskName, String dateAndTime) {","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"limdanqi"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"limdanqi"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"limdanqi"},"content":"        this.dateAndTime \u003d dateAndTime;","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"limdanqi"},"content":"    private Task addTask(TaskList tasks) throws InvalidInputException {","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"limdanqi"},"content":"        switch (taskType) {","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"limdanqi"},"content":"        case TODO:","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"limdanqi"},"content":"            Todo todo \u003d new Todo(taskName);","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"limdanqi"},"content":"            tasks.addTask(todo);","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"limdanqi"},"content":"            return todo;","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"limdanqi"},"content":"        case DEADLINE:","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"limdanqi"},"content":"            Deadline deadline \u003d new Deadline(taskName, dateAndTime);","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"limdanqi"},"content":"            tasks.addTask(deadline);","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"limdanqi"},"content":"            return deadline;","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"limdanqi"},"content":"        case EVENT:","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"limdanqi"},"content":"            Event event \u003d new Event(taskName, dateAndTime);","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"limdanqi"},"content":"            tasks.addTask(event);","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"limdanqi"},"content":"            return event;","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"limdanqi"},"content":"        default:","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"limdanqi"},"content":"            throw new InvalidInputException(\"error\");","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"limdanqi"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"limdanqi"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"limdanqi"},"content":"        Task addedTask \u003d addTask(taskList);","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"limdanqi"},"content":"        storage.update(taskList);","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"limdanqi"},"content":"        ui.showAddTaskMessage(addedTask, taskList);","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"limdanqi"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"limdanqi":59}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limdanqi"},"content":"package duke.command;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"limdanqi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"limdanqi"},"content":"import java.util.List;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"limdanqi"},"content":"import duke.data.exceptions.DukeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"limdanqi"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"limdanqi"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"limdanqi"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"limdanqi"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"limdanqi"},"content":"    private static List\u003cString\u003e commandTypes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"limdanqi"},"content":"    private boolean isExit \u003d false;","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"limdanqi"},"content":"    public Command() {}","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"limdanqi"},"content":"    public abstract void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"limdanqi"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"limdanqi"},"content":"        return this.isExit;","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"limdanqi"},"content":"    public void setExit() {","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"limdanqi"},"content":"        this.isExit \u003d true;","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"limdanqi"},"content":"    private static void setDefaultTypes() {","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"limdanqi"},"content":"        commandTypes.add(\"todo\");","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"limdanqi"},"content":"        commandTypes.add(\"deadline\");","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"limdanqi"},"content":"        commandTypes.add(\"event\");","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"limdanqi"},"content":"        commandTypes.add(\"bye\");","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"limdanqi"},"content":"        commandTypes.add(\"list\");","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"limdanqi"},"content":"        commandTypes.add(\"done\");","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"limdanqi"},"content":"        commandTypes.add(\"delete\");","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"limdanqi"},"content":"    public static List\u003cString\u003e getCommandTypes() {","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"limdanqi"},"content":"        if (commandTypes.isEmpty()) {","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"limdanqi"},"content":"            setDefaultTypes();","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"limdanqi"},"content":"        return commandTypes;","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"limdanqi"},"content":"    //todo command already present","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"limdanqi"},"content":"    public static void addCommandType(String commandType) {","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"limdanqi"},"content":"        if (commandTypes.isEmpty()) {","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"limdanqi"},"content":"            setDefaultTypes();","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"limdanqi"},"content":"        commandTypes.add(commandType);","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"limdanqi"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"limdanqi":51}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limdanqi"},"content":"package duke.command;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"limdanqi"},"content":"import duke.data.exceptions.DukeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"limdanqi"},"content":"import duke.data.exceptions.InvalidInputException;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"limdanqi"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"limdanqi"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"limdanqi"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"limdanqi"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"limdanqi"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"limdanqi"},"content":"    private int taskNumber;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"limdanqi"},"content":"    public DeleteCommand(int taskNumber) {","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"limdanqi"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"limdanqi"},"content":"    private Task deleteTask(TaskList tasks) throws InvalidInputException {","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"limdanqi"},"content":"        int taskPosition \u003d taskNumber - 1;","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"limdanqi"},"content":"        if (taskPosition \u003e\u003d tasks.size()) {","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"limdanqi"},"content":"            throw new InvalidInputException(\"invalid task number entered\");","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"limdanqi"},"content":"        } else {","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"limdanqi"},"content":"            Task removedTask \u003d tasks.getTask(taskPosition);","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"limdanqi"},"content":"            tasks.removeTask(taskPosition);","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"limdanqi"},"content":"            return removedTask;","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"limdanqi"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"limdanqi"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"limdanqi"},"content":"        Task removedTask \u003d deleteTask(taskList);","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"limdanqi"},"content":"        storage.update(taskList);","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"limdanqi"},"content":"        ui.showDeleteTask(removedTask, taskList);","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"limdanqi"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"limdanqi":34}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limdanqi"},"content":"package duke.command;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"limdanqi"},"content":"import duke.data.exceptions.DukeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"limdanqi"},"content":"import duke.data.exceptions.InvalidInputException;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"limdanqi"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"limdanqi"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"limdanqi"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"limdanqi"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"limdanqi"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"limdanqi"},"content":"    private int taskNumber;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"limdanqi"},"content":"    public DoneCommand(int taskNumber) {","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"limdanqi"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"limdanqi"},"content":"    private Task markTaskAsDone(TaskList tasks) throws InvalidInputException {","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"limdanqi"},"content":"        int taskPosition \u003d taskNumber - 1;","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"limdanqi"},"content":"        if (taskPosition \u003e\u003d tasks.size()) {","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"limdanqi"},"content":"            throw new InvalidInputException(\"invalid task number entered\");","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"limdanqi"},"content":"        } else {","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"limdanqi"},"content":"            Task taskMarked \u003d tasks.getTask(taskPosition);","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"limdanqi"},"content":"            taskMarked.markAsDone();","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"limdanqi"},"content":"            return taskMarked;","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"limdanqi"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"limdanqi"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"limdanqi"},"content":"        Task markedTask \u003d markTaskAsDone(taskList);","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"limdanqi"},"content":"        storage.update(taskList);","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"limdanqi"},"content":"        ui.showMarkTaskMessage(markedTask);","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"limdanqi"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"limdanqi":34}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limdanqi"},"content":"package duke.command;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"limdanqi"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"limdanqi"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"limdanqi"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"limdanqi"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"limdanqi"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"limdanqi"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"limdanqi"},"content":"        ui.showExit();","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"limdanqi"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"limdanqi":12}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limdanqi"},"content":"package duke.command;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"limdanqi"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"limdanqi"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"limdanqi"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"limdanqi"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"limdanqi"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"limdanqi"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"limdanqi"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"limdanqi"},"content":"        printTasks(taskList);","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"limdanqi"},"content":"    private void printTasks(TaskList tasks) {","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"limdanqi"},"content":"        String message \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"limdanqi"},"content":"        System.out.println(message);","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"limdanqi"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"limdanqi"},"content":"            String emptyTaskList \u003d \"  \" + \"There are currently no tasks yet!\";","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"limdanqi"},"content":"            System.out.println(emptyTaskList);","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"limdanqi"},"content":"        } else {","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"limdanqi"},"content":"            for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"limdanqi"},"content":"                Task currentTask \u003d tasks.getTask(i - 1);","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"limdanqi"},"content":"                String displayedTask \u003d i + \".\" + currentTask.toString();","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"limdanqi"},"content":"                System.out.println(displayedTask);","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"limdanqi"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"limdanqi"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"limdanqi":28}},{"path":"src/main/java/duke/data/DateAndTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limdanqi"},"content":"package duke.data;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"limdanqi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"limdanqi"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"limdanqi"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"limdanqi"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"limdanqi"},"content":"import duke.data.exceptions.InvalidDateAndTimeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"limdanqi"},"content":"//todo exception for range of values for mth, day, year, hr, min","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"limdanqi"},"content":"//should have /by or /at alr when initialising this class","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"limdanqi"},"content":"public class DateAndTime {","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"limdanqi"},"content":"    private String dateAndTimeFromCommand;","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"limdanqi"},"content":"    private boolean isDatePresent \u003d false;","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"limdanqi"},"content":"    private boolean isTimePresent \u003d false;","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"limdanqi"},"content":"    public DateAndTime(String dateAndTimeFromCommand) {","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"limdanqi"},"content":"        this.dateAndTimeFromCommand \u003d dateAndTimeFromCommand;","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"limdanqi"},"content":"    public String getReformattedDateAndTime() throws InvalidDateAndTimeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"limdanqi"},"content":"        if (isDateAndTimeValid()) {","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"limdanqi"},"content":"            if (isDatePresent \u0026\u0026 isTimePresent) {","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"limdanqi"},"content":"                String parseFormat \u003d getDate() + \"T\" + getTime();","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"limdanqi"},"content":"                LocalDateTime localDateTime \u003d LocalDateTime.parse(parseFormat);","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"limdanqi"},"content":"                return localDateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy, HH:mm\"));","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"limdanqi"},"content":"            } else if (isDatePresent) {","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"limdanqi"},"content":"                String parseFormat \u003d getDate();","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"limdanqi"},"content":"                LocalDate localDate \u003d LocalDate.parse(parseFormat);","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"limdanqi"},"content":"                return localDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"limdanqi"},"content":"            } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"limdanqi"},"content":"                String parseFormat \u003d getTime();","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"limdanqi"},"content":"                LocalTime localTime \u003d LocalTime.parse(parseFormat);","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"limdanqi"},"content":"                return localTime.format(DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"limdanqi"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"limdanqi"},"content":"        } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"limdanqi"},"content":"            throw new InvalidDateAndTimeException(\"invalid date and time\");","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"limdanqi"},"content":"    public boolean isDateAndTimeValid() {","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"limdanqi"},"content":"        int colonIndex \u003d dateAndTimeFromCommand.indexOf(\":\");","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"limdanqi"},"content":"        int lastSlashIndex \u003d dateAndTimeFromCommand.lastIndexOf(\"/\");","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"limdanqi"},"content":"        int firstSlashIndex \u003d dateAndTimeFromCommand.indexOf(\"/\");","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"limdanqi"},"content":"        if ((colonIndex \u003c 0) \u0026\u0026 (firstSlashIndex \u003d\u003d lastSlashIndex)) {","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"limdanqi"},"content":"            return false;","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"limdanqi"},"content":"        } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"limdanqi"},"content":"            if (colonIndex \u003e 0) {","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"limdanqi"},"content":"                this.isTimePresent \u003d true;","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"limdanqi"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"limdanqi"},"content":"            if (firstSlashIndex !\u003d lastSlashIndex) {","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"limdanqi"},"content":"                this.isDatePresent \u003d true;  //todo when deadline provided has no dashes eg /at 11 11:00","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"limdanqi"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"limdanqi"},"content":"            return true;","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"limdanqi"},"content":"    public String getTime() throws InvalidDateAndTimeException { //format of hh:mm","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"limdanqi"},"content":"        int colonIndex \u003d dateAndTimeFromCommand.indexOf(\":\");","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":64,"author":{"gitId":"limdanqi"},"content":"        if (((dateAndTimeFromCommand.length() - (colonIndex + 2)) !\u003d 1) || (colonIndex - 3) \u003c 0) {","lastModifiedDate":"2021-08-27"},{"lineNumber":65,"author":{"gitId":"limdanqi"},"content":"            throw new InvalidDateAndTimeException(\"invalid time\");","lastModifiedDate":"2021-08-27"},{"lineNumber":66,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":67,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":68,"author":{"gitId":"limdanqi"},"content":"        boolean isHourTensValid \u003d Character.isDigit(dateAndTimeFromCommand.charAt(colonIndex - 2));","lastModifiedDate":"2021-08-27"},{"lineNumber":69,"author":{"gitId":"limdanqi"},"content":"        boolean isHourOnesValid \u003d Character.isDigit(dateAndTimeFromCommand.charAt(colonIndex - 1));","lastModifiedDate":"2021-08-27"},{"lineNumber":70,"author":{"gitId":"limdanqi"},"content":"        boolean isMinTensValid \u003d Character.isDigit(dateAndTimeFromCommand.charAt(colonIndex + 1));","lastModifiedDate":"2021-08-27"},{"lineNumber":71,"author":{"gitId":"limdanqi"},"content":"        boolean isMinOnesValid \u003d Character.isDigit(dateAndTimeFromCommand.charAt(colonIndex + 2));","lastModifiedDate":"2021-08-27"},{"lineNumber":72,"author":{"gitId":"limdanqi"},"content":"        boolean isTimeLengthValid \u003d Character.isWhitespace(dateAndTimeFromCommand.charAt(colonIndex - 3)) \u0026\u0026","lastModifiedDate":"2021-08-27"},{"lineNumber":73,"author":{"gitId":"limdanqi"},"content":"                dateAndTimeFromCommand.length() \u003d\u003d (colonIndex + 3);","lastModifiedDate":"2021-08-27"},{"lineNumber":74,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":75,"author":{"gitId":"limdanqi"},"content":"        if (!isTimeLengthValid| !isHourTensValid | !isHourOnesValid | !isMinTensValid | !isMinOnesValid) {","lastModifiedDate":"2021-08-27"},{"lineNumber":76,"author":{"gitId":"limdanqi"},"content":"            throw new InvalidDateAndTimeException(\"invalid time\");","lastModifiedDate":"2021-08-27"},{"lineNumber":77,"author":{"gitId":"limdanqi"},"content":"        } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":78,"author":{"gitId":"limdanqi"},"content":"            return dateAndTimeFromCommand.substring(colonIndex - 2, colonIndex + 3) + \":00\";","lastModifiedDate":"2021-08-27"},{"lineNumber":79,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":80,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":81,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":82,"author":{"gitId":"limdanqi"},"content":"    //todo invalid date error has random dot printed?","lastModifiedDate":"2021-08-27"},{"lineNumber":83,"author":{"gitId":"limdanqi"},"content":"    public String getDate() throws InvalidDateAndTimeException { //format of dd/mm/yyyy","lastModifiedDate":"2021-08-27"},{"lineNumber":84,"author":{"gitId":"limdanqi"},"content":"        int lastSlashIndex \u003d dateAndTimeFromCommand.lastIndexOf(\"/\");","lastModifiedDate":"2021-08-27"},{"lineNumber":85,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":86,"author":{"gitId":"limdanqi"},"content":"        if (((lastSlashIndex + 5) \u003e dateAndTimeFromCommand.length()) || (lastSlashIndex - 6) \u003c 0) {","lastModifiedDate":"2021-08-27"},{"lineNumber":87,"author":{"gitId":"limdanqi"},"content":"            throw new InvalidDateAndTimeException(\"invalid date\");","lastModifiedDate":"2021-08-27"},{"lineNumber":88,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":89,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":90,"author":{"gitId":"limdanqi"},"content":"        boolean isDateLengthValid \u003d Character.isWhitespace(dateAndTimeFromCommand.charAt(lastSlashIndex - 6)) \u0026\u0026","lastModifiedDate":"2021-08-27"},{"lineNumber":91,"author":{"gitId":"limdanqi"},"content":"                (dateAndTimeFromCommand.length() \u003d\u003d (lastSlashIndex + 5) ||","lastModifiedDate":"2021-08-27"},{"lineNumber":92,"author":{"gitId":"limdanqi"},"content":"                        Character.isWhitespace(dateAndTimeFromCommand.charAt(lastSlashIndex + 5)));","lastModifiedDate":"2021-08-27"},{"lineNumber":93,"author":{"gitId":"limdanqi"},"content":"        boolean isDayValid \u003d checkDate(lastSlashIndex - 5, 2);","lastModifiedDate":"2021-08-27"},{"lineNumber":94,"author":{"gitId":"limdanqi"},"content":"        boolean isMonthValid \u003d checkDate(lastSlashIndex - 2, 2);","lastModifiedDate":"2021-08-27"},{"lineNumber":95,"author":{"gitId":"limdanqi"},"content":"        boolean isYearValid \u003d checkDate(lastSlashIndex + 1, 4);","lastModifiedDate":"2021-08-27"},{"lineNumber":96,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":97,"author":{"gitId":"limdanqi"},"content":"        if (!isDateLengthValid | !isDayValid | !isMonthValid | !isYearValid) {","lastModifiedDate":"2021-08-27"},{"lineNumber":98,"author":{"gitId":"limdanqi"},"content":"            throw new InvalidDateAndTimeException(\"invalid date\");","lastModifiedDate":"2021-08-27"},{"lineNumber":99,"author":{"gitId":"limdanqi"},"content":"        } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":100,"author":{"gitId":"limdanqi"},"content":"            return dateAndTimeFromCommand.substring(lastSlashIndex + 1, lastSlashIndex + 5) + \"-\"","lastModifiedDate":"2021-08-27"},{"lineNumber":101,"author":{"gitId":"limdanqi"},"content":"                    + dateAndTimeFromCommand.substring(lastSlashIndex - 2, lastSlashIndex) + \"-\"","lastModifiedDate":"2021-08-27"},{"lineNumber":102,"author":{"gitId":"limdanqi"},"content":"                    + dateAndTimeFromCommand.substring(lastSlashIndex - 5, lastSlashIndex - 3);","lastModifiedDate":"2021-08-27"},{"lineNumber":103,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":104,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":105,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":106,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":107,"author":{"gitId":"limdanqi"},"content":"    public boolean checkDate(int index, int formatLength) {","lastModifiedDate":"2021-08-27"},{"lineNumber":108,"author":{"gitId":"limdanqi"},"content":"        boolean result \u003d true;","lastModifiedDate":"2021-08-27"},{"lineNumber":109,"author":{"gitId":"limdanqi"},"content":"        for (int i \u003d 0; i \u003c formatLength; i++) {","lastModifiedDate":"2021-08-27"},{"lineNumber":110,"author":{"gitId":"limdanqi"},"content":"            result \u003d result \u0026\u0026 Character.isDigit(dateAndTimeFromCommand.charAt(index + i));","lastModifiedDate":"2021-08-27"},{"lineNumber":111,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":112,"author":{"gitId":"limdanqi"},"content":"        return result;","lastModifiedDate":"2021-08-27"},{"lineNumber":113,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":114,"author":{"gitId":"limdanqi"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"limdanqi":114}},{"path":"src/main/java/duke/data/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limdanqi"},"content":"package duke.data.exceptions;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"limdanqi"},"content":"public abstract class DukeException extends Exception {","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"limdanqi"},"content":"    public DukeException (String errorMessage) {","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"limdanqi"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"limdanqi"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"limdanqi":7}},{"path":"src/main/java/duke/data/exceptions/EmptyTaskDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limdanqi"},"content":"package duke.data.exceptions;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"limdanqi"},"content":"public class EmptyTaskDescriptionException extends DukeException {","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"limdanqi"},"content":"    private String taskType;","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"limdanqi"},"content":"    public EmptyTaskDescriptionException(String errorMessage, String taskType) {","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"limdanqi"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"limdanqi"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"limdanqi"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"limdanqi"},"content":"    public String getMessage() {","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"limdanqi"},"content":"        switch (taskType) {","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"limdanqi"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"limdanqi"},"content":"            return \"☹ OOPS!!! The description of a todo cannot be empty.\";","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"limdanqi"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"limdanqi"},"content":"            return \"☹ OOPS!!! The description of a deadline cannot be empty.\";","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"limdanqi"},"content":"        case \"event\":","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"limdanqi"},"content":"            return \"☹ OOPS!!! The description of a event cannot be empty.\";","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"limdanqi"},"content":"        default:","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"limdanqi"},"content":"            return \"Error: duke.data.exceptions.EmptyTaskDescriptionException\";","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"limdanqi"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"limdanqi":24}},{"path":"src/main/java/duke/data/exceptions/InvalidDateAndTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limdanqi"},"content":"package duke.data.exceptions;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"limdanqi"},"content":"public class InvalidDateAndTimeException extends DukeException {","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"limdanqi"},"content":"    private static final String MISSING_DEADLINE \u003d \"missing deadline\";","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"limdanqi"},"content":"    private static final String MISSING_EVENT_TIME \u003d \"missing event time\";","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"limdanqi"},"content":"    private static final String INVALID_DATE \u003d \"invalid date\";","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"limdanqi"},"content":"    private static final String INVALID_TIME \u003d \"invalid time\";","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"limdanqi"},"content":"    private static final String INVALID_DATE_AND_TIME \u003d \"invalid date and time\";","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"limdanqi"},"content":"    private String errorType;","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"limdanqi"},"content":"    public InvalidDateAndTimeException(String errorMessage) {","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"limdanqi"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"limdanqi"},"content":"        this.errorType \u003d errorMessage;","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"limdanqi"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"limdanqi"},"content":"    public String getMessage() {","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"limdanqi"},"content":"        switch (errorType) {","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"limdanqi"},"content":"        case MISSING_DEADLINE:","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"limdanqi"},"content":"            return \"☹ OOPS!!! Please provide a deadline with /by.\";","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"limdanqi"},"content":"        case MISSING_EVENT_TIME:","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"limdanqi"},"content":"            return \"☹ OOPS!!! Please provide a event time with /at.\";","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"limdanqi"},"content":"        case INVALID_DATE:","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"limdanqi"},"content":"            return \"☹ OOPS!!! Please provide a valid date in the format dd/mm/yyyy.\";","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"limdanqi"},"content":"        case INVALID_TIME:","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"limdanqi"},"content":"            return \"☹ OOPS!!! Please provide a valid time in the format hh:mm.\";","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"limdanqi"},"content":"        case INVALID_DATE_AND_TIME:","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"limdanqi"},"content":"            return \"☹ OOPS!!! Please provide a valid date and time in the format dd/mm/yyyy hh:mm.\";","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"limdanqi"},"content":"        default:","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"limdanqi"},"content":"            return \"Error: duke.data.exceptions.InvalidDateAndTimeException\";","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"limdanqi"},"content":"    //todo message for date or time being optional?","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"limdanqi"},"content":"}","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"limdanqi":37}},{"path":"src/main/java/duke/data/exceptions/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limdanqi"},"content":"package duke.data.exceptions;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"limdanqi"},"content":"public class InvalidInputException extends DukeException {","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"limdanqi"},"content":"    private String errorMessage;","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"limdanqi"},"content":"    public InvalidInputException(String errorMessage) {","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"limdanqi"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"limdanqi"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"limdanqi"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"limdanqi"},"content":"    public String getMessage() {","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"limdanqi"},"content":"        if (errorMessage.equals(\"invalid task number entered\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"limdanqi"},"content":"            return \"☹ OOPS!!! Please key in a valid task number within the list.\";","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"limdanqi"},"content":"        } else if (errorMessage.equals(\"error\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"limdanqi"},"content":"            return \"☹ OOPS!!! Error occurred.\";","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"limdanqi"},"content":"        } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"limdanqi"},"content":"            return \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"limdanqi"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"limdanqi":21}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limdanqi"},"content":"package duke.parser;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"limdanqi"},"content":"import java.util.List;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"limdanqi"},"content":"import duke.command.AddTaskCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"limdanqi"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"limdanqi"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"limdanqi"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"limdanqi"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"limdanqi"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"limdanqi"},"content":"import duke.data.DateAndTime;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"limdanqi"},"content":"import duke.data.exceptions.DukeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"limdanqi"},"content":"import duke.data.exceptions.EmptyTaskDescriptionException;","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"limdanqi"},"content":"import duke.data.exceptions.InvalidDateAndTimeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"limdanqi"},"content":"import duke.data.exceptions.InvalidInputException;","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"limdanqi"},"content":"public class Parser {","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"limdanqi"},"content":"    private static final String TODO \u003d \"todo\";","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"limdanqi"},"content":"    private static final String DEADLINE \u003d \"deadline\";","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"limdanqi"},"content":"    private static final String EVENT \u003d \"event\";","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"limdanqi"},"content":"    private static final String EXIT \u003d \"bye\";","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"limdanqi"},"content":"    private static final String LIST \u003d \"list\";","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"limdanqi"},"content":"    private static final String DONE \u003d \"done\";","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"limdanqi"},"content":"    private static final String DELETE \u003d \"delete\";","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"limdanqi"},"content":"    public Parser() {}","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"limdanqi"},"content":"    public Command parse(String command) throws DukeException {","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"limdanqi"},"content":"        String commandType \u003d checkCommandType(command);","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"limdanqi"},"content":"        //hardcode cases change?","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"limdanqi"},"content":"        switch (commandType) {","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"limdanqi"},"content":"        case TODO:","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"limdanqi"},"content":"            String todoName \u003d getTaskName(command, commandType);","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"limdanqi"},"content":"            return new AddTaskCommand(TODO, todoName);","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"limdanqi"},"content":"        case DEADLINE:","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"limdanqi"},"content":"            String deadlineName \u003d getTaskName(command, commandType);","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"limdanqi"},"content":"            String deadline \u003d getDateAndTime(command, DEADLINE);","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"limdanqi"},"content":"            return new AddTaskCommand(DEADLINE, deadlineName, deadline);","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"limdanqi"},"content":"        case EVENT:","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"limdanqi"},"content":"            String eventName \u003d getTaskName(command, commandType);","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"limdanqi"},"content":"            String eventTime \u003d getDateAndTime(command, EVENT);","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"limdanqi"},"content":"            return new AddTaskCommand(EVENT, eventName, eventTime);","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"limdanqi"},"content":"        case EXIT:","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"limdanqi"},"content":"            if (!command.equals(EXIT)) {","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"limdanqi"},"content":"                throw new InvalidInputException(\"invalid input\");","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"limdanqi"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"limdanqi"},"content":"            Command exitCommand \u003d new ExitCommand();","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"limdanqi"},"content":"            exitCommand.setExit();","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"limdanqi"},"content":"            return exitCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"limdanqi"},"content":"        case LIST:","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"limdanqi"},"content":"            if (!command.equals(LIST)) {","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"limdanqi"},"content":"                throw new InvalidInputException(\"invalid input\");","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"limdanqi"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"limdanqi"},"content":"            return new ListCommand();","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"limdanqi"},"content":"        case DONE:","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"limdanqi"},"content":"            if (command.equals(DONE)) {","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"limdanqi"},"content":"                throw new InvalidInputException(\"invalid task number entered\");","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"limdanqi"},"content":"            } else {","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"limdanqi"},"content":"                if (!Character.isWhitespace(command.charAt(DONE.length()))) {","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"limdanqi"},"content":"                    throw new InvalidInputException(\"invalid input\");","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"limdanqi"},"content":"                } else {","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"limdanqi"},"content":"                    int taskNumber \u003d getTaskNumber(command);","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"limdanqi"},"content":"                    return new DoneCommand(taskNumber);","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"limdanqi"},"content":"                }","lastModifiedDate":"2021-08-28"},{"lineNumber":66,"author":{"gitId":"limdanqi"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":67,"author":{"gitId":"limdanqi"},"content":"        case DELETE:","lastModifiedDate":"2021-08-28"},{"lineNumber":68,"author":{"gitId":"limdanqi"},"content":"            if (command.equals(DELETE)) {","lastModifiedDate":"2021-08-28"},{"lineNumber":69,"author":{"gitId":"limdanqi"},"content":"                throw new InvalidInputException(\"invalid task number entered\");","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"limdanqi"},"content":"            } else {","lastModifiedDate":"2021-08-28"},{"lineNumber":71,"author":{"gitId":"limdanqi"},"content":"                if (!Character.isWhitespace(command.charAt(DELETE.length()))) {","lastModifiedDate":"2021-08-28"},{"lineNumber":72,"author":{"gitId":"limdanqi"},"content":"                    throw new InvalidInputException(\"invalid input\");","lastModifiedDate":"2021-08-28"},{"lineNumber":73,"author":{"gitId":"limdanqi"},"content":"                } else {","lastModifiedDate":"2021-08-28"},{"lineNumber":74,"author":{"gitId":"limdanqi"},"content":"                    int taskNumber \u003d getTaskNumber(command);","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"limdanqi"},"content":"                    return new DeleteCommand(taskNumber);","lastModifiedDate":"2021-08-28"},{"lineNumber":76,"author":{"gitId":"limdanqi"},"content":"                }","lastModifiedDate":"2021-08-28"},{"lineNumber":77,"author":{"gitId":"limdanqi"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":78,"author":{"gitId":"limdanqi"},"content":"        default:","lastModifiedDate":"2021-08-28"},{"lineNumber":79,"author":{"gitId":"limdanqi"},"content":"            throw new InvalidInputException(\"invalid input\");","lastModifiedDate":"2021-08-28"},{"lineNumber":80,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":81,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":82,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":83,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":84,"author":{"gitId":"limdanqi"},"content":"    private String getTaskName(String command, String commandType) throws InvalidInputException, EmptyTaskDescriptionException {","lastModifiedDate":"2021-08-28"},{"lineNumber":85,"author":{"gitId":"limdanqi"},"content":"        if (commandType.equals(TODO)) {","lastModifiedDate":"2021-08-28"},{"lineNumber":86,"author":{"gitId":"limdanqi"},"content":"            if (command.equals(TODO)) {","lastModifiedDate":"2021-08-28"},{"lineNumber":87,"author":{"gitId":"limdanqi"},"content":"                throw new EmptyTaskDescriptionException(\"Empty duke.task.Todo Description\", TODO);","lastModifiedDate":"2021-08-28"},{"lineNumber":88,"author":{"gitId":"limdanqi"},"content":"            } else {","lastModifiedDate":"2021-08-28"},{"lineNumber":89,"author":{"gitId":"limdanqi"},"content":"                if (!Character.isWhitespace(command.charAt(TODO.length()))) {","lastModifiedDate":"2021-08-28"},{"lineNumber":90,"author":{"gitId":"limdanqi"},"content":"                    throw new InvalidInputException(\"invalid input\");","lastModifiedDate":"2021-08-28"},{"lineNumber":91,"author":{"gitId":"limdanqi"},"content":"                } else {","lastModifiedDate":"2021-08-28"},{"lineNumber":92,"author":{"gitId":"limdanqi"},"content":"                    String taskName \u003d command.substring(TODO.length() + 1);","lastModifiedDate":"2021-08-28"},{"lineNumber":93,"author":{"gitId":"limdanqi"},"content":"                    return taskName;","lastModifiedDate":"2021-08-28"},{"lineNumber":94,"author":{"gitId":"limdanqi"},"content":"                }","lastModifiedDate":"2021-08-28"},{"lineNumber":95,"author":{"gitId":"limdanqi"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":96,"author":{"gitId":"limdanqi"},"content":"        } else {","lastModifiedDate":"2021-08-28"},{"lineNumber":97,"author":{"gitId":"limdanqi"},"content":"            if (command.equals(DEADLINE)) {","lastModifiedDate":"2021-08-28"},{"lineNumber":98,"author":{"gitId":"limdanqi"},"content":"                throw new EmptyTaskDescriptionException(\"Empty duke.task.Deadline Description\", DEADLINE);","lastModifiedDate":"2021-08-28"},{"lineNumber":99,"author":{"gitId":"limdanqi"},"content":"            } else {","lastModifiedDate":"2021-08-28"},{"lineNumber":100,"author":{"gitId":"limdanqi"},"content":"                int startingIndex \u003d command.indexOf(\" \");","lastModifiedDate":"2021-08-28"},{"lineNumber":101,"author":{"gitId":"limdanqi"},"content":"                int endingIndex \u003d command.indexOf(\"/\");","lastModifiedDate":"2021-08-28"},{"lineNumber":102,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":103,"author":{"gitId":"limdanqi"},"content":"                if (!Character.isWhitespace(command.charAt(commandType.length())) || endingIndex \u003c 0 ) {","lastModifiedDate":"2021-08-28"},{"lineNumber":104,"author":{"gitId":"limdanqi"},"content":"                    throw new InvalidInputException(\"invalid input\");","lastModifiedDate":"2021-08-28"},{"lineNumber":105,"author":{"gitId":"limdanqi"},"content":"                }","lastModifiedDate":"2021-08-28"},{"lineNumber":106,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":107,"author":{"gitId":"limdanqi"},"content":"                //todo deadline return book being invalid input rather than invalid date.","lastModifiedDate":"2021-08-28"},{"lineNumber":108,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":109,"author":{"gitId":"limdanqi"},"content":"                String taskName \u003d command.substring(startingIndex + 1, endingIndex - 1);","lastModifiedDate":"2021-08-28"},{"lineNumber":110,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":111,"author":{"gitId":"limdanqi"},"content":"                if (taskName.isEmpty()) {","lastModifiedDate":"2021-08-28"},{"lineNumber":112,"author":{"gitId":"limdanqi"},"content":"                    throw new EmptyTaskDescriptionException(\"empty task name\", commandType);","lastModifiedDate":"2021-08-28"},{"lineNumber":113,"author":{"gitId":"limdanqi"},"content":"                }","lastModifiedDate":"2021-08-28"},{"lineNumber":114,"author":{"gitId":"limdanqi"},"content":"                return taskName;","lastModifiedDate":"2021-08-28"},{"lineNumber":115,"author":{"gitId":"limdanqi"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":116,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":117,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":118,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":119,"author":{"gitId":"limdanqi"},"content":"    private String getDateAndTime(String message, String taskType) throws InvalidDateAndTimeException, InvalidInputException {","lastModifiedDate":"2021-08-28"},{"lineNumber":120,"author":{"gitId":"limdanqi"},"content":"        int startingIndex;","lastModifiedDate":"2021-08-28"},{"lineNumber":121,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":122,"author":{"gitId":"limdanqi"},"content":"        switch (taskType) {","lastModifiedDate":"2021-08-28"},{"lineNumber":123,"author":{"gitId":"limdanqi"},"content":"        case DEADLINE:","lastModifiedDate":"2021-08-28"},{"lineNumber":124,"author":{"gitId":"limdanqi"},"content":"            startingIndex \u003d message.indexOf(\"/by \");","lastModifiedDate":"2021-08-28"},{"lineNumber":125,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":126,"author":{"gitId":"limdanqi"},"content":"            if (startingIndex \u003c 0 || startingIndex + 3 \u003d\u003d message.length() - 1) {","lastModifiedDate":"2021-08-28"},{"lineNumber":127,"author":{"gitId":"limdanqi"},"content":"                throw new InvalidDateAndTimeException(\"missing deadline\");","lastModifiedDate":"2021-08-28"},{"lineNumber":128,"author":{"gitId":"limdanqi"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":129,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":130,"author":{"gitId":"limdanqi"},"content":"            DateAndTime dateAndTime1 \u003d new DateAndTime(message);","lastModifiedDate":"2021-08-28"},{"lineNumber":131,"author":{"gitId":"limdanqi"},"content":"            return dateAndTime1.getReformattedDateAndTime();","lastModifiedDate":"2021-08-28"},{"lineNumber":132,"author":{"gitId":"limdanqi"},"content":"        case EVENT:","lastModifiedDate":"2021-08-28"},{"lineNumber":133,"author":{"gitId":"limdanqi"},"content":"            startingIndex \u003d message.indexOf(\"/at \");","lastModifiedDate":"2021-08-28"},{"lineNumber":134,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":135,"author":{"gitId":"limdanqi"},"content":"            if (startingIndex \u003c 0 || startingIndex + 3 \u003d\u003d message.length() - 1) {","lastModifiedDate":"2021-08-28"},{"lineNumber":136,"author":{"gitId":"limdanqi"},"content":"                throw new InvalidDateAndTimeException(\"missing event time\");","lastModifiedDate":"2021-08-28"},{"lineNumber":137,"author":{"gitId":"limdanqi"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":138,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":139,"author":{"gitId":"limdanqi"},"content":"            DateAndTime dateAndTime2 \u003d new DateAndTime(message);","lastModifiedDate":"2021-08-28"},{"lineNumber":140,"author":{"gitId":"limdanqi"},"content":"            return dateAndTime2.getReformattedDateAndTime();","lastModifiedDate":"2021-08-28"},{"lineNumber":141,"author":{"gitId":"limdanqi"},"content":"        default:","lastModifiedDate":"2021-08-28"},{"lineNumber":142,"author":{"gitId":"limdanqi"},"content":"            throw new InvalidDateAndTimeException(\"invalid date and time\");","lastModifiedDate":"2021-08-28"},{"lineNumber":143,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":144,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":145,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":146,"author":{"gitId":"limdanqi"},"content":"    private static int getTaskNumber (String message) throws InvalidInputException {","lastModifiedDate":"2021-08-28"},{"lineNumber":147,"author":{"gitId":"limdanqi"},"content":"        String numberString \u003d \"\";","lastModifiedDate":"2021-08-28"},{"lineNumber":148,"author":{"gitId":"limdanqi"},"content":"        for (int i \u003d 0; i \u003c message.length(); i++) {","lastModifiedDate":"2021-08-28"},{"lineNumber":149,"author":{"gitId":"limdanqi"},"content":"            char currentChar \u003d message.charAt(i);","lastModifiedDate":"2021-08-28"},{"lineNumber":150,"author":{"gitId":"limdanqi"},"content":"            if (!numberString.isEmpty() \u0026\u0026 Character.isWhitespace(currentChar)) {","lastModifiedDate":"2021-08-28"},{"lineNumber":151,"author":{"gitId":"limdanqi"},"content":"                break; //task number string complete","lastModifiedDate":"2021-08-28"},{"lineNumber":152,"author":{"gitId":"limdanqi"},"content":"            } else if (Character.isDigit(currentChar)) {","lastModifiedDate":"2021-08-28"},{"lineNumber":153,"author":{"gitId":"limdanqi"},"content":"                numberString +\u003d message.charAt(i);","lastModifiedDate":"2021-08-28"},{"lineNumber":154,"author":{"gitId":"limdanqi"},"content":"            } else {}","lastModifiedDate":"2021-08-28"},{"lineNumber":155,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":156,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":157,"author":{"gitId":"limdanqi"},"content":"        int number;","lastModifiedDate":"2021-08-28"},{"lineNumber":158,"author":{"gitId":"limdanqi"},"content":"        if (numberString.isEmpty()) {","lastModifiedDate":"2021-08-28"},{"lineNumber":159,"author":{"gitId":"limdanqi"},"content":"            throw new InvalidInputException(\"invalid task number entered\");","lastModifiedDate":"2021-08-28"},{"lineNumber":160,"author":{"gitId":"limdanqi"},"content":"        } else {","lastModifiedDate":"2021-08-28"},{"lineNumber":161,"author":{"gitId":"limdanqi"},"content":"            number \u003d Integer.parseInt(numberString);","lastModifiedDate":"2021-08-28"},{"lineNumber":162,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":163,"author":{"gitId":"limdanqi"},"content":"        return number;","lastModifiedDate":"2021-08-28"},{"lineNumber":164,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":165,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":166,"author":{"gitId":"limdanqi"},"content":"    private String checkCommandType(String command) throws InvalidInputException {","lastModifiedDate":"2021-08-28"},{"lineNumber":167,"author":{"gitId":"limdanqi"},"content":"        List\u003cString\u003e commandTypes \u003d Command.getCommandTypes();","lastModifiedDate":"2021-08-28"},{"lineNumber":168,"author":{"gitId":"limdanqi"},"content":"        String commandType \u003d \"\";","lastModifiedDate":"2021-08-28"},{"lineNumber":169,"author":{"gitId":"limdanqi"},"content":"        boolean isCommandTypeComplete \u003d false;","lastModifiedDate":"2021-08-28"},{"lineNumber":170,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":171,"author":{"gitId":"limdanqi"},"content":"        for (int i \u003d 0; i \u003c command.length(); i++) {","lastModifiedDate":"2021-08-28"},{"lineNumber":172,"author":{"gitId":"limdanqi"},"content":"            if (isCommandTypeComplete) {","lastModifiedDate":"2021-08-28"},{"lineNumber":173,"author":{"gitId":"limdanqi"},"content":"                break;","lastModifiedDate":"2021-08-28"},{"lineNumber":174,"author":{"gitId":"limdanqi"},"content":"            } else if (Character.isWhitespace(command.charAt(i))) {","lastModifiedDate":"2021-08-28"},{"lineNumber":175,"author":{"gitId":"limdanqi"},"content":"                throw new InvalidInputException(\"invalid input\");","lastModifiedDate":"2021-08-28"},{"lineNumber":176,"author":{"gitId":"limdanqi"},"content":"            } else {","lastModifiedDate":"2021-08-28"},{"lineNumber":177,"author":{"gitId":"limdanqi"},"content":"                commandType \u003d commandType + Character.toString(command.charAt(i));","lastModifiedDate":"2021-08-28"},{"lineNumber":178,"author":{"gitId":"limdanqi"},"content":"                isCommandTypeComplete \u003d matchCommandType(commandType, commandTypes);","lastModifiedDate":"2021-08-28"},{"lineNumber":179,"author":{"gitId":"limdanqi"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":180,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":181,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":182,"author":{"gitId":"limdanqi"},"content":"        return commandType;","lastModifiedDate":"2021-08-28"},{"lineNumber":183,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":184,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":185,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":186,"author":{"gitId":"limdanqi"},"content":"    private boolean matchCommandType(String commandType, List\u003cString\u003e commandTypes) {","lastModifiedDate":"2021-08-28"},{"lineNumber":187,"author":{"gitId":"limdanqi"},"content":"        for (int i \u003d 0; i \u003c commandTypes.size(); i++) {","lastModifiedDate":"2021-08-28"},{"lineNumber":188,"author":{"gitId":"limdanqi"},"content":"            if (commandType.equals(commandTypes.get(i))) {","lastModifiedDate":"2021-08-28"},{"lineNumber":189,"author":{"gitId":"limdanqi"},"content":"                return true;","lastModifiedDate":"2021-08-28"},{"lineNumber":190,"author":{"gitId":"limdanqi"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":191,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":192,"author":{"gitId":"limdanqi"},"content":"        return false;","lastModifiedDate":"2021-08-28"},{"lineNumber":193,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":194,"author":{"gitId":"limdanqi"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"limdanqi":194}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limdanqi"},"content":"package duke.storage;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"limdanqi"},"content":"import java.io.*;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"limdanqi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"limdanqi"},"content":"import java.util.List;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"limdanqi"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"limdanqi"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"limdanqi"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"limdanqi"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"limdanqi"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"limdanqi"},"content":"public class Storage {","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"limdanqi"},"content":"    //TODO create file method","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"limdanqi"},"content":"    //TODO error when tasklist is null for empty constructor","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"limdanqi"},"content":"    private static final String STORAGE_PATH \u003d \"data/duke.txt\";","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"limdanqi"},"content":"    private static final File DATA_FILE \u003d new File(STORAGE_PATH);","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"limdanqi"},"content":"    private String storagePath;","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"limdanqi"},"content":"    private File dataFile;","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"limdanqi"},"content":"    private TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"limdanqi"},"content":"    public Storage() {}","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"limdanqi"},"content":"    public Storage(String storagePath) {","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"limdanqi"},"content":"        this.storagePath \u003d storagePath;","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"limdanqi"},"content":"        dataFile \u003d new File(storagePath);","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"limdanqi"},"content":"    public List\u003cTask\u003e load() throws IOException {","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"limdanqi"},"content":"        return txtToList(dataFile);","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"limdanqi"},"content":"    public void listToTxt(FileWriter fileWriter) throws IOException {","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"limdanqi"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"limdanqi"},"content":"            String currentTask \u003d taskList.getTask(i).toString() + \"\\n\";","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"limdanqi"},"content":"            fileWriter.write(currentTask);","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"limdanqi"},"content":"        fileWriter.close();","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"limdanqi"},"content":"    public List\u003cTask\u003e txtToList(File dataFile) throws IOException {","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"limdanqi"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"limdanqi"},"content":"        String currentTaskString \u003d \"\";","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"limdanqi"},"content":"        BufferedReader reader \u003d new BufferedReader(new FileReader(dataFile));","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"limdanqi"},"content":"        do {","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"limdanqi"},"content":"            currentTaskString \u003d reader.readLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"limdanqi"},"content":"            if (currentTaskString !\u003d null) {","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"limdanqi"},"content":"                Task currentTask \u003d getTaskFromString(currentTaskString);","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"limdanqi"},"content":"                taskList.add(currentTask);","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"limdanqi"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"limdanqi"},"content":"        } while (currentTaskString !\u003d null);","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"limdanqi"},"content":"        return taskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"limdanqi"},"content":"    private Task getTaskFromString(String taskString) {","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"limdanqi"},"content":"        String taskType \u003d getTaskTypeFromString(taskString);","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"limdanqi"},"content":"        String taskName \u003d getTaskNameFromString(taskString);","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"limdanqi"},"content":"        boolean taskStatus \u003d getTaskStatusFromString(taskString);","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"limdanqi"},"content":"        switch (taskType) {","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"limdanqi"},"content":"            case \"todo\":","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"limdanqi"},"content":"                return new Todo(taskName, taskStatus);","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"limdanqi"},"content":"            case \"deadline\":","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"limdanqi"},"content":"                String deadline \u003d getDateAndTimeFromString(taskString);","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"limdanqi"},"content":"                return new Deadline(taskName, deadline, taskStatus);","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"limdanqi"},"content":"            case \"event\":","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"limdanqi"},"content":"                String eventTime \u003d getDateAndTimeFromString(taskString);","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"limdanqi"},"content":"                return new Event(taskName, eventTime, taskStatus);","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"limdanqi"},"content":"            default:","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"limdanqi"},"content":"                return new Task(); //todo error","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"limdanqi"},"content":"    private boolean getTaskStatusFromString(String taskString) {","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"limdanqi"},"content":"        String status \u003d Character.toString(taskString.charAt(4));","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"limdanqi"},"content":"        return status.equals(\"X\");","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"limdanqi"},"content":"    private String getTaskNameFromString(String taskString) {","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"limdanqi"},"content":"        int startingIndex \u003d taskString.indexOf(\"] \");  //todo change hard code-ish?","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"limdanqi"},"content":"        int endingIndex \u003d taskString.indexOf(\"(\");","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"limdanqi"},"content":"        if (endingIndex \u003c 0) { //case of todo","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"limdanqi"},"content":"            return taskString.substring(startingIndex + 2);","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"limdanqi"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"limdanqi"},"content":"            return taskString.substring(startingIndex + 2, endingIndex - 2);","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"limdanqi"},"content":"    private String getDateAndTimeFromString(String taskString) {","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"limdanqi"},"content":"        int startingIndex \u003d taskString.indexOf(\":\");","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"limdanqi"},"content":"        int endingIndex \u003d taskString.indexOf(\")\");","lastModifiedDate":"2021-08-26"},{"lineNumber":99,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"limdanqi"},"content":"        return taskString.substring(startingIndex + 2, endingIndex - 1);","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"limdanqi"},"content":"    private String getTaskTypeFromString(String taskString) {","lastModifiedDate":"2021-08-26"},{"lineNumber":104,"author":{"gitId":"limdanqi"},"content":"        Character taskType \u003d taskString.charAt(1);","lastModifiedDate":"2021-08-26"},{"lineNumber":105,"author":{"gitId":"limdanqi"},"content":"        switch (taskType) {","lastModifiedDate":"2021-08-26"},{"lineNumber":106,"author":{"gitId":"limdanqi"},"content":"            case \u0027T\u0027:","lastModifiedDate":"2021-08-26"},{"lineNumber":107,"author":{"gitId":"limdanqi"},"content":"                return \"todo\";","lastModifiedDate":"2021-08-26"},{"lineNumber":108,"author":{"gitId":"limdanqi"},"content":"            case \u0027D\u0027:","lastModifiedDate":"2021-08-26"},{"lineNumber":109,"author":{"gitId":"limdanqi"},"content":"                return \"deadline\";","lastModifiedDate":"2021-08-26"},{"lineNumber":110,"author":{"gitId":"limdanqi"},"content":"            case \u0027E\u0027:","lastModifiedDate":"2021-08-26"},{"lineNumber":111,"author":{"gitId":"limdanqi"},"content":"                return \"event\";","lastModifiedDate":"2021-08-26"},{"lineNumber":112,"author":{"gitId":"limdanqi"},"content":"            default:","lastModifiedDate":"2021-08-26"},{"lineNumber":113,"author":{"gitId":"limdanqi"},"content":"                return \"\"; //todo error","lastModifiedDate":"2021-08-26"},{"lineNumber":114,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":115,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":116,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":117,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":118,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":119,"author":{"gitId":"limdanqi"},"content":"    public void saveData() {","lastModifiedDate":"2021-08-26"},{"lineNumber":120,"author":{"gitId":"limdanqi"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":121,"author":{"gitId":"limdanqi"},"content":"            FileWriter fileWriter \u003d new FileWriter(DATA_FILE);","lastModifiedDate":"2021-08-26"},{"lineNumber":122,"author":{"gitId":"limdanqi"},"content":"            listToTxt(fileWriter);","lastModifiedDate":"2021-08-26"},{"lineNumber":123,"author":{"gitId":"limdanqi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":124,"author":{"gitId":"limdanqi"},"content":"            //TODO when file dont exists","lastModifiedDate":"2021-08-26"},{"lineNumber":125,"author":{"gitId":"limdanqi"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-26"},{"lineNumber":126,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":127,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":128,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":129,"author":{"gitId":"limdanqi"},"content":"    public void update(TaskList newTaskList) {","lastModifiedDate":"2021-08-28"},{"lineNumber":130,"author":{"gitId":"limdanqi"},"content":"        this.taskList \u003d newTaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":131,"author":{"gitId":"limdanqi"},"content":"        saveData();","lastModifiedDate":"2021-08-26"},{"lineNumber":132,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":133,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":134,"author":{"gitId":"limdanqi"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"limdanqi":134}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limdanqi"},"content":"package duke.task;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"limdanqi"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"limdanqi"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"limdanqi"},"content":"    private String taskType \u003d \"[D]\";","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"limdanqi"},"content":"    private String taskName;","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"limdanqi"},"content":"    private String deadline;","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"limdanqi"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"limdanqi"},"content":"    public Deadline(String taskName, String deadline) {","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"limdanqi"},"content":"        super(taskName);","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"limdanqi"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"limdanqi"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"limdanqi"},"content":"    public Deadline(String taskName, String deadline, boolean isDone) {","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"limdanqi"},"content":"        super(taskName);","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"limdanqi"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"limdanqi"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"limdanqi"},"content":"        if (isDone) {","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"limdanqi"},"content":"            this.markAsDone();","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"limdanqi"},"content":"    public String getDeadline() {","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"limdanqi"},"content":"        return String.format(\"(by: %s)\", deadline);","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"limdanqi"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"limdanqi"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"limdanqi"},"content":"        String result \u003d taskType + this.getCheckBox()","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"limdanqi"},"content":"                + \" \" + this.taskName + \" \"","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"limdanqi"},"content":"                + getDeadline();","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"limdanqi"},"content":"        return result;","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"limdanqi"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"limdanqi":37}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limdanqi"},"content":"package duke.task;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"limdanqi"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"limdanqi"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"limdanqi"},"content":"    private String taskType \u003d \"[E]\";","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"limdanqi"},"content":"    private String taskName;","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"limdanqi"},"content":"    private String eventTime;","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"limdanqi"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"limdanqi"},"content":"    public Event(String taskName, String eventTime) {","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"limdanqi"},"content":"        super(taskName);","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"limdanqi"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"limdanqi"},"content":"        this.eventTime \u003d eventTime;","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"limdanqi"},"content":"    public Event(String taskName, String eventTime, boolean isDone) {","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"limdanqi"},"content":"        super(taskName);","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"limdanqi"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"limdanqi"},"content":"        this.eventTime \u003d eventTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"limdanqi"},"content":"        if (isDone) {","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"limdanqi"},"content":"            this.markAsDone();","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"limdanqi"},"content":"    public String getEventTime() {","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"limdanqi"},"content":"        return String.format(\"(at: %s)\", eventTime);","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"limdanqi"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"limdanqi"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"limdanqi"},"content":"        String result \u003d taskType + this.getCheckBox()","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"limdanqi"},"content":"                + \" \" + this.taskName + \" \"","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"limdanqi"},"content":"                + getEventTime();","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"limdanqi"},"content":"        return result;","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"limdanqi"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"limdanqi":37}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limdanqi"},"content":"package duke.task;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"limdanqi"},"content":"public class Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"limdanqi"},"content":"    private String taskName;","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"limdanqi"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"limdanqi"},"content":"    private boolean isEmpty \u003d true;","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"limdanqi"},"content":"    public Task() {}","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"limdanqi"},"content":"    public Task(String taskName) {","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"limdanqi"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"limdanqi"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"limdanqi"},"content":"        this.isEmpty \u003d false;","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"limdanqi"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"limdanqi"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"limdanqi"},"content":"    public boolean isEmpty() { return isEmpty; }","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"limdanqi"},"content":"    public String getCheckBox() {","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"limdanqi"},"content":"        if (isDone) {","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"limdanqi"},"content":"            return \"[X]\";","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"limdanqi"},"content":"        return \"[ ]\";","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"limdanqi"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"limdanqi"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"limdanqi"},"content":"        String result \u003d this.getCheckBox() + \" \" + this.taskName;","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"limdanqi"},"content":"        return result;","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"limdanqi"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"limdanqi":34}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limdanqi"},"content":"package duke.task;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"limdanqi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"limdanqi"},"content":"import java.util.List;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"limdanqi"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"limdanqi"},"content":"public class TaskList {","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"limdanqi"},"content":"    private List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"limdanqi"},"content":"    public TaskList() {}","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"limdanqi"},"content":"    public TaskList(List\u003cTask\u003e taskList) {","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"limdanqi"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"limdanqi"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"limdanqi"},"content":"        taskList.add(task);","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"limdanqi"},"content":"    public void removeTask(int taskPosition) {","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"limdanqi"},"content":"        taskList.remove(taskPosition);","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"limdanqi"},"content":"    public Task getTask(int taskPosition) {","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"limdanqi"},"content":"        return taskList.get(taskPosition);","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"limdanqi"},"content":"    public int size() {","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"limdanqi"},"content":"        return taskList.size();","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"limdanqi"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"limdanqi"},"content":"        return taskList.isEmpty();","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"limdanqi"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"limdanqi":36}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limdanqi"},"content":"package duke.task;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"limdanqi"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"limdanqi"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"limdanqi"},"content":"    private String taskType \u003d \"[T]\";","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"limdanqi"},"content":"    private String taskName;","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"limdanqi"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"limdanqi"},"content":"    public Todo(String taskName) {","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"limdanqi"},"content":"        super(taskName);","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"limdanqi"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"limdanqi"},"content":"    public Todo(String taskName, boolean isDone) {","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"limdanqi"},"content":"        super(taskName);","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"limdanqi"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"limdanqi"},"content":"        if (isDone) {","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"limdanqi"},"content":"            this.markAsDone();","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"limdanqi"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"limdanqi"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"limdanqi"},"content":"        String result \u003d taskType + this.getCheckBox()","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"limdanqi"},"content":"                + \" \" + this.taskName;","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"limdanqi"},"content":"        return result;","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"limdanqi"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"limdanqi":29}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limdanqi"},"content":"package duke.ui;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"limdanqi"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"limdanqi"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"limdanqi"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"limdanqi"},"content":"public class Ui {","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"limdanqi"},"content":"    public Ui() {}","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"limdanqi"},"content":"    //todo show loading error need?","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"limdanqi"},"content":"    public void showWelcome() {","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"limdanqi"},"content":"        //        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"limdanqi"},"content":"//                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"limdanqi"},"content":"//                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"limdanqi"},"content":"//                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"limdanqi"},"content":"//                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"limdanqi"},"content":"//        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"limdanqi"},"content":"        String message \u003d \"Hello! I\u0027m Duke\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"limdanqi"},"content":"                + \"What can I do for you?\";","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"limdanqi"},"content":"        System.out.println(message);","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"limdanqi"},"content":"    public void showExit() {","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"limdanqi"},"content":"        String message \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"limdanqi"},"content":"        System.out.println(message);","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"limdanqi"},"content":"    public void showLine() {","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"limdanqi"},"content":"        String divider \u003d \"------------------------------------------------------\";","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"limdanqi"},"content":"        System.out.println(divider);","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"limdanqi"},"content":"    public void showError(String error) {","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"limdanqi"},"content":"        System.out.println(error);","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"limdanqi"},"content":"    public void showDeleteTask(Task removedTask, TaskList tasks) {","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"limdanqi"},"content":"        String displayedMessage \u003d \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"limdanqi"},"content":"                + \"  \" + removedTask.toString() + \"\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"limdanqi"},"content":"                + getTotalTaskString(tasks);","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"limdanqi"},"content":"        System.out.println(displayedMessage);","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"limdanqi"},"content":"    public String readCommand(Scanner sc) {","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"limdanqi"},"content":"        String command \u003d \"\";","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"limdanqi"},"content":"        //if (sc.hasNextLine()) {","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"limdanqi"},"content":"            command \u003d sc.nextLine();","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"limdanqi"},"content":"        //}","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"limdanqi"},"content":"        return  command.trim();","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"limdanqi"},"content":"    public void showAddTaskMessage(Task task, TaskList tasks) {","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"limdanqi"},"content":"        String successMessage \u003d \"Got it. I\u0027ve added this task:\";","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"limdanqi"},"content":"        String taskString \u003d task.toString();","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"limdanqi"},"content":"        String result \u003d successMessage + \"\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"limdanqi"},"content":"                + \"  \" + taskString + \"\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"limdanqi"},"content":"                + getTotalTaskString(tasks);","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"limdanqi"},"content":"        System.out.println(result);","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"limdanqi"},"content":"    public void showMarkTaskMessage(Task task) {","lastModifiedDate":"2021-08-28"},{"lineNumber":66,"author":{"gitId":"limdanqi"},"content":"        String displayedMessage \u003d \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":67,"author":{"gitId":"limdanqi"},"content":"                + \"  \"","lastModifiedDate":"2021-08-28"},{"lineNumber":68,"author":{"gitId":"limdanqi"},"content":"                + task.toString();","lastModifiedDate":"2021-08-28"},{"lineNumber":69,"author":{"gitId":"limdanqi"},"content":"        System.out.println(displayedMessage);","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":71,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":72,"author":{"gitId":"limdanqi"},"content":"    private int getTotalTaskNumber(TaskList tasks) {","lastModifiedDate":"2021-08-28"},{"lineNumber":73,"author":{"gitId":"limdanqi"},"content":"        return tasks.size();","lastModifiedDate":"2021-08-28"},{"lineNumber":74,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":76,"author":{"gitId":"limdanqi"},"content":"    private String getTotalTaskString(TaskList tasks) {","lastModifiedDate":"2021-08-28"},{"lineNumber":77,"author":{"gitId":"limdanqi"},"content":"        return String.format(\"Now you have %d tasks in the list.\", getTotalTaskNumber(tasks));","lastModifiedDate":"2021-08-28"},{"lineNumber":78,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":79,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":80,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":81,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":82,"author":{"gitId":"limdanqi"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"limdanqi":82}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limdanqi"},"content":"package duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"limdanqi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"limdanqi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"limdanqi"},"content":"public class DukeTest {","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"limdanqi"},"content":"    @Test","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"limdanqi"},"content":"    public void dummyTest(){","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"limdanqi"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"limdanqi"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"limdanqi":12}},{"path":"src/test/java/duke/data/DateAndTimeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limdanqi"},"content":"package duke.data;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"limdanqi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"limdanqi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"limdanqi"},"content":"import duke.data.exceptions.InvalidDateAndTimeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"limdanqi"},"content":"public class DateAndTimeTest {","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"limdanqi"},"content":"    @Test","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"limdanqi"},"content":"    public void reformattedDateAndTime_commandInput_success() throws InvalidDateAndTimeException {","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"limdanqi"},"content":"        DateAndTime dateAndTime \u003d new DateAndTime(\"event meeting /at 11/12/2021 11:00\");","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"limdanqi"},"content":"        String expectedOutput \u003d \"Dec 11 2021, 11:00\";","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"limdanqi"},"content":"        assertEquals(expectedOutput, dateAndTime.getReformattedDateAndTime());","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"limdanqi"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"limdanqi":16}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limdanqi"},"content":"package duke.task;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"limdanqi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"limdanqi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"limdanqi"},"content":"public class TodoTest {","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"limdanqi"},"content":"    @Test","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"limdanqi"},"content":"    public void todoStringConversion() {","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"limdanqi"},"content":"        Todo todo \u003d new Todo(\"borrow book\");","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"limdanqi"},"content":"        String actualOutput \u003d todo.toString();","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"limdanqi"},"content":"        String expectedOutput \u003d \"[T][ ] borrow book\";","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"limdanqi"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"limdanqi"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"limdanqi":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"limdanqi"},"content":"todo borrow book","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"limdanqi"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"limdanqi"},"content":"done 1","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"limdanqi"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"limdanqi"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"limdanqi"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"limdanqi"},"content":"bye","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"limdanqi":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"limdanqi"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"limdanqi":1,"-":20}}]
