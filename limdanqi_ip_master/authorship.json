[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"limdanqi"},"content":"# duke.Duke project template","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"limdanqi"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"limdanqi":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"limdanqi"},"content":"//    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.9\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"limdanqi"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"limdanqi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"limdanqi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"limdanqi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"limdanqi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"limdanqi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"limdanqi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"limdanqi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"limdanqi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"limdanqi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"limdanqi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"limdanqi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"limdanqi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"limdanqi"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"limdanqi"},"content":"//","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"limdanqi"},"content":"//javafx {","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"limdanqi"},"content":"//    version \u003d \"15.0.1\"","lastModifiedDate":"2021-09-02"},{"lineNumber":62,"author":{"gitId":"limdanqi"},"content":"//    modules \u003d [ \u0027javafx.controls\u0027 ]","lastModifiedDate":"2021-09-02"},{"lineNumber":63,"author":{"gitId":"limdanqi"},"content":"//}","lastModifiedDate":"2021-09-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"limdanqi":22,"-":45}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limdanqi"},"content":"package duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"limdanqi"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"limdanqi"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"limdanqi"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"limdanqi"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"limdanqi"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"limdanqi"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"limdanqi"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"limdanqi"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"limdanqi"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"limdanqi"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"limdanqi"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"limdanqi"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"limdanqi"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"limdanqi"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"limdanqi"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"limdanqi"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"limdanqi"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"limdanqi"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"limdanqi"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"limdanqi"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"limdanqi"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"limdanqi"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"limdanqi"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"limdanqi"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"limdanqi"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"limdanqi"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"limdanqi"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"limdanqi"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"limdanqi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"limdanqi"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"limdanqi"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"limdanqi"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"limdanqi"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"limdanqi"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"limdanqi"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"limdanqi"},"content":"    private void flip() {","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"limdanqi"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"limdanqi"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"limdanqi"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"limdanqi"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"limdanqi"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"limdanqi"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"limdanqi"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"limdanqi"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"limdanqi"},"content":"        db.flip();","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"limdanqi"},"content":"        return db;","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"limdanqi"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"limdanqi":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limdanqi"},"content":"package duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"limdanqi"},"content":"import java.io.File;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"limdanqi"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"limdanqi"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"limdanqi"},"content":"import duke.data.exceptions.DukeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"limdanqi"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"limdanqi"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"limdanqi"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"limdanqi"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"limdanqi"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"limdanqi"},"content":" * The Duke programme implements a bot that help users to record the tasks they have.","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"limdanqi"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"limdanqi"},"content":"    private static final String STORAGE_DIRECTORY_PATH \u003d \"data/duke.txt\";","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"limdanqi"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"limdanqi"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"limdanqi"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"limdanqi"},"content":"    private File dataFile;","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"limdanqi"},"content":"    public Duke() {} //needed for Application.launch() to work","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"limdanqi"},"content":"    public Duke(String storageFile) {","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"limdanqi"},"content":"        this.storageFile \u003d storageFile;","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"limdanqi"},"content":"        this.dataFile \u003d new File(\"data/duke.txt\");","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"limdanqi"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"limdanqi"},"content":"        storage \u003d new Storage(STORAGE_DIRECTORY + storageFile);","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"limdanqi"},"content":"        //try {","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"limdanqi"},"content":"//            if (!this.dataFile.exists()) {","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"limdanqi"},"content":"//                boolean isFileCreated \u003d dataFile.createNewFile();","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"limdanqi"},"content":"//                taskList \u003d new TaskList();","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"limdanqi"},"content":"//            } else {","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"limdanqi"},"content":"//                taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"limdanqi"},"content":"//            }","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"limdanqi"},"content":"//            if (!isFileCreated) {","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"limdanqi"},"content":"//                taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"limdanqi"},"content":"//            } else {","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"limdanqi"},"content":"//                taskList \u003d new TaskList();","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"limdanqi"},"content":"//            }","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"limdanqi"},"content":"            try {","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"limdanqi"},"content":"                if (!this.dataFile.exists()) {","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"limdanqi"},"content":"                    try {","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"limdanqi"},"content":"                        if (this.dataFile.getParentFile().mkdirs()) {","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"limdanqi"},"content":"                            System.out.println(\"Directory for file created.\");","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"limdanqi"},"content":"                        }","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"limdanqi"},"content":"                        if (this.dataFile.createNewFile()) {","lastModifiedDate":"2021-09-07"},{"lineNumber":53,"author":{"gitId":"limdanqi"},"content":"                            System.out.println(\"File created: duke.txt\");","lastModifiedDate":"2021-09-07"},{"lineNumber":54,"author":{"gitId":"limdanqi"},"content":"                        }","lastModifiedDate":"2021-09-07"},{"lineNumber":55,"author":{"gitId":"limdanqi"},"content":"                        taskList \u003d new TaskList();","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"limdanqi"},"content":"                    } catch (IOException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":57,"author":{"gitId":"limdanqi"},"content":"                        System.out.println(\"Error has occurred when creating file!\");","lastModifiedDate":"2021-09-07"},{"lineNumber":58,"author":{"gitId":"limdanqi"},"content":"                        e.printStackTrace();","lastModifiedDate":"2021-09-07"},{"lineNumber":59,"author":{"gitId":"limdanqi"},"content":"                    }","lastModifiedDate":"2021-09-07"},{"lineNumber":60,"author":{"gitId":"limdanqi"},"content":"                } else {","lastModifiedDate":"2021-09-07"},{"lineNumber":61,"author":{"gitId":"limdanqi"},"content":"                    taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2021-09-07"},{"lineNumber":62,"author":{"gitId":"limdanqi"},"content":"                }","lastModifiedDate":"2021-08-17"},{"lineNumber":63,"author":{"gitId":"limdanqi"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"limdanqi"},"content":"                e.printStackTrace();","lastModifiedDate":"2021-09-02"},{"lineNumber":65,"author":{"gitId":"limdanqi"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":66,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":67,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":68,"author":{"gitId":"limdanqi"},"content":"//    } catch (IOException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":69,"author":{"gitId":"limdanqi"},"content":"//            e.printStackTrace();","lastModifiedDate":"2021-09-07"},{"lineNumber":70,"author":{"gitId":"limdanqi"},"content":"//            //todo do we need to involve the case whereby this error occurs and show the error message to the user?","lastModifiedDate":"2021-09-07"},{"lineNumber":71,"author":{"gitId":"limdanqi"},"content":"//        }","lastModifiedDate":"2021-09-07"},{"lineNumber":72,"author":{"gitId":"limdanqi"},"content":"//    }","lastModifiedDate":"2021-09-07"},{"lineNumber":73,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":74,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":75,"author":{"gitId":"limdanqi"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":76,"author":{"gitId":"limdanqi"},"content":"     * Returns a string representing the response from Duke based on the user input.","lastModifiedDate":"2021-09-02"},{"lineNumber":77,"author":{"gitId":"limdanqi"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":78,"author":{"gitId":"limdanqi"},"content":"     * @param input the user input","lastModifiedDate":"2021-09-02"},{"lineNumber":79,"author":{"gitId":"limdanqi"},"content":"     * @return a response string from Duke","lastModifiedDate":"2021-09-02"},{"lineNumber":80,"author":{"gitId":"limdanqi"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":81,"author":{"gitId":"limdanqi"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-09-02"},{"lineNumber":82,"author":{"gitId":"limdanqi"},"content":"        String response;","lastModifiedDate":"2021-09-08"},{"lineNumber":83,"author":{"gitId":"limdanqi"},"content":"        Parser p \u003d new Parser();","lastModifiedDate":"2021-09-02"},{"lineNumber":84,"author":{"gitId":"limdanqi"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":85,"author":{"gitId":"limdanqi"},"content":"            Command c \u003d p.parse(input);","lastModifiedDate":"2021-09-02"},{"lineNumber":86,"author":{"gitId":"limdanqi"},"content":"            response \u003d c.execute(taskList, ui, storage);","lastModifiedDate":"2021-09-02"},{"lineNumber":87,"author":{"gitId":"limdanqi"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":88,"author":{"gitId":"limdanqi"},"content":"//            e.printStackTrace();","lastModifiedDate":"2021-09-07"},{"lineNumber":89,"author":{"gitId":"limdanqi"},"content":"            response \u003d ui.showErrorMessage(e.getMessage());","lastModifiedDate":"2021-09-02"},{"lineNumber":90,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":91,"author":{"gitId":"limdanqi"},"content":"        return response;","lastModifiedDate":"2021-09-02"},{"lineNumber":92,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":93,"author":{"gitId":"limdanqi"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"limdanqi":92,"-":1}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limdanqi"},"content":"package duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"limdanqi"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"limdanqi"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"limdanqi"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"limdanqi"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"limdanqi"},"content":"public class Launcher {","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"limdanqi"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"limdanqi"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"limdanqi"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"limdanqi":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limdanqi"},"content":"package duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"limdanqi"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"limdanqi"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"limdanqi"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"limdanqi"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"limdanqi"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"limdanqi"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"limdanqi"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"limdanqi"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"limdanqi"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"limdanqi"},"content":"        Application.launch(args);","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"limdanqi"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"limdanqi"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"limdanqi"},"content":"        MainWindow mainWindow \u003d new MainWindow();","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"limdanqi"},"content":"        mainWindow.setDuke(duke);","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"limdanqi"},"content":"        Scene scene \u003d new Scene(mainWindow);","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"limdanqi"},"content":"        stage.setScene(scene);","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"limdanqi"},"content":"        stage.setTitle(\"Duke Agenda Bot\");","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"limdanqi"},"content":"        stage.show();","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"limdanqi"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"limdanqi":27}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limdanqi"},"content":"package duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"limdanqi"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"limdanqi"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"limdanqi"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"limdanqi"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"limdanqi"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"limdanqi"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"limdanqi"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"limdanqi"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"limdanqi"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"limdanqi"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"limdanqi"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"limdanqi"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"limdanqi"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"limdanqi"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"limdanqi"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"limdanqi"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"limdanqi"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"limdanqi"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"limdanqi"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"limdanqi"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"limdanqi"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"limdanqi"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"limdanqi"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"limdanqi"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/alice.jpg\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"limdanqi"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/tanjiro.jpg\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"limdanqi"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"limdanqi"},"content":"     * Initialises a MainWindow object.","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"limdanqi"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"limdanqi"},"content":"    public MainWindow() {","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"limdanqi"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"limdanqi"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"limdanqi"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"limdanqi"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"limdanqi"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"limdanqi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"limdanqi"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"limdanqi"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"limdanqi"},"content":"     * Initialises the properties of the MainWindow object.","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"limdanqi"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"limdanqi"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"limdanqi"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"limdanqi"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"limdanqi"},"content":"        String welcomeMessage \u003d Ui.showWelcomeMessage();","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"limdanqi"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(welcomeMessage, dukeImage));","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"limdanqi"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"limdanqi"},"content":"        duke \u003d d;","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"limdanqi"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":62,"author":{"gitId":"limdanqi"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-02"},{"lineNumber":63,"author":{"gitId":"limdanqi"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-02"},{"lineNumber":64,"author":{"gitId":"limdanqi"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":65,"author":{"gitId":"limdanqi"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":66,"author":{"gitId":"limdanqi"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-02"},{"lineNumber":67,"author":{"gitId":"limdanqi"},"content":"        String input \u003d userInput.getText().trim();","lastModifiedDate":"2021-09-02"},{"lineNumber":68,"author":{"gitId":"limdanqi"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-09-02"},{"lineNumber":69,"author":{"gitId":"limdanqi"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-02"},{"lineNumber":70,"author":{"gitId":"limdanqi"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-02"},{"lineNumber":71,"author":{"gitId":"limdanqi"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-09-02"},{"lineNumber":72,"author":{"gitId":"limdanqi"},"content":"        );","lastModifiedDate":"2021-09-02"},{"lineNumber":73,"author":{"gitId":"limdanqi"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-02"},{"lineNumber":74,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":75,"author":{"gitId":"limdanqi"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"limdanqi":75}},{"path":"src/main/java/duke/command/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limdanqi"},"content":"package duke.command;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"limdanqi"},"content":"import duke.data.exceptions.InvalidInputException;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"limdanqi"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"limdanqi"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"limdanqi"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"limdanqi"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"limdanqi"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"limdanqi"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"limdanqi"},"content":"import duke.ui.Message;","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"limdanqi"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"limdanqi"},"content":"/**","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"limdanqi"},"content":" * AddTaskCommand object allows a Task to be added to TaskList.","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"limdanqi"},"content":" */","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"limdanqi"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"limdanqi"},"content":"    /** Attributes for a AddTaskCommand object */","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"limdanqi"},"content":"    private CommandType taskType;","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"limdanqi"},"content":"    private String taskName;","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"limdanqi"},"content":"    private String dateAndTime;","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"limdanqi"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"limdanqi"},"content":"     * Initialises a AddTaskCommand object.","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"limdanqi"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"limdanqi"},"content":"     * @param taskType the type of task to be added","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"limdanqi"},"content":"     * @param taskName the task name of the added task","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"limdanqi"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"limdanqi"},"content":"    public AddTaskCommand(CommandType taskType, String taskName) {","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"limdanqi"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"limdanqi"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"limdanqi"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"limdanqi"},"content":"     * Initialises a AddTaskCommand object with a dateAndTime attribute.","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"limdanqi"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"limdanqi"},"content":"     * @param taskType the type of task to be added","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"limdanqi"},"content":"     * @param taskName the task name of the added task","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"limdanqi"},"content":"     * @param dateAndTime the string representing the date and time for the added task","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"limdanqi"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"limdanqi"},"content":"    public AddTaskCommand(CommandType taskType, String taskName, String dateAndTime) {","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"limdanqi"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"limdanqi"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"limdanqi"},"content":"        this.dateAndTime \u003d dateAndTime;","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"limdanqi"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"limdanqi"},"content":"     * Returns the task to be added according to the user command and adds the task to the task list.","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"limdanqi"},"content":"     * Throws an InvalidInputException when the tasked added is not of type Todo, Deadline or Event.","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"limdanqi"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"limdanqi"},"content":"     * @param tasks the task list whereby tasks are added to","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"limdanqi"},"content":"     * @return the added task","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"limdanqi"},"content":"     * @throws InvalidInputException when the task is not a Todo, Deadline or Event","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"limdanqi"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"limdanqi"},"content":"    private Task addTask(TaskList tasks) throws InvalidInputException {","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"limdanqi"},"content":"        switch (taskType) {","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"limdanqi"},"content":"        case TODO:","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"limdanqi"},"content":"            Todo todo \u003d new Todo(taskName);","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"limdanqi"},"content":"            tasks.addTask(todo);","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"limdanqi"},"content":"            return todo;","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"limdanqi"},"content":"        case DEADLINE:","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"limdanqi"},"content":"            Deadline deadline \u003d new Deadline(taskName, dateAndTime);","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"limdanqi"},"content":"            tasks.addTask(deadline);","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"limdanqi"},"content":"            return deadline;","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"limdanqi"},"content":"        case EVENT:","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"limdanqi"},"content":"            Event event \u003d new Event(taskName, dateAndTime);","lastModifiedDate":"2021-08-28"},{"lineNumber":66,"author":{"gitId":"limdanqi"},"content":"            tasks.addTask(event);","lastModifiedDate":"2021-08-28"},{"lineNumber":67,"author":{"gitId":"limdanqi"},"content":"            return event;","lastModifiedDate":"2021-08-28"},{"lineNumber":68,"author":{"gitId":"limdanqi"},"content":"        default:","lastModifiedDate":"2021-08-28"},{"lineNumber":69,"author":{"gitId":"limdanqi"},"content":"            throw new InvalidInputException(Message.MESSAGE_ERROR_OCCURRED);","lastModifiedDate":"2021-09-02"},{"lineNumber":70,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":71,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":72,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":73,"author":{"gitId":"limdanqi"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":74,"author":{"gitId":"limdanqi"},"content":"     * Executes the AddTaskCommand object.","lastModifiedDate":"2021-09-02"},{"lineNumber":75,"author":{"gitId":"limdanqi"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":76,"author":{"gitId":"limdanqi"},"content":"     * @param taskList the current task list","lastModifiedDate":"2021-09-02"},{"lineNumber":77,"author":{"gitId":"limdanqi"},"content":"     * @param ui the ui object used","lastModifiedDate":"2021-09-02"},{"lineNumber":78,"author":{"gitId":"limdanqi"},"content":"     * @param storage the current storage","lastModifiedDate":"2021-09-02"},{"lineNumber":79,"author":{"gitId":"limdanqi"},"content":"     * @return a message string of the task added","lastModifiedDate":"2021-09-02"},{"lineNumber":80,"author":{"gitId":"limdanqi"},"content":"     * @throws InvalidInputException when task fails to add","lastModifiedDate":"2021-09-02"},{"lineNumber":81,"author":{"gitId":"limdanqi"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":82,"author":{"gitId":"limdanqi"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":83,"author":{"gitId":"limdanqi"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws InvalidInputException {","lastModifiedDate":"2021-09-02"},{"lineNumber":84,"author":{"gitId":"limdanqi"},"content":"        Task addedTask \u003d addTask(taskList);","lastModifiedDate":"2021-08-28"},{"lineNumber":85,"author":{"gitId":"limdanqi"},"content":"        storage.update(taskList);","lastModifiedDate":"2021-08-28"},{"lineNumber":86,"author":{"gitId":"limdanqi"},"content":"        return ui.showAddTaskMessage(addedTask, taskList);","lastModifiedDate":"2021-09-02"},{"lineNumber":87,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":88,"author":{"gitId":"limdanqi"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"limdanqi":88}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limdanqi"},"content":"package duke.command;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"limdanqi"},"content":"import duke.data.exceptions.DukeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"limdanqi"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"limdanqi"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"limdanqi"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"limdanqi"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"limdanqi"},"content":" * Represents a command by the user.","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"limdanqi"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"limdanqi"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"limdanqi"},"content":"    public enum CommandType {","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"limdanqi"},"content":"        LIST,","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"limdanqi"},"content":"        TODO,","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"limdanqi"},"content":"        DEADLINE,","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"limdanqi"},"content":"        EVENT,","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"limdanqi"},"content":"        DONE,","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"limdanqi"},"content":"        DELETE,","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"limdanqi"},"content":"        FIND,","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"limdanqi"},"content":"        EXIT","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"limdanqi"},"content":"    public Command() {}","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"limdanqi"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"limdanqi"},"content":"     * Executes the command made by the user and returns a string representing the execution result.","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"limdanqi"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"limdanqi"},"content":"     * @param taskList the current task list","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"limdanqi"},"content":"     * @param ui the ui object used","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"limdanqi"},"content":"     * @param storage the current storage","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"limdanqi"},"content":"     * @throws DukeException the error received due to DukeException","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"limdanqi"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"limdanqi"},"content":"    public abstract String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"limdanqi"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"limdanqi":34}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limdanqi"},"content":"package duke.command;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"limdanqi"},"content":"import duke.data.exceptions.InvalidInputException;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"limdanqi"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"limdanqi"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"limdanqi"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"limdanqi"},"content":"import duke.ui.Message;","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"limdanqi"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"limdanqi"},"content":"/**","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"limdanqi"},"content":" * DeleteCommand represents a command to delete a task from a task list.","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"limdanqi"},"content":" */","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"limdanqi"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"limdanqi"},"content":"    /** Attribute for a DeleteCommand object */","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"limdanqi"},"content":"    private int taskNumber;","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"limdanqi"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"limdanqi"},"content":"     * Initialises a DeleteCommand object.","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"limdanqi"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"limdanqi"},"content":"     * @param taskNumber represents the task number of the task to be deleted in the current task list","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"limdanqi"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"limdanqi"},"content":"    public DeleteCommand(int taskNumber) {","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"limdanqi"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"limdanqi"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"limdanqi"},"content":"     * Deletes the task from the current task list and returns the deleted task.","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"limdanqi"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"limdanqi"},"content":"     * @param tasks the current task list","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"limdanqi"},"content":"     * @return the deleted task","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"limdanqi"},"content":"     * @throws InvalidInputException when the task number provided is invalid","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"limdanqi"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"limdanqi"},"content":"    private Task deleteTask(TaskList tasks) throws InvalidInputException {","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"limdanqi"},"content":"        int taskPosition \u003d taskNumber - 1;","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"limdanqi"},"content":"        if (taskPosition \u003e\u003d tasks.size()) {","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"limdanqi"},"content":"            throw new InvalidInputException(Message.MESSAGE_INVALID_TASK_NUMBER);","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"limdanqi"},"content":"        } else {","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"limdanqi"},"content":"            Task removedTask \u003d tasks.getTask(taskPosition);","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"limdanqi"},"content":"            tasks.removeTask(taskPosition);","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"limdanqi"},"content":"            return removedTask;","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"limdanqi"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"limdanqi"},"content":"     * Executes the DeleteCommand object.","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"limdanqi"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":47,"author":{"gitId":"limdanqi"},"content":"     * @param taskList the current task list","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"limdanqi"},"content":"     * @param ui the ui object used","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"limdanqi"},"content":"     * @param storage the current storage","lastModifiedDate":"2021-09-05"},{"lineNumber":50,"author":{"gitId":"limdanqi"},"content":"     * @return a string message of the deleted task","lastModifiedDate":"2021-09-05"},{"lineNumber":51,"author":{"gitId":"limdanqi"},"content":"     * @throws InvalidInputException if the task number provided is invalid","lastModifiedDate":"2021-09-05"},{"lineNumber":52,"author":{"gitId":"limdanqi"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":53,"author":{"gitId":"limdanqi"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"limdanqi"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws InvalidInputException {","lastModifiedDate":"2021-09-05"},{"lineNumber":55,"author":{"gitId":"limdanqi"},"content":"        Task removedTask \u003d deleteTask(taskList);","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"limdanqi"},"content":"        storage.update(taskList);","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"limdanqi"},"content":"        return ui.showDeleteTaskMessage(removedTask, taskList);","lastModifiedDate":"2021-09-05"},{"lineNumber":58,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"limdanqi"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"limdanqi":59}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limdanqi"},"content":"package duke.command;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"limdanqi"},"content":"import duke.data.exceptions.InvalidInputException;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"limdanqi"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"limdanqi"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"limdanqi"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"limdanqi"},"content":"import duke.ui.Message;","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"limdanqi"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"limdanqi"},"content":"/**","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"limdanqi"},"content":" * DoneCommand represents a command to mark a task as completed.","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"limdanqi"},"content":" */","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"limdanqi"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"limdanqi"},"content":"    /** Attribute for a DoneCommand object */","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"limdanqi"},"content":"    private int taskNumber;","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"limdanqi"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"limdanqi"},"content":"     * Initialises a DoneCommand object.","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"limdanqi"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"limdanqi"},"content":"     * @param taskNumber the task number of the task to be marked done","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"limdanqi"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"limdanqi"},"content":"    public DoneCommand(int taskNumber) {","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"limdanqi"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"limdanqi"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"limdanqi"},"content":"     * Marks the task as done and returns the marked task.","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"limdanqi"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"limdanqi"},"content":"     * @param tasks the current task list","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"limdanqi"},"content":"     * @return the marked task","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"limdanqi"},"content":"     * @throws InvalidInputException if the task number entered is invalid","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"limdanqi"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"limdanqi"},"content":"    private Task markTaskAsDone(TaskList tasks) throws InvalidInputException {","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"limdanqi"},"content":"        int taskPosition \u003d taskNumber - 1;","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"limdanqi"},"content":"        if (taskPosition \u003e\u003d tasks.size()) {","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"limdanqi"},"content":"            throw new InvalidInputException(Message.MESSAGE_INVALID_TASK_NUMBER);","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"limdanqi"},"content":"        } else {","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"limdanqi"},"content":"            Task taskMarked \u003d tasks.getTask(taskPosition);","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"limdanqi"},"content":"            taskMarked.markAsDone();","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"limdanqi"},"content":"            return taskMarked;","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"limdanqi"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"limdanqi"},"content":"     * Executes the DoneCommand object.","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"limdanqi"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":47,"author":{"gitId":"limdanqi"},"content":"     * @param taskList the current task list","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"limdanqi"},"content":"     * @param ui the ui object used","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"limdanqi"},"content":"     * @param storage the current storage","lastModifiedDate":"2021-09-05"},{"lineNumber":50,"author":{"gitId":"limdanqi"},"content":"     * @return a string message representing the marked task","lastModifiedDate":"2021-09-05"},{"lineNumber":51,"author":{"gitId":"limdanqi"},"content":"     * @throws InvalidInputException if the task number provided is invalid","lastModifiedDate":"2021-09-05"},{"lineNumber":52,"author":{"gitId":"limdanqi"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":53,"author":{"gitId":"limdanqi"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"limdanqi"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws InvalidInputException {","lastModifiedDate":"2021-09-05"},{"lineNumber":55,"author":{"gitId":"limdanqi"},"content":"        Task markedTask \u003d markTaskAsDone(taskList);","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"limdanqi"},"content":"        storage.update(taskList);","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"limdanqi"},"content":"        return ui.showMarkTaskMessage(markedTask);","lastModifiedDate":"2021-09-05"},{"lineNumber":58,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"limdanqi"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"limdanqi":59}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limdanqi"},"content":"package duke.command;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"limdanqi"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"limdanqi"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"limdanqi"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"limdanqi"},"content":"/**","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"limdanqi"},"content":" * ExitCommand represents a command to exit the programme.","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"limdanqi"},"content":" */","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"limdanqi"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"limdanqi"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"limdanqi"},"content":"     * Executes the ExitCommand object.","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"limdanqi"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"limdanqi"},"content":"     * @param taskList the current task list","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"limdanqi"},"content":"     * @param ui the ui object used","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"limdanqi"},"content":"     * @param storage the current storage","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"limdanqi"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"limdanqi"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"limdanqi"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"limdanqi"},"content":"        return Ui.showExitMessage();","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"limdanqi"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"limdanqi":22}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limdanqi"},"content":"package duke.command;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"limdanqi"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"limdanqi"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"limdanqi"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"limdanqi"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"limdanqi"},"content":"/**","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"limdanqi"},"content":" * FindCommand represents a command to find a matching term in the task list.","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"limdanqi"},"content":" */","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"limdanqi"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"limdanqi"},"content":"    /** Attribute of a FindCommand object */","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"limdanqi"},"content":"    private String searchTerm;","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"limdanqi"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"limdanqi"},"content":"     * Initialises a FindCommand object.","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"limdanqi"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"limdanqi"},"content":"     * @param searchTerm the search term the user has keyed in","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"limdanqi"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"limdanqi"},"content":"    public FindCommand(String searchTerm) {","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"limdanqi"},"content":"        this.searchTerm \u003d searchTerm;","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"limdanqi"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"limdanqi"},"content":"     * Finds the matching tasks and returns a TaskList with all the matched tasks.","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"limdanqi"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"limdanqi"},"content":"     * @param searchTerm the search term","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"limdanqi"},"content":"     * @param taskList the current task list","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"limdanqi"},"content":"     * @return a TaskList with all matching tasks","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"limdanqi"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"limdanqi"},"content":"    private TaskList findMatchingTasks(String searchTerm, TaskList taskList) {","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"limdanqi"},"content":"        TaskList listWithMatchingTasks \u003d new TaskList();","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"limdanqi"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"limdanqi"},"content":"            Task currentTask \u003d taskList.getTask(i);","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"limdanqi"},"content":"            String currentTaskName \u003d currentTask.getTaskName();","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"limdanqi"},"content":"            int isSearchTermPresent \u003d currentTaskName.indexOf(searchTerm);","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"limdanqi"},"content":"            if (isSearchTermPresent \u003e\u003d 0) {","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"limdanqi"},"content":"                listWithMatchingTasks.addTask(currentTask);","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"limdanqi"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"limdanqi"},"content":"        return listWithMatchingTasks;","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"limdanqi"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"limdanqi"},"content":"     * Executes the FindCommand object.","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"limdanqi"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":47,"author":{"gitId":"limdanqi"},"content":"     * @param taskList the current task list","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"limdanqi"},"content":"     * @param ui the ui object used","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"limdanqi"},"content":"     * @param storage the current storage","lastModifiedDate":"2021-09-05"},{"lineNumber":50,"author":{"gitId":"limdanqi"},"content":"     * @return a string message of the list of matching tasks","lastModifiedDate":"2021-09-05"},{"lineNumber":51,"author":{"gitId":"limdanqi"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":52,"author":{"gitId":"limdanqi"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"limdanqi"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-05"},{"lineNumber":54,"author":{"gitId":"limdanqi"},"content":"        TaskList listWithMatchingTasks \u003d findMatchingTasks(searchTerm, taskList);","lastModifiedDate":"2021-09-05"},{"lineNumber":55,"author":{"gitId":"limdanqi"},"content":"        return ui.showMatchingTasksMessage(listWithMatchingTasks);","lastModifiedDate":"2021-09-05"},{"lineNumber":56,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"limdanqi"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"limdanqi":57}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limdanqi"},"content":"package duke.command;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"limdanqi"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"limdanqi"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"limdanqi"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"limdanqi"},"content":"/**","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"limdanqi"},"content":" * ListCommand represents a command to show a user all tasks in the task list.","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"limdanqi"},"content":" */","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"limdanqi"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"limdanqi"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"limdanqi"},"content":"     * Executes the ListCommand object.","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"limdanqi"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"limdanqi"},"content":"     * @param taskList the current task list","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"limdanqi"},"content":"     * @param ui the ui object used","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"limdanqi"},"content":"     * @param storage the current storage","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"limdanqi"},"content":"     * @return a string message representation of all tasks in the task list","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"limdanqi"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"limdanqi"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"limdanqi"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"limdanqi"},"content":"        return ui.showAllTasks(taskList);","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"limdanqi"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"limdanqi":23}},{"path":"src/main/java/duke/data/DateAndTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limdanqi"},"content":"package duke.data;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"limdanqi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"limdanqi"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"limdanqi"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"limdanqi"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"limdanqi"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"limdanqi"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"limdanqi"},"content":"import duke.data.exceptions.InvalidDateAndTimeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"limdanqi"},"content":"import duke.ui.Message;","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"limdanqi"},"content":"//todo documentation","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"limdanqi"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"limdanqi"},"content":" * Represents a DateAndTime object that reformats the date and time provided by the user to a specified format.","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"limdanqi"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"limdanqi"},"content":"public class DateAndTime {","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"limdanqi"},"content":"    private String dateAndTimeFromCommand;","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"limdanqi"},"content":"    private boolean isDatePresent \u003d false;","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"limdanqi"},"content":"    private boolean isTimePresent \u003d false;","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"limdanqi"},"content":"    public DateAndTime(String dateAndTimeFromCommand) {","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"limdanqi"},"content":"        this.dateAndTimeFromCommand \u003d dateAndTimeFromCommand;","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"limdanqi"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"limdanqi"},"content":"     * Returns a string representing the reformatted date and time provided by the user.","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"limdanqi"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"limdanqi"},"content":"     * @return reformatted date and time","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"limdanqi"},"content":"     * @throws InvalidDateAndTimeException when date and time is not present in the command","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"limdanqi"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"limdanqi"},"content":"    public String getReformattedDateAndTime() throws InvalidDateAndTimeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"limdanqi"},"content":"        if (!isDateAndTimePresent()) {","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"limdanqi"},"content":"            throw new InvalidDateAndTimeException(Message.MESSAGE_INVALID_DATE_AND_TIME);","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"limdanqi"},"content":"        if (isDatePresent \u0026\u0026 isTimePresent) {","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"limdanqi"},"content":"            String dateAndTime \u003d getDate() + \"T\" + getTime();","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"limdanqi"},"content":"            LocalDateTime localDateTime \u003d LocalDateTime.parse(dateAndTime);","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"limdanqi"},"content":"            return localDateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy, HH:mm\"));","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"limdanqi"},"content":"        } else if (isDatePresent) {","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"limdanqi"},"content":"            String date \u003d getDate();","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"limdanqi"},"content":"            LocalDate localDate \u003d LocalDate.parse(date);","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"limdanqi"},"content":"            return localDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"limdanqi"},"content":"        } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"limdanqi"},"content":"            String time \u003d getTime();","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"limdanqi"},"content":"            LocalTime localTime \u003d LocalTime.parse(time);","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"limdanqi"},"content":"            return localTime.format(DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"limdanqi"},"content":"    private String getDate() throws InvalidDateAndTimeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":54,"author":{"gitId":"limdanqi"},"content":"        int firstSlashIndex \u003d dateAndTimeFromCommand.indexOf(\"/\");","lastModifiedDate":"2021-09-05"},{"lineNumber":55,"author":{"gitId":"limdanqi"},"content":"        int secondSlashIndex \u003d dateAndTimeFromCommand.lastIndexOf(\"/\");","lastModifiedDate":"2021-09-05"},{"lineNumber":56,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":57,"author":{"gitId":"limdanqi"},"content":"        if (firstSlashIndex \u003c 0 || secondSlashIndex \u003c 0) {","lastModifiedDate":"2021-09-05"},{"lineNumber":58,"author":{"gitId":"limdanqi"},"content":"            throw new InvalidDateAndTimeException(Message.MESSAGE_INVALID_DATE_AND_TIME);","lastModifiedDate":"2021-09-05"},{"lineNumber":59,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":60,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":61,"author":{"gitId":"limdanqi"},"content":"        int startingIndex \u003d firstSlashIndex - 2;","lastModifiedDate":"2021-09-05"},{"lineNumber":62,"author":{"gitId":"limdanqi"},"content":"        int endingIndex \u003d secondSlashIndex + 4;","lastModifiedDate":"2021-09-05"},{"lineNumber":63,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":64,"author":{"gitId":"limdanqi"},"content":"        boolean isIndexesValid \u003d startingIndex \u003e 0 || endingIndex \u003c\u003d dateAndTimeFromCommand.length() - 1;","lastModifiedDate":"2021-09-08"},{"lineNumber":65,"author":{"gitId":"limdanqi"},"content":"        if (!isIndexesValid) {","lastModifiedDate":"2021-09-05"},{"lineNumber":66,"author":{"gitId":"limdanqi"},"content":"            throw new InvalidDateAndTimeException(Message.MESSAGE_INVALID_DATE_AND_TIME);","lastModifiedDate":"2021-09-05"},{"lineNumber":67,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":68,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":69,"author":{"gitId":"limdanqi"},"content":"        boolean isDateCharactersValid \u003d isDateCharactersValid(startingIndex, endingIndex);","lastModifiedDate":"2021-09-08"},{"lineNumber":70,"author":{"gitId":"limdanqi"},"content":"        if (!isDateCharactersValid) {","lastModifiedDate":"2021-09-08"},{"lineNumber":71,"author":{"gitId":"limdanqi"},"content":"            throw new InvalidDateAndTimeException(Message.MESSAGE_INVALID_DATE_AND_TIME);","lastModifiedDate":"2021-09-05"},{"lineNumber":72,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":73,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":74,"author":{"gitId":"limdanqi"},"content":"        return isDateValid(startingIndex, endingIndex).toString();","lastModifiedDate":"2021-09-08"},{"lineNumber":75,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":76,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":77,"author":{"gitId":"limdanqi"},"content":"    private boolean isDateCharactersValid(int start, int end) throws InvalidDateAndTimeException {","lastModifiedDate":"2021-09-08"},{"lineNumber":78,"author":{"gitId":"limdanqi"},"content":"        for (int i \u003d start; i \u003c\u003d end; i++) {","lastModifiedDate":"2021-09-05"},{"lineNumber":79,"author":{"gitId":"limdanqi"},"content":"            char currentChar \u003d dateAndTimeFromCommand.charAt(i);","lastModifiedDate":"2021-09-05"},{"lineNumber":80,"author":{"gitId":"limdanqi"},"content":"            if ((i \u003d\u003d start + 2) || (i \u003d\u003d end - 4)) { //slash positions","lastModifiedDate":"2021-09-05"},{"lineNumber":81,"author":{"gitId":"limdanqi"},"content":"                if (currentChar !\u003d \u0027/\u0027) {","lastModifiedDate":"2021-09-05"},{"lineNumber":82,"author":{"gitId":"limdanqi"},"content":"                    throw new InvalidDateAndTimeException(Message.MESSAGE_INVALID_DATE);","lastModifiedDate":"2021-09-05"},{"lineNumber":83,"author":{"gitId":"limdanqi"},"content":"                }","lastModifiedDate":"2021-09-05"},{"lineNumber":84,"author":{"gitId":"limdanqi"},"content":"            } else {","lastModifiedDate":"2021-09-05"},{"lineNumber":85,"author":{"gitId":"limdanqi"},"content":"                if (!Character.isDigit(currentChar)) {","lastModifiedDate":"2021-09-05"},{"lineNumber":86,"author":{"gitId":"limdanqi"},"content":"                    throw new InvalidDateAndTimeException(Message.MESSAGE_INVALID_DATE);","lastModifiedDate":"2021-09-05"},{"lineNumber":87,"author":{"gitId":"limdanqi"},"content":"                }","lastModifiedDate":"2021-09-05"},{"lineNumber":88,"author":{"gitId":"limdanqi"},"content":"            }","lastModifiedDate":"2021-09-05"},{"lineNumber":89,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":90,"author":{"gitId":"limdanqi"},"content":"        return true;","lastModifiedDate":"2021-09-05"},{"lineNumber":91,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":92,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":93,"author":{"gitId":"limdanqi"},"content":"    private LocalDate isDateValid(int start, int end) throws InvalidDateAndTimeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":94,"author":{"gitId":"limdanqi"},"content":"        String dateInput \u003d dateAndTimeFromCommand.substring(start, end + 1);","lastModifiedDate":"2021-09-05"},{"lineNumber":95,"author":{"gitId":"limdanqi"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/uuuu\")","lastModifiedDate":"2021-09-08"},{"lineNumber":96,"author":{"gitId":"limdanqi"},"content":"                .withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2021-09-08"},{"lineNumber":97,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":98,"author":{"gitId":"limdanqi"},"content":"        try {","lastModifiedDate":"2021-09-05"},{"lineNumber":99,"author":{"gitId":"limdanqi"},"content":"            LocalDate date \u003d LocalDate.parse(dateInput, dateTimeFormatter);","lastModifiedDate":"2021-09-08"},{"lineNumber":100,"author":{"gitId":"limdanqi"},"content":"            return date;","lastModifiedDate":"2021-09-08"},{"lineNumber":101,"author":{"gitId":"limdanqi"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":102,"author":{"gitId":"limdanqi"},"content":"            throw new InvalidDateAndTimeException(e.getMessage()); //todo format error message?","lastModifiedDate":"2021-09-05"},{"lineNumber":103,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":104,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":105,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":106,"author":{"gitId":"limdanqi"},"content":"    private boolean isDateAndTimePresent() {","lastModifiedDate":"2021-09-05"},{"lineNumber":107,"author":{"gitId":"limdanqi"},"content":"        int colonIndex \u003d dateAndTimeFromCommand.indexOf(\":\");","lastModifiedDate":"2021-08-27"},{"lineNumber":108,"author":{"gitId":"limdanqi"},"content":"        int firstSlashIndex \u003d dateAndTimeFromCommand.indexOf(\"/\");","lastModifiedDate":"2021-08-27"},{"lineNumber":109,"author":{"gitId":"limdanqi"},"content":"        int secondSlashIndex \u003d dateAndTimeFromCommand.lastIndexOf(\"/\");","lastModifiedDate":"2021-09-05"},{"lineNumber":110,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":111,"author":{"gitId":"limdanqi"},"content":"        boolean isSlashesPresent \u003d firstSlashIndex \u003e\u003d 0 \u0026\u0026 secondSlashIndex \u003e\u003d 0;","lastModifiedDate":"2021-09-08"},{"lineNumber":112,"author":{"gitId":"limdanqi"},"content":"        boolean isDatePresent \u003d isSlashesPresent \u0026\u0026 (firstSlashIndex !\u003d secondSlashIndex);","lastModifiedDate":"2021-09-08"},{"lineNumber":113,"author":{"gitId":"limdanqi"},"content":"        boolean isTimePresent \u003d colonIndex \u003e 0;","lastModifiedDate":"2021-09-05"},{"lineNumber":114,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":115,"author":{"gitId":"limdanqi"},"content":"        if (!isDatePresent \u0026\u0026 !isTimePresent) {","lastModifiedDate":"2021-09-05"},{"lineNumber":116,"author":{"gitId":"limdanqi"},"content":"            return false;","lastModifiedDate":"2021-08-27"},{"lineNumber":117,"author":{"gitId":"limdanqi"},"content":"        } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":118,"author":{"gitId":"limdanqi"},"content":"            if (isDatePresent) {","lastModifiedDate":"2021-09-05"},{"lineNumber":119,"author":{"gitId":"limdanqi"},"content":"                this.isDatePresent \u003d true;","lastModifiedDate":"2021-09-05"},{"lineNumber":120,"author":{"gitId":"limdanqi"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":121,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":122,"author":{"gitId":"limdanqi"},"content":"            if (isTimePresent) {","lastModifiedDate":"2021-09-05"},{"lineNumber":123,"author":{"gitId":"limdanqi"},"content":"                this.isTimePresent \u003d true;","lastModifiedDate":"2021-09-05"},{"lineNumber":124,"author":{"gitId":"limdanqi"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":125,"author":{"gitId":"limdanqi"},"content":"            return true;","lastModifiedDate":"2021-08-27"},{"lineNumber":126,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":127,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":128,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":129,"author":{"gitId":"limdanqi"},"content":"    private String getTime() throws InvalidDateAndTimeException {","lastModifiedDate":"2021-09-08"},{"lineNumber":130,"author":{"gitId":"limdanqi"},"content":"        int colonIndex \u003d dateAndTimeFromCommand.indexOf(\":\");","lastModifiedDate":"2021-08-27"},{"lineNumber":131,"author":{"gitId":"limdanqi"},"content":"        int startingIndex \u003d colonIndex - 2;","lastModifiedDate":"2021-09-05"},{"lineNumber":132,"author":{"gitId":"limdanqi"},"content":"        int endingIndex \u003d colonIndex + 2;","lastModifiedDate":"2021-09-05"},{"lineNumber":133,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":134,"author":{"gitId":"limdanqi"},"content":"        if (startingIndex \u003c 0 || (endingIndex \u003e dateAndTimeFromCommand.length() - 1)) {","lastModifiedDate":"2021-09-08"},{"lineNumber":135,"author":{"gitId":"limdanqi"},"content":"            throw new InvalidDateAndTimeException(Message.MESSAGE_INVALID_TIME);","lastModifiedDate":"2021-09-05"},{"lineNumber":136,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":137,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":138,"author":{"gitId":"limdanqi"},"content":"        boolean isTimeFormatValid \u003d isTimeFormatValid(startingIndex, endingIndex);","lastModifiedDate":"2021-09-05"},{"lineNumber":139,"author":{"gitId":"limdanqi"},"content":"        if (!isTimeFormatValid) {","lastModifiedDate":"2021-09-08"},{"lineNumber":140,"author":{"gitId":"limdanqi"},"content":"            throw new InvalidDateAndTimeException(Message.MESSAGE_INVALID_TIME);","lastModifiedDate":"2021-09-05"},{"lineNumber":141,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":142,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":143,"author":{"gitId":"limdanqi"},"content":"        return isTimeValid(startingIndex, endingIndex).toString();","lastModifiedDate":"2021-09-08"},{"lineNumber":144,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":145,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":146,"author":{"gitId":"limdanqi"},"content":"    private boolean isTimeFormatValid(int start, int end) {","lastModifiedDate":"2021-09-08"},{"lineNumber":147,"author":{"gitId":"limdanqi"},"content":"        boolean isHourTensValid \u003d Character.isDigit(dateAndTimeFromCommand.charAt(start));","lastModifiedDate":"2021-09-05"},{"lineNumber":148,"author":{"gitId":"limdanqi"},"content":"        boolean isHourOnesValid \u003d Character.isDigit(dateAndTimeFromCommand.charAt(start + 1));","lastModifiedDate":"2021-09-05"},{"lineNumber":149,"author":{"gitId":"limdanqi"},"content":"        boolean isMinTensValid \u003d Character.isDigit(dateAndTimeFromCommand.charAt(end - 1));","lastModifiedDate":"2021-09-05"},{"lineNumber":150,"author":{"gitId":"limdanqi"},"content":"        boolean isMinOnesValid \u003d Character.isDigit(dateAndTimeFromCommand.charAt(end));","lastModifiedDate":"2021-09-05"},{"lineNumber":151,"author":{"gitId":"limdanqi"},"content":"        boolean isTimeLengthValid \u003d isTimeLengthValid(start, end);","lastModifiedDate":"2021-09-05"},{"lineNumber":152,"author":{"gitId":"limdanqi"},"content":"        return isHourTensValid \u0026\u0026 isHourOnesValid \u0026\u0026 isMinTensValid \u0026\u0026 isMinOnesValid \u0026\u0026 isTimeLengthValid;","lastModifiedDate":"2021-09-05"},{"lineNumber":153,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":154,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":155,"author":{"gitId":"limdanqi"},"content":"    private boolean isTimeLengthValid(int start, int end) {","lastModifiedDate":"2021-09-05"},{"lineNumber":156,"author":{"gitId":"limdanqi"},"content":"        if (start \u003d\u003d 0) { //only time is provided in the command","lastModifiedDate":"2021-09-08"},{"lineNumber":157,"author":{"gitId":"limdanqi"},"content":"            return end \u003d\u003d dateAndTimeFromCommand.length() - 1;","lastModifiedDate":"2021-09-05"},{"lineNumber":158,"author":{"gitId":"limdanqi"},"content":"        } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":159,"author":{"gitId":"limdanqi"},"content":"            return Character.isWhitespace(start - 1) \u0026\u0026 (end \u003d\u003d dateAndTimeFromCommand.length() - 1);","lastModifiedDate":"2021-09-05"},{"lineNumber":160,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":161,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":162,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":163,"author":{"gitId":"limdanqi"},"content":"    private LocalTime isTimeValid(int start, int end) throws InvalidDateAndTimeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":164,"author":{"gitId":"limdanqi"},"content":"        String timeInput \u003d dateAndTimeFromCommand.substring(start, end + 1);","lastModifiedDate":"2021-09-05"},{"lineNumber":165,"author":{"gitId":"limdanqi"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"HH:mm\")","lastModifiedDate":"2021-09-08"},{"lineNumber":166,"author":{"gitId":"limdanqi"},"content":"                .withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2021-09-08"},{"lineNumber":167,"author":{"gitId":"limdanqi"},"content":"        try {","lastModifiedDate":"2021-09-05"},{"lineNumber":168,"author":{"gitId":"limdanqi"},"content":"            LocalTime time \u003d LocalTime.parse(timeInput, dateTimeFormatter);","lastModifiedDate":"2021-09-08"},{"lineNumber":169,"author":{"gitId":"limdanqi"},"content":"            return time;","lastModifiedDate":"2021-09-08"},{"lineNumber":170,"author":{"gitId":"limdanqi"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":171,"author":{"gitId":"limdanqi"},"content":"            throw new InvalidDateAndTimeException(e.getMessage()); //todo format error message?","lastModifiedDate":"2021-09-05"},{"lineNumber":172,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":173,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":174,"author":{"gitId":"limdanqi"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"limdanqi":174}},{"path":"src/main/java/duke/data/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limdanqi"},"content":"package duke.data.exceptions;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"limdanqi"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"limdanqi"},"content":" * An abstract class DukeException that is a parent to all exceptions pertaining to Duke.","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"limdanqi"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"limdanqi"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"limdanqi"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"limdanqi"},"content":"     * Initialises a DukeException object.","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"limdanqi"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"limdanqi"},"content":"     * @param errorMessage error occurred when object is thrown","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"limdanqi"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"limdanqi"},"content":"    public DukeException (String errorMessage) {","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"limdanqi"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"limdanqi"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"limdanqi":15}},{"path":"src/main/java/duke/data/exceptions/EmptyCommandInformationException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limdanqi"},"content":"package duke.data.exceptions;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"limdanqi"},"content":"/**","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"limdanqi"},"content":" * Signals that there is an empty command information error.","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"limdanqi"},"content":" */","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"limdanqi"},"content":"public class EmptyCommandInformationException extends DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"limdanqi"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"limdanqi"},"content":"     * Initialises a EmptyCommandInformationException object.","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"limdanqi"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"limdanqi"},"content":"     * @param errorMessage contains the error message when an empty command information exception occurs","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"limdanqi"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"limdanqi"},"content":"    public EmptyCommandInformationException(String errorMessage) {","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"limdanqi"},"content":"        super(errorMessage);","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"limdanqi"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"limdanqi":15}},{"path":"src/main/java/duke/data/exceptions/EmptyTaskNameException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limdanqi"},"content":"package duke.data.exceptions;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"limdanqi"},"content":"/**","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"limdanqi"},"content":" * Signals that there is an empty task name error.","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"limdanqi"},"content":" */","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"limdanqi"},"content":"public class EmptyTaskNameException extends DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"limdanqi"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"limdanqi"},"content":"     * Initialises a EmptyTaskNameException object.","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"limdanqi"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"limdanqi"},"content":"     * @param errorMessage contains the error message when there is an empty task name","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"limdanqi"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"limdanqi"},"content":"    public EmptyTaskNameException(String errorMessage) {","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"limdanqi"},"content":"        super(errorMessage);","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"limdanqi"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"limdanqi":15}},{"path":"src/main/java/duke/data/exceptions/InvalidDateAndTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limdanqi"},"content":"package duke.data.exceptions;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"limdanqi"},"content":"/**","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"limdanqi"},"content":" * Signals that the date and time is invalid or missing.","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"limdanqi"},"content":" */","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"limdanqi"},"content":"public class InvalidDateAndTimeException extends DukeException {","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"limdanqi"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"limdanqi"},"content":"     * Initialises a InvalidDateAndTimeException object.","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"limdanqi"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"limdanqi"},"content":"     * @param errorMessage contains the error message pertaining to this exception","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"limdanqi"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"limdanqi"},"content":"    public InvalidDateAndTimeException(String errorMessage) {","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"limdanqi"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"limdanqi"},"content":"}","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"limdanqi":16}},{"path":"src/main/java/duke/data/exceptions/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limdanqi"},"content":"package duke.data.exceptions;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"limdanqi"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"limdanqi"},"content":" * Signals that the user input is invalid.","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"limdanqi"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"limdanqi"},"content":"public class InvalidInputException extends DukeException {","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"limdanqi"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"limdanqi"},"content":"     * @param errorMessage contains the specific error caused by invalid input","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"limdanqi"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"limdanqi"},"content":"    public InvalidInputException(String errorMessage) {","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"limdanqi"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"limdanqi"},"content":"}","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"limdanqi":14}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limdanqi"},"content":"package duke.parser;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"limdanqi"},"content":"import static duke.ui.Tag.DEADLINE;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"limdanqi"},"content":"import static duke.ui.Tag.DELETE;","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"limdanqi"},"content":"import static duke.ui.Tag.DONE;","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"limdanqi"},"content":"import static duke.ui.Tag.EVENT;","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"limdanqi"},"content":"import static duke.ui.Tag.EXIT;","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"limdanqi"},"content":"import static duke.ui.Tag.FIND;","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"limdanqi"},"content":"import static duke.ui.Tag.LIST;","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"limdanqi"},"content":"import static duke.ui.Tag.TODO;","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"limdanqi"},"content":"import duke.command.AddTaskCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"limdanqi"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"limdanqi"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"limdanqi"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"limdanqi"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"limdanqi"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"limdanqi"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"limdanqi"},"content":"import duke.data.DateAndTime;","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"limdanqi"},"content":"import duke.data.exceptions.DukeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"limdanqi"},"content":"import duke.data.exceptions.EmptyCommandInformationException;","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"limdanqi"},"content":"import duke.data.exceptions.EmptyTaskNameException;","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"limdanqi"},"content":"import duke.data.exceptions.InvalidDateAndTimeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"limdanqi"},"content":"import duke.data.exceptions.InvalidInputException;","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"limdanqi"},"content":"import duke.ui.Message;","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"limdanqi"},"content":"import duke.ui.Tag;","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"limdanqi"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"limdanqi"},"content":" * Represents a parser that makes sense of what the user input is.","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"limdanqi"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"limdanqi"},"content":"public class Parser {","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"limdanqi"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"limdanqi"},"content":"     * Initialises a Parser object.","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"limdanqi"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"limdanqi"},"content":"    public Parser() {}","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"limdanqi"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"limdanqi"},"content":"     * Returns a Command corresponding to the user input.","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"limdanqi"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"limdanqi"},"content":"     * @param command user input","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"limdanqi"},"content":"     * @return a Command object","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"limdanqi"},"content":"     * @throws DukeException when an error occurs while parsing the command","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"limdanqi"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"limdanqi"},"content":"    public Command parse(String command) throws DukeException {","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"limdanqi"},"content":"        Command.CommandType commandType \u003d getCommandType(command);","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"limdanqi"},"content":"        switch (commandType) {","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"limdanqi"},"content":"        case TODO:","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"limdanqi"},"content":"            String todoName \u003d getTaskName(command, commandType);","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"limdanqi"},"content":"            return new AddTaskCommand(Command.CommandType.TODO, todoName);","lastModifiedDate":"2021-09-05"},{"lineNumber":51,"author":{"gitId":"limdanqi"},"content":"        case DEADLINE:","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"limdanqi"},"content":"            String deadlineName \u003d getTaskName(command, commandType);","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"limdanqi"},"content":"            String deadline \u003d getDateAndTime(command, Command.CommandType.DEADLINE);","lastModifiedDate":"2021-09-05"},{"lineNumber":54,"author":{"gitId":"limdanqi"},"content":"            return new AddTaskCommand(Command.CommandType.DEADLINE, deadlineName, deadline);","lastModifiedDate":"2021-09-05"},{"lineNumber":55,"author":{"gitId":"limdanqi"},"content":"        case EVENT:","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"limdanqi"},"content":"            String eventName \u003d getTaskName(command, commandType);","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"limdanqi"},"content":"            String eventTime \u003d getDateAndTime(command, Command.CommandType.EVENT);","lastModifiedDate":"2021-09-05"},{"lineNumber":58,"author":{"gitId":"limdanqi"},"content":"            return new AddTaskCommand(Command.CommandType.EVENT, eventName, eventTime);","lastModifiedDate":"2021-09-05"},{"lineNumber":59,"author":{"gitId":"limdanqi"},"content":"        case EXIT:","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"limdanqi"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-09-05"},{"lineNumber":61,"author":{"gitId":"limdanqi"},"content":"        case LIST:","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"limdanqi"},"content":"            return new ListCommand();","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"limdanqi"},"content":"        case DONE:","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"limdanqi"},"content":"            int markedTaskNumber \u003d getTaskNumber(command);","lastModifiedDate":"2021-09-05"},{"lineNumber":65,"author":{"gitId":"limdanqi"},"content":"            return new DoneCommand(markedTaskNumber);","lastModifiedDate":"2021-09-05"},{"lineNumber":66,"author":{"gitId":"limdanqi"},"content":"        case DELETE:","lastModifiedDate":"2021-08-28"},{"lineNumber":67,"author":{"gitId":"limdanqi"},"content":"            int deletedTaskNumber \u003d getTaskNumber(command);","lastModifiedDate":"2021-09-05"},{"lineNumber":68,"author":{"gitId":"limdanqi"},"content":"            return new DeleteCommand(deletedTaskNumber);","lastModifiedDate":"2021-09-05"},{"lineNumber":69,"author":{"gitId":"limdanqi"},"content":"        case FIND:","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"limdanqi"},"content":"            String searchTerm \u003d getSearchTerm(command);","lastModifiedDate":"2021-09-05"},{"lineNumber":71,"author":{"gitId":"limdanqi"},"content":"            return new FindCommand(searchTerm);","lastModifiedDate":"2021-09-05"},{"lineNumber":72,"author":{"gitId":"limdanqi"},"content":"        default:","lastModifiedDate":"2021-08-28"},{"lineNumber":73,"author":{"gitId":"limdanqi"},"content":"            throw new InvalidInputException(Message.MESSAGE_INVALID_COMMAND);","lastModifiedDate":"2021-09-05"},{"lineNumber":74,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":76,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":77,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":78,"author":{"gitId":"limdanqi"},"content":"    private String getTaskName(String command, Command.CommandType commandType) throws InvalidInputException,","lastModifiedDate":"2021-09-05"},{"lineNumber":79,"author":{"gitId":"limdanqi"},"content":"            EmptyTaskNameException, InvalidDateAndTimeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":80,"author":{"gitId":"limdanqi"},"content":"        String[] splitCommandArray \u003d command.split(Tag.NAME, 2);","lastModifiedDate":"2021-09-05"},{"lineNumber":81,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":82,"author":{"gitId":"limdanqi"},"content":"        switch (commandType) {","lastModifiedDate":"2021-09-05"},{"lineNumber":83,"author":{"gitId":"limdanqi"},"content":"        case TODO:","lastModifiedDate":"2021-09-05"},{"lineNumber":84,"author":{"gitId":"limdanqi"},"content":"            if (splitCommandArray.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-05"},{"lineNumber":85,"author":{"gitId":"limdanqi"},"content":"                throw new EmptyTaskNameException(Message.MESSAGE_EMPTY_TODO_NAME);","lastModifiedDate":"2021-09-05"},{"lineNumber":86,"author":{"gitId":"limdanqi"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":87,"author":{"gitId":"limdanqi"},"content":"            return splitCommandArray[1].trim();","lastModifiedDate":"2021-09-05"},{"lineNumber":88,"author":{"gitId":"limdanqi"},"content":"        case DEADLINE:","lastModifiedDate":"2021-09-05"},{"lineNumber":89,"author":{"gitId":"limdanqi"},"content":"            if (splitCommandArray.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-05"},{"lineNumber":90,"author":{"gitId":"limdanqi"},"content":"                throw new EmptyTaskNameException(Message.MESSAGE_EMPTY_DEADLINE_NAME);","lastModifiedDate":"2021-09-05"},{"lineNumber":91,"author":{"gitId":"limdanqi"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":92,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":93,"author":{"gitId":"limdanqi"},"content":"            String[] nameAndDateArray \u003d splitCommandArray[1].split(Tag.DATE_AND_TIME, 2);","lastModifiedDate":"2021-09-08"},{"lineNumber":94,"author":{"gitId":"limdanqi"},"content":"            if (nameAndDateArray.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-05"},{"lineNumber":95,"author":{"gitId":"limdanqi"},"content":"                throw new InvalidDateAndTimeException(Message.MESSAGE_MISSING_DEADLINE);","lastModifiedDate":"2021-09-05"},{"lineNumber":96,"author":{"gitId":"limdanqi"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":97,"author":{"gitId":"limdanqi"},"content":"            return nameAndDateArray[0].trim();","lastModifiedDate":"2021-09-05"},{"lineNumber":98,"author":{"gitId":"limdanqi"},"content":"        case EVENT:","lastModifiedDate":"2021-09-05"},{"lineNumber":99,"author":{"gitId":"limdanqi"},"content":"            if (splitCommandArray.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-05"},{"lineNumber":100,"author":{"gitId":"limdanqi"},"content":"                throw new EmptyTaskNameException(Message.MESSAGE_EMPTY_EVENT_NAME);","lastModifiedDate":"2021-09-05"},{"lineNumber":101,"author":{"gitId":"limdanqi"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":102,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":103,"author":{"gitId":"limdanqi"},"content":"            String[] nameAndEventTimeArray \u003d splitCommandArray[1].split(Tag.DATE_AND_TIME, 2);","lastModifiedDate":"2021-09-08"},{"lineNumber":104,"author":{"gitId":"limdanqi"},"content":"            if (nameAndEventTimeArray.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-05"},{"lineNumber":105,"author":{"gitId":"limdanqi"},"content":"                throw new InvalidDateAndTimeException(Message.MESSAGE_MISSING_EVENT_TIME);","lastModifiedDate":"2021-09-05"},{"lineNumber":106,"author":{"gitId":"limdanqi"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":107,"author":{"gitId":"limdanqi"},"content":"            return nameAndEventTimeArray[0].trim();","lastModifiedDate":"2021-09-05"},{"lineNumber":108,"author":{"gitId":"limdanqi"},"content":"        default:","lastModifiedDate":"2021-09-05"},{"lineNumber":109,"author":{"gitId":"limdanqi"},"content":"            throw new InvalidInputException(Message.MESSAGE_INVALID_COMMAND);","lastModifiedDate":"2021-09-05"},{"lineNumber":110,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":111,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":112,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":113,"author":{"gitId":"limdanqi"},"content":"    private String getDateAndTime(String message, Command.CommandType taskType) throws InvalidDateAndTimeException,","lastModifiedDate":"2021-09-08"},{"lineNumber":114,"author":{"gitId":"limdanqi"},"content":"            InvalidInputException {","lastModifiedDate":"2021-09-08"},{"lineNumber":115,"author":{"gitId":"limdanqi"},"content":"        String[] splitCommandArray \u003d message.split(Tag.DATE_AND_TIME, 2);","lastModifiedDate":"2021-09-08"},{"lineNumber":116,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":117,"author":{"gitId":"limdanqi"},"content":"        if (splitCommandArray.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-08"},{"lineNumber":118,"author":{"gitId":"limdanqi"},"content":"            switch (taskType) {","lastModifiedDate":"2021-08-28"},{"lineNumber":119,"author":{"gitId":"limdanqi"},"content":"            case DEADLINE:","lastModifiedDate":"2021-08-28"},{"lineNumber":120,"author":{"gitId":"limdanqi"},"content":"                throw new InvalidDateAndTimeException(Message.MESSAGE_MISSING_DEADLINE);","lastModifiedDate":"2021-09-05"},{"lineNumber":121,"author":{"gitId":"limdanqi"},"content":"            case EVENT:","lastModifiedDate":"2021-08-28"},{"lineNumber":122,"author":{"gitId":"limdanqi"},"content":"                throw new InvalidDateAndTimeException(Message.MESSAGE_MISSING_EVENT_TIME);","lastModifiedDate":"2021-09-05"},{"lineNumber":123,"author":{"gitId":"limdanqi"},"content":"            default:","lastModifiedDate":"2021-08-28"},{"lineNumber":124,"author":{"gitId":"limdanqi"},"content":"                assert false : \"Invalid task type for :getDateAndTime\";","lastModifiedDate":"2021-09-07"},{"lineNumber":125,"author":{"gitId":"limdanqi"},"content":"                throw new AssertionError(taskType);","lastModifiedDate":"2021-09-07"},{"lineNumber":126,"author":{"gitId":"limdanqi"},"content":"            }","lastModifiedDate":"2021-09-08"},{"lineNumber":127,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":128,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":129,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":130,"author":{"gitId":"limdanqi"},"content":"        DateAndTime dateAndTime \u003d new DateAndTime(splitCommandArray[1].trim());","lastModifiedDate":"2021-09-08"},{"lineNumber":131,"author":{"gitId":"limdanqi"},"content":"        return dateAndTime.getReformattedDateAndTime();","lastModifiedDate":"2021-09-08"},{"lineNumber":132,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":133,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":134,"author":{"gitId":"limdanqi"},"content":"    private static int getTaskNumber (String message) throws InvalidInputException {","lastModifiedDate":"2021-08-28"},{"lineNumber":135,"author":{"gitId":"limdanqi"},"content":"        String taskNumberString \u003d \"\";","lastModifiedDate":"2021-09-05"},{"lineNumber":136,"author":{"gitId":"limdanqi"},"content":"        for (int i \u003d 0; i \u003c message.length(); i++) {","lastModifiedDate":"2021-08-28"},{"lineNumber":137,"author":{"gitId":"limdanqi"},"content":"            char currentChar \u003d message.charAt(i);","lastModifiedDate":"2021-08-28"},{"lineNumber":138,"author":{"gitId":"limdanqi"},"content":"            if (!taskNumberString.isEmpty() \u0026\u0026 Character.isWhitespace(currentChar)) {","lastModifiedDate":"2021-09-05"},{"lineNumber":139,"author":{"gitId":"limdanqi"},"content":"                break; //task number string complete","lastModifiedDate":"2021-08-28"},{"lineNumber":140,"author":{"gitId":"limdanqi"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":141,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":142,"author":{"gitId":"limdanqi"},"content":"            if (Character.isDigit(currentChar)) {","lastModifiedDate":"2021-09-05"},{"lineNumber":143,"author":{"gitId":"limdanqi"},"content":"                taskNumberString +\u003d message.charAt(i);","lastModifiedDate":"2021-09-05"},{"lineNumber":144,"author":{"gitId":"limdanqi"},"content":"            }","lastModifiedDate":"2021-09-05"},{"lineNumber":145,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":146,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":147,"author":{"gitId":"limdanqi"},"content":"        if (taskNumberString.isEmpty()) {","lastModifiedDate":"2021-09-05"},{"lineNumber":148,"author":{"gitId":"limdanqi"},"content":"            throw new InvalidInputException(Message.MESSAGE_INVALID_TASK_NUMBER);","lastModifiedDate":"2021-09-05"},{"lineNumber":149,"author":{"gitId":"limdanqi"},"content":"        } else {","lastModifiedDate":"2021-08-28"},{"lineNumber":150,"author":{"gitId":"limdanqi"},"content":"            return Integer.parseInt(taskNumberString);","lastModifiedDate":"2021-09-05"},{"lineNumber":151,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":152,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":153,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":154,"author":{"gitId":"limdanqi"},"content":"    private String getSearchTerm(String message) {","lastModifiedDate":"2021-09-05"},{"lineNumber":155,"author":{"gitId":"limdanqi"},"content":"        int spaceIndex \u003d message.indexOf(\" \");","lastModifiedDate":"2021-09-05"},{"lineNumber":156,"author":{"gitId":"limdanqi"},"content":"        return message.substring(spaceIndex + 1);","lastModifiedDate":"2021-09-05"},{"lineNumber":157,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":158,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":159,"author":{"gitId":"limdanqi"},"content":"    private Command.CommandType getCommandType(String command) throws InvalidInputException,","lastModifiedDate":"2021-09-08"},{"lineNumber":160,"author":{"gitId":"limdanqi"},"content":"            EmptyCommandInformationException {","lastModifiedDate":"2021-09-08"},{"lineNumber":161,"author":{"gitId":"limdanqi"},"content":"        String commandTypeString \u003d getCommandTypeString(command);","lastModifiedDate":"2021-09-05"},{"lineNumber":162,"author":{"gitId":"limdanqi"},"content":"        assert commandTypeString.length() \u003e 0 : \"CommandType string length should be more than 0\";","lastModifiedDate":"2021-09-07"},{"lineNumber":163,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":164,"author":{"gitId":"limdanqi"},"content":"        switch (commandTypeString) {","lastModifiedDate":"2021-09-05"},{"lineNumber":165,"author":{"gitId":"limdanqi"},"content":"        case TODO:","lastModifiedDate":"2021-09-05"},{"lineNumber":166,"author":{"gitId":"limdanqi"},"content":"            return Command.CommandType.TODO;","lastModifiedDate":"2021-09-05"},{"lineNumber":167,"author":{"gitId":"limdanqi"},"content":"        case EVENT:","lastModifiedDate":"2021-09-05"},{"lineNumber":168,"author":{"gitId":"limdanqi"},"content":"            return Command.CommandType.EVENT;","lastModifiedDate":"2021-09-05"},{"lineNumber":169,"author":{"gitId":"limdanqi"},"content":"        case DEADLINE:","lastModifiedDate":"2021-09-05"},{"lineNumber":170,"author":{"gitId":"limdanqi"},"content":"            return Command.CommandType.DEADLINE;","lastModifiedDate":"2021-09-05"},{"lineNumber":171,"author":{"gitId":"limdanqi"},"content":"        case DELETE:","lastModifiedDate":"2021-09-05"},{"lineNumber":172,"author":{"gitId":"limdanqi"},"content":"            return Command.CommandType.DELETE;","lastModifiedDate":"2021-09-05"},{"lineNumber":173,"author":{"gitId":"limdanqi"},"content":"        case LIST:","lastModifiedDate":"2021-09-05"},{"lineNumber":174,"author":{"gitId":"limdanqi"},"content":"            return Command.CommandType.LIST;","lastModifiedDate":"2021-09-05"},{"lineNumber":175,"author":{"gitId":"limdanqi"},"content":"        case EXIT:","lastModifiedDate":"2021-09-05"},{"lineNumber":176,"author":{"gitId":"limdanqi"},"content":"            return Command.CommandType.EXIT;","lastModifiedDate":"2021-09-05"},{"lineNumber":177,"author":{"gitId":"limdanqi"},"content":"        case FIND:","lastModifiedDate":"2021-09-05"},{"lineNumber":178,"author":{"gitId":"limdanqi"},"content":"            return Command.CommandType.FIND;","lastModifiedDate":"2021-09-05"},{"lineNumber":179,"author":{"gitId":"limdanqi"},"content":"        case DONE:","lastModifiedDate":"2021-09-05"},{"lineNumber":180,"author":{"gitId":"limdanqi"},"content":"            return Command.CommandType.DONE;","lastModifiedDate":"2021-09-05"},{"lineNumber":181,"author":{"gitId":"limdanqi"},"content":"        default:","lastModifiedDate":"2021-09-05"},{"lineNumber":182,"author":{"gitId":"limdanqi"},"content":"            throw new InvalidInputException(Message.MESSAGE_INVALID_COMMAND);","lastModifiedDate":"2021-09-05"},{"lineNumber":183,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":184,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":185,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":186,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":187,"author":{"gitId":"limdanqi"},"content":"    private String getCommandTypeString(String command) throws InvalidInputException, EmptyCommandInformationException {","lastModifiedDate":"2021-09-05"},{"lineNumber":188,"author":{"gitId":"limdanqi"},"content":"        int spaceIndex \u003d command.indexOf(\" \");","lastModifiedDate":"2021-09-05"},{"lineNumber":189,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":190,"author":{"gitId":"limdanqi"},"content":"        if (command.equals(LIST)) {","lastModifiedDate":"2021-09-08"},{"lineNumber":191,"author":{"gitId":"limdanqi"},"content":"            return LIST;","lastModifiedDate":"2021-09-05"},{"lineNumber":192,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":193,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":194,"author":{"gitId":"limdanqi"},"content":"        if (command.equals(EXIT)) {","lastModifiedDate":"2021-09-08"},{"lineNumber":195,"author":{"gitId":"limdanqi"},"content":"            return EXIT;","lastModifiedDate":"2021-09-05"},{"lineNumber":196,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":197,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":198,"author":{"gitId":"limdanqi"},"content":"        //Checks for invalid input","lastModifiedDate":"2021-09-05"},{"lineNumber":199,"author":{"gitId":"limdanqi"},"content":"        if (spaceIndex \u003c 0) {","lastModifiedDate":"2021-09-05"},{"lineNumber":200,"author":{"gitId":"limdanqi"},"content":"            checkOnlyCommandTypeStringKeyed(command);","lastModifiedDate":"2021-09-05"},{"lineNumber":201,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":202,"author":{"gitId":"limdanqi"},"content":"        return command.substring(0, spaceIndex);","lastModifiedDate":"2021-09-05"},{"lineNumber":203,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":204,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":205,"author":{"gitId":"limdanqi"},"content":"    /** Throws the corresponding error when only the command type is keyed in without any information */","lastModifiedDate":"2021-09-08"},{"lineNumber":206,"author":{"gitId":"limdanqi"},"content":"    private void checkOnlyCommandTypeStringKeyed(String command) throws EmptyCommandInformationException,","lastModifiedDate":"2021-09-05"},{"lineNumber":207,"author":{"gitId":"limdanqi"},"content":"            InvalidInputException {","lastModifiedDate":"2021-09-05"},{"lineNumber":208,"author":{"gitId":"limdanqi"},"content":"        assert command.length() \u003e 0 : \"command string length should be more than 0\";","lastModifiedDate":"2021-09-07"},{"lineNumber":209,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":210,"author":{"gitId":"limdanqi"},"content":"        switch (command) {","lastModifiedDate":"2021-09-05"},{"lineNumber":211,"author":{"gitId":"limdanqi"},"content":"        case TODO:","lastModifiedDate":"2021-09-05"},{"lineNumber":212,"author":{"gitId":"limdanqi"},"content":"            throw new EmptyCommandInformationException(Message.MESSAGE_EMPTY_TODO);","lastModifiedDate":"2021-09-05"},{"lineNumber":213,"author":{"gitId":"limdanqi"},"content":"        case DEADLINE:","lastModifiedDate":"2021-09-05"},{"lineNumber":214,"author":{"gitId":"limdanqi"},"content":"            throw new EmptyCommandInformationException(Message.MESSAGE_EMPTY_DEADLINE);","lastModifiedDate":"2021-09-05"},{"lineNumber":215,"author":{"gitId":"limdanqi"},"content":"        case EVENT:","lastModifiedDate":"2021-09-05"},{"lineNumber":216,"author":{"gitId":"limdanqi"},"content":"            throw new EmptyCommandInformationException(Message.MESSAGE_EMPTY_EVENT);","lastModifiedDate":"2021-09-05"},{"lineNumber":217,"author":{"gitId":"limdanqi"},"content":"        case DONE:","lastModifiedDate":"2021-09-05"},{"lineNumber":218,"author":{"gitId":"limdanqi"},"content":"        case DELETE:","lastModifiedDate":"2021-09-05"},{"lineNumber":219,"author":{"gitId":"limdanqi"},"content":"            throw new EmptyCommandInformationException(Message.MESSAGE_INVALID_TASK_NUMBER);","lastModifiedDate":"2021-09-05"},{"lineNumber":220,"author":{"gitId":"limdanqi"},"content":"        case FIND:","lastModifiedDate":"2021-09-05"},{"lineNumber":221,"author":{"gitId":"limdanqi"},"content":"            throw new EmptyCommandInformationException(Message.MESSAGE_INVALID_FIND);","lastModifiedDate":"2021-09-05"},{"lineNumber":222,"author":{"gitId":"limdanqi"},"content":"        default:","lastModifiedDate":"2021-09-05"},{"lineNumber":223,"author":{"gitId":"limdanqi"},"content":"            throw new InvalidInputException(Message.MESSAGE_INVALID_COMMAND);","lastModifiedDate":"2021-09-05"},{"lineNumber":224,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":225,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":226,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":227,"author":{"gitId":"limdanqi"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"limdanqi":227}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limdanqi"},"content":"package duke.storage;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"limdanqi"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"limdanqi"},"content":"import java.io.File;","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"limdanqi"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"limdanqi"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"limdanqi"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"limdanqi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"limdanqi"},"content":"import java.util.List;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"limdanqi"},"content":"import duke.data.exceptions.DukeException;","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"limdanqi"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"limdanqi"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"limdanqi"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"limdanqi"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"limdanqi"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"limdanqi"},"content":"import duke.ui.Message;","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"limdanqi"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"limdanqi"},"content":" * Stores the tasks and data provided by the user, so that when the program re-opens data can be restored.","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"limdanqi"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"limdanqi"},"content":"public class Storage {","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"limdanqi"},"content":"    private File dataFile;","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"limdanqi"},"content":"    private TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"limdanqi"},"content":"    public Storage(String storagePath) {","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"limdanqi"},"content":"        dataFile \u003d new File(storagePath);","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"limdanqi"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"limdanqi"},"content":"     * Loads the stored data into the program when it restarts.","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"limdanqi"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"limdanqi"},"content":"     * @return a list of stored tasks","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"limdanqi"},"content":"     * @throws IOException","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"limdanqi"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"limdanqi"},"content":"    public List\u003cTask\u003e load() throws IOException, DukeException {","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"limdanqi"},"content":"        return txtToList(dataFile);","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"limdanqi"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"limdanqi"},"content":"     * Converts a TaskList into a txt file to be stored.","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"limdanqi"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"limdanqi"},"content":"     * @param fileWriter","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"limdanqi"},"content":"     * @throws IOException","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"limdanqi"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"limdanqi"},"content":"    public void listToTxt(FileWriter fileWriter) throws IOException {","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"limdanqi"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"limdanqi"},"content":"            String currentTask \u003d taskList.getTask(i).toString() + \"\\n\";","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"limdanqi"},"content":"            fileWriter.write(currentTask);","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"limdanqi"},"content":"        fileWriter.close();","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"limdanqi"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"limdanqi"},"content":"     * Converts a txt file into a list of tasks to be loaded when the program restarts.","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"limdanqi"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"limdanqi"},"content":"     * @param dataFile","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"limdanqi"},"content":"     * @return a list of stored tasks","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"limdanqi"},"content":"     * @throws IOException","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"limdanqi"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"limdanqi"},"content":"    public List\u003cTask\u003e txtToList(File dataFile) throws IOException, DukeException {","lastModifiedDate":"2021-09-08"},{"lineNumber":63,"author":{"gitId":"limdanqi"},"content":"        assert dataFile.exists() : \"Data file does not exist\";","lastModifiedDate":"2021-09-07"},{"lineNumber":64,"author":{"gitId":"limdanqi"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"limdanqi"},"content":"        String currentTaskString;","lastModifiedDate":"2021-09-08"},{"lineNumber":66,"author":{"gitId":"limdanqi"},"content":"        BufferedReader reader \u003d new BufferedReader(new FileReader(dataFile));","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"limdanqi"},"content":"        do {","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"limdanqi"},"content":"            currentTaskString \u003d reader.readLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"limdanqi"},"content":"            if (currentTaskString !\u003d null) {","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"limdanqi"},"content":"                Task currentTask \u003d getTaskFromString(currentTaskString);","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"limdanqi"},"content":"                taskList.add(currentTask);","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"limdanqi"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"limdanqi"},"content":"        } while (currentTaskString !\u003d null);","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"limdanqi"},"content":"        return taskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"limdanqi"},"content":"    private Task getTaskFromString(String taskString) throws DukeException {","lastModifiedDate":"2021-09-08"},{"lineNumber":81,"author":{"gitId":"limdanqi"},"content":"        String taskType \u003d getTaskTypeFromString(taskString);","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"limdanqi"},"content":"        String taskName \u003d getTaskNameFromString(taskString);","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"limdanqi"},"content":"        boolean taskStatus \u003d getTaskStatusFromString(taskString);","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"limdanqi"},"content":"        switch (taskType) {","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"limdanqi"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"limdanqi"},"content":"            return new Todo(taskName, taskStatus);","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"limdanqi"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"limdanqi"},"content":"            String deadline \u003d getDateAndTimeFromString(taskString);","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"limdanqi"},"content":"            return new Deadline(taskName, deadline, taskStatus);","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"limdanqi"},"content":"        case \"event\":","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"limdanqi"},"content":"            String eventTime \u003d getDateAndTimeFromString(taskString);","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"limdanqi"},"content":"            return new Event(taskName, eventTime, taskStatus);","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"limdanqi"},"content":"        default:","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"limdanqi"},"content":"            throw new DukeException(Message.MESSAGE_TXT_TO_LIST_CONVERSION_ERROR);","lastModifiedDate":"2021-09-08"},{"lineNumber":96,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":99,"author":{"gitId":"limdanqi"},"content":"    private boolean getTaskStatusFromString(String taskString) {","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"limdanqi"},"content":"        String status \u003d Character.toString(taskString.charAt(4));","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"limdanqi"},"content":"        return status.equals(\"X\");","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":104,"author":{"gitId":"limdanqi"},"content":"    private String getTaskNameFromString(String taskString) {","lastModifiedDate":"2021-08-26"},{"lineNumber":105,"author":{"gitId":"limdanqi"},"content":"        int startingIndex \u003d taskString.indexOf(\"] \");","lastModifiedDate":"2021-09-08"},{"lineNumber":106,"author":{"gitId":"limdanqi"},"content":"        int endingIndex \u003d taskString.indexOf(\"(\");","lastModifiedDate":"2021-08-26"},{"lineNumber":107,"author":{"gitId":"limdanqi"},"content":"        boolean isStartingIndexValid \u003d startingIndex \u003e 0;","lastModifiedDate":"2021-09-07"},{"lineNumber":108,"author":{"gitId":"limdanqi"},"content":"        assert isStartingIndexValid : \"Invalid task format in txt\";","lastModifiedDate":"2021-09-07"},{"lineNumber":109,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":110,"author":{"gitId":"limdanqi"},"content":"        if (endingIndex \u003c 0) { //case of todo","lastModifiedDate":"2021-08-26"},{"lineNumber":111,"author":{"gitId":"limdanqi"},"content":"            return taskString.substring(startingIndex + 2);","lastModifiedDate":"2021-08-26"},{"lineNumber":112,"author":{"gitId":"limdanqi"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":113,"author":{"gitId":"limdanqi"},"content":"            return taskString.substring(startingIndex + 2, endingIndex - 1);","lastModifiedDate":"2021-09-05"},{"lineNumber":114,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":115,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":116,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":117,"author":{"gitId":"limdanqi"},"content":"    private String getDateAndTimeFromString(String taskString) {","lastModifiedDate":"2021-08-26"},{"lineNumber":118,"author":{"gitId":"limdanqi"},"content":"        int startingIndex \u003d taskString.indexOf(\":\");","lastModifiedDate":"2021-08-26"},{"lineNumber":119,"author":{"gitId":"limdanqi"},"content":"        int endingIndex \u003d taskString.indexOf(\")\");","lastModifiedDate":"2021-08-26"},{"lineNumber":120,"author":{"gitId":"limdanqi"},"content":"        assert startingIndex \u003e 0 \u0026\u0026 endingIndex \u003e 0 : \"Invalid task format in txt\";","lastModifiedDate":"2021-09-07"},{"lineNumber":121,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":122,"author":{"gitId":"limdanqi"},"content":"        return taskString.substring(startingIndex + 2, endingIndex);","lastModifiedDate":"2021-09-05"},{"lineNumber":123,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":124,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":125,"author":{"gitId":"limdanqi"},"content":"    private String getTaskTypeFromString(String taskString) throws DukeException {","lastModifiedDate":"2021-09-08"},{"lineNumber":126,"author":{"gitId":"limdanqi"},"content":"        char taskType \u003d taskString.charAt(1);","lastModifiedDate":"2021-09-08"},{"lineNumber":127,"author":{"gitId":"limdanqi"},"content":"        switch (taskType) {","lastModifiedDate":"2021-08-26"},{"lineNumber":128,"author":{"gitId":"limdanqi"},"content":"        case \u0027T\u0027:","lastModifiedDate":"2021-08-26"},{"lineNumber":129,"author":{"gitId":"limdanqi"},"content":"            return \"todo\";","lastModifiedDate":"2021-08-26"},{"lineNumber":130,"author":{"gitId":"limdanqi"},"content":"        case \u0027D\u0027:","lastModifiedDate":"2021-08-26"},{"lineNumber":131,"author":{"gitId":"limdanqi"},"content":"            return \"deadline\";","lastModifiedDate":"2021-08-26"},{"lineNumber":132,"author":{"gitId":"limdanqi"},"content":"        case \u0027E\u0027:","lastModifiedDate":"2021-08-26"},{"lineNumber":133,"author":{"gitId":"limdanqi"},"content":"            return \"event\";","lastModifiedDate":"2021-08-26"},{"lineNumber":134,"author":{"gitId":"limdanqi"},"content":"        default:","lastModifiedDate":"2021-08-26"},{"lineNumber":135,"author":{"gitId":"limdanqi"},"content":"            assert false : \"Invalid task type from txt\";","lastModifiedDate":"2021-09-07"},{"lineNumber":136,"author":{"gitId":"limdanqi"},"content":"            throw new DukeException(Message.MESSAGE_TXT_TO_LIST_CONVERSION_ERROR);","lastModifiedDate":"2021-09-08"},{"lineNumber":137,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":138,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":139,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":140,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":141,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":142,"author":{"gitId":"limdanqi"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":143,"author":{"gitId":"limdanqi"},"content":"     * Saves the task list into the storage.","lastModifiedDate":"2021-08-29"},{"lineNumber":144,"author":{"gitId":"limdanqi"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":145,"author":{"gitId":"limdanqi"},"content":"    public void saveData() {","lastModifiedDate":"2021-08-26"},{"lineNumber":146,"author":{"gitId":"limdanqi"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":147,"author":{"gitId":"limdanqi"},"content":"            FileWriter fileWriter \u003d new FileWriter(dataFile);","lastModifiedDate":"2021-09-05"},{"lineNumber":148,"author":{"gitId":"limdanqi"},"content":"            listToTxt(fileWriter);","lastModifiedDate":"2021-08-26"},{"lineNumber":149,"author":{"gitId":"limdanqi"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":150,"author":{"gitId":"limdanqi"},"content":"            //TODO when file dont exists","lastModifiedDate":"2021-08-26"},{"lineNumber":151,"author":{"gitId":"limdanqi"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-26"},{"lineNumber":152,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":153,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":154,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":155,"author":{"gitId":"limdanqi"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":156,"author":{"gitId":"limdanqi"},"content":"     * Updates the storage with the new task list.","lastModifiedDate":"2021-08-29"},{"lineNumber":157,"author":{"gitId":"limdanqi"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":158,"author":{"gitId":"limdanqi"},"content":"     * @param newTaskList","lastModifiedDate":"2021-08-29"},{"lineNumber":159,"author":{"gitId":"limdanqi"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":160,"author":{"gitId":"limdanqi"},"content":"    public void update(TaskList newTaskList) {","lastModifiedDate":"2021-08-28"},{"lineNumber":161,"author":{"gitId":"limdanqi"},"content":"        this.taskList \u003d newTaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":162,"author":{"gitId":"limdanqi"},"content":"        saveData();","lastModifiedDate":"2021-08-26"},{"lineNumber":163,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":164,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":165,"author":{"gitId":"limdanqi"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"limdanqi":165}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limdanqi"},"content":"package duke.task;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"limdanqi"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"limdanqi"},"content":"    private String taskType \u003d \"[D]\";","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"limdanqi"},"content":"    private String taskName;","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"limdanqi"},"content":"    private String deadline;","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"limdanqi"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"limdanqi"},"content":"     * Initialises a Deadline object.","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"limdanqi"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"limdanqi"},"content":"     * @param taskName the task name","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"limdanqi"},"content":"     * @param deadline the deadline","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"limdanqi"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"limdanqi"},"content":"    public Deadline(String taskName, String deadline) {","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"limdanqi"},"content":"        super(taskName);","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"limdanqi"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"limdanqi"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"limdanqi"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"limdanqi"},"content":"     * Initialises a Deadline object with its current status.","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"limdanqi"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"limdanqi"},"content":"     * @param taskName the task name","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"limdanqi"},"content":"     * @param deadline the deadline","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"limdanqi"},"content":"     * @param isDone the status of the deadline task","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"limdanqi"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"limdanqi"},"content":"    public Deadline(String taskName, String deadline, boolean isDone) {","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"limdanqi"},"content":"        super(taskName);","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"limdanqi"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"limdanqi"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"limdanqi"},"content":"        if (isDone) {","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"limdanqi"},"content":"            this.markAsDone();","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"limdanqi"},"content":"    public String getDeadline() {","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"limdanqi"},"content":"        return String.format(\"(by: %s)\", deadline);","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"limdanqi"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"limdanqi"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"limdanqi"},"content":"        String result \u003d taskType + this.getCheckBox()","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"limdanqi"},"content":"                + \" \" + this.taskName + \" \"","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"limdanqi"},"content":"                + getDeadline();","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"limdanqi"},"content":"        return result;","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"limdanqi"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"limdanqi":47}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limdanqi"},"content":"package duke.task;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"limdanqi"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"limdanqi"},"content":"    private String taskType \u003d \"[E]\";","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"limdanqi"},"content":"    private String taskName;","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"limdanqi"},"content":"    private String eventTime;","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"limdanqi"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"limdanqi"},"content":"     * Initialises an Event object.","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"limdanqi"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"limdanqi"},"content":"     * @param taskName the task name","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"limdanqi"},"content":"     * @param eventTime the event time","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"limdanqi"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"limdanqi"},"content":"    public Event(String taskName, String eventTime) {","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"limdanqi"},"content":"        super(taskName);","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"limdanqi"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"limdanqi"},"content":"        this.eventTime \u003d eventTime;","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"limdanqi"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"limdanqi"},"content":"     * Initialises an Event object with its status.","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"limdanqi"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"limdanqi"},"content":"     * @param taskName the task name","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"limdanqi"},"content":"     * @param eventTime the event time","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"limdanqi"},"content":"     * @param isDone the status of the event task","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"limdanqi"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"limdanqi"},"content":"    public Event(String taskName, String eventTime, boolean isDone) {","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"limdanqi"},"content":"        super(taskName);","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"limdanqi"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"limdanqi"},"content":"        this.eventTime \u003d eventTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"limdanqi"},"content":"        if (isDone) {","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"limdanqi"},"content":"            this.markAsDone();","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"limdanqi"},"content":"    public String getEventTime() {","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"limdanqi"},"content":"        return String.format(\"(at: %s)\", eventTime);","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"limdanqi"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"limdanqi"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"limdanqi"},"content":"        String result \u003d taskType + this.getCheckBox()","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"limdanqi"},"content":"                + \" \" + this.taskName + \" \"","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"limdanqi"},"content":"                + getEventTime();","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"limdanqi"},"content":"        return result;","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"limdanqi"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"limdanqi":47}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limdanqi"},"content":"package duke.task;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"limdanqi"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"limdanqi"},"content":" * Represents a Task keyed in by the user.","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"limdanqi"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"limdanqi"},"content":"public class Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"limdanqi"},"content":"    private String taskName;","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"limdanqi"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"limdanqi"},"content":"    public Task() {}","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"limdanqi"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"limdanqi"},"content":"     * Initialises a Task object.","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"limdanqi"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"limdanqi"},"content":"     * @param taskName the task name","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"limdanqi"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"limdanqi"},"content":"    public Task(String taskName) {","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"limdanqi"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"limdanqi"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"limdanqi"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"limdanqi"},"content":"     * Marks a Task object as completed.","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"limdanqi"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"limdanqi"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"limdanqi"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"limdanqi"},"content":"    public String getTaskName() {","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"limdanqi"},"content":"        return taskName;","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"limdanqi"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"limdanqi"},"content":"     * Returns a checkbox in a string, representing the status of the task.","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"limdanqi"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"limdanqi"},"content":"     * @return string representing status of a Task","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"limdanqi"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"limdanqi"},"content":"    public String getCheckBox() {","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"limdanqi"},"content":"        if (isDone) {","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"limdanqi"},"content":"            return \"[X]\";","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"limdanqi"},"content":"        return \"[ ]\";","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"limdanqi"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"limdanqi"},"content":"     * Returns a string representation of a Task object.","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"limdanqi"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"limdanqi"},"content":"     * @return string representation of a Task object","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"limdanqi"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"limdanqi"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":51,"author":{"gitId":"limdanqi"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":52,"author":{"gitId":"limdanqi"},"content":"        return this.getCheckBox() + \" \" + this.taskName;","lastModifiedDate":"2021-09-08"},{"lineNumber":53,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":54,"author":{"gitId":"limdanqi"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"limdanqi":54}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limdanqi"},"content":"package duke.task;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"limdanqi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"limdanqi"},"content":"import java.util.List;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"limdanqi"},"content":"public class TaskList {","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"limdanqi"},"content":"    private List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"limdanqi"},"content":"    public TaskList() {}","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"limdanqi"},"content":"    public TaskList(List\u003cTask\u003e taskList) {","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"limdanqi"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"limdanqi"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"limdanqi"},"content":"        taskList.add(task);","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"limdanqi"},"content":"    public void removeTask(int taskPosition) {","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"limdanqi"},"content":"        taskList.remove(taskPosition);","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"limdanqi"},"content":"    public Task getTask(int taskPosition) {","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"limdanqi"},"content":"        return taskList.get(taskPosition);","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"limdanqi"},"content":"    public int size() {","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"limdanqi"},"content":"        return taskList.size();","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"limdanqi"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"limdanqi"},"content":"        return taskList.isEmpty();","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"limdanqi"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"limdanqi":34}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limdanqi"},"content":"package duke.task;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"limdanqi"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"limdanqi"},"content":"    private String taskType \u003d \"[T]\";","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"limdanqi"},"content":"    private String taskName;","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"limdanqi"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"limdanqi"},"content":"     * Initialises a Todo object.","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"limdanqi"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"limdanqi"},"content":"     * @param taskName the task name","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"limdanqi"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"limdanqi"},"content":"    public Todo(String taskName) {","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"limdanqi"},"content":"        super(taskName);","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"limdanqi"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"limdanqi"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"limdanqi"},"content":"     * Initialises a Todo object with its status.","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"limdanqi"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"limdanqi"},"content":"     * @param taskName the task name","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"limdanqi"},"content":"     * @param isDone the status of the todo task","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"limdanqi"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"limdanqi"},"content":"    public Todo(String taskName, boolean isDone) {","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"limdanqi"},"content":"        super(taskName);","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"limdanqi"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"limdanqi"},"content":"        if (isDone) {","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"limdanqi"},"content":"            this.markAsDone();","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"limdanqi"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"limdanqi"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"limdanqi"},"content":"        String result \u003d taskType + this.getCheckBox()","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"limdanqi"},"content":"                + \" \" + this.taskName;","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"limdanqi"},"content":"        return result;","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"limdanqi"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"limdanqi":37}},{"path":"src/main/java/duke/ui/Message.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limdanqi"},"content":"package duke.ui;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"limdanqi"},"content":"public class Message {","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"limdanqi"},"content":"    //Messages for DukeException","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"limdanqi"},"content":"    public static final String MESSAGE_TXT_TO_LIST_CONVERSION_ERROR \u003d \"☹ OOPS!!! An error occurred while converting\"","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"limdanqi"},"content":"            + \" the .txt file into the task list.\";","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"limdanqi"},"content":"    //Messages for InvalidInputException","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"limdanqi"},"content":"    public static final String MESSAGE_ERROR_OCCURRED \u003d \"☹ OOPS!!! Error occurred.\";","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"limdanqi"},"content":"    public static final String MESSAGE_INVALID_COMMAND \u003d \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"limdanqi"},"content":"    public static final String MESSAGE_INVALID_TASK_NUMBER \u003d \"☹ OOPS!!! Please key in a valid task number\"","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"limdanqi"},"content":"            + \" within the task list.\";","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"limdanqi"},"content":"    public static final String MESSAGE_INVALID_FIND \u003d \"☹ OOPS!!! Please key in a search term.\";","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"limdanqi"},"content":"    //Messages for InvalidDateAndTimeException","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"limdanqi"},"content":"    public static final String MESSAGE_MISSING_DEADLINE \u003d \"☹ OOPS!!! Please key in a deadline with\"","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"limdanqi"},"content":"            + \" by/[date and/or time]\"","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"limdanqi"},"content":"            + \" in the format dd/mm/yyyy hh:mm,\"","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"limdanqi"},"content":"            + \" providing at least a date or a time!\";","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"limdanqi"},"content":"    public static final String MESSAGE_MISSING_EVENT_TIME \u003d \"☹ OOPS!!! Please key in a event time with\"","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"limdanqi"},"content":"            + \"at/[date and/or time]\"","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"limdanqi"},"content":"            + \" in the format dd/mm/yyyy hh:mm,\"","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"limdanqi"},"content":"            + \" providing at least a date or a time!\";","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"limdanqi"},"content":"    public static final String MESSAGE_INVALID_DATE_AND_TIME \u003d \"☹ OOPS!!! Please key in a valid date and time\"","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"limdanqi"},"content":"            + \" in the format dd/mm/yyyy hh:mm,\"","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"limdanqi"},"content":"            + \" providing at least a date or a time!\";","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"limdanqi"},"content":"    public static final String MESSAGE_INVALID_DATE \u003d \"☹ OOPS!!! Please key in a valid date\"","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"limdanqi"},"content":"            + \" in the format dd/mm/yyyy!\";","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"limdanqi"},"content":"    public static final String MESSAGE_INVALID_TIME \u003d \"☹ OOPS!!! Please key in a valid time\"","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"limdanqi"},"content":"            + \" in the format hh:mm!\";","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"limdanqi"},"content":"    //Messages for EmptyTaskNameException","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"limdanqi"},"content":"    public static final String MESSAGE_EMPTY_TODO_NAME \u003d \"☹ OOPS!!! The description of a todo cannot be empty.\"","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"limdanqi"},"content":"            + \"Please provide it in n/[task name].\";","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"limdanqi"},"content":"    public static final String MESSAGE_EMPTY_DEADLINE_NAME \u003d \"☹ OOPS!!! The description of a deadline \"","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"limdanqi"},"content":"            + \"cannot be empty.\"","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"limdanqi"},"content":"            + \"Please provide it in n/[task name].\";","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"limdanqi"},"content":"    public static final String MESSAGE_EMPTY_EVENT_NAME \u003d \"☹ OOPS!!! The description of a event cannot be empty.\"","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"limdanqi"},"content":"            + \"Please provide it in n/[task name].\";","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"limdanqi"},"content":"    //Messages for EmptyCommandInformationException","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"limdanqi"},"content":"    public static final String MESSAGE_EMPTY_TODO \u003d \"☹ OOPS!!! Please key in the relevant details for a todo task,\"","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"limdanqi"},"content":"            + \"in the format todo n/[task name].\";","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"limdanqi"},"content":"    public static final String MESSAGE_EMPTY_DEADLINE \u003d \"☹ OOPS!!! Please key in the relevant details\"","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"limdanqi"},"content":"            + \" for a deadline task,\"","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"limdanqi"},"content":"            + \"in the format deadline n/[task name] by/[date and/or time].\";","lastModifiedDate":"2021-09-05"},{"lineNumber":47,"author":{"gitId":"limdanqi"},"content":"    public static final String MESSAGE_EMPTY_EVENT \u003d \"☹ OOPS!!! Please key in the relevant details for a event task,\"","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"limdanqi"},"content":"            + \"in the format event n/[task name] at/[date and/or time].\";","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"limdanqi"},"content":"}","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"limdanqi":50}},{"path":"src/main/java/duke/ui/Tag.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limdanqi"},"content":"package duke.ui;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"limdanqi"},"content":"public class Tag {","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"limdanqi"},"content":"    //Command syntax","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"limdanqi"},"content":"    public static final String NAME \u003d \"n/\";","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"limdanqi"},"content":"    public static final String DATE_AND_TIME \u003d \"d/\";","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"limdanqi"},"content":"    //Command prompts","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"limdanqi"},"content":"    public static final String TODO \u003d \"todo\";","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"limdanqi"},"content":"    public static final String DEADLINE \u003d \"deadline\";","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"limdanqi"},"content":"    public static final String EVENT \u003d \"event\";","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"limdanqi"},"content":"    public static final String EXIT \u003d \"exit\";","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"limdanqi"},"content":"    public static final String LIST \u003d \"list\";","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"limdanqi"},"content":"    public static final String DONE \u003d \"done\";","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"limdanqi"},"content":"    public static final String DELETE \u003d \"delete\";","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"limdanqi"},"content":"    public static final String FIND \u003d \"find\";","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"limdanqi"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"limdanqi":17}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limdanqi"},"content":"package duke.ui;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"limdanqi"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"limdanqi"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"limdanqi"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"limdanqi"},"content":" * Represents the user interface which includes methods that returns information to the user.","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"limdanqi"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"limdanqi"},"content":"public class Ui {","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"limdanqi"},"content":"    public Ui() {}","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"limdanqi"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"limdanqi"},"content":"     * Returns the welcome message of the programme.","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"limdanqi"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"limdanqi"},"content":"    public static String showWelcomeMessage() {","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"limdanqi"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"limdanqi"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"limdanqi"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"limdanqi"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"limdanqi"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"limdanqi"},"content":"        String welcomeMessage \u003d logo + \"Hello! I\u0027m Duke :)\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"limdanqi"},"content":"                + \"What can I do for you?\";","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"limdanqi"},"content":"        return welcomeMessage;","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"limdanqi"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"limdanqi"},"content":"     * Returns the exit message of the programme.","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"limdanqi"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"limdanqi"},"content":"    public static String showExitMessage() {","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"limdanqi"},"content":"        String exitMessage \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"limdanqi"},"content":"        return exitMessage;","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"limdanqi"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"limdanqi"},"content":"     * Returns the error occurred in Duke.","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"limdanqi"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"limdanqi"},"content":"     * @param error the error occurred in Duke","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"limdanqi"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"limdanqi"},"content":"    public String showErrorMessage(String error) {","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"limdanqi"},"content":"        return error;","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"limdanqi"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"limdanqi"},"content":"     * Returns a message when a Task is removed.","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"limdanqi"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"limdanqi"},"content":"     * @param removedTask the task removed","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"limdanqi"},"content":"     * @param tasks the TaskList","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"limdanqi"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"limdanqi"},"content":"    public String showDeleteTaskMessage(Task removedTask, TaskList tasks) {","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"limdanqi"},"content":"        String displayedMessage \u003d \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"limdanqi"},"content":"                + \"  \" + removedTask.toString() + \"\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"limdanqi"},"content":"                + showTotalTaskNumber(tasks);","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"limdanqi"},"content":"        return displayedMessage;","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"limdanqi"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"limdanqi"},"content":"     * Returns a message when a Task is successfully added.","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"limdanqi"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"limdanqi"},"content":"     * @param task the task added","lastModifiedDate":"2021-09-02"},{"lineNumber":62,"author":{"gitId":"limdanqi"},"content":"     * @param tasks the current task list","lastModifiedDate":"2021-09-02"},{"lineNumber":63,"author":{"gitId":"limdanqi"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"limdanqi"},"content":"    public String showAddTaskMessage(Task task, TaskList tasks) {","lastModifiedDate":"2021-09-02"},{"lineNumber":65,"author":{"gitId":"limdanqi"},"content":"        String successMessage \u003d \"Got it. I\u0027ve added this task:\";","lastModifiedDate":"2021-08-28"},{"lineNumber":66,"author":{"gitId":"limdanqi"},"content":"        String taskString \u003d task.toString();","lastModifiedDate":"2021-08-28"},{"lineNumber":67,"author":{"gitId":"limdanqi"},"content":"        String result \u003d successMessage + \"\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":68,"author":{"gitId":"limdanqi"},"content":"                + \"  \" + taskString + \"\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":69,"author":{"gitId":"limdanqi"},"content":"                + showTotalTaskNumber(tasks);","lastModifiedDate":"2021-09-02"},{"lineNumber":70,"author":{"gitId":"limdanqi"},"content":"        return result;","lastModifiedDate":"2021-09-02"},{"lineNumber":71,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":72,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":73,"author":{"gitId":"limdanqi"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":74,"author":{"gitId":"limdanqi"},"content":"     * Returns a message when a Task is marked as complete.","lastModifiedDate":"2021-09-02"},{"lineNumber":75,"author":{"gitId":"limdanqi"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":76,"author":{"gitId":"limdanqi"},"content":"     * @param task the marked task","lastModifiedDate":"2021-09-02"},{"lineNumber":77,"author":{"gitId":"limdanqi"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":78,"author":{"gitId":"limdanqi"},"content":"    public String showMarkTaskMessage(Task task) {","lastModifiedDate":"2021-09-02"},{"lineNumber":79,"author":{"gitId":"limdanqi"},"content":"        String displayedMessage \u003d \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":80,"author":{"gitId":"limdanqi"},"content":"                + \"  \" + task.toString();","lastModifiedDate":"2021-09-02"},{"lineNumber":81,"author":{"gitId":"limdanqi"},"content":"        return displayedMessage;","lastModifiedDate":"2021-09-02"},{"lineNumber":82,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":83,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":84,"author":{"gitId":"limdanqi"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":85,"author":{"gitId":"limdanqi"},"content":"     * Returns a message when matching tasks are found or not.","lastModifiedDate":"2021-09-02"},{"lineNumber":86,"author":{"gitId":"limdanqi"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":87,"author":{"gitId":"limdanqi"},"content":"     * @param tasks the current task list","lastModifiedDate":"2021-09-02"},{"lineNumber":88,"author":{"gitId":"limdanqi"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":89,"author":{"gitId":"limdanqi"},"content":"    public String showMatchingTasksMessage(TaskList tasks) {","lastModifiedDate":"2021-09-02"},{"lineNumber":90,"author":{"gitId":"limdanqi"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2021-08-29"},{"lineNumber":91,"author":{"gitId":"limdanqi"},"content":"            String noMatchingTaskMessage \u003d \"  \" + \"No task matched the search term!\";","lastModifiedDate":"2021-09-02"},{"lineNumber":92,"author":{"gitId":"limdanqi"},"content":"            return noMatchingTaskMessage;","lastModifiedDate":"2021-09-02"},{"lineNumber":93,"author":{"gitId":"limdanqi"},"content":"        } else {","lastModifiedDate":"2021-08-29"},{"lineNumber":94,"author":{"gitId":"limdanqi"},"content":"            String matchingTasksPresentMessage \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2021-09-02"},{"lineNumber":95,"author":{"gitId":"limdanqi"},"content":"            for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2021-08-29"},{"lineNumber":96,"author":{"gitId":"limdanqi"},"content":"                Task currentMatchingTask \u003d tasks.getTask(i - 1);","lastModifiedDate":"2021-09-02"},{"lineNumber":97,"author":{"gitId":"limdanqi"},"content":"                String matchingTaskDisplayed \u003d i + \". \" + currentMatchingTask.toString() + \"\\n\";","lastModifiedDate":"2021-09-02"},{"lineNumber":98,"author":{"gitId":"limdanqi"},"content":"                matchingTasksPresentMessage +\u003d matchingTaskDisplayed;","lastModifiedDate":"2021-09-02"},{"lineNumber":99,"author":{"gitId":"limdanqi"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":100,"author":{"gitId":"limdanqi"},"content":"            return matchingTasksPresentMessage;","lastModifiedDate":"2021-09-02"},{"lineNumber":101,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":102,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":103,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":104,"author":{"gitId":"limdanqi"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":105,"author":{"gitId":"limdanqi"},"content":"     * Returns a message that shows all tasks present in the task list.","lastModifiedDate":"2021-09-02"},{"lineNumber":106,"author":{"gitId":"limdanqi"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":107,"author":{"gitId":"limdanqi"},"content":"     * @param tasks the current task list","lastModifiedDate":"2021-09-02"},{"lineNumber":108,"author":{"gitId":"limdanqi"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":109,"author":{"gitId":"limdanqi"},"content":"    public String showAllTasks(TaskList tasks) {","lastModifiedDate":"2021-09-02"},{"lineNumber":110,"author":{"gitId":"limdanqi"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2021-08-29"},{"lineNumber":111,"author":{"gitId":"limdanqi"},"content":"            String noTaskMessage \u003d \"There are currently no tasks yet!\";","lastModifiedDate":"2021-09-02"},{"lineNumber":112,"author":{"gitId":"limdanqi"},"content":"            return noTaskMessage;","lastModifiedDate":"2021-09-02"},{"lineNumber":113,"author":{"gitId":"limdanqi"},"content":"        } else {","lastModifiedDate":"2021-09-02"},{"lineNumber":114,"author":{"gitId":"limdanqi"},"content":"            boolean isPlural \u003d tasks.size() \u003e 1;","lastModifiedDate":"2021-09-02"},{"lineNumber":115,"author":{"gitId":"limdanqi"},"content":"            String message;","lastModifiedDate":"2021-09-02"},{"lineNumber":116,"author":{"gitId":"limdanqi"},"content":"            if (isPlural) {","lastModifiedDate":"2021-09-02"},{"lineNumber":117,"author":{"gitId":"limdanqi"},"content":"                message \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2021-09-02"},{"lineNumber":118,"author":{"gitId":"limdanqi"},"content":"            } else {","lastModifiedDate":"2021-08-29"},{"lineNumber":119,"author":{"gitId":"limdanqi"},"content":"                message \u003d \"Here is the task in your list:\\n\";","lastModifiedDate":"2021-09-02"},{"lineNumber":120,"author":{"gitId":"limdanqi"},"content":"            }","lastModifiedDate":"2021-09-02"},{"lineNumber":121,"author":{"gitId":"limdanqi"},"content":"            for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {","lastModifiedDate":"2021-08-29"},{"lineNumber":122,"author":{"gitId":"limdanqi"},"content":"                Task currentTask \u003d tasks.getTask(i - 1);","lastModifiedDate":"2021-08-29"},{"lineNumber":123,"author":{"gitId":"limdanqi"},"content":"                String displayedTask \u003d i + \". \" + currentTask.toString() + \"\\n\";","lastModifiedDate":"2021-09-02"},{"lineNumber":124,"author":{"gitId":"limdanqi"},"content":"                message +\u003d displayedTask;","lastModifiedDate":"2021-09-02"},{"lineNumber":125,"author":{"gitId":"limdanqi"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":126,"author":{"gitId":"limdanqi"},"content":"            return message;","lastModifiedDate":"2021-09-02"},{"lineNumber":127,"author":{"gitId":"limdanqi"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":128,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":129,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":130,"author":{"gitId":"limdanqi"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":131,"author":{"gitId":"limdanqi"},"content":"     * Returns a string message that shows the number of tasks currently.","lastModifiedDate":"2021-09-02"},{"lineNumber":132,"author":{"gitId":"limdanqi"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":133,"author":{"gitId":"limdanqi"},"content":"     * @param tasks the current task list","lastModifiedDate":"2021-09-02"},{"lineNumber":134,"author":{"gitId":"limdanqi"},"content":"     * @return a string message with the total task number","lastModifiedDate":"2021-09-02"},{"lineNumber":135,"author":{"gitId":"limdanqi"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":136,"author":{"gitId":"limdanqi"},"content":"    private String showTotalTaskNumber(TaskList tasks) {","lastModifiedDate":"2021-09-02"},{"lineNumber":137,"author":{"gitId":"limdanqi"},"content":"        boolean isPlural \u003d tasks.size() \u003e 1;","lastModifiedDate":"2021-09-02"},{"lineNumber":138,"author":{"gitId":"limdanqi"},"content":"        String sCharacter \u003d isPlural ? \"s\" : \"\";","lastModifiedDate":"2021-09-02"},{"lineNumber":139,"author":{"gitId":"limdanqi"},"content":"        return String.format(\"Now you have %d task%s in the list.\", tasks.size(), sCharacter);","lastModifiedDate":"2021-09-02"},{"lineNumber":140,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":141,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":142,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":143,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":144,"author":{"gitId":"limdanqi"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"limdanqi":144}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"limdanqi"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"limdanqi"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"limdanqi"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"limdanqi"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"limdanqi"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"limdanqi"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"limdanqi"},"content":"         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"limdanqi"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"limdanqi"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"limdanqi"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"limdanqi"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"limdanqi"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"limdanqi"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"limdanqi"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"limdanqi"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"limdanqi":17}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"limdanqi"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"limdanqi"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"limdanqi"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"limdanqi"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"limdanqi"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"limdanqi"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"limdanqi"},"content":"\u003cfx:root maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\"","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"limdanqi"},"content":"         prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" type\u003d\"AnchorPane\"\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"limdanqi"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"limdanqi"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\"","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"limdanqi"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"limdanqi"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"limdanqi"},"content":"                prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"/\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"limdanqi"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"limdanqi"},"content":"                    vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"limdanqi"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"limdanqi"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"/\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"limdanqi"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"limdanqi"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"limdanqi"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"limdanqi"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"limdanqi":23}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limdanqi"},"content":"package duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"limdanqi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"limdanqi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"limdanqi"},"content":"public class DukeTest {","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"limdanqi"},"content":"    @Test","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"limdanqi"},"content":"    public void dummyTest() {","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"limdanqi"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"limdanqi"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"limdanqi":12}},{"path":"src/test/java/duke/data/DateAndTimeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limdanqi"},"content":"package duke.data;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"limdanqi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"limdanqi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"limdanqi"},"content":"import duke.data.exceptions.InvalidDateAndTimeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"limdanqi"},"content":"public class DateAndTimeTest {","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"limdanqi"},"content":"    @Test","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"limdanqi"},"content":"    public void reformattedDateAndTime_commandInput_success() throws InvalidDateAndTimeException {","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"limdanqi"},"content":"        DateAndTime dateAndTime \u003d new DateAndTime(\"event meeting /at 11/12/2021 11:00\");","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"limdanqi"},"content":"        String expectedOutput \u003d \"Dec 11 2021, 11:00\";","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"limdanqi"},"content":"        assertEquals(expectedOutput, dateAndTime.getReformattedDateAndTime());","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"limdanqi"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"limdanqi":16}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"limdanqi"},"content":"package duke.task;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"limdanqi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"limdanqi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"limdanqi"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"limdanqi"},"content":"public class TodoTest {","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"limdanqi"},"content":"    @Test","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"limdanqi"},"content":"    public void todoStringConversion() {","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"limdanqi"},"content":"        Todo todo \u003d new Todo(\"borrow book\");","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"limdanqi"},"content":"        String actualOutput \u003d todo.toString();","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"limdanqi"},"content":"        String expectedOutput \u003d \"[T][ ] borrow book\";","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"limdanqi"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"limdanqi"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"limdanqi"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"limdanqi":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"limdanqi"},"content":"todo borrow book","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"limdanqi"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"limdanqi"},"content":"done 1","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"limdanqi"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"limdanqi"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"limdanqi"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"limdanqi"},"content":"bye","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"limdanqi":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"limdanqi"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"limdanqi":1,"-":20}}]
