[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ruoyann"},"content":"E | 0 | two | 4pm","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"ruoyann":1}},{"path":"src/main/java/Content.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruoyann"},"content":"public class Content {","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"ruoyann"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"ruoyann"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"ruoyann"},"content":"     * Loads the file content from Duke.txt","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"ruoyann"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"ruoyann"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"ruoyann"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"ruoyann"},"content":"     * (Add) Updates the file content in Duke.txt","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"ruoyann"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"ruoyann"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"ruoyann":10}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruoyann"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"ruoyann"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"ruoyann"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"ruoyann"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"ruoyann"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"ruoyann"},"content":"    protected String by;","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"ruoyann"},"content":"    LocalDate byDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"ruoyann"},"content":"    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"ruoyann"},"content":"    String[] monthArray \u003d new  String[] {\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"};","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"ruoyann"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"ruoyann"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"ruoyann"},"content":"        super(description);","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"ruoyann"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"ruoyann"},"content":"        this.byDate \u003d LocalDate.parse(by, formatter);","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"ruoyann"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"ruoyann"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"ruoyann"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"ruoyann"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"ruoyann"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + monthArray[byDate.getMonthValue()] + \" \" + byDate.getDayOfMonth() + \" \" + byDate.getYear() + \")\";","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"ruoyann"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"ruoyann"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"ruoyann":21}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruoyann"},"content":"import java.io.*;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"ruoyann"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"ruoyann"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"ruoyann"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"ruoyann"},"content":"import java.nio.file.StandardOpenOption;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"ruoyann"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"ruoyann"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"ruoyann"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"ruoyann"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"ruoyann"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"ruoyann"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"ruoyann"},"content":" * Class that handles the behaviour of the bot in response to user inputs","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"ruoyann"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"ruoyann"},"content":"    private static final Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"ruoyann"},"content":"    private static boolean stop \u003d false;","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"ruoyann"},"content":"    private static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"ruoyann"},"content":"    // Regex to check if string is numbers","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"ruoyann"},"content":"    private static Pattern pattern \u003d Pattern.compile(\"-?\\\\d+(\\\\.\\\\d+)?\");","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"ruoyann"},"content":"    private static String content;","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"ruoyann"},"content":"    private static Path p \u003d Paths.get(\"/Users/yinruoyan/Documents/GitHub/ip/data/duke.txt\");","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"ruoyann"},"content":"    // private static Path p \u003d Paths.get(\"./Users/yinruoyan/Documents/GitHub/ip/data/src/duke.txt\");","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"ruoyann"},"content":"//    private static Path p \u003d Paths.get(\"./Users/yinruoyan/Documents/GitHub/ip/data/duke.txt\");","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"ruoyann"},"content":"//    private static Path p \u003d Paths.get(\"../../../data/duke.txt\");","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"ruoyann"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"ruoyann"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"ruoyann"},"content":"     * Method to call when user wishes to see a list of all events","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"ruoyann"},"content":"     * @param input The input string by user","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"ruoyann"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"ruoyann"},"content":"    public static void listMethod(String input) {","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"ruoyann"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"ruoyann"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"ruoyann"},"content":"            Task currTask \u003d taskList.get(i);","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"ruoyann"},"content":"            System.out.println((i+1) + \".\" + currTask.toString());","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"ruoyann"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"ruoyann"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"ruoyann"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"ruoyann"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"ruoyann"},"content":"     * Method to call when user wishes to stop the bot","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"ruoyann"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"ruoyann"},"content":"    public static void stopMethod() {","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"ruoyann"},"content":"        stop \u003d true;","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"ruoyann"},"content":"        System.out.print(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-16"},{"lineNumber":44,"author":{"gitId":"ruoyann"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"ruoyann"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"ruoyann"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"ruoyann"},"content":"     * Method to call when user wishes to mark an item as done","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"ruoyann"},"content":"     * @param input The input string by user","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"ruoyann"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"ruoyann"},"content":"    public static void doneMethod(String input) throws DukeException{","lastModifiedDate":"2021-08-17"},{"lineNumber":51,"author":{"gitId":"ruoyann"},"content":"        String numberString \u003d String.valueOf(input.charAt(5));","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"ruoyann"},"content":"        if (!pattern.matcher(numberString).matches()) {","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"ruoyann"},"content":"            throw new DukeException(\"Please enter \\\u0027done [index of item]\\\u0027 to mark item as done.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"ruoyann"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"ruoyann"},"content":"        int number \u003d Integer.parseInt(String.valueOf(numberString));","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"ruoyann"},"content":"        if (number \u003e taskList.size() || number \u003c 0) {","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"ruoyann"},"content":"            throw new DukeException(\"Item does not exist, we cannot mark it as done.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":58,"author":{"gitId":"ruoyann"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":59,"author":{"gitId":"ruoyann"},"content":"        Task currTask \u003d taskList.get(number - 1);","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"ruoyann"},"content":"        if (currTask.getStatusIcon().equals(String.valueOf(\u0027X\u0027))) {","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"ruoyann"},"content":"            throw new DukeException(\"Item is already marked as done, we cannot mark it as done again.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"ruoyann"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":63,"author":{"gitId":"ruoyann"},"content":"        taskList.get(number - 1).markAsDone();","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"ruoyann"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2021-08-16"},{"lineNumber":65,"author":{"gitId":"ruoyann"},"content":"        System.out.println(taskList.get(number-1).toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"ruoyann"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":67,"author":{"gitId":"ruoyann"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":68,"author":{"gitId":"ruoyann"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"ruoyann"},"content":"     * Method to call when user wishes to add a new task","lastModifiedDate":"2021-08-19"},{"lineNumber":70,"author":{"gitId":"ruoyann"},"content":"     * @param input The input string by user","lastModifiedDate":"2021-08-19"},{"lineNumber":71,"author":{"gitId":"ruoyann"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":72,"author":{"gitId":"ruoyann"},"content":"    public static void taskMethod(String input) throws DukeException{","lastModifiedDate":"2021-08-17"},{"lineNumber":73,"author":{"gitId":"ruoyann"},"content":"        if (!input.startsWith(\"todo\") \u0026\u0026 !input.startsWith(\"deadline\") \u0026\u0026 !input.startsWith(\"event\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":74,"author":{"gitId":"ruoyann"},"content":"            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-17"},{"lineNumber":75,"author":{"gitId":"ruoyann"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":76,"author":{"gitId":"ruoyann"},"content":"        Task currTask;","lastModifiedDate":"2021-08-16"},{"lineNumber":77,"author":{"gitId":"ruoyann"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":78,"author":{"gitId":"ruoyann"},"content":"        if (input.startsWith(\"todo\")) {","lastModifiedDate":"2021-08-16"},{"lineNumber":79,"author":{"gitId":"ruoyann"},"content":"            if (input.length() \u003d\u003d 4) {","lastModifiedDate":"2021-08-17"},{"lineNumber":80,"author":{"gitId":"ruoyann"},"content":"                throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":81,"author":{"gitId":"ruoyann"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":82,"author":{"gitId":"ruoyann"},"content":"            String taskDesc \u003d input.substring(5);","lastModifiedDate":"2021-08-17"},{"lineNumber":83,"author":{"gitId":"ruoyann"},"content":"            currTask \u003d new Todo(taskDesc);","lastModifiedDate":"2021-08-17"},{"lineNumber":84,"author":{"gitId":"ruoyann"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":85,"author":{"gitId":"ruoyann"},"content":"        else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2021-08-16"},{"lineNumber":86,"author":{"gitId":"ruoyann"},"content":"            if (input.length() \u003d\u003d 8) {","lastModifiedDate":"2021-08-17"},{"lineNumber":87,"author":{"gitId":"ruoyann"},"content":"                throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":88,"author":{"gitId":"ruoyann"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":89,"author":{"gitId":"ruoyann"},"content":"            int byIndex \u003d input.indexOf(\"/\");","lastModifiedDate":"2021-08-16"},{"lineNumber":90,"author":{"gitId":"ruoyann"},"content":"            String by \u003d input.substring(byIndex+4);","lastModifiedDate":"2021-08-16"},{"lineNumber":91,"author":{"gitId":"ruoyann"},"content":"            String taskDesc \u003d input.substring(9, byIndex-1);","lastModifiedDate":"2021-08-17"},{"lineNumber":92,"author":{"gitId":"ruoyann"},"content":"            currTask \u003d new Deadline(taskDesc, by);","lastModifiedDate":"2021-08-17"},{"lineNumber":93,"author":{"gitId":"ruoyann"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":94,"author":{"gitId":"ruoyann"},"content":"        else {","lastModifiedDate":"2021-08-16"},{"lineNumber":95,"author":{"gitId":"ruoyann"},"content":"            if (input.length() \u003d\u003d 5) {","lastModifiedDate":"2021-08-17"},{"lineNumber":96,"author":{"gitId":"ruoyann"},"content":"                throw new DukeException(\"OOPS!!! The description of a event cannot be empty.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":97,"author":{"gitId":"ruoyann"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":98,"author":{"gitId":"ruoyann"},"content":"            int byIndex \u003d input.indexOf(\"/\");","lastModifiedDate":"2021-08-16"},{"lineNumber":99,"author":{"gitId":"ruoyann"},"content":"            String by \u003d input.substring(byIndex+4);","lastModifiedDate":"2021-08-16"},{"lineNumber":100,"author":{"gitId":"ruoyann"},"content":"            String taskDesc \u003d input.substring(6, byIndex-1);","lastModifiedDate":"2021-08-17"},{"lineNumber":101,"author":{"gitId":"ruoyann"},"content":"            currTask \u003d new Event(taskDesc,by);","lastModifiedDate":"2021-08-17"},{"lineNumber":102,"author":{"gitId":"ruoyann"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":103,"author":{"gitId":"ruoyann"},"content":"        taskList.add(currTask);","lastModifiedDate":"2021-08-26"},{"lineNumber":104,"author":{"gitId":"ruoyann"},"content":"        System.out.println(\"Got it. I have added this task:\");","lastModifiedDate":"2021-08-17"},{"lineNumber":105,"author":{"gitId":"ruoyann"},"content":"        System.out.println(currTask);","lastModifiedDate":"2021-08-16"},{"lineNumber":106,"author":{"gitId":"ruoyann"},"content":"        System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":107,"author":{"gitId":"ruoyann"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":108,"author":{"gitId":"ruoyann"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":109,"author":{"gitId":"ruoyann"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":110,"author":{"gitId":"ruoyann"},"content":"     * Method to call when user wishes to see a list of all events","lastModifiedDate":"2021-08-19"},{"lineNumber":111,"author":{"gitId":"ruoyann"},"content":"     * @param input The input string by user","lastModifiedDate":"2021-08-19"},{"lineNumber":112,"author":{"gitId":"ruoyann"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":113,"author":{"gitId":"ruoyann"},"content":"    public static void deleteMethod(String input) throws DukeException{","lastModifiedDate":"2021-08-17"},{"lineNumber":114,"author":{"gitId":"ruoyann"},"content":"        // int number \u003d Integer.parseInt(String.valueOf(input.charAt(7)));","lastModifiedDate":"2021-08-19"},{"lineNumber":115,"author":{"gitId":"ruoyann"},"content":"        String numberString \u003d String.valueOf(input.charAt(7));","lastModifiedDate":"2021-08-19"},{"lineNumber":116,"author":{"gitId":"ruoyann"},"content":"        if (!pattern.matcher(numberString).matches()) {","lastModifiedDate":"2021-08-19"},{"lineNumber":117,"author":{"gitId":"ruoyann"},"content":"            throw new DukeException(\"Please enter \\\u0027delete [index of item]\\\u0027 to mark item as done.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":118,"author":{"gitId":"ruoyann"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":119,"author":{"gitId":"ruoyann"},"content":"        int number \u003d Integer.parseInt(String.valueOf(numberString));","lastModifiedDate":"2021-08-19"},{"lineNumber":120,"author":{"gitId":"ruoyann"},"content":"        if (number \u003e taskList.size() || number \u003c 0) {","lastModifiedDate":"2021-08-26"},{"lineNumber":121,"author":{"gitId":"ruoyann"},"content":"            throw new DukeException(\"Item does not exist, we cannot delete it.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":122,"author":{"gitId":"ruoyann"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":123,"author":{"gitId":"ruoyann"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2021-08-17"},{"lineNumber":124,"author":{"gitId":"ruoyann"},"content":"        System.out.println(taskList.get(number-1).toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":125,"author":{"gitId":"ruoyann"},"content":"        taskList.remove(number - 1);","lastModifiedDate":"2021-08-26"},{"lineNumber":126,"author":{"gitId":"ruoyann"},"content":"        System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":127,"author":{"gitId":"ruoyann"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":128,"author":{"gitId":"ruoyann"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":129,"author":{"gitId":"ruoyann"},"content":"    public static void loadFile() {","lastModifiedDate":"2021-08-26"},{"lineNumber":130,"author":{"gitId":"ruoyann"},"content":"        File dukeData \u003d new File(String.valueOf(p));","lastModifiedDate":"2021-08-26"},{"lineNumber":131,"author":{"gitId":"ruoyann"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":132,"author":{"gitId":"ruoyann"},"content":"            taskList.clear();","lastModifiedDate":"2021-08-26"},{"lineNumber":133,"author":{"gitId":"ruoyann"},"content":"            Scanner sc \u003d new Scanner(dukeData);","lastModifiedDate":"2021-08-26"},{"lineNumber":134,"author":{"gitId":"ruoyann"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":135,"author":{"gitId":"ruoyann"},"content":"                String currLine \u003d sc.nextLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":136,"author":{"gitId":"ruoyann"},"content":"                String[] parts \u003d currLine.trim().split(Pattern.quote(\" | \"));","lastModifiedDate":"2021-08-26"},{"lineNumber":137,"author":{"gitId":"ruoyann"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":138,"author":{"gitId":"ruoyann"},"content":"                String taskType \u003d parts[0];","lastModifiedDate":"2021-08-26"},{"lineNumber":139,"author":{"gitId":"ruoyann"},"content":"                String taskDone \u003d parts[1];","lastModifiedDate":"2021-08-26"},{"lineNumber":140,"author":{"gitId":"ruoyann"},"content":"                String taskDesc \u003d parts[2];","lastModifiedDate":"2021-08-26"},{"lineNumber":141,"author":{"gitId":"ruoyann"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":142,"author":{"gitId":"ruoyann"},"content":"                Task currTask;","lastModifiedDate":"2021-08-26"},{"lineNumber":143,"author":{"gitId":"ruoyann"},"content":"                if (taskType \u003d\u003d \"D\") {","lastModifiedDate":"2021-08-26"},{"lineNumber":144,"author":{"gitId":"ruoyann"},"content":"                   currTask \u003d new Deadline(taskDesc, parts[3]);","lastModifiedDate":"2021-08-26"},{"lineNumber":145,"author":{"gitId":"ruoyann"},"content":"                } else if (taskType \u003d\u003d \"E\") {","lastModifiedDate":"2021-08-26"},{"lineNumber":146,"author":{"gitId":"ruoyann"},"content":"                    currTask \u003d new Event(taskDesc, parts[3]);","lastModifiedDate":"2021-08-26"},{"lineNumber":147,"author":{"gitId":"ruoyann"},"content":"                } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":148,"author":{"gitId":"ruoyann"},"content":"                    currTask \u003d new Todo(taskDesc);","lastModifiedDate":"2021-08-26"},{"lineNumber":149,"author":{"gitId":"ruoyann"},"content":"                }","lastModifiedDate":"2021-08-26"},{"lineNumber":150,"author":{"gitId":"ruoyann"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":151,"author":{"gitId":"ruoyann"},"content":"                if (taskDone \u003d\u003d \"1\") {","lastModifiedDate":"2021-08-26"},{"lineNumber":152,"author":{"gitId":"ruoyann"},"content":"                    currTask.markAsDone();","lastModifiedDate":"2021-08-26"},{"lineNumber":153,"author":{"gitId":"ruoyann"},"content":"                }","lastModifiedDate":"2021-08-26"},{"lineNumber":154,"author":{"gitId":"ruoyann"},"content":"                taskList.add(currTask);","lastModifiedDate":"2021-08-26"},{"lineNumber":155,"author":{"gitId":"ruoyann"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":156,"author":{"gitId":"ruoyann"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":157,"author":{"gitId":"ruoyann"},"content":"            File file \u003d new File(String.valueOf(p));","lastModifiedDate":"2021-08-26"},{"lineNumber":158,"author":{"gitId":"ruoyann"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":159,"author":{"gitId":"ruoyann"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":160,"author":{"gitId":"ruoyann"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":161,"author":{"gitId":"ruoyann"},"content":"    public static void updateFile() {","lastModifiedDate":"2021-08-26"},{"lineNumber":162,"author":{"gitId":"ruoyann"},"content":"        String allLines \u003d \"\";","lastModifiedDate":"2021-08-26"},{"lineNumber":163,"author":{"gitId":"ruoyann"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":164,"author":{"gitId":"ruoyann"},"content":"        for (Task t : taskList) {","lastModifiedDate":"2021-08-26"},{"lineNumber":165,"author":{"gitId":"ruoyann"},"content":"            String currLine \u003d \"\";","lastModifiedDate":"2021-08-26"},{"lineNumber":166,"author":{"gitId":"ruoyann"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":167,"author":{"gitId":"ruoyann"},"content":"            // Checking for the type of task","lastModifiedDate":"2021-08-26"},{"lineNumber":168,"author":{"gitId":"ruoyann"},"content":"            if (t instanceof Todo) {","lastModifiedDate":"2021-08-26"},{"lineNumber":169,"author":{"gitId":"ruoyann"},"content":"                currLine +\u003d \"T | \";","lastModifiedDate":"2021-08-26"},{"lineNumber":170,"author":{"gitId":"ruoyann"},"content":"            } else if (t instanceof Event) {","lastModifiedDate":"2021-08-26"},{"lineNumber":171,"author":{"gitId":"ruoyann"},"content":"                currLine +\u003d \"E | \";","lastModifiedDate":"2021-08-26"},{"lineNumber":172,"author":{"gitId":"ruoyann"},"content":"            } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":173,"author":{"gitId":"ruoyann"},"content":"                currLine +\u003d \"D | \";","lastModifiedDate":"2021-08-26"},{"lineNumber":174,"author":{"gitId":"ruoyann"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":175,"author":{"gitId":"ruoyann"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":176,"author":{"gitId":"ruoyann"},"content":"            // Checking if the task is done","lastModifiedDate":"2021-08-26"},{"lineNumber":177,"author":{"gitId":"ruoyann"},"content":"            if (t.isDone) {","lastModifiedDate":"2021-08-26"},{"lineNumber":178,"author":{"gitId":"ruoyann"},"content":"                currLine +\u003d \"1 | \";","lastModifiedDate":"2021-08-26"},{"lineNumber":179,"author":{"gitId":"ruoyann"},"content":"            } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":180,"author":{"gitId":"ruoyann"},"content":"                currLine +\u003d \"0 | \";","lastModifiedDate":"2021-08-26"},{"lineNumber":181,"author":{"gitId":"ruoyann"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":182,"author":{"gitId":"ruoyann"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":183,"author":{"gitId":"ruoyann"},"content":"            // Add in the task description","lastModifiedDate":"2021-08-26"},{"lineNumber":184,"author":{"gitId":"ruoyann"},"content":"            currLine +\u003d t.description;","lastModifiedDate":"2021-08-26"},{"lineNumber":185,"author":{"gitId":"ruoyann"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":186,"author":{"gitId":"ruoyann"},"content":"            // Add in the task deadline / time","lastModifiedDate":"2021-08-26"},{"lineNumber":187,"author":{"gitId":"ruoyann"},"content":"            if (t instanceof Deadline) {","lastModifiedDate":"2021-08-26"},{"lineNumber":188,"author":{"gitId":"ruoyann"},"content":"                currLine +\u003d \" | \";","lastModifiedDate":"2021-08-26"},{"lineNumber":189,"author":{"gitId":"ruoyann"},"content":"               currLine +\u003d ((Deadline)t).by;","lastModifiedDate":"2021-08-26"},{"lineNumber":190,"author":{"gitId":"ruoyann"},"content":"            } else if (t instanceof Event) {","lastModifiedDate":"2021-08-26"},{"lineNumber":191,"author":{"gitId":"ruoyann"},"content":"                currLine +\u003d \" | \";","lastModifiedDate":"2021-08-26"},{"lineNumber":192,"author":{"gitId":"ruoyann"},"content":"               currLine +\u003d ((Event)t).at;","lastModifiedDate":"2021-08-26"},{"lineNumber":193,"author":{"gitId":"ruoyann"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":194,"author":{"gitId":"ruoyann"},"content":"            allLines +\u003d currLine;","lastModifiedDate":"2021-08-26"},{"lineNumber":195,"author":{"gitId":"ruoyann"},"content":"            allLines +\u003d System.lineSeparator();","lastModifiedDate":"2021-08-26"},{"lineNumber":196,"author":{"gitId":"ruoyann"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":197,"author":{"gitId":"ruoyann"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":198,"author":{"gitId":"ruoyann"},"content":"//        try (BBufferedWriter writer \u003d Files.newBufferedWriter(p, StandardOpenOption.APPEND)ufferedWriter writer \u003d Files.newBufferedWriter(p, StandardOpenOption.APPEND)) {","lastModifiedDate":"2021-08-26"},{"lineNumber":199,"author":{"gitId":"ruoyann"},"content":"            FileWriter writer \u003d new FileWriter(String.valueOf(p));","lastModifiedDate":"2021-08-26"},{"lineNumber":200,"author":{"gitId":"ruoyann"},"content":"            writer.write(allLines);","lastModifiedDate":"2021-08-26"},{"lineNumber":201,"author":{"gitId":"ruoyann"},"content":"            writer.close();","lastModifiedDate":"2021-08-26"},{"lineNumber":202,"author":{"gitId":"ruoyann"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":203,"author":{"gitId":"ruoyann"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-08-26"},{"lineNumber":204,"author":{"gitId":"ruoyann"},"content":"            System.err.format(\"IOException: %s%n, unable to update duke.txt\", ioe);","lastModifiedDate":"2021-08-26"},{"lineNumber":205,"author":{"gitId":"ruoyann"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":206,"author":{"gitId":"ruoyann"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":207,"author":{"gitId":"ruoyann"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":208,"author":{"gitId":"ruoyann"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":209,"author":{"gitId":"ruoyann"},"content":"     * Method to call when user wishes to see a list of all events","lastModifiedDate":"2021-08-19"},{"lineNumber":210,"author":{"gitId":"ruoyann"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-17"},{"lineNumber":212,"author":{"gitId":"ruoyann"},"content":"//        File dir \u003d new File(\"tmp/test\");","lastModifiedDate":"2021-08-26"},{"lineNumber":213,"author":{"gitId":"ruoyann"},"content":"//        dir.mkdirs();","lastModifiedDate":"2021-08-26"},{"lineNumber":214,"author":{"gitId":"ruoyann"},"content":"//        File tmp \u003d new File(dir, \"tmp.txt\");","lastModifiedDate":"2021-08-26"},{"lineNumber":215,"author":{"gitId":"ruoyann"},"content":"//        tmp.createNewFile();","lastModifiedDate":"2021-08-26"},{"lineNumber":216,"author":{"gitId":"ruoyann"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":217,"author":{"gitId":"ruoyann"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\n What can I do for you?\");","lastModifiedDate":"2021-08-17"},{"lineNumber":218,"author":{"gitId":"ruoyann"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":219,"author":{"gitId":"ruoyann"},"content":"        try {","lastModifiedDate":"2021-08-17"},{"lineNumber":220,"author":{"gitId":"ruoyann"},"content":"            loadFile();","lastModifiedDate":"2021-08-26"},{"lineNumber":221,"author":{"gitId":"ruoyann"},"content":"            while (!stop) {","lastModifiedDate":"2021-08-17"},{"lineNumber":222,"author":{"gitId":"ruoyann"},"content":"                String input \u003d sc.nextLine();","lastModifiedDate":"2021-08-17"},{"lineNumber":223,"author":{"gitId":"ruoyann"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":224,"author":{"gitId":"ruoyann"},"content":"                if (input.equals(\"list\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":225,"author":{"gitId":"ruoyann"},"content":"                    listMethod(input);","lastModifiedDate":"2021-08-17"},{"lineNumber":226,"author":{"gitId":"ruoyann"},"content":"                } else if (input.equals(\"bye\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":227,"author":{"gitId":"ruoyann"},"content":"                    stopMethod();","lastModifiedDate":"2021-08-17"},{"lineNumber":228,"author":{"gitId":"ruoyann"},"content":"                    updateFile();","lastModifiedDate":"2021-08-26"},{"lineNumber":229,"author":{"gitId":"ruoyann"},"content":"                    break;","lastModifiedDate":"2021-08-17"},{"lineNumber":230,"author":{"gitId":"ruoyann"},"content":"                } else if (input.startsWith(\"done\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":231,"author":{"gitId":"ruoyann"},"content":"                    doneMethod(input);","lastModifiedDate":"2021-08-17"},{"lineNumber":232,"author":{"gitId":"ruoyann"},"content":"                    updateFile();","lastModifiedDate":"2021-08-26"},{"lineNumber":233,"author":{"gitId":"ruoyann"},"content":"                } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":234,"author":{"gitId":"ruoyann"},"content":"                    deleteMethod(input);","lastModifiedDate":"2021-08-17"},{"lineNumber":235,"author":{"gitId":"ruoyann"},"content":"                    updateFile();","lastModifiedDate":"2021-08-26"},{"lineNumber":236,"author":{"gitId":"ruoyann"},"content":"                } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":237,"author":{"gitId":"ruoyann"},"content":"                    taskMethod(input);","lastModifiedDate":"2021-08-17"},{"lineNumber":238,"author":{"gitId":"ruoyann"},"content":"                    updateFile();","lastModifiedDate":"2021-08-26"},{"lineNumber":239,"author":{"gitId":"ruoyann"},"content":"                }","lastModifiedDate":"2021-08-17"},{"lineNumber":240,"author":{"gitId":"ruoyann"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":241,"author":{"gitId":"ruoyann"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":242,"author":{"gitId":"ruoyann"},"content":"        catch (DukeException e) {","lastModifiedDate":"2021-08-17"},{"lineNumber":243,"author":{"gitId":"ruoyann"},"content":"            System.out.println(\"Caught the exception\");","lastModifiedDate":"2021-08-17"},{"lineNumber":244,"author":{"gitId":"ruoyann"},"content":"            System.out.print(\"Exception occurred: \" + e);","lastModifiedDate":"2021-08-17"},{"lineNumber":245,"author":{"gitId":"ruoyann"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ruoyann":243,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruoyann"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"ruoyann"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"ruoyann"},"content":"        super(message);","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"ruoyann"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"ruoyann"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"ruoyann":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruoyann"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"ruoyann"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"ruoyann"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"ruoyann"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"ruoyann"},"content":"    protected String at;","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"ruoyann"},"content":"    LocalDate atDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"ruoyann"},"content":"    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"ruoyann"},"content":"    String[] monthArray \u003d new  String[] {\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"};","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"ruoyann"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"ruoyann"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"ruoyann"},"content":"        super(description);","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"ruoyann"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"ruoyann"},"content":"        this.atDate \u003d LocalDate.parse(at, formatter);","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"ruoyann"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"ruoyann"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"ruoyann"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"ruoyann"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"ruoyann"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + monthArray[atDate.getMonthValue()] + \" \" + atDate.getDayOfMonth() + \" \" + atDate.getYear() + \")\";","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"ruoyann"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"ruoyann"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"ruoyann":20}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruoyann"},"content":"public class Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"ruoyann"},"content":"    protected String description;","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"ruoyann"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"ruoyann"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"ruoyann"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"ruoyann"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"ruoyann"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"ruoyann"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"ruoyann"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"ruoyann"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"ruoyann"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"ruoyann"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"ruoyann"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"ruoyann"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"ruoyann"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"ruoyann"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"ruoyann"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"ruoyann"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"ruoyann"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"ruoyann"},"content":"       return (\"[\" + this.getStatusIcon() + \"] \" + this.description);","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"ruoyann"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"ruoyann"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"ruoyann":22}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruoyann"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"ruoyann"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"ruoyann"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"ruoyann"},"content":"        super(description);","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"ruoyann"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"ruoyann"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"ruoyann"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"ruoyann"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"ruoyann"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"ruoyann"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"ruoyann"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"ruoyann":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ruoyann"},"content":"todo one","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"ruoyann"},"content":"todo two","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"ruoyann"},"content":"event three /at Sunday 2pm - 4pm","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"ruoyann"},"content":"deadline four /by Monday 2pm","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"ruoyann"},"content":"done 1","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"ruoyann"},"content":"delete 2","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"ruoyann"},"content":"deadline five /by Tuesday","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"ruoyann"},"content":"done 3","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"ruoyann"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"ruoyann"},"content":"bye","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"ruoyann":10}}]
