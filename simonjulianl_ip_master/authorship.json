[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"simonjulianl"},"content":"# IChatbot.Dude project template","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"simonjulianl"},"content":"3. After that, locate the `src/main/java/Main.java` file, right-click it, and choose `Run IChatbot.Dude.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"simonjulianl":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"simonjulianl"},"content":"plugins {","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"simonjulianl"},"content":"    id \u0027java\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"simonjulianl"},"content":"    id \u0027application\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"simonjulianl"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"simonjulianl"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"simonjulianl"},"content":"}","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"simonjulianl"},"content":"group \u0027org.example\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"simonjulianl"},"content":"version \u00271.1-SNAPSHOT\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"simonjulianl"},"content":"repositories {","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"simonjulianl"},"content":"    mavenCentral()","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"simonjulianl"},"content":"}","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"simonjulianl"},"content":"dependencies {","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"simonjulianl"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"simonjulianl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"simonjulianl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"simonjulianl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"simonjulianl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"simonjulianl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"simonjulianl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"simonjulianl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"simonjulianl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"simonjulianl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"simonjulianl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"simonjulianl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"simonjulianl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"simonjulianl"},"content":"    testImplementation \u0027org.junit.jupiter:junit-jupiter-api:5.7.0\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"simonjulianl"},"content":"    testRuntimeOnly \u0027org.junit.jupiter:junit-jupiter-engine:5.7.0\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"simonjulianl"},"content":"}","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"simonjulianl"},"content":"ext {","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"simonjulianl"},"content":"    javaMainClass \u003d \"src.main.java.Dude\"","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"simonjulianl"},"content":"}","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"simonjulianl"},"content":"application {","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"simonjulianl"},"content":"    mainClassName \u003d javaMainClass","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"simonjulianl"},"content":"}","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"simonjulianl"},"content":"checkstyle {","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"simonjulianl"},"content":"    toolVersion \u003d \u00278.32\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"simonjulianl"},"content":"}","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"simonjulianl"},"content":"test {","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"simonjulianl"},"content":"    useJUnitPlatform()","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"simonjulianl"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"simonjulianl":49}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"simonjulianl"},"content":"@rem","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"simonjulianl"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"simonjulianl"},"content":"@rem","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"simonjulianl"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"simonjulianl"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"simonjulianl"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"simonjulianl"},"content":"@rem","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"simonjulianl"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"simonjulianl"},"content":"@rem","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"simonjulianl"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"simonjulianl"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"simonjulianl"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"simonjulianl"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"simonjulianl"},"content":"@rem limitations under the License.","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"simonjulianl"},"content":"@rem","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"simonjulianl"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"simonjulianl"},"content":"@rem ##########################################################################","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"simonjulianl"},"content":"@rem","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"simonjulianl"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"simonjulianl"},"content":"@rem","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"simonjulianl"},"content":"@rem ##########################################################################","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"simonjulianl"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"simonjulianl"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"simonjulianl"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"simonjulianl"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"simonjulianl"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"simonjulianl"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"simonjulianl"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"simonjulianl"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"simonjulianl"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"simonjulianl"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"simonjulianl"},"content":"@rem Find java.exe","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"simonjulianl"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"simonjulianl"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"simonjulianl"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"simonjulianl"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"simonjulianl"},"content":"echo.","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"simonjulianl"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"simonjulianl"},"content":"echo.","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"simonjulianl"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"simonjulianl"},"content":"echo location of your Java installation.","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"simonjulianl"},"content":"goto fail","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"simonjulianl"},"content":":findJavaFromJavaHome","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"simonjulianl"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"simonjulianl"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"simonjulianl"},"content":"if exist \"%JAVA_EXE%\" goto execute","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"simonjulianl"},"content":"echo.","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"simonjulianl"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"simonjulianl"},"content":"echo.","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"simonjulianl"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"simonjulianl"},"content":"echo location of your Java installation.","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"simonjulianl"},"content":"goto fail","lastModifiedDate":"2021-08-30"},{"lineNumber":66,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"simonjulianl"},"content":":execute","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"simonjulianl"},"content":"@rem Setup the command line","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":70,"author":{"gitId":"simonjulianl"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2021-08-30"},{"lineNumber":71,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":72,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":73,"author":{"gitId":"simonjulianl"},"content":"@rem Execute Gradle","lastModifiedDate":"2021-08-30"},{"lineNumber":74,"author":{"gitId":"simonjulianl"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*","lastModifiedDate":"2021-08-30"},{"lineNumber":75,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":76,"author":{"gitId":"simonjulianl"},"content":":end","lastModifiedDate":"2021-08-30"},{"lineNumber":77,"author":{"gitId":"simonjulianl"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2021-08-30"},{"lineNumber":78,"author":{"gitId":"simonjulianl"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2021-08-30"},{"lineNumber":79,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":80,"author":{"gitId":"simonjulianl"},"content":":fail","lastModifiedDate":"2021-08-30"},{"lineNumber":81,"author":{"gitId":"simonjulianl"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2021-08-30"},{"lineNumber":82,"author":{"gitId":"simonjulianl"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2021-08-30"},{"lineNumber":83,"author":{"gitId":"simonjulianl"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2021-08-30"},{"lineNumber":84,"author":{"gitId":"simonjulianl"},"content":"exit /b 1","lastModifiedDate":"2021-08-30"},{"lineNumber":85,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":86,"author":{"gitId":"simonjulianl"},"content":":mainEnd","lastModifiedDate":"2021-08-30"},{"lineNumber":87,"author":{"gitId":"simonjulianl"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2021-08-30"},{"lineNumber":88,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":89,"author":{"gitId":"simonjulianl"},"content":":omega","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"simonjulianl":89}},{"path":"settings.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"simonjulianl"},"content":"rootProject.name \u003d \u0027Dude\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"simonjulianl":2}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simonjulianl"},"content":"public class Main {","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"simonjulianl"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"simonjulianl"},"content":"        MainGui.main(args);","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"simonjulianl"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"simonjulianl":5}},{"path":"src/main/java/MainGui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simonjulianl"},"content":"import chatbot.Dude;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"simonjulianl"},"content":"import dao.TaskDao;","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"simonjulianl"},"content":"import dao.TaskDaoImpl;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"simonjulianl"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"simonjulianl"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"simonjulianl"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"simonjulianl"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"simonjulianl"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"simonjulianl"},"content":"import logic.CommandLogicUnitImpl;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"simonjulianl"},"content":"import logic.ICommandLogicUnit;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"simonjulianl"},"content":"import ui.GuiUiImpl;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"simonjulianl"},"content":"import ui.IUi;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"simonjulianl"},"content":"import ui.view.MainWindowController;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"simonjulianl"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"simonjulianl"},"content":"public class MainGui extends Application {","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"simonjulianl"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"simonjulianl"},"content":"        launch(args);","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"simonjulianl"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"simonjulianl"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"simonjulianl"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"simonjulianl"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"simonjulianl"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"simonjulianl"},"content":"            MainWindowController mainWindow \u003d fxmlLoader.getController();","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"simonjulianl"},"content":"            ","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"simonjulianl"},"content":"            // this is circular dependency, due to my bad design :(","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"simonjulianl"},"content":"            TaskDao taskDao \u003d new TaskDaoImpl();","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"simonjulianl"},"content":"            ","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"simonjulianl"},"content":"            IUi ui \u003d new GuiUiImpl(mainWindow);","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"simonjulianl"},"content":"            ICommandLogicUnit commandLogicUnit \u003d new CommandLogicUnitImpl(taskDao, ui);","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"simonjulianl"},"content":"            ","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"simonjulianl"},"content":"            Dude dude \u003d new Dude(commandLogicUnit, ui);","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"simonjulianl"},"content":"            mainWindow.setChatbot(dude);","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"simonjulianl"},"content":"            dude.initialize();","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"simonjulianl"},"content":"            ","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"simonjulianl"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"simonjulianl"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"simonjulianl"},"content":"            stage.setResizable(false);","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"simonjulianl"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"simonjulianl"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"simonjulianl"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"simonjulianl"},"content":"        ","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"simonjulianl"},"content":"        stage.show();","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"simonjulianl"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"simonjulianl":49}},{"path":"src/main/java/chatbot/Dude.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simonjulianl"},"content":"package chatbot;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"simonjulianl"},"content":"import logic.ICommandLogicUnit;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"simonjulianl"},"content":"import parser.IParser;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"simonjulianl"},"content":"import parser.ParserImpl;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"simonjulianl"},"content":"import ui.IUi;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"simonjulianl"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"simonjulianl"},"content":" * Dude Chatbot.","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"simonjulianl"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"simonjulianl"},"content":"public class Dude implements IChatbot {","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"simonjulianl"},"content":"    private final IParser commandParser;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"simonjulianl"},"content":"    private final IUi ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"simonjulianl"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"simonjulianl"},"content":"     * Constructor of the chatbot.Dude chatter-bot with the corresponding logic.","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"simonjulianl"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"simonjulianl"},"content":"     * @param commandLogicUnit logic.","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"simonjulianl"},"content":"     * @param ui Ui to display the interaction.","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"simonjulianl"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"simonjulianl"},"content":"    public Dude(ICommandLogicUnit commandLogicUnit, IUi ui) {","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"simonjulianl"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"simonjulianl"},"content":"        commandParser \u003d new ParserImpl(commandLogicUnit, ui);","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"simonjulianl"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"simonjulianl"},"content":"     * {@inheritDoc}","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"simonjulianl"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"simonjulianl"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"simonjulianl"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"simonjulianl"},"content":"        String logo \u003d \" ____        ____      \\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"simonjulianl"},"content":"                + \"|   _ \\\\ _   _|   _  \\\\___\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"simonjulianl"},"content":"                + \"|  | |  | | | |  | | / __ \\\\\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"simonjulianl"},"content":"                + \"|  |_| | |_| |  |_|    __/\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"simonjulianl"},"content":"                + \"|____/ \\\\__,|____\\\\____|\\n\";","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"simonjulianl"},"content":"        ","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"simonjulianl"},"content":"        ui.printSentence(\"Hello from\\n\" + logo + \" Sup Dude!\");","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"simonjulianl"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"simonjulianl"},"content":"     * {@inheritDoc}","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"simonjulianl"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"simonjulianl"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"simonjulianl"},"content":"    public void processResponse(String s) {","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"simonjulianl"},"content":"        commandParser.processInput(s);","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"simonjulianl"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"simonjulianl"},"content":"     * {@inheritDoc}","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"simonjulianl"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"simonjulianl"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"simonjulianl"},"content":"    public void shutdown() {","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"simonjulianl"},"content":"        ui.printSentence(\"Dude has been shutdown :( \\n see you again my dude!\");","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"simonjulianl"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"simonjulianl":56}},{"path":"src/main/java/chatbot/IChatbot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simonjulianl"},"content":"package chatbot;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"simonjulianl"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"simonjulianl"},"content":" * Chatbot Interface.","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"simonjulianl"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"simonjulianl"},"content":"public interface IChatbot {","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"simonjulianl"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"simonjulianl"},"content":"     * Initializes the Chatbot, to be called when the chatbot is created.","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"simonjulianl"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"simonjulianl"},"content":"    void initialize();","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"simonjulianl"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"simonjulianl"},"content":"     * Processes the input from the user.","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"simonjulianl"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"simonjulianl"},"content":"     * @param s String","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"simonjulianl"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"simonjulianl"},"content":"    void processResponse(String s);","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"simonjulianl"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"simonjulianl"},"content":"     * Kills and cleans up the Chatbot.","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"simonjulianl"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"simonjulianl"},"content":"    void shutdown();","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"simonjulianl"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"simonjulianl":23}},{"path":"src/main/java/configuration/Setting.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simonjulianl"},"content":"package configuration;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"simonjulianl"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"simonjulianl"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"simonjulianl"},"content":" * Constant Settings that are used to configure chatbot.Dude CLI chatterbot.","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"simonjulianl"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"simonjulianl"},"content":"public final class Setting {","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"simonjulianl"},"content":"    /** Path to data directory */","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"simonjulianl"},"content":"    public static final String DATA_DIR_PATH \u003d Paths.get(\"data\").toString();","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"simonjulianl"},"content":"    /** File name to data tasks directory */","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"simonjulianl"},"content":"    public static final String DATA_TASKS \u003d Paths.get(\"tasks\").toString();","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"simonjulianl"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"simonjulianl":14}},{"path":"src/main/java/dao/TaskDao.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simonjulianl"},"content":"package dao;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"simonjulianl"},"content":"import model.Task;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"simonjulianl"},"content":"import java.util.List;","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"simonjulianl"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"simonjulianl"},"content":" * Data access object (dao) for the Task model.","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"simonjulianl"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"simonjulianl"},"content":"public interface TaskDao {","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"simonjulianl"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"simonjulianl"},"content":"     * Adds a task to the data layer, throw error instead of Optional if add fails.","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"simonjulianl"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"simonjulianl"},"content":"     * @param task Task to be added.","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"simonjulianl"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"simonjulianl"},"content":"    void addTask(Task task);","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"simonjulianl"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"simonjulianl"},"content":"     * Deletes the task using 0-indexing.","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"simonjulianl"},"content":"     * Returns null if reading or writing the file task fails.","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"simonjulianl"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"simonjulianl"},"content":"     * @param index Index as it appears in the list - 1 (from 1 indexing to 0 indexing).","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"simonjulianl"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"simonjulianl"},"content":"    Task deleteTask(int index) throws IndexOutOfBoundsException;","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"simonjulianl"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"simonjulianl"},"content":"     * Marks a task as done.","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"simonjulianl"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"simonjulianl"},"content":"     * @param index Index as it appears in the list - 1 (from 1 indexing to 0 indexing).","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"simonjulianl"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"simonjulianl"},"content":"    void markDone(int index) throws IndexOutOfBoundsException;","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"simonjulianl"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"simonjulianl"},"content":"     * Gets a single task from the task list.","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"simonjulianl"},"content":"     * Return null if the task file containing the array list cannot be read.","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"simonjulianl"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"simonjulianl"},"content":"     * @param index Index as it appears in the list - 1 (from 1 indexing to 0 indexing).","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"simonjulianl"},"content":"     * @return Task or null if reading the file fails.","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"simonjulianl"},"content":"     * @throws IndexOutOfBoundsException If the index is invalid.","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"simonjulianl"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"simonjulianl"},"content":"    Task getTask(int index) throws IndexOutOfBoundsException;","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"simonjulianl"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"simonjulianl"},"content":"     * Gets all the tasks from the list.","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"simonjulianl"},"content":"     * Returns empty list if reading the file fails.","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"simonjulianl"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"simonjulianl"},"content":"     * @return Tasks ArrayList of all the tasks in the list.","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"simonjulianl"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"simonjulianl"},"content":"    List\u003cTask\u003e getAll();","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"simonjulianl"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"simonjulianl"},"content":"     * Gets all the tasks from the list filtered by keyword.","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"simonjulianl"},"content":"     * Returns empty list if reading the file fails.","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"simonjulianl"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"simonjulianl"},"content":"     * @return Tasks ArrayList of the tasks filtered by keyword.","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"simonjulianl"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"simonjulianl"},"content":"    List\u003cTask\u003e getByKeyword(String keyword);","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"simonjulianl"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"simonjulianl"},"content":"     * Gets the size of the current list.","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"simonjulianl"},"content":"     * Returns -1 if the Task file cannot be read or invalid.","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"simonjulianl"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"simonjulianl"},"content":"     * @return Size of the current list or -1.","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"simonjulianl"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":65,"author":{"gitId":"simonjulianl"},"content":"    int getSize();","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"simonjulianl"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"simonjulianl":66}},{"path":"src/main/java/dao/TaskDaoImpl.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simonjulianl"},"content":"package dao;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"simonjulianl"},"content":"import configuration.Setting;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"simonjulianl"},"content":"import model.Task;","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"simonjulianl"},"content":"import storage.FileListStorage;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"simonjulianl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"simonjulianl"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"simonjulianl"},"content":"import java.util.List;","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"simonjulianl"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"simonjulianl"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"simonjulianl"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"simonjulianl"},"content":" * Implementation of the TaskDao using a FileListStorage.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"simonjulianl"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"simonjulianl"},"content":"public class TaskDaoImpl implements TaskDao {","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"simonjulianl"},"content":"    private final Logger logger \u003d Logger.getLogger(TaskDaoImpl.class.getName());","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"simonjulianl"},"content":"    /** Invalid tasks file size */","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"simonjulianl"},"content":"    private final int INVALID_SIZE \u003d -1;","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"simonjulianl"},"content":"    /** File containing the ArrayList of Task */","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"simonjulianl"},"content":"    private final FileListStorage\u003cTask\u003e taskFileListStorage \u003d","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"simonjulianl"},"content":"            new FileListStorage\u003c\u003e(Setting.DATA_DIR_PATH + \"/\" + Setting.DATA_TASKS);","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"simonjulianl"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"simonjulianl"},"content":"     * {@inheritDoc}","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"simonjulianl"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"simonjulianl"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"simonjulianl"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"simonjulianl"},"content":"        synchronized (this) {","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"simonjulianl"},"content":"            try {","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"simonjulianl"},"content":"                ArrayList\u003cTask\u003e tasks \u003d taskFileListStorage.readArrayListFromFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"simonjulianl"},"content":"                tasks.add(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"simonjulianl"},"content":"                taskFileListStorage.writeArrayListToFile(tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"simonjulianl"},"content":"            } catch (Exception e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"simonjulianl"},"content":"                logger.warning(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"simonjulianl"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"simonjulianl"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"simonjulianl"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"simonjulianl"},"content":"     * {@inheritDoc}","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"simonjulianl"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"simonjulianl"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"simonjulianl"},"content":"    public Task deleteTask(int index) {","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"simonjulianl"},"content":"        if (isInvalidIndex(index)) {","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"simonjulianl"},"content":"            throw new IndexOutOfBoundsException(\"non valid index for deletion\");","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"simonjulianl"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"simonjulianl"},"content":"        ","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"simonjulianl"},"content":"        synchronized (this) {","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"simonjulianl"},"content":"            try {","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"simonjulianl"},"content":"                ArrayList\u003cTask\u003e tasks \u003d taskFileListStorage.readArrayListFromFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"simonjulianl"},"content":"                Task removedTask \u003d tasks.remove(index);","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"simonjulianl"},"content":"                taskFileListStorage.writeArrayListToFile(tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"simonjulianl"},"content":"                ","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"simonjulianl"},"content":"                return removedTask;","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"simonjulianl"},"content":"            } catch (Exception e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"simonjulianl"},"content":"                logger.warning(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"simonjulianl"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"simonjulianl"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"simonjulianl"},"content":"        ","lastModifiedDate":"2021-08-19"},{"lineNumber":63,"author":{"gitId":"simonjulianl"},"content":"        return null;","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":65,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-19"},{"lineNumber":66,"author":{"gitId":"simonjulianl"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"simonjulianl"},"content":"     * {@inheritDoc}","lastModifiedDate":"2021-08-31"},{"lineNumber":68,"author":{"gitId":"simonjulianl"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":69,"author":{"gitId":"simonjulianl"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":70,"author":{"gitId":"simonjulianl"},"content":"    public void markDone(int index) {","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"simonjulianl"},"content":"        if (isInvalidIndex(index)) {","lastModifiedDate":"2021-08-19"},{"lineNumber":72,"author":{"gitId":"simonjulianl"},"content":"            throw new IndexOutOfBoundsException(\"non valid index for marking the task done\");","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"simonjulianl"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":74,"author":{"gitId":"simonjulianl"},"content":"        ","lastModifiedDate":"2021-08-19"},{"lineNumber":75,"author":{"gitId":"simonjulianl"},"content":"        synchronized (this) {","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"simonjulianl"},"content":"            try {","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"simonjulianl"},"content":"                ArrayList\u003cTask\u003e tasks \u003d taskFileListStorage.readArrayListFromFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"simonjulianl"},"content":"                Task task \u003d tasks.get(index);","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"simonjulianl"},"content":"                task.markDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"simonjulianl"},"content":"                taskFileListStorage.writeArrayListToFile(tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"simonjulianl"},"content":"            } catch (Exception e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"simonjulianl"},"content":"                logger.warning(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"simonjulianl"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"simonjulianl"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":86,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-19"},{"lineNumber":87,"author":{"gitId":"simonjulianl"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":88,"author":{"gitId":"simonjulianl"},"content":"     * {@inheritDoc}","lastModifiedDate":"2021-08-31"},{"lineNumber":89,"author":{"gitId":"simonjulianl"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":90,"author":{"gitId":"simonjulianl"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":91,"author":{"gitId":"simonjulianl"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"simonjulianl"},"content":"        if (isInvalidIndex(index)) {","lastModifiedDate":"2021-08-19"},{"lineNumber":93,"author":{"gitId":"simonjulianl"},"content":"            throw new IndexOutOfBoundsException(\"non valid index for marking the task done\");","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"simonjulianl"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":95,"author":{"gitId":"simonjulianl"},"content":"        ","lastModifiedDate":"2021-08-19"},{"lineNumber":96,"author":{"gitId":"simonjulianl"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"simonjulianl"},"content":"            ArrayList\u003cTask\u003e tasks \u003d taskFileListStorage.readArrayListFromFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"simonjulianl"},"content":"            return tasks.get(index);","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"simonjulianl"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"simonjulianl"},"content":"            logger.warning(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"simonjulianl"},"content":"            return null;","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"simonjulianl"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":104,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-19"},{"lineNumber":105,"author":{"gitId":"simonjulianl"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":106,"author":{"gitId":"simonjulianl"},"content":"     * {@inheritDoc}","lastModifiedDate":"2021-08-31"},{"lineNumber":107,"author":{"gitId":"simonjulianl"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":108,"author":{"gitId":"simonjulianl"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":109,"author":{"gitId":"simonjulianl"},"content":"    public List\u003cTask\u003e getAll() {","lastModifiedDate":"2021-08-19"},{"lineNumber":110,"author":{"gitId":"simonjulianl"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":111,"author":{"gitId":"simonjulianl"},"content":"            return taskFileListStorage.readArrayListFromFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"simonjulianl"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":113,"author":{"gitId":"simonjulianl"},"content":"            logger.warning(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":114,"author":{"gitId":"simonjulianl"},"content":"            return List.of();","lastModifiedDate":"2021-08-23"},{"lineNumber":115,"author":{"gitId":"simonjulianl"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":117,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-19"},{"lineNumber":118,"author":{"gitId":"simonjulianl"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":119,"author":{"gitId":"simonjulianl"},"content":"     * {@inheritDoc}","lastModifiedDate":"2021-08-31"},{"lineNumber":120,"author":{"gitId":"simonjulianl"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":121,"author":{"gitId":"simonjulianl"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"simonjulianl"},"content":"    public List\u003cTask\u003e getByKeyword(String keyword) {","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"simonjulianl"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"simonjulianl"},"content":"            ArrayList\u003cTask\u003e tasks \u003d taskFileListStorage.readArrayListFromFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":125,"author":{"gitId":"simonjulianl"},"content":"            return tasks.stream()","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"simonjulianl"},"content":"                    .filter(x -\u003e Arrays.asList(x.getDesc().split(\" \")).contains(keyword))","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"simonjulianl"},"content":"                    .collect(Collectors.toList());","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"simonjulianl"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"simonjulianl"},"content":"            logger.warning(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"simonjulianl"},"content":"            return List.of();","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"simonjulianl"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":132,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":133,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-24"},{"lineNumber":134,"author":{"gitId":"simonjulianl"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":135,"author":{"gitId":"simonjulianl"},"content":"     * {@inheritDoc}","lastModifiedDate":"2021-08-31"},{"lineNumber":136,"author":{"gitId":"simonjulianl"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":137,"author":{"gitId":"simonjulianl"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":138,"author":{"gitId":"simonjulianl"},"content":"    public int getSize() {","lastModifiedDate":"2021-08-23"},{"lineNumber":139,"author":{"gitId":"simonjulianl"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":140,"author":{"gitId":"simonjulianl"},"content":"            ArrayList\u003cTask\u003e tasks \u003d taskFileListStorage.readArrayListFromFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":141,"author":{"gitId":"simonjulianl"},"content":"            return tasks.size();","lastModifiedDate":"2021-08-23"},{"lineNumber":142,"author":{"gitId":"simonjulianl"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":143,"author":{"gitId":"simonjulianl"},"content":"            logger.warning(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":144,"author":{"gitId":"simonjulianl"},"content":"            return INVALID_SIZE;","lastModifiedDate":"2021-08-30"},{"lineNumber":145,"author":{"gitId":"simonjulianl"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":146,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":147,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-19"},{"lineNumber":148,"author":{"gitId":"simonjulianl"},"content":"    private boolean isInvalidIndex(int index) {","lastModifiedDate":"2021-08-19"},{"lineNumber":149,"author":{"gitId":"simonjulianl"},"content":"        int size \u003d getSize();","lastModifiedDate":"2021-08-23"},{"lineNumber":150,"author":{"gitId":"simonjulianl"},"content":"        boolean isIndexOutOfBound \u003d index \u003e\u003d getSize() || index \u003c 0;","lastModifiedDate":"2021-08-30"},{"lineNumber":151,"author":{"gitId":"simonjulianl"},"content":"        ","lastModifiedDate":"2021-08-30"},{"lineNumber":152,"author":{"gitId":"simonjulianl"},"content":"        return size \u003d\u003d INVALID_SIZE || isIndexOutOfBound;","lastModifiedDate":"2021-09-01"},{"lineNumber":153,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":154,"author":{"gitId":"simonjulianl"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"simonjulianl":154}},{"path":"src/main/java/logic/CommandLogicUnitImpl.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simonjulianl"},"content":"package logic;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"simonjulianl"},"content":"import dao.TaskDao;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"simonjulianl"},"content":"import model.Command;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"simonjulianl"},"content":"import model.Deadline;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"simonjulianl"},"content":"import model.Event;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"simonjulianl"},"content":"import model.Task;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"simonjulianl"},"content":"import model.TimedItem;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"simonjulianl"},"content":"import model.ToDos;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"simonjulianl"},"content":"import ui.IUi;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"simonjulianl"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"simonjulianl"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"simonjulianl"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"simonjulianl"},"content":"import java.util.List;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"simonjulianl"},"content":"import java.util.Map;","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"simonjulianl"},"content":"import java.util.Optional;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"simonjulianl"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"simonjulianl"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"simonjulianl"},"content":" * Logic class that would handle all the logics and processing, together with the temporary data layer of the commands","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"simonjulianl"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"simonjulianl"},"content":"public class CommandLogicUnitImpl implements ICommandLogicUnit {","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"simonjulianl"},"content":"    /** Data access object for Task */","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"simonjulianl"},"content":"    private final TaskDao taskDao;","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"simonjulianl"},"content":"    /** UI that is responsible to interacts with user */","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"simonjulianl"},"content":"    private final IUi ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"simonjulianl"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"simonjulianl"},"content":"     * Constructor of CommandLogicUnitImpl that processes all the available commands.","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"simonjulianl"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"simonjulianl"},"content":"     * @param taskDao TaskDao.","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"simonjulianl"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"simonjulianl"},"content":"    public CommandLogicUnitImpl(TaskDao taskDao, IUi ui) {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"simonjulianl"},"content":"        this.taskDao \u003d taskDao;","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"simonjulianl"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"simonjulianl"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"simonjulianl"},"content":"     * {@inheritDoc}","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"simonjulianl"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"simonjulianl"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":44,"author":{"gitId":"simonjulianl"},"content":"    public void processCommand(Command command, Map\u003cString, String\u003e arguments) {","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"simonjulianl"},"content":"        switch (command) {","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"simonjulianl"},"content":"        case BYE:","lastModifiedDate":"2021-08-16"},{"lineNumber":47,"author":{"gitId":"simonjulianl"},"content":"            processBye();","lastModifiedDate":"2021-08-16"},{"lineNumber":48,"author":{"gitId":"simonjulianl"},"content":"            break;","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"simonjulianl"},"content":"        case LIST: {","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"simonjulianl"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"simonjulianl"},"content":"            ","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"simonjulianl"},"content":"            Optional\u003cString\u003e date \u003d Optional.ofNullable(arguments.getOrDefault(\"date\", null));","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"simonjulianl"},"content":"            Optional\u003cLocalDate\u003e localDateOptional \u003d","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"simonjulianl"},"content":"                    date.filter(dateStr -\u003e !dateStr.equals(\"\"))","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"simonjulianl"},"content":"                            .map(dateStr -\u003e LocalDate.parse(dateStr, formatter));","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"simonjulianl"},"content":"            ","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"simonjulianl"},"content":"            processList(localDateOptional);","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"simonjulianl"},"content":"            break;","lastModifiedDate":"2021-08-16"},{"lineNumber":59,"author":{"gitId":"simonjulianl"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"simonjulianl"},"content":"        case DEADLINE: {","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"simonjulianl"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"simonjulianl"},"content":"            ","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"simonjulianl"},"content":"            processAdd(new Deadline(","lastModifiedDate":"2021-08-16"},{"lineNumber":64,"author":{"gitId":"simonjulianl"},"content":"                    arguments.getOrDefault(\"description\", \"default deadline desc\"),","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"simonjulianl"},"content":"                    LocalDateTime.parse(arguments.getOrDefault(\"timing\", LocalDateTime.now().toString()), formatter)","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"simonjulianl"},"content":"            ));","lastModifiedDate":"2021-08-16"},{"lineNumber":67,"author":{"gitId":"simonjulianl"},"content":"            break;","lastModifiedDate":"2021-08-16"},{"lineNumber":68,"author":{"gitId":"simonjulianl"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"simonjulianl"},"content":"        case EVENT: {","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"simonjulianl"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"simonjulianl"},"content":"            ","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"simonjulianl"},"content":"            processAdd(new Event(","lastModifiedDate":"2021-08-16"},{"lineNumber":73,"author":{"gitId":"simonjulianl"},"content":"                    arguments.getOrDefault(\"description\", \"default event\"),","lastModifiedDate":"2021-08-16"},{"lineNumber":74,"author":{"gitId":"simonjulianl"},"content":"                    LocalDateTime.parse(arguments.getOrDefault(\"timing\", LocalDateTime.now().toString()), formatter)","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"simonjulianl"},"content":"            ));","lastModifiedDate":"2021-08-16"},{"lineNumber":76,"author":{"gitId":"simonjulianl"},"content":"            break;","lastModifiedDate":"2021-08-16"},{"lineNumber":77,"author":{"gitId":"simonjulianl"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"simonjulianl"},"content":"        case TODOS:","lastModifiedDate":"2021-08-16"},{"lineNumber":79,"author":{"gitId":"simonjulianl"},"content":"            processAdd(new ToDos(arguments.getOrDefault(\"description\", \"default todo\")));","lastModifiedDate":"2021-08-16"},{"lineNumber":80,"author":{"gitId":"simonjulianl"},"content":"            break;","lastModifiedDate":"2021-08-16"},{"lineNumber":81,"author":{"gitId":"simonjulianl"},"content":"        case DONE:","lastModifiedDate":"2021-08-16"},{"lineNumber":82,"author":{"gitId":"simonjulianl"},"content":"            // convert 1-indexing to 0-indexing","lastModifiedDate":"2021-08-16"},{"lineNumber":83,"author":{"gitId":"simonjulianl"},"content":"            processDone(Integer.parseInt(arguments.getOrDefault(\"index\", \"-1\")) - 1);","lastModifiedDate":"2021-08-16"},{"lineNumber":84,"author":{"gitId":"simonjulianl"},"content":"            break;","lastModifiedDate":"2021-08-16"},{"lineNumber":85,"author":{"gitId":"simonjulianl"},"content":"        case DELETE:","lastModifiedDate":"2021-08-16"},{"lineNumber":86,"author":{"gitId":"simonjulianl"},"content":"            processDelete(Integer.parseInt(arguments.getOrDefault(\"index\", \"-1\")) - 1);","lastModifiedDate":"2021-08-16"},{"lineNumber":87,"author":{"gitId":"simonjulianl"},"content":"            break;","lastModifiedDate":"2021-08-16"},{"lineNumber":88,"author":{"gitId":"simonjulianl"},"content":"        case FIND:","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"simonjulianl"},"content":"            processFind(Optional.ofNullable(arguments.getOrDefault(\"keyword\", null)));","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"simonjulianl"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"simonjulianl"},"content":"        default:","lastModifiedDate":"2021-08-16"},{"lineNumber":92,"author":{"gitId":"simonjulianl"},"content":"            ui.printSentence(\"command not recognized by processor\");","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"simonjulianl"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":94,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":95,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-16"},{"lineNumber":96,"author":{"gitId":"simonjulianl"},"content":"    private void processBye() {","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"simonjulianl"},"content":"        ui.printSentence(\" Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"simonjulianl"},"content":"        System.exit(0);","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"simonjulianl"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"simonjulianl"},"content":"     * Prints the entire list of tasks whether its done or not done.","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"simonjulianl"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"simonjulianl"},"content":"    @SuppressWarnings(\"OptionalUsedAsFieldOrParameterType\")","lastModifiedDate":"2021-08-30"},{"lineNumber":105,"author":{"gitId":"simonjulianl"},"content":"    private void processList(Optional\u003cLocalDate\u003e localDateOptional) {","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"simonjulianl"},"content":"        localDateOptional.ifPresentOrElse(","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"simonjulianl"},"content":"                x -\u003e ui.printIndexedList(taskDao.getAll()","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"simonjulianl"},"content":"                        .stream()","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"simonjulianl"},"content":"                        .filter(task -\u003e task instanceof TimedItem)","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"simonjulianl"},"content":"                        .filter(task -\u003e ((TimedItem) task).getTime().toLocalDate().isEqual(x))","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"simonjulianl"},"content":"                        .collect(Collectors.toList())),","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"simonjulianl"},"content":"                () -\u003e ui.printIndexedList(taskDao.getAll())","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"simonjulianl"},"content":"        );","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":115,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"simonjulianl"},"content":"    private void processAdd(Task task) {","lastModifiedDate":"2021-08-16"},{"lineNumber":117,"author":{"gitId":"simonjulianl"},"content":"        taskDao.addTask(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":118,"author":{"gitId":"simonjulianl"},"content":"        ","lastModifiedDate":"2021-08-16"},{"lineNumber":119,"author":{"gitId":"simonjulianl"},"content":"        ui.printSentence(\" Got it. I\u0027ve added this task: \\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":120,"author":{"gitId":"simonjulianl"},"content":"                + \"\\t\" + task.toString() + \"\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":121,"author":{"gitId":"simonjulianl"},"content":"                + \" Now you have \" + taskDao.getSize() + \" tasks in the list.\");","lastModifiedDate":"2021-08-30"},{"lineNumber":122,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":123,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-16"},{"lineNumber":124,"author":{"gitId":"simonjulianl"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":125,"author":{"gitId":"simonjulianl"},"content":"     * Processes the DONE Command.","lastModifiedDate":"2021-08-23"},{"lineNumber":126,"author":{"gitId":"simonjulianl"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":127,"author":{"gitId":"simonjulianl"},"content":"     * @param index 0-indexed integer","lastModifiedDate":"2021-08-16"},{"lineNumber":128,"author":{"gitId":"simonjulianl"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":129,"author":{"gitId":"simonjulianl"},"content":"    private void processDone(int index) {","lastModifiedDate":"2021-08-19"},{"lineNumber":130,"author":{"gitId":"simonjulianl"},"content":"        taskDao.markDone(index);","lastModifiedDate":"2021-08-23"},{"lineNumber":131,"author":{"gitId":"simonjulianl"},"content":"        ","lastModifiedDate":"2021-08-16"},{"lineNumber":132,"author":{"gitId":"simonjulianl"},"content":"        ui.printSentence(\"Nice! I\u0027ve marked this task as done: \\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":133,"author":{"gitId":"simonjulianl"},"content":"                + \"\\t [X] \" + taskDao.getTask(index).getDesc());","lastModifiedDate":"2021-08-30"},{"lineNumber":134,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":135,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-16"},{"lineNumber":136,"author":{"gitId":"simonjulianl"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":137,"author":{"gitId":"simonjulianl"},"content":"     * Processes the DELETE Command.","lastModifiedDate":"2021-08-23"},{"lineNumber":138,"author":{"gitId":"simonjulianl"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":139,"author":{"gitId":"simonjulianl"},"content":"     * @param index 0-indexed integer","lastModifiedDate":"2021-08-16"},{"lineNumber":140,"author":{"gitId":"simonjulianl"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":141,"author":{"gitId":"simonjulianl"},"content":"    private void processDelete(int index) {","lastModifiedDate":"2021-08-16"},{"lineNumber":142,"author":{"gitId":"simonjulianl"},"content":"        Task deletedTask \u003d taskDao.deleteTask(index);","lastModifiedDate":"2021-08-23"},{"lineNumber":143,"author":{"gitId":"simonjulianl"},"content":"        ","lastModifiedDate":"2021-08-16"},{"lineNumber":144,"author":{"gitId":"simonjulianl"},"content":"        ui.printSentence(\" Noted. I\u0027ve removed this task: \\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":145,"author":{"gitId":"simonjulianl"},"content":"                + \"\\t\" + deletedTask.toString() + \"\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":146,"author":{"gitId":"simonjulianl"},"content":"                + \" Now you have \" + taskDao.getSize() + \" tasks in the list.\");","lastModifiedDate":"2021-08-30"},{"lineNumber":147,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":148,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-24"},{"lineNumber":149,"author":{"gitId":"simonjulianl"},"content":"    @SuppressWarnings(\"OptionalUsedAsFieldOrParameterType\")","lastModifiedDate":"2021-08-30"},{"lineNumber":150,"author":{"gitId":"simonjulianl"},"content":"    private void processFind(Optional\u003cString\u003e keyword) {","lastModifiedDate":"2021-08-24"},{"lineNumber":151,"author":{"gitId":"simonjulianl"},"content":"        keyword.ifPresentOrElse(s -\u003e {","lastModifiedDate":"2021-08-24"},{"lineNumber":152,"author":{"gitId":"simonjulianl"},"content":"                    List\u003cTask\u003e tasks \u003d taskDao.getByKeyword(s);","lastModifiedDate":"2021-08-24"},{"lineNumber":153,"author":{"gitId":"simonjulianl"},"content":"                    ui.printIndexedList(tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":154,"author":{"gitId":"simonjulianl"},"content":"                },","lastModifiedDate":"2021-08-24"},{"lineNumber":155,"author":{"gitId":"simonjulianl"},"content":"                () -\u003e processList(Optional.empty()));","lastModifiedDate":"2021-08-24"},{"lineNumber":156,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":157,"author":{"gitId":"simonjulianl"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"simonjulianl":157}},{"path":"src/main/java/logic/ICommandLogicUnit.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simonjulianl"},"content":"package logic;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"simonjulianl"},"content":"import model.Command;","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"simonjulianl"},"content":"import java.util.Map;","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"simonjulianl"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"simonjulianl"},"content":" * Interface for the central processing unit of the commands that contain the logic and data layer.","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"simonjulianl"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"simonjulianl"},"content":"public interface ICommandLogicUnit {","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"simonjulianl"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"simonjulianl"},"content":"     * Processes commands, in this implementation it accepts all the commands in the enum Command.","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"simonjulianl"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"simonjulianl"},"content":"     * @param command Command.","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"simonjulianl"},"content":"     * @param arguments Key-Value pair corresponding to name and value of each argument for the command.","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"simonjulianl"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"simonjulianl"},"content":"    void processCommand(Command command, Map\u003cString, String\u003e arguments);","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"simonjulianl"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"simonjulianl":18}},{"path":"src/main/java/model/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simonjulianl"},"content":"package model;","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"simonjulianl"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"simonjulianl"},"content":" * List of commands available for the logic unit.","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"simonjulianl"},"content":" * \u003col\u003e","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"simonjulianl"},"content":" *  \u003cli\u003e","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"simonjulianl"},"content":" *      BYE : to end the chat, no arguments requires, any extra arguments would be ignored, invoked using \"bye\".","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"simonjulianl"},"content":" *  \u003c/li\u003e","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"simonjulianl"},"content":" *  \u003cli\u003e","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"simonjulianl"},"content":" *      LIST : list the entire tasks array.","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"simonjulianl"},"content":" *  \u003c/li\u003e","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"simonjulianl"},"content":" *  \u003cli\u003e","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"simonjulianl"},"content":" *      FIND : find tasks using keyword.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"simonjulianl"},"content":" *  \u003c/li\u003e","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"simonjulianl"},"content":" *  \u003cli\u003e","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"simonjulianl"},"content":" *     Adding a Task: divided into 3 smaller parts :","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"simonjulianl"},"content":" *     \u003cul\u003e","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"simonjulianl"},"content":" *      \u003cli\u003e","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"simonjulianl"},"content":" *       DEADLINE : add a new deadline, takes 3 arguments section: description, \\by, deadline.","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"simonjulianl"},"content":" *      \u003c/li\u003e","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"simonjulianl"},"content":" *      \u003cli\u003e","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"simonjulianl"},"content":" *     EVENT : add a new deadline, takes 3 arguments section: description, \\at, deadline.","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"simonjulianl"},"content":" *      \u003c/li\u003e","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"simonjulianl"},"content":" *      \u003cli\u003e","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"simonjulianl"},"content":" *        TODOS : add a new deadline, takes 1 argument : description.","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"simonjulianl"},"content":" *      \u003c/li\u003e","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"simonjulianl"},"content":" *    \u003c/ul\u003e","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"simonjulianl"},"content":" *  \u003c/li\u003e","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"simonjulianl"},"content":" *  \u003cli\u003e","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"simonjulianl"},"content":" *      DONE : mark the task as done, 1 argument is required which is the number of task (the rest is ignored).","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"simonjulianl"},"content":" *  \u003c/li\u003e","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"simonjulianl"},"content":" *  \u003cli\u003e","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"simonjulianl"},"content":" *      INVALID : any other commands other than bye, the whole sentence would be echoed back instead.","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"simonjulianl"},"content":" *  \u003c/li\u003e","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"simonjulianl"},"content":" * \u003c/ol\u003e","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"simonjulianl"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"simonjulianl"},"content":"public enum Command {","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"simonjulianl"},"content":"    BYE,","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"simonjulianl"},"content":"    LIST,","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"simonjulianl"},"content":"    FIND,","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"simonjulianl"},"content":"    DEADLINE,","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"simonjulianl"},"content":"    EVENT,","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"simonjulianl"},"content":"    TODOS,","lastModifiedDate":"2021-08-16"},{"lineNumber":44,"author":{"gitId":"simonjulianl"},"content":"    DELETE,","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"simonjulianl"},"content":"    DONE,","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"simonjulianl"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"simonjulianl":46}},{"path":"src/main/java/model/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simonjulianl"},"content":"package model;","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"simonjulianl"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"simonjulianl"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"simonjulianl"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"simonjulianl"},"content":" * Task containing description and the deadline of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"simonjulianl"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"simonjulianl"},"content":"public class Deadline extends Task implements TimedItem {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"simonjulianl"},"content":"    /** Deadline stored in local date time */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"simonjulianl"},"content":"    private final LocalDateTime deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"simonjulianl"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"simonjulianl"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"simonjulianl"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"simonjulianl"},"content":"     * @param desc Description.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"simonjulianl"},"content":"     * @param deadline LocalDateTime.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"simonjulianl"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"simonjulianl"},"content":"    public Deadline(String desc, LocalDateTime deadline) {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"simonjulianl"},"content":"        super(desc);","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"simonjulianl"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"simonjulianl"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"simonjulianl"},"content":"     * Returns string representation of deadline, marked with [D], desc and the deadline.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"simonjulianl"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"simonjulianl"},"content":"     * @return string.","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"simonjulianl"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"simonjulianl"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"simonjulianl"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"simonjulianl"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"simonjulianl"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + deadline.format(formatter) + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"simonjulianl"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"simonjulianl"},"content":"     * {@inheritDoc}","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"simonjulianl"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"simonjulianl"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"simonjulianl"},"content":"    public LocalDateTime getTime() {","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"simonjulianl"},"content":"        return deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"simonjulianl"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"simonjulianl":43}},{"path":"src/main/java/model/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simonjulianl"},"content":"package model;","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"simonjulianl"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"simonjulianl"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"simonjulianl"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"simonjulianl"},"content":" * Task containing description and the time of the event.","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"simonjulianl"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"simonjulianl"},"content":"public class Event extends Task implements TimedItem {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"simonjulianl"},"content":"    /** LocalDateTime of the event */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"simonjulianl"},"content":"    private final LocalDateTime time;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"simonjulianl"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"simonjulianl"},"content":"     * Creates an Event that has a description and timing.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"simonjulianl"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"simonjulianl"},"content":"     * @param desc String representing the description","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"simonjulianl"},"content":"     * @param time LocalDateTime.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"simonjulianl"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"simonjulianl"},"content":"    public Event(String desc, LocalDateTime time) {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"simonjulianl"},"content":"        super(desc);","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"simonjulianl"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"simonjulianl"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"simonjulianl"},"content":"     * String representation of Event, marked with [E], desc and the timing","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"simonjulianl"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"simonjulianl"},"content":"     * @return string","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"simonjulianl"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"simonjulianl"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"simonjulianl"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"simonjulianl"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"simonjulianl"},"content":"        return \"[E]\" + super.toString() + \" (at : \" + time.format(formatter) + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"simonjulianl"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"simonjulianl"},"content":"     * {@inheritDoc}","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"simonjulianl"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"simonjulianl"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"simonjulianl"},"content":"    public LocalDateTime getTime() {","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"simonjulianl"},"content":"        return time;","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"simonjulianl"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"simonjulianl":42}},{"path":"src/main/java/model/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simonjulianl"},"content":"package model;","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"simonjulianl"},"content":"import java.io.Serializable;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"simonjulianl"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"simonjulianl"},"content":" * abstract class of task that represents a thing to be done","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"simonjulianl"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"simonjulianl"},"content":"public abstract class Task implements Serializable {","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"simonjulianl"},"content":"    private final String desc;","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"simonjulianl"},"content":"    private boolean isDone \u003d false;","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"simonjulianl"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"simonjulianl"},"content":"     * Constructor of the abstract class, to be initialized with the subclass.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"simonjulianl"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"simonjulianl"},"content":"     * @param desc Description.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"simonjulianl"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"simonjulianl"},"content":"    public Task(String desc) {","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"simonjulianl"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"simonjulianl"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"simonjulianl"},"content":"     * Marks the task as done.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"simonjulianl"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"simonjulianl"},"content":"    public void markDone() {","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"simonjulianl"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"simonjulianl"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"simonjulianl"},"content":"     * Gets the status of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"simonjulianl"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"simonjulianl"},"content":"     * @return Boolean representing whether the task is done.","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"simonjulianl"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"simonjulianl"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"simonjulianl"},"content":"        return this.isDone;","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"simonjulianl"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"simonjulianl"},"content":"     * Gets description of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"simonjulianl"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"simonjulianl"},"content":"     * @return String representing the description.","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"simonjulianl"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"simonjulianl"},"content":"    public String getDesc() {","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"simonjulianl"},"content":"        return this.desc;","lastModifiedDate":"2021-08-16"},{"lineNumber":44,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"simonjulianl"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"simonjulianl"},"content":"     * Returns string representation of task class.","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"simonjulianl"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":49,"author":{"gitId":"simonjulianl"},"content":"     * @return [X] or [ ] indicating whether the task is done and the description.","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"simonjulianl"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":51,"author":{"gitId":"simonjulianl"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":52,"author":{"gitId":"simonjulianl"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":53,"author":{"gitId":"simonjulianl"},"content":"        return (this.isDone() ? \"[X] \" : \"[ ] \") + this.desc;","lastModifiedDate":"2021-08-16"},{"lineNumber":54,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":55,"author":{"gitId":"simonjulianl"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"simonjulianl":55}},{"path":"src/main/java/model/TimedItem.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simonjulianl"},"content":"package model;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"simonjulianl"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"simonjulianl"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"simonjulianl"},"content":" * Model that a time signifying certain semantics.","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"simonjulianl"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"simonjulianl"},"content":"public interface TimedItem {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"simonjulianl"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"simonjulianl"},"content":"     * Gets the time of the item.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"simonjulianl"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"simonjulianl"},"content":"     * @return LocalDateTime.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"simonjulianl"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"simonjulianl"},"content":"    LocalDateTime getTime();","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"simonjulianl"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"simonjulianl":15}},{"path":"src/main/java/model/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simonjulianl"},"content":"package model;","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"simonjulianl"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"simonjulianl"},"content":" * a task containing description only","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"simonjulianl"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"simonjulianl"},"content":"public class ToDos extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"simonjulianl"},"content":"    public ToDos(String desc) {","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"simonjulianl"},"content":"        super(desc);","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"simonjulianl"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"simonjulianl"},"content":"     * String representation of todos, marked with [T] and the desc","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"simonjulianl"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"simonjulianl"},"content":"     * @return string","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"simonjulianl"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"simonjulianl"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"simonjulianl"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"simonjulianl"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"simonjulianl"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"simonjulianl":20}},{"path":"src/main/java/parser/IParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simonjulianl"},"content":"package parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"simonjulianl"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"simonjulianl"},"content":" * Command line processor interface that takes in the input from the console.","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"simonjulianl"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"simonjulianl"},"content":"public interface IParser {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"simonjulianl"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"simonjulianl"},"content":"     * Parses the input from console into corresponding command and process it,","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"simonjulianl"},"content":"     * current implementation using Command Processor.","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"simonjulianl"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"simonjulianl"},"content":"     * @param input String.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"simonjulianl"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"simonjulianl"},"content":"    void processInput(String input);","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"simonjulianl"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"simonjulianl":14}},{"path":"src/main/java/parser/ParserImpl.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simonjulianl"},"content":"package parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"simonjulianl"},"content":"import dao.TaskDaoImpl;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"simonjulianl"},"content":"import logic.ICommandLogicUnit;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"simonjulianl"},"content":"import model.Command;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"simonjulianl"},"content":"import ui.IUi;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"simonjulianl"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"simonjulianl"},"content":"import java.util.List;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"simonjulianl"},"content":"import java.util.Map;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"simonjulianl"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"simonjulianl"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"simonjulianl"},"content":" * An entity that takes in the input from the console and parse it to valid command or throw exception","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"simonjulianl"},"content":" * if the command is invalid","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"simonjulianl"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"simonjulianl"},"content":"public class ParserImpl implements IParser {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"simonjulianl"},"content":"    /** CommandLogicUnit to process all the commands */","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"simonjulianl"},"content":"    private final ICommandLogicUnit commandLogicUnit;","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"simonjulianl"},"content":"    /** UI that is responsible for dealing with interactions with the user */","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"simonjulianl"},"content":"    private final IUi ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"simonjulianl"},"content":"    /** list of available commands and arguments that can be parsed */","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"simonjulianl"},"content":"    private final List\u003cString\u003e availableCommands \u003d List.of(","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"simonjulianl"},"content":"            \"bye\",","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"simonjulianl"},"content":"            \"list (#date dd/MM/yyyy HHmm)\",","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"simonjulianl"},"content":"            \"done #index\",","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"simonjulianl"},"content":"            \"deadline #desc /by #deadline-date(dd/MM/yyyy HHmm)\",","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"simonjulianl"},"content":"            \"todo #desc\",","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"simonjulianl"},"content":"            \"event #desc /at #timing-date(dd/MM/yyyy HHmm)\",","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"simonjulianl"},"content":"            \"delete #index\"","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"simonjulianl"},"content":"    );","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"simonjulianl"},"content":"    private final Logger logger \u003d Logger.getLogger(TaskDaoImpl.class.getName());","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"simonjulianl"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"simonjulianl"},"content":"     * CommandProcessorImplementation that would parse the inputs into commands.","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"simonjulianl"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"simonjulianl"},"content":"     * @param commandLogicUnit CommandLogicUnit that would process the parsed input.","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"simonjulianl"},"content":"     * @param ui UI.","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"simonjulianl"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"simonjulianl"},"content":"    public ParserImpl(ICommandLogicUnit commandLogicUnit, IUi ui) {","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"simonjulianl"},"content":"        this.commandLogicUnit \u003d commandLogicUnit;","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"simonjulianl"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"simonjulianl"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"simonjulianl"},"content":"     * {@inheritDoc}","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"simonjulianl"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"simonjulianl"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"simonjulianl"},"content":"    public void processInput(String input) {","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"simonjulianl"},"content":"        // take the next command within a line, inputted using enter","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"simonjulianl"},"content":"        List\u003cString\u003e parsedCommands \u003d Arrays.asList(input.split(\" \"));","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"simonjulianl"},"content":"        ","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"simonjulianl"},"content":"        processInputHelper(parsedCommands);","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"simonjulianl"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"simonjulianl"},"content":"     * Processes the input as list of strings into commands.","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"simonjulianl"},"content":"     * Helper method for processInput method.","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"simonjulianl"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"simonjulianl"},"content":"     * @param parsedCommands List of string from user inputs.","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"simonjulianl"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"simonjulianl"},"content":"    private void processInputHelper(List\u003cString\u003e parsedCommands) {","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"simonjulianl"},"content":"        switch (parsedCommands.get(0)) {","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"simonjulianl"},"content":"        case \"bye\":","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"simonjulianl"},"content":"            commandLogicUnit.processCommand(Command.BYE, Map.of());","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"simonjulianl"},"content":"            break;","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"simonjulianl"},"content":"        case \"list\":","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"simonjulianl"},"content":"            parseList(parsedCommands);","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"simonjulianl"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"simonjulianl"},"content":"        case \"done\":","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"simonjulianl"},"content":"            parseDone(parsedCommands);","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"simonjulianl"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"simonjulianl"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"simonjulianl"},"content":"            parseDeadline(parsedCommands);","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"simonjulianl"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"simonjulianl"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"simonjulianl"},"content":"            parseTodo(parsedCommands);","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"simonjulianl"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"simonjulianl"},"content":"        case \"event\":","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"simonjulianl"},"content":"            parseEvent(parsedCommands);","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"simonjulianl"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"simonjulianl"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"simonjulianl"},"content":"            parseDelete(parsedCommands);","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"simonjulianl"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"simonjulianl"},"content":"        case \"find\":","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"simonjulianl"},"content":"            parseFind(parsedCommands);","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"simonjulianl"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"simonjulianl"},"content":"        case \"man\":","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"simonjulianl"},"content":"            ui.printSentence(\"() -\u003e optional parameter or format of date time\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":93,"author":{"gitId":"simonjulianl"},"content":"                    + \"# -\u003e the parameter of the commands\");","lastModifiedDate":"2021-08-30"},{"lineNumber":94,"author":{"gitId":"simonjulianl"},"content":"            ui.printIndexedList(availableCommands);","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"simonjulianl"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"simonjulianl"},"content":"        default:","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"simonjulianl"},"content":"            logger.warning(\"Unknown command : \" + parsedCommands.get(0) + \"being parsed\");","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"simonjulianl"},"content":"            processException(new IllegalCallerException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"simonjulianl"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"simonjulianl"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"simonjulianl"},"content":"    private void parseList(List\u003cString\u003e parsedCommands) {","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"simonjulianl"},"content":"        String date \u003d \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"simonjulianl"},"content":"        ","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"simonjulianl"},"content":"        if (parsedCommands.size() \u003e\u003d 2) {","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"simonjulianl"},"content":"            date \u003d parsedCommands.get(1);","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"simonjulianl"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"simonjulianl"},"content":"        ","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"simonjulianl"},"content":"        commandLogicUnit.processCommand(Command.LIST, Map.of(","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"simonjulianl"},"content":"                \"date\", date","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"simonjulianl"},"content":"        ));","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"simonjulianl"},"content":"    private void parseDone(List\u003cString\u003e parsedCommands) {","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"simonjulianl"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":117,"author":{"gitId":"simonjulianl"},"content":"            commandLogicUnit.processCommand(Command.DONE, Map.of(","lastModifiedDate":"2021-08-22"},{"lineNumber":118,"author":{"gitId":"simonjulianl"},"content":"                    \"index\", parsedCommands.get(1)","lastModifiedDate":"2021-08-22"},{"lineNumber":119,"author":{"gitId":"simonjulianl"},"content":"            ));","lastModifiedDate":"2021-08-22"},{"lineNumber":120,"author":{"gitId":"simonjulianl"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":121,"author":{"gitId":"simonjulianl"},"content":"            processException(e);","lastModifiedDate":"2021-08-22"},{"lineNumber":122,"author":{"gitId":"simonjulianl"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":123,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-22"},{"lineNumber":125,"author":{"gitId":"simonjulianl"},"content":"    private void parseDeadline(List\u003cString\u003e parsedCommands) {","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"simonjulianl"},"content":"        int byIndex \u003d parsedCommands.indexOf(\"/by\");","lastModifiedDate":"2021-08-22"},{"lineNumber":127,"author":{"gitId":"simonjulianl"},"content":"        if (byIndex \u003d\u003d -1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"simonjulianl"},"content":"            logger.warning(\"/by not supplied in deadline command\");","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"simonjulianl"},"content":"            throw new IllegalArgumentException(\"/by command not found\");","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"simonjulianl"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"simonjulianl"},"content":"        ","lastModifiedDate":"2021-08-22"},{"lineNumber":132,"author":{"gitId":"simonjulianl"},"content":"        String desc \u003d String.join(\" \", parsedCommands.subList(1, byIndex));","lastModifiedDate":"2021-08-22"},{"lineNumber":133,"author":{"gitId":"simonjulianl"},"content":"        if (desc.isBlank()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":134,"author":{"gitId":"simonjulianl"},"content":"            logger.warning(\"Empty deadline desc supplied\");","lastModifiedDate":"2021-08-24"},{"lineNumber":135,"author":{"gitId":"simonjulianl"},"content":"            throw new IllegalArgumentException(\"deadline desc cannot be empty\");","lastModifiedDate":"2021-08-24"},{"lineNumber":136,"author":{"gitId":"simonjulianl"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":137,"author":{"gitId":"simonjulianl"},"content":"        ","lastModifiedDate":"2021-08-22"},{"lineNumber":138,"author":{"gitId":"simonjulianl"},"content":"        String timing \u003d String.join(\" \", parsedCommands.subList(byIndex + 1, parsedCommands.size()));","lastModifiedDate":"2021-08-22"},{"lineNumber":139,"author":{"gitId":"simonjulianl"},"content":"        if (timing.isBlank()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":140,"author":{"gitId":"simonjulianl"},"content":"            logger.warning(\"Empty deadline timing supplied\");","lastModifiedDate":"2021-08-24"},{"lineNumber":141,"author":{"gitId":"simonjulianl"},"content":"            throw new IllegalArgumentException(\"deadline timing cannot be empty\");","lastModifiedDate":"2021-08-24"},{"lineNumber":142,"author":{"gitId":"simonjulianl"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":143,"author":{"gitId":"simonjulianl"},"content":"        ","lastModifiedDate":"2021-08-22"},{"lineNumber":144,"author":{"gitId":"simonjulianl"},"content":"        commandLogicUnit.processCommand(Command.DEADLINE, Map.of(","lastModifiedDate":"2021-08-22"},{"lineNumber":145,"author":{"gitId":"simonjulianl"},"content":"                \"description\", desc,","lastModifiedDate":"2021-08-22"},{"lineNumber":146,"author":{"gitId":"simonjulianl"},"content":"                \"timing\", timing","lastModifiedDate":"2021-08-22"},{"lineNumber":147,"author":{"gitId":"simonjulianl"},"content":"        ));","lastModifiedDate":"2021-08-22"},{"lineNumber":148,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":149,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-24"},{"lineNumber":150,"author":{"gitId":"simonjulianl"},"content":"    private void parseTodo(List\u003cString\u003e parsedCommands) {","lastModifiedDate":"2021-08-24"},{"lineNumber":151,"author":{"gitId":"simonjulianl"},"content":"        String desc \u003d String.join(\" \", parsedCommands.subList(1, parsedCommands.size()));","lastModifiedDate":"2021-08-22"},{"lineNumber":152,"author":{"gitId":"simonjulianl"},"content":"        ","lastModifiedDate":"2021-08-22"},{"lineNumber":153,"author":{"gitId":"simonjulianl"},"content":"        if (desc.isBlank()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":154,"author":{"gitId":"simonjulianl"},"content":"            logger.warning(\"Empty Todo desc being supplied\");","lastModifiedDate":"2021-08-24"},{"lineNumber":155,"author":{"gitId":"simonjulianl"},"content":"            throw new IllegalArgumentException(\"todo desc cannot be empty\");","lastModifiedDate":"2021-08-24"},{"lineNumber":156,"author":{"gitId":"simonjulianl"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":157,"author":{"gitId":"simonjulianl"},"content":"        ","lastModifiedDate":"2021-08-22"},{"lineNumber":158,"author":{"gitId":"simonjulianl"},"content":"        commandLogicUnit.processCommand(Command.TODOS, Map.of(","lastModifiedDate":"2021-08-22"},{"lineNumber":159,"author":{"gitId":"simonjulianl"},"content":"                \"description\", desc","lastModifiedDate":"2021-08-22"},{"lineNumber":160,"author":{"gitId":"simonjulianl"},"content":"        ));","lastModifiedDate":"2021-08-22"},{"lineNumber":161,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":162,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-24"},{"lineNumber":163,"author":{"gitId":"simonjulianl"},"content":"    private void parseEvent(List\u003cString\u003e parsedCommands) {","lastModifiedDate":"2021-08-24"},{"lineNumber":164,"author":{"gitId":"simonjulianl"},"content":"        int byIndex \u003d parsedCommands.indexOf(\"/at\");","lastModifiedDate":"2021-08-22"},{"lineNumber":165,"author":{"gitId":"simonjulianl"},"content":"        if (byIndex \u003d\u003d -1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":166,"author":{"gitId":"simonjulianl"},"content":"            logger.warning(\"/at not supplied in event command\");","lastModifiedDate":"2021-08-24"},{"lineNumber":167,"author":{"gitId":"simonjulianl"},"content":"            throw new IllegalArgumentException(\"/at command not found\");","lastModifiedDate":"2021-08-24"},{"lineNumber":168,"author":{"gitId":"simonjulianl"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":169,"author":{"gitId":"simonjulianl"},"content":"        ","lastModifiedDate":"2021-08-22"},{"lineNumber":170,"author":{"gitId":"simonjulianl"},"content":"        String desc \u003d String.join(\" \", parsedCommands.subList(1, byIndex));","lastModifiedDate":"2021-08-22"},{"lineNumber":171,"author":{"gitId":"simonjulianl"},"content":"        if (desc.isBlank()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":172,"author":{"gitId":"simonjulianl"},"content":"            logger.warning(\"Empty event desc supplied\");","lastModifiedDate":"2021-08-24"},{"lineNumber":173,"author":{"gitId":"simonjulianl"},"content":"            throw new IllegalArgumentException(\"event desc cannot be empty\");","lastModifiedDate":"2021-08-24"},{"lineNumber":174,"author":{"gitId":"simonjulianl"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":175,"author":{"gitId":"simonjulianl"},"content":"        ","lastModifiedDate":"2021-08-22"},{"lineNumber":176,"author":{"gitId":"simonjulianl"},"content":"        String timing \u003d String.join(\" \", parsedCommands.subList(byIndex + 1, parsedCommands.size()));","lastModifiedDate":"2021-08-22"},{"lineNumber":177,"author":{"gitId":"simonjulianl"},"content":"        if (timing.isBlank()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":178,"author":{"gitId":"simonjulianl"},"content":"            logger.warning(\"Empty todo timing supplied\");","lastModifiedDate":"2021-08-24"},{"lineNumber":179,"author":{"gitId":"simonjulianl"},"content":"            throw new IllegalArgumentException(\"event timing cannot be empty\");","lastModifiedDate":"2021-08-24"},{"lineNumber":180,"author":{"gitId":"simonjulianl"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":181,"author":{"gitId":"simonjulianl"},"content":"        ","lastModifiedDate":"2021-08-22"},{"lineNumber":182,"author":{"gitId":"simonjulianl"},"content":"        commandLogicUnit.processCommand(Command.EVENT, Map.of(","lastModifiedDate":"2021-08-22"},{"lineNumber":183,"author":{"gitId":"simonjulianl"},"content":"                \"description\", desc,","lastModifiedDate":"2021-08-22"},{"lineNumber":184,"author":{"gitId":"simonjulianl"},"content":"                \"timing\", timing","lastModifiedDate":"2021-08-22"},{"lineNumber":185,"author":{"gitId":"simonjulianl"},"content":"        ));","lastModifiedDate":"2021-08-22"},{"lineNumber":186,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":187,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-24"},{"lineNumber":188,"author":{"gitId":"simonjulianl"},"content":"    private void parseDelete(List\u003cString\u003e parsedCommands) {","lastModifiedDate":"2021-08-24"},{"lineNumber":189,"author":{"gitId":"simonjulianl"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":190,"author":{"gitId":"simonjulianl"},"content":"            commandLogicUnit.processCommand(Command.DELETE, Map.of(","lastModifiedDate":"2021-08-22"},{"lineNumber":191,"author":{"gitId":"simonjulianl"},"content":"                    \"index\", parsedCommands.get(1)","lastModifiedDate":"2021-08-22"},{"lineNumber":192,"author":{"gitId":"simonjulianl"},"content":"            ));","lastModifiedDate":"2021-08-22"},{"lineNumber":193,"author":{"gitId":"simonjulianl"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":194,"author":{"gitId":"simonjulianl"},"content":"            processException(e);","lastModifiedDate":"2021-08-22"},{"lineNumber":195,"author":{"gitId":"simonjulianl"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":196,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":197,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-22"},{"lineNumber":198,"author":{"gitId":"simonjulianl"},"content":"    private void parseFind(List\u003cString\u003e parsedCommands) {","lastModifiedDate":"2021-08-24"},{"lineNumber":199,"author":{"gitId":"simonjulianl"},"content":"        if (parsedCommands.size() \u003c 2) {","lastModifiedDate":"2021-08-24"},{"lineNumber":200,"author":{"gitId":"simonjulianl"},"content":"            processException(new IllegalArgumentException(\"keyword cannot be empty\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":201,"author":{"gitId":"simonjulianl"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":202,"author":{"gitId":"simonjulianl"},"content":"        ","lastModifiedDate":"2021-08-24"},{"lineNumber":203,"author":{"gitId":"simonjulianl"},"content":"        String keyword \u003d parsedCommands.get(1);","lastModifiedDate":"2021-08-24"},{"lineNumber":204,"author":{"gitId":"simonjulianl"},"content":"        commandLogicUnit.processCommand(Command.FIND, Map.of(","lastModifiedDate":"2021-08-24"},{"lineNumber":205,"author":{"gitId":"simonjulianl"},"content":"                \"keyword\", keyword","lastModifiedDate":"2021-08-24"},{"lineNumber":206,"author":{"gitId":"simonjulianl"},"content":"        ));","lastModifiedDate":"2021-08-24"},{"lineNumber":207,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":208,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-22"},{"lineNumber":209,"author":{"gitId":"simonjulianl"},"content":"    private void processException(Exception e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":210,"author":{"gitId":"simonjulianl"},"content":"        ui.printSentence(\"OOPS!!! \" + e.getMessage());","lastModifiedDate":"2021-09-01"},{"lineNumber":211,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":212,"author":{"gitId":"simonjulianl"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"simonjulianl":212}},{"path":"src/main/java/storage/FileListStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simonjulianl"},"content":"package storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"simonjulianl"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"simonjulianl"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"simonjulianl"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"simonjulianl"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"simonjulianl"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"simonjulianl"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"simonjulianl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"simonjulianl"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"simonjulianl"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"simonjulianl"},"content":" * File Storage that stores a list of objects.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"simonjulianl"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"simonjulianl"},"content":" * @param \u003cT\u003e Type of the object to be stored.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"simonjulianl"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"simonjulianl"},"content":"public class FileListStorage\u003cT\u003e {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"simonjulianl"},"content":"    private final Logger logger \u003d Logger.getLogger(FileListStorage.class.getName());","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"simonjulianl"},"content":"    /** Path leading to the file */","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"simonjulianl"},"content":"    private final String filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"simonjulianl"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"simonjulianl"},"content":"     * Main constructor of FileListStorage.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"simonjulianl"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"simonjulianl"},"content":"     * @param filePath String representing the path to the file, separated by / char.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"simonjulianl"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"simonjulianl"},"content":"    public FileListStorage(String filePath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"simonjulianl"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"simonjulianl"},"content":"        ","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"simonjulianl"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"simonjulianl"},"content":"            // a local file is used to persistently store all the tasks,","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"simonjulianl"},"content":"            // and it should only have 1 object, which is the list of task","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"simonjulianl"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"simonjulianl"},"content":"            boolean isDirCreated \u003d file.getParentFile().mkdirs();","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"simonjulianl"},"content":"            boolean isFileCreated \u003d file.createNewFile();","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"simonjulianl"},"content":"            ","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"simonjulianl"},"content":"            if (isDirCreated \u0026\u0026 isFileCreated) {","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"simonjulianl"},"content":"                writeArrayListToFile(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"simonjulianl"},"content":"                logger.info(\"FileListStorage is successfully created at \" + file.getAbsolutePath());","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"simonjulianl"},"content":"            } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"simonjulianl"},"content":"                logger.info(\"FileListStorage already exists at \" + file.getAbsolutePath());","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"simonjulianl"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"simonjulianl"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"simonjulianl"},"content":"            logger.severe(\"Task file cannot be created \" + e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"simonjulianl"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"simonjulianl"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"simonjulianl"},"content":"     * Writes the serialized ArrayList of Task into a file.","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"simonjulianl"},"content":"     * It will log IOException error accordingly.","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"simonjulianl"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"simonjulianl"},"content":"     * @param items ArrayList of items to be written.","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"simonjulianl"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"simonjulianl"},"content":"    public void writeArrayListToFile(ArrayList\u003cT\u003e items) {","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"simonjulianl"},"content":"        try (FileOutputStream file \u003d new FileOutputStream(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"simonjulianl"},"content":"             ObjectOutputStream objectOutputStream \u003d new ObjectOutputStream(file)","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"simonjulianl"},"content":"        ) {","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"simonjulianl"},"content":"            objectOutputStream.writeObject(items);","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"simonjulianl"},"content":"            logger.fine(\"Writing Task list to file : \" + filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"simonjulianl"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"simonjulianl"},"content":"            logger.severe(\"Writing tasks to file \" + filePath + \" failed : \" + e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"simonjulianl"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"simonjulianl"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"simonjulianl"},"content":"     * Reads the serialized ArrayList of Task from a file and return it.","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"simonjulianl"},"content":"     * It will log IOException and ClassNotFound error accordingly.","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"simonjulianl"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"simonjulianl"},"content":"    public ArrayList\u003cT\u003e readArrayListFromFile() {","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"simonjulianl"},"content":"        try (FileInputStream file \u003d new FileInputStream(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"simonjulianl"},"content":"             ObjectInputStream objectInputStream \u003d new ObjectInputStream(file)","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"simonjulianl"},"content":"        ) {","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"simonjulianl"},"content":"            @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"simonjulianl"},"content":"            // Casting in mandatory here since we are reading objects","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"simonjulianl"},"content":"            ArrayList\u003cT\u003e tasks \u003d (ArrayList\u003cT\u003e) objectInputStream.readObject();","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"simonjulianl"},"content":"            logger.fine(\"Reading Task List from file : \" + filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"simonjulianl"},"content":"            ","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"simonjulianl"},"content":"            return tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"simonjulianl"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"simonjulianl"},"content":"            logger.severe(\"Reading Task List Failed : \" + e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"simonjulianl"},"content":"        } catch (ClassNotFoundException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"simonjulianl"},"content":"            logger.severe(\"Object cannot be casted to array of task : \" + e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"simonjulianl"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"simonjulianl"},"content":"        ","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"simonjulianl"},"content":"        // Since it cannot be read, we rewrite the file with a new file.","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"simonjulianl"},"content":"        return new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"simonjulianl"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"simonjulianl":89}},{"path":"src/main/java/ui/GuiUiImpl.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simonjulianl"},"content":"package ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"simonjulianl"},"content":"import ui.view.IWindowController;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"simonjulianl"},"content":"import java.util.List;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"simonjulianl"},"content":"public class GuiUiImpl implements IUi {","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"simonjulianl"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"simonjulianl"},"content":"     * The first window controller in the array is reserved for the main window.","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"simonjulianl"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"simonjulianl"},"content":"    private final IWindowController[] mainWindow;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"simonjulianl"},"content":"    public GuiUiImpl(IWindowController... mainWindow) {","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"simonjulianl"},"content":"        this.mainWindow \u003d mainWindow;","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"simonjulianl"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"simonjulianl"},"content":"    public void printSentence(String sentence) {","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"simonjulianl"},"content":"        mainWindow[0].addBotDialog(sentence);","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"simonjulianl"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"simonjulianl"},"content":"    public \u003cT\u003e void printIndexedList(List\u003cT\u003e list) {","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"simonjulianl"},"content":"        String formattedList \u003d formatListToString(list);","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"simonjulianl"},"content":"        mainWindow[0].addBotDialog(formattedList);","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"simonjulianl"},"content":"    private \u003cT\u003e String formatListToString(List\u003cT\u003e list) {","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"simonjulianl"},"content":"        int numbering \u003d 1;","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"simonjulianl"},"content":"        StringBuilder string \u003d new StringBuilder();","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"simonjulianl"},"content":"        ","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"simonjulianl"},"content":"        for (T item : list) {","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"simonjulianl"},"content":"            string.append(\" \")","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"simonjulianl"},"content":"                    .append(numbering)","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"simonjulianl"},"content":"                    .append(\". \")","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"simonjulianl"},"content":"                    .append(item.toString())","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"simonjulianl"},"content":"                    .append(\"\\n\");","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"simonjulianl"},"content":"            ","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"simonjulianl"},"content":"            numbering++;","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"simonjulianl"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"simonjulianl"},"content":"        ","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"simonjulianl"},"content":"        // remove the last extra \\n if there is at least an item in the list","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"simonjulianl"},"content":"        if (list.size() \u003e 0) {","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"simonjulianl"},"content":"            string.deleteCharAt(string.length() - 1);","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"simonjulianl"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"simonjulianl"},"content":"        ","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"simonjulianl"},"content":"        return string.toString();","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"simonjulianl"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"simonjulianl":49}},{"path":"src/main/java/ui/IUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simonjulianl"},"content":"package ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"simonjulianl"},"content":"import java.util.List;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"simonjulianl"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"simonjulianl"},"content":" * Interface for UI.","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"simonjulianl"},"content":" * Sole responsibility is to determine the UI to user.","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"simonjulianl"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"simonjulianl"},"content":"public interface IUi {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"simonjulianl"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"simonjulianl"},"content":"     * Displays the sentence for the CLI.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"simonjulianl"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"simonjulianl"},"content":"     * @param sentence String to be printed.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"simonjulianl"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"simonjulianl"},"content":"    void printSentence(String sentence);","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"simonjulianl"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"simonjulianl"},"content":"     * Displays a list for the CLI.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"simonjulianl"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"simonjulianl"},"content":"     * @param list List.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"simonjulianl"},"content":"     * @param \u003cT\u003e Parameter, implicitly inferred.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"simonjulianl"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"simonjulianl"},"content":"    \u003cT\u003e void printIndexedList(List\u003cT\u003e list);","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"simonjulianl"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"simonjulianl":24}},{"path":"src/main/java/ui/view/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simonjulianl"},"content":"package ui.view;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"simonjulianl"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"simonjulianl"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"simonjulianl"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"simonjulianl"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"simonjulianl"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"simonjulianl"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"simonjulianl"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"simonjulianl"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"simonjulianl"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"simonjulianl"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"simonjulianl"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"simonjulianl"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"simonjulianl"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"simonjulianl"},"content":"// @author Jeffry Lum","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"simonjulianl"},"content":"// Reused from https://se-education.org/guides/tutorials/javaFxPart4.html","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"simonjulianl"},"content":"// with minor modifications","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"simonjulianl"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"simonjulianl"},"content":" * DialogBox view inside the MainWindow.","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"simonjulianl"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"simonjulianl"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"simonjulianl"},"content":"    private final Logger logger \u003d Logger.getLogger(DialogBox.class.getName());","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"simonjulianl"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"simonjulianl"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"simonjulianl"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"simonjulianl"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"simonjulianl"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"simonjulianl"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"simonjulianl"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindowController.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"simonjulianl"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"simonjulianl"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"simonjulianl"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"simonjulianl"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"simonjulianl"},"content":"            logger.severe(e.getMessage());","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"simonjulianl"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"simonjulianl"},"content":"        ","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"simonjulianl"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"simonjulianl"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"simonjulianl"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"simonjulianl"},"content":"     * Gets DialogBox for user.","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"simonjulianl"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"simonjulianl"},"content":"     * @param text String to be displayed.","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"simonjulianl"},"content":"     * @param img user profile pic.","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"simonjulianl"},"content":"     * @return DialogBox.","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"simonjulianl"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"simonjulianl"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"simonjulianl"},"content":"        DialogBox db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"simonjulianl"},"content":"        db.setStyle(\"-fx-background-color: #FFFFF0;\");","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"simonjulianl"},"content":"        return db;","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"simonjulianl"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"simonjulianl"},"content":"     * Gets DialogBox for the Bot.","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"simonjulianl"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"simonjulianl"},"content":"     * @param text String to be displayed.","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"simonjulianl"},"content":"     * @param img bot profile pic.","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"simonjulianl"},"content":"     * @return DialogBox.","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"simonjulianl"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"simonjulianl"},"content":"    public static DialogBox getBotDialog(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"simonjulianl"},"content":"        DialogBox db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"simonjulianl"},"content":"        db.flip();","lastModifiedDate":"2021-09-01"},{"lineNumber":69,"author":{"gitId":"simonjulianl"},"content":"        db.setStyle(\"-fx-background-color: #FFFFFF;\");","lastModifiedDate":"2021-09-01"},{"lineNumber":70,"author":{"gitId":"simonjulianl"},"content":"        return db;","lastModifiedDate":"2021-09-01"},{"lineNumber":71,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":72,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-09-01"},{"lineNumber":73,"author":{"gitId":"simonjulianl"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":74,"author":{"gitId":"simonjulianl"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-01"},{"lineNumber":75,"author":{"gitId":"simonjulianl"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":76,"author":{"gitId":"simonjulianl"},"content":"    private void flip() {","lastModifiedDate":"2021-09-01"},{"lineNumber":77,"author":{"gitId":"simonjulianl"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-01"},{"lineNumber":78,"author":{"gitId":"simonjulianl"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-01"},{"lineNumber":79,"author":{"gitId":"simonjulianl"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-01"},{"lineNumber":80,"author":{"gitId":"simonjulianl"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-01"},{"lineNumber":81,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":82,"author":{"gitId":"simonjulianl"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"simonjulianl":82}},{"path":"src/main/java/ui/view/IWindowController.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simonjulianl"},"content":"package ui.view;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"simonjulianl"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"simonjulianl"},"content":" * Interface for chatbot windows controller.","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"simonjulianl"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"simonjulianl"},"content":"public interface IWindowController {","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"simonjulianl"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"simonjulianl"},"content":"     * Displays the dialog box for the bot which can be used when the bot wants to announce without user inputs.","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"simonjulianl"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"simonjulianl"},"content":"     * @param s String to be displayed.","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"simonjulianl"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"simonjulianl"},"content":"    void addBotDialog(String s);","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"simonjulianl"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"simonjulianl"},"content":"     * Displays the dialog box for the user.","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"simonjulianl"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"simonjulianl"},"content":"     * @param s String to be displayed.","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"simonjulianl"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"simonjulianl"},"content":"    void addUserDialog(String s);","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"simonjulianl"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"simonjulianl":20}},{"path":"src/main/java/ui/view/MainWindowController.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simonjulianl"},"content":"package ui.view;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"simonjulianl"},"content":"import chatbot.IChatbot;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"simonjulianl"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"simonjulianl"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"simonjulianl"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"simonjulianl"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"simonjulianl"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"simonjulianl"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"simonjulianl"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"simonjulianl"},"content":"import java.util.Objects;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"simonjulianl"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"simonjulianl"},"content":"// @author Jeffry Lum","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"simonjulianl"},"content":"// Reused from https://se-education.org/guides/tutorials/javaFxPart4.html","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"simonjulianl"},"content":"// with minor modifications","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"simonjulianl"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"simonjulianl"},"content":" * Main Gui that creates the window for chatting.","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"simonjulianl"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"simonjulianl"},"content":"public class MainWindowController extends AnchorPane implements IWindowController {","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"simonjulianl"},"content":"    private static final Logger logger \u003d Logger.getLogger(DialogBox.class.getName());","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"simonjulianl"},"content":"    private final Image userImage \u003d new Image(Objects.requireNonNull(this.getClass()","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"simonjulianl"},"content":"            .getResourceAsStream(\"/images/User.png\")));","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"simonjulianl"},"content":"    private final Image chatbotImage \u003d new Image(Objects.requireNonNull(this.getClass()","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"simonjulianl"},"content":"            .getResourceAsStream(\"/images/Dude.jpg\")));","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"simonjulianl"},"content":"    private IChatbot chatbot \u003d null;","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"simonjulianl"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"simonjulianl"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"simonjulianl"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"simonjulianl"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"simonjulianl"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"simonjulianl"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"simonjulianl"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"simonjulianl"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"simonjulianl"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"simonjulianl"},"content":"     * Sets the chatbot for this Window.","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"simonjulianl"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"simonjulianl"},"content":"     * @param chatbot Chatbot.","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"simonjulianl"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"simonjulianl"},"content":"    public void setChatbot(IChatbot chatbot) {","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"simonjulianl"},"content":"        this.chatbot \u003d chatbot;","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"simonjulianl"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"simonjulianl"},"content":"     * Initializes the component.","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"simonjulianl"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"simonjulianl"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"simonjulianl"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"simonjulianl"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"simonjulianl"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"simonjulianl"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"simonjulianl"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"simonjulianl"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"simonjulianl"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"simonjulianl"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"simonjulianl"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"simonjulianl"},"content":"            String input \u003d userInput.getText();","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"simonjulianl"},"content":"            System.out.println();","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"simonjulianl"},"content":"            addUserDialog(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"simonjulianl"},"content":"            if (chatbot !\u003d null) {","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"simonjulianl"},"content":"                chatbot.processResponse(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"simonjulianl"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"simonjulianl"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":69,"author":{"gitId":"simonjulianl"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-01"},{"lineNumber":70,"author":{"gitId":"simonjulianl"},"content":"        } finally {","lastModifiedDate":"2021-09-01"},{"lineNumber":71,"author":{"gitId":"simonjulianl"},"content":"            userInput.clear();","lastModifiedDate":"2021-09-01"},{"lineNumber":72,"author":{"gitId":"simonjulianl"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":73,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":74,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-09-01"},{"lineNumber":75,"author":{"gitId":"simonjulianl"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":76,"author":{"gitId":"simonjulianl"},"content":"     * {@inheritDoc}","lastModifiedDate":"2021-09-01"},{"lineNumber":77,"author":{"gitId":"simonjulianl"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":78,"author":{"gitId":"simonjulianl"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":79,"author":{"gitId":"simonjulianl"},"content":"    public void addUserDialog(String s) {","lastModifiedDate":"2021-09-01"},{"lineNumber":80,"author":{"gitId":"simonjulianl"},"content":"        System.out.println(this.dialogContainer.toString());","lastModifiedDate":"2021-09-01"},{"lineNumber":81,"author":{"gitId":"simonjulianl"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getUserDialog(s, userImage));","lastModifiedDate":"2021-09-01"},{"lineNumber":82,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":83,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-09-01"},{"lineNumber":84,"author":{"gitId":"simonjulianl"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":85,"author":{"gitId":"simonjulianl"},"content":"     * {@inheritDoc}","lastModifiedDate":"2021-09-01"},{"lineNumber":86,"author":{"gitId":"simonjulianl"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":87,"author":{"gitId":"simonjulianl"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":88,"author":{"gitId":"simonjulianl"},"content":"    public void addBotDialog(String s) {","lastModifiedDate":"2021-09-01"},{"lineNumber":89,"author":{"gitId":"simonjulianl"},"content":"        System.out.println(this.dialogContainer.toString());","lastModifiedDate":"2021-09-01"},{"lineNumber":90,"author":{"gitId":"simonjulianl"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getBotDialog(s, chatbotImage));","lastModifiedDate":"2021-09-01"},{"lineNumber":91,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":92,"author":{"gitId":"simonjulianl"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"simonjulianl":92}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"simonjulianl"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"simonjulianl"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"simonjulianl"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"simonjulianl"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"simonjulianl"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"simonjulianl"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"simonjulianl"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"75\" prefWidth\u003d\"400.0\" style\u003d\"-fx-padding: 0 10 10 10;\"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"simonjulianl"},"content":"         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.2\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"simonjulianl"},"content":"    \u003cLabel fx:id\u003d\"dialog\" style\u003d\"-fx-padding: 0 10 0 10;\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"simonjulianl"},"content":"        \u003cfont\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"simonjulianl"},"content":"            \u003cFont name\u003d\"System Bold\" size\u003d\"9.0\"/\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"simonjulianl"},"content":"        \u003c/font\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"simonjulianl"},"content":"    \u003c/Label\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"simonjulianl"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"simonjulianl"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"simonjulianl"},"content":"        \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"10.0\"/\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"simonjulianl"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"simonjulianl"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"simonjulianl":19}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"simonjulianl"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"simonjulianl"},"content":"\u003c?import javafx.geometry.*?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"simonjulianl"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"simonjulianl"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"simonjulianl"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.2\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"ui.view.MainWindowController\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"simonjulianl"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"simonjulianl"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"simonjulianl"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"simonjulianl"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"simonjulianl"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"simonjulianl"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"simonjulianl"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"simonjulianl"},"content":"                        \u003cInsets top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"simonjulianl"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"simonjulianl"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"simonjulianl"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"simonjulianl"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"simonjulianl"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"simonjulianl"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"simonjulianl":21}},{"path":"src/test/java/dao/TaskDaoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simonjulianl"},"content":"package dao;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"simonjulianl"},"content":"import model.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"simonjulianl"},"content":"import model.Event;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"simonjulianl"},"content":"import model.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"simonjulianl"},"content":"import model.ToDos;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"simonjulianl"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"simonjulianl"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"simonjulianl"},"content":"import org.junit.jupiter.api.DisplayName;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"simonjulianl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"simonjulianl"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"simonjulianl"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"simonjulianl"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"simonjulianl"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"simonjulianl"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"simonjulianl"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"simonjulianl"},"content":"public class TaskDaoTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"simonjulianl"},"content":"    private static TaskDaoImpl taskDao;","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"simonjulianl"},"content":"    @BeforeAll","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"simonjulianl"},"content":"    public static void setUpEnvironment() {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"simonjulianl"},"content":"        taskDao \u003d new TaskDaoImpl();","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"simonjulianl"},"content":"    @BeforeEach","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"simonjulianl"},"content":"    public void setUpMethod() {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"simonjulianl"},"content":"        while (taskDao.getSize() !\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"simonjulianl"},"content":"            taskDao.deleteTask(0);","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"simonjulianl"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"simonjulianl"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"simonjulianl"},"content":"    @DisplayName(\"Adding event task should work\")","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"simonjulianl"},"content":"    public void addTask_eventTask_taskAdded() {","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"simonjulianl"},"content":"        Task event \u003d new Event(\"some dummy event\", LocalDateTime.now());","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"simonjulianl"},"content":"        taskDao.addTask(event);","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"simonjulianl"},"content":"        assertEquals(event.toString(),","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"simonjulianl"},"content":"                taskDao.getTask(taskDao.getSize() - 1).toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"simonjulianl"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"simonjulianl"},"content":"    @DisplayName(\"Adding deadline task should work\")","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"simonjulianl"},"content":"    public void addTask_deadlineTask_taskAdded() {","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"simonjulianl"},"content":"        Task deadline \u003d new Deadline(\"some dummy deadline\", LocalDateTime.now());","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"simonjulianl"},"content":"        taskDao.addTask(deadline);","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"simonjulianl"},"content":"        assertEquals(deadline.toString(),","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"simonjulianl"},"content":"                taskDao.getTask(taskDao.getSize() - 1).toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"simonjulianl"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"simonjulianl"},"content":"    @DisplayName(\"Adding todo task should work\")","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"simonjulianl"},"content":"    public void addTask_todoTask_taskAdded() {","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"simonjulianl"},"content":"        Task todo \u003d new ToDos(\"some dummy event\");","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"simonjulianl"},"content":"        taskDao.addTask(todo);","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"simonjulianl"},"content":"        assertEquals(todo.toString(),","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"simonjulianl"},"content":"                taskDao.getTask(taskDao.getSize() - 1).toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"simonjulianl"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"simonjulianl"},"content":"    @DisplayName(\"Delete using invalid index should throw error\")","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"simonjulianl"},"content":"    public void deleteTask_invalidIndex_exceptionThrown() {","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"simonjulianl"},"content":"        Task todo \u003d new ToDos(\"some dummy event\");","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"simonjulianl"},"content":"        taskDao.addTask(todo);","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"simonjulianl"},"content":"        int currentSize \u003d taskDao.getSize();","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"simonjulianl"},"content":"        ","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"simonjulianl"},"content":"        assertThrows(IndexOutOfBoundsException.class,","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"simonjulianl"},"content":"                () -\u003e taskDao.deleteTask(currentSize + 1));","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"simonjulianl"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"simonjulianl"},"content":"    @DisplayName(\"Delete using valid index should work\")","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"simonjulianl"},"content":"    public void deleteTask_validIndex_deleteSuccessfully() {","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"simonjulianl"},"content":"        Task todo \u003d new ToDos(\"some dummy event\");","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"simonjulianl"},"content":"        taskDao.addTask(todo);","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"simonjulianl"},"content":"        ","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"simonjulianl"},"content":"        int lastIndex \u003d taskDao.getSize() - 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"simonjulianl"},"content":"        assertDoesNotThrow(() -\u003e taskDao.deleteTask(lastIndex));","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"simonjulianl"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"simonjulianl"},"content":"    @DisplayName(\"Gets a single task given a valid index\")","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"simonjulianl"},"content":"    public void getTask_validIndex_getSuccessfully() {","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"simonjulianl"},"content":"        Task todo \u003d new ToDos(\"some dummy event\");","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"simonjulianl"},"content":"        taskDao.addTask(todo);","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"simonjulianl"},"content":"        ","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"simonjulianl"},"content":"        assertEquals(todo.toString(),","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"simonjulianl"},"content":"                taskDao.getTask(taskDao.getSize() - 1).toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"simonjulianl"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"simonjulianl"},"content":"    @DisplayName(\"Mark done using valid index should work\")","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"simonjulianl"},"content":"    public void markDone_validIndex_markSuccessfully() {","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"simonjulianl"},"content":"        Task todo \u003d new ToDos(\"some dummy event\");","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"simonjulianl"},"content":"        taskDao.addTask(todo);","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"simonjulianl"},"content":"        ","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"simonjulianl"},"content":"        taskDao.markDone(taskDao.getSize() - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"simonjulianl"},"content":"        assertTrue(taskDao.getTask(taskDao.getSize() - 1).isDone());","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"simonjulianl"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"simonjulianl"},"content":"    @DisplayName(\"Gets All the List\")","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"simonjulianl"},"content":"    public void getAll_add10Task_addedSuccessfully() {","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"simonjulianl"},"content":"        int listSize \u003d 10;","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"simonjulianl"},"content":"        IntStream.range(0, listSize)","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"simonjulianl"},"content":"                .mapToObj(i -\u003e new ToDos(\"some dummy event \" + i))","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"simonjulianl"},"content":"                .forEach(todo -\u003e taskDao.addTask(todo));","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"simonjulianl"},"content":"        ","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"simonjulianl"},"content":"        assertEquals(listSize, taskDao.getSize());","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"simonjulianl"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"simonjulianl"},"content":"    @DisplayName(\"Gets the size of Task list\")","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"simonjulianl"},"content":"    public void getSize_add1Task_sizeOne() {","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"simonjulianl"},"content":"        Task todo \u003d new ToDos(\"some dummy event\");","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"simonjulianl"},"content":"        taskDao.addTask(todo);","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"simonjulianl"},"content":"        ","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"simonjulianl"},"content":"        assertEquals(1, taskDao.getSize());","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"simonjulianl"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"simonjulianl":122}},{"path":"src/test/java/logic/CommandLogicUnitStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simonjulianl"},"content":"package logic;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"simonjulianl"},"content":"import model.Command;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"simonjulianl"},"content":"import java.util.Map;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"simonjulianl"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"simonjulianl"},"content":" * Logic Unit Stub that does not process any command.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"simonjulianl"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"simonjulianl"},"content":"public class CommandLogicUnitStub implements ICommandLogicUnit {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"simonjulianl"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"simonjulianl"},"content":"    public void processCommand(Command command, Map\u003cString, String\u003e arguments) {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"simonjulianl"},"content":"        // do nothing","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"simonjulianl"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"simonjulianl":15}},{"path":"src/test/java/parser/ParserImplTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simonjulianl"},"content":"package parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"simonjulianl"},"content":"import logic.CommandLogicUnitStub;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"simonjulianl"},"content":"import logic.ICommandLogicUnit;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"simonjulianl"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"simonjulianl"},"content":"import org.junit.jupiter.api.DisplayName;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"simonjulianl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"simonjulianl"},"content":"import ui.IUi;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"simonjulianl"},"content":"import ui.UiStub;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"simonjulianl"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"simonjulianl"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"simonjulianl"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"simonjulianl"},"content":"public class ParserImplTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"simonjulianl"},"content":"    private static ParserImpl parserImpl;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"simonjulianl"},"content":"    @BeforeAll","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"simonjulianl"},"content":"    public static void setUpEnvironment() {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"simonjulianl"},"content":"        ICommandLogicUnit commandLogicUnit \u003d new CommandLogicUnitStub();","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"simonjulianl"},"content":"        IUi ui \u003d new UiStub();","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"simonjulianl"},"content":"        parserImpl \u003d new ParserImpl(commandLogicUnit, ui);","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"simonjulianl"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"simonjulianl"},"content":"    @DisplayName(\"Parser should be able to take valid input from user\")","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"simonjulianl"},"content":"    public void processInput_validCommand_parsedSuccessfully() {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"simonjulianl"},"content":"        // @author McDowell","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"simonjulianl"},"content":"        // Reused from http://www.javased.com/?post\u003d1647907","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"simonjulianl"},"content":"        // with minor modifications","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"simonjulianl"},"content":"        ","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"simonjulianl"},"content":"        String userInput \u003d \"man \\r\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"simonjulianl"},"content":"        System.setIn(new ByteArrayInputStream(userInput.getBytes()));","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"simonjulianl"},"content":"        ","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"simonjulianl"},"content":"        try (Scanner scanner \u003d new Scanner(System.in)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"simonjulianl"},"content":"            String input \u003d scanner.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"simonjulianl"},"content":"            System.out.println(input);","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"simonjulianl"},"content":"            assertDoesNotThrow(() -\u003e parserImpl.processInput(input));","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"simonjulianl"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"simonjulianl"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"simonjulianl"},"content":"    @DisplayName(\"Parser should be able to take rubbish input from user\")","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"simonjulianl"},"content":"    public void processInput_invalidCommand_handledSuccessfully() {","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"simonjulianl"},"content":"        String userInput \u003d \"this is some rubbish input!\\r\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"simonjulianl"},"content":"        System.setIn(new ByteArrayInputStream(userInput.getBytes()));","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"simonjulianl"},"content":"        ","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"simonjulianl"},"content":"        try (Scanner scanner \u003d new Scanner(System.in)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"simonjulianl"},"content":"            String input \u003d scanner.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"simonjulianl"},"content":"            System.out.println(input);","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"simonjulianl"},"content":"            assertDoesNotThrow(() -\u003e parserImpl.processInput(input));","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"simonjulianl"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"simonjulianl"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"simonjulianl":55}},{"path":"src/test/java/storage/FileListStorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simonjulianl"},"content":"package storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"simonjulianl"},"content":"import configuration.Setting;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"simonjulianl"},"content":"import model.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"simonjulianl"},"content":"import model.ToDos;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"simonjulianl"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"simonjulianl"},"content":"import org.junit.jupiter.api.DisplayName;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"simonjulianl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"simonjulianl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"simonjulianl"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"simonjulianl"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"simonjulianl"},"content":"public class FileListStorageTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"simonjulianl"},"content":"    private static FileListStorage\u003cTask\u003e fileListStorage;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"simonjulianl"},"content":"    @BeforeAll","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"simonjulianl"},"content":"    public static void setUp() {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"simonjulianl"},"content":"        fileListStorage \u003d new FileListStorage\u003c\u003e(Setting.DATA_DIR_PATH + \"/\" + Setting.DATA_TASKS);","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"simonjulianl"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"simonjulianl"},"content":"    @DisplayName(\"Adding Array List of Task should work\")","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"simonjulianl"},"content":"    public void writeArrayListToFile_arrayListTask_addedSuccessfully() {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"simonjulianl"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"simonjulianl"},"content":"        for (int i \u003d 0; i \u003c 10; i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"simonjulianl"},"content":"            tasks.add(new ToDos(\"some dummy event \" + i));","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"simonjulianl"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"simonjulianl"},"content":"        ","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"simonjulianl"},"content":"        assertDoesNotThrow(() -\u003e fileListStorage.writeArrayListToFile(tasks));","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"simonjulianl"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"simonjulianl"},"content":"    @DisplayName(\"Reading Array List of Task should work\")","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"simonjulianl"},"content":"    public void readArrayListFromFile_arrayListTask_sizeGT0() {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"simonjulianl"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"simonjulianl"},"content":"        for (int i \u003d 0; i \u003c 10; i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"simonjulianl"},"content":"            tasks.add(new ToDos(\"some dummy event \" + i));","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"simonjulianl"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"simonjulianl"},"content":"        ","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"simonjulianl"},"content":"        fileListStorage.writeArrayListToFile(tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"simonjulianl"},"content":"        ","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"simonjulianl"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"simonjulianl"},"content":"            ArrayList\u003cTask\u003e tempTasks \u003d fileListStorage.readArrayListFromFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"simonjulianl"},"content":"            assertTrue(tempTasks.size() \u003e\u003d 10);","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"simonjulianl"},"content":"        });","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"simonjulianl"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"simonjulianl":49}},{"path":"src/test/java/ui/UiStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simonjulianl"},"content":"package ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"simonjulianl"},"content":"import java.util.List;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"simonjulianl"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"simonjulianl"},"content":" * Stub for User Interface, just print out.","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"simonjulianl"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"simonjulianl"},"content":"public class UiStub implements IUi {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"simonjulianl"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"simonjulianl"},"content":"    public void printSentence(String sentence) {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"simonjulianl"},"content":"        System.out.println(sentence);","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"simonjulianl"},"content":"    ","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"simonjulianl"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"simonjulianl"},"content":"    public \u003cT\u003e void printIndexedList(List\u003cT\u003e list) {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"simonjulianl"},"content":"        int counter \u003d 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"simonjulianl"},"content":"        for (T item : list) {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"simonjulianl"},"content":"            System.out.println(counter++ + item.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"simonjulianl"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"simonjulianl"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"simonjulianl"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"simonjulianl":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"simonjulianl"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"simonjulianl"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"simonjulianl"},"content":"todo meeting /at Mon 2-3pm","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"simonjulianl"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"simonjulianl"},"content":"done 1","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"simonjulianl"},"content":"done 2","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"simonjulianl"},"content":"delete 1","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"simonjulianl"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"simonjulianl"},"content":"todo","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"simonjulianl"},"content":"deadline","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"simonjulianl"},"content":"bye","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"simonjulianl":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"simonjulianl"},"content":"java -classpath ..\\bin Main \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"simonjulianl":1,"-":20}}]
