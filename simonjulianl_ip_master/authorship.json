[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"simonjulianl"},"content":"# Dude project template","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"simonjulianl"},"content":"3. After that, locate the `src/main/java/Dude.java` file, right-click it, and choose `Run Dude.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"simonjulianl":2,"-":22}},{"path":"src/main/java/Dude.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simonjulianl"},"content":"import dao.TaskDao;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"simonjulianl"},"content":"import dao.TaskDaoImpl;","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"simonjulianl"},"content":"import logic.CommandLogicUnitImpl;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"simonjulianl"},"content":"import logic.ICommandLogicUnit;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"simonjulianl"},"content":"import parser.IParser;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"simonjulianl"},"content":"import parser.ParserImpl;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"simonjulianl"},"content":"import ui.IUi;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"simonjulianl"},"content":"import ui.UiImpl;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"simonjulianl"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"simonjulianl"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"simonjulianl"},"content":" * Main driver program.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"simonjulianl"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"simonjulianl"},"content":"public class Dude {","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"simonjulianl"},"content":"\t/** Scanner to take input from the console */","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"simonjulianl"},"content":"\tprivate final Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"simonjulianl"},"content":"\t/** Logic Unit to process all the commands */","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"simonjulianl"},"content":"\tprivate final ICommandLogicUnit commandLogicUnit;","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"simonjulianl"},"content":"\t/** UI class responsible for the interaction and display with user */","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"simonjulianl"},"content":"\tprivate final IUi ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"simonjulianl"},"content":"\tpublic Dude(ICommandLogicUnit commandLogicUnit, IUi ui) {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"simonjulianl"},"content":"\t\tthis.commandLogicUnit \u003d commandLogicUnit;","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"simonjulianl"},"content":"\t\tthis.ui \u003d ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"simonjulianl"},"content":"\tpublic static void main(String[] args) {","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"simonjulianl"},"content":"\t\tTaskDao taskDao \u003d new TaskDaoImpl();","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"simonjulianl"},"content":"\t\tIUi ui \u003d new UiImpl();","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"simonjulianl"},"content":"\t\tICommandLogicUnit commandLogicUnit \u003d new CommandLogicUnitImpl(taskDao, ui);","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"simonjulianl"},"content":"\t\t","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"simonjulianl"},"content":"\t\tnew Dude(commandLogicUnit, ui).run();","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"simonjulianl"},"content":"\t/**","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"simonjulianl"},"content":"\t * Runs Dude chatterbot.","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"simonjulianl"},"content":"\t */","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"simonjulianl"},"content":"\t@SuppressWarnings(\"InfiniteLoopStatement\")","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"simonjulianl"},"content":"\tpublic void run() {","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"simonjulianl"},"content":"\t\tString logo \u003d \" ____        ____      \\n\"","lastModifiedDate":"2021-08-16"},{"lineNumber":44,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t+ \"|  _ \\\\ _   _|  _ \\\\____\\n\"","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t+ \"| | | | | | | | |/ __ \\\\\\n\"","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t+ \"| |_| | |_| | |_|   __/\\n\"","lastModifiedDate":"2021-08-16"},{"lineNumber":47,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t+ \"|____/ \\\\__,_|____\\\\____|\\n\";","lastModifiedDate":"2021-08-16"},{"lineNumber":48,"author":{"gitId":"simonjulianl"},"content":"\t\tSystem.out.println(\"Hello from\\n\" + logo + \"by Simon - CS2103T/2122S1\");","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"simonjulianl"},"content":"\t\t","lastModifiedDate":"2021-08-16"},{"lineNumber":50,"author":{"gitId":"simonjulianl"},"content":"\t\tstarting();","lastModifiedDate":"2021-08-16"},{"lineNumber":51,"author":{"gitId":"simonjulianl"},"content":"\t\t","lastModifiedDate":"2021-08-16"},{"lineNumber":52,"author":{"gitId":"simonjulianl"},"content":"\t\ttry {","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"simonjulianl"},"content":"\t\t\tIParser commandProcessor \u003d new ParserImpl(commandLogicUnit, ui);","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"simonjulianl"},"content":"\t\t\twhile (true) {","lastModifiedDate":"2021-08-16"},{"lineNumber":55,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\tString input \u003d scanner.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\tcommandProcessor.processInput(input);","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"simonjulianl"},"content":"\t\t\t}","lastModifiedDate":"2021-08-16"},{"lineNumber":58,"author":{"gitId":"simonjulianl"},"content":"\t\t} catch (Exception e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"simonjulianl"},"content":"\t\t\te.printStackTrace();","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"simonjulianl"},"content":"\t\t}","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-16"},{"lineNumber":62,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-16"},{"lineNumber":63,"author":{"gitId":"simonjulianl"},"content":"\tprivate void starting() {","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"simonjulianl"},"content":"\t\tui.printSentence(\" Hello! I\u0027m Dude\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\" What can I do for you?\");","lastModifiedDate":"2021-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\t}","lastModifiedDate":"2019-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"simonjulianl":65,"-":2}},{"path":"src/main/java/configuration/Setting.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simonjulianl"},"content":"package configuration;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"simonjulianl"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"simonjulianl"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"simonjulianl"},"content":" * Constant Settings that are used to configure Dude CLI chatterbot.","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"simonjulianl"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"simonjulianl"},"content":"public final class Setting {","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"simonjulianl"},"content":"\t/** Path to file containing the tasks */","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"simonjulianl"},"content":"\tpublic static final String FILE_TASK_PATH \u003d Paths.get(\"data/tasks\").toString();","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"simonjulianl"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"simonjulianl":11}},{"path":"src/main/java/dao/TaskDao.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simonjulianl"},"content":"package dao;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"simonjulianl"},"content":"import model.Task;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"simonjulianl"},"content":"import java.util.List;","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"simonjulianl"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"simonjulianl"},"content":" * Data access object (dao) for the Task model.","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"simonjulianl"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"simonjulianl"},"content":"public interface TaskDao {","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"simonjulianl"},"content":"\t/**","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"simonjulianl"},"content":"\t * Adds a task to the data layer, throw error instead of Optional if add fails.","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"simonjulianl"},"content":"\t *","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"simonjulianl"},"content":"\t * @param task Task to be added.","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"simonjulianl"},"content":"\t */","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"simonjulianl"},"content":"\tvoid addTask(Task task);","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"simonjulianl"},"content":"\t/**","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"simonjulianl"},"content":"\t * Deletes the task using 0-indexing.","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"simonjulianl"},"content":"\t * Returns null if reading or writing the file task fails.","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"simonjulianl"},"content":"\t *","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"simonjulianl"},"content":"\t * @param index Index as it appears in the list - 1 (from 1 indexing to 0 indexing).","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"simonjulianl"},"content":"\t */","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"simonjulianl"},"content":"\tTask deleteTask(int index) throws IndexOutOfBoundsException;","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"simonjulianl"},"content":"\t/**","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"simonjulianl"},"content":"\t * Marks a task as done.","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"simonjulianl"},"content":"\t *","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"simonjulianl"},"content":"\t * @param index Index as it appears in the list - 1 (from 1 indexing to 0 indexing).","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"simonjulianl"},"content":"\t */","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"simonjulianl"},"content":"\tvoid markDone(int index) throws IndexOutOfBoundsException;","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"simonjulianl"},"content":"\t/**","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"simonjulianl"},"content":"\t * Gets a single task from the task list.","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"simonjulianl"},"content":"\t * Return null if the task file containing the array list cannot be read.","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"simonjulianl"},"content":"\t *","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"simonjulianl"},"content":"\t * @param index Index as it appears in the list - 1 (from 1 indexing to 0 indexing).","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"simonjulianl"},"content":"\t * @return Task or null if reading the file fails.","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"simonjulianl"},"content":"\t * @throws IndexOutOfBoundsException If the index is invalid.","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"simonjulianl"},"content":"\t */","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"simonjulianl"},"content":"\tTask getTask(int index) throws IndexOutOfBoundsException;","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"simonjulianl"},"content":"\t/**","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"simonjulianl"},"content":"\t * Gets all the tasks from the list.","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"simonjulianl"},"content":"\t * Returns empty list if reading the file fails.","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"simonjulianl"},"content":"\t *","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"simonjulianl"},"content":"\t * @return Tasks ArrayList of all the tasks in the list.","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"simonjulianl"},"content":"\t */","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"simonjulianl"},"content":"\tList\u003cTask\u003e getAll();","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"simonjulianl"},"content":"\t/**","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"simonjulianl"},"content":"\t * Gets all the tasks from the list filtered by keyword.","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"simonjulianl"},"content":"\t * Returns empty list if reading the file fails.","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"simonjulianl"},"content":"\t *","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"simonjulianl"},"content":"\t * @return Tasks ArrayList of the tasks filtered by keyword.","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"simonjulianl"},"content":"\t */","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"simonjulianl"},"content":"\tList\u003cTask\u003e getByKeyword(String keyword);","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"simonjulianl"},"content":"\t/**","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"simonjulianl"},"content":"\t * Gets the size of the current list.","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"simonjulianl"},"content":"\t * Returns -1 if the Task file cannot be read or invalid.","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"simonjulianl"},"content":"\t *","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"simonjulianl"},"content":"\t * @return Size of the current list or -1.","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"simonjulianl"},"content":"\t */","lastModifiedDate":"2021-08-19"},{"lineNumber":65,"author":{"gitId":"simonjulianl"},"content":"\tint getSize();","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"simonjulianl"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"simonjulianl":66}},{"path":"src/main/java/dao/TaskDaoImpl.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simonjulianl"},"content":"package dao;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"simonjulianl"},"content":"import configuration.Setting;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"simonjulianl"},"content":"import model.Task;","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"simonjulianl"},"content":"import storage.FileListStorage;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"simonjulianl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"simonjulianl"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"simonjulianl"},"content":"import java.util.List;","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"simonjulianl"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"simonjulianl"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"simonjulianl"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"simonjulianl"},"content":" * Implementation of the TaskDao using a FileListStorage.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"simonjulianl"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"simonjulianl"},"content":"public class TaskDaoImpl implements TaskDao {","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"simonjulianl"},"content":"\tprivate final Logger logger \u003d Logger.getLogger(TaskDaoImpl.class.getName());","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"simonjulianl"},"content":"\t/** File containing the ArrayList of Task */","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"simonjulianl"},"content":"\tprivate final FileListStorage\u003cTask\u003e taskFileListStorage \u003d new FileListStorage\u003c\u003e(Setting.FILE_TASK_PATH);","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"simonjulianl"},"content":"\t@Override","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"simonjulianl"},"content":"\tpublic void addTask(Task task) {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"simonjulianl"},"content":"\t\tsynchronized (this) {","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"simonjulianl"},"content":"\t\t\ttry {","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\tArrayList\u003cTask\u003e tasks \u003d taskFileListStorage.readArrayListFromFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\ttasks.add(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\ttaskFileListStorage.writeArrayListToFile(tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"simonjulianl"},"content":"\t\t\t} catch (Exception e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\tlogger.warning(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"simonjulianl"},"content":"\t\t\t}","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"simonjulianl"},"content":"\t\t}","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"simonjulianl"},"content":"\t@Override","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"simonjulianl"},"content":"\tpublic Task deleteTask(int index) {","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"simonjulianl"},"content":"\t\tif (isInvalidIndex(index)) {","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"simonjulianl"},"content":"\t\t\tthrow new IndexOutOfBoundsException(\"non valid index for deletion\");","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"simonjulianl"},"content":"\t\t}","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"simonjulianl"},"content":"\t\t","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"simonjulianl"},"content":"\t\tsynchronized (this) {","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"simonjulianl"},"content":"\t\t\ttry {","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\tArrayList\u003cTask\u003e tasks \u003d taskFileListStorage.readArrayListFromFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\tTask removedTask \u003d tasks.remove(index);","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\ttaskFileListStorage.writeArrayListToFile(tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\treturn removedTask;","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"simonjulianl"},"content":"\t\t\t} catch (Exception e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\tlogger.warning(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"simonjulianl"},"content":"\t\t\t}","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"simonjulianl"},"content":"\t\t}","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"simonjulianl"},"content":"\t\t","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"simonjulianl"},"content":"\t\treturn null;","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"simonjulianl"},"content":"\t@Override","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"simonjulianl"},"content":"\tpublic void markDone(int index) {","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"simonjulianl"},"content":"\t\tif (isInvalidIndex(index)) {","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"simonjulianl"},"content":"\t\t\tthrow new IndexOutOfBoundsException(\"non valid index for marking the task done\");","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"simonjulianl"},"content":"\t\t}","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"simonjulianl"},"content":"\t\t","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"simonjulianl"},"content":"\t\tsynchronized (this) {","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"simonjulianl"},"content":"\t\t\ttry {","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\tArrayList\u003cTask\u003e tasks \u003d taskFileListStorage.readArrayListFromFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\tTask task \u003d tasks.get(index);","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\ttask.markDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\ttaskFileListStorage.writeArrayListToFile(tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"simonjulianl"},"content":"\t\t\t} catch (Exception e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\tlogger.warning(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"simonjulianl"},"content":"\t\t\t}","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"simonjulianl"},"content":"\t\t}","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-19"},{"lineNumber":73,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-19"},{"lineNumber":74,"author":{"gitId":"simonjulianl"},"content":"\t@Override","lastModifiedDate":"2021-08-19"},{"lineNumber":75,"author":{"gitId":"simonjulianl"},"content":"\tpublic Task getTask(int index) {","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"simonjulianl"},"content":"\t\tif (isInvalidIndex(index)) {","lastModifiedDate":"2021-08-19"},{"lineNumber":77,"author":{"gitId":"simonjulianl"},"content":"\t\t\tthrow new IndexOutOfBoundsException(\"non valid index for marking the task done\");","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"simonjulianl"},"content":"\t\t}","lastModifiedDate":"2021-08-19"},{"lineNumber":79,"author":{"gitId":"simonjulianl"},"content":"\t\t","lastModifiedDate":"2021-08-19"},{"lineNumber":80,"author":{"gitId":"simonjulianl"},"content":"\t\ttry {","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"simonjulianl"},"content":"\t\t\tArrayList\u003cTask\u003e tasks \u003d taskFileListStorage.readArrayListFromFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"simonjulianl"},"content":"\t\t\treturn tasks.get(index);","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"simonjulianl"},"content":"\t\t} catch (Exception e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"simonjulianl"},"content":"\t\t\tlogger.warning(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"simonjulianl"},"content":"\t\t\treturn null;","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"simonjulianl"},"content":"\t\t}","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-19"},{"lineNumber":88,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-19"},{"lineNumber":89,"author":{"gitId":"simonjulianl"},"content":"\t@Override","lastModifiedDate":"2021-08-19"},{"lineNumber":90,"author":{"gitId":"simonjulianl"},"content":"\tpublic List\u003cTask\u003e getAll() {","lastModifiedDate":"2021-08-19"},{"lineNumber":91,"author":{"gitId":"simonjulianl"},"content":"\t\ttry {","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"simonjulianl"},"content":"\t\t\treturn taskFileListStorage.readArrayListFromFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"simonjulianl"},"content":"\t\t} catch (Exception e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"simonjulianl"},"content":"\t\t\tlogger.warning(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"simonjulianl"},"content":"\t\t\treturn List.of();","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"simonjulianl"},"content":"\t\t}","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-19"},{"lineNumber":98,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-19"},{"lineNumber":99,"author":{"gitId":"simonjulianl"},"content":"\t@Override","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"simonjulianl"},"content":"\tpublic List\u003cTask\u003e getByKeyword(String keyword) {","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"simonjulianl"},"content":"\t\ttry {","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"simonjulianl"},"content":"\t\t\tArrayList\u003cTask\u003e tasks \u003d taskFileListStorage.readArrayListFromFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"simonjulianl"},"content":"\t\t\treturn tasks.stream()","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\t.filter(x -\u003e Arrays.asList(x.getDesc().split(\" \")).contains(keyword))","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\t.collect(Collectors.toList());","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"simonjulianl"},"content":"\t\t} catch (Exception e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"simonjulianl"},"content":"\t\t\tlogger.warning(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"simonjulianl"},"content":"\t\t\treturn List.of();","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"simonjulianl"},"content":"\t\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"simonjulianl"},"content":"\t@Override","lastModifiedDate":"2021-08-19"},{"lineNumber":113,"author":{"gitId":"simonjulianl"},"content":"\tpublic int getSize() {","lastModifiedDate":"2021-08-23"},{"lineNumber":114,"author":{"gitId":"simonjulianl"},"content":"\t\ttry {","lastModifiedDate":"2021-08-23"},{"lineNumber":115,"author":{"gitId":"simonjulianl"},"content":"\t\t\tArrayList\u003cTask\u003e tasks \u003d taskFileListStorage.readArrayListFromFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"simonjulianl"},"content":"\t\t\treturn tasks.size();","lastModifiedDate":"2021-08-23"},{"lineNumber":117,"author":{"gitId":"simonjulianl"},"content":"\t\t} catch (Exception e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":118,"author":{"gitId":"simonjulianl"},"content":"\t\t\tlogger.warning(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":119,"author":{"gitId":"simonjulianl"},"content":"\t\t\treturn -1;","lastModifiedDate":"2021-08-23"},{"lineNumber":120,"author":{"gitId":"simonjulianl"},"content":"\t\t}","lastModifiedDate":"2021-08-23"},{"lineNumber":121,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-19"},{"lineNumber":122,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-19"},{"lineNumber":123,"author":{"gitId":"simonjulianl"},"content":"\tprivate boolean isInvalidIndex(int index) {","lastModifiedDate":"2021-08-19"},{"lineNumber":124,"author":{"gitId":"simonjulianl"},"content":"\t\tint size \u003d getSize();","lastModifiedDate":"2021-08-23"},{"lineNumber":125,"author":{"gitId":"simonjulianl"},"content":"\t\treturn size !\u003d -1 \u0026\u0026 (index \u003e\u003d getSize() || index \u003c 0);","lastModifiedDate":"2021-08-23"},{"lineNumber":126,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-23"},{"lineNumber":127,"author":{"gitId":"simonjulianl"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"simonjulianl":127}},{"path":"src/main/java/logic/CommandLogicUnitImpl.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simonjulianl"},"content":"package logic;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"simonjulianl"},"content":"import dao.TaskDao;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"simonjulianl"},"content":"import model.Command;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"simonjulianl"},"content":"import model.Deadline;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"simonjulianl"},"content":"import model.Event;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"simonjulianl"},"content":"import model.Task;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"simonjulianl"},"content":"import model.TimedItem;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"simonjulianl"},"content":"import model.ToDos;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"simonjulianl"},"content":"import ui.IUi;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"simonjulianl"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"simonjulianl"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"simonjulianl"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"simonjulianl"},"content":"import java.util.List;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"simonjulianl"},"content":"import java.util.Map;","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"simonjulianl"},"content":"import java.util.Optional;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"simonjulianl"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"simonjulianl"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"simonjulianl"},"content":" * Logic class that would handle all the logics and processing, together with the temporary data layer of the commands","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"simonjulianl"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"simonjulianl"},"content":"public class CommandLogicUnitImpl implements ICommandLogicUnit {","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"simonjulianl"},"content":"\t/** Data access object for Task */","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"simonjulianl"},"content":"\tprivate final TaskDao taskDao;","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"simonjulianl"},"content":"\t/** UI that is responsible to interacts with user */","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"simonjulianl"},"content":"\tprivate final IUi ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"simonjulianl"},"content":"\t/**","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"simonjulianl"},"content":"\t * Constructor of CommandLogicUnitImpl that processes all the available commands.","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"simonjulianl"},"content":"\t *","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"simonjulianl"},"content":"\t * @param taskDao TaskDao.","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"simonjulianl"},"content":"\t */","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"simonjulianl"},"content":"\tpublic CommandLogicUnitImpl(TaskDao taskDao, IUi ui) {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"simonjulianl"},"content":"\t\tthis.taskDao \u003d taskDao;","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"simonjulianl"},"content":"\t\tthis.ui \u003d ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"simonjulianl"},"content":"\t@Override","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"simonjulianl"},"content":"\tpublic void processCommand(Command command, Map\u003cString, String\u003e arguments) {","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"simonjulianl"},"content":"\t\tswitch (command) {","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"simonjulianl"},"content":"\t\tcase BYE:","lastModifiedDate":"2021-08-16"},{"lineNumber":44,"author":{"gitId":"simonjulianl"},"content":"\t\t\tprocessBye();","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"simonjulianl"},"content":"\t\t\tbreak;","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"simonjulianl"},"content":"\t\tcase LIST: {","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"simonjulianl"},"content":"\t\t\tDateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"simonjulianl"},"content":"\t\t\t","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"simonjulianl"},"content":"\t\t\tOptional\u003cString\u003e date \u003d Optional.ofNullable(arguments.getOrDefault(\"date\", null));","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"simonjulianl"},"content":"\t\t\tOptional\u003cLocalDate\u003e localDateOptional \u003d","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\tdate.filter(dateStr -\u003e !dateStr.equals(\"\"))","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\t\t\t.map(dateStr -\u003e LocalDate.parse(dateStr, formatter));","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"simonjulianl"},"content":"\t\t\t","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"simonjulianl"},"content":"\t\t\tprocessList(localDateOptional);","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"simonjulianl"},"content":"\t\t\tbreak;","lastModifiedDate":"2021-08-16"},{"lineNumber":56,"author":{"gitId":"simonjulianl"},"content":"\t\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"simonjulianl"},"content":"\t\tcase DEADLINE: {","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"simonjulianl"},"content":"\t\t\tDateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"simonjulianl"},"content":"\t\t\t","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"simonjulianl"},"content":"\t\t\tprocessAdd(new Deadline(","lastModifiedDate":"2021-08-16"},{"lineNumber":61,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\targuments.getOrDefault(\"description\", \"default deadline desc\"),","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\tLocalDateTime.parse(arguments.getOrDefault(\"timing\", LocalDateTime.now().toString()), formatter)","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"simonjulianl"},"content":"\t\t\t));","lastModifiedDate":"2021-08-16"},{"lineNumber":64,"author":{"gitId":"simonjulianl"},"content":"\t\t\tbreak;","lastModifiedDate":"2021-08-16"},{"lineNumber":65,"author":{"gitId":"simonjulianl"},"content":"\t\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"simonjulianl"},"content":"\t\tcase EVENT: {","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"simonjulianl"},"content":"\t\t\tDateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"simonjulianl"},"content":"\t\t\t","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"simonjulianl"},"content":"\t\t\tprocessAdd(new Event(","lastModifiedDate":"2021-08-16"},{"lineNumber":70,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\targuments.getOrDefault(\"description\", \"default event\"),","lastModifiedDate":"2021-08-16"},{"lineNumber":71,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\tLocalDateTime.parse(arguments.getOrDefault(\"timing\", LocalDateTime.now().toString()), formatter)","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"simonjulianl"},"content":"\t\t\t));","lastModifiedDate":"2021-08-16"},{"lineNumber":73,"author":{"gitId":"simonjulianl"},"content":"\t\t\tbreak;","lastModifiedDate":"2021-08-16"},{"lineNumber":74,"author":{"gitId":"simonjulianl"},"content":"\t\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"simonjulianl"},"content":"\t\tcase TODOS:","lastModifiedDate":"2021-08-16"},{"lineNumber":76,"author":{"gitId":"simonjulianl"},"content":"\t\t\tprocessAdd(new ToDos(arguments.getOrDefault(\"description\", \"default todo\")));","lastModifiedDate":"2021-08-16"},{"lineNumber":77,"author":{"gitId":"simonjulianl"},"content":"\t\t\tbreak;","lastModifiedDate":"2021-08-16"},{"lineNumber":78,"author":{"gitId":"simonjulianl"},"content":"\t\tcase DONE:","lastModifiedDate":"2021-08-16"},{"lineNumber":79,"author":{"gitId":"simonjulianl"},"content":"\t\t\t// convert 1-indexing to 0-indexing","lastModifiedDate":"2021-08-16"},{"lineNumber":80,"author":{"gitId":"simonjulianl"},"content":"\t\t\tprocessDone(Integer.parseInt(arguments.getOrDefault(\"index\", \"-1\")) - 1);","lastModifiedDate":"2021-08-16"},{"lineNumber":81,"author":{"gitId":"simonjulianl"},"content":"\t\t\tbreak;","lastModifiedDate":"2021-08-16"},{"lineNumber":82,"author":{"gitId":"simonjulianl"},"content":"\t\tcase DELETE:","lastModifiedDate":"2021-08-16"},{"lineNumber":83,"author":{"gitId":"simonjulianl"},"content":"\t\t\tprocessDelete(Integer.parseInt(arguments.getOrDefault(\"index\", \"-1\")) - 1);","lastModifiedDate":"2021-08-16"},{"lineNumber":84,"author":{"gitId":"simonjulianl"},"content":"\t\t\tbreak;","lastModifiedDate":"2021-08-16"},{"lineNumber":85,"author":{"gitId":"simonjulianl"},"content":"\t\tcase FIND:","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"simonjulianl"},"content":"\t\t\tprocessFind(Optional.ofNullable(arguments.getOrDefault(\"keyword\", null)));","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"simonjulianl"},"content":"\t\t\tbreak;","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"simonjulianl"},"content":"\t\tdefault:","lastModifiedDate":"2021-08-16"},{"lineNumber":89,"author":{"gitId":"simonjulianl"},"content":"\t\t\tui.printSentence(\"command not recognized by processor\");","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"simonjulianl"},"content":"\t\t}","lastModifiedDate":"2021-08-16"},{"lineNumber":91,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-16"},{"lineNumber":92,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-16"},{"lineNumber":93,"author":{"gitId":"simonjulianl"},"content":"\tprivate void processBye() {","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"simonjulianl"},"content":"\t\tui.printSentence(\" Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"simonjulianl"},"content":"\t\tSystem.exit(0);","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"simonjulianl"},"content":"\t/**","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"simonjulianl"},"content":"\t * Prints the entire list of tasks whether its done or not done.","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"simonjulianl"},"content":"\t */","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"simonjulianl"},"content":"\tprivate void processList(Optional\u003cLocalDate\u003e localDateOptional) {","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"simonjulianl"},"content":"\t\tlocalDateOptional.ifPresentOrElse(","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\tx -\u003e ui.printIndexedList(taskDao.getAll()","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\t\t.stream()","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\t\t.filter(task -\u003e task instanceof TimedItem)","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\t\t.filter(task -\u003e ((TimedItem) task).getTime().toLocalDate().isEqual(x))","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\t\t.collect(Collectors.toList())),","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t() -\u003e ui.printIndexedList(taskDao.getAll())","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"simonjulianl"},"content":"\t\t);","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-23"},{"lineNumber":111,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-23"},{"lineNumber":112,"author":{"gitId":"simonjulianl"},"content":"\tprivate void processAdd(Task task) {","lastModifiedDate":"2021-08-16"},{"lineNumber":113,"author":{"gitId":"simonjulianl"},"content":"\t\ttaskDao.addTask(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":114,"author":{"gitId":"simonjulianl"},"content":"\t\t","lastModifiedDate":"2021-08-16"},{"lineNumber":115,"author":{"gitId":"simonjulianl"},"content":"\t\tui.printSentence(\" Got it. I\u0027ve added this task: \\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\"\\t\" + task.toString() + \"\\n\" +","lastModifiedDate":"2021-08-23"},{"lineNumber":117,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\" Now you have \" + taskDao.getSize() + \" tasks in the list.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":118,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-16"},{"lineNumber":119,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-16"},{"lineNumber":120,"author":{"gitId":"simonjulianl"},"content":"\t/**","lastModifiedDate":"2021-08-16"},{"lineNumber":121,"author":{"gitId":"simonjulianl"},"content":"\t * Processes the DONE Command.","lastModifiedDate":"2021-08-23"},{"lineNumber":122,"author":{"gitId":"simonjulianl"},"content":"\t *","lastModifiedDate":"2021-08-23"},{"lineNumber":123,"author":{"gitId":"simonjulianl"},"content":"\t * @param index 0-indexed integer","lastModifiedDate":"2021-08-16"},{"lineNumber":124,"author":{"gitId":"simonjulianl"},"content":"\t */","lastModifiedDate":"2021-08-16"},{"lineNumber":125,"author":{"gitId":"simonjulianl"},"content":"\tprivate void processDone(int index) {","lastModifiedDate":"2021-08-19"},{"lineNumber":126,"author":{"gitId":"simonjulianl"},"content":"\t\ttaskDao.markDone(index);","lastModifiedDate":"2021-08-23"},{"lineNumber":127,"author":{"gitId":"simonjulianl"},"content":"\t\t","lastModifiedDate":"2021-08-16"},{"lineNumber":128,"author":{"gitId":"simonjulianl"},"content":"\t\tui.printSentence(\"Nice! I\u0027ve marked this task as done: \\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\"\\t [X] \" + taskDao.getTask(index).getDesc());","lastModifiedDate":"2021-08-23"},{"lineNumber":130,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-16"},{"lineNumber":131,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-16"},{"lineNumber":132,"author":{"gitId":"simonjulianl"},"content":"\t/**","lastModifiedDate":"2021-08-16"},{"lineNumber":133,"author":{"gitId":"simonjulianl"},"content":"\t * Processes the DELETE Command.","lastModifiedDate":"2021-08-23"},{"lineNumber":134,"author":{"gitId":"simonjulianl"},"content":"\t *","lastModifiedDate":"2021-08-23"},{"lineNumber":135,"author":{"gitId":"simonjulianl"},"content":"\t * @param index 0-indexed integer","lastModifiedDate":"2021-08-16"},{"lineNumber":136,"author":{"gitId":"simonjulianl"},"content":"\t */","lastModifiedDate":"2021-08-16"},{"lineNumber":137,"author":{"gitId":"simonjulianl"},"content":"\tprivate void processDelete(int index) {","lastModifiedDate":"2021-08-16"},{"lineNumber":138,"author":{"gitId":"simonjulianl"},"content":"\t\tTask deletedTask \u003d taskDao.deleteTask(index);","lastModifiedDate":"2021-08-23"},{"lineNumber":139,"author":{"gitId":"simonjulianl"},"content":"\t\t","lastModifiedDate":"2021-08-16"},{"lineNumber":140,"author":{"gitId":"simonjulianl"},"content":"\t\tui.printSentence(\" Noted. I\u0027ve removed this task: \\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":141,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\"\\t\" + deletedTask.toString() + \"\\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":142,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\" Now you have \" + taskDao.getSize() + \" tasks in the list.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":143,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-16"},{"lineNumber":144,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-24"},{"lineNumber":145,"author":{"gitId":"simonjulianl"},"content":"\tprivate void processFind(Optional\u003cString\u003e keyword) {","lastModifiedDate":"2021-08-24"},{"lineNumber":146,"author":{"gitId":"simonjulianl"},"content":"\t\tkeyword.ifPresentOrElse(s -\u003e {","lastModifiedDate":"2021-08-24"},{"lineNumber":147,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\tList\u003cTask\u003e tasks \u003d taskDao.getByKeyword(s);","lastModifiedDate":"2021-08-24"},{"lineNumber":148,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\tui.printIndexedList(tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":149,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t},","lastModifiedDate":"2021-08-24"},{"lineNumber":150,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t() -\u003e processList(Optional.empty()));","lastModifiedDate":"2021-08-24"},{"lineNumber":151,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":152,"author":{"gitId":"simonjulianl"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"simonjulianl":152}},{"path":"src/main/java/logic/ICommandLogicUnit.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simonjulianl"},"content":"package logic;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"simonjulianl"},"content":"import model.Command;","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"simonjulianl"},"content":"import java.util.Map;","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"simonjulianl"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"simonjulianl"},"content":" * Interface for the central processing unit of the commands that contain the logic and data layer.","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"simonjulianl"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"simonjulianl"},"content":"public interface ICommandLogicUnit {","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"simonjulianl"},"content":"\t/**","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"simonjulianl"},"content":"\t * Processes commands, in this implementation it accepts all the commands in the enum Command.","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"simonjulianl"},"content":"\t *","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"simonjulianl"},"content":"\t * @param command Command.","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"simonjulianl"},"content":"\t * @param arguments Key-Value pair corresponding to name and value of each argument for the command.","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"simonjulianl"},"content":"\t */","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"simonjulianl"},"content":"\tvoid processCommand(Command command, Map\u003cString, String\u003e arguments);","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"simonjulianl"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"simonjulianl":18}},{"path":"src/main/java/model/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simonjulianl"},"content":"package model;","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"simonjulianl"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"simonjulianl"},"content":" * List of commands available for the logic unit.","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"simonjulianl"},"content":" * \u003col\u003e","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"simonjulianl"},"content":" *  \u003cli\u003e","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"simonjulianl"},"content":" *      BYE : to end the chat, no arguments requires, any extra arguments would be ignored, invoked using \"bye\".","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"simonjulianl"},"content":" *  \u003c/li\u003e","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"simonjulianl"},"content":" *  \u003cli\u003e","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"simonjulianl"},"content":" *      LIST : list the entire tasks array.","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"simonjulianl"},"content":" *  \u003c/li\u003e","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"simonjulianl"},"content":" *  \u003cli\u003e","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"simonjulianl"},"content":" *      FIND : find tasks using keyword.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"simonjulianl"},"content":" *  \u003c/li\u003e","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"simonjulianl"},"content":" *  \u003cli\u003e","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"simonjulianl"},"content":" *     Adding a Task: divided into 3 smaller parts :","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"simonjulianl"},"content":" *     \u003cul\u003e","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"simonjulianl"},"content":" *      \u003cli\u003e","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"simonjulianl"},"content":" *       DEADLINE : add a new deadline, takes 3 arguments section: description, \\by, deadline.","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"simonjulianl"},"content":" *      \u003c/li\u003e","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"simonjulianl"},"content":" *      \u003cli\u003e","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"simonjulianl"},"content":" *     EVENT : add a new deadline, takes 3 arguments section: description, \\at, deadline.","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"simonjulianl"},"content":" *      \u003c/li\u003e","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"simonjulianl"},"content":" *      \u003cli\u003e","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"simonjulianl"},"content":" *        TODOS : add a new deadline, takes 1 argument : description.","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"simonjulianl"},"content":" *      \u003c/li\u003e","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"simonjulianl"},"content":" *    \u003c/ul\u003e","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"simonjulianl"},"content":" *  \u003c/li\u003e","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"simonjulianl"},"content":" *  \u003cli\u003e","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"simonjulianl"},"content":" *      DONE : mark the task as done, 1 argument is required which is the number of task (the rest is ignored).","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"simonjulianl"},"content":" *  \u003c/li\u003e","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"simonjulianl"},"content":" *  \u003cli\u003e","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"simonjulianl"},"content":" *      INVALID : any other commands other than bye, the whole sentence would be echoed back instead.","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"simonjulianl"},"content":" *  \u003c/li\u003e","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"simonjulianl"},"content":" * \u003c/ol\u003e","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"simonjulianl"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"simonjulianl"},"content":"public enum Command {","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"simonjulianl"},"content":"\tBYE,","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"simonjulianl"},"content":"\tLIST,","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"simonjulianl"},"content":"\tFIND,","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"simonjulianl"},"content":"\tDEADLINE,","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"simonjulianl"},"content":"\tEVENT,","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"simonjulianl"},"content":"\tTODOS,","lastModifiedDate":"2021-08-16"},{"lineNumber":44,"author":{"gitId":"simonjulianl"},"content":"\tDELETE,","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"simonjulianl"},"content":"\tDONE,","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"simonjulianl"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"simonjulianl":46}},{"path":"src/main/java/model/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simonjulianl"},"content":"package model;","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"simonjulianl"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"simonjulianl"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"simonjulianl"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"simonjulianl"},"content":" * Task containing description and the deadline of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"simonjulianl"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"simonjulianl"},"content":"public class Deadline extends Task implements TimedItem {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"simonjulianl"},"content":"\t/** Deadline stored in local date time */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"simonjulianl"},"content":"\tprivate final LocalDateTime deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"simonjulianl"},"content":"\t/**","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"simonjulianl"},"content":"\t * Constructor for Deadline.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"simonjulianl"},"content":"\t *","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"simonjulianl"},"content":"\t * @param desc Description.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"simonjulianl"},"content":"\t * @param deadline LocalDateTime.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"simonjulianl"},"content":"\t */","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"simonjulianl"},"content":"\tpublic Deadline(String desc, LocalDateTime deadline) {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"simonjulianl"},"content":"\t\tsuper(desc);","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"simonjulianl"},"content":"\t\tthis.deadline \u003d deadline;","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"simonjulianl"},"content":"\t/**","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"simonjulianl"},"content":"\t * Returns string representation of deadline, marked with [D], desc and the deadline.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"simonjulianl"},"content":"\t *","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"simonjulianl"},"content":"\t * @return string.","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"simonjulianl"},"content":"\t */","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"simonjulianl"},"content":"\t@Override","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"simonjulianl"},"content":"\tpublic String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"simonjulianl"},"content":"\t\tDateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"simonjulianl"},"content":"\t\treturn \"[D]\" + super.toString() + \" (by: \" + deadline.format(formatter) + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"simonjulianl"},"content":"\t@Override","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"simonjulianl"},"content":"\tpublic LocalDateTime getTime() {","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"simonjulianl"},"content":"\t\treturn deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"simonjulianl"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"simonjulianl":40}},{"path":"src/main/java/model/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simonjulianl"},"content":"package model;","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"simonjulianl"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"simonjulianl"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"simonjulianl"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"simonjulianl"},"content":" * Task containing description and the time of the event.","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"simonjulianl"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"simonjulianl"},"content":"public class Event extends Task implements TimedItem {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"simonjulianl"},"content":"\t/** LocalDateTime of the event */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"simonjulianl"},"content":"\tprivate final LocalDateTime time;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"simonjulianl"},"content":"\t/**","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"simonjulianl"},"content":"\t * Public constructor of Event.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"simonjulianl"},"content":"\t *","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"simonjulianl"},"content":"\t * @param desc String representing the description","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"simonjulianl"},"content":"\t * @param time LocalDateTime.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"simonjulianl"},"content":"\t */","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"simonjulianl"},"content":"\tpublic Event(String desc, LocalDateTime time) {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"simonjulianl"},"content":"\t\tsuper(desc);","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"simonjulianl"},"content":"\t\tthis.time \u003d time;","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"simonjulianl"},"content":"\t/**","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"simonjulianl"},"content":"\t * String representation of Event, marked with [E], desc and the timing","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"simonjulianl"},"content":"\t *","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"simonjulianl"},"content":"\t * @return string","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"simonjulianl"},"content":"\t */","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"simonjulianl"},"content":"\t@Override","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"simonjulianl"},"content":"\tpublic String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"simonjulianl"},"content":"\t\tDateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"simonjulianl"},"content":"\t\treturn \"[E]\" + super.toString() + \" (at : \" + time.format(formatter) + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"simonjulianl"},"content":"\t@Override","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"simonjulianl"},"content":"\tpublic LocalDateTime getTime() {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"simonjulianl"},"content":"\t\treturn time;","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"simonjulianl"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"simonjulianl":39}},{"path":"src/main/java/model/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simonjulianl"},"content":"package model;","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"simonjulianl"},"content":"import java.io.Serializable;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"simonjulianl"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"simonjulianl"},"content":" * abstract class of task that represents a thing to be done","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"simonjulianl"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"simonjulianl"},"content":"public abstract class Task implements Serializable {","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"simonjulianl"},"content":"\tprivate final String desc;","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"simonjulianl"},"content":"\tprivate boolean isDone \u003d false;","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"simonjulianl"},"content":"\t/**","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"simonjulianl"},"content":"\t * Constructor of the abstract class, to be initialized with the subclass.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"simonjulianl"},"content":"\t *","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"simonjulianl"},"content":"\t * @param desc Description.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"simonjulianl"},"content":"\t */","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"simonjulianl"},"content":"\tpublic Task(String desc) {","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"simonjulianl"},"content":"\t\tthis.desc \u003d desc;","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"simonjulianl"},"content":"\t/**","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"simonjulianl"},"content":"\t * Marks the task as done.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"simonjulianl"},"content":"\t */","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"simonjulianl"},"content":"\tpublic void markDone() {","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"simonjulianl"},"content":"\t\tthis.isDone \u003d true;","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"simonjulianl"},"content":"\t/**","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"simonjulianl"},"content":"\t * Gets the status of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"simonjulianl"},"content":"\t *","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"simonjulianl"},"content":"\t * @return Boolean representing whether the task is done.","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"simonjulianl"},"content":"\t */","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"simonjulianl"},"content":"\tpublic boolean isDone() {","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"simonjulianl"},"content":"\t\treturn this.isDone;","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"simonjulianl"},"content":"\t/**","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"simonjulianl"},"content":"\t * Gets description of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"simonjulianl"},"content":"\t *","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"simonjulianl"},"content":"\t * @return String representing the description.","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"simonjulianl"},"content":"\t */","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"simonjulianl"},"content":"\tpublic String getDesc() {","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"simonjulianl"},"content":"\t\treturn this.desc;","lastModifiedDate":"2021-08-16"},{"lineNumber":44,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"simonjulianl"},"content":"\t/**","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"simonjulianl"},"content":"\t * Returns string representation of task class.","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"simonjulianl"},"content":"\t *","lastModifiedDate":"2021-08-17"},{"lineNumber":49,"author":{"gitId":"simonjulianl"},"content":"\t * @return [X] or [ ] indicating whether the task is done and the description.","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"simonjulianl"},"content":"\t */","lastModifiedDate":"2021-08-17"},{"lineNumber":51,"author":{"gitId":"simonjulianl"},"content":"\t@Override","lastModifiedDate":"2021-08-16"},{"lineNumber":52,"author":{"gitId":"simonjulianl"},"content":"\tpublic String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":53,"author":{"gitId":"simonjulianl"},"content":"\t\treturn (this.isDone() ? \"[X] \" : \"[ ] \") + this.desc;","lastModifiedDate":"2021-08-16"},{"lineNumber":54,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-16"},{"lineNumber":55,"author":{"gitId":"simonjulianl"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"simonjulianl":55}},{"path":"src/main/java/model/TimedItem.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simonjulianl"},"content":"package model;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"simonjulianl"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"simonjulianl"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"simonjulianl"},"content":" * Model that a time signifying certain semantics.","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"simonjulianl"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"simonjulianl"},"content":"public interface TimedItem {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"simonjulianl"},"content":"\t/**","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"simonjulianl"},"content":"\t * Gets the time of the item.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"simonjulianl"},"content":"\t *","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"simonjulianl"},"content":"\t * @return LocalDateTime.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"simonjulianl"},"content":"\t */","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"simonjulianl"},"content":"\tLocalDateTime getTime();","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"simonjulianl"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"simonjulianl":15}},{"path":"src/main/java/model/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simonjulianl"},"content":"package model;","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"simonjulianl"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"simonjulianl"},"content":" * a task containing description only","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"simonjulianl"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"simonjulianl"},"content":"public class ToDos extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"simonjulianl"},"content":"\tpublic ToDos(String desc) {","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"simonjulianl"},"content":"\t\tsuper(desc);","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"simonjulianl"},"content":"\t/**","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"simonjulianl"},"content":"\t * String representation of todos, marked with [T] and the desc","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"simonjulianl"},"content":"\t *","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"simonjulianl"},"content":"\t * @return string","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"simonjulianl"},"content":"\t */","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"simonjulianl"},"content":"\t@Override","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"simonjulianl"},"content":"\tpublic String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"simonjulianl"},"content":"\t\treturn \"[T]\" + super.toString();","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"simonjulianl"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"simonjulianl":20}},{"path":"src/main/java/parser/IParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simonjulianl"},"content":"package parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"simonjulianl"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"simonjulianl"},"content":" * Command line processor interface that takes in the input from the console.","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"simonjulianl"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"simonjulianl"},"content":"public interface IParser {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"simonjulianl"},"content":"\t/**","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"simonjulianl"},"content":"\t * Parses the input from console into corresponding command and process it, current implementation using Command Processor.","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"simonjulianl"},"content":"\t *","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"simonjulianl"},"content":"\t * @param input String.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"simonjulianl"},"content":"\t */","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"simonjulianl"},"content":"\tvoid processInput(String input);","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"simonjulianl"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"simonjulianl":13}},{"path":"src/main/java/parser/ParserImpl.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simonjulianl"},"content":"package parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"simonjulianl"},"content":"import dao.TaskDaoImpl;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"simonjulianl"},"content":"import logic.ICommandLogicUnit;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"simonjulianl"},"content":"import model.Command;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"simonjulianl"},"content":"import ui.IUi;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"simonjulianl"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"simonjulianl"},"content":"import java.util.List;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"simonjulianl"},"content":"import java.util.Map;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"simonjulianl"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"simonjulianl"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"simonjulianl"},"content":" * An entity that takes in the input from the console and parse it to valid command or throw exception","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"simonjulianl"},"content":" * if the command is invalid","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"simonjulianl"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"simonjulianl"},"content":"public class ParserImpl implements IParser {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"simonjulianl"},"content":"\t/** CommandLogicUnit to process all the commands */","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"simonjulianl"},"content":"\tprivate final ICommandLogicUnit commandLogicUnit;","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"simonjulianl"},"content":"\t/** UI that is responsible for dealing with interactions with the user */","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"simonjulianl"},"content":"\tprivate final IUi ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"simonjulianl"},"content":"\t/** list of available commands and arguments that can be parsed */","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"simonjulianl"},"content":"\tprivate final List\u003cString\u003e availableCommands \u003d List.of(","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\"bye\",","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\"list (#date dd/MM/yyyy HHmm)\",","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\"done #index\",","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\"deadline #desc /by #deadline-date(dd/MM/yyyy HHmm)\",","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\"todo #desc\",","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\"event #desc /at #timing-date(dd/MM/yyyy HHmm)\",","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\"delete #index\"","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"simonjulianl"},"content":"\t);","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"simonjulianl"},"content":"\tprivate final Logger logger \u003d Logger.getLogger(TaskDaoImpl.class.getName());","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"simonjulianl"},"content":"\t/**","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"simonjulianl"},"content":"\t * CommandProcessorImplementation that would parse the inputs into commands.","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"simonjulianl"},"content":"\t *","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"simonjulianl"},"content":"\t * @param commandLogicUnit CommandLogicUnit that would process the parsed input.","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"simonjulianl"},"content":"\t * @param ui UI.","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"simonjulianl"},"content":"\t */","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"simonjulianl"},"content":"\tpublic ParserImpl(ICommandLogicUnit commandLogicUnit, IUi ui) {","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"simonjulianl"},"content":"\t\tthis.commandLogicUnit \u003d commandLogicUnit;","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"simonjulianl"},"content":"\t\tthis.ui \u003d ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"simonjulianl"},"content":"\t@Override","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"simonjulianl"},"content":"\tpublic void processInput(String input) {","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"simonjulianl"},"content":"\t\t// take the next command within a line, inputted using enter","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"simonjulianl"},"content":"\t\tList\u003cString\u003e parsedCommands \u003d Arrays.asList(input.split(\" \"));","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"simonjulianl"},"content":"\t\t","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"simonjulianl"},"content":"\t\tprocessInputHelper(parsedCommands);","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"simonjulianl"},"content":"\t/**","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"simonjulianl"},"content":"\t * Processes the input as list of strings into commands.","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"simonjulianl"},"content":"\t * Helper method for processInput method.","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"simonjulianl"},"content":"\t *","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"simonjulianl"},"content":"\t * @param parsedCommands List of string from user inputs.","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"simonjulianl"},"content":"\t */","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"simonjulianl"},"content":"\tprivate void processInputHelper(List\u003cString\u003e parsedCommands) {","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"simonjulianl"},"content":"\t\tswitch (parsedCommands.get(0)) {","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"simonjulianl"},"content":"\t\tcase \"bye\":","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"simonjulianl"},"content":"\t\t\tcommandLogicUnit.processCommand(Command.BYE, Map.of());","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"simonjulianl"},"content":"\t\t\tbreak;","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"simonjulianl"},"content":"\t\tcase \"list\":","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"simonjulianl"},"content":"\t\t\tparseList(parsedCommands);","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"simonjulianl"},"content":"\t\t\tbreak;","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"simonjulianl"},"content":"\t\tcase \"done\":","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"simonjulianl"},"content":"\t\t\tparseDone(parsedCommands);","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"simonjulianl"},"content":"\t\t\tbreak;","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"simonjulianl"},"content":"\t\tcase \"deadline\":","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"simonjulianl"},"content":"\t\t\tparseDeadline(parsedCommands);","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"simonjulianl"},"content":"\t\t\tbreak;","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"simonjulianl"},"content":"\t\tcase \"todo\":","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"simonjulianl"},"content":"\t\t\tparseTodo(parsedCommands);","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"simonjulianl"},"content":"\t\t\tbreak;","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"simonjulianl"},"content":"\t\tcase \"event\":","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"simonjulianl"},"content":"\t\t\tparseEvent(parsedCommands);","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"simonjulianl"},"content":"\t\t\tbreak;","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"simonjulianl"},"content":"\t\tcase \"delete\":","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"simonjulianl"},"content":"\t\t\tparseDelete(parsedCommands);","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"simonjulianl"},"content":"\t\t\tbreak;","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"simonjulianl"},"content":"\t\tcase \"find\":","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"simonjulianl"},"content":"\t\t\tparseFind(parsedCommands);","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"simonjulianl"},"content":"\t\t\tbreak;","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"simonjulianl"},"content":"\t\tcase \"man\":","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"simonjulianl"},"content":"\t\t\tui.printSentence(\"() -\u003e optional parameter or format of date time\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\t\"# -\u003e the parameter of the commands\");","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"simonjulianl"},"content":"\t\t\tui.printIndexedList(availableCommands);","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"simonjulianl"},"content":"\t\t\tbreak;","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"simonjulianl"},"content":"\t\tdefault:","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"simonjulianl"},"content":"\t\t\tlogger.warning(\"Unknown command : \" + parsedCommands.get(0) + \"being parsed\");","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"simonjulianl"},"content":"\t\t\tprocessException(new IllegalCallerException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"simonjulianl"},"content":"\t\t\tbreak;","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"simonjulianl"},"content":"\t\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"simonjulianl"},"content":"\tprivate void parseList(List\u003cString\u003e parsedCommands) {","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"simonjulianl"},"content":"\t\tString date \u003d \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"simonjulianl"},"content":"\t\t","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"simonjulianl"},"content":"\t\tif (parsedCommands.size() \u003e\u003d 2) {","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"simonjulianl"},"content":"\t\t\tdate \u003d parsedCommands.get(1);","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"simonjulianl"},"content":"\t\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"simonjulianl"},"content":"\t\t","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"simonjulianl"},"content":"\t\tcommandLogicUnit.processCommand(Command.LIST, Map.of(","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\"date\", date","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"simonjulianl"},"content":"\t\t));","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"simonjulianl"},"content":"\tprivate void parseDone(List\u003cString\u003e parsedCommands) {","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"simonjulianl"},"content":"\t\ttry {","lastModifiedDate":"2021-08-22"},{"lineNumber":114,"author":{"gitId":"simonjulianl"},"content":"\t\t\tcommandLogicUnit.processCommand(Command.DONE, Map.of(","lastModifiedDate":"2021-08-22"},{"lineNumber":115,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\t\"index\", parsedCommands.get(1)","lastModifiedDate":"2021-08-22"},{"lineNumber":116,"author":{"gitId":"simonjulianl"},"content":"\t\t\t));","lastModifiedDate":"2021-08-22"},{"lineNumber":117,"author":{"gitId":"simonjulianl"},"content":"\t\t} catch (Exception e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":118,"author":{"gitId":"simonjulianl"},"content":"\t\t\tprocessException(e);","lastModifiedDate":"2021-08-22"},{"lineNumber":119,"author":{"gitId":"simonjulianl"},"content":"\t\t}","lastModifiedDate":"2021-08-22"},{"lineNumber":120,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-22"},{"lineNumber":122,"author":{"gitId":"simonjulianl"},"content":"\tprivate void parseDeadline(List\u003cString\u003e parsedCommands) {","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"simonjulianl"},"content":"\t\ttry {","lastModifiedDate":"2021-08-22"},{"lineNumber":124,"author":{"gitId":"simonjulianl"},"content":"\t\t\tint byIndex \u003d parsedCommands.indexOf(\"/by\");","lastModifiedDate":"2021-08-22"},{"lineNumber":125,"author":{"gitId":"simonjulianl"},"content":"\t\t\tif (byIndex \u003d\u003d -1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\tlogger.warning(\"/by not supplied in deadline command\");","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\tthrow new IllegalArgumentException(\"/by command not found\");","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"simonjulianl"},"content":"\t\t\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"simonjulianl"},"content":"\t\t\t","lastModifiedDate":"2021-08-22"},{"lineNumber":130,"author":{"gitId":"simonjulianl"},"content":"\t\t\tString desc \u003d String.join(\" \", parsedCommands.subList(1, byIndex));","lastModifiedDate":"2021-08-22"},{"lineNumber":131,"author":{"gitId":"simonjulianl"},"content":"\t\t\tif (desc.isBlank()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":132,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\tlogger.warning(\"Empty deadline desc supplied\");","lastModifiedDate":"2021-08-24"},{"lineNumber":133,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\tthrow new IllegalArgumentException(\"deadline desc cannot be empty\");","lastModifiedDate":"2021-08-24"},{"lineNumber":134,"author":{"gitId":"simonjulianl"},"content":"\t\t\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":135,"author":{"gitId":"simonjulianl"},"content":"\t\t\t","lastModifiedDate":"2021-08-22"},{"lineNumber":136,"author":{"gitId":"simonjulianl"},"content":"\t\t\tString timing \u003d String.join(\" \", parsedCommands.subList(byIndex + 1, parsedCommands.size()));","lastModifiedDate":"2021-08-22"},{"lineNumber":137,"author":{"gitId":"simonjulianl"},"content":"\t\t\tif (timing.isBlank()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":138,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\tlogger.warning(\"Empty deadline timing supplied\");","lastModifiedDate":"2021-08-24"},{"lineNumber":139,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\tthrow new IllegalArgumentException(\"deadline timing cannot be empty\");","lastModifiedDate":"2021-08-24"},{"lineNumber":140,"author":{"gitId":"simonjulianl"},"content":"\t\t\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":141,"author":{"gitId":"simonjulianl"},"content":"\t\t\t","lastModifiedDate":"2021-08-22"},{"lineNumber":142,"author":{"gitId":"simonjulianl"},"content":"\t\t\tcommandLogicUnit.processCommand(Command.DEADLINE, Map.of(","lastModifiedDate":"2021-08-22"},{"lineNumber":143,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\t\"description\", desc,","lastModifiedDate":"2021-08-22"},{"lineNumber":144,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\t\"timing\", timing","lastModifiedDate":"2021-08-22"},{"lineNumber":145,"author":{"gitId":"simonjulianl"},"content":"\t\t\t));","lastModifiedDate":"2021-08-22"},{"lineNumber":146,"author":{"gitId":"simonjulianl"},"content":"\t\t} catch (Exception e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":147,"author":{"gitId":"simonjulianl"},"content":"\t\t\tprocessException(e);","lastModifiedDate":"2021-08-22"},{"lineNumber":148,"author":{"gitId":"simonjulianl"},"content":"\t\t}","lastModifiedDate":"2021-08-22"},{"lineNumber":149,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-22"},{"lineNumber":150,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-24"},{"lineNumber":151,"author":{"gitId":"simonjulianl"},"content":"\tprivate void parseTodo(List\u003cString\u003e parsedCommands) {","lastModifiedDate":"2021-08-24"},{"lineNumber":152,"author":{"gitId":"simonjulianl"},"content":"\t\ttry {","lastModifiedDate":"2021-08-22"},{"lineNumber":153,"author":{"gitId":"simonjulianl"},"content":"\t\t\tString desc \u003d String.join(\" \", parsedCommands.subList(1, parsedCommands.size()));","lastModifiedDate":"2021-08-22"},{"lineNumber":154,"author":{"gitId":"simonjulianl"},"content":"\t\t\t","lastModifiedDate":"2021-08-22"},{"lineNumber":155,"author":{"gitId":"simonjulianl"},"content":"\t\t\tif (desc.isBlank()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":156,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\tlogger.warning(\"Empty Todo desc being supplied\");","lastModifiedDate":"2021-08-24"},{"lineNumber":157,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\tthrow new IllegalArgumentException(\"todo desc cannot be empty\");","lastModifiedDate":"2021-08-24"},{"lineNumber":158,"author":{"gitId":"simonjulianl"},"content":"\t\t\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":159,"author":{"gitId":"simonjulianl"},"content":"\t\t\t","lastModifiedDate":"2021-08-22"},{"lineNumber":160,"author":{"gitId":"simonjulianl"},"content":"\t\t\tcommandLogicUnit.processCommand(Command.TODOS, Map.of(","lastModifiedDate":"2021-08-22"},{"lineNumber":161,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\t\"description\", desc","lastModifiedDate":"2021-08-22"},{"lineNumber":162,"author":{"gitId":"simonjulianl"},"content":"\t\t\t));","lastModifiedDate":"2021-08-22"},{"lineNumber":163,"author":{"gitId":"simonjulianl"},"content":"\t\t} catch (Exception e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":164,"author":{"gitId":"simonjulianl"},"content":"\t\t\tprocessException(e);","lastModifiedDate":"2021-08-22"},{"lineNumber":165,"author":{"gitId":"simonjulianl"},"content":"\t\t}","lastModifiedDate":"2021-08-22"},{"lineNumber":166,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-22"},{"lineNumber":167,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-24"},{"lineNumber":168,"author":{"gitId":"simonjulianl"},"content":"\tprivate void parseEvent(List\u003cString\u003e parsedCommands) {","lastModifiedDate":"2021-08-24"},{"lineNumber":169,"author":{"gitId":"simonjulianl"},"content":"\t\ttry {","lastModifiedDate":"2021-08-22"},{"lineNumber":170,"author":{"gitId":"simonjulianl"},"content":"\t\t\tint byIndex \u003d parsedCommands.indexOf(\"/at\");","lastModifiedDate":"2021-08-22"},{"lineNumber":171,"author":{"gitId":"simonjulianl"},"content":"\t\t\tif (byIndex \u003d\u003d -1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":172,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\tlogger.warning(\"/at not supplied in event command\");","lastModifiedDate":"2021-08-24"},{"lineNumber":173,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\tthrow new IllegalArgumentException(\"/at command not found\");","lastModifiedDate":"2021-08-24"},{"lineNumber":174,"author":{"gitId":"simonjulianl"},"content":"\t\t\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":175,"author":{"gitId":"simonjulianl"},"content":"\t\t\t","lastModifiedDate":"2021-08-22"},{"lineNumber":176,"author":{"gitId":"simonjulianl"},"content":"\t\t\tString desc \u003d String.join(\" \", parsedCommands.subList(1, byIndex));","lastModifiedDate":"2021-08-22"},{"lineNumber":177,"author":{"gitId":"simonjulianl"},"content":"\t\t\tif (desc.isBlank()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":178,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\tlogger.warning(\"Empty event desc supplied\");","lastModifiedDate":"2021-08-24"},{"lineNumber":179,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\tthrow new IllegalArgumentException(\"event desc cannot be empty\");","lastModifiedDate":"2021-08-24"},{"lineNumber":180,"author":{"gitId":"simonjulianl"},"content":"\t\t\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":181,"author":{"gitId":"simonjulianl"},"content":"\t\t\t","lastModifiedDate":"2021-08-22"},{"lineNumber":182,"author":{"gitId":"simonjulianl"},"content":"\t\t\tString timing \u003d String.join(\" \", parsedCommands.subList(byIndex + 1, parsedCommands.size()));","lastModifiedDate":"2021-08-22"},{"lineNumber":183,"author":{"gitId":"simonjulianl"},"content":"\t\t\tif (timing.isBlank()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":184,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\tlogger.warning(\"Empty todo timing supplied\");","lastModifiedDate":"2021-08-24"},{"lineNumber":185,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\tthrow new IllegalArgumentException(\"event timing cannot be empty\");","lastModifiedDate":"2021-08-24"},{"lineNumber":186,"author":{"gitId":"simonjulianl"},"content":"\t\t\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":187,"author":{"gitId":"simonjulianl"},"content":"\t\t\t","lastModifiedDate":"2021-08-22"},{"lineNumber":188,"author":{"gitId":"simonjulianl"},"content":"\t\t\tcommandLogicUnit.processCommand(Command.EVENT, Map.of(","lastModifiedDate":"2021-08-22"},{"lineNumber":189,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\t\"description\", desc,","lastModifiedDate":"2021-08-22"},{"lineNumber":190,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\t\"timing\", timing","lastModifiedDate":"2021-08-22"},{"lineNumber":191,"author":{"gitId":"simonjulianl"},"content":"\t\t\t));","lastModifiedDate":"2021-08-22"},{"lineNumber":192,"author":{"gitId":"simonjulianl"},"content":"\t\t} catch (Exception e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":193,"author":{"gitId":"simonjulianl"},"content":"\t\t\tprocessException(e);","lastModifiedDate":"2021-08-22"},{"lineNumber":194,"author":{"gitId":"simonjulianl"},"content":"\t\t}","lastModifiedDate":"2021-08-22"},{"lineNumber":195,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-22"},{"lineNumber":196,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-24"},{"lineNumber":197,"author":{"gitId":"simonjulianl"},"content":"\tprivate void parseDelete(List\u003cString\u003e parsedCommands) {","lastModifiedDate":"2021-08-24"},{"lineNumber":198,"author":{"gitId":"simonjulianl"},"content":"\t\ttry {","lastModifiedDate":"2021-08-22"},{"lineNumber":199,"author":{"gitId":"simonjulianl"},"content":"\t\t\tcommandLogicUnit.processCommand(Command.DELETE, Map.of(","lastModifiedDate":"2021-08-22"},{"lineNumber":200,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\t\"index\", parsedCommands.get(1)","lastModifiedDate":"2021-08-22"},{"lineNumber":201,"author":{"gitId":"simonjulianl"},"content":"\t\t\t));","lastModifiedDate":"2021-08-22"},{"lineNumber":202,"author":{"gitId":"simonjulianl"},"content":"\t\t} catch (Exception e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":203,"author":{"gitId":"simonjulianl"},"content":"\t\t\tprocessException(e);","lastModifiedDate":"2021-08-22"},{"lineNumber":204,"author":{"gitId":"simonjulianl"},"content":"\t\t}","lastModifiedDate":"2021-08-22"},{"lineNumber":205,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":206,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-22"},{"lineNumber":207,"author":{"gitId":"simonjulianl"},"content":"\tprivate void parseFind(List\u003cString\u003e parsedCommands) {","lastModifiedDate":"2021-08-24"},{"lineNumber":208,"author":{"gitId":"simonjulianl"},"content":"\t\tif (parsedCommands.size() \u003c 2) {","lastModifiedDate":"2021-08-24"},{"lineNumber":209,"author":{"gitId":"simonjulianl"},"content":"\t\t\tprocessException(new IllegalArgumentException(\"keyword cannot be empty\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":210,"author":{"gitId":"simonjulianl"},"content":"\t\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":211,"author":{"gitId":"simonjulianl"},"content":"\t\t","lastModifiedDate":"2021-08-24"},{"lineNumber":212,"author":{"gitId":"simonjulianl"},"content":"\t\tString keyword \u003d parsedCommands.get(1);","lastModifiedDate":"2021-08-24"},{"lineNumber":213,"author":{"gitId":"simonjulianl"},"content":"\t\ttry {","lastModifiedDate":"2021-08-24"},{"lineNumber":214,"author":{"gitId":"simonjulianl"},"content":"\t\t\tcommandLogicUnit.processCommand(Command.FIND, Map.of(","lastModifiedDate":"2021-08-24"},{"lineNumber":215,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\t\"keyword\", keyword","lastModifiedDate":"2021-08-24"},{"lineNumber":216,"author":{"gitId":"simonjulianl"},"content":"\t\t\t));","lastModifiedDate":"2021-08-24"},{"lineNumber":217,"author":{"gitId":"simonjulianl"},"content":"\t\t} catch (Exception e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":218,"author":{"gitId":"simonjulianl"},"content":"\t\t\tprocessException(e);","lastModifiedDate":"2021-08-24"},{"lineNumber":219,"author":{"gitId":"simonjulianl"},"content":"\t\t}","lastModifiedDate":"2021-08-22"},{"lineNumber":220,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-22"},{"lineNumber":221,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-22"},{"lineNumber":222,"author":{"gitId":"simonjulianl"},"content":"\tprivate void processException(Exception e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":223,"author":{"gitId":"simonjulianl"},"content":"\t\tui.printSentence(\"☹ OOPS!!! \" + e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":224,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-23"},{"lineNumber":225,"author":{"gitId":"simonjulianl"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"simonjulianl":225}},{"path":"src/main/java/storage/FileListStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simonjulianl"},"content":"package storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"simonjulianl"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"simonjulianl"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"simonjulianl"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"simonjulianl"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"simonjulianl"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"simonjulianl"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"simonjulianl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"simonjulianl"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"simonjulianl"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"simonjulianl"},"content":" * File Storage that stores a list of objects.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"simonjulianl"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"simonjulianl"},"content":" * @param \u003cT\u003e Type of the object to be stored.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"simonjulianl"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"simonjulianl"},"content":"public class FileListStorage\u003cT\u003e {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"simonjulianl"},"content":"\tprivate final Logger logger \u003d Logger.getLogger(FileListStorage.class.getName());","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"simonjulianl"},"content":"\t/** Path leading to the file */","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"simonjulianl"},"content":"\tprivate final String filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"simonjulianl"},"content":"\t/**","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"simonjulianl"},"content":"\t * Main constructor of FileListStorage.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"simonjulianl"},"content":"\t *","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"simonjulianl"},"content":"\t * @param filePath String representing the path to the file, separated by / char.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"simonjulianl"},"content":"\t */","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"simonjulianl"},"content":"\tpublic FileListStorage(String filePath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"simonjulianl"},"content":"\t\tthis.filePath \u003d filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"simonjulianl"},"content":"\t\t","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"simonjulianl"},"content":"\t\ttry {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"simonjulianl"},"content":"\t\t\t// a local file is used to persistently store all the tasks,","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"simonjulianl"},"content":"\t\t\t// and it should only have 1 object, which is the list of task","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"simonjulianl"},"content":"\t\t\tFile file \u003d new File(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"simonjulianl"},"content":"\t\t\tboolean isCreated \u003d file.createNewFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"simonjulianl"},"content":"\t\t\tif (isCreated) {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\twriteArrayListToFile(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\tlogger.info(\"FileListStorage is successfully created at \" + file.getAbsolutePath());","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"simonjulianl"},"content":"\t\t\t} else {","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\tlogger.info(\"FileListStorage already exists at \" + file.getAbsolutePath());","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"simonjulianl"},"content":"\t\t\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"simonjulianl"},"content":"\t\t} catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"simonjulianl"},"content":"\t\t\tlogger.severe(\"Task file cannot be created \" + e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"simonjulianl"},"content":"\t\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"simonjulianl"},"content":"\t/**","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"simonjulianl"},"content":"\t * Writes the serialized ArrayList of Task into a file.","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"simonjulianl"},"content":"\t * It will log IOException error accordingly.","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"simonjulianl"},"content":"\t *","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"simonjulianl"},"content":"\t * @param items ArrayList of items to be written.","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"simonjulianl"},"content":"\t */","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"simonjulianl"},"content":"\tpublic void writeArrayListToFile(ArrayList\u003cT\u003e items) {","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"simonjulianl"},"content":"\t\ttry (FileOutputStream file \u003d new FileOutputStream(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"simonjulianl"},"content":"\t\t     ObjectOutputStream objectOutputStream \u003d new ObjectOutputStream(file)","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"simonjulianl"},"content":"\t\t) {","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"simonjulianl"},"content":"\t\t\tobjectOutputStream.writeObject(items);","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"simonjulianl"},"content":"\t\t\tlogger.fine(\"Writing Task list to file : \" + filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"simonjulianl"},"content":"\t\t} catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"simonjulianl"},"content":"\t\t\tlogger.severe(\"Writing tasks to file \" + filePath + \" failed : \" + e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"simonjulianl"},"content":"\t\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"simonjulianl"},"content":"\t/**","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"simonjulianl"},"content":"\t * Reads the serialized ArrayList of Task from a file and return it.","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"simonjulianl"},"content":"\t * It will log IOException and ClassNotFound error accordingly.","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"simonjulianl"},"content":"\t */","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"simonjulianl"},"content":"\tpublic ArrayList\u003cT\u003e readArrayListFromFile() {","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"simonjulianl"},"content":"\t\ttry (FileInputStream file \u003d new FileInputStream(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"simonjulianl"},"content":"\t\t     ObjectInputStream objectInputStream \u003d new ObjectInputStream(file)","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"simonjulianl"},"content":"\t\t) {","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"simonjulianl"},"content":"\t\t\t@SuppressWarnings(\"unchecked\")","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"simonjulianl"},"content":"\t\t\t// Casting in mandatory here since we are reading objects","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"simonjulianl"},"content":"\t\t\tArrayList\u003cT\u003e tasks \u003d (ArrayList\u003cT\u003e) objectInputStream.readObject();","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"simonjulianl"},"content":"\t\t\tlogger.fine(\"Reading Task List from file : \" + filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"simonjulianl"},"content":"\t\t\t","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"simonjulianl"},"content":"\t\t\treturn tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"simonjulianl"},"content":"\t\t} catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"simonjulianl"},"content":"\t\t\tlogger.severe(\"Reading Task List Failed : \" + e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"simonjulianl"},"content":"\t\t} catch (ClassNotFoundException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"simonjulianl"},"content":"\t\t\tlogger.severe(\"Object cannot be casted to array of task : \" + e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"simonjulianl"},"content":"\t\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"simonjulianl"},"content":"\t\t","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"simonjulianl"},"content":"\t\t// Since it cannot be read, we rewrite the file with a new file.","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"simonjulianl"},"content":"\t\treturn new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"simonjulianl"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"simonjulianl":87}},{"path":"src/main/java/ui/IUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simonjulianl"},"content":"package ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"simonjulianl"},"content":"import java.util.List;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"simonjulianl"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"simonjulianl"},"content":" * Interface for UI.","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"simonjulianl"},"content":" * Sole responsibility is to determine the UI to user.","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"simonjulianl"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"simonjulianl"},"content":"public interface IUi {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"simonjulianl"},"content":"\t/**","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"simonjulianl"},"content":"\t * Displays the sentence for the CLI.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"simonjulianl"},"content":"\t *","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"simonjulianl"},"content":"\t * @param sentence String to be printed.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"simonjulianl"},"content":"\t */","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"simonjulianl"},"content":"\tvoid printSentence(String sentence);","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"simonjulianl"},"content":"\t/**","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"simonjulianl"},"content":"\t * Displays a list for the CLI.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"simonjulianl"},"content":"\t *","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"simonjulianl"},"content":"\t * @param list List.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"simonjulianl"},"content":"\t * @param \u003cT\u003e Parameter, implicitly inferred.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"simonjulianl"},"content":"\t */","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"simonjulianl"},"content":"\t\u003cT\u003e void printIndexedList(List\u003cT\u003e list);","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"simonjulianl"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"simonjulianl":24}},{"path":"src/main/java/ui/UiImpl.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simonjulianl"},"content":"package ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"simonjulianl"},"content":"import java.util.List;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"simonjulianl"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"simonjulianl"},"content":" * Default implementation of UI which prints items using the following format:","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"simonjulianl"},"content":" * ------------------","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"simonjulianl"},"content":" * something","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"simonjulianl"},"content":" * ------------------","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"simonjulianl"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"simonjulianl"},"content":"public class UiImpl implements IUi {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"simonjulianl"},"content":"\t/**","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"simonjulianl"},"content":"\t * Displays a list for the CLI using --- + ordered list + ---- format.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"simonjulianl"},"content":"\t *","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"simonjulianl"},"content":"\t * @param list List.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"simonjulianl"},"content":"\t * @param \u003cT\u003e Parameter, implicitly inferred.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"simonjulianl"},"content":"\t */","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"simonjulianl"},"content":"\tpublic \u003cT\u003e void printIndexedList(List\u003cT\u003e list) {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"simonjulianl"},"content":"\t\tint numbering \u003d 1;","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"simonjulianl"},"content":"\t\tStringBuilder string \u003d new StringBuilder();","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"simonjulianl"},"content":"\t\t","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"simonjulianl"},"content":"\t\tfor (T item : list) {","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"simonjulianl"},"content":"\t\t\tstring.append(\" \")","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\t.append(numbering)","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\t.append(\". \")","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\t.append(item.toString())","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\t.append(\"\\n\");","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"simonjulianl"},"content":"\t\t\t","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"simonjulianl"},"content":"\t\t\tnumbering++;","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"simonjulianl"},"content":"\t\t}","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"simonjulianl"},"content":"\t\t","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"simonjulianl"},"content":"\t\t// remove the last extra \\n if there is at least an item in the list","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"simonjulianl"},"content":"\t\tif (list.size() \u003e 0) string.deleteCharAt(string.length() - 1);","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"simonjulianl"},"content":"\t\t","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"simonjulianl"},"content":"\t\tprintSentence(string.toString());","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"simonjulianl"},"content":"\t/**","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"simonjulianl"},"content":"\t * Displays the sentence for the CLI using ---- + sentence + ----- format.","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"simonjulianl"},"content":"\t *","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"simonjulianl"},"content":"\t * @param sentence String to be printed.","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"simonjulianl"},"content":"\t */","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"simonjulianl"},"content":"\tpublic void printSentence(String sentence) {","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"simonjulianl"},"content":"\t\tSystem.out.println((\"\\t____________________________________________________________\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\"\\t\" + sentence.replace(\"\\n\", \"\\n\\t\") +","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\"\\n\\t____________________________________________________________\\n\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"simonjulianl"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"simonjulianl":48}},{"path":"src/test/java/dao/TaskDaoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simonjulianl"},"content":"package dao;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"simonjulianl"},"content":"import model.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"simonjulianl"},"content":"import model.Event;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"simonjulianl"},"content":"import model.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"simonjulianl"},"content":"import model.ToDos;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"simonjulianl"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"simonjulianl"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"simonjulianl"},"content":"import org.junit.jupiter.api.DisplayName;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"simonjulianl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"simonjulianl"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"simonjulianl"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"simonjulianl"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"simonjulianl"},"content":"public class TaskDaoTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"simonjulianl"},"content":"\tprivate static TaskDaoImpl taskDao;","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"simonjulianl"},"content":"\t@BeforeAll","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"simonjulianl"},"content":"\tpublic static void setUpEnvironment() {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"simonjulianl"},"content":"\t\ttaskDao \u003d new TaskDaoImpl();","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"simonjulianl"},"content":"\t@BeforeEach","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"simonjulianl"},"content":"\tpublic void setUpMethod() {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"simonjulianl"},"content":"\t\twhile (taskDao.getSize() !\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"simonjulianl"},"content":"\t\t\ttaskDao.deleteTask(0);","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"simonjulianl"},"content":"\t\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"simonjulianl"},"content":"\t@Test","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"simonjulianl"},"content":"\t@DisplayName(\"Adding event task should work\")","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"simonjulianl"},"content":"\tpublic void addTask_eventTask_taskAdded() {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"simonjulianl"},"content":"\t\tTask event \u003d new Event(\"some dummy event\", LocalDateTime.now());","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"simonjulianl"},"content":"\t\ttaskDao.addTask(event);","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"simonjulianl"},"content":"\t\tassertEquals(event.toString(),","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\ttaskDao.getTask(taskDao.getSize() - 1).toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"simonjulianl"},"content":"\t@Test","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"simonjulianl"},"content":"\t@DisplayName(\"Adding deadline task should work\")","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"simonjulianl"},"content":"\tpublic void addTask_deadlineTask_taskAdded() {","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"simonjulianl"},"content":"\t\tTask deadline \u003d new Deadline(\"some dummy deadline\", LocalDateTime.now());","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"simonjulianl"},"content":"\t\ttaskDao.addTask(deadline);","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"simonjulianl"},"content":"\t\tassertEquals(deadline.toString(),","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\ttaskDao.getTask(taskDao.getSize() - 1).toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"simonjulianl"},"content":"\t@Test","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"simonjulianl"},"content":"\t@DisplayName(\"Adding todo task should work\")","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"simonjulianl"},"content":"\tpublic void addTask_todoTask_taskAdded() {","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"simonjulianl"},"content":"\t\tTask todo \u003d new ToDos(\"some dummy event\");","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"simonjulianl"},"content":"\t\ttaskDao.addTask(todo);","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"simonjulianl"},"content":"\t\tassertEquals(todo.toString(),","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\ttaskDao.getTask(taskDao.getSize() - 1).toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"simonjulianl"},"content":"\t@Test","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"simonjulianl"},"content":"\t@DisplayName(\"Delete using invalid index should throw error\")","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"simonjulianl"},"content":"\tpublic void deleteTask_invalidIndex_exceptionThrown() {","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"simonjulianl"},"content":"\t\tTask todo \u003d new ToDos(\"some dummy event\");","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"simonjulianl"},"content":"\t\ttaskDao.addTask(todo);","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"simonjulianl"},"content":"\t\tint currentSize \u003d taskDao.getSize();","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"simonjulianl"},"content":"\t\t","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"simonjulianl"},"content":"\t\tassertThrows(IndexOutOfBoundsException.class,","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t() -\u003e taskDao.deleteTask(currentSize + 1));","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"simonjulianl"},"content":"\t@Test","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"simonjulianl"},"content":"\t@DisplayName(\"Delete using valid index should work\")","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"simonjulianl"},"content":"\tpublic void deleteTask_validIndex_deleteSuccessfully() {","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"simonjulianl"},"content":"\t\tTask todo \u003d new ToDos(\"some dummy event\");","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"simonjulianl"},"content":"\t\ttaskDao.addTask(todo);","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"simonjulianl"},"content":"\t\t","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"simonjulianl"},"content":"\t\tint lastIndex \u003d taskDao.getSize() - 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"simonjulianl"},"content":"\t\tassertDoesNotThrow(() -\u003e taskDao.deleteTask(lastIndex));","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"simonjulianl"},"content":"\t@Test","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"simonjulianl"},"content":"\t@DisplayName(\"Gets a single task given a valid index\")","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"simonjulianl"},"content":"\tpublic void getTask_validIndex_getSuccessfully() {","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"simonjulianl"},"content":"\t\tTask todo \u003d new ToDos(\"some dummy event\");","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"simonjulianl"},"content":"\t\ttaskDao.addTask(todo);","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"simonjulianl"},"content":"\t\t","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"simonjulianl"},"content":"\t\tassertEquals(todo.toString(),","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\ttaskDao.getTask(taskDao.getSize() - 1).toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"simonjulianl"},"content":"\t@Test","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"simonjulianl"},"content":"\t@DisplayName(\"Mark done using valid index should work\")","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"simonjulianl"},"content":"\tpublic void markDone_validIndex_markSuccessfully() {","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"simonjulianl"},"content":"\t\tTask todo \u003d new ToDos(\"some dummy event\");","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"simonjulianl"},"content":"\t\ttaskDao.addTask(todo);","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"simonjulianl"},"content":"\t\t","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"simonjulianl"},"content":"\t\ttaskDao.markDone(taskDao.getSize() - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"simonjulianl"},"content":"\t\tassertTrue(taskDao.getTask(taskDao.getSize() - 1).isDone());","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"simonjulianl"},"content":"\t@Test","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"simonjulianl"},"content":"\t@DisplayName(\"Gets All the List\")","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"simonjulianl"},"content":"\tpublic void getAll_add10Task_addedSuccessfully() {","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"simonjulianl"},"content":"\t\tint listSize \u003d 10;","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"simonjulianl"},"content":"\t\tIntStream.range(0, listSize)","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t.mapToObj(i -\u003e new ToDos(\"some dummy event \" + i))","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t.forEach(todo -\u003e taskDao.addTask(todo));","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"simonjulianl"},"content":"\t\t","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"simonjulianl"},"content":"\t\tassertEquals(listSize, taskDao.getSize());","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"simonjulianl"},"content":"\t@Test","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"simonjulianl"},"content":"\t@DisplayName(\"Gets the size of Task list\")","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"simonjulianl"},"content":"\tpublic void getSize_add1Task_sizeOne() {","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"simonjulianl"},"content":"\t\tTask todo \u003d new ToDos(\"some dummy event\");","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"simonjulianl"},"content":"\t\ttaskDao.addTask(todo);","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"simonjulianl"},"content":"\t\t","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"simonjulianl"},"content":"\t\tassertEquals(1, taskDao.getSize());","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"simonjulianl"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"simonjulianl":119}},{"path":"src/test/java/logic/CommandLogicUnitStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simonjulianl"},"content":"package logic;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"simonjulianl"},"content":"import model.Command;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"simonjulianl"},"content":"import java.util.Map;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"simonjulianl"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"simonjulianl"},"content":" * Logic Unit Stub that does not process any command.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"simonjulianl"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"simonjulianl"},"content":"public class CommandLogicUnitStub implements ICommandLogicUnit {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"simonjulianl"},"content":"\t@Override","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"simonjulianl"},"content":"\tpublic void processCommand(Command command, Map\u003cString, String\u003e arguments) {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"simonjulianl"},"content":"\t\t// do nothing","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"simonjulianl"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"simonjulianl":15}},{"path":"src/test/java/parser/ParserImplTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simonjulianl"},"content":"package parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"simonjulianl"},"content":"import logic.CommandLogicUnitStub;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"simonjulianl"},"content":"import logic.ICommandLogicUnit;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"simonjulianl"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"simonjulianl"},"content":"import org.junit.jupiter.api.DisplayName;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"simonjulianl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"simonjulianl"},"content":"import ui.IUi;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"simonjulianl"},"content":"import ui.UiStub;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"simonjulianl"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"simonjulianl"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"simonjulianl"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"simonjulianl"},"content":"public class ParserImplTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"simonjulianl"},"content":"\tprivate static ParserImpl parserImpl;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"simonjulianl"},"content":"\t@BeforeAll","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"simonjulianl"},"content":"\tpublic static void setUpEnvironment() {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"simonjulianl"},"content":"\t\tICommandLogicUnit commandLogicUnit \u003d new CommandLogicUnitStub();","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"simonjulianl"},"content":"\t\tIUi ui \u003d new UiStub();","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"simonjulianl"},"content":"\t\tparserImpl \u003d new ParserImpl(commandLogicUnit, ui);","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"simonjulianl"},"content":"\t@Test","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"simonjulianl"},"content":"\t@DisplayName(\"Parser should be able to take valid input from user\")","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"simonjulianl"},"content":"\tpublic void processInput_validCommand_parsedSuccessfully() {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"simonjulianl"},"content":"\t\t// @author McDowell","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"simonjulianl"},"content":"\t\t// Reused from http://www.javased.com/?post\u003d1647907","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"simonjulianl"},"content":"\t\t// with minor modifications","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"simonjulianl"},"content":"\t\t","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"simonjulianl"},"content":"\t\tString userInput \u003d \"man \\r\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"simonjulianl"},"content":"\t\tSystem.setIn(new ByteArrayInputStream(userInput.getBytes()));","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"simonjulianl"},"content":"\t\t","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"simonjulianl"},"content":"\t\ttry (Scanner scanner \u003d new Scanner(System.in)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"simonjulianl"},"content":"\t\t\tString input \u003d scanner.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"simonjulianl"},"content":"\t\t\tSystem.out.println(input);","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"simonjulianl"},"content":"\t\t\tassertDoesNotThrow(() -\u003e parserImpl.processInput(input));","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"simonjulianl"},"content":"\t\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"simonjulianl"},"content":"\t@Test","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"simonjulianl"},"content":"\t@DisplayName(\"Parser should be able to take rubbish input from user\")","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"simonjulianl"},"content":"\tpublic void processInput_invalidCommand_handledSuccessfully() {","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"simonjulianl"},"content":"\t\tString userInput \u003d \"this is some rubbish input!\\r\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"simonjulianl"},"content":"\t\tSystem.setIn(new ByteArrayInputStream(userInput.getBytes()));","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"simonjulianl"},"content":"\t\t","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"simonjulianl"},"content":"\t\ttry (Scanner scanner \u003d new Scanner(System.in)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"simonjulianl"},"content":"\t\t\tString input \u003d scanner.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"simonjulianl"},"content":"\t\t\tSystem.out.println(input);","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"simonjulianl"},"content":"\t\t\tassertDoesNotThrow(() -\u003e parserImpl.processInput(input));","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"simonjulianl"},"content":"\t\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"simonjulianl"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"simonjulianl":55}},{"path":"src/test/java/storage/FileListStorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simonjulianl"},"content":"package storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"simonjulianl"},"content":"import configuration.Setting;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"simonjulianl"},"content":"import model.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"simonjulianl"},"content":"import model.ToDos;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"simonjulianl"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"simonjulianl"},"content":"import org.junit.jupiter.api.DisplayName;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"simonjulianl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"simonjulianl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"simonjulianl"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"simonjulianl"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"simonjulianl"},"content":"public class FileListStorageTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"simonjulianl"},"content":"\tprivate static FileListStorage\u003cTask\u003e fileListStorage;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"simonjulianl"},"content":"\t@BeforeAll","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"simonjulianl"},"content":"\tpublic static void setUp() {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"simonjulianl"},"content":"\t\tfileListStorage \u003d new FileListStorage\u003c\u003e(Setting.FILE_TASK_PATH);","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"simonjulianl"},"content":"\t@Test","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"simonjulianl"},"content":"\t@DisplayName(\"Adding Array List of Task should work\")","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"simonjulianl"},"content":"\tpublic void writeArrayListToFile_arrayListTask_addedSuccessfully() {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"simonjulianl"},"content":"\t\tArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"simonjulianl"},"content":"\t\tfor (int i \u003d 0; i \u003c 10; i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"simonjulianl"},"content":"\t\t\ttasks.add(new ToDos(\"some dummy event \" + i));","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"simonjulianl"},"content":"\t\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"simonjulianl"},"content":"\t\t","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"simonjulianl"},"content":"\t\tassertDoesNotThrow(() -\u003e fileListStorage.writeArrayListToFile(tasks));","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"simonjulianl"},"content":"\t@Test","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"simonjulianl"},"content":"\t@DisplayName(\"Reading Array List of Task should work\")","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"simonjulianl"},"content":"\tpublic void readArrayListFromFile_arrayListTask_sizeGT0() {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"simonjulianl"},"content":"\t\tArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"simonjulianl"},"content":"\t\tfor (int i \u003d 0; i \u003c 10; i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"simonjulianl"},"content":"\t\t\ttasks.add(new ToDos(\"some dummy event \" + i));","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"simonjulianl"},"content":"\t\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"simonjulianl"},"content":"\t\t","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"simonjulianl"},"content":"\t\tfileListStorage.writeArrayListToFile(tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"simonjulianl"},"content":"\t\t","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"simonjulianl"},"content":"\t\tassertDoesNotThrow(() -\u003e {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"simonjulianl"},"content":"\t\t\tArrayList\u003cTask\u003e tempTasks \u003d fileListStorage.readArrayListFromFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"simonjulianl"},"content":"\t\t\tassertTrue(tempTasks.size() \u003e\u003d 10);","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"simonjulianl"},"content":"\t\t});","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"simonjulianl"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"simonjulianl":49}},{"path":"src/test/java/ui/UiStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simonjulianl"},"content":"package ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"simonjulianl"},"content":"import java.util.List;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"simonjulianl"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"simonjulianl"},"content":" * Stub for User Interface, just print out.","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"simonjulianl"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"simonjulianl"},"content":"public class UiStub implements IUi {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"simonjulianl"},"content":"\t@Override","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"simonjulianl"},"content":"\tpublic void printSentence(String sentence) {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"simonjulianl"},"content":"\t\tSystem.out.println(sentence);","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"simonjulianl"},"content":"\t@Override","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"simonjulianl"},"content":"\tpublic \u003cT\u003e void printIndexedList(List\u003cT\u003e list) {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"simonjulianl"},"content":"\t\tint counter \u003d 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"simonjulianl"},"content":"\t\tfor (T item : list) {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"simonjulianl"},"content":"\t\t\tSystem.out.println(counter++ + item.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"simonjulianl"},"content":"\t\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"simonjulianl"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"simonjulianl":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"simonjulianl"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"simonjulianl"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"simonjulianl"},"content":"todo meeting /at Mon 2-3pm","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"simonjulianl"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"simonjulianl"},"content":"done 1","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"simonjulianl"},"content":"done 2","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"simonjulianl"},"content":"delete 1","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"simonjulianl"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"simonjulianl"},"content":"todo","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"simonjulianl"},"content":"deadline","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"simonjulianl"},"content":"bye","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"simonjulianl":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"simonjulianl"},"content":"java -classpath ..\\bin Dude \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"simonjulianl":1,"-":20}}]
