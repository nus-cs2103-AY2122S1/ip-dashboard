[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simonjulianl"},"content":"import commandImpl.CommandLogicUnitImpl;","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"simonjulianl"},"content":"import commandImpl.CommandProcessorImpl;","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"simonjulianl"},"content":"import commandInterface.CommandLogicUnit;","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"simonjulianl"},"content":"import commandInterface.CommandProcessor;","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"simonjulianl"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"simonjulianl"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"simonjulianl"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"simonjulianl"},"content":"import static util.Display.printSentence;","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"simonjulianl"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"simonjulianl"},"content":" * main driver program","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"simonjulianl"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"simonjulianl"},"content":"\t// initialize the buffered reader to take input from the console","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"simonjulianl"},"content":"\tprivate static final BufferedReader reader \u003d new BufferedReader(new InputStreamReader(System.in));","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"simonjulianl"},"content":"\t// initialize the command processor from logic processing, use the commandParse to process the console input","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"simonjulianl"},"content":"\tprivate static final CommandLogicUnit commandLogicUnit \u003d new CommandLogicUnitImpl();","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"simonjulianl"},"content":"\tprivate static final CommandProcessor commandProcessor \u003d new CommandProcessorImpl(commandLogicUnit);","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"simonjulianl"},"content":"\t@SuppressWarnings(\"InfiniteLoopStatement\")","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"simonjulianl"},"content":"\tpublic static void main(String[] args) throws IOException {","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"simonjulianl"},"content":"\t\tString logo \u003d \" ____        ____      \\n\"","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t+ \"|  _ \\\\ _   _|  _ \\\\____\\n\"","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t+ \"| | | | | | | | |/ __ \\\\\\n\"","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t+ \"| |_| | |_| | |_|   __/\\n\"","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t+ \"|____/ \\\\__,_|____\\\\____|\\n\";","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"simonjulianl"},"content":"\t\tSystem.out.println(\"Hello from\\n\" + logo + \"by Simon - CS2103T/2122S1\");","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"simonjulianl"},"content":"\t\t","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"simonjulianl"},"content":"\t\tstarting();","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"simonjulianl"},"content":"\t\t","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"simonjulianl"},"content":"\t\twhile (true) {","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"simonjulianl"},"content":"\t\t\tString str \u003d reader.readLine();","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"simonjulianl"},"content":"\t\t\tcommandProcessor.processInput(str);","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"simonjulianl"},"content":"\t\t}","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"simonjulianl"},"content":"\tpublic static void starting() {","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"simonjulianl"},"content":"\t\tprintSentence(\" Hello! I\u0027m Dude\\n\" +","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\" What can I do for you?\");","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"\t}","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"simonjulianl":41,"-":3}},{"path":"src/main/java/commandImpl/CommandLogicUnitImpl.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simonjulianl"},"content":"package commandImpl;","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"simonjulianl"},"content":"import commandInterface.CommandLogicUnit;","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"simonjulianl"},"content":"import model.*;","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"simonjulianl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"simonjulianl"},"content":"import java.util.Map;","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"simonjulianl"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"simonjulianl"},"content":"import static util.Display.printSentence;","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"simonjulianl"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"simonjulianl"},"content":" * Logic class that would handle all the logics and processing, together with the temporary data layer of the commands","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"simonjulianl"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"simonjulianl"},"content":"public class CommandLogicUnitImpl implements CommandLogicUnit {","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"simonjulianl"},"content":"\tprivate final ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"simonjulianl"},"content":"\t/**","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"simonjulianl"},"content":"\t * command processing functions, in this implementation it accepts all the commands","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"simonjulianl"},"content":"\t *","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"simonjulianl"},"content":"\t * @param command   one of the command from Command enum class","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"simonjulianl"},"content":"\t * @param arguments corresponding arguments for each command","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"simonjulianl"},"content":"\t */","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"simonjulianl"},"content":"\t@Override","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"simonjulianl"},"content":"\tpublic void processCommand(Command command, Map\u003cString, String\u003e arguments) {","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"simonjulianl"},"content":"\t\tswitch (command) {","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"simonjulianl"},"content":"\t\t\tcase BYE:","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\tprocessBye();","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\tbreak;","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"simonjulianl"},"content":"\t\t\tcase LIST:","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\tprocessList();","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\tbreak;","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"simonjulianl"},"content":"\t\t\tcase DEADLINE:","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\tprocessAdd(new Deadline(","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\t\targuments.getOrDefault(\"description\", \"default deadline\"),","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\t\targuments.getOrDefault(\"timing\", \"default timing\")","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t));","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\tbreak;","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"simonjulianl"},"content":"\t\t\tcase EVENT:","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\tprocessAdd(new Event(","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\t\targuments.getOrDefault(\"description\", \"default event\"),","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\t\targuments.getOrDefault(\"timing\", \"default timing\")","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t));","lastModifiedDate":"2021-08-16"},{"lineNumber":44,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\tbreak;","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"simonjulianl"},"content":"\t\t\tcase TODOS:","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\tprocessAdd(new ToDos(arguments.getOrDefault(\"description\", \"default todo\")));","lastModifiedDate":"2021-08-16"},{"lineNumber":47,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\tbreak;","lastModifiedDate":"2021-08-16"},{"lineNumber":48,"author":{"gitId":"simonjulianl"},"content":"\t\t\tcase DONE:","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t// convert 1-indexing to 0-indexing","lastModifiedDate":"2021-08-16"},{"lineNumber":50,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\tprocessDone(Integer.parseInt(arguments.getOrDefault(\"index\", \"-1\")) - 1);","lastModifiedDate":"2021-08-16"},{"lineNumber":51,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\tbreak;","lastModifiedDate":"2021-08-16"},{"lineNumber":52,"author":{"gitId":"simonjulianl"},"content":"\t\t\tcase DELETE:","lastModifiedDate":"2021-08-16"},{"lineNumber":53,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\tprocessDelete(Integer.parseInt(arguments.getOrDefault(\"index\", \"-1\")) - 1);","lastModifiedDate":"2021-08-16"},{"lineNumber":54,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\tbreak;","lastModifiedDate":"2021-08-16"},{"lineNumber":55,"author":{"gitId":"simonjulianl"},"content":"\t\t\tdefault:","lastModifiedDate":"2021-08-16"},{"lineNumber":56,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\tprintSentence(\"command not recognized by processor\");","lastModifiedDate":"2021-08-16"},{"lineNumber":57,"author":{"gitId":"simonjulianl"},"content":"\t\t}","lastModifiedDate":"2021-08-16"},{"lineNumber":58,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-16"},{"lineNumber":59,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-16"},{"lineNumber":60,"author":{"gitId":"simonjulianl"},"content":"\tprivate void processAdd(Task task) {","lastModifiedDate":"2021-08-16"},{"lineNumber":61,"author":{"gitId":"simonjulianl"},"content":"\t\ttaskList.add(task);","lastModifiedDate":"2021-08-16"},{"lineNumber":62,"author":{"gitId":"simonjulianl"},"content":"\t\t","lastModifiedDate":"2021-08-16"},{"lineNumber":63,"author":{"gitId":"simonjulianl"},"content":"\t\tprintSentence(\" Got it. I\u0027ve added this task: \\n\" +","lastModifiedDate":"2021-08-16"},{"lineNumber":64,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\"\\t\" + task.toString() + \"\\n\" +","lastModifiedDate":"2021-08-16"},{"lineNumber":65,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\" Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2021-08-16"},{"lineNumber":66,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-16"},{"lineNumber":67,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-16"},{"lineNumber":68,"author":{"gitId":"simonjulianl"},"content":"\t/**","lastModifiedDate":"2021-08-16"},{"lineNumber":69,"author":{"gitId":"simonjulianl"},"content":"\t * mark the task in the list done","lastModifiedDate":"2021-08-16"},{"lineNumber":70,"author":{"gitId":"simonjulianl"},"content":"\t *","lastModifiedDate":"2021-08-16"},{"lineNumber":71,"author":{"gitId":"simonjulianl"},"content":"\t * @param index 0-indexed integer","lastModifiedDate":"2021-08-16"},{"lineNumber":72,"author":{"gitId":"simonjulianl"},"content":"\t */","lastModifiedDate":"2021-08-16"},{"lineNumber":73,"author":{"gitId":"simonjulianl"},"content":"\tpublic void processDone(int index) {","lastModifiedDate":"2021-08-16"},{"lineNumber":74,"author":{"gitId":"simonjulianl"},"content":"\t\tif (index \u003e\u003d taskList.size() || index \u003c 0) {","lastModifiedDate":"2021-08-16"},{"lineNumber":75,"author":{"gitId":"simonjulianl"},"content":"\t\t\tthrow new IllegalArgumentException(\"non valid index for marking the task done\");","lastModifiedDate":"2021-08-16"},{"lineNumber":76,"author":{"gitId":"simonjulianl"},"content":"\t\t}","lastModifiedDate":"2021-08-16"},{"lineNumber":77,"author":{"gitId":"simonjulianl"},"content":"\t\t","lastModifiedDate":"2021-08-16"},{"lineNumber":78,"author":{"gitId":"simonjulianl"},"content":"\t\ttaskList.get(index).checkDone();","lastModifiedDate":"2021-08-16"},{"lineNumber":79,"author":{"gitId":"simonjulianl"},"content":"\t\tprintSentence(\"Nice! I\u0027ve marked this task as done: \\n\" +","lastModifiedDate":"2021-08-16"},{"lineNumber":80,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\"\\t [X] \" + taskList.get(index).getDesc());","lastModifiedDate":"2021-08-16"},{"lineNumber":81,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-16"},{"lineNumber":82,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-16"},{"lineNumber":83,"author":{"gitId":"simonjulianl"},"content":"\t/**","lastModifiedDate":"2021-08-16"},{"lineNumber":84,"author":{"gitId":"simonjulianl"},"content":"\t * delete the task in the list","lastModifiedDate":"2021-08-16"},{"lineNumber":85,"author":{"gitId":"simonjulianl"},"content":"\t *","lastModifiedDate":"2021-08-16"},{"lineNumber":86,"author":{"gitId":"simonjulianl"},"content":"\t * @param index 0-indexed integer","lastModifiedDate":"2021-08-16"},{"lineNumber":87,"author":{"gitId":"simonjulianl"},"content":"\t */","lastModifiedDate":"2021-08-16"},{"lineNumber":88,"author":{"gitId":"simonjulianl"},"content":"\tprivate void processDelete(int index) {","lastModifiedDate":"2021-08-16"},{"lineNumber":89,"author":{"gitId":"simonjulianl"},"content":"\t\tif (index \u003e\u003d taskList.size() || index \u003c 0) {","lastModifiedDate":"2021-08-16"},{"lineNumber":90,"author":{"gitId":"simonjulianl"},"content":"\t\t\tthrow new IllegalArgumentException(\"non valid index for deletion\");","lastModifiedDate":"2021-08-16"},{"lineNumber":91,"author":{"gitId":"simonjulianl"},"content":"\t\t}","lastModifiedDate":"2021-08-16"},{"lineNumber":92,"author":{"gitId":"simonjulianl"},"content":"\t\t","lastModifiedDate":"2021-08-16"},{"lineNumber":93,"author":{"gitId":"simonjulianl"},"content":"\t\tTask removedTask \u003d taskList.remove(index);","lastModifiedDate":"2021-08-16"},{"lineNumber":94,"author":{"gitId":"simonjulianl"},"content":"\t\tprintSentence(\" Noted. I\u0027ve removed this task: \\n\" +","lastModifiedDate":"2021-08-16"},{"lineNumber":95,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\"\\t\" + removedTask.toString() + \"\\n\" +","lastModifiedDate":"2021-08-16"},{"lineNumber":96,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\" Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2021-08-16"},{"lineNumber":97,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-16"},{"lineNumber":98,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-16"},{"lineNumber":99,"author":{"gitId":"simonjulianl"},"content":"\tprivate void processBye() {","lastModifiedDate":"2021-08-17"},{"lineNumber":100,"author":{"gitId":"simonjulianl"},"content":"\t\tprintSentence(\" Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-16"},{"lineNumber":101,"author":{"gitId":"simonjulianl"},"content":"\t\tSystem.exit(0);","lastModifiedDate":"2021-08-16"},{"lineNumber":102,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-16"},{"lineNumber":103,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-16"},{"lineNumber":104,"author":{"gitId":"simonjulianl"},"content":"\tprivate void processList() {","lastModifiedDate":"2021-08-17"},{"lineNumber":105,"author":{"gitId":"simonjulianl"},"content":"\t\tStringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-08-16"},{"lineNumber":106,"author":{"gitId":"simonjulianl"},"content":"\t\t","lastModifiedDate":"2021-08-16"},{"lineNumber":107,"author":{"gitId":"simonjulianl"},"content":"\t\tIntStream.range(1, taskList.size() + 1)","lastModifiedDate":"2021-08-16"},{"lineNumber":108,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t.mapToObj(index -\u003e {","lastModifiedDate":"2021-08-16"},{"lineNumber":109,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\tTask task \u003d taskList.get(index - 1);","lastModifiedDate":"2021-08-16"},{"lineNumber":110,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\treturn \" \" + index + \". \" + task + \"\\n\";","lastModifiedDate":"2021-08-16"},{"lineNumber":111,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t})","lastModifiedDate":"2021-08-16"},{"lineNumber":112,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t.forEach(stringBuilder::append);","lastModifiedDate":"2021-08-16"},{"lineNumber":113,"author":{"gitId":"simonjulianl"},"content":"\t\t","lastModifiedDate":"2021-08-16"},{"lineNumber":114,"author":{"gitId":"simonjulianl"},"content":"\t\t// remove the last extra \\n if there is at least an item in the list","lastModifiedDate":"2021-08-16"},{"lineNumber":115,"author":{"gitId":"simonjulianl"},"content":"\t\tif (this.taskList.size() \u003e 0) stringBuilder.deleteCharAt(stringBuilder.length() - 1);","lastModifiedDate":"2021-08-16"},{"lineNumber":116,"author":{"gitId":"simonjulianl"},"content":"\t\t","lastModifiedDate":"2021-08-16"},{"lineNumber":117,"author":{"gitId":"simonjulianl"},"content":"\t\tprintSentence(stringBuilder.toString());","lastModifiedDate":"2021-08-16"},{"lineNumber":118,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-16"},{"lineNumber":119,"author":{"gitId":"simonjulianl"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"simonjulianl":119}},{"path":"src/main/java/commandImpl/CommandProcessorImpl.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simonjulianl"},"content":"package commandImpl;","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"simonjulianl"},"content":"import commandInterface.CommandLogicUnit;","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"simonjulianl"},"content":"import commandInterface.CommandProcessor;","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"simonjulianl"},"content":"import model.Command;","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"simonjulianl"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"simonjulianl"},"content":"import java.util.List;","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"simonjulianl"},"content":"import java.util.Map;","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"simonjulianl"},"content":"import static util.Display.printSentence;","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"simonjulianl"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"simonjulianl"},"content":" * An entity that takes in the input from the console and parse it to valid command or throw exception","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"simonjulianl"},"content":" * if the command is invalid","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"simonjulianl"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"simonjulianl"},"content":"public class CommandProcessorImpl implements CommandProcessor {","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"simonjulianl"},"content":"\tprivate final CommandLogicUnit commandLogicUnit;","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"simonjulianl"},"content":"\tpublic CommandProcessorImpl(CommandLogicUnit commandProcessor) {","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"simonjulianl"},"content":"\t\tthis.commandLogicUnit \u003d commandProcessor;","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"simonjulianl"},"content":"\t@Override","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"simonjulianl"},"content":"\tpublic void processInput(String input) {","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"simonjulianl"},"content":"\t\tList\u003cString\u003e parsedCommands \u003d Arrays.asList(input.split(\" \"));","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"simonjulianl"},"content":"\t\t","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"simonjulianl"},"content":"\t\tprocessInputHelper(parsedCommands);","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"simonjulianl"},"content":"\tprivate void processInputHelper(List\u003cString\u003e parsedCommands) {","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"simonjulianl"},"content":"\t\tswitch (parsedCommands.get(0)) {","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"simonjulianl"},"content":"\t\t\tcase \"bye\":","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\tcommandLogicUnit.processCommand(Command.BYE, Map.of());","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\tbreak;","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"simonjulianl"},"content":"\t\t\tcase \"list\":","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\tcommandLogicUnit.processCommand(Command.LIST, Map.of());","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\tbreak;","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"simonjulianl"},"content":"\t\t\tcase \"done\":","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\ttry {","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\tcommandLogicUnit.processCommand(Command.DONE, Map.of(","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\t\t\t\"index\", parsedCommands.get(1)","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\t));","lastModifiedDate":"2021-08-16"},{"lineNumber":44,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t} catch (Exception e) {","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\tprocessException(e);","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t}","lastModifiedDate":"2021-08-16"},{"lineNumber":47,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t","lastModifiedDate":"2021-08-16"},{"lineNumber":48,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\tbreak;","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"simonjulianl"},"content":"\t\t\tcase \"deadline\": {","lastModifiedDate":"2021-08-16"},{"lineNumber":50,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\ttry {","lastModifiedDate":"2021-08-16"},{"lineNumber":51,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\tint byIndex \u003d parsedCommands.indexOf(\"/by\");","lastModifiedDate":"2021-08-16"},{"lineNumber":52,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\tif (byIndex \u003d\u003d -1) throw new IllegalArgumentException(\"/by command not found\");","lastModifiedDate":"2021-08-16"},{"lineNumber":53,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\t","lastModifiedDate":"2021-08-16"},{"lineNumber":54,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\tString desc \u003d String.join(\" \", parsedCommands.subList(1, byIndex));","lastModifiedDate":"2021-08-16"},{"lineNumber":55,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\tif (desc.isBlank()) throw new IllegalArgumentException(\"deadline desc cannot be empty\");","lastModifiedDate":"2021-08-16"},{"lineNumber":56,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\t","lastModifiedDate":"2021-08-16"},{"lineNumber":57,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\tString timing \u003d String.join(\" \", parsedCommands.subList(byIndex + 1, parsedCommands.size()));","lastModifiedDate":"2021-08-16"},{"lineNumber":58,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\tif (timing.isBlank()) throw new IllegalArgumentException(\"deadline timing cannot be empty\");","lastModifiedDate":"2021-08-16"},{"lineNumber":59,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\t","lastModifiedDate":"2021-08-16"},{"lineNumber":60,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\tcommandLogicUnit.processCommand(Command.DEADLINE, Map.of(","lastModifiedDate":"2021-08-17"},{"lineNumber":61,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\t\t\t\"description\", desc,","lastModifiedDate":"2021-08-16"},{"lineNumber":62,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\t\t\t\"timing\", timing","lastModifiedDate":"2021-08-16"},{"lineNumber":63,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\t));","lastModifiedDate":"2021-08-16"},{"lineNumber":64,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t} catch (Exception e) {","lastModifiedDate":"2021-08-16"},{"lineNumber":65,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\tprocessException(e);","lastModifiedDate":"2021-08-16"},{"lineNumber":66,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t}","lastModifiedDate":"2021-08-16"},{"lineNumber":67,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t","lastModifiedDate":"2021-08-16"},{"lineNumber":68,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\tbreak;","lastModifiedDate":"2021-08-16"},{"lineNumber":69,"author":{"gitId":"simonjulianl"},"content":"\t\t\t}","lastModifiedDate":"2021-08-16"},{"lineNumber":70,"author":{"gitId":"simonjulianl"},"content":"\t\t\tcase \"todo\": {","lastModifiedDate":"2021-08-16"},{"lineNumber":71,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\ttry {","lastModifiedDate":"2021-08-16"},{"lineNumber":72,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\tString desc \u003d String.join(\" \", parsedCommands.subList(1, parsedCommands.size()));","lastModifiedDate":"2021-08-16"},{"lineNumber":73,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\t","lastModifiedDate":"2021-08-16"},{"lineNumber":74,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\tif (desc.isBlank()) throw new IllegalArgumentException(\"todo desc cannot be empty\");","lastModifiedDate":"2021-08-16"},{"lineNumber":75,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\t","lastModifiedDate":"2021-08-16"},{"lineNumber":76,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\tcommandLogicUnit.processCommand(Command.TODOS, Map.of(","lastModifiedDate":"2021-08-17"},{"lineNumber":77,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\t\t\t\"description\", desc","lastModifiedDate":"2021-08-16"},{"lineNumber":78,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\t));","lastModifiedDate":"2021-08-16"},{"lineNumber":79,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t} catch (Exception e) {","lastModifiedDate":"2021-08-16"},{"lineNumber":80,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\tprocessException(e);","lastModifiedDate":"2021-08-16"},{"lineNumber":81,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t}","lastModifiedDate":"2021-08-16"},{"lineNumber":82,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\tbreak;","lastModifiedDate":"2021-08-16"},{"lineNumber":83,"author":{"gitId":"simonjulianl"},"content":"\t\t\t}","lastModifiedDate":"2021-08-16"},{"lineNumber":84,"author":{"gitId":"simonjulianl"},"content":"\t\t\tcase \"event\": {","lastModifiedDate":"2021-08-16"},{"lineNumber":85,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\ttry {","lastModifiedDate":"2021-08-16"},{"lineNumber":86,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\tint byIndex \u003d parsedCommands.indexOf(\"/at\");","lastModifiedDate":"2021-08-16"},{"lineNumber":87,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\tif (byIndex \u003d\u003d -1) throw new IllegalArgumentException(\"/at command not found\");","lastModifiedDate":"2021-08-16"},{"lineNumber":88,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\t","lastModifiedDate":"2021-08-16"},{"lineNumber":89,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\tString desc \u003d String.join(\" \", parsedCommands.subList(1, byIndex));","lastModifiedDate":"2021-08-16"},{"lineNumber":90,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\tif (desc.isBlank()) throw new IllegalArgumentException(\"event desc cannot be empty\");","lastModifiedDate":"2021-08-16"},{"lineNumber":91,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\t","lastModifiedDate":"2021-08-16"},{"lineNumber":92,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\tString timing \u003d String.join(\" \", parsedCommands.subList(byIndex + 1, parsedCommands.size()));","lastModifiedDate":"2021-08-16"},{"lineNumber":93,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\tif (timing.isBlank()) throw new IllegalArgumentException(\"event timing cannot be empty\");","lastModifiedDate":"2021-08-16"},{"lineNumber":94,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\t","lastModifiedDate":"2021-08-16"},{"lineNumber":95,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\tcommandLogicUnit.processCommand(Command.EVENT, Map.of(","lastModifiedDate":"2021-08-17"},{"lineNumber":96,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\t\t\t\"description\", desc,","lastModifiedDate":"2021-08-16"},{"lineNumber":97,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\t\t\t\"timing\", timing","lastModifiedDate":"2021-08-16"},{"lineNumber":98,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\t));","lastModifiedDate":"2021-08-16"},{"lineNumber":99,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t} catch (Exception e) {","lastModifiedDate":"2021-08-16"},{"lineNumber":100,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\tprocessException(e);","lastModifiedDate":"2021-08-16"},{"lineNumber":101,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t}","lastModifiedDate":"2021-08-16"},{"lineNumber":102,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t","lastModifiedDate":"2021-08-16"},{"lineNumber":103,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\tbreak;","lastModifiedDate":"2021-08-16"},{"lineNumber":104,"author":{"gitId":"simonjulianl"},"content":"\t\t\t}","lastModifiedDate":"2021-08-16"},{"lineNumber":105,"author":{"gitId":"simonjulianl"},"content":"\t\t\tcase \"delete\":","lastModifiedDate":"2021-08-16"},{"lineNumber":106,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\ttry {","lastModifiedDate":"2021-08-16"},{"lineNumber":107,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\tcommandLogicUnit.processCommand(Command.DELETE, Map.of(","lastModifiedDate":"2021-08-17"},{"lineNumber":108,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\t\t\t\"index\", parsedCommands.get(1)","lastModifiedDate":"2021-08-16"},{"lineNumber":109,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\t));","lastModifiedDate":"2021-08-16"},{"lineNumber":110,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t} catch (Exception e) {","lastModifiedDate":"2021-08-16"},{"lineNumber":111,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\tprocessException(e);","lastModifiedDate":"2021-08-16"},{"lineNumber":112,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t}","lastModifiedDate":"2021-08-16"},{"lineNumber":113,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t","lastModifiedDate":"2021-08-16"},{"lineNumber":114,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\tbreak;","lastModifiedDate":"2021-08-16"},{"lineNumber":115,"author":{"gitId":"simonjulianl"},"content":"\t\t\tdefault:","lastModifiedDate":"2021-08-16"},{"lineNumber":116,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\tprocessException(new IllegalCallerException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\"));","lastModifiedDate":"2021-08-16"},{"lineNumber":117,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\tbreak;","lastModifiedDate":"2021-08-16"},{"lineNumber":118,"author":{"gitId":"simonjulianl"},"content":"\t\t}","lastModifiedDate":"2021-08-16"},{"lineNumber":119,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-16"},{"lineNumber":120,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-16"},{"lineNumber":121,"author":{"gitId":"simonjulianl"},"content":"\tprivate void processException(Exception e) {","lastModifiedDate":"2021-08-16"},{"lineNumber":122,"author":{"gitId":"simonjulianl"},"content":"\t\tprintSentence(\"☹ OOPS!!! \" + e.getMessage());","lastModifiedDate":"2021-08-16"},{"lineNumber":123,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-16"},{"lineNumber":124,"author":{"gitId":"simonjulianl"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"simonjulianl":124}},{"path":"src/main/java/commandInterface/CommandLogicUnit.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simonjulianl"},"content":"package commandInterface;","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"simonjulianl"},"content":"import model.Command;","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"simonjulianl"},"content":"import java.util.Map;","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"simonjulianl"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"simonjulianl"},"content":" * Interface for the central processing unit of the commands that contain the logic and data layer","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"simonjulianl"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"simonjulianl"},"content":"public interface CommandLogicUnit {","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"simonjulianl"},"content":"\t/**","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"simonjulianl"},"content":"\t * function that takes a valid command from the model and the corresponding arguments (that are assumed to be correct already)","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"simonjulianl"},"content":"\t *","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"simonjulianl"},"content":"\t * @param command   one of the command from Command enum class","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"simonjulianl"},"content":"\t * @param arguments corresponding arguments for each command","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"simonjulianl"},"content":"\t */","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"simonjulianl"},"content":"\tvoid processCommand(Command command, Map\u003cString, String\u003e arguments);","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"simonjulianl"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"simonjulianl":18}},{"path":"src/main/java/commandInterface/CommandProcessor.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simonjulianl"},"content":"package commandInterface;","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"simonjulianl"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"simonjulianl"},"content":" * Command line processor interface that takes in the input from the console","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"simonjulianl"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"simonjulianl"},"content":"public interface CommandProcessor {","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"simonjulianl"},"content":"\t/**","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"simonjulianl"},"content":"\t * Parse the input from console into corresponding command and process it, current implementation using Command Processor","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"simonjulianl"},"content":"\t *","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"simonjulianl"},"content":"\t * @param input String containing the lines","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"simonjulianl"},"content":"\t */","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"simonjulianl"},"content":"\tvoid processInput(String input);","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"simonjulianl"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"simonjulianl":13}},{"path":"src/main/java/model/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simonjulianl"},"content":"package model;","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"simonjulianl"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"simonjulianl"},"content":" * list of commands available for dude chatting bot","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"simonjulianl"},"content":" * \u003col\u003e","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"simonjulianl"},"content":" *","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"simonjulianl"},"content":" *  \u003cli\u003e","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"simonjulianl"},"content":" *      BYE : to end the chat, no arguments requires, any extra arguments would be ignored, invoked using \"bye\"","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"simonjulianl"},"content":" *  \u003c/li\u003e","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"simonjulianl"},"content":" *  \u003cli\u003e","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"simonjulianl"},"content":" *      LIST : list the entire tasks array","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"simonjulianl"},"content":" *  \u003c/li\u003e","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"simonjulianl"},"content":" *  \u003cli\u003e","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"simonjulianl"},"content":" *     Adding a Task: divided into 3 smaller parts :","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"simonjulianl"},"content":" *     \u003cul\u003e","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"simonjulianl"},"content":" *      \u003cli\u003e","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"simonjulianl"},"content":" *       DEADLINE : add a new deadline, takes 3 arguments section: description, \\by, deadline","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"simonjulianl"},"content":" *      \u003c/li\u003e","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"simonjulianl"},"content":" *      \u003cli\u003e","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"simonjulianl"},"content":" *     EVENT : add a new deadline, takes 3 arguments section: description, \\at, deadline","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"simonjulianl"},"content":" *      \u003c/li\u003e","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"simonjulianl"},"content":" *      \u003cli\u003e","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"simonjulianl"},"content":" *        TODOS : add a new deadline, takes 1 argument : description","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"simonjulianl"},"content":" *      \u003c/li\u003e","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"simonjulianl"},"content":" *    \u003c/ul\u003e","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"simonjulianl"},"content":" *  \u003c/li\u003e","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"simonjulianl"},"content":" *  \u003cli\u003e","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"simonjulianl"},"content":" *      DONE : mark the task as done, 1 argument is required which is the number of task (the rest is ignored)","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"simonjulianl"},"content":" *  \u003c/li\u003e","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"simonjulianl"},"content":" *  \u003cli\u003e","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"simonjulianl"},"content":" *      INVALID : any other commands other than bye, the whole sentence would be echoed back instead","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"simonjulianl"},"content":" *  \u003c/li\u003e","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"simonjulianl"},"content":" * \u003c/ol\u003e","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"simonjulianl"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"simonjulianl"},"content":"public enum Command {","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"simonjulianl"},"content":"\tBYE,","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"simonjulianl"},"content":"\tLIST,","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"simonjulianl"},"content":"\tDEADLINE,","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"simonjulianl"},"content":"\tEVENT,","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"simonjulianl"},"content":"\tTODOS,","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"simonjulianl"},"content":"\tDELETE,","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"simonjulianl"},"content":"\tDONE,","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"simonjulianl"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"simonjulianl":43}},{"path":"src/main/java/model/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simonjulianl"},"content":"package model;","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"simonjulianl"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"simonjulianl"},"content":" * a task containing description and the deadline of the task","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"simonjulianl"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"simonjulianl"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"simonjulianl"},"content":"\tprivate final String deadline;","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"simonjulianl"},"content":"\t/**","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"simonjulianl"},"content":"\t * public constructor for deadline","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"simonjulianl"},"content":"\t *","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"simonjulianl"},"content":"\t * @param desc     description of the deadline","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"simonjulianl"},"content":"\t * @param deadline string representing the deadline","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"simonjulianl"},"content":"\t */","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"simonjulianl"},"content":"\tpublic Deadline(String desc, String deadline) {","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"simonjulianl"},"content":"\t\tsuper(desc);","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"simonjulianl"},"content":"\t\tthis.deadline \u003d deadline;","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"simonjulianl"},"content":"\t/**","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"simonjulianl"},"content":"\t * String representation of deadline, marked with [D], desc and the deadline","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"simonjulianl"},"content":"\t *","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"simonjulianl"},"content":"\t * @return string","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"simonjulianl"},"content":"\t */","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"simonjulianl"},"content":"\t@Override","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"simonjulianl"},"content":"\tpublic String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"simonjulianl"},"content":"\t\treturn \"[D]\" + super.toString() + \" (by: \" + deadline + \")\";","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"simonjulianl"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"simonjulianl":29}},{"path":"src/main/java/model/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simonjulianl"},"content":"package model;","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"simonjulianl"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"simonjulianl"},"content":" * a task containing description and the time of the event","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"simonjulianl"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"simonjulianl"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"simonjulianl"},"content":"\tprivate final String time;","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"simonjulianl"},"content":"\t/**","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"simonjulianl"},"content":"\t * public constructor of event","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"simonjulianl"},"content":"\t *","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"simonjulianl"},"content":"\t * @param desc string representing the description","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"simonjulianl"},"content":"\t * @param time string representing the time of the event","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"simonjulianl"},"content":"\t */","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"simonjulianl"},"content":"\tpublic Event(String desc, String time) {","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"simonjulianl"},"content":"\t\tsuper(desc);","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"simonjulianl"},"content":"\t\tthis.time \u003d time;","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"simonjulianl"},"content":"\t/**","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"simonjulianl"},"content":"\t * String representation of Event, marked with [E], desc and the timing","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"simonjulianl"},"content":"\t *","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"simonjulianl"},"content":"\t * @return string","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"simonjulianl"},"content":"\t */","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"simonjulianl"},"content":"\t@Override","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"simonjulianl"},"content":"\tpublic String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"simonjulianl"},"content":"\t\treturn \"[E]\" + super.toString() + \" (at : \" + time + \")\";","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"simonjulianl"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"simonjulianl":29}},{"path":"src/main/java/model/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simonjulianl"},"content":"package model;","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"simonjulianl"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"simonjulianl"},"content":" * abstract class of task that represents a thing to be done","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"simonjulianl"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"simonjulianl"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"simonjulianl"},"content":"\tprivate final String desc;","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"simonjulianl"},"content":"\tprivate boolean isDone \u003d false;","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"simonjulianl"},"content":"\t/**","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"simonjulianl"},"content":"\t * constructor of the abstract class, to be initialized with the subclass","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"simonjulianl"},"content":"\t *","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"simonjulianl"},"content":"\t * @param desc description","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"simonjulianl"},"content":"\t */","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"simonjulianl"},"content":"\tpublic Task(String desc) {","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"simonjulianl"},"content":"\t\tthis.desc \u003d desc;","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"simonjulianl"},"content":"\t/**","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"simonjulianl"},"content":"\t * mark the task as done","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"simonjulianl"},"content":"\t */","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"simonjulianl"},"content":"\tpublic void checkDone() {","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"simonjulianl"},"content":"\t\tthis.isDone \u003d true;","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"simonjulianl"},"content":"\t/**","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"simonjulianl"},"content":"\t * get the status of the task","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"simonjulianl"},"content":"\t *","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"simonjulianl"},"content":"\t * @return boolean representing whether the task is done","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"simonjulianl"},"content":"\t */","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"simonjulianl"},"content":"\tpublic boolean isDone() {","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"simonjulianl"},"content":"\t\treturn this.isDone;","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"simonjulianl"},"content":"\t/**","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"simonjulianl"},"content":"\t * get description of the task","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"simonjulianl"},"content":"\t *","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"simonjulianl"},"content":"\t * @return string representing the description","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"simonjulianl"},"content":"\t */","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"simonjulianl"},"content":"\tpublic String getDesc() {","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"simonjulianl"},"content":"\t\treturn this.desc;","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-16"},{"lineNumber":44,"author":{"gitId":"simonjulianl"},"content":"\t/**","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"simonjulianl"},"content":"\t * string representation of task class","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"simonjulianl"},"content":"\t *","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"simonjulianl"},"content":"\t * @return [X] or [ ] indicating whether the task is done and the description","lastModifiedDate":"2021-08-17"},{"lineNumber":48,"author":{"gitId":"simonjulianl"},"content":"\t */","lastModifiedDate":"2021-08-17"},{"lineNumber":49,"author":{"gitId":"simonjulianl"},"content":"\t@Override","lastModifiedDate":"2021-08-16"},{"lineNumber":50,"author":{"gitId":"simonjulianl"},"content":"\tpublic String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":51,"author":{"gitId":"simonjulianl"},"content":"\t\treturn (this.isDone() ? \"[X] \" : \"[ ] \") + this.desc;","lastModifiedDate":"2021-08-16"},{"lineNumber":52,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-16"},{"lineNumber":53,"author":{"gitId":"simonjulianl"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"simonjulianl":53}},{"path":"src/main/java/model/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simonjulianl"},"content":"package model;","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"simonjulianl"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"simonjulianl"},"content":" * a task containing description only","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"simonjulianl"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"simonjulianl"},"content":"public class ToDos extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"simonjulianl"},"content":"\tpublic ToDos(String desc) {","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"simonjulianl"},"content":"\t\tsuper(desc);","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"simonjulianl"},"content":"\t","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"simonjulianl"},"content":"\t/**","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"simonjulianl"},"content":"\t * String representation of todos, marked with [T] and the desc","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"simonjulianl"},"content":"\t *","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"simonjulianl"},"content":"\t * @return string","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"simonjulianl"},"content":"\t */","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"simonjulianl"},"content":"\t@Override","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"simonjulianl"},"content":"\tpublic String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"simonjulianl"},"content":"\t\treturn \"[T]\" + super.toString();","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"simonjulianl"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"simonjulianl":20}},{"path":"src/main/java/util/Display.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simonjulianl"},"content":"package util;","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"simonjulianl"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"simonjulianl"},"content":"public class Display {","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"simonjulianl"},"content":"\t/**","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"simonjulianl"},"content":"\t * helper function to display the sentence for the CLI","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"simonjulianl"},"content":"\t *","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"simonjulianl"},"content":"\t * @param sentence the text to be printed","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"simonjulianl"},"content":"\t */","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"simonjulianl"},"content":"\tpublic static void printSentence(String sentence) {","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"simonjulianl"},"content":"\t\tSystem.out.println((\"\\t____________________________________________________________\\n\" +","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\"\\t\" + sentence.replace(\"\\n\", \"\\n\\t\") +","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"simonjulianl"},"content":"\t\t\t\t\"\\n\\t____________________________________________________________\\n\"));","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"simonjulianl"},"content":"\t}","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"simonjulianl"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"simonjulianl":14}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"simonjulianl"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"simonjulianl"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"simonjulianl"},"content":"todo meeting /at Mon 2-3pm","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"simonjulianl"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"simonjulianl"},"content":"done 1","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"simonjulianl"},"content":"done 2","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"simonjulianl"},"content":"delete 1","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"simonjulianl"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"simonjulianl"},"content":"todo","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"simonjulianl"},"content":"deadline","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"simonjulianl"},"content":"bye","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"simonjulianl":11}}]
