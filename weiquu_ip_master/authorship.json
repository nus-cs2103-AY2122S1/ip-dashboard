[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"weiquu"},"content":"    testImplementation \u0027org.junit.jupiter:junit-jupiter-api:5.3.1\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"weiquu"},"content":"    testRuntimeOnly \u0027org.junit.jupiter:junit-jupiter-engine:5.3.1\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"weiquu":2,"-":44}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weiquu"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"weiquu"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"weiquu"},"content":"    /** Encapsulates the storage of tasks in a file within the user\u0027s computer for continuity across Duke sessions. */","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"weiquu"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"weiquu"},"content":"     * Stores the tasks when the Duke program runs.","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"weiquu"},"content":"     * Allows one to perform actions on those tasks like add and delete.","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"weiquu"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"weiquu"},"content":"    /** Handles the UI aspect of the Duke program, relaying messages to the user. */","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"weiquu"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"weiquu"},"content":"     * Constructs an instance of the Duke program.","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"weiquu"},"content":"     * If there is no file at the specified filePath, a new file will be created;","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"weiquu"},"content":"     * else, the tasks in the file will be read and saved.","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"weiquu"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"weiquu"},"content":"     * @param filePath The file path of the file containing the list of tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"weiquu"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"weiquu"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"weiquu"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"weiquu"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"weiquu"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"weiquu"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"weiquu"},"content":"            ui.printResponse(e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"weiquu"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"weiquu"},"content":"     * Runs Duke\u0027s main program.","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"weiquu"},"content":"     * Main logic of the program, which will continue to accept user input until user enters \u0027bye\u0027.","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"weiquu"},"content":"    public void run() {","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"weiquu"},"content":"        ui.printResponse(\"Hello! I\u0027m Duke\", \"What can I do for you?\");","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"weiquu"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"weiquu"},"content":"        Scanner scan \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"weiquu"},"content":"        boolean active \u003d true;","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"weiquu"},"content":"        while (active) {","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"weiquu"},"content":"            String command \u003d scan.nextLine();","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"weiquu"},"content":"            try {","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"weiquu"},"content":"                active \u003d parser.parse(command, tasks, ui);","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"weiquu"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"weiquu"},"content":"                ui.printResponse(e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"weiquu"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"weiquu"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"weiquu"},"content":"                storage.rewriteData(tasks.convertToSaveFormat());","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"weiquu"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"weiquu"},"content":"                ui.printResponse(e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"weiquu"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"weiquu"},"content":"     * Creates a new instance of Duke.","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"weiquu"},"content":"     * Instantiates the Duke instance with a file path and runs it.","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"weiquu"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"weiquu"},"content":"     * @param args String arguments if needed.","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":64,"author":{"gitId":"weiquu"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"weiquu"},"content":"        new Duke(\"dukedata.txt\").run();","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"weiquu":65,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weiquu"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"weiquu"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"weiquu"},"content":"     * Constructs a new DukeException.","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"weiquu"},"content":"     * Simple DukeException that contains a string describing the error.","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"weiquu"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"weiquu"},"content":"     * @param error The error message that describes the error that occurred.","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"weiquu"},"content":"    public DukeException(String error) {","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"weiquu"},"content":"        super(error);","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"weiquu"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"weiquu":13}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weiquu"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"weiquu"},"content":"import java.util.List;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"weiquu"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"weiquu"},"content":"public class Parser {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"weiquu"},"content":"    /** Regex for a Done command. */","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"weiquu"},"content":"    private final String REGEX_DONE \u003d \"done [0-9]+\";","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"weiquu"},"content":"    /** Regex for a Delete command. */","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"weiquu"},"content":"    private final String REGEX_DELETE \u003d \"delete [0-9]+\";","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"weiquu"},"content":"    /** Regex for a ToDo command specifying a new ToDo task. */","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"weiquu"},"content":"    private final String REGEX_TODO \u003d \"todo [\\\\w\\\\s-]+\";","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"weiquu"},"content":"    /** Regex for a Deadline command specifying a new Deadline task. */","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"weiquu"},"content":"    private final String REGEX_DEADLINE \u003d \"deadline [\\\\w\\\\s-]+ \\\\/by [\\\\w\\\\s-]+\";","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"weiquu"},"content":"    /** Regex for a Event command specifying a new Event task. */","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"weiquu"},"content":"    private final String REGEX_EVENT \u003d \"event [\\\\w\\\\s-]+ \\\\/at [\\\\w\\\\s-]+\";","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"weiquu"},"content":"    /** Regex for a Find command. */","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"weiquu"},"content":"    private final String REGEX_FIND \u003d \"find [\\\\w\\\\s-]+\";","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"weiquu"},"content":"     * Handles all user commands.","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"weiquu"},"content":"     * Takes in a user command and checks which command it is. Upon determining the command, performs the","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"weiquu"},"content":"     * necessary action.","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"weiquu"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"weiquu"},"content":"     * @param command The user command to be handled.","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"weiquu"},"content":"     * @param tasks The TaskList object containing the list of tasks and operations.","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"weiquu"},"content":"     * @param ui The UI object that handles messages to the user.","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"weiquu"},"content":"     * @return Whether or not the Duke program should exit or continue running.","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"weiquu"},"content":"     * @throws DukeException If the command does not match the Regex for the accepted list of commands.","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"weiquu"},"content":"    public boolean parse(String command, TaskList tasks, Ui ui) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"weiquu"},"content":"        if (command.equals(\"list\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"weiquu"},"content":"            String[] response \u003d tasks.getStringArr();","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"weiquu"},"content":"            response[0] \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"weiquu"},"content":"            ui.printResponse(response);","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"weiquu"},"content":"        } else if (command.equals(\"bye\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"weiquu"},"content":"            ui.printResponse(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"weiquu"},"content":"            return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"weiquu"},"content":"        } else if (Pattern.matches(REGEX_DONE, command)) {","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"weiquu"},"content":"            String indexStr \u003d command.substring(5);","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"weiquu"},"content":"            int index \u003d Integer.parseInt(indexStr) - 1;","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"weiquu"},"content":"            String res \u003d tasks.markAsDone(index);","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"weiquu"},"content":"            ui.printResponse(\"Nice! I\u0027ve marked this task as done:\", res);","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"weiquu"},"content":"        } else if (Pattern.matches(REGEX_DELETE, command)) {","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"weiquu"},"content":"            String indexStr \u003d command.substring(7);","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"weiquu"},"content":"            int index \u003d Integer.parseInt(indexStr) - 1;","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"weiquu"},"content":"            String removedTask \u003d tasks.removeTask(index);","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"weiquu"},"content":"            String numTasksLeft \u003d tasks.numTasks();","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"weiquu"},"content":"            ui.printResponse(\"Noted. I\u0027ve removed this task:\", removedTask, numTasksLeft);","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"weiquu"},"content":"        } else if (command.equals(\"todo\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"weiquu"},"content":"            throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"weiquu"},"content":"        } else if (Pattern.matches(REGEX_TODO, command)) {","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"weiquu"},"content":"            String name \u003d command.substring(5);","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"weiquu"},"content":"            String taskAdded \u003d tasks.addToDo(name);","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"weiquu"},"content":"            String numTasksLeft \u003d tasks.numTasks();","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"weiquu"},"content":"            ui.printResponse(\"Got it. I\u0027ve added this task:\", taskAdded, numTasksLeft);","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"weiquu"},"content":"        } else if (Pattern.matches(REGEX_DEADLINE, command)) {","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"weiquu"},"content":"            int breakPos \u003d command.indexOf(\"/by\");","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"weiquu"},"content":"            String name \u003d command.substring(9, breakPos - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"weiquu"},"content":"            String due \u003d command.substring(breakPos + 4);","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"weiquu"},"content":"            String taskAdded \u003d tasks.addDeadline(name, due);","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"weiquu"},"content":"            String numTasksLeft \u003d tasks.numTasks();","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"weiquu"},"content":"            ui.printResponse(\"Got it. I\u0027ve added this task:\", taskAdded, numTasksLeft);","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"weiquu"},"content":"        } else if (Pattern.matches(REGEX_EVENT, command)) {","lastModifiedDate":"2021-08-27"},{"lineNumber":65,"author":{"gitId":"weiquu"},"content":"            int breakPos \u003d command.indexOf(\"/at\");","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"weiquu"},"content":"            String name \u003d command.substring(6, breakPos - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"weiquu"},"content":"            String time \u003d command.substring(breakPos + 4);","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"weiquu"},"content":"            String taskAdded \u003d tasks.addEvent(name, time);","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"weiquu"},"content":"            String numTasksLeft \u003d tasks.numTasks();","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"weiquu"},"content":"            ui.printResponse(\"Got it. I\u0027ve added this task:\", taskAdded, numTasksLeft);","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"weiquu"},"content":"        } else if (Pattern.matches(REGEX_FIND, command)) {","lastModifiedDate":"2021-08-27"},{"lineNumber":72,"author":{"gitId":"weiquu"},"content":"            String textToSearch \u003d command.substring(5);","lastModifiedDate":"2021-08-27"},{"lineNumber":73,"author":{"gitId":"weiquu"},"content":"            List\u003cString\u003e tasksFoundList \u003d tasks.searchTasks(textToSearch);","lastModifiedDate":"2021-08-27"},{"lineNumber":74,"author":{"gitId":"weiquu"},"content":"            String[] tasksFoundArr \u003d new String[tasksFoundList.size() + 1];","lastModifiedDate":"2021-08-27"},{"lineNumber":75,"author":{"gitId":"weiquu"},"content":"            tasksFoundArr[0] \u003d \"Here are the matching tasks in your list:\";","lastModifiedDate":"2021-08-27"},{"lineNumber":76,"author":{"gitId":"weiquu"},"content":"            for (int i \u003d 0; i \u003c tasksFoundList.size(); i++) {","lastModifiedDate":"2021-08-27"},{"lineNumber":77,"author":{"gitId":"weiquu"},"content":"                int tempIndex \u003d i + 1;","lastModifiedDate":"2021-08-27"},{"lineNumber":78,"author":{"gitId":"weiquu"},"content":"                tasksFoundArr[tempIndex] \u003d tempIndex + \". \" + tasksFoundList.get(i);","lastModifiedDate":"2021-08-27"},{"lineNumber":79,"author":{"gitId":"weiquu"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":80,"author":{"gitId":"weiquu"},"content":"            ui.printResponse(tasksFoundArr);","lastModifiedDate":"2021-08-27"},{"lineNumber":81,"author":{"gitId":"weiquu"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"weiquu"},"content":"            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means ):\");","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"weiquu"},"content":"        return true;","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"weiquu"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"weiquu":87}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weiquu"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"weiquu"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"weiquu"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"weiquu"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"weiquu"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"weiquu"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"weiquu"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"weiquu"},"content":"public class Storage {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"weiquu"},"content":"    /** The user\u0027s home path string on their computer. */","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"weiquu"},"content":"    private final String HOME_PATH_STRING \u003d System.getProperty(\"user.home\");","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"weiquu"},"content":"    /** The file path string to find store task info to. */","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"weiquu"},"content":"    private String filePathString;","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"weiquu"},"content":"    /** The path to the task storage file. */","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"weiquu"},"content":"    private Path dataPath;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"weiquu"},"content":"     * Constructs an instance of the Storage class.","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"weiquu"},"content":"     * Manages interactions with the storage file on the user\u0027s computer.","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"weiquu"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"weiquu"},"content":"     * @param filePath The file path to the storage file on the user\u0027s computer.","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"weiquu"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"weiquu"},"content":"        this.filePathString \u003d filePath;","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"weiquu"},"content":"        dataPath \u003d Paths.get(HOME_PATH_STRING, filePathString);","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"weiquu"},"content":"     * Loads in the data from the storage file on the user\u0027s computer.","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"weiquu"},"content":"     * Creates a new file if no existing storage file is found. An empty stream is returned if no existing","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"weiquu"},"content":"     * storage file is found (or there are no tasks in the existing storage file).","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"weiquu"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"weiquu"},"content":"     * @return A stream of strings representing the various tasks stored.","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"weiquu"},"content":"     * @throws DukeException If there is an issue creating or reading the storage file.","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"weiquu"},"content":"    public Stream\u003cString\u003e load() throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"weiquu"},"content":"        Stream\u003cString\u003e lines \u003d Stream.empty();","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"weiquu"},"content":"        if (!Files.exists(dataPath)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"weiquu"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"weiquu"},"content":"                Files.createFile(dataPath);","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"weiquu"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"weiquu"},"content":"                throw new DukeException(e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"weiquu"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"weiquu"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"weiquu"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"weiquu"},"content":"                lines \u003d Files.lines(dataPath);","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"weiquu"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"weiquu"},"content":"                throw new DukeException(e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"weiquu"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"weiquu"},"content":"        return lines;","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"weiquu"},"content":"     * Writes to the storage file on the user\u0027s computer.","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"weiquu"},"content":"     * Rewrites the storage file with the string passed on the method.","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"weiquu"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"weiquu"},"content":"     * @param dataStr The data string to write to the file.","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"weiquu"},"content":"     * @throws DukeException If there is an issue writing to the storage file.","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"weiquu"},"content":"    public void rewriteData(String dataStr) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"weiquu"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"weiquu"},"content":"            Files.writeString(dataPath, dataStr, StandardCharsets.ISO_8859_1);","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"weiquu"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"weiquu"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"weiquu"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"weiquu":69}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weiquu"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"weiquu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"weiquu"},"content":"import java.util.List;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"weiquu"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"weiquu"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"weiquu"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"weiquu"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"weiquu"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"weiquu"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"weiquu"},"content":"public class TaskList {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"weiquu"},"content":"    /** The list of tasks. */","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"weiquu"},"content":"    private ArrayList\u003cTask\u003e userTasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"weiquu"},"content":"     * Constructs a new instance of the TaskList with no tasks inside.","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"weiquu"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"weiquu"},"content":"        this.userTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"weiquu"},"content":"     * Constructs a new instance of the TaskList with the specified tasks inside.","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"weiquu"},"content":"     * Specified tasks come in the format of a stream of strings, the data of which are cleaned.","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"weiquu"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"weiquu"},"content":"     * @param tasks The stream of strings which represent the data of each task.","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"weiquu"},"content":"    public TaskList(Stream\u003cString\u003e tasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"weiquu"},"content":"        this.userTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"weiquu"},"content":"        tasks.forEach(x -\u003e userTasks.add(cleanData(x)));","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"weiquu"},"content":"     * Gets the list of tasks as a string array.","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"weiquu"},"content":"     * Labels the tasks in addition to their string representation.","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"weiquu"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"weiquu"},"content":"     * @return A array of strings representing the list of tasks, one element for one task.","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"weiquu"},"content":"    public String[] getStringArr() {","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"weiquu"},"content":"        String[] tasks \u003d new String[userTasks.size() + 1];","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"weiquu"},"content":"        for (int i \u003d 0; i \u003c userTasks.size(); i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"weiquu"},"content":"            int tempNum \u003d i + 1;","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"weiquu"},"content":"            tasks[tempNum] \u003d tempNum + \". \" + userTasks.get(i);","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"weiquu"},"content":"        return tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"weiquu"},"content":"     * Marks a task as done.","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"weiquu"},"content":"     * Gets the task based on the index passed to the method.","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"weiquu"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"weiquu"},"content":"     * @param index The index of the task to be marked as done.","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"weiquu"},"content":"     * @return The string representation of the task marked as done.","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"weiquu"},"content":"    public String markAsDone(int index) {","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"weiquu"},"content":"        userTasks.get(index).markAsDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"weiquu"},"content":"        return \"  \" + userTasks.get(index).toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"weiquu"},"content":"     * Removes a task from the task list.","lastModifiedDate":"2021-08-27"},{"lineNumber":64,"author":{"gitId":"weiquu"},"content":"     * Gets the task based on the index passed to the method.","lastModifiedDate":"2021-08-27"},{"lineNumber":65,"author":{"gitId":"weiquu"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":66,"author":{"gitId":"weiquu"},"content":"     * @param index The index of the task to be marked as done.","lastModifiedDate":"2021-08-27"},{"lineNumber":67,"author":{"gitId":"weiquu"},"content":"     * @return The string representation of the task deleted.","lastModifiedDate":"2021-08-27"},{"lineNumber":68,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":69,"author":{"gitId":"weiquu"},"content":"    public String removeTask(int index) {","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"weiquu"},"content":"        String res \u003d userTasks.get(index).toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"weiquu"},"content":"        userTasks.remove(index);","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"weiquu"},"content":"        return \"  \" + res;","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":76,"author":{"gitId":"weiquu"},"content":"     * Adds a new ToDo task to the task list.","lastModifiedDate":"2021-08-27"},{"lineNumber":77,"author":{"gitId":"weiquu"},"content":"     * Gets the name of the ToDo task based on the string passed to the method.","lastModifiedDate":"2021-08-27"},{"lineNumber":78,"author":{"gitId":"weiquu"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":79,"author":{"gitId":"weiquu"},"content":"     * @param name The name of the ToDo task.","lastModifiedDate":"2021-08-27"},{"lineNumber":80,"author":{"gitId":"weiquu"},"content":"     * @return The string representation of the ToDo task added.","lastModifiedDate":"2021-08-27"},{"lineNumber":81,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":82,"author":{"gitId":"weiquu"},"content":"    public String addToDo(String name) {","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"weiquu"},"content":"        userTasks.add(new ToDo(name));","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"weiquu"},"content":"        return \"  \" + userTasks.get(userTasks.size() - 1).toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":88,"author":{"gitId":"weiquu"},"content":"     * Adds a new Deadline task to the task list.","lastModifiedDate":"2021-08-27"},{"lineNumber":89,"author":{"gitId":"weiquu"},"content":"     * Gets the name of the deadline task and the date and time it is due from the strings passed to the method.","lastModifiedDate":"2021-08-27"},{"lineNumber":90,"author":{"gitId":"weiquu"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":91,"author":{"gitId":"weiquu"},"content":"     * @param name The name of the Deadline task.","lastModifiedDate":"2021-08-27"},{"lineNumber":92,"author":{"gitId":"weiquu"},"content":"     * @param due The date and time the Deadline task is due.","lastModifiedDate":"2021-08-27"},{"lineNumber":93,"author":{"gitId":"weiquu"},"content":"     * @return The string representation of the Deadline task added.","lastModifiedDate":"2021-08-27"},{"lineNumber":94,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":95,"author":{"gitId":"weiquu"},"content":"    public String addDeadline(String name, String due) {","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"weiquu"},"content":"        userTasks.add(new Deadline(name, due));","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"weiquu"},"content":"        return \"  \" + userTasks.get(userTasks.size() - 1).toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":101,"author":{"gitId":"weiquu"},"content":"     * Adds a new Event task to the task list.","lastModifiedDate":"2021-08-27"},{"lineNumber":102,"author":{"gitId":"weiquu"},"content":"     * Gets the name of the event task and the time it happens from the strings passed to the method.","lastModifiedDate":"2021-08-27"},{"lineNumber":103,"author":{"gitId":"weiquu"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":104,"author":{"gitId":"weiquu"},"content":"     * @param name The name of the Event task.","lastModifiedDate":"2021-08-27"},{"lineNumber":105,"author":{"gitId":"weiquu"},"content":"     * @param time The time the Event task happens.","lastModifiedDate":"2021-08-27"},{"lineNumber":106,"author":{"gitId":"weiquu"},"content":"     * @return The string representation of the Event task added.","lastModifiedDate":"2021-08-27"},{"lineNumber":107,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":108,"author":{"gitId":"weiquu"},"content":"    public String addEvent(String name, String time) {","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"weiquu"},"content":"        userTasks.add(new Event(name, time));","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"weiquu"},"content":"        return \"  \" + userTasks.get(userTasks.size() - 1).toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":114,"author":{"gitId":"weiquu"},"content":"     * Gets the number of tasks in the task list.","lastModifiedDate":"2021-08-27"},{"lineNumber":115,"author":{"gitId":"weiquu"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":116,"author":{"gitId":"weiquu"},"content":"     * @return The number of tasks in the task list.","lastModifiedDate":"2021-08-27"},{"lineNumber":117,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":118,"author":{"gitId":"weiquu"},"content":"    public String numTasks() {","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"weiquu"},"content":"        return \"Now you have \" + userTasks.size() + \" tasks in the list.\";","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":121,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":123,"author":{"gitId":"weiquu"},"content":"     * Converts the tasks in the task list into the proper format to be saved.","lastModifiedDate":"2021-08-27"},{"lineNumber":124,"author":{"gitId":"weiquu"},"content":"     * Each task is converted to their save format and added to the final string to be returned.","lastModifiedDate":"2021-08-27"},{"lineNumber":125,"author":{"gitId":"weiquu"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":126,"author":{"gitId":"weiquu"},"content":"     * @return A string representing all the tasks in the task list in the proper save format.","lastModifiedDate":"2021-08-27"},{"lineNumber":127,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":128,"author":{"gitId":"weiquu"},"content":"    public String convertToSaveFormat() {","lastModifiedDate":"2021-08-27"},{"lineNumber":129,"author":{"gitId":"weiquu"},"content":"        String dataStr \u003d \"\";","lastModifiedDate":"2021-08-25"},{"lineNumber":130,"author":{"gitId":"weiquu"},"content":"        for (int i \u003d 0; i \u003c userTasks.size() - 1; i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":131,"author":{"gitId":"weiquu"},"content":"            Task data \u003d userTasks.get(i);","lastModifiedDate":"2021-08-25"},{"lineNumber":132,"author":{"gitId":"weiquu"},"content":"            dataStr +\u003d data.convertToSaveFormat() + \"\\n\";","lastModifiedDate":"2021-08-27"},{"lineNumber":133,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":134,"author":{"gitId":"weiquu"},"content":"        dataStr +\u003d userTasks.get(userTasks.size() - 1).convertToSaveFormat();","lastModifiedDate":"2021-08-27"},{"lineNumber":135,"author":{"gitId":"weiquu"},"content":"        return dataStr;","lastModifiedDate":"2021-08-25"},{"lineNumber":136,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":137,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":138,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":139,"author":{"gitId":"weiquu"},"content":"     * Finds a list of tasks which contain the specified search string.","lastModifiedDate":"2021-08-27"},{"lineNumber":140,"author":{"gitId":"weiquu"},"content":"     * Converts the ArrayList to a stream to perform filtering and mapping operations.","lastModifiedDate":"2021-08-27"},{"lineNumber":141,"author":{"gitId":"weiquu"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":142,"author":{"gitId":"weiquu"},"content":"     * @param textToSearch The text which to search for in the names of the tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":143,"author":{"gitId":"weiquu"},"content":"     * @return A list containing the string representations of tasks which contain the specified search string.","lastModifiedDate":"2021-08-27"},{"lineNumber":144,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":145,"author":{"gitId":"weiquu"},"content":"    public List\u003cString\u003e searchTasks(String textToSearch) {","lastModifiedDate":"2021-08-27"},{"lineNumber":146,"author":{"gitId":"weiquu"},"content":"        return userTasks.stream().filter(task -\u003e task.getName().contains(textToSearch))","lastModifiedDate":"2021-08-27"},{"lineNumber":147,"author":{"gitId":"weiquu"},"content":"                .map(task -\u003e task.toString()).collect(Collectors.toList());","lastModifiedDate":"2021-08-27"},{"lineNumber":148,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":149,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":150,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":151,"author":{"gitId":"weiquu"},"content":"     * Cleans the data to get the required task information.","lastModifiedDate":"2021-08-27"},{"lineNumber":152,"author":{"gitId":"weiquu"},"content":"     * Handles each task differently based on their type. The data comes from the save format in","lastModifiedDate":"2021-08-27"},{"lineNumber":153,"author":{"gitId":"weiquu"},"content":"     * the storage file on the user\u0027s computer.","lastModifiedDate":"2021-08-27"},{"lineNumber":154,"author":{"gitId":"weiquu"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":155,"author":{"gitId":"weiquu"},"content":"     * @param data The data to be cleaned.","lastModifiedDate":"2021-08-27"},{"lineNumber":156,"author":{"gitId":"weiquu"},"content":"     * @return A task based on the data given.","lastModifiedDate":"2021-08-27"},{"lineNumber":157,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":158,"author":{"gitId":"weiquu"},"content":"    private Task cleanData(String data) {","lastModifiedDate":"2021-08-25"},{"lineNumber":159,"author":{"gitId":"weiquu"},"content":"        String[] dataParts \u003d data.split(\"[|]\");","lastModifiedDate":"2021-08-25"},{"lineNumber":160,"author":{"gitId":"weiquu"},"content":"        Task tempTask \u003d new ToDo(\"temp\");","lastModifiedDate":"2021-08-25"},{"lineNumber":161,"author":{"gitId":"weiquu"},"content":"        if (dataParts.length \u003d\u003d 3) {","lastModifiedDate":"2021-08-25"},{"lineNumber":162,"author":{"gitId":"weiquu"},"content":"            tempTask \u003d new ToDo(dataParts[2]);","lastModifiedDate":"2021-08-25"},{"lineNumber":163,"author":{"gitId":"weiquu"},"content":"        } else if (dataParts[0].equals(\"D\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":164,"author":{"gitId":"weiquu"},"content":"            tempTask \u003d new Deadline(dataParts[2], dataParts[3]);","lastModifiedDate":"2021-08-25"},{"lineNumber":165,"author":{"gitId":"weiquu"},"content":"        } else if (dataParts[0].equals(\"E\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":166,"author":{"gitId":"weiquu"},"content":"            tempTask \u003d new Event(dataParts[2], dataParts[3]);","lastModifiedDate":"2021-08-25"},{"lineNumber":167,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":168,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":169,"author":{"gitId":"weiquu"},"content":"        //TODO: error handling","lastModifiedDate":"2021-08-25"},{"lineNumber":170,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":171,"author":{"gitId":"weiquu"},"content":"        if (dataParts[1].equals(\"1\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":172,"author":{"gitId":"weiquu"},"content":"            tempTask.markAsDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":173,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":174,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":175,"author":{"gitId":"weiquu"},"content":"        return tempTask;","lastModifiedDate":"2021-08-25"},{"lineNumber":176,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":177,"author":{"gitId":"weiquu"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"weiquu":177}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weiquu"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"weiquu"},"content":"public class Ui {","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"weiquu"},"content":"     * Prints a response to the user.","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"weiquu"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"weiquu"},"content":"     * @param lines A variable number of lines to be printed as a repsonse to the user.","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"weiquu"},"content":"    public static void printResponse(String ... lines) {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"weiquu"},"content":"        String LINE \u003d \"    --------------------------------------------------\";","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"weiquu"},"content":"        String INDENTATION \u003d \"      \";","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"weiquu"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"weiquu"},"content":"        for (String line : lines) {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"weiquu"},"content":"            System.out.println(INDENTATION + line);","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"weiquu"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"weiquu"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"weiquu":18}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weiquu"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"weiquu"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"weiquu"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"weiquu"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"weiquu"},"content":"import java.lang.NumberFormatException;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"weiquu"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"weiquu"},"content":"    /** The date the task is due, in LocalDate format. */","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"weiquu"},"content":"    private LocalDate due;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"weiquu"},"content":"    /** Whether the task has a date it is due in a recognisable format. */","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"weiquu"},"content":"    private boolean hasDate \u003d true;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"weiquu"},"content":"    /** The time the task is due, in Integer format. */","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"weiquu"},"content":"    private int timeInt;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"weiquu"},"content":"    /** The time the task is due, in String format. */","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"weiquu"},"content":"    private String timeStr;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"weiquu"},"content":"    /**  Whether the task has a time it is due in a recognisable, 24-hour format. */","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"weiquu"},"content":"    private boolean hasTime \u003d true;","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"weiquu"},"content":"    /** The information on when the task is due. */","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"weiquu"},"content":"    private String dueStr;","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"weiquu"},"content":"     * Constructs a new Deadline task.","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"weiquu"},"content":"     * Takes in the name of the Deadline and information on when it\u0027s due. The information is checked to see if it","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"weiquu"},"content":"     * contains a date in a recognisable format. If it does, the information is also checked if it contains a time","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"weiquu"},"content":"     * in a recognisable, 24-hour format. It then stores those accordingly. The rest of the string is stored as is.","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"weiquu"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"weiquu"},"content":"     * @param name The name of the new Deadline task.","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"weiquu"},"content":"     * @param dueStr The information on when the Deadline task is due.","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"weiquu"},"content":"    public Deadline(String name, String dueStr) {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"weiquu"},"content":"        super(name);","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"weiquu"},"content":"        this.dueStr \u003d dueStr;","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"weiquu"},"content":"        // Handle date and time representation, if any","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"weiquu"},"content":"        String[] dateTimeArr \u003d dueStr.split(\" \");","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"weiquu"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"weiquu"},"content":"            due \u003d LocalDate.parse(dateTimeArr[0]);","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"weiquu"},"content":"        catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"weiquu"},"content":"            hasDate \u003d false;","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"weiquu"},"content":"            hasTime \u003d false;","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"weiquu"},"content":"        if (hasDate) {","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"weiquu"},"content":"            if (dateTimeArr.length \u003e\u003d 2) {","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"weiquu"},"content":"                int time \u003d -1;","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"weiquu"},"content":"                try {","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"weiquu"},"content":"                    time \u003d Integer.parseInt(dateTimeArr[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"weiquu"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"weiquu"},"content":"                catch (NumberFormatException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"weiquu"},"content":"                    hasTime \u003d false;","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"weiquu"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"weiquu"},"content":"                if (hasTime \u0026\u0026 0 \u003c\u003d time \u0026\u0026 time \u003c\u003d 2359) {","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"weiquu"},"content":"                    timeStr \u003d dateTimeArr[1];","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"weiquu"},"content":"                } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"weiquu"},"content":"                    hasTime \u003d false;","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"weiquu"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"weiquu"},"content":"            } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"weiquu"},"content":"                hasTime \u003d false;","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"weiquu"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"weiquu"},"content":"        // Handle representation of information based on whether there is a recognisable date and time","lastModifiedDate":"2021-08-27"},{"lineNumber":64,"author":{"gitId":"weiquu"},"content":"        int startIndex \u003d hasTime ? 2 : hasDate ? 1 : 0;","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"weiquu"},"content":"        this.dueStr \u003d \"\";","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"weiquu"},"content":"        for (int i \u003d startIndex; i \u003c dateTimeArr.length; i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"weiquu"},"content":"            if (i !\u003d 0) this.dueStr +\u003d \" \";","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"weiquu"},"content":"            this.dueStr +\u003d dateTimeArr[i];","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"weiquu"},"content":"        if (hasTime) {","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"weiquu"},"content":"            int hours \u003d Integer.parseInt(timeStr.substring(0, 2));","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"weiquu"},"content":"            int mins \u003d Integer.parseInt(timeStr.substring(2));","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"weiquu"},"content":"            String mornAftStr \u003d \"\";","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"weiquu"},"content":"            if (hours \u003e 12) {","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"weiquu"},"content":"                hours -\u003d 12;","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"weiquu"},"content":"                mornAftStr \u003d \"pm\";","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"weiquu"},"content":"            } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"weiquu"},"content":"                if (hours \u003d\u003d 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"weiquu"},"content":"                    hours \u003d 12;","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"weiquu"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"weiquu"},"content":"                mornAftStr \u003d \"am\";","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"weiquu"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"weiquu"},"content":"            String minPrependStr \u003d \"\";","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"weiquu"},"content":"            if (mins \u003c 10) {","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"weiquu"},"content":"                minPrependStr \u003d \"0\";","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"weiquu"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"weiquu"},"content":"            timeStr \u003d hours + \":\" + minPrependStr + mins + mornAftStr;","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"weiquu"},"content":"            this.dueStr \u003d \" \" + timeStr + this.dueStr;","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"weiquu"},"content":"        if (hasDate) {","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"weiquu"},"content":"            this.dueStr \u003d due.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + this.dueStr;","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"weiquu"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":96,"author":{"gitId":"weiquu"},"content":"     * Converts the Deadline task to the format used for saving in the storage file on the user\u0027s computer.","lastModifiedDate":"2021-08-27"},{"lineNumber":97,"author":{"gitId":"weiquu"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":98,"author":{"gitId":"weiquu"},"content":"     * @return The save format of the Deadline task.","lastModifiedDate":"2021-08-27"},{"lineNumber":99,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":100,"author":{"gitId":"weiquu"},"content":"    public String convertToSaveFormat() {","lastModifiedDate":"2021-08-27"},{"lineNumber":101,"author":{"gitId":"weiquu"},"content":"        return \"D|\" + super.convertToSaveFormat() + \"|\" + dueStr;","lastModifiedDate":"2021-08-27"},{"lineNumber":102,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":103,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":104,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":105,"author":{"gitId":"weiquu"},"content":"     * {@inheritDoc}","lastModifiedDate":"2021-08-27"},{"lineNumber":106,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":107,"author":{"gitId":"weiquu"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":108,"author":{"gitId":"weiquu"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":109,"author":{"gitId":"weiquu"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + dueStr + \")\";","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":111,"author":{"gitId":"weiquu"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"weiquu":111}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weiquu"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"weiquu"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"weiquu"},"content":"    /** The information on the time of the Event. */","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"weiquu"},"content":"    private String time;","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"weiquu"},"content":"     * Constructs a new Event task.","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"weiquu"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"weiquu"},"content":"     * @param name The name of the new Event task.","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"weiquu"},"content":"     * @param time The information on time of the Event task.","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"weiquu"},"content":"    public Event(String name, String time) {","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"weiquu"},"content":"        super(name);","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"weiquu"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"weiquu"},"content":"     * Converts the Event task to the format used for saving in the storage file on the user\u0027s computer.","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"weiquu"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"weiquu"},"content":"     * @return The save format of the Event task.","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"weiquu"},"content":"    public String convertToSaveFormat() {","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"weiquu"},"content":"        return \"E|\" + super.convertToSaveFormat() + \"|\" + time;","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"weiquu"},"content":"     * {@inheritDoc}","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"weiquu"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"weiquu"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"weiquu"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + time + \")\";","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"weiquu"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"weiquu":34}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weiquu"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"weiquu"},"content":"public class Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"weiquu"},"content":"    /** The name of the Task. */","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"weiquu"},"content":"    private String name;","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"weiquu"},"content":"    /** Whether the Task has been completed. */","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"weiquu"},"content":"    private boolean isCompleted;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"weiquu"},"content":"     * Constructs a new Task.","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"weiquu"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"weiquu"},"content":"     * @param name The name of the Task.","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"weiquu"},"content":"    public Task(String name) {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"weiquu"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"weiquu"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"weiquu"},"content":"     * Marks the Task as done.","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"weiquu"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"weiquu"},"content":"        this.isCompleted \u003d true;","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"weiquu"},"content":"     * Converts the Task to the format used for saving in the storage file on the user\u0027s computer.","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"weiquu"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"weiquu"},"content":"     * @return The save format of the Task.","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"weiquu"},"content":"    public String convertToSaveFormat() {","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"weiquu"},"content":"        String completedStr \u003d isCompleted ? \"1\" : \"0\";","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"weiquu"},"content":"        return completedStr + \"|\" + name;","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"weiquu"},"content":"     * Gets the name of the task.","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"weiquu"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"weiquu"},"content":"     * @return The name of the task.","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"weiquu"},"content":"    public String getName() {","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"weiquu"},"content":"        return this.name;","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"weiquu"},"content":"     * Converts the Task to its string representation.","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"weiquu"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"weiquu"},"content":"     * @return The string representation of the Task.","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"weiquu"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"weiquu"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"weiquu"},"content":"        String symbol \u003d isCompleted ? \"X\" : \" \";","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"weiquu"},"content":"        return \"[\" + symbol + \"] \" + name;","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"weiquu"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"weiquu":55}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weiquu"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"weiquu"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"weiquu"},"content":"     * Constructs a new ToDo task.","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"weiquu"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"weiquu"},"content":"     * @param name The name of the new ToDo task.","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"weiquu"},"content":"    public ToDo(String name) {","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"weiquu"},"content":"        super(name);","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"weiquu"},"content":"     * Converts the ToDo task to the format used for saving in the storage file on the user\u0027s computer.","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"weiquu"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"weiquu"},"content":"     * @return The save format of the ToDo task.","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"weiquu"},"content":"    public String convertToSaveFormat() {","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"weiquu"},"content":"        return \"T|\" + super.convertToSaveFormat();","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"weiquu"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"weiquu"},"content":"     * {@inheritDoc}","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"weiquu"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"weiquu"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"weiquu"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"weiquu"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"weiquu"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"weiquu":29}},{"path":"src/test/java/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weiquu"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"weiquu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"weiquu"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"weiquu"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"weiquu"},"content":"    public void testToString_testNoDateNoTimeHaveText() {","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"weiquu"},"content":"        Deadline testTask \u003d new Deadline(\"testDeadline\", \"due whenever\");","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"weiquu"},"content":"        assertEquals(\"[D][ ] testDeadline (by: due whenever)\", testTask.toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"weiquu"},"content":"    public void testToString_testHaveDateNoTimeNoText() {","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"weiquu"},"content":"        Deadline testTask \u003d new Deadline(\"testDeadline\", \"2022-04-02\");","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"weiquu"},"content":"        testTask.markAsDone();","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"weiquu"},"content":"        assertEquals(\"[D][X] testDeadline (by: Apr 2 2022)\", testTask.toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"weiquu"},"content":"    public void testToString_testHaveDateInvalidTimeNoText() {","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"weiquu"},"content":"        Deadline testTask \u003d new Deadline(\"testDeadline\", \"2022-04-02 2400\");","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"weiquu"},"content":"        assertEquals(\"[D][ ] testDeadline (by: Apr 2 2022 2400)\", testTask.toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"weiquu"},"content":"    public void testToSaveFormat_testInvalidDateInvalidTimeHaveText() {","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"weiquu"},"content":"        Deadline testTask \u003d new Deadline(\"testDeadline\", \"2022-04-31 2400 test text\");","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"weiquu"},"content":"        testTask.markAsDone();","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"weiquu"},"content":"        assertEquals(\"D|1|testDeadline|2022-04-31 2400 test text\", testTask.convertToSaveFormat());","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"weiquu"},"content":"    public void testToSaveFormat_testHaveDateHaveTimeNoText() {","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"weiquu"},"content":"        Deadline testTask \u003d new Deadline(\"testDeadline\", \"2022-04-30 2359\");","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"weiquu"},"content":"        assertEquals(\"D|0|testDeadline|Apr 30 2022 11:59pm\", testTask.convertToSaveFormat());","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"weiquu"},"content":"    public void testToSaveFormat_testHaveDateHaveTimeHaveText() {","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"weiquu"},"content":"        Deadline testTask \u003d new Deadline(\"testDeadline\", \"2022-04-30 0000 test text\");","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"weiquu"},"content":"        testTask.markAsDone();","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"weiquu"},"content":"        assertEquals(\"D|1|testDeadline|Apr 30 2022 12:00am test text\", testTask.convertToSaveFormat());","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"weiquu"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"weiquu":46}},{"path":"src/test/java/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weiquu"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"weiquu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"weiquu"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"weiquu"},"content":"public class EventTest {","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"weiquu"},"content":"    public void testToString() {","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"weiquu"},"content":"        Event testTask \u003d new Event(\"testEvent\", \"test time\");","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"weiquu"},"content":"        assertEquals(\"[E][ ] testEvent (at: test time)\", testTask.toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"weiquu"},"content":"    public void testToSaveFormat() {","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"weiquu"},"content":"        Event testTask \u003d new Event(\"testEvent\", \"test time\");","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"weiquu"},"content":"        testTask.markAsDone();","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"weiquu"},"content":"        assertEquals(\"E|1|testEvent|test time\", testTask.convertToSaveFormat());","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"weiquu"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"weiquu":20}},{"path":"src/test/java/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"weiquu"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"weiquu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"weiquu"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"weiquu"},"content":"public class ToDoTest {","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"weiquu"},"content":"    public void testToString() {","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"weiquu"},"content":"        ToDo testTask \u003d new ToDo(\"testToDo\");","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"weiquu"},"content":"        assertEquals(\"[T][ ] testToDo\", testTask.toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"weiquu"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"weiquu"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"weiquu"},"content":"    public void testToSaveFormat() {","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"weiquu"},"content":"        ToDo testTask \u003d new ToDo(\"testToDo\");","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"weiquu"},"content":"        testTask.markAsDone();","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"weiquu"},"content":"        assertEquals(\"T|1|testToDo\", testTask.convertToSaveFormat());","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"weiquu"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"weiquu"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"weiquu":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"weiquu"},"content":"todo borrow book","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"weiquu"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"weiquu"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"weiquu"},"content":"event project meeting /at Mon2-4pm","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"weiquu"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"weiquu"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"weiquu"},"content":"done 1","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"weiquu"},"content":"done 3","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"weiquu"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"weiquu"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"weiquu":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"weiquu"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"weiquu":1,"-":20}}]
