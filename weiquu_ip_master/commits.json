{"authorDailyContributionsMap":{"weiquu":[{"date":"2021-08-18","commitResults":[{"hash":"0caf6b571da0fd7378957fffeb6cca6172fea7ff","messageTitle":"Completed Level-1: Greet, Echo, Exit","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":26,"deletions":7}}},{"hash":"c6c1ff5f89513d2ac33cbb456bc0190a61775a99","messageTitle":"Completed Level-2: Add, List","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":4}}},{"hash":"88a363280b4d06e1d0eaefefee88b3f28d53c480","messageTitle":"Completed Level-3: Mark as Done","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":28,"deletions":2}}}]},{"date":"2021-08-19","commitResults":[{"hash":"fa3515c6efc12b311b16923070ecd4c2891ed230","messageTitle":"Completed Level-4: ToDos, Events, Deadlines","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":59,"deletions":2}}},{"hash":"f4132055ca5b7359347795aab8926f1b2c1404ef","messageTitle":"Completed A-TextUiTesting: Automated Text UI Testing","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":10,"deletions":0}}},{"hash":"801be49f3535f635fb3a0733557e415f46526ba2","messageTitle":"Completed Level-5: Handle Errors","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{"java":{"insertions":48,"deletions":37}}},{"hash":"967ba061f61e92bdea2d7f75c154d207d0d1a771","messageTitle":"Completed Level-6: Delete","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":3}}}]},{"date":"2021-08-20","commitResults":[{"hash":"e2efa59bbbe18324a3f0857318e66078f87a211b","messageTitle":"A-Enums","messageBody":"","tags":["A-Enums"],"fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":8}}}]},{"date":"2021-08-25","commitResults":[{"hash":"5cb34798a112a22dc2d0c770f3b2009ff9d998b7","messageTitle":"Refactoring","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":117,"deletions":104}}},{"hash":"960eabedcd42af9a8a76def16cd03fee9f09ea4d","messageTitle":"Completed Level-7: Save","messageBody":"","tags":["Level-7"],"fileTypesAndContributionMap":{"java":{"insertions":156,"deletions":6}}},{"hash":"881d1e262c385b690b6d478a5388b41a4546cbf9","messageTitle":"Completed Level-8: Dates and Times","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":75,"deletions":5}}},{"hash":"c786a01185416de89a69876f06abd132c7b8a425","messageTitle":"Completed Level-8: Dates and Times","messageBody":"","tags":["Level-8"],"fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":2}}},{"hash":"0237f35ed0f047b33c60901d184842f6beb90807","messageTitle":"Refactor code to be more OOP","messageBody":"Added a Ui class that deals with interactions with the user.\nAdded a Storage class that deals with loading tasks from the file and\nsaving tasks in the file.\nAdded a Parser class that deals with making sense of the user command.\nAdded a TaskList class that contains the task list.\n","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"java":{"insertions":225,"deletions":138}}}]},{"date":"2021-08-26","commitResults":[{"hash":"79132fef19d3f58fb9dd54b82de60c5f2dc3d2e1","messageTitle":"Organise classes into packages","messageBody":"Put all classes into one package, duke, and have another package within\nthat called task for all classes related to tasks.\n","tags":["A-Packages"],"fileTypesAndContributionMap":{"java":{"insertions":26,"deletions":1},"bat":{"insertions":1,"deletions":1}}}]},{"date":"2021-08-27","commitResults":[{"hash":"ef81469a4c3c42d317e0803cb68293b93c570ef6","messageTitle":"Add JUnit tests","messageBody":"JUnit tests added for all public methods of all tasks (i.e. ToDo, Event\n, and Deadline). Testing of invalid date and/or time for Deadline.\n","tags":["A-Jar","A-JUnit"],"fileTypesAndContributionMap":{"java":{"insertions":82,"deletions":0}}},{"hash":"7f10542e435e71ffa2197b018a71516139f7ae28","messageTitle":"Add JavaDoc comments to all classes. JavaDoc comments added to all methods and members of the classes.","messageBody":"","tags":["A-JavaDoc"],"fileTypesAndContributionMap":{"java":{"insertions":227,"deletions":12}}},{"hash":"4cf5c585bde0b009c304072bbd1f450587aa5c00","messageTitle":"Tweak code to comply with coding standard.","messageBody":"Changed small bits of code to comply with the CS2103 coding standard.\n","tags":["A-CodingStandard"],"fileTypesAndContributionMap":{"java":{"insertions":40,"deletions":37}}},{"hash":"0c5bc1b78559f26ed917230d31757f0dd51e8f0b","messageTitle":"Add find functionality.","messageBody":"Gives users a way to find a task by searching for a keyword.\n","tags":["Level-9"],"fileTypesAndContributionMap":{"java":{"insertions":36,"deletions":0}}}]},{"date":"2021-09-01","commitResults":[{"hash":"df1ff6ba27fd3a65cd52eb643e50e5c07bc0d64d","messageTitle":"Add Gradle support to project","messageBody":"Added Gradle support to the project, set up Gradle to run unit tests.\n","tags":["A-Gradle"],"fileTypesAndContributionMap":{"gradle":{"insertions":6,"deletions":6},"java":{"insertions":6,"deletions":6}}},{"hash":"ab0c825c2d76485fdd75a686fa19ad056eff72e9","messageTitle":"Add CheckStyle to detect coding style violations","messageBody":"Set up CheckStyle file (and suppressions file), ran checks on each file\nand corrected and coding style violations.\n","tags":["A-Varargs","A-CheckStyle"],"fileTypesAndContributionMap":{"gradle":{"insertions":4,"deletions":4},"java":{"insertions":23,"deletions":19}}},{"hash":"e516e8deb6c186c262c39d3f9de76fcd0f11f7b4","messageTitle":"Add basic GUI to Duke","messageBody":"Based the GUI off the tutorial.\n","tags":["Level-10"],"fileTypesAndContributionMap":{"gradle":{"insertions":15,"deletions":0},"java":{"insertions":176,"deletions":1}}}]},{"date":"2021-09-08","commitResults":[{"hash":"23a6c81899c25b62195d469d25f667bef42cb0fa","messageTitle":"Update GUI for Duke","messageBody":"Components are heavily dependent on each other, and the process of\nvisually enhancing the GUI is long and painful. In addition, the code is\nuntidy and long.\n\nLet\u0027s refactor the code to use FXML to define our user interface, so\nthat it is easier to rebuild and control the UI elements in Duke.\n","fileTypesAndContributionMap":{"fxml":{"insertions":35,"deletions":0},"java":{"insertions":158,"deletions":79}}},{"hash":"c3c6658a897225480982687a4d7e78d0303a91f3","messageTitle":"Link Duke\u0027s GUI to main program logic","messageBody":"Program logic is not linked to the input entered by the user in Duke\u0027s\nGUI. The program also does not exit when the user enters \u0027bye\u0027. This\nneeds to be updated in order for Duke to becoming fully functional and\nhave the GUI act as a good representation of the previous CLI.\n\nLet\u0027s link the user input in the GUI to Duke\u0027s main logic. A new\nEnumeration class, DukeStatus, is used to encapsulate the current status\nof Duke (e.g. whether there is an error or should exit) as well as the\nresponse that the user should see in the GUI.\n\nUsing enumerations is preferable here in order to ensure that only\ncertain values are allowed, and to encapsulate both the current state of\nDuke as well as it\u0027s response in a single class.\n","tags":["A-FullCommitMessage"],"fileTypesAndContributionMap":{"java":{"insertions":71,"deletions":62}}}]},{"date":"2021-09-10","commitResults":[{"hash":"7df0e89d1d493657e1c7573f061761cf657e6a34","messageTitle":"Add assertions to document assumptions","messageBody":"No assertions are used to ensure that assumptions should hold at various\npoints in the code. This should change assertions have low impact on\ncode yet provide a lot of safety.\n\nLet\u0027s add assertions to points in the code where certain assumptions\nshould hold, like to ensure that the tasks have been correctly read from\nthe data stored in the user\u0027s computer.\n","tags":["A-Assertions"],"fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":5}}},{"hash":"e8d7d3de391b1ab6745099ddb0a364e7cbd27230","messageTitle":"Improve code quality","messageBody":"Code has some quality issues like magic numbers, weak SLAP, long\nmethods, deep nesting, etc. These affect the readability of the code and\nmake it harder for someone else to understand.\n\nLet\u0027s refactor the code to improve code quality where necessary. In\nparticular, the code avoid magic numbers, long methods, and deep nesting\nwhile ensuring that it SLAPs hard.\n\nNote that the Parser class will be refactored in a future commit.\n","tags":["A-CodeQuality"],"fileTypesAndContributionMap":{"fxml":{"insertions":1,"deletions":1},"java":{"insertions":114,"deletions":81}}},{"hash":"58317a7c89f3fba28322e67b0f4fb3b9b37caf45","messageTitle":"Minor refactoring of UI class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":3}}},{"hash":"2169270715c2e05b4c731415816976a8f84b40b5","messageTitle":"Add Help function","messageBody":"Duke has no help function to provide in-App guidance to users should\nthey be unfamiliar with the application. This is an issue as there will\nbe higher barriers to entry for new users.\n\nLet\u0027s add a help function that lets users see all the commands they can\nuse within the application. This will significantly reduce the barriers\nof entry for new users while simulataneously giving more experienced\nusers the opportunity to remind themselves of the commands and format of\nthe commands that they can use.\n","tags":["BCD-Extension"],"fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":1}}}]},{"date":"2021-09-15","commitResults":[{"hash":"46e3068056672f13462b16989bc20ad2769e304e","messageTitle":"Minor change to GUI","messageBody":"Attempt to change background color of Duke to something more vibrant.\n","tags":["A-BetterGui"],"fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":0}}}]}]},"authorFileTypeContributionMap":{"weiquu":{"java":1077,"md":0,"fxml":35,"sh":0,"bat":1,"gradle":17,"txt":10}},"authorContributionVariance":{"weiquu":27390.422},"authorDisplayNameMap":{"weiquu":"CS2103-T14-2 NEO ..QING"}}
