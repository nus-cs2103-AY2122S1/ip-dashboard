[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Agentum07"},"content":"E | 0 | return book | 2/12/2019 1800","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"Agentum07":1}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Agentum07"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"Agentum07"},"content":" * A task of type deadline","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"Agentum07"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"Agentum07"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"Agentum07"},"content":"    protected String by;","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"Agentum07"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"Agentum07"},"content":"     * constructor of the class","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"Agentum07"},"content":"     * @param description description of the task","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"Agentum07"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"Agentum07"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"Agentum07"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"Agentum07"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"Agentum07"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"Agentum07"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"Agentum07"},"content":"     * String representation of event","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"Agentum07"},"content":"     * @return String representation of event","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"Agentum07"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"Agentum07"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"Agentum07"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"Agentum07"},"content":"        return \"D \" + super.toString() + \" | \" + by;","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"Agentum07"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"Agentum07"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"Agentum07":25}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Agentum07"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"Agentum07"},"content":" * The Bhutu chatbot app","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"Agentum07"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"Agentum07"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"Agentum07"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"Agentum07"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"Agentum07"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"Agentum07"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"Agentum07"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"Agentum07"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"Agentum07"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"Agentum07"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"Agentum07"},"content":"import java.io.*;","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"Agentum07"},"content":"import java.util.*;","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"Agentum07"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"Agentum07"},"content":"     * Global variables","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"Agentum07"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"Agentum07"},"content":"    private static final String SPACE \u003d \"    \";","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"Agentum07"},"content":"    private static final String LINE \u003d SPACE + \"______________________________________________________________________\";","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"Agentum07"},"content":"    private static final String END_LINE \u003d SPACE + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\";","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"Agentum07"},"content":"    private static final String DATA_FOLDER \u003d \"./data\";","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"Agentum07"},"content":"    private static final String DATA_FILE \u003d \"duke.txt\";","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"Agentum07"},"content":"    private static final String DATA_FILE_FOLDER \u003d DATA_FOLDER + \"/\" + DATA_FILE;","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"Agentum07"},"content":"    private Items items;","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"Agentum07"},"content":"    public Duke() {","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"Agentum07"},"content":"        items \u003d new Items();","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"Agentum07"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"Agentum07"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"Agentum07"},"content":"     * method to greet the user","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"Agentum07"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"Agentum07"},"content":"    private void greet() {","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"Agentum07"},"content":"        printMessage(\"Hello! I\u0027m Bhutu, your personal chatbot!\\nWhat can I do for you?\");","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"Agentum07"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"Agentum07"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"Agentum07"},"content":"     * interact with the user","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"Agentum07"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"Agentum07"},"content":"    private void interact() throws DukeException, IOException {","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"Agentum07"},"content":"        String[] input;","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"Agentum07"},"content":"        List\u003cString\u003e fileContent \u003d readFile(items);","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"Agentum07"},"content":"        if (fileContent \u003d\u003d null) {","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"Agentum07"},"content":"            System.out.println(\"File read error\");","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"Agentum07"},"content":"            return;","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"Agentum07"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"Agentum07"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"Agentum07"},"content":"        boolean flag \u003d true;","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"Agentum07"},"content":"        while(flag) {","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"Agentum07"},"content":"            input \u003d getInput(sc).split(\"\\\\s+\");","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"Agentum07"},"content":"            String command \u003d input[0];","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"Agentum07"},"content":"            String str;","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"Agentum07"},"content":"            String output \u003d \"\";","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"Agentum07"},"content":"            try {","lastModifiedDate":"2021-08-19"},{"lineNumber":65,"author":{"gitId":"Agentum07"},"content":"                String[] task \u003d compileInput(input);","lastModifiedDate":"2021-08-19"},{"lineNumber":66,"author":{"gitId":"Agentum07"},"content":"                switch (command) {","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"Agentum07"},"content":"                case \"list\":","lastModifiedDate":"2021-08-19"},{"lineNumber":68,"author":{"gitId":"Agentum07"},"content":"                    output \u003d items.printList();","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"Agentum07"},"content":"                    break;","lastModifiedDate":"2021-08-19"},{"lineNumber":71,"author":{"gitId":"Agentum07"},"content":"                case \"done\":","lastModifiedDate":"2021-08-19"},{"lineNumber":72,"author":{"gitId":"Agentum07"},"content":"                    output \u003d items.markDone(Integer.parseInt(input[1]));","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"Agentum07"},"content":"                    int idx \u003d Integer.parseInt(input[1]);","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"Agentum07"},"content":"                    str \u003d fileContent.get(idx - 1);","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"Agentum07"},"content":"                    str \u003d str.substring(0, 4) + \"1\" + str.substring(5);","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"Agentum07"},"content":"                    fileContent.set(idx - 1, str);","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"Agentum07"},"content":"                    break;","lastModifiedDate":"2021-08-19"},{"lineNumber":79,"author":{"gitId":"Agentum07"},"content":"                case \"bye\":","lastModifiedDate":"2021-08-19"},{"lineNumber":80,"author":{"gitId":"Agentum07"},"content":"                    flag \u003d false;","lastModifiedDate":"2021-08-19"},{"lineNumber":81,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":82,"author":{"gitId":"Agentum07"},"content":"                    break;","lastModifiedDate":"2021-08-19"},{"lineNumber":83,"author":{"gitId":"Agentum07"},"content":"                case \"todo\":","lastModifiedDate":"2021-08-19"},{"lineNumber":84,"author":{"gitId":"Agentum07"},"content":"                    output \u003d items.addItem(new Todo(task[0]));","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"Agentum07"},"content":"                    str \u003d \"T | 0 | \" + task[0];","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"Agentum07"},"content":"                    fileContent.add(str);","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":88,"author":{"gitId":"Agentum07"},"content":"                    break;","lastModifiedDate":"2021-08-19"},{"lineNumber":89,"author":{"gitId":"Agentum07"},"content":"                case \"event\":","lastModifiedDate":"2021-08-19"},{"lineNumber":90,"author":{"gitId":"Agentum07"},"content":"                    output \u003d items.addItem(new Event(task[0], task[1]));","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"Agentum07"},"content":"                    str \u003d \"T | 0 | \" + task[0] + \" | \"+ task[1];","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"Agentum07"},"content":"                    fileContent.add(str);","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"Agentum07"},"content":"                    break;","lastModifiedDate":"2021-08-19"},{"lineNumber":95,"author":{"gitId":"Agentum07"},"content":"                case \"deadline\":","lastModifiedDate":"2021-08-19"},{"lineNumber":96,"author":{"gitId":"Agentum07"},"content":"                    output \u003d items.addItem(new Deadline(task[0], task[1]));","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"Agentum07"},"content":"                    str \u003d \"E | 0 | \" + task[0] + \" | \"+ task[1];","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"Agentum07"},"content":"                    fileContent.add(str);","lastModifiedDate":"2021-08-26"},{"lineNumber":99,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":100,"author":{"gitId":"Agentum07"},"content":"                    break;","lastModifiedDate":"2021-08-19"},{"lineNumber":101,"author":{"gitId":"Agentum07"},"content":"                case \"delete\":","lastModifiedDate":"2021-08-19"},{"lineNumber":102,"author":{"gitId":"Agentum07"},"content":"                    output \u003d items.deleteItem(Integer.parseInt(input[1]));","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"Agentum07"},"content":"                    fileContent.remove(Integer.parseInt(input[1]) - 1);","lastModifiedDate":"2021-08-26"},{"lineNumber":104,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":105,"author":{"gitId":"Agentum07"},"content":"                    break;","lastModifiedDate":"2021-08-19"},{"lineNumber":106,"author":{"gitId":"Agentum07"},"content":"                default:","lastModifiedDate":"2021-08-19"},{"lineNumber":107,"author":{"gitId":"Agentum07"},"content":"                    output \u003d \"I don\u0027t recognise this command\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":108,"author":{"gitId":"Agentum07"},"content":"                            + \"Try \u0027list\u0027, \u0027todo\u0027, \u0027event\u0027, \u0027deadline\u0027, \u0027done\u0027 or \u0027bye\u0027\";","lastModifiedDate":"2021-08-26"},{"lineNumber":109,"author":{"gitId":"Agentum07"},"content":"                    break;","lastModifiedDate":"2021-08-19"},{"lineNumber":110,"author":{"gitId":"Agentum07"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":111,"author":{"gitId":"Agentum07"},"content":"            } catch (DukeException dukeException) {","lastModifiedDate":"2021-08-19"},{"lineNumber":112,"author":{"gitId":"Agentum07"},"content":"                output \u003d dukeException.getMessage();","lastModifiedDate":"2021-08-26"},{"lineNumber":113,"author":{"gitId":"Agentum07"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":114,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":115,"author":{"gitId":"Agentum07"},"content":"            Files.write(Paths.get(DATA_FILE_FOLDER), fileContent, StandardCharsets.UTF_8);","lastModifiedDate":"2021-08-26"},{"lineNumber":116,"author":{"gitId":"Agentum07"},"content":"            if (flag) {","lastModifiedDate":"2021-08-26"},{"lineNumber":117,"author":{"gitId":"Agentum07"},"content":"                printMessage(output);","lastModifiedDate":"2021-08-26"},{"lineNumber":118,"author":{"gitId":"Agentum07"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":119,"author":{"gitId":"Agentum07"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":120,"author":{"gitId":"Agentum07"},"content":"        printMessage(\"Going so soon? Hope to see you again soon!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":121,"author":{"gitId":"Agentum07"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":122,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":123,"author":{"gitId":"Agentum07"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":124,"author":{"gitId":"Agentum07"},"content":"     * Get the user input","lastModifiedDate":"2021-08-26"},{"lineNumber":125,"author":{"gitId":"Agentum07"},"content":"     * @param sc The scanner to get the input","lastModifiedDate":"2021-08-26"},{"lineNumber":126,"author":{"gitId":"Agentum07"},"content":"     * @return The string representation of the user input","lastModifiedDate":"2021-08-26"},{"lineNumber":127,"author":{"gitId":"Agentum07"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":128,"author":{"gitId":"Agentum07"},"content":"    private static String getInput(Scanner sc) {","lastModifiedDate":"2021-08-26"},{"lineNumber":129,"author":{"gitId":"Agentum07"},"content":"        return sc.nextLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":130,"author":{"gitId":"Agentum07"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":131,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":132,"author":{"gitId":"Agentum07"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":133,"author":{"gitId":"Agentum07"},"content":"     * combine an array of strings into a space seperated sentence.","lastModifiedDate":"2021-08-19"},{"lineNumber":134,"author":{"gitId":"Agentum07"},"content":"     * @param input the string array.","lastModifiedDate":"2021-08-19"},{"lineNumber":135,"author":{"gitId":"Agentum07"},"content":"     * @return the sentence.","lastModifiedDate":"2021-08-19"},{"lineNumber":136,"author":{"gitId":"Agentum07"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":137,"author":{"gitId":"Agentum07"},"content":"    private StringBuilder combineInputArray(String[] input) {","lastModifiedDate":"2021-08-19"},{"lineNumber":138,"author":{"gitId":"Agentum07"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2021-08-19"},{"lineNumber":139,"author":{"gitId":"Agentum07"},"content":"        for (int i \u003d 1; i \u003c input.length; i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":140,"author":{"gitId":"Agentum07"},"content":"            if (i \u003c input.length - 1) {","lastModifiedDate":"2021-08-19"},{"lineNumber":141,"author":{"gitId":"Agentum07"},"content":"                result.append(input[i]).append(\" \");","lastModifiedDate":"2021-08-19"},{"lineNumber":142,"author":{"gitId":"Agentum07"},"content":"            } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":143,"author":{"gitId":"Agentum07"},"content":"                result.append(input[i]);","lastModifiedDate":"2021-08-19"},{"lineNumber":144,"author":{"gitId":"Agentum07"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":145,"author":{"gitId":"Agentum07"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":146,"author":{"gitId":"Agentum07"},"content":"        return result;","lastModifiedDate":"2021-08-19"},{"lineNumber":147,"author":{"gitId":"Agentum07"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":148,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":149,"author":{"gitId":"Agentum07"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":150,"author":{"gitId":"Agentum07"},"content":"     * Convert the user input string into meaningful commands.","lastModifiedDate":"2021-08-19"},{"lineNumber":151,"author":{"gitId":"Agentum07"},"content":"     * @param input the user input string.","lastModifiedDate":"2021-08-19"},{"lineNumber":152,"author":{"gitId":"Agentum07"},"content":"     * @return the meaningful commands.","lastModifiedDate":"2021-08-19"},{"lineNumber":153,"author":{"gitId":"Agentum07"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":154,"author":{"gitId":"Agentum07"},"content":"    private String[] compileInput(String[] input) throws DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":155,"author":{"gitId":"Agentum07"},"content":"        StringBuilder result \u003d combineInputArray(input);","lastModifiedDate":"2021-08-19"},{"lineNumber":156,"author":{"gitId":"Agentum07"},"content":"        String date;","lastModifiedDate":"2021-08-26"},{"lineNumber":157,"author":{"gitId":"Agentum07"},"content":"        switch (input[0]) {","lastModifiedDate":"2021-08-19"},{"lineNumber":158,"author":{"gitId":"Agentum07"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-19"},{"lineNumber":159,"author":{"gitId":"Agentum07"},"content":"            String[] output \u003d result.toString().split(\" /by \");","lastModifiedDate":"2021-08-19"},{"lineNumber":160,"author":{"gitId":"Agentum07"},"content":"            if (output.length \u003c 2) {","lastModifiedDate":"2021-08-19"},{"lineNumber":161,"author":{"gitId":"Agentum07"},"content":"                throw new DukeException(\"Please provide both description and time. Use \u0027/by\u0027. (eg. deadline fix hair /by 1pm tomorrow)\");","lastModifiedDate":"2021-08-19"},{"lineNumber":162,"author":{"gitId":"Agentum07"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":163,"author":{"gitId":"Agentum07"},"content":"            date \u003d parseDate(output[1]);","lastModifiedDate":"2021-08-26"},{"lineNumber":164,"author":{"gitId":"Agentum07"},"content":"            try {","lastModifiedDate":"2021-08-26"},{"lineNumber":165,"author":{"gitId":"Agentum07"},"content":"                LocalDateTime.parse(date);","lastModifiedDate":"2021-08-26"},{"lineNumber":166,"author":{"gitId":"Agentum07"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":167,"author":{"gitId":"Agentum07"},"content":"                throw new DukeException(\"Invalid date.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":168,"author":{"gitId":"Agentum07"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":169,"author":{"gitId":"Agentum07"},"content":"            return new String[] {input[0], output[1], date};","lastModifiedDate":"2021-08-26"},{"lineNumber":170,"author":{"gitId":"Agentum07"},"content":"        case \"event\":","lastModifiedDate":"2021-08-19"},{"lineNumber":171,"author":{"gitId":"Agentum07"},"content":"            String[] output1 \u003d result.toString().split(\" /at \");","lastModifiedDate":"2021-08-19"},{"lineNumber":172,"author":{"gitId":"Agentum07"},"content":"            if (output1.length \u003c 2) {","lastModifiedDate":"2021-08-19"},{"lineNumber":173,"author":{"gitId":"Agentum07"},"content":"                throw new DukeException(\"Please provide both description and time. Use \u0027/at\u0027. (eg. event fix hair /at 1pm tomorrow)\");","lastModifiedDate":"2021-08-19"},{"lineNumber":174,"author":{"gitId":"Agentum07"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":175,"author":{"gitId":"Agentum07"},"content":"            date \u003d parseDate(output1[1]);","lastModifiedDate":"2021-08-26"},{"lineNumber":176,"author":{"gitId":"Agentum07"},"content":"            try {","lastModifiedDate":"2021-08-26"},{"lineNumber":177,"author":{"gitId":"Agentum07"},"content":"                LocalDateTime.parse(date);","lastModifiedDate":"2021-08-26"},{"lineNumber":178,"author":{"gitId":"Agentum07"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":179,"author":{"gitId":"Agentum07"},"content":"                throw new DukeException(\"Invalid date.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":180,"author":{"gitId":"Agentum07"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":181,"author":{"gitId":"Agentum07"},"content":"            return new String[] {input[0], output1[1], date};","lastModifiedDate":"2021-08-26"},{"lineNumber":182,"author":{"gitId":"Agentum07"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-19"},{"lineNumber":183,"author":{"gitId":"Agentum07"},"content":"            if (input.length \u003c 2) {","lastModifiedDate":"2021-08-19"},{"lineNumber":184,"author":{"gitId":"Agentum07"},"content":"                throw new DukeException(\"Please specify the task you want to do\");","lastModifiedDate":"2021-08-19"},{"lineNumber":185,"author":{"gitId":"Agentum07"},"content":"            } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":186,"author":{"gitId":"Agentum07"},"content":"                return new String[] {result.toString()};","lastModifiedDate":"2021-08-19"},{"lineNumber":187,"author":{"gitId":"Agentum07"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":188,"author":{"gitId":"Agentum07"},"content":"        case \"done\":","lastModifiedDate":"2021-08-19"},{"lineNumber":189,"author":{"gitId":"Agentum07"},"content":"            if (input.length \u003c 2) {","lastModifiedDate":"2021-08-19"},{"lineNumber":190,"author":{"gitId":"Agentum07"},"content":"                throw new DukeException(\"Please specify which task you have done\");","lastModifiedDate":"2021-08-19"},{"lineNumber":191,"author":{"gitId":"Agentum07"},"content":"            } else if (input.length !\u003d 2) {","lastModifiedDate":"2021-08-19"},{"lineNumber":192,"author":{"gitId":"Agentum07"},"content":"                throw new DukeException(\"\u0027done\u0027 command requires exactly 1 argument. (eg. done 12)\");","lastModifiedDate":"2021-08-19"},{"lineNumber":193,"author":{"gitId":"Agentum07"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":194,"author":{"gitId":"Agentum07"},"content":"            try {","lastModifiedDate":"2021-08-19"},{"lineNumber":195,"author":{"gitId":"Agentum07"},"content":"                Integer.parseInt(input[1]);","lastModifiedDate":"2021-08-19"},{"lineNumber":196,"author":{"gitId":"Agentum07"},"content":"            } catch (Exception e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":197,"author":{"gitId":"Agentum07"},"content":"                throw new DukeException(\"\u0027done\u0027 command requires an integer as number. (eg. done 12)\");","lastModifiedDate":"2021-08-19"},{"lineNumber":198,"author":{"gitId":"Agentum07"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":199,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":200,"author":{"gitId":"Agentum07"},"content":"            return new String[] {input[1]};","lastModifiedDate":"2021-08-19"},{"lineNumber":201,"author":{"gitId":"Agentum07"},"content":"        case \"list\":","lastModifiedDate":"2021-08-19"},{"lineNumber":202,"author":{"gitId":"Agentum07"},"content":"            if (input.length !\u003d 1) {","lastModifiedDate":"2021-08-19"},{"lineNumber":203,"author":{"gitId":"Agentum07"},"content":"                throw new DukeException(\"\u0027list\u0027 command doesn\u0027t require any arguments.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":204,"author":{"gitId":"Agentum07"},"content":"            } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":205,"author":{"gitId":"Agentum07"},"content":"                return new String[] {input[0]};","lastModifiedDate":"2021-08-19"},{"lineNumber":206,"author":{"gitId":"Agentum07"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":207,"author":{"gitId":"Agentum07"},"content":"        case \"bye\":","lastModifiedDate":"2021-08-19"},{"lineNumber":208,"author":{"gitId":"Agentum07"},"content":"            if (input.length !\u003d 1) {","lastModifiedDate":"2021-08-19"},{"lineNumber":209,"author":{"gitId":"Agentum07"},"content":"                throw new DukeException(\"\u0027bye\u0027 command doesn\u0027t require any arguments.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":210,"author":{"gitId":"Agentum07"},"content":"            } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":211,"author":{"gitId":"Agentum07"},"content":"                return new String[] {input[0]};","lastModifiedDate":"2021-08-19"},{"lineNumber":212,"author":{"gitId":"Agentum07"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":213,"author":{"gitId":"Agentum07"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-19"},{"lineNumber":214,"author":{"gitId":"Agentum07"},"content":"            if (input.length \u003c 2) {","lastModifiedDate":"2021-08-19"},{"lineNumber":215,"author":{"gitId":"Agentum07"},"content":"                throw new DukeException(\"Please specify which task you want to delete\");","lastModifiedDate":"2021-08-19"},{"lineNumber":216,"author":{"gitId":"Agentum07"},"content":"            } else if (input.length !\u003d 2) {","lastModifiedDate":"2021-08-19"},{"lineNumber":217,"author":{"gitId":"Agentum07"},"content":"                throw new DukeException(\"\u0027delete\u0027 command requires exactly 1 argument. (eg. done 12)\");","lastModifiedDate":"2021-08-19"},{"lineNumber":218,"author":{"gitId":"Agentum07"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":219,"author":{"gitId":"Agentum07"},"content":"            try {","lastModifiedDate":"2021-08-19"},{"lineNumber":220,"author":{"gitId":"Agentum07"},"content":"                Integer.parseInt(input[1]);","lastModifiedDate":"2021-08-19"},{"lineNumber":221,"author":{"gitId":"Agentum07"},"content":"            } catch (Exception e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":222,"author":{"gitId":"Agentum07"},"content":"                throw new DukeException(\"\u0027delete\u0027 command requires an integer as number. (eg. done 12)\");","lastModifiedDate":"2021-08-19"},{"lineNumber":223,"author":{"gitId":"Agentum07"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":224,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":225,"author":{"gitId":"Agentum07"},"content":"            return new String[] {input[1]};","lastModifiedDate":"2021-08-19"},{"lineNumber":226,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":227,"author":{"gitId":"Agentum07"},"content":"        default:","lastModifiedDate":"2021-08-19"},{"lineNumber":228,"author":{"gitId":"Agentum07"},"content":"            throw new DukeException(\"I don\u0027t recognise this command\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":229,"author":{"gitId":"Agentum07"},"content":"                + \"Try \u0027list\u0027, \u0027todo\u0027, \u0027event\u0027, \u0027deadline\u0027, \u0027done\u0027 or \u0027bye\u0027\");","lastModifiedDate":"2021-08-26"},{"lineNumber":230,"author":{"gitId":"Agentum07"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":231,"author":{"gitId":"Agentum07"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":232,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":233,"author":{"gitId":"Agentum07"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":234,"author":{"gitId":"Agentum07"},"content":"     * read file. If file does not exist, create file","lastModifiedDate":"2021-08-26"},{"lineNumber":235,"author":{"gitId":"Agentum07"},"content":"     * @param items the list of tasks","lastModifiedDate":"2021-08-26"},{"lineNumber":236,"author":{"gitId":"Agentum07"},"content":"     * @return List containing all tasks in file originally","lastModifiedDate":"2021-08-26"},{"lineNumber":237,"author":{"gitId":"Agentum07"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":238,"author":{"gitId":"Agentum07"},"content":"    public List\u003cString\u003e readFile(Items items) {","lastModifiedDate":"2021-08-27"},{"lineNumber":239,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":240,"author":{"gitId":"Agentum07"},"content":"        // Make directory and/or file if they don\u0027t exist","lastModifiedDate":"2021-08-26"},{"lineNumber":241,"author":{"gitId":"Agentum07"},"content":"        File dataFolder \u003d new File(DATA_FOLDER);","lastModifiedDate":"2021-08-27"},{"lineNumber":242,"author":{"gitId":"Agentum07"},"content":"        boolean folderCreated \u003d dataFolder.mkdirs();","lastModifiedDate":"2021-08-27"},{"lineNumber":243,"author":{"gitId":"Agentum07"},"content":"        File dataFile \u003d new File(DATA_FILE_FOLDER);","lastModifiedDate":"2021-08-26"},{"lineNumber":244,"author":{"gitId":"Agentum07"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":245,"author":{"gitId":"Agentum07"},"content":"            boolean fileCreated \u003d dataFile.createNewFile();","lastModifiedDate":"2021-08-27"},{"lineNumber":246,"author":{"gitId":"Agentum07"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":247,"author":{"gitId":"Agentum07"},"content":"            System.out.println(\"Failed to create a new file\");","lastModifiedDate":"2021-08-26"},{"lineNumber":248,"author":{"gitId":"Agentum07"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":249,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":250,"author":{"gitId":"Agentum07"},"content":"        List\u003cString\u003e fileList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-27"},{"lineNumber":251,"author":{"gitId":"Agentum07"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":252,"author":{"gitId":"Agentum07"},"content":"            Scanner fileReader \u003d new Scanner(dataFile);","lastModifiedDate":"2021-08-26"},{"lineNumber":253,"author":{"gitId":"Agentum07"},"content":"            while (fileReader.hasNextLine()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":254,"author":{"gitId":"Agentum07"},"content":"                String rawData \u003d fileReader.nextLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":255,"author":{"gitId":"Agentum07"},"content":"                fileList.add(rawData);","lastModifiedDate":"2021-08-27"},{"lineNumber":256,"author":{"gitId":"Agentum07"},"content":"                String[] data \u003d rawData.split(\" \\\\| \");","lastModifiedDate":"2021-08-26"},{"lineNumber":257,"author":{"gitId":"Agentum07"},"content":"                String taskType \u003d data[0];","lastModifiedDate":"2021-08-26"},{"lineNumber":258,"author":{"gitId":"Agentum07"},"content":"                boolean isDone \u003d data[1].equals(\"1\");","lastModifiedDate":"2021-08-26"},{"lineNumber":259,"author":{"gitId":"Agentum07"},"content":"                Task task \u003d null;","lastModifiedDate":"2021-08-26"},{"lineNumber":260,"author":{"gitId":"Agentum07"},"content":"                switch (taskType) {","lastModifiedDate":"2021-08-26"},{"lineNumber":261,"author":{"gitId":"Agentum07"},"content":"                case \"T\":","lastModifiedDate":"2021-08-26"},{"lineNumber":262,"author":{"gitId":"Agentum07"},"content":"                    // Add a todo task.","lastModifiedDate":"2021-08-26"},{"lineNumber":263,"author":{"gitId":"Agentum07"},"content":"                    task \u003d new Todo(data[2]);","lastModifiedDate":"2021-08-26"},{"lineNumber":264,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":265,"author":{"gitId":"Agentum07"},"content":"                    break;","lastModifiedDate":"2021-08-26"},{"lineNumber":266,"author":{"gitId":"Agentum07"},"content":"                case \"D\":","lastModifiedDate":"2021-08-26"},{"lineNumber":267,"author":{"gitId":"Agentum07"},"content":"                    // Add a deadline task.","lastModifiedDate":"2021-08-26"},{"lineNumber":268,"author":{"gitId":"Agentum07"},"content":"                    task \u003d new Deadline(data[2], data[3]);","lastModifiedDate":"2021-08-26"},{"lineNumber":269,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":270,"author":{"gitId":"Agentum07"},"content":"                    break;","lastModifiedDate":"2021-08-26"},{"lineNumber":271,"author":{"gitId":"Agentum07"},"content":"                case \"E\":","lastModifiedDate":"2021-08-26"},{"lineNumber":272,"author":{"gitId":"Agentum07"},"content":"                    // Add an event task.","lastModifiedDate":"2021-08-26"},{"lineNumber":273,"author":{"gitId":"Agentum07"},"content":"                    task \u003d new Event(data[2], data[3]);","lastModifiedDate":"2021-08-26"},{"lineNumber":274,"author":{"gitId":"Agentum07"},"content":"                }","lastModifiedDate":"2021-08-26"},{"lineNumber":275,"author":{"gitId":"Agentum07"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2021-08-26"},{"lineNumber":276,"author":{"gitId":"Agentum07"},"content":"                    if (isDone) {","lastModifiedDate":"2021-08-26"},{"lineNumber":277,"author":{"gitId":"Agentum07"},"content":"                        task.doneTask();","lastModifiedDate":"2021-08-26"},{"lineNumber":278,"author":{"gitId":"Agentum07"},"content":"                    }","lastModifiedDate":"2021-08-26"},{"lineNumber":279,"author":{"gitId":"Agentum07"},"content":"                    items.addItem(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":280,"author":{"gitId":"Agentum07"},"content":"                }","lastModifiedDate":"2021-08-26"},{"lineNumber":281,"author":{"gitId":"Agentum07"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":282,"author":{"gitId":"Agentum07"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":283,"author":{"gitId":"Agentum07"},"content":"            printMessage(\"No Saved data found\");","lastModifiedDate":"2021-08-26"},{"lineNumber":284,"author":{"gitId":"Agentum07"},"content":"            return fileList;","lastModifiedDate":"2021-08-27"},{"lineNumber":285,"author":{"gitId":"Agentum07"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":286,"author":{"gitId":"Agentum07"},"content":"        return fileList;","lastModifiedDate":"2021-08-27"},{"lineNumber":287,"author":{"gitId":"Agentum07"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":288,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":289,"author":{"gitId":"Agentum07"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":290,"author":{"gitId":"Agentum07"},"content":"     * Parses a raw date string as input into a valid date and time string.","lastModifiedDate":"2021-08-26"},{"lineNumber":291,"author":{"gitId":"Agentum07"},"content":"     * @param input The raw date string","lastModifiedDate":"2021-08-26"},{"lineNumber":292,"author":{"gitId":"Agentum07"},"content":"     * @return A string valid as a date","lastModifiedDate":"2021-08-26"},{"lineNumber":293,"author":{"gitId":"Agentum07"},"content":"     * @throws DukeException Thrown if the input is an invalid date","lastModifiedDate":"2021-08-26"},{"lineNumber":294,"author":{"gitId":"Agentum07"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":295,"author":{"gitId":"Agentum07"},"content":"    private static String parseDate(String input) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":296,"author":{"gitId":"Agentum07"},"content":"        String[] dateTime \u003d input.split(\"\\\\s+\");","lastModifiedDate":"2021-08-26"},{"lineNumber":297,"author":{"gitId":"Agentum07"},"content":"        int len \u003d dateTime.length;","lastModifiedDate":"2021-08-26"},{"lineNumber":298,"author":{"gitId":"Agentum07"},"content":"        String formatPattern \u003d \"yyyy-MM-dd\";","lastModifiedDate":"2021-08-26"},{"lineNumber":299,"author":{"gitId":"Agentum07"},"content":"        if (len \u003c 1 || len \u003e 2) {","lastModifiedDate":"2021-08-26"},{"lineNumber":300,"author":{"gitId":"Agentum07"},"content":"            throw new DukeException(\"Invalid format, please specify both Date and Time (eg. 2/12/2019 1900)\");","lastModifiedDate":"2021-08-27"},{"lineNumber":301,"author":{"gitId":"Agentum07"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":302,"author":{"gitId":"Agentum07"},"content":"        String result \u003d \"\";","lastModifiedDate":"2021-08-26"},{"lineNumber":303,"author":{"gitId":"Agentum07"},"content":"        if (dateTime[0].equals(\"today\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":304,"author":{"gitId":"Agentum07"},"content":"            LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2021-08-26"},{"lineNumber":305,"author":{"gitId":"Agentum07"},"content":"            result +\u003d date.format(DateTimeFormatter.ofPattern(formatPattern));","lastModifiedDate":"2021-08-26"},{"lineNumber":306,"author":{"gitId":"Agentum07"},"content":"        } else if (dateTime[0].equals(\"tomorrow\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":307,"author":{"gitId":"Agentum07"},"content":"            LocalDate date \u003d LocalDate.now().plusDays(1);","lastModifiedDate":"2021-08-26"},{"lineNumber":308,"author":{"gitId":"Agentum07"},"content":"            result +\u003d date.format(DateTimeFormatter.ofPattern(formatPattern));","lastModifiedDate":"2021-08-26"},{"lineNumber":309,"author":{"gitId":"Agentum07"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":310,"author":{"gitId":"Agentum07"},"content":"            // Date","lastModifiedDate":"2021-08-26"},{"lineNumber":311,"author":{"gitId":"Agentum07"},"content":"            String[] date1 \u003d dateTime[0].split(\"-\");","lastModifiedDate":"2021-08-26"},{"lineNumber":312,"author":{"gitId":"Agentum07"},"content":"            String[] date2 \u003d dateTime[0].split(\"/\");","lastModifiedDate":"2021-08-26"},{"lineNumber":313,"author":{"gitId":"Agentum07"},"content":"            if (date1.length \u003d\u003d 3 || date2.length \u003d\u003d 3) {","lastModifiedDate":"2021-08-26"},{"lineNumber":314,"author":{"gitId":"Agentum07"},"content":"                result \u003d date1.length \u003d\u003d 3 ? stringToDate(date1) : stringToDate(date2);","lastModifiedDate":"2021-08-26"},{"lineNumber":315,"author":{"gitId":"Agentum07"},"content":"            } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":316,"author":{"gitId":"Agentum07"},"content":"                throw new DukeException(\"Invalid date. Accepted formats: DD/MM/YYYY.\");","lastModifiedDate":"2021-08-27"},{"lineNumber":317,"author":{"gitId":"Agentum07"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":318,"author":{"gitId":"Agentum07"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":319,"author":{"gitId":"Agentum07"},"content":"        // Time","lastModifiedDate":"2021-08-26"},{"lineNumber":320,"author":{"gitId":"Agentum07"},"content":"        if (dateTime.length \u003d\u003d 2) {","lastModifiedDate":"2021-08-26"},{"lineNumber":321,"author":{"gitId":"Agentum07"},"content":"            result +\u003d \"T\" + stringToTime(dateTime[1]);","lastModifiedDate":"2021-08-26"},{"lineNumber":322,"author":{"gitId":"Agentum07"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":323,"author":{"gitId":"Agentum07"},"content":"            result +\u003d \"T23:59\";","lastModifiedDate":"2021-08-26"},{"lineNumber":324,"author":{"gitId":"Agentum07"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":325,"author":{"gitId":"Agentum07"},"content":"        return result;","lastModifiedDate":"2021-08-26"},{"lineNumber":326,"author":{"gitId":"Agentum07"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":327,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":328,"author":{"gitId":"Agentum07"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":329,"author":{"gitId":"Agentum07"},"content":"     * Converts a string to time","lastModifiedDate":"2021-08-26"},{"lineNumber":330,"author":{"gitId":"Agentum07"},"content":"     * @param time The time in the form of a string","lastModifiedDate":"2021-08-26"},{"lineNumber":331,"author":{"gitId":"Agentum07"},"content":"     * @return The string representation of the time","lastModifiedDate":"2021-08-26"},{"lineNumber":332,"author":{"gitId":"Agentum07"},"content":"     * @throws DukeException Thrown if the time is invalid","lastModifiedDate":"2021-08-26"},{"lineNumber":333,"author":{"gitId":"Agentum07"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":334,"author":{"gitId":"Agentum07"},"content":"    private static String stringToTime(String time) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":335,"author":{"gitId":"Agentum07"},"content":"        String[] splitTime \u003d time.split(\":\");","lastModifiedDate":"2021-08-26"},{"lineNumber":336,"author":{"gitId":"Agentum07"},"content":"        if (splitTime.length \u003e 2 || splitTime.length \u003c 1) {","lastModifiedDate":"2021-08-26"},{"lineNumber":337,"author":{"gitId":"Agentum07"},"content":"            throw new DukeException(\"Invalid time.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":338,"author":{"gitId":"Agentum07"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":339,"author":{"gitId":"Agentum07"},"content":"        for (String s : splitTime) {","lastModifiedDate":"2021-08-26"},{"lineNumber":340,"author":{"gitId":"Agentum07"},"content":"            try {","lastModifiedDate":"2021-08-26"},{"lineNumber":341,"author":{"gitId":"Agentum07"},"content":"                // Check if all the string are numbers:","lastModifiedDate":"2021-08-26"},{"lineNumber":342,"author":{"gitId":"Agentum07"},"content":"                Integer.parseInt(s);","lastModifiedDate":"2021-08-26"},{"lineNumber":343,"author":{"gitId":"Agentum07"},"content":"            } catch (Exception e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":344,"author":{"gitId":"Agentum07"},"content":"                System.out.println(\"Time is not a number\");","lastModifiedDate":"2021-08-26"},{"lineNumber":345,"author":{"gitId":"Agentum07"},"content":"                throw new DukeException(\"Time is invalid.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":346,"author":{"gitId":"Agentum07"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":347,"author":{"gitId":"Agentum07"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":348,"author":{"gitId":"Agentum07"},"content":"        if (splitTime.length \u003d\u003d 2) {","lastModifiedDate":"2021-08-26"},{"lineNumber":349,"author":{"gitId":"Agentum07"},"content":"            // in the form of [hh, mm]","lastModifiedDate":"2021-08-26"},{"lineNumber":350,"author":{"gitId":"Agentum07"},"content":"            if (","lastModifiedDate":"2021-08-26"},{"lineNumber":351,"author":{"gitId":"Agentum07"},"content":"                    (splitTime[0].length() \u003d\u003d 2 || splitTime[0].length() \u003d\u003d 1) \u0026\u0026","lastModifiedDate":"2021-08-26"},{"lineNumber":352,"author":{"gitId":"Agentum07"},"content":"                            (splitTime[1].length() \u003d\u003d 2)","lastModifiedDate":"2021-08-26"},{"lineNumber":353,"author":{"gitId":"Agentum07"},"content":"            ) {","lastModifiedDate":"2021-08-26"},{"lineNumber":354,"author":{"gitId":"Agentum07"},"content":"                String hh \u003d String.format(\"%02d\", Integer.parseInt(splitTime[0]));","lastModifiedDate":"2021-08-26"},{"lineNumber":355,"author":{"gitId":"Agentum07"},"content":"                String mm \u003d String.format(\"%02d\", Integer.parseInt(splitTime[1]));","lastModifiedDate":"2021-08-26"},{"lineNumber":356,"author":{"gitId":"Agentum07"},"content":"                return hh + \":\" + mm;","lastModifiedDate":"2021-08-26"},{"lineNumber":357,"author":{"gitId":"Agentum07"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":358,"author":{"gitId":"Agentum07"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":359,"author":{"gitId":"Agentum07"},"content":"            // in the form of [hhmm]","lastModifiedDate":"2021-08-26"},{"lineNumber":360,"author":{"gitId":"Agentum07"},"content":"            if (","lastModifiedDate":"2021-08-26"},{"lineNumber":361,"author":{"gitId":"Agentum07"},"content":"                    (splitTime[0].length() \u003d\u003d 3 || splitTime[0].length() \u003d\u003d 4)","lastModifiedDate":"2021-08-26"},{"lineNumber":362,"author":{"gitId":"Agentum07"},"content":"            ) {","lastModifiedDate":"2021-08-26"},{"lineNumber":363,"author":{"gitId":"Agentum07"},"content":"                String hh \u003d splitTime[0].length() \u003d\u003d 3 ? splitTime[0].substring(0, 1) : splitTime[0].substring(0, 2);","lastModifiedDate":"2021-08-26"},{"lineNumber":364,"author":{"gitId":"Agentum07"},"content":"                String mm \u003d splitTime[0].length() \u003d\u003d 3 ? splitTime[0].substring(1, 3) : splitTime[0].substring(2, 4);","lastModifiedDate":"2021-08-26"},{"lineNumber":365,"author":{"gitId":"Agentum07"},"content":"                hh \u003d String.format(\"%02d\", Integer.parseInt(hh));","lastModifiedDate":"2021-08-26"},{"lineNumber":366,"author":{"gitId":"Agentum07"},"content":"                mm \u003d String.format(\"%02d\", Integer.parseInt(mm));","lastModifiedDate":"2021-08-26"},{"lineNumber":367,"author":{"gitId":"Agentum07"},"content":"                return hh + \":\" + mm;","lastModifiedDate":"2021-08-26"},{"lineNumber":368,"author":{"gitId":"Agentum07"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":369,"author":{"gitId":"Agentum07"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":370,"author":{"gitId":"Agentum07"},"content":"        throw new DukeException(\"Date is invalid.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":371,"author":{"gitId":"Agentum07"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":372,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":373,"author":{"gitId":"Agentum07"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":374,"author":{"gitId":"Agentum07"},"content":"     * Converts a date array to a date string","lastModifiedDate":"2021-08-26"},{"lineNumber":375,"author":{"gitId":"Agentum07"},"content":"     * @param date A String array e.g. [yyyy, mm, dd]","lastModifiedDate":"2021-08-26"},{"lineNumber":376,"author":{"gitId":"Agentum07"},"content":"     * @return Null if invalid, else a string representation of the date -\u003e yyyy-mm-dd","lastModifiedDate":"2021-08-26"},{"lineNumber":377,"author":{"gitId":"Agentum07"},"content":"     * @throws DukeException An invalid date will produce this","lastModifiedDate":"2021-08-26"},{"lineNumber":378,"author":{"gitId":"Agentum07"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":379,"author":{"gitId":"Agentum07"},"content":"    private static String stringToDate(String[] date) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":380,"author":{"gitId":"Agentum07"},"content":"        // can be [yyyy, mm, dd] or [dd, mm, yyyy]","lastModifiedDate":"2021-08-26"},{"lineNumber":381,"author":{"gitId":"Agentum07"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":382,"author":{"gitId":"Agentum07"},"content":"            // Check if all the string are numbers:","lastModifiedDate":"2021-08-26"},{"lineNumber":383,"author":{"gitId":"Agentum07"},"content":"            Integer.parseInt(date[0]);","lastModifiedDate":"2021-08-26"},{"lineNumber":384,"author":{"gitId":"Agentum07"},"content":"            Integer.parseInt(date[1]);","lastModifiedDate":"2021-08-26"},{"lineNumber":385,"author":{"gitId":"Agentum07"},"content":"            Integer.parseInt(date[2]);","lastModifiedDate":"2021-08-26"},{"lineNumber":386,"author":{"gitId":"Agentum07"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":387,"author":{"gitId":"Agentum07"},"content":"            throw new DukeException(\"Date is not a number.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":388,"author":{"gitId":"Agentum07"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":389,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":390,"author":{"gitId":"Agentum07"},"content":"        if (","lastModifiedDate":"2021-08-26"},{"lineNumber":391,"author":{"gitId":"Agentum07"},"content":"                date[0].length() \u003d\u003d 4 \u0026\u0026","lastModifiedDate":"2021-08-26"},{"lineNumber":392,"author":{"gitId":"Agentum07"},"content":"                        (date[1].length() \u003d\u003d 1 || date[1].length() \u003d\u003d 2) \u0026\u0026","lastModifiedDate":"2021-08-26"},{"lineNumber":393,"author":{"gitId":"Agentum07"},"content":"                        (date[2].length() \u003d\u003d 1 || date[2].length() \u003d\u003d 2)","lastModifiedDate":"2021-08-26"},{"lineNumber":394,"author":{"gitId":"Agentum07"},"content":"        ) {","lastModifiedDate":"2021-08-26"},{"lineNumber":395,"author":{"gitId":"Agentum07"},"content":"            // In the form of [yyyy, mm, dd]","lastModifiedDate":"2021-08-26"},{"lineNumber":396,"author":{"gitId":"Agentum07"},"content":"            String year \u003d date[0];","lastModifiedDate":"2021-08-26"},{"lineNumber":397,"author":{"gitId":"Agentum07"},"content":"            String month \u003d String.format(\"%02d\", Integer.parseInt(date[1]));","lastModifiedDate":"2021-08-26"},{"lineNumber":398,"author":{"gitId":"Agentum07"},"content":"            String day \u003d String.format(\"%02d\", Integer.parseInt(date[2]));","lastModifiedDate":"2021-08-26"},{"lineNumber":399,"author":{"gitId":"Agentum07"},"content":"            return year + \"-\" + month + \"-\" + day;","lastModifiedDate":"2021-08-26"},{"lineNumber":400,"author":{"gitId":"Agentum07"},"content":"        } else if (","lastModifiedDate":"2021-08-26"},{"lineNumber":401,"author":{"gitId":"Agentum07"},"content":"                (date[0].length() \u003d\u003d 1 || date[0].length() \u003d\u003d 2) \u0026\u0026","lastModifiedDate":"2021-08-26"},{"lineNumber":402,"author":{"gitId":"Agentum07"},"content":"                        (date[1].length() \u003d\u003d 1 || date[1].length() \u003d\u003d 2) \u0026\u0026","lastModifiedDate":"2021-08-26"},{"lineNumber":403,"author":{"gitId":"Agentum07"},"content":"                        (date[2].length() \u003d\u003d 4)","lastModifiedDate":"2021-08-26"},{"lineNumber":404,"author":{"gitId":"Agentum07"},"content":"        ) {","lastModifiedDate":"2021-08-26"},{"lineNumber":405,"author":{"gitId":"Agentum07"},"content":"            // In the form of [dd, mm, yyyy]","lastModifiedDate":"2021-08-26"},{"lineNumber":406,"author":{"gitId":"Agentum07"},"content":"            String year \u003d date[2];","lastModifiedDate":"2021-08-26"},{"lineNumber":407,"author":{"gitId":"Agentum07"},"content":"            String month \u003d String.format(\"%02d\", Integer.parseInt(date[1]));","lastModifiedDate":"2021-08-26"},{"lineNumber":408,"author":{"gitId":"Agentum07"},"content":"            String day \u003d String.format(\"%02d\", Integer.parseInt(date[0]));","lastModifiedDate":"2021-08-26"},{"lineNumber":409,"author":{"gitId":"Agentum07"},"content":"            return year + \"-\" + month + \"-\" + day;","lastModifiedDate":"2021-08-26"},{"lineNumber":410,"author":{"gitId":"Agentum07"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":411,"author":{"gitId":"Agentum07"},"content":"        throw new DukeException(\"Invalid date. Please use the format DD-MM-YYYY or MM-DD-YYYY or YYYY-MM-DD\");","lastModifiedDate":"2021-08-27"},{"lineNumber":412,"author":{"gitId":"Agentum07"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":413,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":414,"author":{"gitId":"Agentum07"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":415,"author":{"gitId":"Agentum07"},"content":"     * print all bot messages in a specific format.","lastModifiedDate":"2021-08-26"},{"lineNumber":416,"author":{"gitId":"Agentum07"},"content":"     * @param message message from the bot.","lastModifiedDate":"2021-08-26"},{"lineNumber":417,"author":{"gitId":"Agentum07"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":418,"author":{"gitId":"Agentum07"},"content":"    private static void printMessage(String message) {","lastModifiedDate":"2021-08-26"},{"lineNumber":419,"author":{"gitId":"Agentum07"},"content":"        message \u003d SPACE + message.replace(\"\\n\", \"\\n\" + SPACE);","lastModifiedDate":"2021-08-26"},{"lineNumber":420,"author":{"gitId":"Agentum07"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-26"},{"lineNumber":421,"author":{"gitId":"Agentum07"},"content":"        System.out.println(message);","lastModifiedDate":"2021-08-26"},{"lineNumber":422,"author":{"gitId":"Agentum07"},"content":"        System.out.println(END_LINE);","lastModifiedDate":"2021-08-26"},{"lineNumber":423,"author":{"gitId":"Agentum07"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":424,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":425,"author":{"gitId":"Agentum07"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":426,"author":{"gitId":"Agentum07"},"content":"     * The main function of Bhutu","lastModifiedDate":"2021-08-19"},{"lineNumber":427,"author":{"gitId":"Agentum07"},"content":"     * @param args The command line arguments","lastModifiedDate":"2021-08-19"},{"lineNumber":428,"author":{"gitId":"Agentum07"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":429,"author":{"gitId":"Agentum07"},"content":"    public static void main(String[] args) throws IOException, DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":430,"author":{"gitId":"Agentum07"},"content":"        String logo \u003d \"\\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":431,"author":{"gitId":"Agentum07"},"content":"                \"███████████████████████████████\\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":432,"author":{"gitId":"Agentum07"},"content":"                \"█▄─▄─▀█─█─█▄─██─▄█─▄─▄─█▄─██─▄█\\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":433,"author":{"gitId":"Agentum07"},"content":"                \"██─▄─▀█─▄─██─██─████─████─██─██\\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":434,"author":{"gitId":"Agentum07"},"content":"                \"▀▄▄▄▄▀▀▄▀▄▀▀▄▄▄▄▀▀▀▄▄▄▀▀▀▄▄▄▄▀▀\";","lastModifiedDate":"2021-08-19"},{"lineNumber":435,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":436,"author":{"gitId":"Agentum07"},"content":"        System.out.println(logo);","lastModifiedDate":"2021-08-19"},{"lineNumber":437,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":438,"author":{"gitId":"Agentum07"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2021-08-19"},{"lineNumber":439,"author":{"gitId":"Agentum07"},"content":"        duke.greet();","lastModifiedDate":"2021-08-19"},{"lineNumber":440,"author":{"gitId":"Agentum07"},"content":"        duke.interact();","lastModifiedDate":"2021-08-19"},{"lineNumber":441,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":442,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":3,"Agentum07":439}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Agentum07"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"Agentum07"},"content":" * Exception for the Duke app","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"Agentum07"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"Agentum07"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"Agentum07"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"Agentum07"},"content":"     * Constructor","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"Agentum07"},"content":"     * @param message The exception message.","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"Agentum07"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"Agentum07"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"Agentum07"},"content":"        super(message);","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"Agentum07"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"Agentum07"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"Agentum07":13}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Agentum07"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"Agentum07"},"content":" * A task of type Event","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"Agentum07"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"Agentum07"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"Agentum07"},"content":"    protected String at;","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"Agentum07"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"Agentum07"},"content":"     * constructor of the class","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"Agentum07"},"content":"     * @param description description of the task","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"Agentum07"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"Agentum07"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"Agentum07"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"Agentum07"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"Agentum07"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"Agentum07"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"Agentum07"},"content":"     * String representation of event","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"Agentum07"},"content":"     * @return String representation of event","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"Agentum07"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"Agentum07"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"Agentum07"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"Agentum07"},"content":"        return \"E \" + super.toString() + \" | \" + at;","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"Agentum07"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"Agentum07"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"Agentum07":25}},{"path":"src/main/java/Items.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Agentum07"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"Agentum07"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"Agentum07"},"content":" * The items in the bot","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"Agentum07"},"content":" * responsible for adding things to the list of items","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"Agentum07"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"Agentum07"},"content":"public class Items {","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"Agentum07"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"Agentum07"},"content":"     * items to be stored in the list.","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"Agentum07"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"Agentum07"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"Agentum07"},"content":"    public Items() {","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"Agentum07"},"content":"        list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"Agentum07"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"Agentum07"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"Agentum07"},"content":"     * Add an item to the list.","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"Agentum07"},"content":"     * @param task A task to represent the item added","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"Agentum07"},"content":"     * @return A status message to be displayed","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"Agentum07"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"Agentum07"},"content":"    public String addItem(Task task) {","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"Agentum07"},"content":"        list.add(task);","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"Agentum07"},"content":"        String output \u003d \"Got it, I\u0027ve added this task:\\n\" + task.toString();","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"Agentum07"},"content":"        output +\u003d \"\\nNow you have \" + list.size() + \" tasks in the list.\";","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"Agentum07"},"content":"        return output;","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"Agentum07"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"Agentum07"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"Agentum07"},"content":"     * marks the specified task as done","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"Agentum07"},"content":"     * @param index the index at which the task is.","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"Agentum07"},"content":"     * @return error message if index is greater than the length of list, else completion message.","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"Agentum07"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"Agentum07"},"content":"    public String markDone(int index) throws DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"Agentum07"},"content":"        if (index \u003c 0) {","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"Agentum07"},"content":"            throw new DukeException(\"Invalid index. Only positive values are accepted.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"Agentum07"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"Agentum07"},"content":"        if (list.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"Agentum07"},"content":"            throw new DukeException(\"You have 0 tasks. Add some tasks first.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"Agentum07"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"Agentum07"},"content":"        if (index \u003e list.size()) {","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"Agentum07"},"content":"            throw new DukeException(\"You don\u0027t have these many tasks!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"Agentum07"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"Agentum07"},"content":"        Task task \u003d list.get(index - 1);","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"Agentum07"},"content":"        return task.doneTask();","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"Agentum07"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"Agentum07"},"content":"    public String deleteItem(int index) throws DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"Agentum07"},"content":"        if (index \u003c 0) {","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"Agentum07"},"content":"            throw new DukeException(\"Invalid index. Only positive values are accepted.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"Agentum07"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"Agentum07"},"content":"        if (list.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"Agentum07"},"content":"            throw new DukeException(\"You have 0 tasks. Add some tasks first.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"Agentum07"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"Agentum07"},"content":"        if (index \u003e list.size()) {","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"Agentum07"},"content":"            throw new DukeException(\"You don\u0027t have these many tasks!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"Agentum07"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"Agentum07"},"content":"        Task task \u003d list.get(index - 1);","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"Agentum07"},"content":"        list.remove(index - 1);","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"Agentum07"},"content":"        String output \u003d \"Noted. I have removed this task:\\n\" + task.toString()","lastModifiedDate":"2021-08-19"},{"lineNumber":63,"author":{"gitId":"Agentum07"},"content":"                + \"\\n Number of tasks remaining: \" + list.size();","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"Agentum07"},"content":"        return output;","lastModifiedDate":"2021-08-19"},{"lineNumber":65,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":66,"author":{"gitId":"Agentum07"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":68,"author":{"gitId":"Agentum07"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"Agentum07"},"content":"     * The String representation of the items object.","lastModifiedDate":"2021-08-19"},{"lineNumber":70,"author":{"gitId":"Agentum07"},"content":"     * @return The String representation of the items object.","lastModifiedDate":"2021-08-19"},{"lineNumber":71,"author":{"gitId":"Agentum07"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":72,"author":{"gitId":"Agentum07"},"content":"    public String printList() throws DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":73,"author":{"gitId":"Agentum07"},"content":"        if (list.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-19"},{"lineNumber":74,"author":{"gitId":"Agentum07"},"content":"            throw new DukeException(\"You have 0 items in your list\");","lastModifiedDate":"2021-08-19"},{"lineNumber":75,"author":{"gitId":"Agentum07"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":76,"author":{"gitId":"Agentum07"},"content":"        StringBuilder str \u003d new StringBuilder(\"These are your tasks: \\n\");","lastModifiedDate":"2021-08-19"},{"lineNumber":77,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":78,"author":{"gitId":"Agentum07"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2021-08-19"},{"lineNumber":79,"author":{"gitId":"Agentum07"},"content":"            if (i \u003c list.size() - 1) {","lastModifiedDate":"2021-08-19"},{"lineNumber":80,"author":{"gitId":"Agentum07"},"content":"                str.append(\" \").append(i + 1).append(\". \").append(list.get(i).toString()).append(\"\\n\");","lastModifiedDate":"2021-08-19"},{"lineNumber":81,"author":{"gitId":"Agentum07"},"content":"            } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":82,"author":{"gitId":"Agentum07"},"content":"                str.append(\" \").append(i + 1).append(\". \").append(list.get(i).toString());","lastModifiedDate":"2021-08-19"},{"lineNumber":83,"author":{"gitId":"Agentum07"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":84,"author":{"gitId":"Agentum07"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":85,"author":{"gitId":"Agentum07"},"content":"        return str.toString();","lastModifiedDate":"2021-08-19"},{"lineNumber":86,"author":{"gitId":"Agentum07"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":87,"author":{"gitId":"Agentum07"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"Agentum07":87}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Agentum07"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"Agentum07"},"content":" * the task in the list","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"Agentum07"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"Agentum07"},"content":"public class Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"Agentum07"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"Agentum07"},"content":"     * description of the task","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"Agentum07"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"Agentum07"},"content":"    protected String description;","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"Agentum07"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"Agentum07"},"content":"     * The task status. True if it is done, else false","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"Agentum07"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"Agentum07"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"Agentum07"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"Agentum07"},"content":"     * Create a new Task object (Constructor)","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"Agentum07"},"content":"     * @param description The new task description","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"Agentum07"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"Agentum07"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"Agentum07"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"Agentum07"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"Agentum07"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"Agentum07"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"Agentum07"},"content":"     * Gets the task status icon","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"Agentum07"},"content":"     * @return \"X\" if the test is done, else \" \"","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"Agentum07"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"Agentum07"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"Agentum07"},"content":"        return (isDone ? \"1\" : \"0\"); // mark done task with X","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"Agentum07"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"Agentum07"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"Agentum07"},"content":"     * Marks the task as done","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"Agentum07"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"Agentum07"},"content":"    public String doneTask() {","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"Agentum07"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"Agentum07"},"content":"        String str \u003d \"Nice! I\u0027ve marked this task as done: \\n\" + this.toString();","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"Agentum07"},"content":"        return str;","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"Agentum07"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"Agentum07"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"Agentum07"},"content":"     * The task string representation","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"Agentum07"},"content":"     * @return The description of the task","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"Agentum07"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"Agentum07"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"Agentum07"},"content":"        return \"| \" + getStatusIcon() + \" | \" + description;","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"Agentum07"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"Agentum07"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"Agentum07":48}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Agentum07"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"Agentum07"},"content":" * A task of type todo","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"Agentum07"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"Agentum07"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"Agentum07"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"Agentum07"},"content":"     * constructor of the class","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"Agentum07"},"content":"     * @param description description of the task","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"Agentum07"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"Agentum07"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"Agentum07"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"Agentum07"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"Agentum07"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"Agentum07"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"Agentum07"},"content":"     * The string representation of todo","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"Agentum07"},"content":"     * @return string representation of todo","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"Agentum07"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"Agentum07"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"Agentum07"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"Agentum07"},"content":"        return \"T \" + super.toString();","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"Agentum07"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"Agentum07"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"Agentum07":22}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Agentum07"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"Agentum07"},"content":"todo read book","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"Agentum07"},"content":"deadline return book /by June 6th","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"Agentum07"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"Agentum07"},"content":"todo join sports club","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"Agentum07"},"content":"todo borrow book","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"Agentum07"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"Agentum07"},"content":"done 1","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"Agentum07"},"content":"done 4","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"Agentum07"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"Agentum07"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"Agentum07":11}}]
