[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xnajasho"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"xnajasho"},"content":"import duke.commands.Command;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"xnajasho"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"xnajasho"},"content":"import duke.exceptions.InvalidDirectoryException;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"xnajasho"},"content":"import duke.exceptions.InvalidStorageFilePathException;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"xnajasho"},"content":"public class Duke {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"xnajasho"},"content":"    private Storage storage;  // deals with loading tasks from the file and saving tasks in the file","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"xnajasho"},"content":"    private TaskList tasks;  // contains the task list: has operations to add/delete tasks in the list","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"xnajasho"},"content":"    private Ui ui;          // deals with interactions with the user","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"xnajasho"},"content":"    Duke(String filePath)  {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"xnajasho"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"xnajasho"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"xnajasho"},"content":"            storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"xnajasho"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"xnajasho"},"content":"        } catch (InvalidStorageFilePathException isfpe) {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"xnajasho"},"content":"            ui.showError(isfpe.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"xnajasho"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"xnajasho"},"content":"            ui.showLoadingError();","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"xnajasho"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"xnajasho"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"xnajasho"},"content":"    public void run() {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"xnajasho"},"content":"        this.ui.showWelcomeMessage();","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"xnajasho"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"xnajasho"},"content":"        while (!isExit) {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"xnajasho"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"xnajasho"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"xnajasho"},"content":"                ui.showLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"xnajasho"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"xnajasho"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"xnajasho"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"xnajasho"},"content":"            } catch (InvalidDirectoryException ide) {","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"xnajasho"},"content":"                ui.showError(ide.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"xnajasho"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"xnajasho"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"xnajasho"},"content":"            } finally {","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"xnajasho"},"content":"                ui.showLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"xnajasho"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"xnajasho"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"xnajasho"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"xnajasho"},"content":"        new Duke(\"data/tasklist.txt\").run();","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"xnajasho"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"xnajasho":52}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xnajasho"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"xnajasho"},"content":"import duke.commands.Command;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"xnajasho"},"content":"import duke.commands.AddCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"xnajasho"},"content":"import duke.commands.DeleteCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"xnajasho"},"content":"import duke.commands.DoneCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"xnajasho"},"content":"import duke.commands.ExitCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"xnajasho"},"content":"import duke.commands.ListCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"xnajasho"},"content":"import duke.commands.UnknownCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"xnajasho"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"xnajasho"},"content":"import duke.exceptions.InvalidInputException;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"xnajasho"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"xnajasho"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"xnajasho"},"content":"public class Parser {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"xnajasho"},"content":"    public static Command parse(String fullCommand) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"xnajasho"},"content":"        String firstWord;","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"xnajasho"},"content":"        String remainingWords \u003d \"\";","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"xnajasho"},"content":"        if (fullCommand.contains(\" \")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"xnajasho"},"content":"            firstWord \u003d Parser.getFirstWord(fullCommand);","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"xnajasho"},"content":"            remainingWords \u003d Parser.getRestOfWords(fullCommand);","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"xnajasho"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"xnajasho"},"content":"            firstWord \u003d fullCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"xnajasho"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"xnajasho"},"content":"        Command c;","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"xnajasho"},"content":"        switch (firstWord) {","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"xnajasho"},"content":"        case \"list\":","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"xnajasho"},"content":"            c \u003d new ListCommand();","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"xnajasho"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"xnajasho"},"content":"        case \"bye\":","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"xnajasho"},"content":"            c \u003d new ExitCommand();","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"xnajasho"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"xnajasho"},"content":"        case \"done\":","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"xnajasho"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"xnajasho"},"content":"                int doneIndex \u003d Integer.parseInt(remainingWords);","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"xnajasho"},"content":"                c \u003d new DoneCommand(doneIndex);","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"xnajasho"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"xnajasho"},"content":"                throw new InvalidInputException(\"   Please specify the TASK NUMBER after typing \u0027done\u0027\");","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"xnajasho"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"xnajasho"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"xnajasho"},"content":"        case \"todo\": case \"deadline\": case \"event\":","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"xnajasho"},"content":"            c \u003d new AddCommand(firstWord, remainingWords);","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"xnajasho"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"xnajasho"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"xnajasho"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"xnajasho"},"content":"                int deleteIndex \u003d Integer.parseInt(remainingWords);","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"xnajasho"},"content":"                c \u003d new DeleteCommand(deleteIndex);","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"xnajasho"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"xnajasho"},"content":"                throw new InvalidInputException(\"   Please specify the TASK NUMBER after typing \u0027delete\u0027\");","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"xnajasho"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"xnajasho"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"xnajasho"},"content":"        default:","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"xnajasho"},"content":"            c \u003d new UnknownCommand();","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"xnajasho"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"xnajasho"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"xnajasho"},"content":"        return c;","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"xnajasho"},"content":"    public static String[] parseDeadline(String deadlineDescription) {","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"xnajasho"},"content":"        String[] arr \u003d deadlineDescription.split(\"/by\", 2);","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"xnajasho"},"content":"        arr[0] \u003d arr[0].trim();","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"xnajasho"},"content":"        arr[1] \u003d parseDate(arr[1].trim());","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"xnajasho"},"content":"        return arr;","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"xnajasho"},"content":"    public static String[] parseEvent(String eventDescription) {","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"xnajasho"},"content":"        String[] arr \u003d eventDescription.split(\"/at\", 2);","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"xnajasho"},"content":"        arr[0] \u003d arr[0].trim();","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"xnajasho"},"content":"        arr[1] \u003d parseDate(arr[1].trim());","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"xnajasho"},"content":"        return arr;","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"xnajasho"},"content":"    public static String parseDate(String inputDate) {","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"xnajasho"},"content":"        String output;","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"xnajasho"},"content":"        String[] dayTimeArr \u003d inputDate.split(\" \");","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"xnajasho"},"content":"        LocalDate date \u003d LocalDate.parse(dayTimeArr[0]);","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"xnajasho"},"content":"        if (dayTimeArr.length \u003d\u003d 2) { // if there is a time to it","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"xnajasho"},"content":"            output \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" \" + dayTimeArr[1];","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"xnajasho"},"content":"        } else { // just the date","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"xnajasho"},"content":"            output \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"xnajasho"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"xnajasho"},"content":"        return output;","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"xnajasho"},"content":"    public static String getFirstWord(String input) {","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"xnajasho"},"content":"        String[] arr \u003d input.split(\" \", 2);","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"xnajasho"},"content":"        return arr[0];","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"xnajasho"},"content":"    public static String getRestOfWords(String input) {","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"xnajasho"},"content":"        String[] arr \u003d input.split(\" \", 2);","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"xnajasho"},"content":"        return arr[1];","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"xnajasho"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"xnajasho":98}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xnajasho"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"xnajasho"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"xnajasho"},"content":"import duke.exceptions.InvalidDirectoryException;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"xnajasho"},"content":"import duke.exceptions.InvalidStorageFilePathException;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"xnajasho"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"xnajasho"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"xnajasho"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"xnajasho"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"xnajasho"},"content":"import java.io.File;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"xnajasho"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"xnajasho"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"xnajasho"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"xnajasho"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"xnajasho"},"content":"import java.nio.file.StandardOpenOption;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"xnajasho"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"xnajasho"},"content":"import java.util.List;","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"xnajasho"},"content":"public class Storage {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"xnajasho"},"content":"    private final String givenFilePath;","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"xnajasho"},"content":"    private static final String PROJECT_DIRECTORY \u003d System.getProperty(\"user.dir\") + \"/src/main/java/duke\";","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"xnajasho"},"content":"    private Path p;","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"xnajasho"},"content":"    Storage(String givenFilePath) throws InvalidStorageFilePathException {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"xnajasho"},"content":"        this.givenFilePath \u003d givenFilePath;","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"xnajasho"},"content":"        File currDir \u003d new File(PROJECT_DIRECTORY);","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"xnajasho"},"content":"        File finalPath \u003d new File(currDir, givenFilePath);","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"xnajasho"},"content":"        p \u003d Paths.get(finalPath.getPath());","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"xnajasho"},"content":"        if (!isValidPath(p)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"xnajasho"},"content":"            throw new InvalidStorageFilePathException(\"   Storage filepath should end with \u0027.txt\u0027\");","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"xnajasho"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"xnajasho"},"content":"        if (!isValidDirectory(givenFilePath)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"xnajasho"},"content":"            throw new InvalidDirectoryException(\"   1 or more directories in the specified file path does not exist\");","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"xnajasho"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"xnajasho"},"content":"    public static boolean isValidPath(Path filepath) {","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"xnajasho"},"content":"        return filepath.toString().endsWith(\".txt\");","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"xnajasho"},"content":"    public static boolean isValidDirectory(String filePath) {","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"xnajasho"},"content":"        String[] folderNames \u003d filePath.split(\"/\");","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"xnajasho"},"content":"        String currentPath \u003d PROJECT_DIRECTORY;","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"xnajasho"},"content":"        for (String folder: folderNames) {","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"xnajasho"},"content":"            File file \u003d new File(currentPath);","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"xnajasho"},"content":"            if (!file.exists()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"xnajasho"},"content":"                return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"xnajasho"},"content":"            } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"xnajasho"},"content":"                currentPath +\u003d \"/\" + folder;","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"xnajasho"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"xnajasho"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"xnajasho"},"content":"        return true;","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"xnajasho"},"content":"    public List\u003cTask\u003e load() throws InvalidStorageFilePathException, DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"xnajasho"},"content":"        List\u003cTask\u003e lt \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"xnajasho"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"xnajasho"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(p);","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"xnajasho"},"content":"            for (String s: lines) {","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"xnajasho"},"content":"                lt.add(convertToTask(s));","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"xnajasho"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"xnajasho"},"content":"            System.out.println(\"   Autosave feature detected. Please type \u0027list\u0027 to view previously saved tasks...\");","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"xnajasho"},"content":"            return lt;","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"xnajasho"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"xnajasho"},"content":"            System.out.println(\"   FILE NOT FOUND ERROR: Creating empty tasklist...\");","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"xnajasho"},"content":"            String createdPath \u003d PROJECT_DIRECTORY + \"/\" + givenFilePath;","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"xnajasho"},"content":"            File tempfile \u003d new File(createdPath);","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"xnajasho"},"content":"            System.out.println(tempfile.getAbsolutePath());","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"xnajasho"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"xnajasho"},"content":"                tempfile.createNewFile();","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"xnajasho"},"content":"                System.out.println(\"   Succesfully created \u0027tasklist.txt\u0027 within ./src/main/java/\" + givenFilePath);","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"xnajasho"},"content":"                return lt;","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"xnajasho"},"content":"            } catch (IOException x) {","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"xnajasho"},"content":"                throw new DukeException(\"   UNEXPECTED ERROR: Unable to create file...\");","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"xnajasho"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"xnajasho"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"xnajasho"},"content":"    public void save(TaskList listOfTasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"xnajasho"},"content":"        String outputText \u003d Storage.printListForSave(listOfTasks);","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"xnajasho"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"xnajasho"},"content":"            Files.write(p, \"\".getBytes()); // clears the file","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"xnajasho"},"content":"            Files.write(p, outputText.getBytes(), StandardOpenOption.APPEND);","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"xnajasho"},"content":"            System.out.println(\"   Saved tasks to file...\");","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"xnajasho"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"xnajasho"},"content":"            System.out.println(\"   An error occurred while trying to save...\");","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"xnajasho"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"xnajasho"},"content":"    public static String printListForSave(TaskList lst) {","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"xnajasho"},"content":"        String outputText \u003d \"\";","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"xnajasho"},"content":"        for (Task t: lst.getListOfTasks()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"xnajasho"},"content":"            if (t instanceof Todo) {","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"xnajasho"},"content":"                outputText +\u003d \"T | \";","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"xnajasho"},"content":"                if (t.getStatusIcon().equals(\"X\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"xnajasho"},"content":"                    outputText +\u003d \"X | \" + t.getDescription() + \"\\n\";","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"xnajasho"},"content":"                } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"xnajasho"},"content":"                    outputText +\u003d \"0 | \" + t.getDescription() + \"\\n\";","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"xnajasho"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"xnajasho"},"content":"            } else if (t instanceof Deadline) {","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"xnajasho"},"content":"                Deadline d \u003d (Deadline) t;","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"xnajasho"},"content":"                outputText +\u003d \"D | \";","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"xnajasho"},"content":"                if (d.getStatusIcon().equals(\"X\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"xnajasho"},"content":"                    outputText +\u003d \"X | \" + d.getDescription() + \" | \" + d.getBy() + \"\\n\";","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"xnajasho"},"content":"                } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"xnajasho"},"content":"                    outputText +\u003d \"0 | \" + d.getDescription() + \" | \" + d.getBy() + \"\\n\";","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"xnajasho"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"xnajasho"},"content":"            } else if (t instanceof Event) {","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"xnajasho"},"content":"                Event e \u003d (Event) t;","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"xnajasho"},"content":"                outputText +\u003d \"E | \";","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"xnajasho"},"content":"                if (e.getStatusIcon().equals(\"X\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"xnajasho"},"content":"                    outputText +\u003d \"X | \" + e.getDescription() + \" | \" + e.getAt() + \"\\n\";","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"xnajasho"},"content":"                } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"xnajasho"},"content":"                    outputText +\u003d \"0 | \" + e.getDescription() + \" | \" + e.getAt() + \"\\n\";","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"xnajasho"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"xnajasho"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"xnajasho"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"xnajasho"},"content":"        return outputText;","lastModifiedDate":"2021-08-25"},{"lineNumber":121,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"xnajasho"},"content":"    // not sure what is the date specified thing (recheck)","lastModifiedDate":"2021-08-25"},{"lineNumber":124,"author":{"gitId":"xnajasho"},"content":"    public Task convertToTask(String input) {","lastModifiedDate":"2021-08-25"},{"lineNumber":125,"author":{"gitId":"xnajasho"},"content":"        List\u003cString\u003e words \u003d List.of(input.split(\" \\\\| \"));","lastModifiedDate":"2021-08-25"},{"lineNumber":126,"author":{"gitId":"xnajasho"},"content":"        Task output \u003d null;","lastModifiedDate":"2021-08-25"},{"lineNumber":127,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":128,"author":{"gitId":"xnajasho"},"content":"        switch (words.get(0)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":129,"author":{"gitId":"xnajasho"},"content":"        case \"T\":","lastModifiedDate":"2021-08-25"},{"lineNumber":130,"author":{"gitId":"xnajasho"},"content":"            Todo t \u003d new Todo(words.get(2));","lastModifiedDate":"2021-08-25"},{"lineNumber":131,"author":{"gitId":"xnajasho"},"content":"            if (words.get(1).equals(\"X\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":132,"author":{"gitId":"xnajasho"},"content":"                t \u003d t.markAsDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":133,"author":{"gitId":"xnajasho"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":134,"author":{"gitId":"xnajasho"},"content":"            output \u003d t;","lastModifiedDate":"2021-08-25"},{"lineNumber":135,"author":{"gitId":"xnajasho"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":136,"author":{"gitId":"xnajasho"},"content":"        case \"D\":","lastModifiedDate":"2021-08-25"},{"lineNumber":137,"author":{"gitId":"xnajasho"},"content":"            Deadline d \u003d new Deadline(words.get(2), words.get(3));","lastModifiedDate":"2021-08-25"},{"lineNumber":138,"author":{"gitId":"xnajasho"},"content":"            if (words.size() \u003d\u003d 4) { // add only if date is specified","lastModifiedDate":"2021-08-25"},{"lineNumber":139,"author":{"gitId":"xnajasho"},"content":"                if (words.get(1).equals(\"X\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":140,"author":{"gitId":"xnajasho"},"content":"                    d \u003d d.markAsDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":141,"author":{"gitId":"xnajasho"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":142,"author":{"gitId":"xnajasho"},"content":"                output \u003d d;","lastModifiedDate":"2021-08-25"},{"lineNumber":143,"author":{"gitId":"xnajasho"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":144,"author":{"gitId":"xnajasho"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":145,"author":{"gitId":"xnajasho"},"content":"        case \"E\":","lastModifiedDate":"2021-08-25"},{"lineNumber":146,"author":{"gitId":"xnajasho"},"content":"            Event e \u003d new Event(words.get(2), words.get(3));;","lastModifiedDate":"2021-08-25"},{"lineNumber":147,"author":{"gitId":"xnajasho"},"content":"            if (words.size() \u003d\u003d 4) { // add only if date is specified","lastModifiedDate":"2021-08-25"},{"lineNumber":148,"author":{"gitId":"xnajasho"},"content":"                if (words.get(1).equals(\"X\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":149,"author":{"gitId":"xnajasho"},"content":"                    e \u003d e.markAsDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":150,"author":{"gitId":"xnajasho"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":151,"author":{"gitId":"xnajasho"},"content":"                output \u003d e;","lastModifiedDate":"2021-08-25"},{"lineNumber":152,"author":{"gitId":"xnajasho"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":153,"author":{"gitId":"xnajasho"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":154,"author":{"gitId":"xnajasho"},"content":"        default:","lastModifiedDate":"2021-08-25"},{"lineNumber":155,"author":{"gitId":"xnajasho"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":156,"author":{"gitId":"xnajasho"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":157,"author":{"gitId":"xnajasho"},"content":"        return output;","lastModifiedDate":"2021-08-25"},{"lineNumber":158,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":159,"author":{"gitId":"xnajasho"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"xnajasho":159}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xnajasho"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"xnajasho"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"xnajasho"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"xnajasho"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"xnajasho"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"xnajasho"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"xnajasho"},"content":"import java.util.List;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"xnajasho"},"content":"public class TaskList {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"xnajasho"},"content":"    private ArrayList\u003cTask\u003e listOfTasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"xnajasho"},"content":"    TaskList(List\u003cTask\u003e tasksFromStorage) {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"xnajasho"},"content":"        listOfTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"xnajasho"},"content":"        if (!tasksFromStorage.isEmpty()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"xnajasho"},"content":"            listOfTasks.addAll(tasksFromStorage);","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"xnajasho"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"xnajasho"},"content":"    TaskList() {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"xnajasho"},"content":"        listOfTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"xnajasho"},"content":"    public int getNumTasks() {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"xnajasho"},"content":"        return listOfTasks.size();","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"xnajasho"},"content":"    public ArrayList\u003cTask\u003e getListOfTasks() {","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"xnajasho"},"content":"        return this.listOfTasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"xnajasho"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"xnajasho"},"content":"        listOfTasks.add(t);","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"xnajasho"},"content":"    public String deleteTask(int deleteIndex) {","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"xnajasho"},"content":"        String deletedTask \u003d listOfTasks.get(deleteIndex - 1).toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"xnajasho"},"content":"        if (this.listOfTasks.size() \u003d\u003d 1) { // if there is only one task in the list","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"xnajasho"},"content":"            this.listOfTasks.clear();","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"xnajasho"},"content":"        } else if (deleteIndex \u003d\u003d 1){ // deleting leftmost element","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"xnajasho"},"content":"            this.listOfTasks \u003d new ArrayList\u003c\u003e(listOfTasks.subList(1, listOfTasks.size()));","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"xnajasho"},"content":"        } else if (deleteIndex \u003d\u003d listOfTasks.size()) { // deleting rightmost element","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"xnajasho"},"content":"            this.listOfTasks \u003d new ArrayList\u003c\u003e(listOfTasks.subList(0, listOfTasks.size() - 1));","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"xnajasho"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"xnajasho"},"content":"            ArrayList\u003cTask\u003e newList \u003d new ArrayList\u003c\u003e(this.listOfTasks.subList(0, deleteIndex - 1));","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"xnajasho"},"content":"            for (int i \u003d deleteIndex; i \u003c listOfTasks.size(); i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"xnajasho"},"content":"                newList.add(listOfTasks.get(i));","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"xnajasho"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"xnajasho"},"content":"            this.listOfTasks \u003d newList;","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"xnajasho"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"xnajasho"},"content":"        return deletedTask;","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"xnajasho"},"content":"    public String completeTask(int taskIndex) {","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"xnajasho"},"content":"        String taskInfo;","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"xnajasho"},"content":"        if (this.listOfTasks.get(taskIndex - 1) instanceof Todo) {","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"xnajasho"},"content":"            Todo completedTodo \u003d ((Todo) this.listOfTasks.get(taskIndex - 1)).markAsDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"xnajasho"},"content":"            this.listOfTasks.set(taskIndex - 1, completedTodo);","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"xnajasho"},"content":"            taskInfo \u003d completedTodo.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"xnajasho"},"content":"        } else if (this.listOfTasks.get(taskIndex - 1) instanceof Deadline) {","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"xnajasho"},"content":"            Deadline completedDeadline \u003d ((Deadline) this.listOfTasks.get(taskIndex - 1)).markAsDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"xnajasho"},"content":"            this.listOfTasks.set(taskIndex - 1, completedDeadline);","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"xnajasho"},"content":"            taskInfo \u003d completedDeadline.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"xnajasho"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"xnajasho"},"content":"            Event completedEvent \u003d ((Event) this.listOfTasks.get(taskIndex - 1)).markAsDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"xnajasho"},"content":"            this.listOfTasks.set(taskIndex - 1, completedEvent);","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"xnajasho"},"content":"            taskInfo \u003d completedEvent.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"xnajasho"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"xnajasho"},"content":"        return taskInfo;","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"xnajasho"},"content":"    public boolean isEmptyTaskList() {","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"xnajasho"},"content":"        return listOfTasks.isEmpty();","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"xnajasho"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"xnajasho":77}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xnajasho"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"xnajasho"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"xnajasho"},"content":"public class Ui {","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"xnajasho"},"content":"    private final String line;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"xnajasho"},"content":"    private final Scanner sc;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"xnajasho"},"content":"    Ui() {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"xnajasho"},"content":"        this.line \u003d \"   ----------------------------------------------------------------------------------------------\";","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"xnajasho"},"content":"        sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"xnajasho"},"content":"    public void showWelcomeMessage() {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"xnajasho"},"content":"        String openingMessage \u003d line","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"xnajasho"},"content":"                + \"\\n   Hello! This is Duke :)\"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"xnajasho"},"content":"                + \"\\n   To use my AUTOSAVE feature, please type \u0027bye\u0027 when you\u0027re done!\"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"xnajasho"},"content":"                + \"\\n   Otherwise, I am unable to save your tasks for future reference :(\"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"xnajasho"},"content":"                + \"\\n   Now, what can I do for you? \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"xnajasho"},"content":"                + line;","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"xnajasho"},"content":"        System.out.println(openingMessage);","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"xnajasho"},"content":"    public void showLoadingError() {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"xnajasho"},"content":"        System.out.println(\"   LOADING ERROR: Unable to load previously saved data...\");","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"xnajasho"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"xnajasho"},"content":"        if (errorMessage.equals(\"\") || errorMessage \u003d\u003d null) {","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"xnajasho"},"content":"            System.out.println(\"   Unknown error was not handled by DukeException\");","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"xnajasho"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"xnajasho"},"content":"            System.out.println(errorMessage);","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"xnajasho"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"xnajasho"},"content":"    public void showByeMessage() {","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"xnajasho"},"content":"        sc.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"xnajasho"},"content":"        String goodbyeMessage \u003d \"   Bye! Hope to see you again soon!\";","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"xnajasho"},"content":"        System.out.println(goodbyeMessage);","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"xnajasho"},"content":"    public void showLine() {","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"xnajasho"},"content":"        System.out.println(this.line);","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"xnajasho"},"content":"    public void showAddTaskMessage(String taskDescription, int currentListSize) {","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"xnajasho"},"content":"        String output \u003d String.format(\"   Got it. I\u0027ve added this task: \\n      %s\\n   Now you have %d tasks in the list.\",","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"xnajasho"},"content":"                taskDescription, currentListSize);","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"xnajasho"},"content":"        System.out.println(output);","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"xnajasho"},"content":"    public void showDeletedTask(String taskDescription, int currentListSize) {","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"xnajasho"},"content":"        String output \u003d String.format(\"   Noted. I\u0027ve deleted this task: \\n      %s\\n   Now you have %d tasks in the list.\",","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"xnajasho"},"content":"                taskDescription, currentListSize);","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"xnajasho"},"content":"        System.out.println(output);","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"xnajasho"},"content":"    public void showCompletedTask(String taskInfo) {","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"xnajasho"},"content":"        String output \u003d String.format(\"   Nice! I\u0027ve marked this task as done: \\n      %s\", taskInfo);","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"xnajasho"},"content":"        System.out.println(output);","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"xnajasho"},"content":"    public void showInvalidCommand() {","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"xnajasho"},"content":"        System.out.println(\"   INVALID INPUT: Start the sentence with either \u0027todo\u0027/\u0027deadline\u0027/\u0027event\u0027/\u0027list\u0027/\u0027done\u0027/\u0027delete\u0027/\u0027bye\u0027\");","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"xnajasho"},"content":"    public void printList(TaskList lst) {","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"xnajasho"},"content":"        boolean isEmptyList \u003d false;","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"xnajasho"},"content":"        int counter \u003d 1;","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"xnajasho"},"content":"        String output \u003d \"   Here are the tasks in your list: \\n\";","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"xnajasho"},"content":"        while (!isEmptyList) {","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"xnajasho"},"content":"            if (lst.getListOfTasks().isEmpty()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"xnajasho"},"content":"                output +\u003d \"   Current List is empty...\";","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"xnajasho"},"content":"                isEmptyList \u003d true;","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"xnajasho"},"content":"            } else if (counter - lst.getListOfTasks().size() \u003d\u003d 1) { // when there are no more tasks to iterate","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"xnajasho"},"content":"                output \u003d output.replaceAll(\"[\\n\\r]$\", \"\"); // remove last newline","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"xnajasho"},"content":"                isEmptyList \u003d true;","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"xnajasho"},"content":"            } else { // adds current task to the list based on counter index","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"xnajasho"},"content":"                String lineAdded \u003d String.format(\"   %d.%s \\n\", counter, lst.getListOfTasks().get(counter - 1));","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"xnajasho"},"content":"                output +\u003d lineAdded;","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"xnajasho"},"content":"                counter++;","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"xnajasho"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"xnajasho"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"xnajasho"},"content":"        System.out.println(output);","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"xnajasho"},"content":"    public String readCommand() {","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"xnajasho"},"content":"        return sc.nextLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"xnajasho"},"content":"    public String printEmptyDescription(String taskType) {","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"xnajasho"},"content":"        return String.format(\"   OOPS!!! The description of a %s cannot be empty.\", taskType);","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"xnajasho"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"xnajasho":95}},{"path":"src/main/java/duke/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xnajasho"},"content":"package duke.commands;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"xnajasho"},"content":"import duke.Parser;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"xnajasho"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"xnajasho"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"xnajasho"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"xnajasho"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"xnajasho"},"content":"import duke.exceptions.InvalidInputException;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"xnajasho"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"xnajasho"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"xnajasho"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"xnajasho"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"xnajasho"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"xnajasho"},"content":"public class AddCommand extends Command{","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"xnajasho"},"content":"    private final String taskType;","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"xnajasho"},"content":"    private final String taskDescription;","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"xnajasho"},"content":"    public AddCommand(String taskType, String taskDescription) {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"xnajasho"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"xnajasho"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"xnajasho"},"content":"    public String getTaskType() {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"xnajasho"},"content":"        return taskType;","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"xnajasho"},"content":"    public String getTaskDescription() {","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"xnajasho"},"content":"        return taskDescription;","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"xnajasho"},"content":"    public void execute(TaskList task, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"xnajasho"},"content":"        if (taskDescription.equals(\"\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"xnajasho"},"content":"            throw new InvalidInputException(ui.printEmptyDescription(taskType));","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"xnajasho"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"xnajasho"},"content":"            Task t;","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"xnajasho"},"content":"            if (taskType.equals(\"todo\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"xnajasho"},"content":"                t \u003d new Todo(taskDescription);","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"xnajasho"},"content":"            } else if (taskType.equals(\"deadline\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"xnajasho"},"content":"                try {","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"xnajasho"},"content":"                    String[] info \u003d Parser.parseDeadline(taskDescription);","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"xnajasho"},"content":"                    t \u003d new Deadline(info[0], info[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"xnajasho"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"xnajasho"},"content":"                    throw new InvalidInputException(\"   INVALID INPUT: Please specify the date for the deadline\");","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"xnajasho"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"xnajasho"},"content":"                    throw new InvalidInputException(\"   INVALID INPUT: Please specify date in \u0027YYYY-MM-DD TIME\u0027 format\");","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"xnajasho"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"xnajasho"},"content":"            } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"xnajasho"},"content":"                try {","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"xnajasho"},"content":"                    String[] info \u003d Parser.parseEvent(taskDescription);","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"xnajasho"},"content":"                    t \u003d new Event(info[0], info[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"xnajasho"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"xnajasho"},"content":"                    throw new InvalidInputException(\"   INVALID INPUT: Please specify the date for the event\");","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"xnajasho"},"content":"                }  catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"xnajasho"},"content":"                    throw new InvalidInputException(\"   INVALID INPUT: Please specify date in \u0027YYYY-MM-DD TIME\u0027 format\");","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"xnajasho"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"xnajasho"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"xnajasho"},"content":"            task.addTask(t);","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"xnajasho"},"content":"            ui.showAddTaskMessage(t.toString(), task.getNumTasks());","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"xnajasho"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"xnajasho"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"xnajasho"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"xnajasho"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"xnajasho":67}},{"path":"src/main/java/duke/commands/AddCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xnajasho"},"content":"package duke.commands;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"xnajasho"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"xnajasho"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"xnajasho"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"xnajasho"},"content":"public class AddCommandTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"xnajasho"},"content":"    public void testAddTodo() {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"xnajasho"},"content":"        String taskType \u003d \"todo\";","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"xnajasho"},"content":"        String description \u003d \"read book\";","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"xnajasho"},"content":"        AddCommand add \u003d new AddCommand(taskType, description);","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"xnajasho"},"content":"        assertEquals(add.getTaskType(), taskType);","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"xnajasho"},"content":"        assertEquals(add.getTaskDescription(), description);","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"xnajasho"},"content":"    public void testAddDeadline() {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"xnajasho"},"content":"        String taskType \u003d \"deadline\";","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"xnajasho"},"content":"        String description \u003d \"return book /by 2019-10-04 6pm\";","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"xnajasho"},"content":"        AddCommand add \u003d new AddCommand(taskType, description);","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"xnajasho"},"content":"        assertEquals(add.getTaskType(), taskType);","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"xnajasho"},"content":"        assertEquals(add.getTaskDescription(), description);","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"xnajasho"},"content":"    public void testAddEvent() {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"xnajasho"},"content":"        String taskType \u003d \"event\";","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"xnajasho"},"content":"        String description \u003d \"project meeting /at 2018-11-03 8pm\";","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"xnajasho"},"content":"        AddCommand add \u003d new AddCommand(taskType, description);","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"xnajasho"},"content":"        assertEquals(add.getTaskType(), taskType);","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"xnajasho"},"content":"        assertEquals(add.getTaskDescription(), description);","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"xnajasho"},"content":"    public void testExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"xnajasho"},"content":"        AddCommand addCommand \u003d new AddCommand(\"todo\", \"read book\");","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"xnajasho"},"content":"        assertFalse(addCommand.isExit());","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"xnajasho"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"xnajasho":41}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xnajasho"},"content":"package duke.commands;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"xnajasho"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"xnajasho"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"xnajasho"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"xnajasho"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"xnajasho"},"content":"import duke.exceptions.InvalidDirectoryException;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"xnajasho"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"xnajasho"},"content":"    public abstract void execute(TaskList task, Ui ui, Storage storage) throws DukeException, InvalidDirectoryException;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"xnajasho"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"xnajasho"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"xnajasho":12}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xnajasho"},"content":"package duke.commands;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"xnajasho"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"xnajasho"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"xnajasho"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"xnajasho"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"xnajasho"},"content":"import duke.exceptions.InvalidInputException;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"xnajasho"},"content":"public class DeleteCommand extends Command{","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"xnajasho"},"content":"    private final int deletionIndex;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"xnajasho"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"xnajasho"},"content":"        this.deletionIndex \u003d index;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"xnajasho"},"content":"    public int getDeletionIndex() {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"xnajasho"},"content":"        return deletionIndex;","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"xnajasho"},"content":"    public void execute(TaskList task, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"xnajasho"},"content":"        if (deletionIndex \u003c\u003d 0 || deletionIndex \u003e task.getNumTasks() || task.isEmptyTaskList()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"xnajasho"},"content":"            String errorMessage \u003d String.format(\"   INDEX ERROR: Task number %d does not exist to be deleted\", deletionIndex);","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"xnajasho"},"content":"            throw new InvalidInputException(errorMessage);","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"xnajasho"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"xnajasho"},"content":"            String deletedTaskInfo \u003d task.deleteTask(deletionIndex);","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"xnajasho"},"content":"            ui.showDeletedTask(deletedTaskInfo, task.getNumTasks());","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"xnajasho"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"xnajasho"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"xnajasho"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"xnajasho"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"xnajasho":33}},{"path":"src/main/java/duke/commands/DeleteCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xnajasho"},"content":"package duke.commands;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"xnajasho"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"xnajasho"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"xnajasho"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"xnajasho"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"xnajasho"},"content":"    public void testDelete() {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"xnajasho"},"content":"        int index \u003d 5;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"xnajasho"},"content":"        DeleteCommand del \u003d new DeleteCommand(index);","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"xnajasho"},"content":"        assertEquals(del.getDeletionIndex(), 5);","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"xnajasho"},"content":"    public void testExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"xnajasho"},"content":"        DeleteCommand del \u003d new DeleteCommand(5);","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"xnajasho"},"content":"        assertFalse(del.isExit());","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"xnajasho"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"xnajasho":21}},{"path":"src/main/java/duke/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xnajasho"},"content":"package duke.commands;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"xnajasho"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"xnajasho"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"xnajasho"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"xnajasho"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"xnajasho"},"content":"import duke.exceptions.InvalidInputException;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"xnajasho"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"xnajasho"},"content":"    private final int taskIndex;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"xnajasho"},"content":"    public DoneCommand(int index) {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"xnajasho"},"content":"        this.taskIndex \u003d index;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"xnajasho"},"content":"    public int getTaskIndex() {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"xnajasho"},"content":"        return taskIndex;","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"xnajasho"},"content":"    public void execute(TaskList task, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"xnajasho"},"content":"        if (taskIndex \u003c\u003d 0 || taskIndex \u003e task.getNumTasks() || task.isEmptyTaskList()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"xnajasho"},"content":"            String errorMessage \u003d String.format(\"   INDEX ERROR: Task number %d does not exist to be completed\", taskIndex);","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"xnajasho"},"content":"            throw new InvalidInputException(errorMessage);","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"xnajasho"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"xnajasho"},"content":"            String completedTaskInfo \u003d task.completeTask(taskIndex);","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"xnajasho"},"content":"            ui.showCompletedTask(completedTaskInfo);","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"xnajasho"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"xnajasho"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"xnajasho"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"xnajasho"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"xnajasho":33}},{"path":"src/main/java/duke/commands/DoneCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xnajasho"},"content":"package duke.commands;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"xnajasho"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"xnajasho"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"xnajasho"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"xnajasho"},"content":"public class DoneCommandTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"xnajasho"},"content":"    public void testDone() {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"xnajasho"},"content":"        int index \u003d 5;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"xnajasho"},"content":"        DoneCommand done \u003d new DoneCommand(index);","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"xnajasho"},"content":"        assertEquals(done.getTaskIndex(), 5);","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"xnajasho"},"content":"    public void testExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"xnajasho"},"content":"        DoneCommand done \u003d new DoneCommand(5);","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"xnajasho"},"content":"        assertFalse(done.isExit());","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"xnajasho"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"xnajasho":21}},{"path":"src/main/java/duke/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xnajasho"},"content":"package duke.commands;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"xnajasho"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"xnajasho"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"xnajasho"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"xnajasho"},"content":"public class ExitCommand extends Command{","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"xnajasho"},"content":"    public ExitCommand() {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"xnajasho"},"content":"    // saves tasklist and calls ui to print bye message","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"xnajasho"},"content":"    public void execute(TaskList task, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"xnajasho"},"content":"        storage.save(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"xnajasho"},"content":"        ui.showByeMessage();","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"xnajasho"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"xnajasho"},"content":"        return true;","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"xnajasho"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"xnajasho":21}},{"path":"src/main/java/duke/commands/ExitCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xnajasho"},"content":"package duke.commands;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"xnajasho"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"xnajasho"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"xnajasho"},"content":"public class ExitCommandTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"xnajasho"},"content":"    public void testExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"xnajasho"},"content":"        ExitCommand exit \u003d new ExitCommand();","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"xnajasho"},"content":"        assertTrue(exit.isExit());","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"xnajasho"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"xnajasho":13}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xnajasho"},"content":"package duke.commands;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"xnajasho"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"xnajasho"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"xnajasho"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"xnajasho"},"content":"import duke.exceptions.InvalidDirectoryException;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"xnajasho"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"xnajasho"},"content":"    public ListCommand() {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"xnajasho"},"content":"    public void execute(TaskList task, Ui ui, Storage storage) throws InvalidDirectoryException {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"xnajasho"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"xnajasho"},"content":"            ui.printList(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"xnajasho"},"content":"        } catch (NullPointerException npe) {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"xnajasho"},"content":"            throw new InvalidDirectoryException(\"   Unable to retrieve task info as specified directory does not exist\");","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"xnajasho"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"xnajasho"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"xnajasho"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"xnajasho"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"xnajasho":25}},{"path":"src/main/java/duke/commands/ListCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xnajasho"},"content":"package duke.commands;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"xnajasho"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"xnajasho"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"xnajasho"},"content":"public class ListCommandTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"xnajasho"},"content":"    public void testExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"xnajasho"},"content":"        ListCommand lst \u003d new ListCommand();","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"xnajasho"},"content":"        assertFalse(lst.isExit());","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"xnajasho"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"xnajasho":14}},{"path":"src/main/java/duke/commands/UnknownCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xnajasho"},"content":"package duke.commands;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"xnajasho"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"xnajasho"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"xnajasho"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"xnajasho"},"content":"public class UnknownCommand extends Command{","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"xnajasho"},"content":"    public UnknownCommand() {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"xnajasho"},"content":"    public void execute(TaskList task, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"xnajasho"},"content":"        ui.showInvalidCommand();","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"xnajasho"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"xnajasho"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"xnajasho"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"xnajasho":20}},{"path":"src/main/java/duke/commands/UnknownCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xnajasho"},"content":"package duke.commands;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"xnajasho"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"xnajasho"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"xnajasho"},"content":"public class UnknownCommandTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"xnajasho"},"content":"    public void testExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"xnajasho"},"content":"        UnknownCommand uk \u003d new UnknownCommand();","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"xnajasho"},"content":"        assertFalse(uk.isExit());","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"xnajasho"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"xnajasho":12}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xnajasho"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"xnajasho"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"xnajasho"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"xnajasho"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"xnajasho"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"xnajasho":7}},{"path":"src/main/java/duke/exceptions/InvalidDirectoryException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xnajasho"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"xnajasho"},"content":"public class InvalidDirectoryException extends InvalidStorageFilePathException {","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"xnajasho"},"content":"    public InvalidDirectoryException(String errorMessage) {","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"xnajasho"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"xnajasho"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"xnajasho":7}},{"path":"src/main/java/duke/exceptions/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xnajasho"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"xnajasho"},"content":"public class InvalidInputException extends DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"xnajasho"},"content":"    public InvalidInputException(String errorMessage) {","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"xnajasho"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"xnajasho"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"xnajasho":7}},{"path":"src/main/java/duke/exceptions/InvalidStorageFilePathException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xnajasho"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"xnajasho"},"content":"public class InvalidStorageFilePathException extends Exception {","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"xnajasho"},"content":"    public InvalidStorageFilePathException(String errorMessage) {","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"xnajasho"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"xnajasho"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"xnajasho":7}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xnajasho"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"xnajasho"},"content":"public class Deadline extends Task{","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"xnajasho"},"content":"    protected String by;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"xnajasho"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"xnajasho"},"content":"        super(description);","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"xnajasho"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"xnajasho"},"content":"    Deadline(String description, String by, Boolean isDone) {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"xnajasho"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"xnajasho"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"xnajasho"},"content":"    public String getBy() {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"xnajasho"},"content":"        return this.by;","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"xnajasho"},"content":"    public Deadline markAsDone() {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"xnajasho"},"content":"        return new Deadline(this.description, this.by, true);","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"xnajasho"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"xnajasho"},"content":"    public String toString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"xnajasho"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"xnajasho"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"xnajasho":28}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xnajasho"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"xnajasho"},"content":"public class Event extends Task{","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"xnajasho"},"content":"    protected String at;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"xnajasho"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"xnajasho"},"content":"        super(description);","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"xnajasho"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"xnajasho"},"content":"    Event(String description, String at, Boolean isDone) {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"xnajasho"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"xnajasho"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"xnajasho"},"content":"    public String getAt() {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"xnajasho"},"content":"        return this.at;","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"xnajasho"},"content":"    public Event markAsDone() {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"xnajasho"},"content":"        return new Event(this.description, this.at, true);","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"xnajasho"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"xnajasho"},"content":"    public String toString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"xnajasho"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"xnajasho"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"xnajasho":29}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xnajasho"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"xnajasho"},"content":"public class Task {","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"xnajasho"},"content":"    protected String description;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"xnajasho"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"xnajasho"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"xnajasho"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"xnajasho"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"xnajasho"},"content":"    public Task(String description, Boolean isDone) {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"xnajasho"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"xnajasho"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"xnajasho"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"xnajasho"},"content":"        return this.description;","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"xnajasho"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"xnajasho"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"xnajasho"},"content":"    public Task markAsDone() {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"xnajasho"},"content":"        return new Task(this.description, true);","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"xnajasho"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"xnajasho"},"content":"    public String toString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"xnajasho"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"xnajasho"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"xnajasho":33}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xnajasho"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"xnajasho"},"content":"public class Todo extends Task{","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"xnajasho"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"xnajasho"},"content":"        super(description);","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"xnajasho"},"content":"    Todo(String description, Boolean isDone) {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"xnajasho"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"xnajasho"},"content":"    public Todo markAsDone() {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"xnajasho"},"content":"        return new Todo(this.description, true);","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"xnajasho"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"xnajasho"},"content":"    public String toString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"xnajasho"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"xnajasho"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"xnajasho":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"xnajasho"},"content":"todo read book","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"xnajasho"},"content":"deadline return book /by June 6th","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"xnajasho"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"xnajasho"},"content":"todo join sports club","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"xnajasho"},"content":"done 1","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"xnajasho"},"content":"done 4","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"xnajasho"},"content":"todo borrow book","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"xnajasho"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"xnajasho"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"xnajasho"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"xnajasho"},"content":"bye","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"xnajasho":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"xnajasho"},"content":"SET MY_PATH\u003dC:\\Users\\User\\Desktop\\ip","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"xnajasho"},"content":"if not exist \"%MY_PATH%\\bin\" mkdir \"%MY_PATH%\\bin\"","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"xnajasho"},"content":"javac  -cp \"%MY_PATH%\\src\\main\\java\" -Xlint:none -d \"%MY_PATH%\\bin\" \"%MY_PATH%\\src\\main\\java\\Duke.java\"","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"xnajasho"},"content":"java -classpath \"%MY_PATH%\\bin\" Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"xnajasho":6,"-":18}}]
