[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabau"},"content":"import util.commands.CommandList;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Gabau"},"content":"import util.commands.ExitCommand;","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Gabau"},"content":"import util.commons.Messages;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Gabau"},"content":"import util.parser.Parser;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Gabau"},"content":"import util.storage.Storage;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":"import util.tasks.DateTaskTable;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":"import util.tasks.DukeException;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Gabau"},"content":"import util.tasks.TaskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Gabau"},"content":"import util.ui.Ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Gabau"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Gabau"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Gabau"},"content":" * The class representing the Duke.","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Gabau"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Gabau"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Gabau"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"Gabau"},"content":"    private final Parser parser;","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Gabau"},"content":"    private final Ui ui \u003d new Ui();","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"Gabau"},"content":"    private final Storage stg;","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"Gabau"},"content":"    private final TaskList tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"Gabau"},"content":"    private static final String saveDirectory \u003d \"data/\";","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Gabau"},"content":"    private static final String saveFilePath \u003d \"save.txt\";","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Gabau"},"content":"    private static final String tempFilePath \u003d \"temp.txt\";","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Gabau"},"content":"    private final DateTaskTable dateTaskTable;","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"Gabau"},"content":"     * Constructor for duke.","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"Gabau"},"content":"     * @param filename The file to save at.","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"Gabau"},"content":"     * @param tempfilepath The tempfile name to use.","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"Gabau"},"content":"    public Duke(String filename, String tempfilepath) {","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"Gabau"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"Gabau"},"content":"        this.dateTaskTable \u003d new DateTaskTable();","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"Gabau"},"content":"        this.parser \u003d new Parser(this.ui, this.tasks, this.dateTaskTable);","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"Gabau"},"content":"        this.stg \u003d new Storage(saveDirectory + filename","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"Gabau"},"content":"                , saveDirectory + tempfilepath","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"Gabau"},"content":"                , this.dateTaskTable);","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"Gabau"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"Gabau"},"content":"            this.tasks.addAll(this.stg.read());","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"Gabau"},"content":"        } catch (IOException | DukeException ex) {","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"Gabau"},"content":"            ui.print(ex.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"Gabau"},"content":"        ui.print_logo();","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":57,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":58,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":59,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":60,"author":{"gitId":"Gabau"},"content":"     * Running Duke.","lastModifiedDate":"2021-08-15"},{"lineNumber":61,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":62,"author":{"gitId":"Gabau"},"content":"    public void run() {","lastModifiedDate":"2021-08-15"},{"lineNumber":63,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"Gabau"},"content":"        //initialising Duke","lastModifiedDate":"2021-08-15"},{"lineNumber":65,"author":{"gitId":"Gabau"},"content":"        //via greetings","lastModifiedDate":"2021-08-15"},{"lineNumber":66,"author":{"gitId":"Gabau"},"content":"        ui.print(Messages.GREETINGS);","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"Gabau"},"content":"        while(!ExitCommand.isExit) {","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"Gabau"},"content":"            String inpt \u003d ui.getInput();","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"Gabau"},"content":"            try {","lastModifiedDate":"2021-08-15"},{"lineNumber":71,"author":{"gitId":"Gabau"},"content":"                CommandList cmds \u003d parser.inputsParser(inpt);","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"Gabau"},"content":"                cmds.executeAll();","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"Gabau"},"content":"                stg.write(this.tasks);","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"Gabau"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-15"},{"lineNumber":75,"author":{"gitId":"Gabau"},"content":"                ui.print_error_message(e);","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"Gabau"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"Gabau"},"content":"                ui.print(\"Expected date format YYYY MM DD\");","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"Gabau"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"Gabau"},"content":"                ui.print_error_message(e);","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"Gabau"},"content":"            }","lastModifiedDate":"2021-08-15"},{"lineNumber":81,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":82,"author":{"gitId":"Gabau"},"content":"        ui.print(Messages.BYE);","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":84,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":86,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":87,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-15"},{"lineNumber":89,"author":{"gitId":"Gabau"},"content":"        Duke d \u003d new Duke(saveFilePath, tempFilePath);","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"Gabau"},"content":"        d.run();","lastModifiedDate":"2021-08-15"},{"lineNumber":91,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":92,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":93,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Gabau":91,"-":4}},{"path":"src/main/java/DukeTester.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabau"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Gabau"},"content":"import util.commands.DelCommand;","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Gabau"},"content":"import util.commands.ExitCommand;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Gabau"},"content":"import util.parser.Parser;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Gabau"},"content":"import util.tasks.*;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":"import util.ui.Ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Gabau"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":"public class DukeTester {","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Gabau"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Gabau"},"content":"    public void testDatedTaskTable() {","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Gabau"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Gabau"},"content":"            DateTaskTable t \u003d new DateTaskTable();","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Gabau"},"content":"            DatedTask[] arr \u003d new DatedTask[3];","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Gabau"},"content":"            arr[0] \u003d Deadline.of(\"Working by life /by 2020-08-20\");","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Gabau"},"content":"            arr[1] \u003d Deadline.of(\"Sleeping in life /by 2020-08-20\");","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Gabau"},"content":"            arr[2] \u003d Deadline.of(\"kdsfmekfsdf /by 2020-08-20\");","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"Gabau"},"content":"            t.add(arr[0]);","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"Gabau"},"content":"            t.add(arr[1]);","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Gabau"},"content":"            t.add(arr[2]);","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Gabau"},"content":"            ArrayList\u003cDatedTask\u003e ls \u003d t.get(Parser.dateParse(\"2020-08-20\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"Gabau"},"content":"            assertEquals( 3, ls.size());","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"Gabau"},"content":"            for (int i \u003d 0; i \u003c ls.size(); i++) {","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"Gabau"},"content":"                assertEquals(arr[i], t.get(Parser.dateParse(\"2020-08-20\")).get(i));","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"Gabau"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"Gabau"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"Gabau"},"content":"            System.err.println(e.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"Gabau"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"Gabau"},"content":"    public void testDeleteCommand() {","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"Gabau"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"Gabau"},"content":"            DateTaskTable t \u003d new DateTaskTable();","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"Gabau"},"content":"            TaskList tasklist \u003d new TaskList();","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"Gabau"},"content":"            t.add(Deadline.of(\"Driving a car /by 2020-08-20\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"Gabau"},"content":"            t.add(Deadline.of(\"Driving a traing/by2020-08-20\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"Gabau"},"content":"            t.add(Deadline.of(\"Building a car/by 2020-08-20\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"Gabau"},"content":"            tasklist.add(Deadline.of(\"Driving a car /by 2020-08-20\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"Gabau"},"content":"            tasklist.add(Deadline.of(\"Driving a traing/by2020-08-20\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"Gabau"},"content":"            tasklist.add(Deadline.of(\"Building a car/by 2020-08-20\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"Gabau"},"content":"            DelCommand removeDrCar \u003d new DelCommand(1, tasklist, t);","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"Gabau"},"content":"            removeDrCar.execute();","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"Gabau"},"content":"            assertEquals(Deadline.of(\"Driving a traing/by2020-08-20\"), tasklist.get(0));","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"Gabau"},"content":"            assertEquals(Deadline.of(\"Driving a traing/by2020-08-20\"), t.get(Parser.dateParse(\"2020-08-20\")).get(0));","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"Gabau"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"Gabau"},"content":"            System.err.println(e.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"Gabau"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"Gabau"},"content":"    public void testParser() {","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"Gabau"},"content":"        DateTaskTable t \u003d new DateTaskTable();","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"Gabau"},"content":"        TaskList tasklist \u003d new TaskList();","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"Gabau"},"content":"        Parser p \u003d new Parser(new Ui(), tasklist, t);","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"Gabau"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"Gabau"},"content":"            p.inputsParser(\"deadline fly a car /by 2020-08-01\").executeAll();","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"Gabau"},"content":"            p.inputsParser(\"todo Build the empire states building\").executeAll();","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"Gabau"},"content":"            assertEquals(2, tasklist.size());","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"Gabau"},"content":"            assertEquals( t.get(Parser.dateParse(\"2020-08-01\")).get(0), tasklist.get(0));","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"Gabau"},"content":"            p.inputsParser(\"bye\").executeAll();","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"Gabau"},"content":"            assertEquals(true, ExitCommand.isExit);","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"Gabau"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"Gabau"},"content":"            System.err.println(e.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"Gabau"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Gabau":84}},{"path":"src/main/java/util/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabau"},"content":"package util.commands;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Gabau"},"content":"import util.commons.Messages;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Gabau"},"content":"import util.tasks.Task;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Gabau"},"content":"import util.tasks.TaskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":"import util.ui.Ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Gabau"},"content":" * Command representing the addition of a","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Gabau"},"content":" * task to the task list.","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Gabau"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":"public class AddCommand implements Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":"    private final TaskList tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Gabau"},"content":"    private final Task task;","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Gabau"},"content":"    //should use the same Ui -- or can use a different one?","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Gabau"},"content":"    private final Ui ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Gabau"},"content":"     * The constructor of the AddCommand object.","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Gabau"},"content":"     * @param tasks The list of tasks to add to.","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Gabau"},"content":"     * @param task The task to be add.","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"Gabau"},"content":"    public AddCommand(TaskList tasks, Task task) {","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"Gabau"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Gabau"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Gabau"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"Gabau"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"Gabau"},"content":"    public void execute() {","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"Gabau"},"content":"        if (TaskList.isAdded(task, tasks)) {","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"Gabau"},"content":"            this.ui.print(String.format(Messages.TASK_ALREADY_ADDED, task.toString()));","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"Gabau"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"Gabau"},"content":"            tasks.add(task);","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"Gabau"},"content":"            ui.printTaskAdded(task, tasks.size());","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"Gabau"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Gabau":40}},{"path":"src/main/java/util/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabau"},"content":"package util.commands;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Gabau"},"content":"import util.tasks.DukeException;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":"@FunctionalInterface","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Gabau"},"content":"public interface Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Gabau"},"content":"     * The execution of a command.","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":"     * @throws DukeException When the command activity throws the exception.","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Gabau"},"content":"    public void execute() throws DukeException;","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Gabau"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Gabau":16}},{"path":"src/main/java/util/commands/CommandList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabau"},"content":"package util.commands;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Gabau"},"content":"import util.tasks.DukeException;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Gabau"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Gabau"},"content":" * The class representing a list of commands.","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Gabau"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Gabau"},"content":"public class CommandList extends ArrayList\u003cCommand\u003e {","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Gabau"},"content":"     * Executing all the commands in the command list.","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Gabau"},"content":"     * @throws DukeException When a class in the list has the exception.","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Gabau"},"content":"    public void executeAll() throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Gabau"},"content":"        for (int i \u003d 0; i \u003c this.size(); i++) {","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Gabau"},"content":"            this.get(i).execute();","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Gabau"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Gabau":23}},{"path":"src/main/java/util/commands/DelCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabau"},"content":"package util.commands;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Gabau"},"content":"import util.tasks.*;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Gabau"},"content":"import util.ui.*;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":" * The class representing the delete command.","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Gabau"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Gabau"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":"public class DelCommand implements Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Gabau"},"content":"    private final int delPos;","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":"    private final TaskList tasklist;","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":"    //should personalize the ui for each of the commands?","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Gabau"},"content":"    private final Ui delUI \u003d new Ui();","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Gabau"},"content":"    private final DateTaskTable table;","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Gabau"},"content":"     * Constructor for the delete command.","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Gabau"},"content":"     * @param delPos The position to delete at.","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Gabau"},"content":"     * @param tasklist The tasklist to delete from.","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Gabau"},"content":"     * @param table The dateTaskTable we might delete from.","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"Gabau"},"content":"    public DelCommand(int delPos, TaskList tasklist, DateTaskTable table) {","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"Gabau"},"content":"        this.delPos \u003d delPos;","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"Gabau"},"content":"        this.tasklist \u003d tasklist;","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Gabau"},"content":"        this.table \u003d table;","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"Gabau"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"Gabau"},"content":"    public void execute() {","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"Gabau"},"content":"        //have to account for when it is a dated item.","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"Gabau"},"content":"        Task t \u003d this.tasklist.remove(delPos - 1);","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"Gabau"},"content":"        //can use instanceof for this","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"Gabau"},"content":"        if (t.isDated()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"Gabau"},"content":"            DatedTask dt \u003d (DatedTask) t;","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"Gabau"},"content":"            dt.removeFromTable(table);","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"Gabau"},"content":"        delUI.printTaskDel(t, tasklist.size());","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"Gabau"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Gabau":47}},{"path":"src/main/java/util/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabau"},"content":"package util.commands;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Gabau"},"content":"import util.tasks.*;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Gabau"},"content":"import util.ui.*;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Gabau"},"content":"import util.commons.*;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Gabau"},"content":" * Class representing the Done command.","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Gabau"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Gabau"},"content":"public class DoneCommand implements Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":"    private final Task t;","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":"    private final Ui ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Gabau"},"content":"     * The constructor of the DoneCommand","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Gabau"},"content":"     * @param t The task that will be done.","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Gabau"},"content":"     * @param ui The ui to print the message.","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Gabau"},"content":"    public DoneCommand(Task t, Ui ui) {","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Gabau"},"content":"        this.t \u003d t;","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Gabau"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Gabau"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Gabau"},"content":"    public void execute() {","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"Gabau"},"content":"        t.done();","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"Gabau"},"content":"        ui.print(String.format(Messages.TASK_COMPLETE, t.toString()));","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"Gabau"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Gabau":35}},{"path":"src/main/java/util/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabau"},"content":"package util.commands;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Gabau"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Gabau"},"content":" * When this command runs, the Duke stops working.","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Gabau"},"content":"public class ExitCommand implements Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Gabau"},"content":"    public static boolean isExit \u003d false;","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Gabau"},"content":"     * The constructor of the ExitCommand.","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Gabau"},"content":"    public ExitCommand() {}","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Gabau"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Gabau"},"content":"    public void execute() {this.isExit \u003d true;}","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Gabau"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Gabau":23}},{"path":"src/main/java/util/commons/Messages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabau"},"content":"package util.commons;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Gabau"},"content":"public class Messages {","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":"    public static final String LOGO \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Gabau"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Gabau"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Gabau"},"content":"    public static final String GREETINGS \u003d \"Greetings! I\u0027m Duke\\n\\tWhat can I do for you?\";","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":"    public static final String BYE \u003d \"Godspeed young padawan!\";","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":"    public static final String HLINE \u003d \"\\t----------------------------\";","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Gabau"},"content":"    //Messages that have to be formatted to include tasks","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Gabau"},"content":"    public static final String TASK_ADDED \u003d","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Gabau"},"content":"            \"Roger! I have added this task.\\n\\t\" +","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Gabau"},"content":"            \"%s\\n\\t\" +","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Gabau"},"content":"            \"Now you have %d tasks in the list.\\n\\t\";","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Gabau"},"content":"    public static final String TASK_DELETED \u003d","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"Gabau"},"content":"            \"The following task has been removed\\n\\t\" +","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"Gabau"},"content":"            \"%s\\n\\t\" +","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"Gabau"},"content":"            \"Now you have %d tasks remaining\";","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Gabau"},"content":"    public static final String TASK_NO_DESCRIPTOR_ERROR \u003d \"☹ OOPS!!! The description of a %s cannot be empty.\";","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Gabau"},"content":"    public static final String TASK_NOT_UNDERSTOOD_ERROR \u003d \"☹ OOPS!!! I do no know what to do\";","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"Gabau"},"content":"    public static final String TASK_ALREADY_ADDED \u003d \"Task already added: %s\";","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"Gabau"},"content":"    public static final String TASK_COMPLETE \u003d","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"Gabau"},"content":"            \"Nice, I\u0027ve marked this task as done\\n\\t\" +","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"Gabau"},"content":"                    \"%s\";","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"Gabau"},"content":"    //Error messages","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"Gabau"},"content":"    public static final String EVENT_NO_INPUT_ERROR_MESSAGE \u003d","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"Gabau"},"content":"            \"☹ OOPS!!! The event deadline must be filled in prefixed by /at\";","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"Gabau"},"content":"    public static final String INVALID_DONE_INPUT \u003d","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"Gabau"},"content":"            \"☹ OOPS!!! The input integer is invalid for the task list.\";","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"Gabau"},"content":"    public static final String DEADLINE_NO_INPUT_ERROR_MESSAGE \u003d","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"Gabau"},"content":"            \"☹ OOPS!!! The deadline deadline must be filled in prefixed by /by\";","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"Gabau"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Gabau":47}},{"path":"src/main/java/util/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabau"},"content":"package util.parser;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Gabau"},"content":"import util.commands.*;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Gabau"},"content":"import util.commons.Messages;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Gabau"},"content":"import util.tasks.*;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":"import util.ui.Ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Gabau"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Gabau"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":" * The class representing the parser that interprets the input.","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Gabau"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Gabau"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Gabau"},"content":"public class Parser {","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Gabau"},"content":"    private static final String DONE \u003d \"done\";","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Gabau"},"content":"    private static final String DELETE \u003d \"delete\";","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Gabau"},"content":"    private static final String TODO \u003d \"todo\";","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Gabau"},"content":"    private static final String DEADLINE \u003d \"deadline\";","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"Gabau"},"content":"    private static final String EVENT \u003d \"event\";","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"Gabau"},"content":"    //the command for listing all the tasks under a certain date.","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"Gabau"},"content":"    private static final String DLIST \u003d \"dlist\";","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Gabau"},"content":"    private static final String LIST \u003d \"list\";","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Gabau"},"content":"    private static final String BYE \u003d \"bye\";","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Gabau"},"content":"    private static final String FIND \u003d \"find\";","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Gabau"},"content":"    //is it just me or does the parser","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"Gabau"},"content":"    //have to contain all the objects to send the information to","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"Gabau"},"content":"    private final Ui ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"Gabau"},"content":"    private final TaskList taskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"Gabau"},"content":"    private final DateTaskTable dateTaskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"Gabau"},"content":"     * Constructor for the parser class.","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"Gabau"},"content":"     * @param ui The ui that displays the information.","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"Gabau"},"content":"     * @param taskList The tasklist that contains the tasks.","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"Gabau"},"content":"     * @param dateTaskList The datetasktable that contains the datetasks as well.","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"Gabau"},"content":"    public Parser(Ui ui, TaskList taskList, DateTaskTable dateTaskList) {","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"Gabau"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"Gabau"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"Gabau"},"content":"        this.dateTaskList \u003d dateTaskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"Gabau"},"content":"     * To understand the input.","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"Gabau"},"content":"     * @param input The input String","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"Gabau"},"content":"     * @throws DukeException Exception due to wrong input.","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"Gabau"},"content":"    public CommandList inputsParser(String input) throws DukeException, DateTimeParseException {","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"Gabau"},"content":"        String[] twoInputs \u003d input.split(\" \", 2);","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"Gabau"},"content":"        String cmd \u003d twoInputs[0];","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"Gabau"},"content":"        CommandList cmds \u003d new CommandList();","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"Gabau"},"content":"        if (twoInputs.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"Gabau"},"content":"            //when there is only one input","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"Gabau"},"content":"            switch(cmd) {","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"Gabau"},"content":"            case BYE:","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"Gabau"},"content":"                cmds.add(new ExitCommand());","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"Gabau"},"content":"                break;","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"Gabau"},"content":"            case LIST:","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"Gabau"},"content":"                cmds.add(() -\u003e ui.list(this.taskList));","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"Gabau"},"content":"                break;","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"Gabau"},"content":"            case DLIST:","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"Gabau"},"content":"                //fallthrough","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"Gabau"},"content":"            case DONE:","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"Gabau"},"content":"                //fallthrough","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"Gabau"},"content":"            case TODO:","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"Gabau"},"content":"                //fallthrough","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"Gabau"},"content":"            case DEADLINE:","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"Gabau"},"content":"                //fallthrough","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"Gabau"},"content":"            case EVENT:","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"Gabau"},"content":"                throw new DukeException(String.format(Messages.TASK_NO_DESCRIPTOR_ERROR, cmd));","lastModifiedDate":"2021-08-22"},{"lineNumber":86,"author":{"gitId":"Gabau"},"content":"            default:","lastModifiedDate":"2021-08-22"},{"lineNumber":87,"author":{"gitId":"Gabau"},"content":"                throw new DukeException(Messages.TASK_NOT_UNDERSTOOD_ERROR);","lastModifiedDate":"2021-08-22"},{"lineNumber":88,"author":{"gitId":"Gabau"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":89,"author":{"gitId":"Gabau"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":91,"author":{"gitId":"Gabau"},"content":"            String description \u003d twoInputs[1];","lastModifiedDate":"2021-08-22"},{"lineNumber":92,"author":{"gitId":"Gabau"},"content":"            switch (cmd) {","lastModifiedDate":"2021-08-22"},{"lineNumber":93,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":94,"author":{"gitId":"Gabau"},"content":"            case FIND:","lastModifiedDate":"2021-08-22"},{"lineNumber":95,"author":{"gitId":"Gabau"},"content":"                cmds.add(() -\u003e ui.list(taskList.filter(t -\u003e t.contains(description.trim()))));","lastModifiedDate":"2021-08-22"},{"lineNumber":96,"author":{"gitId":"Gabau"},"content":"                break;","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"Gabau"},"content":"            case DONE:","lastModifiedDate":"2021-08-22"},{"lineNumber":98,"author":{"gitId":"Gabau"},"content":"                int i \u003d Integer.parseInt(description) - 1;","lastModifiedDate":"2021-08-22"},{"lineNumber":99,"author":{"gitId":"Gabau"},"content":"                if (i \u003e taskList.size() || i \u003c 0) throw new DukeException(Messages.INVALID_DONE_INPUT);","lastModifiedDate":"2021-08-22"},{"lineNumber":100,"author":{"gitId":"Gabau"},"content":"                Task b \u003d taskList.get(i);","lastModifiedDate":"2021-08-22"},{"lineNumber":101,"author":{"gitId":"Gabau"},"content":"                cmds.add(new DoneCommand(b, this.ui));","lastModifiedDate":"2021-08-22"},{"lineNumber":102,"author":{"gitId":"Gabau"},"content":"                break;","lastModifiedDate":"2021-08-22"},{"lineNumber":103,"author":{"gitId":"Gabau"},"content":"                //dlist does not work -- suspect is coz of the hashmap","lastModifiedDate":"2021-08-22"},{"lineNumber":104,"author":{"gitId":"Gabau"},"content":"            case DLIST:","lastModifiedDate":"2021-08-22"},{"lineNumber":105,"author":{"gitId":"Gabau"},"content":"                //to implement such a filter in tasklist","lastModifiedDate":"2021-08-22"},{"lineNumber":106,"author":{"gitId":"Gabau"},"content":"                ArrayList\u003cDatedTask\u003e ls \u003d dateTaskList.get(dateParse(description.trim()));","lastModifiedDate":"2021-08-22"},{"lineNumber":107,"author":{"gitId":"Gabau"},"content":"                cmds.add(() -\u003e {","lastModifiedDate":"2021-08-22"},{"lineNumber":108,"author":{"gitId":"Gabau"},"content":"                    if (ls !\u003d null) ui.list(ls);","lastModifiedDate":"2021-08-22"},{"lineNumber":109,"author":{"gitId":"Gabau"},"content":"                });","lastModifiedDate":"2021-08-22"},{"lineNumber":110,"author":{"gitId":"Gabau"},"content":"                break;","lastModifiedDate":"2021-08-22"},{"lineNumber":111,"author":{"gitId":"Gabau"},"content":"            case DELETE:","lastModifiedDate":"2021-08-22"},{"lineNumber":112,"author":{"gitId":"Gabau"},"content":"                cmds.add(new DelCommand(Integer.parseInt(description), this.taskList, this.dateTaskList));","lastModifiedDate":"2021-08-22"},{"lineNumber":113,"author":{"gitId":"Gabau"},"content":"                break;","lastModifiedDate":"2021-08-22"},{"lineNumber":114,"author":{"gitId":"Gabau"},"content":"            case TODO:","lastModifiedDate":"2021-08-22"},{"lineNumber":115,"author":{"gitId":"Gabau"},"content":"                Task t \u003d ToDo.of(description);","lastModifiedDate":"2021-08-22"},{"lineNumber":116,"author":{"gitId":"Gabau"},"content":"                cmds.add(new AddCommand(taskList, t));","lastModifiedDate":"2021-08-22"},{"lineNumber":117,"author":{"gitId":"Gabau"},"content":"                break;","lastModifiedDate":"2021-08-22"},{"lineNumber":118,"author":{"gitId":"Gabau"},"content":"            case EVENT:","lastModifiedDate":"2021-08-22"},{"lineNumber":119,"author":{"gitId":"Gabau"},"content":"                Event e \u003d Event.of(description);","lastModifiedDate":"2021-08-22"},{"lineNumber":120,"author":{"gitId":"Gabau"},"content":"                cmds.add(new AddCommand(taskList, e));","lastModifiedDate":"2021-08-22"},{"lineNumber":121,"author":{"gitId":"Gabau"},"content":"                cmds.add(() -\u003e dateTaskList.add(e));","lastModifiedDate":"2021-08-22"},{"lineNumber":122,"author":{"gitId":"Gabau"},"content":"                break;","lastModifiedDate":"2021-08-22"},{"lineNumber":123,"author":{"gitId":"Gabau"},"content":"            case DEADLINE:","lastModifiedDate":"2021-08-22"},{"lineNumber":124,"author":{"gitId":"Gabau"},"content":"                Deadline d \u003d Deadline.of(description);","lastModifiedDate":"2021-08-22"},{"lineNumber":125,"author":{"gitId":"Gabau"},"content":"                cmds.add(new AddCommand(taskList, d));","lastModifiedDate":"2021-08-22"},{"lineNumber":126,"author":{"gitId":"Gabau"},"content":"                cmds.add(() -\u003e dateTaskList.add(d));","lastModifiedDate":"2021-08-22"},{"lineNumber":127,"author":{"gitId":"Gabau"},"content":"                break;","lastModifiedDate":"2021-08-22"},{"lineNumber":128,"author":{"gitId":"Gabau"},"content":"            default:","lastModifiedDate":"2021-08-22"},{"lineNumber":129,"author":{"gitId":"Gabau"},"content":"                throw new DukeException(Messages.TASK_NOT_UNDERSTOOD_ERROR);","lastModifiedDate":"2021-08-22"},{"lineNumber":130,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":131,"author":{"gitId":"Gabau"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":132,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":133,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":134,"author":{"gitId":"Gabau"},"content":"        return cmds;","lastModifiedDate":"2021-08-22"},{"lineNumber":135,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":136,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":137,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":138,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":139,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":140,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":141,"author":{"gitId":"Gabau"},"content":"     * Method to parse the string into a date.","lastModifiedDate":"2021-08-22"},{"lineNumber":142,"author":{"gitId":"Gabau"},"content":"     * Goal: To be able to parse as many possible formats","lastModifiedDate":"2021-08-22"},{"lineNumber":143,"author":{"gitId":"Gabau"},"content":"     * as possible. (TBC)","lastModifiedDate":"2021-08-22"},{"lineNumber":144,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":145,"author":{"gitId":"Gabau"},"content":"     * @param s The string to parse","lastModifiedDate":"2021-08-22"},{"lineNumber":146,"author":{"gitId":"Gabau"},"content":"     * @return The LocalDate object representing the input date.","lastModifiedDate":"2021-08-22"},{"lineNumber":147,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":148,"author":{"gitId":"Gabau"},"content":"    public static LocalDate dateParse(String s) {","lastModifiedDate":"2021-08-22"},{"lineNumber":149,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":150,"author":{"gitId":"Gabau"},"content":"        return LocalDate.parse(s.trim());","lastModifiedDate":"2021-08-22"},{"lineNumber":151,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":152,"author":{"gitId":"Gabau"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Gabau":152}},{"path":"src/main/java/util/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabau"},"content":"package util.storage;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Gabau"},"content":"import util.tasks.*;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Gabau"},"content":"import java.io.File;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Gabau"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Gabau"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Gabau"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":" * The storage class is the class representing the stored","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":" * information.","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Gabau"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Gabau"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Gabau"},"content":"public class Storage {","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Gabau"},"content":"    private String tempFilePath;","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Gabau"},"content":"    private String saveFilePath;","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Gabau"},"content":"    private DateTaskTable dateTaskTable;","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Gabau"},"content":"    //Use a custom ui for storage?","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"Gabau"},"content":"     * Constructor for the storage class.","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Gabau"},"content":"     * @param saveFilePath The path to write to.","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Gabau"},"content":"     * @param tempFilePath The temp file to use.","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Gabau"},"content":"     * @param dateTaskTable The dateTaskTable to store tasks with dates.","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"Gabau"},"content":"    public Storage(String saveFilePath, String tempFilePath, DateTaskTable dateTaskTable) {","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"Gabau"},"content":"        this.tempFilePath \u003d tempFilePath;","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"Gabau"},"content":"        this.saveFilePath \u003d saveFilePath;","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"Gabau"},"content":"        this.dateTaskTable \u003d dateTaskTable;","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"Gabau"},"content":"     * Command to write the input list of tasks onto the","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"Gabau"},"content":"     * hard disk.","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"Gabau"},"content":"     * @param inputs The list of input tasks to encode onto the hardisk.","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"Gabau"},"content":"     * @throws IOException When the writing has failed.","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"Gabau"},"content":"    public void write(ArrayList\u003c? extends Task\u003e inputs) throws IOException {","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"Gabau"},"content":"        File dir \u003d new File(\"./data\");","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"Gabau"},"content":"        if (!dir.exists()) dir.mkdirs();","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"Gabau"},"content":"        //creating the files","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"Gabau"},"content":"        File saveFile \u003d new File(saveFilePath);","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"Gabau"},"content":"        File tempfile \u003d new File(tempFilePath);","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"Gabau"},"content":"        //if the file does not exist","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"Gabau"},"content":"        if (!saveFile.exists()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"Gabau"},"content":"            //When the old save file does not exist","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"Gabau"},"content":"            //do not have to use the tempfile","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"Gabau"},"content":"            saveFile.createNewFile();","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"Gabau"},"content":"            FileWriter wr \u003d new FileWriter(saveFilePath);","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"Gabau"},"content":"            writeTasks(wr, inputs);","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"Gabau"},"content":"            wr.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"Gabau"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"Gabau"},"content":"            //could use a temp file and switch after writing?","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"Gabau"},"content":"            FileWriter wr \u003d new FileWriter(tempFilePath);","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"Gabau"},"content":"            writeTasks(wr, inputs);","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"Gabau"},"content":"            wr.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"Gabau"},"content":"            saveFile.delete();","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"Gabau"},"content":"            tempfile.renameTo(saveFile);","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"Gabau"},"content":"    private void writeTasks(FileWriter writer, ArrayList\u003c? extends Task\u003e inputs) throws IOException {","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"Gabau"},"content":"        for (int i \u003d 0; i \u003c inputs.size(); i++) {","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"Gabau"},"content":"            writer.write(inputs.get(i).encode());","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"Gabau"},"content":"            writer.write(\"\\n\");","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":86,"author":{"gitId":"Gabau"},"content":"     * The method used to read from the current save File. --Use a save object?","lastModifiedDate":"2021-08-22"},{"lineNumber":87,"author":{"gitId":"Gabau"},"content":"     * Can allow for multiple saves --\u003e could use such an object to handle","lastModifiedDate":"2021-08-22"},{"lineNumber":88,"author":{"gitId":"Gabau"},"content":"     * the saves in an arraylist.","lastModifiedDate":"2021-08-22"},{"lineNumber":89,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"Gabau"},"content":"     * @return The arraylist containing the read result.","lastModifiedDate":"2021-08-22"},{"lineNumber":91,"author":{"gitId":"Gabau"},"content":"     * @throws IOException When the read fails.","lastModifiedDate":"2021-08-22"},{"lineNumber":92,"author":{"gitId":"Gabau"},"content":"     * @throws  DukeException When the format of the text to be read is wrong.","lastModifiedDate":"2021-08-22"},{"lineNumber":93,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":94,"author":{"gitId":"Gabau"},"content":"    public TaskList read() throws IOException, DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":95,"author":{"gitId":"Gabau"},"content":"        TaskList inputs \u003d new TaskList();","lastModifiedDate":"2021-08-22"},{"lineNumber":96,"author":{"gitId":"Gabau"},"content":"        File f \u003d new File(saveFilePath);","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"Gabau"},"content":"        //when the file does not exist, returns an empty arraylist.","lastModifiedDate":"2021-08-22"},{"lineNumber":98,"author":{"gitId":"Gabau"},"content":"        if (!f.exists()) return inputs;","lastModifiedDate":"2021-08-22"},{"lineNumber":99,"author":{"gitId":"Gabau"},"content":"        Scanner sc \u003d new Scanner(f);","lastModifiedDate":"2021-08-22"},{"lineNumber":100,"author":{"gitId":"Gabau"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":101,"author":{"gitId":"Gabau"},"content":"            Task t \u003d Task.decode(sc.nextLine());","lastModifiedDate":"2021-08-22"},{"lineNumber":102,"author":{"gitId":"Gabau"},"content":"            inputs.add(t);","lastModifiedDate":"2021-08-22"},{"lineNumber":103,"author":{"gitId":"Gabau"},"content":"            if (t instanceof DatedTask) {","lastModifiedDate":"2021-08-22"},{"lineNumber":104,"author":{"gitId":"Gabau"},"content":"                dateTaskTable.add((DatedTask) t);","lastModifiedDate":"2021-08-22"},{"lineNumber":105,"author":{"gitId":"Gabau"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":106,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":107,"author":{"gitId":"Gabau"},"content":"        sc.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":108,"author":{"gitId":"Gabau"},"content":"        return inputs;","lastModifiedDate":"2021-08-22"},{"lineNumber":109,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":110,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":111,"author":{"gitId":"Gabau"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Gabau":111}},{"path":"src/main/java/util/tasks/DateTaskTable.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabau"},"content":"package util.tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Gabau"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Gabau"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Gabau"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Gabau"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Gabau"},"content":" * A class for containing DatedTasks assigned to their corresponding","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":" * LocalDate.","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Gabau"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Gabau"},"content":"public class DateTaskTable extends HashMap\u003cLocalDate, ArrayList\u003cDatedTask\u003e\u003e {","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Gabau"},"content":"     * Adding the DatedTask to the Table.","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Gabau"},"content":"     * @param task The DatedTask to add.","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Gabau"},"content":"    public void add(DatedTask task) {","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Gabau"},"content":"        task.addTo(this);","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"Gabau"},"content":"     * The method to get the list of dated tasks","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Gabau"},"content":"     * that have the same date as the input.","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Gabau"},"content":"     * @param date The date of the tasks in the result.","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Gabau"},"content":"     * @return The Dated Tasks that possess the same date as the param date.","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"Gabau"},"content":"    public ArrayList\u003cDatedTask\u003e get(LocalDate date) {","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"Gabau"},"content":"        ArrayList\u003cDatedTask\u003e res \u003d super.get(date);","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"Gabau"},"content":"        if (res \u003d\u003d null) {","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"Gabau"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"Gabau"},"content":"        return res;","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"Gabau"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Gabau":41}},{"path":"src/main/java/util/tasks/DatedTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabau"},"content":"package util.tasks;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"Gabau"},"content":"import util.parser.Parser;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Gabau"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Gabau"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":"public abstract class DatedTask extends Task {","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"Gabau"},"content":"    protected LocalDate lDate;","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Gabau"},"content":"     * The constructor for a datedtask.","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Gabau"},"content":"     * @param name The name of the task","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Gabau"},"content":"     * @param date The date of the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Gabau"},"content":"    public DatedTask(String name, String date) {","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Gabau"},"content":"        super(name);","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"Gabau"},"content":"        this.lDate \u003d Parser.dateParse(date);","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"Gabau"},"content":"     * The localdate in the format to print out.","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Gabau"},"content":"     * @return The local date in the format MMM dd yyyy","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Gabau"},"content":"    public String localDate() {","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"Gabau"},"content":"        return lDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"Gabau"},"content":"     * Adds the dated task to the input table.","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"Gabau"},"content":"     * @param table The hashmap to put the dated task in.","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"Gabau"},"content":"    public void addTo(HashMap\u003cLocalDate, ArrayList\u003cDatedTask\u003e\u003e table) {","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"Gabau"},"content":"        ArrayList\u003cDatedTask\u003e list \u003d table.get(this.lDate);","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"Gabau"},"content":"        if (list \u003d\u003d null) {","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"Gabau"},"content":"            list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"Gabau"},"content":"            table.put(this.lDate, list);","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"Gabau"},"content":"            table.get(this.lDate).add(this);","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"Gabau"},"content":"        } else if (TaskList.isAdded(this, list)) {","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"Gabau"},"content":"            //it has been added before","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"Gabau"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"Gabau"},"content":"            list.add(this);","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"Gabau"},"content":"     * Removes the DatedTask from the input DateTaskTable.","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"Gabau"},"content":"     * @param table","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"Gabau"},"content":"    public void removeFromTable(DateTaskTable table) {","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"Gabau"},"content":"        ArrayList\u003cDatedTask\u003e ls \u003d table.get(this.lDate);","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"Gabau"},"content":"        if (ls !\u003d null) ls.remove(this);","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"Gabau"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"Gabau"},"content":"    public boolean isDated() {","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"Gabau"},"content":"        return true;","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":78,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":79,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"Gabau"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"Gabau":80}},{"path":"src/main/java/util/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabau"},"content":"package util.tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Gabau"},"content":"import util.commons.Messages;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":" * The class representing the deadline task.","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Gabau"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Gabau"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Gabau"},"content":"public class Deadline extends DatedTask {","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":"    private static String label \u003d \"[D]\";","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":"    private static final String DELIMITER \u003d \"/by\";","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Gabau"},"content":"    private Deadline(String s, String dl) {","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Gabau"},"content":"        super(s.trim(), dl.trim());","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Gabau"},"content":"     * The factory method of Deadline that takes in the","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"Gabau"},"content":"     * string with the delimiter.","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"Gabau"},"content":"     * @param s The string that has the delimiter for the name and date.","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Gabau"},"content":"     * @return The created deadline object.","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Gabau"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Gabau"},"content":"    public static Deadline of(String s) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"Gabau"},"content":"        String[] ss \u003d s.split(Deadline.DELIMITER, 2);","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"Gabau"},"content":"        if (ss.length \u003d\u003d 0) {","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"Gabau"},"content":"            throw new DukeException(Messages.DEADLINE_NO_INPUT_ERROR_MESSAGE);","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"Gabau"},"content":"        return new Deadline(ss[0], ss[1]);","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"Gabau"},"content":"     * The factory method of Deadline that takes in the string","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"Gabau"},"content":"     * already separated.","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"Gabau"},"content":"     * @param name The name of the deadline.","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"Gabau"},"content":"     * @param date The date of the deadline.","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"Gabau"},"content":"     * @return The created deadline object.","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"Gabau"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"Gabau"},"content":"    public static Deadline of(String name, String date) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"Gabau"},"content":"        return new Deadline(name, date);","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"Gabau"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"Gabau"},"content":"    public String toString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"Gabau"},"content":"        return this.label + super.toString() + \" \" + \"(by: \" + this.localDate() + \")\";","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"Gabau"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"Gabau"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"Gabau"},"content":"        if (obj instanceof Deadline) {","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"Gabau"},"content":"            Deadline dl \u003d (Deadline) obj;","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"Gabau"},"content":"            return this.name.equals(dl.name) \u0026\u0026 this.lDate.equals(dl.lDate);","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"Gabau"},"content":"        return false;","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"Gabau"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"Gabau"},"content":"    public String encode() {","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"Gabau"},"content":"        //String indicating whether this task is done or not.","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"Gabau"},"content":"        String d \u003d this.isDone()","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"Gabau"},"content":"                ? Task.DONE","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"Gabau"},"content":"                : Task.NOTDONE;","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"Gabau"},"content":"        return Task.Label.D + Task.DELIMITER + d + Task.DELIMITER + this.name + Task.DELIMITER + this.lDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"Gabau"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Gabau":75}},{"path":"src/main/java/util/tasks/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabau"},"content":"package util.tasks;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"Gabau"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"Gabau"},"content":" * DukeException, an exception that arose from inaccurate input.","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"Gabau"},"content":" *","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"Gabau"},"content":"    public DukeException() {","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":"        super(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"Gabau"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"Gabau"},"content":"        super(message);","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"Gabau"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"Gabau":19}},{"path":"src/main/java/util/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabau"},"content":"package util.tasks;","lastModifiedDate":"2021-08-20"},{"lineNumber":2,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":3,"author":{"gitId":"Gabau"},"content":"import util.commons.Messages;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"Gabau"},"content":"public class Event extends DatedTask {","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":"    private static String label \u003d \"[E]\";","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":"    private Event(String name, String date) {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Gabau"},"content":"        super(name.trim(), date.trim());","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Gabau"},"content":"     * The factory method of the Event class that takes in the","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Gabau"},"content":"     * String that has not been split.","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Gabau"},"content":"     * @param total The String with the /at delimiter","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Gabau"},"content":"     * @return The Event from it.","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Gabau"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Gabau"},"content":"    public static Event of(String total) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"Gabau"},"content":"        String[] ss \u003d total.split(\"/at\", 2);","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"Gabau"},"content":"        if (ss.length \u003d\u003d 0) {","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"Gabau"},"content":"            throw new DukeException(Messages.EVENT_NO_INPUT_ERROR_MESSAGE);","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Gabau"},"content":"        return new Event(ss[0], ss[1]);","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"Gabau"},"content":"     * The factory method of the Event class that takes in the String that has been split.","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"Gabau"},"content":"     * @param name The name of the object.","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"Gabau"},"content":"     * @param date The date of the object.","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"Gabau"},"content":"     * @return The Event object that is created.","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"Gabau"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"Gabau"},"content":"    public static Event of(String name, String date) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"Gabau"},"content":"        return new Event(name, date);","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"Gabau"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":46,"author":{"gitId":"Gabau"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":47,"author":{"gitId":"Gabau"},"content":"        return this.label + super.toString() + \" (at: \" + this.localDate() + \")\";","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":49,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":50,"author":{"gitId":"Gabau"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":51,"author":{"gitId":"Gabau"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-08-15"},{"lineNumber":52,"author":{"gitId":"Gabau"},"content":"        if (obj instanceof Event) {","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"Gabau"},"content":"            Event e \u003d (Event) obj;","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"Gabau"},"content":"            return this.name.equals(e.name) \u0026\u0026 e.lDate.equals(this.lDate);","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":56,"author":{"gitId":"Gabau"},"content":"        return false;","lastModifiedDate":"2021-08-15"},{"lineNumber":57,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":58,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"Gabau"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"Gabau"},"content":"    public String encode() {","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"Gabau"},"content":"        //String indicating whether this task is done or not.","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"Gabau"},"content":"        String d \u003d this.isDone()","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"Gabau"},"content":"                ? Task.DONE","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"Gabau"},"content":"                : Task.NOTDONE;","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"Gabau"},"content":"        return Task.Label.E + Task.DELIMITER + d + Task.DELIMITER + this.name + Task.DELIMITER + this.lDate;","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"Gabau"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"Gabau":68}},{"path":"src/main/java/util/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabau"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"Gabau"},"content":" * Class of a task to be done.","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"Gabau"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"Gabau"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"Gabau"},"content":"package util.tasks;","lastModifiedDate":"2021-08-20"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":"     * The method to check if the Task is","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Gabau"},"content":"     * dated or not.","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":"     * @return Whether this task is dated.","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Gabau"},"content":"    public boolean isDated() {","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Gabau"},"content":"        return false;","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"Gabau"},"content":"     * Method to encode the task as a String.","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"Gabau"},"content":"     * Format - {type of task}{DELIMITER}{DONE/NOTDONE}{DELIMITER}{TASKNAME}{Extra information}","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"Gabau"},"content":"     * @return The encoded task;","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"Gabau"},"content":"    public abstract String encode();","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Gabau"},"content":"    protected static enum Label {","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"Gabau"},"content":"        T, E, D;","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"Gabau"},"content":"    protected String name;","lastModifiedDate":"2021-08-15"},{"lineNumber":35,"author":{"gitId":"Gabau"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"Gabau"},"content":"    //what is a better choice for a delimiter","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"Gabau"},"content":"    protected static String DELIMITER \u003d \"/ghx-124\";","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"Gabau"},"content":"    protected static String DONE \u003d \"DONETASKe123111\";","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"Gabau"},"content":"    protected static String NOTDONE \u003d \"NOTDONETASK454e-e\";","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"Gabau"},"content":"    private static String notDone \u003d \"[ ]\";","lastModifiedDate":"2021-08-15"},{"lineNumber":41,"author":{"gitId":"Gabau"},"content":"    private static String done \u003d \"[X]\";","lastModifiedDate":"2021-08-15"},{"lineNumber":42,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":43,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":44,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":45,"author":{"gitId":"Gabau"},"content":"     * Constructor of task.","lastModifiedDate":"2021-08-15"},{"lineNumber":46,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":47,"author":{"gitId":"Gabau"},"content":"     * @param s Name of the task.","lastModifiedDate":"2021-08-15"},{"lineNumber":48,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":49,"author":{"gitId":"Gabau"},"content":"    protected Task(String s) {","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"Gabau"},"content":"        this.name \u003d s;","lastModifiedDate":"2021-08-15"},{"lineNumber":51,"author":{"gitId":"Gabau"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":53,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":54,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":57,"author":{"gitId":"Gabau"},"content":"     * Marks when the task is done.","lastModifiedDate":"2021-08-15"},{"lineNumber":58,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":59,"author":{"gitId":"Gabau"},"content":"    public void done() {","lastModifiedDate":"2021-08-15"},{"lineNumber":60,"author":{"gitId":"Gabau"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":62,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":63,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"Gabau"},"content":"     * Obtains the corresponding task from the string input.","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"Gabau"},"content":"     * @param s The input String.","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"Gabau"},"content":"     * @return The task the string represents.","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"Gabau"},"content":"    public static Task decode(String s) throws DukeException {","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"Gabau"},"content":"        String[] ssplit \u003d s.split(DELIMITER, 4);","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"Gabau"},"content":"        Label currentType \u003d Label.valueOf(ssplit[0]);","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"Gabau"},"content":"        boolean done \u003d ssplit[1].equals(Task.DONE);","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"Gabau"},"content":"        Task t;","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"Gabau"},"content":"        switch (currentType) {","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"Gabau"},"content":"            //For todo","lastModifiedDate":"2021-08-21"},{"lineNumber":76,"author":{"gitId":"Gabau"},"content":"            case T:","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"Gabau"},"content":"                t \u003d ToDo.of(ssplit[2]);","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"Gabau"},"content":"                break;","lastModifiedDate":"2021-08-21"},{"lineNumber":79,"author":{"gitId":"Gabau"},"content":"            case E:","lastModifiedDate":"2021-08-21"},{"lineNumber":80,"author":{"gitId":"Gabau"},"content":"                t \u003d Event.of(ssplit[2], ssplit[3]);","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"Gabau"},"content":"                break;","lastModifiedDate":"2021-08-21"},{"lineNumber":82,"author":{"gitId":"Gabau"},"content":"            case D:","lastModifiedDate":"2021-08-21"},{"lineNumber":83,"author":{"gitId":"Gabau"},"content":"                t \u003d Deadline.of(ssplit[2], ssplit[3]);","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"Gabau"},"content":"                break;","lastModifiedDate":"2021-08-21"},{"lineNumber":85,"author":{"gitId":"Gabau"},"content":"            default:","lastModifiedDate":"2021-08-21"},{"lineNumber":86,"author":{"gitId":"Gabau"},"content":"                throw new DukeException(\"Not a valid text document\");","lastModifiedDate":"2021-08-21"},{"lineNumber":87,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":88,"author":{"gitId":"Gabau"},"content":"        if (done) {","lastModifiedDate":"2021-08-21"},{"lineNumber":89,"author":{"gitId":"Gabau"},"content":"            t.done();","lastModifiedDate":"2021-08-21"},{"lineNumber":90,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":91,"author":{"gitId":"Gabau"},"content":"        return t;","lastModifiedDate":"2021-08-21"},{"lineNumber":92,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":93,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":94,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":95,"author":{"gitId":"Gabau"},"content":"     * Whether this task is done or not.","lastModifiedDate":"2021-08-22"},{"lineNumber":96,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"Gabau"},"content":"     * @return true if the task is done and false otherwise.","lastModifiedDate":"2021-08-22"},{"lineNumber":98,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":99,"author":{"gitId":"Gabau"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-08-21"},{"lineNumber":100,"author":{"gitId":"Gabau"},"content":"        return this.isDone;","lastModifiedDate":"2021-08-22"},{"lineNumber":101,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":102,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":103,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":104,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":105,"author":{"gitId":"Gabau"},"content":"     * Checks if the name contains the input string as a word.","lastModifiedDate":"2021-08-22"},{"lineNumber":106,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":107,"author":{"gitId":"Gabau"},"content":"     * @param s Input word","lastModifiedDate":"2021-08-22"},{"lineNumber":108,"author":{"gitId":"Gabau"},"content":"     * @return True when the input string is in the name.","lastModifiedDate":"2021-08-22"},{"lineNumber":109,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":110,"author":{"gitId":"Gabau"},"content":"    public boolean contains(String s) {","lastModifiedDate":"2021-08-22"},{"lineNumber":111,"author":{"gitId":"Gabau"},"content":"        String[] arr \u003d this.name.split(\" \");","lastModifiedDate":"2021-08-22"},{"lineNumber":112,"author":{"gitId":"Gabau"},"content":"        for (int i \u003d 0; i \u003c arr.length; i++) {","lastModifiedDate":"2021-08-22"},{"lineNumber":113,"author":{"gitId":"Gabau"},"content":"            if (arr[i].equals(s)) {","lastModifiedDate":"2021-08-22"},{"lineNumber":114,"author":{"gitId":"Gabau"},"content":"                return true;","lastModifiedDate":"2021-08-22"},{"lineNumber":115,"author":{"gitId":"Gabau"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":116,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":117,"author":{"gitId":"Gabau"},"content":"        return false;","lastModifiedDate":"2021-08-22"},{"lineNumber":118,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":119,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":120,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":121,"author":{"gitId":"Gabau"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":122,"author":{"gitId":"Gabau"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":123,"author":{"gitId":"Gabau"},"content":"        String checkBox \u003d this.isDone","lastModifiedDate":"2021-08-22"},{"lineNumber":124,"author":{"gitId":"Gabau"},"content":"                ? Task.done","lastModifiedDate":"2021-08-21"},{"lineNumber":125,"author":{"gitId":"Gabau"},"content":"                : Task.notDone;","lastModifiedDate":"2021-08-21"},{"lineNumber":126,"author":{"gitId":"Gabau"},"content":"        return checkBox + \" \" + this.name;","lastModifiedDate":"2021-08-21"},{"lineNumber":127,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":128,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":129,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":130,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":131,"author":{"gitId":"Gabau"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":132,"author":{"gitId":"Gabau"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-08-15"},{"lineNumber":133,"author":{"gitId":"Gabau"},"content":"        if (obj instanceof Task) {","lastModifiedDate":"2021-08-15"},{"lineNumber":134,"author":{"gitId":"Gabau"},"content":"            Task t \u003d (Task) obj;","lastModifiedDate":"2021-08-15"},{"lineNumber":135,"author":{"gitId":"Gabau"},"content":"            return t.name.equals(this.name);","lastModifiedDate":"2021-08-15"},{"lineNumber":136,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":137,"author":{"gitId":"Gabau"},"content":"        return false;","lastModifiedDate":"2021-08-15"},{"lineNumber":138,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":139,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":140,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":141,"author":{"gitId":"Gabau"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"Gabau":141}},{"path":"src/main/java/util/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabau"},"content":"package util.tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Gabau"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Gabau"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Gabau"},"content":" * A class representing a list of tasks.","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Gabau"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Gabau"},"content":"public class TaskList extends ArrayList\u003cTask\u003e{","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Gabau"},"content":"     * Method for checking if a given task is in an ArrayList.","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Gabau"},"content":"     * @param t The task to check.","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Gabau"},"content":"     * @param arr The ArrayList it may or may not be in.","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Gabau"},"content":"     * @return True if the task is in the arraylist and false otherwise.","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Gabau"},"content":"    public static boolean isAdded(Task t, ArrayList\u003c? extends Task\u003e arr) {","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Gabau"},"content":"        for (int i \u003d 0; i \u003c arr.size(); i++) {","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Gabau"},"content":"            if (arr.get(i).equals(t)) return true;","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"Gabau"},"content":"        return false;","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Gabau"},"content":"    public TaskList filter(Predicate\u003c? super Task\u003e predicate) {","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Gabau"},"content":"        TaskList result \u003d new TaskList();","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Gabau"},"content":"        for (int i \u003d 0; i \u003c this.size(); i++) {","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"Gabau"},"content":"            if (predicate.test(this.get(i))) {","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"Gabau"},"content":"                result.add(this.get(i));","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"Gabau"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"Gabau"},"content":"        return result;","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"Gabau"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Gabau":37}},{"path":"src/main/java/util/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabau"},"content":"package util.tasks;","lastModifiedDate":"2021-08-20"},{"lineNumber":2,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":3,"author":{"gitId":"Gabau"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":"    private static String label \u003d \"[T]\";","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Gabau"},"content":"    private ToDo(String s) {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":"        super(s.trim());","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Gabau"},"content":"     * The factory method of the todo class","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Gabau"},"content":"     * @param s The name of the todo task.","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Gabau"},"content":"     * @return The Task with the corresponding name.","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Gabau"},"content":"    public static Task of(String s) {","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Gabau"},"content":"        return new ToDo(s);","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"Gabau"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"Gabau"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"Gabau"},"content":"        return this.label + super.toString();","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"Gabau"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"Gabau"},"content":"    public String encode() {","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"Gabau"},"content":"        //String indicating whether this task is done or not.","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"Gabau"},"content":"        String d \u003d this.isDone()","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"Gabau"},"content":"                ? Task.DONE","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"Gabau"},"content":"                : Task.NOTDONE;","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"Gabau"},"content":"        return Task.Label.T + Task.DELIMITER + d + Task.DELIMITER + this.name;","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"Gabau"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"Gabau":38}},{"path":"src/main/java/util/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabau"},"content":"package util.ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Gabau"},"content":"import util.tasks.DukeException;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Gabau"},"content":"import util.tasks.Task;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Gabau"},"content":"import util.commons.*;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Gabau"},"content":" * Deals with the interactions of the user.","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Gabau"},"content":"public class Ui {","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Gabau"},"content":"    private final Scanner sc;","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Gabau"},"content":"    public Ui() {","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Gabau"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"Gabau"},"content":"     * Ui method to print a string","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"Gabau"},"content":"     * in a special way. (only single line inputs though, multi line requires tabs)","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Gabau"},"content":"     * @param s The string to be printed.","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Gabau"},"content":"    public void print(String s) {","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Gabau"},"content":"        System.out.println(Messages.HLINE);","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"Gabau"},"content":"        System.out.println(\"\\t\" + s);","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"Gabau"},"content":"        System.out.println(Messages.HLINE);","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"Gabau"},"content":"    public void printTaskAdded(Task t, int i) {","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"Gabau"},"content":"        this.print(String.format(Messages.TASK_ADDED, t.toString(), i));","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"Gabau"},"content":"    public void printTaskDel(Task t, int i) {","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"Gabau"},"content":"        this.print(String.format(Messages.TASK_DELETED, t.toString(), i));","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"Gabau"},"content":"     * Method to print the Logo for Duke.","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"Gabau"},"content":"    public void print_logo() {","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"Gabau"},"content":"        System.out.println(\"Hello from\\n\" + Messages.LOGO);","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"Gabau"},"content":"     * Prints all the strings added.","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"Gabau"},"content":"    public void list(ArrayList\u003c? extends Task\u003e ls) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"Gabau"},"content":"        String output \u003d \"\";","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"Gabau"},"content":"        if (ls.size() \u003d\u003d 0) return;","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"Gabau"},"content":"        output +\u003d \"1.\" + ls.get(0);","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"Gabau"},"content":"        for (int i \u003d 1; i \u003c ls.size(); i++) {","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"Gabau"},"content":"            int indi \u003d i + 1;","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"Gabau"},"content":"            output +\u003d \"\\n\\t\" + indi + \".\" + ls.get(i);","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"Gabau"},"content":"        this.print(output);","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"Gabau"},"content":"     * Method for printing an exception.","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"Gabau"},"content":"     * @param e The exception to handle.","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"Gabau"},"content":"    public void print_error_message(Exception e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"Gabau"},"content":"        this.print(e.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"Gabau"},"content":"     * Obtains the input from the user.","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"Gabau"},"content":"    public String getInput() {","lastModifiedDate":"2021-08-22"},{"lineNumber":86,"author":{"gitId":"Gabau"},"content":"        return this.sc.nextLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":87,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":88,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":89,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"Gabau"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Gabau":90}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Gabau"},"content":"todo drink water","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"Gabau"},"content":"deadline make origami /by Now","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"Gabau"},"content":"event attend concert /at 9-11-2001","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"Gabau"},"content":"event make windows 11 /at Microsoft","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"Gabau"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":"done 2","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"Gabau"},"content":"todo eat cheese","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"Gabau"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":"delete 2","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"Gabau"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":"delete","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":"done 1","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"Gabau"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"Gabau"},"content":"bye","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"Gabau":15}}]
