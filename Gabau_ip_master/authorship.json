[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"Gabau"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"Gabau"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"Gabau"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"Gabau"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"Gabau"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"Gabau"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"Gabau"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"Gabau"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"Gabau"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"Gabau"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"Gabau"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"Gabau"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"Gabau"},"content":"    implementation \u0027org.junit.jupiter:junit-jupiter:5.4.2\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"Gabau"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-09-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Gabau":16,"-":45}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabau"},"content":"package duke;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"Gabau"},"content":"import duke.util.windows.Main;","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"Gabau"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":"public class Launcher {","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"Gabau"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"Gabau"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"Gabau"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"Gabau":11}},{"path":"src/main/java/duke/util/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabau"},"content":"package duke.util.commands;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Gabau"},"content":"import duke.util.commons.Messages;","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"Gabau"},"content":"import duke.util.tasks.Task;","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"Gabau"},"content":"import duke.util.tasks.TaskList;","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":"import duke.util.ui.Ui;","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"Gabau"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Gabau"},"content":" * Command representing the addition of a","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":" * task to the task list.","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Gabau"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":"public class AddCommand implements Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":"    private final TaskList tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Gabau"},"content":"    private final Task task;","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Gabau"},"content":"    //should use the same Ui -- or can use a different one?","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Gabau"},"content":"    private final Ui ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Gabau"},"content":"     * The constructor of the AddCommand object.","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Gabau"},"content":"     * @param tasks The list of tasks to add to.","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Gabau"},"content":"     * @param task The task to be add.","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"Gabau"},"content":"    public AddCommand(TaskList tasks, Task task) {","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"Gabau"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Gabau"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Gabau"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"Gabau"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"Gabau"},"content":"    public String execute() {","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"Gabau"},"content":"        if (TaskList.isAdded(task, tasks)) {","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"Gabau"},"content":"            return String.format(Messages.TASK_ALREADY_ADDED, task.toString());","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"Gabau"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"Gabau"},"content":"            tasks.add(task);","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"Gabau"},"content":"            return ui.getOutputFromTaskAdded(task, tasks.size());","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"Gabau"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Gabau":40}},{"path":"src/main/java/duke/util/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabau"},"content":"package duke.util.commands;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Gabau"},"content":"import duke.util.tasks.DukeException;","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":"@FunctionalInterface","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Gabau"},"content":"public interface Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":"     * The execution of a command.","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":"     * @throws DukeException When the command activity throws the exception.","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Gabau"},"content":"    public String execute() throws DukeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"Gabau"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Gabau":15}},{"path":"src/main/java/duke/util/commands/CommandList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabau"},"content":"package duke.util.commands;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Gabau"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"Gabau"},"content":"import duke.util.tasks.DukeException;","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Gabau"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":" * The class representing a list of commands.","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Gabau"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":"public class CommandList extends ArrayList\u003cCommand\u003e {","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Gabau"},"content":"     * Executing all the commands in the command list.","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Gabau"},"content":"     * @throws DukeException When a class in the list has the exception.","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Gabau"},"content":"    public String executeAll() throws DukeException {","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"Gabau"},"content":"        String output \u003d \"\";","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"Gabau"},"content":"        for (int i \u003d 0; i \u003c this.size(); i++) {","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Gabau"},"content":"            output +\u003d this.get(i).execute();","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"Gabau"},"content":"        return output;","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Gabau"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Gabau":28}},{"path":"src/main/java/duke/util/commands/DelCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabau"},"content":"package duke.util.commands;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Gabau"},"content":"import duke.util.tasks.DateTaskTable;","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"Gabau"},"content":"import duke.util.tasks.DatedTask;","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"Gabau"},"content":"import duke.util.tasks.Task;","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":"import duke.util.tasks.TaskList;","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":"import duke.util.ui.Ui;","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Gabau"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":" * The class representing the delete command.","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Gabau"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":"public class DelCommand implements Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Gabau"},"content":"    private final int delPos;","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Gabau"},"content":"    private final TaskList tasklist;","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Gabau"},"content":"    //should personalize the ui for each of the commands?","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Gabau"},"content":"    private final Ui delUI \u003d new Ui();","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Gabau"},"content":"    private final DateTaskTable table;","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Gabau"},"content":"     * Constructor for the delete command.","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Gabau"},"content":"     * @param delPos The position to delete at.","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"Gabau"},"content":"     * @param tasklist The tasklist to delete from.","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"Gabau"},"content":"     * @param table The dateTaskTable we might delete from.","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Gabau"},"content":"    public DelCommand(int delPos, TaskList tasklist, DateTaskTable table) {","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Gabau"},"content":"        this.delPos \u003d delPos;","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Gabau"},"content":"        this.tasklist \u003d tasklist;","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Gabau"},"content":"        this.table \u003d table;","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"Gabau"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"Gabau"},"content":"    public String execute() {","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"Gabau"},"content":"        //have to account for when it is a dated item.","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"Gabau"},"content":"        Task t \u003d this.tasklist.remove(delPos - 1);","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"Gabau"},"content":"        //can use instanceof for this","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"Gabau"},"content":"        if (t.isDated()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"Gabau"},"content":"            DatedTask dt \u003d (DatedTask) t;","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"Gabau"},"content":"            dt.removeFromTable(table);","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"Gabau"},"content":"        return delUI.getOutputFromTaskDeleted(t, tasklist.size());","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"Gabau"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Gabau":51}},{"path":"src/main/java/duke/util/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabau"},"content":"package duke.util.commands;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Gabau"},"content":"import duke.util.commons.Messages;","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"Gabau"},"content":"import duke.util.tasks.Task;","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"Gabau"},"content":"import duke.util.ui.Ui;","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Gabau"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Gabau"},"content":" * Class representing the Done command.","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Gabau"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":"public class DoneCommand implements Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":"    private final Task t;","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Gabau"},"content":"    private final Ui ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Gabau"},"content":"     * The constructor of the DoneCommand","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Gabau"},"content":"     * @param t The task that will be done.","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Gabau"},"content":"     * @param ui The ui to print the message.","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Gabau"},"content":"    public DoneCommand(Task t, Ui ui) {","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Gabau"},"content":"        this.t \u003d t;","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"Gabau"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Gabau"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"Gabau"},"content":"    public String execute() {","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"Gabau"},"content":"        t.done();","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"Gabau"},"content":"        return String.format(Messages.TASK_COMPLETE, t.toString());","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"Gabau"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Gabau":36}},{"path":"src/main/java/duke/util/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabau"},"content":"package duke.util.commands;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Gabau"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Gabau"},"content":" * When this command runs, the Duke stops working.","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Gabau"},"content":"public class ExitCommand implements Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Gabau"},"content":"    private static boolean isClosed \u003d false;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Gabau"},"content":"     * The constructor of the ExitCommand.","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Gabau"},"content":"    public ExitCommand() {","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Gabau"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Gabau"},"content":"    public String execute() {","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"Gabau"},"content":"        this.isClosed \u003d true;","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"Gabau"},"content":"        return \"\";","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"Gabau"},"content":"    public static boolean isExit() {","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"Gabau"},"content":"        return ExitCommand.isClosed;","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"Gabau"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Gabau":32}},{"path":"src/main/java/duke/util/commons/Messages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabau"},"content":"package duke.util.commons;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Gabau"},"content":"public class Messages {","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":"    public static final String LOGO \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Gabau"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Gabau"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Gabau"},"content":"    public static final String GREETINGS \u003d \"Greetings! I\u0027m Duke\\n\\tWhat can I do for you?\";","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":"    public static final String HLINE \u003d \"\\t----------------------------\";","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Gabau"},"content":"    //Messages that have to be formatted to include tasks","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Gabau"},"content":"    public static final String TASK_ADDED \u003d","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Gabau"},"content":"            \"Roger! I have added this task.\\n\\t\"","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"Gabau"},"content":"                    + \"%s\\n\\t\"","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"Gabau"},"content":"                    + \"Now you have %d tasks in the list.\\n\\t\";","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"Gabau"},"content":"    public static final String TASK_DELETED \u003d","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Gabau"},"content":"            \"The following task has been removed\\n\\t\"","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"Gabau"},"content":"                    + \"%s\\n\\t\"","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"Gabau"},"content":"                    + \"Now you have %d tasks remaining\";","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"Gabau"},"content":"    public static final String TASK_NO_DESCRIPTOR_ERROR \u003d \"☹ OOPS!!! The description of a %s cannot be empty.\";","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Gabau"},"content":"    public static final String TASK_NOT_UNDERSTOOD_ERROR \u003d \"☹ OOPS!!! I do no know what to do\";","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Gabau"},"content":"    public static final String TASK_ALREADY_ADDED \u003d \"Task already added: %s\";","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"Gabau"},"content":"    public static final String TASK_COMPLETE \u003d","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"Gabau"},"content":"            \"Nice, I\u0027ve marked this task as done\\n\\t\"","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"Gabau"},"content":"                    + \"%s\";","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"Gabau"},"content":"    //Error messages","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"Gabau"},"content":"    public static final String EVENT_NO_INPUT_ERROR_MESSAGE \u003d","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"Gabau"},"content":"            \"☹ OOPS!!! The event deadline must be filled in prefixed by /at\";","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"Gabau"},"content":"    public static final String INVALID_DONE_INPUT \u003d","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"Gabau"},"content":"            \"☹ OOPS!!! The input integer is invalid for the task list.\";","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"Gabau"},"content":"    public static final String DEADLINE_NO_INPUT_ERROR_MESSAGE \u003d","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"Gabau"},"content":"            \"☹ OOPS!!! The deadline deadline must be filled in prefixed by /by\";","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"Gabau"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Gabau":46}},{"path":"src/main/java/duke/util/controller/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabau"},"content":"package duke.util.controller;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"Gabau"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"Gabau"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"Gabau"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":"import duke.util.commands.AddCommand;","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"Gabau"},"content":"import duke.util.commands.CommandList;","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"Gabau"},"content":"import duke.util.parser.Parser;","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":"import duke.util.storage.Storage;","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"Gabau"},"content":"import duke.util.tasks.DateTaskTable;","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":"import duke.util.tasks.Deadline;","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":"import duke.util.tasks.DukeException;","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"Gabau"},"content":"import duke.util.tasks.Event;","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"Gabau"},"content":"import duke.util.tasks.Task;","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"Gabau"},"content":"import duke.util.tasks.TaskList;","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"Gabau"},"content":"import duke.util.tasks.ToDo;","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"Gabau"},"content":"import duke.util.ui.Ui;","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"Gabau"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"Gabau"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"Gabau"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"Gabau"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"Gabau"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Gabau"},"content":" * The class representing the Duke.","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Gabau"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Gabau"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Gabau"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"Gabau"},"content":"public class Duke {","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"Gabau"},"content":"    private static final String saveDirectory \u003d \"data/\";","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"Gabau"},"content":"    private static final String saveFilePath \u003d \"save.txt\";","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"Gabau"},"content":"    private static final String tempFilePath \u003d \"temp.txt\";","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"Gabau"},"content":"    private static ListView\u003cTask\u003e out;","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":37,"author":{"gitId":"Gabau"},"content":"    private final Parser parser;","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"Gabau"},"content":"    private final Ui ui \u003d new Ui();","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"Gabau"},"content":"    private final Storage storage;","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"Gabau"},"content":"    private final TaskList tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"Gabau"},"content":"    private final DateTaskTable dateTaskTable;","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"Gabau"},"content":"     * Constructor for duke.","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"Gabau"},"content":"     * @param filename The file to save at.","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"Gabau"},"content":"     * @param tempFilePath The tempfile name to use.","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"Gabau"},"content":"    public Duke(String filename, String tempFilePath) {","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"Gabau"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"Gabau"},"content":"        this.dateTaskTable \u003d new DateTaskTable();","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"Gabau"},"content":"        this.parser \u003d new Parser(this.ui, this.tasks, this.dateTaskTable);","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"Gabau"},"content":"        this.storage \u003d new Storage(saveDirectory + filename,","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"Gabau"},"content":"                saveDirectory + tempFilePath,","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"Gabau"},"content":"                this.dateTaskTable);","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"Gabau"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"Gabau"},"content":"            this.tasks.addAll(this.storage.read());","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"Gabau"},"content":"        } catch (IOException | DukeException ex) {","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"Gabau"},"content":"            ui.print(ex.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"Gabau"},"content":"        ui.print_logo();","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":68,"author":{"gitId":"Gabau"},"content":"     * Returns the response from the duke when it takes in a String input.","lastModifiedDate":"2021-08-31"},{"lineNumber":69,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":70,"author":{"gitId":"Gabau"},"content":"     * @param inpt The input string.","lastModifiedDate":"2021-08-31"},{"lineNumber":71,"author":{"gitId":"Gabau"},"content":"     * @return","lastModifiedDate":"2021-08-31"},{"lineNumber":72,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":73,"author":{"gitId":"Gabau"},"content":"    public String getResponse(String inpt) {","lastModifiedDate":"2021-08-28"},{"lineNumber":74,"author":{"gitId":"Gabau"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"Gabau"},"content":"            CommandList cmds \u003d parser.inputsParser(inpt);","lastModifiedDate":"2021-08-28"},{"lineNumber":76,"author":{"gitId":"Gabau"},"content":"            String result \u003d cmds.executeAll();","lastModifiedDate":"2021-08-28"},{"lineNumber":77,"author":{"gitId":"Gabau"},"content":"            this.storage.write(this.tasks);","lastModifiedDate":"2021-08-31"},{"lineNumber":78,"author":{"gitId":"Gabau"},"content":"            return result;","lastModifiedDate":"2021-08-28"},{"lineNumber":79,"author":{"gitId":"Gabau"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":80,"author":{"gitId":"Gabau"},"content":"            return e.getMessage();","lastModifiedDate":"2021-08-28"},{"lineNumber":81,"author":{"gitId":"Gabau"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":82,"author":{"gitId":"Gabau"},"content":"            return \"Expected date format YYYY MM DD\";","lastModifiedDate":"2021-08-28"},{"lineNumber":83,"author":{"gitId":"Gabau"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":84,"author":{"gitId":"Gabau"},"content":"            return e.getMessage();","lastModifiedDate":"2021-08-28"},{"lineNumber":85,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":86,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":87,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":88,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":89,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":90,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":91,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":92,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":93,"author":{"gitId":"Gabau"},"content":"     * Function to add a todo task","lastModifiedDate":"2021-08-29"},{"lineNumber":94,"author":{"gitId":"Gabau"},"content":"     * from just taking in a String.","lastModifiedDate":"2021-08-29"},{"lineNumber":95,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":96,"author":{"gitId":"Gabau"},"content":"     * @param string","lastModifiedDate":"2021-08-29"},{"lineNumber":97,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":98,"author":{"gitId":"Gabau"},"content":"    public void addTodo(String string) {","lastModifiedDate":"2021-08-29"},{"lineNumber":99,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":100,"author":{"gitId":"Gabau"},"content":"        AddCommand taskAdd \u003d new AddCommand(this.tasks, ToDo.of(string));","lastModifiedDate":"2021-08-31"},{"lineNumber":101,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":102,"author":{"gitId":"Gabau"},"content":"        taskAdd.execute();","lastModifiedDate":"2021-09-01"},{"lineNumber":103,"author":{"gitId":"Gabau"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":104,"author":{"gitId":"Gabau"},"content":"            this.storage.write(this.tasks);","lastModifiedDate":"2021-08-31"},{"lineNumber":105,"author":{"gitId":"Gabau"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":106,"author":{"gitId":"Gabau"},"content":"            ui.printErrorMessage(e);","lastModifiedDate":"2021-08-31"},{"lineNumber":107,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":108,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":109,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":110,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":111,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":112,"author":{"gitId":"Gabau"},"content":"     * Function to add a deadline task","lastModifiedDate":"2021-08-29"},{"lineNumber":113,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":114,"author":{"gitId":"Gabau"},"content":"     * @param description The description of the input deadline","lastModifiedDate":"2021-08-31"},{"lineNumber":115,"author":{"gitId":"Gabau"},"content":"     * @param date The date the deadline is by.","lastModifiedDate":"2021-08-31"},{"lineNumber":116,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":117,"author":{"gitId":"Gabau"},"content":"    public void addDeadline(String description, LocalDate date) {","lastModifiedDate":"2021-08-31"},{"lineNumber":118,"author":{"gitId":"Gabau"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":119,"author":{"gitId":"Gabau"},"content":"            Deadline deadline \u003d Deadline.of(description, date.toString());","lastModifiedDate":"2021-08-31"},{"lineNumber":120,"author":{"gitId":"Gabau"},"content":"            AddCommand res \u003d new AddCommand(this.tasks, deadline);","lastModifiedDate":"2021-08-31"},{"lineNumber":121,"author":{"gitId":"Gabau"},"content":"            this.dateTaskTable.add(deadline);","lastModifiedDate":"2021-08-29"},{"lineNumber":122,"author":{"gitId":"Gabau"},"content":"            res.execute();","lastModifiedDate":"2021-08-31"},{"lineNumber":123,"author":{"gitId":"Gabau"},"content":"            this.storage.write(this.tasks);","lastModifiedDate":"2021-09-01"},{"lineNumber":124,"author":{"gitId":"Gabau"},"content":"        } catch (DukeException | IOException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":125,"author":{"gitId":"Gabau"},"content":"            ui.printErrorMessage(e);","lastModifiedDate":"2021-08-31"},{"lineNumber":126,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":127,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":128,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":129,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":130,"author":{"gitId":"Gabau"},"content":"     * Function to add an event task","lastModifiedDate":"2021-08-29"},{"lineNumber":131,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":132,"author":{"gitId":"Gabau"},"content":"     * @param description The description of the Event to add.","lastModifiedDate":"2021-08-31"},{"lineNumber":133,"author":{"gitId":"Gabau"},"content":"     * @param date The date the event is at.","lastModifiedDate":"2021-08-31"},{"lineNumber":134,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":135,"author":{"gitId":"Gabau"},"content":"    public void addEvent(String description, LocalDate date) {","lastModifiedDate":"2021-08-31"},{"lineNumber":136,"author":{"gitId":"Gabau"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":137,"author":{"gitId":"Gabau"},"content":"            Event event \u003d Event.of(description, date.toString());","lastModifiedDate":"2021-08-31"},{"lineNumber":138,"author":{"gitId":"Gabau"},"content":"            AddCommand addEvent \u003d new AddCommand(this.tasks, event);","lastModifiedDate":"2021-08-31"},{"lineNumber":139,"author":{"gitId":"Gabau"},"content":"            this.dateTaskTable.add(event);","lastModifiedDate":"2021-08-29"},{"lineNumber":140,"author":{"gitId":"Gabau"},"content":"            addEvent.execute();","lastModifiedDate":"2021-08-31"},{"lineNumber":141,"author":{"gitId":"Gabau"},"content":"            this.storage.write(this.tasks);","lastModifiedDate":"2021-09-01"},{"lineNumber":142,"author":{"gitId":"Gabau"},"content":"        } catch (DukeException | IOException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":143,"author":{"gitId":"Gabau"},"content":"            ui.printErrorMessage(e);","lastModifiedDate":"2021-08-31"},{"lineNumber":144,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":145,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":146,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":147,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":148,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":149,"author":{"gitId":"Gabau"},"content":"     * Method to print the input string into the Text box text","lastModifiedDate":"2021-08-31"},{"lineNumber":150,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":151,"author":{"gitId":"Gabau"},"content":"     * @param text The Text to show at","lastModifiedDate":"2021-08-31"},{"lineNumber":152,"author":{"gitId":"Gabau"},"content":"     * @param val The value to print in the text.","lastModifiedDate":"2021-08-31"},{"lineNumber":153,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":154,"author":{"gitId":"Gabau"},"content":"    public void printToText(Text text, String val) {","lastModifiedDate":"2021-08-31"},{"lineNumber":155,"author":{"gitId":"Gabau"},"content":"        if (text \u003d\u003d null) {","lastModifiedDate":"2021-08-29"},{"lineNumber":156,"author":{"gitId":"Gabau"},"content":"            return;","lastModifiedDate":"2021-08-29"},{"lineNumber":157,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":158,"author":{"gitId":"Gabau"},"content":"        text.setText(val);","lastModifiedDate":"2021-08-31"},{"lineNumber":159,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":160,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":161,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":162,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":163,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":164,"author":{"gitId":"Gabau"},"content":"     * Handles the moment when the remove button is pressed.","lastModifiedDate":"2021-08-31"},{"lineNumber":165,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":166,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":167,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":168,"author":{"gitId":"Gabau"},"content":"    public void removeHandler(ObservableList\u003cTask\u003e itemsToRemove) {","lastModifiedDate":"2021-08-31"},{"lineNumber":169,"author":{"gitId":"Gabau"},"content":"        for (int i \u003d 0; i \u003c itemsToRemove.size(); i++) {","lastModifiedDate":"2021-08-31"},{"lineNumber":170,"author":{"gitId":"Gabau"},"content":"            this.tasks.remove(itemsToRemove.get(i));","lastModifiedDate":"2021-08-31"},{"lineNumber":171,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":172,"author":{"gitId":"Gabau"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":173,"author":{"gitId":"Gabau"},"content":"            this.storage.write(this.tasks);","lastModifiedDate":"2021-08-31"},{"lineNumber":174,"author":{"gitId":"Gabau"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":175,"author":{"gitId":"Gabau"},"content":"            ui.printErrorMessage(e);","lastModifiedDate":"2021-08-31"},{"lineNumber":176,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":177,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":178,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":179,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":180,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":181,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":182,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":183,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":184,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":185,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":186,"author":{"gitId":"Gabau"},"content":"     * A method to print the list to dukes list feature.","lastModifiedDate":"2021-08-31"},{"lineNumber":187,"author":{"gitId":"Gabau"},"content":"     * Renders the list command kind of obsolete. Is there a way to make","lastModifiedDate":"2021-09-04"},{"lineNumber":188,"author":{"gitId":"Gabau"},"content":"     * this method call not used?","lastModifiedDate":"2021-09-04"},{"lineNumber":189,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":190,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":191,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":192,"author":{"gitId":"Gabau"},"content":"    public void printList() {","lastModifiedDate":"2021-08-31"},{"lineNumber":193,"author":{"gitId":"Gabau"},"content":"        Duke.out.setItems(FXCollections.observableArrayList(this.tasks));","lastModifiedDate":"2021-08-31"},{"lineNumber":194,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":195,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":196,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":197,"author":{"gitId":"Gabau"},"content":"    public static void setOut(ListView\u003cTask\u003e viewer) {","lastModifiedDate":"2021-08-31"},{"lineNumber":198,"author":{"gitId":"Gabau"},"content":"        Duke.out \u003d viewer;","lastModifiedDate":"2021-08-31"},{"lineNumber":199,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":200,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":202,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":203,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":204,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":205,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":206,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":207,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Gabau":206,"-":2}},{"path":"src/main/java/duke/util/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabau"},"content":"package duke.util.parser;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Gabau"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"Gabau"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"Gabau"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":"import duke.util.commands.AddCommand;","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"Gabau"},"content":"import duke.util.commands.CommandList;","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"Gabau"},"content":"import duke.util.commands.DelCommand;","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":"import duke.util.commands.DoneCommand;","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"Gabau"},"content":"import duke.util.commands.ExitCommand;","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":"import duke.util.commons.Messages;","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":"import duke.util.tasks.DateTaskTable;","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"Gabau"},"content":"import duke.util.tasks.DatedTask;","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"Gabau"},"content":"import duke.util.tasks.Deadline;","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"Gabau"},"content":"import duke.util.tasks.DukeException;","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"Gabau"},"content":"import duke.util.tasks.Event;","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"Gabau"},"content":"import duke.util.tasks.Task;","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"Gabau"},"content":"import duke.util.tasks.TaskList;","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"Gabau"},"content":"import duke.util.tasks.ToDo;","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"Gabau"},"content":"import duke.util.ui.Ui;","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"Gabau"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"Gabau"},"content":" * The class representing the parser that interprets the input.","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Gabau"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Gabau"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Gabau"},"content":"public class Parser {","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"Gabau"},"content":"    private static final String DONE \u003d \"done\";","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"Gabau"},"content":"    private static final String DELETE \u003d \"delete\";","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"Gabau"},"content":"    private static final String TODO \u003d \"todo\";","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"Gabau"},"content":"    private static final String DEADLINE \u003d \"deadline\";","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"Gabau"},"content":"    private static final String EVENT \u003d \"event\";","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"Gabau"},"content":"    //the command for listing all the tasks under a certain date.","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"Gabau"},"content":"    private static final String DLIST \u003d \"dlist\";","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"Gabau"},"content":"    private static final String LIST \u003d \"list\";","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"Gabau"},"content":"    private static final String BYE \u003d \"bye\";","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"Gabau"},"content":"    private static final String FIND \u003d \"find\";","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"Gabau"},"content":"    //is it just me or does the parser","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"Gabau"},"content":"    //have to contain all the objects to send the information to","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"Gabau"},"content":"    private final Ui ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"Gabau"},"content":"    private final TaskList taskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"Gabau"},"content":"    private final DateTaskTable dateTaskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"Gabau"},"content":"     * Constructor for the parser class.","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"Gabau"},"content":"     * @param ui The ui that displays the information.","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"Gabau"},"content":"     * @param taskList The tasklist that contains the tasks.","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"Gabau"},"content":"     * @param dateTaskList The datetasktable that contains the datetasks as well.","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"Gabau"},"content":"    public Parser(Ui ui, TaskList taskList, DateTaskTable dateTaskList) {","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"Gabau"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"Gabau"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"Gabau"},"content":"        this.dateTaskList \u003d dateTaskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"Gabau"},"content":"     * To understand the input.","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"Gabau"},"content":"     * @param input The input String","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"Gabau"},"content":"     * @throws DukeException Exception due to wrong input.","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"Gabau"},"content":"    public CommandList inputsParser(String input) throws DukeException, DateTimeParseException {","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"Gabau"},"content":"        String[] twoInputs \u003d input.split(\" \", 2);","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"Gabau"},"content":"        String cmd \u003d twoInputs[0];","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"Gabau"},"content":"        CommandList cmds \u003d new CommandList();","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"Gabau"},"content":"        if (twoInputs.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"Gabau"},"content":"            //when there is only one input","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"Gabau"},"content":"            switch(cmd) {","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"Gabau"},"content":"            case BYE:","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"Gabau"},"content":"                cmds.add(new ExitCommand());","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"Gabau"},"content":"                break;","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"Gabau"},"content":"            case LIST:","lastModifiedDate":"2021-08-22"},{"lineNumber":86,"author":{"gitId":"Gabau"},"content":"                cmds.add(() -\u003e ui.list(this.taskList));","lastModifiedDate":"2021-08-22"},{"lineNumber":87,"author":{"gitId":"Gabau"},"content":"                break;","lastModifiedDate":"2021-08-22"},{"lineNumber":88,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":89,"author":{"gitId":"Gabau"},"content":"            case DLIST:","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"Gabau"},"content":"                //fallthrough","lastModifiedDate":"2021-08-22"},{"lineNumber":91,"author":{"gitId":"Gabau"},"content":"            case DONE:","lastModifiedDate":"2021-08-22"},{"lineNumber":92,"author":{"gitId":"Gabau"},"content":"                //fallthrough","lastModifiedDate":"2021-08-22"},{"lineNumber":93,"author":{"gitId":"Gabau"},"content":"            case TODO:","lastModifiedDate":"2021-08-22"},{"lineNumber":94,"author":{"gitId":"Gabau"},"content":"                //fallthrough","lastModifiedDate":"2021-08-22"},{"lineNumber":95,"author":{"gitId":"Gabau"},"content":"            case DEADLINE:","lastModifiedDate":"2021-08-22"},{"lineNumber":96,"author":{"gitId":"Gabau"},"content":"                //fallthrough","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"Gabau"},"content":"            case EVENT:","lastModifiedDate":"2021-08-22"},{"lineNumber":98,"author":{"gitId":"Gabau"},"content":"                throw new DukeException(String.format(Messages.TASK_NO_DESCRIPTOR_ERROR, cmd));","lastModifiedDate":"2021-08-22"},{"lineNumber":99,"author":{"gitId":"Gabau"},"content":"            default:","lastModifiedDate":"2021-08-22"},{"lineNumber":100,"author":{"gitId":"Gabau"},"content":"                throw new DukeException(Messages.TASK_NOT_UNDERSTOOD_ERROR);","lastModifiedDate":"2021-08-22"},{"lineNumber":101,"author":{"gitId":"Gabau"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":102,"author":{"gitId":"Gabau"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":103,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":104,"author":{"gitId":"Gabau"},"content":"            String description \u003d twoInputs[1];","lastModifiedDate":"2021-08-22"},{"lineNumber":105,"author":{"gitId":"Gabau"},"content":"            switch (cmd) {","lastModifiedDate":"2021-08-22"},{"lineNumber":106,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":107,"author":{"gitId":"Gabau"},"content":"            case FIND:","lastModifiedDate":"2021-08-22"},{"lineNumber":108,"author":{"gitId":"Gabau"},"content":"                cmds.add(() -\u003e ui.list(taskList.filter(t -\u003e t.contains(description.trim()))));","lastModifiedDate":"2021-08-22"},{"lineNumber":109,"author":{"gitId":"Gabau"},"content":"                break;","lastModifiedDate":"2021-08-22"},{"lineNumber":110,"author":{"gitId":"Gabau"},"content":"            case DONE:","lastModifiedDate":"2021-08-22"},{"lineNumber":111,"author":{"gitId":"Gabau"},"content":"                int i \u003d Integer.parseInt(description) - 1;","lastModifiedDate":"2021-08-22"},{"lineNumber":112,"author":{"gitId":"Gabau"},"content":"                if (i \u003e taskList.size() || i \u003c 0) {","lastModifiedDate":"2021-08-28"},{"lineNumber":113,"author":{"gitId":"Gabau"},"content":"                    throw new DukeException(Messages.INVALID_DONE_INPUT);","lastModifiedDate":"2021-08-28"},{"lineNumber":114,"author":{"gitId":"Gabau"},"content":"                }","lastModifiedDate":"2021-08-28"},{"lineNumber":115,"author":{"gitId":"Gabau"},"content":"                Task b \u003d taskList.get(i);","lastModifiedDate":"2021-08-22"},{"lineNumber":116,"author":{"gitId":"Gabau"},"content":"                cmds.add(new DoneCommand(b, this.ui));","lastModifiedDate":"2021-08-22"},{"lineNumber":117,"author":{"gitId":"Gabau"},"content":"                break;","lastModifiedDate":"2021-08-22"},{"lineNumber":118,"author":{"gitId":"Gabau"},"content":"                //dlist does not work -- suspect is coz of the hashmap","lastModifiedDate":"2021-08-22"},{"lineNumber":119,"author":{"gitId":"Gabau"},"content":"            case DLIST:","lastModifiedDate":"2021-08-22"},{"lineNumber":120,"author":{"gitId":"Gabau"},"content":"                //to implement such a filter in tasklist","lastModifiedDate":"2021-08-22"},{"lineNumber":121,"author":{"gitId":"Gabau"},"content":"                ArrayList\u003cDatedTask\u003e ls \u003d dateTaskList.get(dateParse(description.trim()));","lastModifiedDate":"2021-08-22"},{"lineNumber":122,"author":{"gitId":"Gabau"},"content":"                cmds.add(() -\u003e {","lastModifiedDate":"2021-08-22"},{"lineNumber":123,"author":{"gitId":"Gabau"},"content":"                    if (ls !\u003d null) {","lastModifiedDate":"2021-08-28"},{"lineNumber":124,"author":{"gitId":"Gabau"},"content":"                        ui.list(ls);","lastModifiedDate":"2021-08-28"},{"lineNumber":125,"author":{"gitId":"Gabau"},"content":"                    }","lastModifiedDate":"2021-08-28"},{"lineNumber":126,"author":{"gitId":"Gabau"},"content":"                    return \"\";","lastModifiedDate":"2021-08-28"},{"lineNumber":127,"author":{"gitId":"Gabau"},"content":"                });","lastModifiedDate":"2021-08-22"},{"lineNumber":128,"author":{"gitId":"Gabau"},"content":"                break;","lastModifiedDate":"2021-08-22"},{"lineNumber":129,"author":{"gitId":"Gabau"},"content":"            case DELETE:","lastModifiedDate":"2021-08-22"},{"lineNumber":130,"author":{"gitId":"Gabau"},"content":"                cmds.add(new DelCommand(Integer.parseInt(description), this.taskList, this.dateTaskList));","lastModifiedDate":"2021-08-22"},{"lineNumber":131,"author":{"gitId":"Gabau"},"content":"                break;","lastModifiedDate":"2021-08-22"},{"lineNumber":132,"author":{"gitId":"Gabau"},"content":"            case TODO:","lastModifiedDate":"2021-08-22"},{"lineNumber":133,"author":{"gitId":"Gabau"},"content":"                Task t \u003d ToDo.of(description);","lastModifiedDate":"2021-08-22"},{"lineNumber":134,"author":{"gitId":"Gabau"},"content":"                cmds.add(new AddCommand(taskList, t));","lastModifiedDate":"2021-08-22"},{"lineNumber":135,"author":{"gitId":"Gabau"},"content":"                break;","lastModifiedDate":"2021-08-22"},{"lineNumber":136,"author":{"gitId":"Gabau"},"content":"            case EVENT:","lastModifiedDate":"2021-08-22"},{"lineNumber":137,"author":{"gitId":"Gabau"},"content":"                Event e \u003d Event.of(description);","lastModifiedDate":"2021-08-22"},{"lineNumber":138,"author":{"gitId":"Gabau"},"content":"                cmds.add(new AddCommand(taskList, e));","lastModifiedDate":"2021-08-22"},{"lineNumber":139,"author":{"gitId":"Gabau"},"content":"                cmds.add(() -\u003e {","lastModifiedDate":"2021-08-28"},{"lineNumber":140,"author":{"gitId":"Gabau"},"content":"                    dateTaskList.add(e);","lastModifiedDate":"2021-08-28"},{"lineNumber":141,"author":{"gitId":"Gabau"},"content":"                    return \"\";","lastModifiedDate":"2021-08-28"},{"lineNumber":142,"author":{"gitId":"Gabau"},"content":"                });","lastModifiedDate":"2021-08-28"},{"lineNumber":143,"author":{"gitId":"Gabau"},"content":"                break;","lastModifiedDate":"2021-08-22"},{"lineNumber":144,"author":{"gitId":"Gabau"},"content":"            case DEADLINE:","lastModifiedDate":"2021-08-22"},{"lineNumber":145,"author":{"gitId":"Gabau"},"content":"                Deadline d \u003d Deadline.of(description);","lastModifiedDate":"2021-08-22"},{"lineNumber":146,"author":{"gitId":"Gabau"},"content":"                cmds.add(new AddCommand(taskList, d));","lastModifiedDate":"2021-08-22"},{"lineNumber":147,"author":{"gitId":"Gabau"},"content":"                cmds.add(() -\u003e {","lastModifiedDate":"2021-08-28"},{"lineNumber":148,"author":{"gitId":"Gabau"},"content":"                    dateTaskList.add(d);","lastModifiedDate":"2021-08-28"},{"lineNumber":149,"author":{"gitId":"Gabau"},"content":"                    return \"\";","lastModifiedDate":"2021-08-28"},{"lineNumber":150,"author":{"gitId":"Gabau"},"content":"                });","lastModifiedDate":"2021-08-28"},{"lineNumber":151,"author":{"gitId":"Gabau"},"content":"                break;","lastModifiedDate":"2021-08-22"},{"lineNumber":152,"author":{"gitId":"Gabau"},"content":"            default:","lastModifiedDate":"2021-08-22"},{"lineNumber":153,"author":{"gitId":"Gabau"},"content":"                throw new DukeException(Messages.TASK_NOT_UNDERSTOOD_ERROR);","lastModifiedDate":"2021-08-22"},{"lineNumber":154,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":155,"author":{"gitId":"Gabau"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":156,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":157,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":158,"author":{"gitId":"Gabau"},"content":"        return cmds;","lastModifiedDate":"2021-08-22"},{"lineNumber":159,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":160,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":161,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":162,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":163,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":164,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":165,"author":{"gitId":"Gabau"},"content":"     * Method to parse the string into a date.","lastModifiedDate":"2021-08-22"},{"lineNumber":166,"author":{"gitId":"Gabau"},"content":"     * Goal: To be able to parse as many possible formats","lastModifiedDate":"2021-08-22"},{"lineNumber":167,"author":{"gitId":"Gabau"},"content":"     * as possible. (TBC)","lastModifiedDate":"2021-08-22"},{"lineNumber":168,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":169,"author":{"gitId":"Gabau"},"content":"     * @param s The string to parse","lastModifiedDate":"2021-08-22"},{"lineNumber":170,"author":{"gitId":"Gabau"},"content":"     * @return The LocalDate object representing the input date.","lastModifiedDate":"2021-08-22"},{"lineNumber":171,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":172,"author":{"gitId":"Gabau"},"content":"    public static LocalDate dateParse(String s) {","lastModifiedDate":"2021-08-22"},{"lineNumber":173,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":174,"author":{"gitId":"Gabau"},"content":"        return LocalDate.parse(s.trim());","lastModifiedDate":"2021-08-22"},{"lineNumber":175,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":176,"author":{"gitId":"Gabau"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Gabau":176}},{"path":"src/main/java/duke/util/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabau"},"content":"package duke.util.storage;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Gabau"},"content":"import java.io.File;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Gabau"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Gabau"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Gabau"},"content":"import duke.util.tasks.DateTaskTable;","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":"import duke.util.tasks.DatedTask;","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"Gabau"},"content":"import duke.util.tasks.DukeException;","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":"import duke.util.tasks.Task;","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":"import duke.util.tasks.TaskList;","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"Gabau"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Gabau"},"content":" * The storage class is the class representing the stored","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Gabau"},"content":" * information.","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Gabau"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Gabau"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Gabau"},"content":"public class Storage {","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"Gabau"},"content":"    private String tempFilePath;","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"Gabau"},"content":"    private String saveFilePath;","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Gabau"},"content":"    private DateTaskTable dateTaskTable;","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Gabau"},"content":"    //Use a custom ui for storage?","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"Gabau"},"content":"     * Constructor for the storage class.","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"Gabau"},"content":"     * @param saveFilePath The path to write to.","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"Gabau"},"content":"     * @param tempFilePath The temp file to use.","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"Gabau"},"content":"     * @param dateTaskTable The dateTaskTable to store tasks with dates.","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"Gabau"},"content":"    public Storage(String saveFilePath, String tempFilePath, DateTaskTable dateTaskTable) {","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"Gabau"},"content":"        this.tempFilePath \u003d tempFilePath;","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"Gabau"},"content":"        this.saveFilePath \u003d saveFilePath;","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"Gabau"},"content":"        this.dateTaskTable \u003d dateTaskTable;","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"Gabau"},"content":"     * Command to write the input list of tasks onto the","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"Gabau"},"content":"     * hard disk.","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"Gabau"},"content":"     * @param inputs The list of input tasks to encode onto the hardisk.","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"Gabau"},"content":"     * @throws IOException When the writing has failed.","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"Gabau"},"content":"    public void write(ArrayList\u003c? extends Task\u003e inputs) throws IOException {","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"Gabau"},"content":"        File dir \u003d new File(\"./data\");","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"Gabau"},"content":"        if (!dir.exists()) {","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"Gabau"},"content":"            dir.mkdirs();","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"Gabau"},"content":"        //creating the files","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"Gabau"},"content":"        File saveFile \u003d new File(saveFilePath);","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"Gabau"},"content":"        File tempfile \u003d new File(tempFilePath);","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"Gabau"},"content":"        //if the file does not exist","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"Gabau"},"content":"        if (!saveFile.exists()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"Gabau"},"content":"            //When the old save file does not exist","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"Gabau"},"content":"            //do not have to use the tempfile","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"Gabau"},"content":"            saveFile.createNewFile();","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"Gabau"},"content":"            FileWriter wr \u003d new FileWriter(saveFilePath);","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"Gabau"},"content":"            writeTasks(wr, inputs);","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"Gabau"},"content":"            wr.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"Gabau"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"Gabau"},"content":"            //could use a temp file and switch after writing?","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"Gabau"},"content":"            FileWriter wr \u003d new FileWriter(tempFilePath);","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"Gabau"},"content":"            writeTasks(wr, inputs);","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"Gabau"},"content":"            wr.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"Gabau"},"content":"            saveFile.delete();","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"Gabau"},"content":"            tempfile.renameTo(saveFile);","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"Gabau"},"content":"    private void writeTasks(FileWriter writer, ArrayList\u003c? extends Task\u003e inputs) throws IOException {","lastModifiedDate":"2021-08-22"},{"lineNumber":86,"author":{"gitId":"Gabau"},"content":"        for (int i \u003d 0; i \u003c inputs.size(); i++) {","lastModifiedDate":"2021-08-22"},{"lineNumber":87,"author":{"gitId":"Gabau"},"content":"            writer.write(inputs.get(i).encode());","lastModifiedDate":"2021-08-22"},{"lineNumber":88,"author":{"gitId":"Gabau"},"content":"            writer.write(\"\\n\");","lastModifiedDate":"2021-08-22"},{"lineNumber":89,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":91,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":92,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":93,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":94,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":95,"author":{"gitId":"Gabau"},"content":"     * The method used to read from the current save File. --Use a save object?","lastModifiedDate":"2021-08-22"},{"lineNumber":96,"author":{"gitId":"Gabau"},"content":"     * Can allow for multiple saves --\u003e could use such an object to handle","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"Gabau"},"content":"     * the saves in an arraylist.","lastModifiedDate":"2021-08-22"},{"lineNumber":98,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":99,"author":{"gitId":"Gabau"},"content":"     * @return The arraylist containing the read result.","lastModifiedDate":"2021-08-22"},{"lineNumber":100,"author":{"gitId":"Gabau"},"content":"     * @throws IOException When the read fails.","lastModifiedDate":"2021-08-22"},{"lineNumber":101,"author":{"gitId":"Gabau"},"content":"     * @throws  DukeException When the format of the text to be read is wrong.","lastModifiedDate":"2021-08-22"},{"lineNumber":102,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":103,"author":{"gitId":"Gabau"},"content":"    public TaskList read() throws IOException, DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":104,"author":{"gitId":"Gabau"},"content":"        TaskList inputs \u003d new TaskList();","lastModifiedDate":"2021-08-22"},{"lineNumber":105,"author":{"gitId":"Gabau"},"content":"        File f \u003d new File(saveFilePath);","lastModifiedDate":"2021-08-22"},{"lineNumber":106,"author":{"gitId":"Gabau"},"content":"        //when the file does not exist, returns an empty arraylist.","lastModifiedDate":"2021-08-22"},{"lineNumber":107,"author":{"gitId":"Gabau"},"content":"        if (!f.exists()) {","lastModifiedDate":"2021-08-28"},{"lineNumber":108,"author":{"gitId":"Gabau"},"content":"            return inputs;","lastModifiedDate":"2021-08-28"},{"lineNumber":109,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":110,"author":{"gitId":"Gabau"},"content":"        Scanner sc \u003d new Scanner(f);","lastModifiedDate":"2021-08-22"},{"lineNumber":111,"author":{"gitId":"Gabau"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":112,"author":{"gitId":"Gabau"},"content":"            Task t \u003d Task.decode(sc.nextLine());","lastModifiedDate":"2021-08-22"},{"lineNumber":113,"author":{"gitId":"Gabau"},"content":"            inputs.add(t);","lastModifiedDate":"2021-08-22"},{"lineNumber":114,"author":{"gitId":"Gabau"},"content":"            if (t instanceof DatedTask) {","lastModifiedDate":"2021-08-22"},{"lineNumber":115,"author":{"gitId":"Gabau"},"content":"                dateTaskTable.add((DatedTask) t);","lastModifiedDate":"2021-08-22"},{"lineNumber":116,"author":{"gitId":"Gabau"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":117,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":118,"author":{"gitId":"Gabau"},"content":"        sc.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":119,"author":{"gitId":"Gabau"},"content":"        return inputs;","lastModifiedDate":"2021-08-22"},{"lineNumber":120,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":121,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":122,"author":{"gitId":"Gabau"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Gabau":122}},{"path":"src/main/java/duke/util/tasks/DateTaskTable.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabau"},"content":"package duke.util.tasks;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Gabau"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Gabau"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Gabau"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Gabau"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Gabau"},"content":" * A class for containing DatedTasks assigned to their corresponding","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":" * LocalDate.","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Gabau"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Gabau"},"content":"public class DateTaskTable extends HashMap\u003cLocalDate, ArrayList\u003cDatedTask\u003e\u003e {","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Gabau"},"content":"     * Adding the DatedTask to the Table.","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Gabau"},"content":"     * @param task The DatedTask to add.","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Gabau"},"content":"    public void add(DatedTask task) {","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Gabau"},"content":"        task.addTo(this);","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"Gabau"},"content":"     * The method to get the list of dated tasks","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Gabau"},"content":"     * that have the same date as the input.","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Gabau"},"content":"     * @param date The date of the tasks in the result.","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Gabau"},"content":"     * @return The Dated Tasks that possess the same date as the param date.","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"Gabau"},"content":"    public ArrayList\u003cDatedTask\u003e get(LocalDate date) {","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"Gabau"},"content":"        ArrayList\u003cDatedTask\u003e res \u003d super.get(date);","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"Gabau"},"content":"        if (res \u003d\u003d null) {","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"Gabau"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"Gabau"},"content":"        return res;","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"Gabau"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Gabau":41}},{"path":"src/main/java/duke/util/tasks/DatedTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabau"},"content":"package duke.util.tasks;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"Gabau"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"Gabau"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"Gabau"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Gabau"},"content":"import duke.util.parser.Parser;","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":"public abstract class DatedTask extends Task {","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":"    protected LocalDate lDate;","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Gabau"},"content":"     * The constructor for a datedtask.","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Gabau"},"content":"     * @param name The name of the task","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Gabau"},"content":"     * @param date The date of the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Gabau"},"content":"    public DatedTask(String name, String date) {","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Gabau"},"content":"        super(name);","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"Gabau"},"content":"        this.lDate \u003d Parser.dateParse(date);","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Gabau"},"content":"     * The localdate in the format to print out.","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"Gabau"},"content":"     * @return The local date in the format MMM dd yyyy","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"Gabau"},"content":"    public String localDate() {","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"Gabau"},"content":"        return lDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"Gabau"},"content":"     * Adds the dated task to the input table.","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"Gabau"},"content":"     * @param table The hashmap to put the dated task in.","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"Gabau"},"content":"    public void addTo(HashMap\u003cLocalDate, ArrayList\u003cDatedTask\u003e\u003e table) {","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"Gabau"},"content":"        ArrayList\u003cDatedTask\u003e list \u003d table.get(this.lDate);","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"Gabau"},"content":"        if (list \u003d\u003d null) {","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"Gabau"},"content":"            list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"Gabau"},"content":"            table.put(this.lDate, list);","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"Gabau"},"content":"            table.get(this.lDate).add(this);","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"Gabau"},"content":"        } else if (TaskList.isAdded(this, list)) {","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"Gabau"},"content":"            //it has been added before","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"Gabau"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"Gabau"},"content":"            list.add(this);","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"Gabau"},"content":"     * Removes the DatedTask from the input DateTaskTable.","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"Gabau"},"content":"     * @param table","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"Gabau"},"content":"    public void removeFromTable(DateTaskTable table) {","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"Gabau"},"content":"        ArrayList\u003cDatedTask\u003e ls \u003d table.get(this.lDate);","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"Gabau"},"content":"        if (ls !\u003d null) {","lastModifiedDate":"2021-08-28"},{"lineNumber":71,"author":{"gitId":"Gabau"},"content":"            ls.remove(this);","lastModifiedDate":"2021-08-28"},{"lineNumber":72,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":73,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"Gabau"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"Gabau"},"content":"    public boolean isDated() {","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"Gabau"},"content":"        return true;","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":83,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":84,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"Gabau"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"Gabau":85}},{"path":"src/main/java/duke/util/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabau"},"content":"package duke.util.tasks;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Gabau"},"content":"import duke.util.commons.Messages;","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":" * The class representing the deadline task.","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Gabau"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Gabau"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Gabau"},"content":"public class Deadline extends DatedTask {","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":"    private static String label \u003d \"[D]\";","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":"    private static final String DELIMITER \u003d \"/by\";","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Gabau"},"content":"    private Deadline(String s, String dl) {","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Gabau"},"content":"        super(s.trim(), dl.trim());","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Gabau"},"content":"     * The factory method of Deadline that takes in the","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"Gabau"},"content":"     * string with the delimiter.","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"Gabau"},"content":"     * @param s The string that has the delimiter for the name and date.","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Gabau"},"content":"     * @return The created deadline object.","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Gabau"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Gabau"},"content":"    public static Deadline of(String s) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"Gabau"},"content":"        String[] ss \u003d s.split(Deadline.DELIMITER, 2);","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"Gabau"},"content":"        if (ss.length \u003d\u003d 0) {","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"Gabau"},"content":"            throw new DukeException(Messages.DEADLINE_NO_INPUT_ERROR_MESSAGE);","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"Gabau"},"content":"        return new Deadline(ss[0], ss[1]);","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"Gabau"},"content":"     * The factory method of Deadline that takes in the string","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"Gabau"},"content":"     * already separated.","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"Gabau"},"content":"     * @param name The name of the deadline.","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"Gabau"},"content":"     * @param date The date of the deadline.","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"Gabau"},"content":"     * @return The created deadline object.","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"Gabau"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"Gabau"},"content":"    public static Deadline of(String name, String date) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"Gabau"},"content":"        return new Deadline(name, date);","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"Gabau"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"Gabau"},"content":"    public String toString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"Gabau"},"content":"        return this.label + super.toString() + \" \" + \"(by: \" + this.localDate() + \")\";","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"Gabau"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"Gabau"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"Gabau"},"content":"        if (obj instanceof Deadline) {","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"Gabau"},"content":"            Deadline dl \u003d (Deadline) obj;","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"Gabau"},"content":"            return this.name.equals(dl.name) \u0026\u0026 this.lDate.equals(dl.lDate);","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"Gabau"},"content":"        return false;","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"Gabau"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"Gabau"},"content":"    public String encode() {","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"Gabau"},"content":"        //String indicating whether this task is done or not.","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"Gabau"},"content":"        String d \u003d this.isDone()","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"Gabau"},"content":"                ? Task.DONE","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"Gabau"},"content":"                : Task.NOTDONE;","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"Gabau"},"content":"        return Task.Label.D + Task.DELIMITER + d + Task.DELIMITER + this.name + Task.DELIMITER + this.lDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"Gabau"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Gabau":75}},{"path":"src/main/java/duke/util/tasks/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabau"},"content":"package duke.util.tasks;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"Gabau"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"Gabau"},"content":" * DukeException, an exception that arose from inaccurate input.","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"Gabau"},"content":" *","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"Gabau"},"content":"    public DukeException() {","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":"        super(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"Gabau"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"Gabau"},"content":"        super(message);","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"Gabau"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"Gabau":19}},{"path":"src/main/java/duke/util/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabau"},"content":"package duke.util.tasks;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":3,"author":{"gitId":"Gabau"},"content":"import duke.util.commons.Messages;","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"Gabau"},"content":"public class Event extends DatedTask {","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":"    private static String label \u003d \"[E]\";","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":"    private Event(String name, String date) {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Gabau"},"content":"        super(name.trim(), date.trim());","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Gabau"},"content":"     * The factory method of the Event class that takes in the","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Gabau"},"content":"     * String that has not been split.","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Gabau"},"content":"     * @param total The String with the /at delimiter","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Gabau"},"content":"     * @return The Event from it.","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Gabau"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Gabau"},"content":"    public static Event of(String total) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"Gabau"},"content":"        String[] ss \u003d total.split(\"/at\", 2);","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"Gabau"},"content":"        if (ss.length \u003d\u003d 0) {","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"Gabau"},"content":"            throw new DukeException(Messages.EVENT_NO_INPUT_ERROR_MESSAGE);","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Gabau"},"content":"        return new Event(ss[0], ss[1]);","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"Gabau"},"content":"     * The factory method of the Event class that takes in the String that has been split.","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"Gabau"},"content":"     * @param name The name of the object.","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"Gabau"},"content":"     * @param date The date of the object.","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"Gabau"},"content":"     * @return The Event object that is created.","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"Gabau"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"Gabau"},"content":"    public static Event of(String name, String date) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"Gabau"},"content":"        return new Event(name, date);","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"Gabau"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":46,"author":{"gitId":"Gabau"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":47,"author":{"gitId":"Gabau"},"content":"        return this.label + super.toString() + \" (at: \" + this.localDate() + \")\";","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":49,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":50,"author":{"gitId":"Gabau"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":51,"author":{"gitId":"Gabau"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-08-15"},{"lineNumber":52,"author":{"gitId":"Gabau"},"content":"        if (obj instanceof Event) {","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"Gabau"},"content":"            Event e \u003d (Event) obj;","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"Gabau"},"content":"            return this.name.equals(e.name) \u0026\u0026 e.lDate.equals(this.lDate);","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":56,"author":{"gitId":"Gabau"},"content":"        return false;","lastModifiedDate":"2021-08-15"},{"lineNumber":57,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":58,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"Gabau"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"Gabau"},"content":"    public String encode() {","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"Gabau"},"content":"        //String indicating whether this task is done or not.","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"Gabau"},"content":"        String d \u003d this.isDone()","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"Gabau"},"content":"                ? Task.DONE","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"Gabau"},"content":"                : Task.NOTDONE;","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"Gabau"},"content":"        return Task.Label.E + Task.DELIMITER + d + Task.DELIMITER + this.name + Task.DELIMITER + this.lDate;","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"Gabau"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"Gabau":68}},{"path":"src/main/java/duke/util/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabau"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"Gabau"},"content":" * Class of a task to be done.","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"Gabau"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"Gabau"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"Gabau"},"content":"package duke.util.tasks;","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"Gabau"},"content":"    protected static final String DELIMITER \u003d \"/ghx-124\";","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":"    protected static final String DONE \u003d \"DONETASKe123111\";","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"Gabau"},"content":"    protected static final String NOTDONE \u003d \"NOTDONETASK454e-e\";","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":"    private static final String NOT_FINISHED \u003d \"[ ]\";","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":"    private static final String FINISHED \u003d \"[X]\";","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"Gabau"},"content":"    protected String name;","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"Gabau"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"Gabau"},"content":"    protected enum Label {","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"Gabau"},"content":"        T, E, D;","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"Gabau"},"content":"     * Constructor of task.","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"Gabau"},"content":"     * @param s Name of the task.","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"Gabau"},"content":"    protected Task(String s) {","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"Gabau"},"content":"        this.name \u003d s;","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"Gabau"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"Gabau"},"content":"     * The method to check if the Task is","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"Gabau"},"content":"     * dated or not.","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"Gabau"},"content":"     * @return Whether this task is dated.","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"Gabau"},"content":"    public boolean isDated() {","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"Gabau"},"content":"        return false;","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"Gabau"},"content":"     * Method to encode the task as a String.","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"Gabau"},"content":"     * Format - {type of task}{DELIMITER}{DONE/NOTDONE}{DELIMITER}{TASKNAME}{Extra information}","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"Gabau"},"content":"     * @return The encoded task;","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"Gabau"},"content":"    public abstract String encode();","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":56,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":57,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":59,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":62,"author":{"gitId":"Gabau"},"content":"     * Marks when the task is done.","lastModifiedDate":"2021-08-15"},{"lineNumber":63,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":64,"author":{"gitId":"Gabau"},"content":"    public void done() {","lastModifiedDate":"2021-08-15"},{"lineNumber":65,"author":{"gitId":"Gabau"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":67,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":68,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"Gabau"},"content":"     * Obtains the corresponding task from the string input.","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"Gabau"},"content":"     * @param s The input String.","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"Gabau"},"content":"     * @return The task the string represents.","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"Gabau"},"content":"    public static Task decode(String s) throws DukeException {","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"Gabau"},"content":"        String[] ssplit \u003d s.split(DELIMITER, 4);","lastModifiedDate":"2021-08-21"},{"lineNumber":76,"author":{"gitId":"Gabau"},"content":"        Label currentType \u003d Label.valueOf(ssplit[0]);","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"Gabau"},"content":"        boolean done \u003d ssplit[1].equals(Task.DONE);","lastModifiedDate":"2021-08-21"},{"lineNumber":78,"author":{"gitId":"Gabau"},"content":"        Task t;","lastModifiedDate":"2021-08-21"},{"lineNumber":79,"author":{"gitId":"Gabau"},"content":"        switch (currentType) {","lastModifiedDate":"2021-08-21"},{"lineNumber":80,"author":{"gitId":"Gabau"},"content":"        case T:","lastModifiedDate":"2021-08-21"},{"lineNumber":81,"author":{"gitId":"Gabau"},"content":"            t \u003d ToDo.of(ssplit[2]);","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"Gabau"},"content":"            break;","lastModifiedDate":"2021-08-21"},{"lineNumber":83,"author":{"gitId":"Gabau"},"content":"        case E:","lastModifiedDate":"2021-08-21"},{"lineNumber":84,"author":{"gitId":"Gabau"},"content":"            t \u003d Event.of(ssplit[2], ssplit[3]);","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"Gabau"},"content":"            break;","lastModifiedDate":"2021-08-21"},{"lineNumber":86,"author":{"gitId":"Gabau"},"content":"        case D:","lastModifiedDate":"2021-08-21"},{"lineNumber":87,"author":{"gitId":"Gabau"},"content":"            t \u003d Deadline.of(ssplit[2], ssplit[3]);","lastModifiedDate":"2021-08-22"},{"lineNumber":88,"author":{"gitId":"Gabau"},"content":"            break;","lastModifiedDate":"2021-08-21"},{"lineNumber":89,"author":{"gitId":"Gabau"},"content":"        default:","lastModifiedDate":"2021-08-21"},{"lineNumber":90,"author":{"gitId":"Gabau"},"content":"            throw new DukeException(\"Not a valid text document\");","lastModifiedDate":"2021-08-21"},{"lineNumber":91,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":92,"author":{"gitId":"Gabau"},"content":"        if (done) {","lastModifiedDate":"2021-08-21"},{"lineNumber":93,"author":{"gitId":"Gabau"},"content":"            t.done();","lastModifiedDate":"2021-08-21"},{"lineNumber":94,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":95,"author":{"gitId":"Gabau"},"content":"        return t;","lastModifiedDate":"2021-08-21"},{"lineNumber":96,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":97,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":98,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":99,"author":{"gitId":"Gabau"},"content":"     * Whether this task is done or not.","lastModifiedDate":"2021-08-22"},{"lineNumber":100,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":101,"author":{"gitId":"Gabau"},"content":"     * @return true if the task is done and false otherwise.","lastModifiedDate":"2021-08-22"},{"lineNumber":102,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":103,"author":{"gitId":"Gabau"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-08-21"},{"lineNumber":104,"author":{"gitId":"Gabau"},"content":"        return this.isDone;","lastModifiedDate":"2021-08-22"},{"lineNumber":105,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":106,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":107,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":108,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":109,"author":{"gitId":"Gabau"},"content":"     * Checks if the name contains the input string as a word.","lastModifiedDate":"2021-08-22"},{"lineNumber":110,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":111,"author":{"gitId":"Gabau"},"content":"     * @param s Input word","lastModifiedDate":"2021-08-22"},{"lineNumber":112,"author":{"gitId":"Gabau"},"content":"     * @return True when the input string is in the name.","lastModifiedDate":"2021-08-22"},{"lineNumber":113,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":114,"author":{"gitId":"Gabau"},"content":"    public boolean contains(String s) {","lastModifiedDate":"2021-08-22"},{"lineNumber":115,"author":{"gitId":"Gabau"},"content":"        String[] arr \u003d this.name.split(\" \");","lastModifiedDate":"2021-08-22"},{"lineNumber":116,"author":{"gitId":"Gabau"},"content":"        for (int i \u003d 0; i \u003c arr.length; i++) {","lastModifiedDate":"2021-08-22"},{"lineNumber":117,"author":{"gitId":"Gabau"},"content":"            if (arr[i].equals(s)) {","lastModifiedDate":"2021-08-22"},{"lineNumber":118,"author":{"gitId":"Gabau"},"content":"                return true;","lastModifiedDate":"2021-08-22"},{"lineNumber":119,"author":{"gitId":"Gabau"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":120,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":121,"author":{"gitId":"Gabau"},"content":"        return false;","lastModifiedDate":"2021-08-22"},{"lineNumber":122,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":123,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":124,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":125,"author":{"gitId":"Gabau"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":126,"author":{"gitId":"Gabau"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":127,"author":{"gitId":"Gabau"},"content":"        String checkBox \u003d this.isDone","lastModifiedDate":"2021-08-22"},{"lineNumber":128,"author":{"gitId":"Gabau"},"content":"                ? Task.FINISHED","lastModifiedDate":"2021-08-28"},{"lineNumber":129,"author":{"gitId":"Gabau"},"content":"                : Task.NOT_FINISHED;","lastModifiedDate":"2021-08-28"},{"lineNumber":130,"author":{"gitId":"Gabau"},"content":"        return checkBox + \" \" + this.name;","lastModifiedDate":"2021-08-21"},{"lineNumber":131,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":132,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":133,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":134,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":135,"author":{"gitId":"Gabau"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":136,"author":{"gitId":"Gabau"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-08-15"},{"lineNumber":137,"author":{"gitId":"Gabau"},"content":"        if (obj instanceof Task) {","lastModifiedDate":"2021-08-15"},{"lineNumber":138,"author":{"gitId":"Gabau"},"content":"            Task t \u003d (Task) obj;","lastModifiedDate":"2021-08-15"},{"lineNumber":139,"author":{"gitId":"Gabau"},"content":"            return t.name.equals(this.name);","lastModifiedDate":"2021-08-15"},{"lineNumber":140,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":141,"author":{"gitId":"Gabau"},"content":"        return false;","lastModifiedDate":"2021-08-15"},{"lineNumber":142,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":143,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":144,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":145,"author":{"gitId":"Gabau"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"Gabau":145}},{"path":"src/main/java/duke/util/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabau"},"content":"package duke.util.tasks;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Gabau"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"Gabau"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Gabau"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":" * A class representing a list of tasks.","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Gabau"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Gabau"},"content":"public class TaskList extends ArrayList\u003cTask\u003e {","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Gabau"},"content":"     * Method for checking if a given task is in an ArrayList.","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Gabau"},"content":"     * @param t The task to check.","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Gabau"},"content":"     * @param arr The ArrayList it may or may not be in.","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"Gabau"},"content":"     * @return True if the task is in the arraylist and false otherwise.","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"Gabau"},"content":"    public static boolean isAdded(Task t, ArrayList\u003c? extends Task\u003e arr) {","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Gabau"},"content":"        for (int i \u003d 0; i \u003c arr.size(); i++) {","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Gabau"},"content":"            if (arr.get(i).equals(t)) {","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"Gabau"},"content":"                return true;","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"Gabau"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"Gabau"},"content":"        return false;","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"Gabau"},"content":"     * Function that returns a TaskList of all the tasks that satisfies the","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"Gabau"},"content":"     * boolean condition.","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"Gabau"},"content":"     * @param predicate The test condition.","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"Gabau"},"content":"     * @return","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"Gabau"},"content":"    public TaskList filter(Predicate\u003c? super Task\u003e predicate) {","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"Gabau"},"content":"        TaskList result \u003d new TaskList();","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"Gabau"},"content":"        for (int i \u003d 0; i \u003c this.size(); i++) {","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"Gabau"},"content":"            if (predicate.test(this.get(i))) {","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"Gabau"},"content":"                result.add(this.get(i));","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"Gabau"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"Gabau"},"content":"        return result;","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"Gabau"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Gabau":55}},{"path":"src/main/java/duke/util/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabau"},"content":"package duke.util.tasks;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":3,"author":{"gitId":"Gabau"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":"    private static String label \u003d \"[T]\";","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Gabau"},"content":"    private ToDo(String s) {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":"        super(s.trim());","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Gabau"},"content":"     * The factory method of the todo class","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Gabau"},"content":"     * @param s The name of the todo task.","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Gabau"},"content":"     * @return The Task with the corresponding name.","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Gabau"},"content":"    public static Task of(String s) {","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Gabau"},"content":"        return new ToDo(s);","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"Gabau"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"Gabau"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"Gabau"},"content":"        return this.label + super.toString();","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"Gabau"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"Gabau"},"content":"    public String encode() {","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"Gabau"},"content":"        //String indicating whether this task is done or not.","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"Gabau"},"content":"        String d \u003d this.isDone()","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"Gabau"},"content":"                ? Task.DONE","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"Gabau"},"content":"                : Task.NOTDONE;","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"Gabau"},"content":"        return Task.Label.T + Task.DELIMITER + d + Task.DELIMITER + this.name;","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"Gabau"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"Gabau":38}},{"path":"src/main/java/duke/util/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabau"},"content":"package duke.util.ui;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Gabau"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"Gabau"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":"import duke.util.commons.Messages;","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":"import duke.util.tasks.DukeException;","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"Gabau"},"content":"import duke.util.tasks.Task;","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":" * Deals with the interactions of the user.","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Gabau"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Gabau"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Gabau"},"content":"public class Ui {","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Gabau"},"content":"    private final Scanner sc;","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"Gabau"},"content":"     * Constructor method for the Ui.","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"Gabau"},"content":"    public Ui() {","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"Gabau"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"Gabau"},"content":"     * Ui method to print a string","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"Gabau"},"content":"     * in a special way. (only single line inputs though, multi line requires tabs)","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"Gabau"},"content":"     * @param s The string to be printed.","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"Gabau"},"content":"    public void print(String s) {","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"Gabau"},"content":"        System.out.println(Messages.HLINE);","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"Gabau"},"content":"        System.out.println(\"\\t\" + s);","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"Gabau"},"content":"        System.out.println(Messages.HLINE);","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"Gabau"},"content":"     * The output when a task is added.","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"Gabau"},"content":"     * @param t The task to be added.","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"Gabau"},"content":"     * @param i The number of tasks in the list after the task has been added.","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"Gabau"},"content":"     * @return","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"Gabau"},"content":"    public String getOutputFromTaskAdded(Task t, int i) {","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"Gabau"},"content":"        return String.format(Messages.TASK_ADDED, t.toString(), i);","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"Gabau"},"content":"     * The output when a task is removed.","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"Gabau"},"content":"     * @param t The task to be removed.","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"Gabau"},"content":"     * @param i The number of tasks in the list after removal.","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"Gabau"},"content":"     * @return","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"Gabau"},"content":"    public String getOutputFromTaskDeleted(Task t, int i) {","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"Gabau"},"content":"        return String.format(Messages.TASK_DELETED, t.toString(), i);","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"Gabau"},"content":"     * Method to print the Logo for Duke.","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"Gabau"},"content":"    public void print_logo() {","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"Gabau"},"content":"        System.out.println(\"Hello from\\n\" + Messages.LOGO);","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"Gabau"},"content":"     * Prints all the strings added.","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"Gabau"},"content":"    public String list(ArrayList\u003c? extends Task\u003e ls) throws DukeException {","lastModifiedDate":"2021-08-28"},{"lineNumber":81,"author":{"gitId":"Gabau"},"content":"        String output \u003d \"\";","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"Gabau"},"content":"        if (ls.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-28"},{"lineNumber":83,"author":{"gitId":"Gabau"},"content":"            return output;","lastModifiedDate":"2021-08-28"},{"lineNumber":84,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":85,"author":{"gitId":"Gabau"},"content":"        output +\u003d \"1.\" + ls.get(0);","lastModifiedDate":"2021-08-22"},{"lineNumber":86,"author":{"gitId":"Gabau"},"content":"        for (int i \u003d 1; i \u003c ls.size(); i++) {","lastModifiedDate":"2021-08-22"},{"lineNumber":87,"author":{"gitId":"Gabau"},"content":"            int indi \u003d i + 1;","lastModifiedDate":"2021-08-22"},{"lineNumber":88,"author":{"gitId":"Gabau"},"content":"            output +\u003d \"\\n\" + indi + \".\" + ls.get(i);","lastModifiedDate":"2021-08-29"},{"lineNumber":89,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"Gabau"},"content":"        return output;","lastModifiedDate":"2021-08-28"},{"lineNumber":91,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":92,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":93,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":94,"author":{"gitId":"Gabau"},"content":"     * Method for printing an exception.","lastModifiedDate":"2021-08-22"},{"lineNumber":95,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":96,"author":{"gitId":"Gabau"},"content":"     * @param e The exception to handle.","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":98,"author":{"gitId":"Gabau"},"content":"    public void printErrorMessage(Exception e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":99,"author":{"gitId":"Gabau"},"content":"        this.print(e.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":100,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":101,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":102,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":103,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":104,"author":{"gitId":"Gabau"},"content":"     * Obtains the input from the user.","lastModifiedDate":"2021-08-22"},{"lineNumber":105,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":106,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":107,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":108,"author":{"gitId":"Gabau"},"content":"    public String getInput() {","lastModifiedDate":"2021-08-22"},{"lineNumber":109,"author":{"gitId":"Gabau"},"content":"        return this.sc.nextLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":110,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":111,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":112,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":113,"author":{"gitId":"Gabau"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Gabau":113}},{"path":"src/main/java/duke/util/windows/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabau"},"content":"package duke.util.windows;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"Gabau"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"Gabau"},"content":"import java.util.Collections;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"Gabau"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"Gabau"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"Gabau"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"Gabau"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"Gabau"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"Gabau"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"Gabau"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"Gabau"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"Gabau"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"Gabau"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"Gabau"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"Gabau"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"Gabau"},"content":"    private Label dialog;","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"Gabau"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"Gabau"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"Gabau"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"Gabau"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"Gabau"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"Gabau"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"Gabau"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"Gabau"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"Gabau"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"Gabau"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"Gabau"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"Gabau"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"Gabau"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"Gabau"},"content":"    private void flip() {","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"Gabau"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"Gabau"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"Gabau"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"Gabau"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"Gabau"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"Gabau"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"Gabau"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"Gabau"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"Gabau"},"content":"        db.flip();","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"Gabau"},"content":"        return db;","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"Gabau"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"Gabau":64}},{"path":"src/main/java/duke/util/windows/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabau"},"content":"package duke.util.windows;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"Gabau"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"Gabau"},"content":"import duke.util.controller.Duke;","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"Gabau"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"Gabau"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"Gabau"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"Gabau"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"Gabau"},"content":"public class Main extends Application {","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"Gabau"},"content":"    private static final String saveFilePath \u003d \"save.txt\";","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"Gabau"},"content":"    private static final String tempFilePath \u003d \"temp.txt\";","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"Gabau"},"content":"    private Duke duke \u003d new Duke(saveFilePath, tempFilePath);","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"Gabau"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"Gabau"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"Gabau"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"Gabau"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"Gabau"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"Gabau"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"Gabau"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"Gabau"},"content":"            stage.setMinHeight(590);","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"Gabau"},"content":"            stage.setMinWidth(770);","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"Gabau"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"Gabau"},"content":"            TaskInputWindow.setDuke(duke);","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"Gabau"},"content":"            stage.show();","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"Gabau"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"Gabau"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"Gabau"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"Gabau":38}},{"path":"src/main/java/duke/util/windows/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabau"},"content":"package duke.util.windows;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"Gabau"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"Gabau"},"content":"import duke.util.controller.Duke;","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":"import duke.util.tasks.Task;","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"Gabau"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"Gabau"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"Gabau"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"Gabau"},"content":"import javafx.scene.control.SelectionMode;","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"Gabau"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"Gabau"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"Gabau"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"Gabau"},"content":"import javafx.scene.layout.BorderPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"Gabau"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"Gabau"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"Gabau"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"Gabau"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"Gabau"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"Gabau"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"Gabau"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"Gabau"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"Gabau"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"Gabau"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"Gabau"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"Gabau"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"Gabau"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"Gabau"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"Gabau"},"content":"    private Button sendButton;","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"Gabau"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"Gabau"},"content":"    private Text taskDisplay;","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"Gabau"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"Gabau"},"content":"    private ListView\u003cTask\u003e listOfTasks;","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"Gabau"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"Gabau"},"content":"    private BorderPane borderPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"Gabau"},"content":"    private Duke duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"Gabau"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"Gabau"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"Gabau"},"content":"     *Method called after the fields have been initialized in fxml.","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"Gabau"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"Gabau"},"content":"    public void initialize() {","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"Gabau"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"Gabau"},"content":"        scrollPane.hvalueProperty().bind(dialogContainer.widthProperty());","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"Gabau"},"content":"        //To bind the width of the scroll pane to the dialog container","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"Gabau"},"content":"        scrollPane.fitToWidthProperty().bind(dialogContainer.fillWidthProperty());","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"Gabau"},"content":"        listOfTasks.getSelectionModel().setSelectionMode(SelectionMode.MULTIPLE);","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":66,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":67,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":68,"author":{"gitId":"Gabau"},"content":"     * Initialises a Duke for this anchorPane.","lastModifiedDate":"2021-08-31"},{"lineNumber":69,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":70,"author":{"gitId":"Gabau"},"content":"     * @param d The duke to be used.","lastModifiedDate":"2021-08-31"},{"lineNumber":71,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":72,"author":{"gitId":"Gabau"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-08-28"},{"lineNumber":73,"author":{"gitId":"Gabau"},"content":"        duke \u003d d;","lastModifiedDate":"2021-08-28"},{"lineNumber":74,"author":{"gitId":"Gabau"},"content":"        duke.setOut(listOfTasks);","lastModifiedDate":"2021-08-31"},{"lineNumber":75,"author":{"gitId":"Gabau"},"content":"        duke.printList();","lastModifiedDate":"2021-08-31"},{"lineNumber":76,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":77,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":78,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":79,"author":{"gitId":"Gabau"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-08-28"},{"lineNumber":80,"author":{"gitId":"Gabau"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-08-28"},{"lineNumber":81,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":82,"author":{"gitId":"Gabau"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":83,"author":{"gitId":"Gabau"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-08-28"},{"lineNumber":84,"author":{"gitId":"Gabau"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-08-28"},{"lineNumber":85,"author":{"gitId":"Gabau"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-08-28"},{"lineNumber":86,"author":{"gitId":"Gabau"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-28"},{"lineNumber":87,"author":{"gitId":"Gabau"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-08-28"},{"lineNumber":88,"author":{"gitId":"Gabau"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-08-28"},{"lineNumber":89,"author":{"gitId":"Gabau"},"content":"        );","lastModifiedDate":"2021-08-28"},{"lineNumber":90,"author":{"gitId":"Gabau"},"content":"        duke.printList();","lastModifiedDate":"2021-08-31"},{"lineNumber":91,"author":{"gitId":"Gabau"},"content":"        userInput.clear();","lastModifiedDate":"2021-08-28"},{"lineNumber":92,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":93,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":94,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":95,"author":{"gitId":"Gabau"},"content":"     * Handle the addition of tasks.","lastModifiedDate":"2021-08-29"},{"lineNumber":96,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":97,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":98,"author":{"gitId":"Gabau"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":99,"author":{"gitId":"Gabau"},"content":"    private void addTask() {","lastModifiedDate":"2021-08-29"},{"lineNumber":100,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":101,"author":{"gitId":"Gabau"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":102,"author":{"gitId":"Gabau"},"content":"            Stage stage \u003d new Stage();","lastModifiedDate":"2021-08-29"},{"lineNumber":103,"author":{"gitId":"Gabau"},"content":"            TaskInputWindow.setStage(stage);","lastModifiedDate":"2021-08-29"},{"lineNumber":104,"author":{"gitId":"Gabau"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/TaskInputWindow.fxml\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":105,"author":{"gitId":"Gabau"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-08-29"},{"lineNumber":106,"author":{"gitId":"Gabau"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-08-29"},{"lineNumber":107,"author":{"gitId":"Gabau"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-08-29"},{"lineNumber":108,"author":{"gitId":"Gabau"},"content":"            stage.show();","lastModifiedDate":"2021-08-29"},{"lineNumber":109,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":110,"author":{"gitId":"Gabau"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":111,"author":{"gitId":"Gabau"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-29"},{"lineNumber":112,"author":{"gitId":"Gabau"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-29"},{"lineNumber":113,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":114,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":115,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":116,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":117,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":118,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":119,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":120,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":121,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":122,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":123,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":124,"author":{"gitId":"Gabau"},"content":"     * Handle the removal of tasks through the GUI","lastModifiedDate":"2021-08-31"},{"lineNumber":125,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":126,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":127,"author":{"gitId":"Gabau"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":128,"author":{"gitId":"Gabau"},"content":"    private void handleRemoveEvent() {","lastModifiedDate":"2021-08-31"},{"lineNumber":129,"author":{"gitId":"Gabau"},"content":"        duke.removeHandler(this.listOfTasks.getSelectionModel().getSelectedItems());","lastModifiedDate":"2021-08-31"},{"lineNumber":130,"author":{"gitId":"Gabau"},"content":"        duke.printList();","lastModifiedDate":"2021-08-31"},{"lineNumber":131,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":132,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":133,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":134,"author":{"gitId":"Gabau"},"content":"     * Handle the marking of done tasks through the GUI","lastModifiedDate":"2021-08-31"},{"lineNumber":135,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":136,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":137,"author":{"gitId":"Gabau"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":138,"author":{"gitId":"Gabau"},"content":"    private void handleDoneTasks() {","lastModifiedDate":"2021-08-31"},{"lineNumber":139,"author":{"gitId":"Gabau"},"content":"        ObservableList\u003cTask\u003e tasks \u003d this.listOfTasks.getSelectionModel().getSelectedItems();","lastModifiedDate":"2021-08-31"},{"lineNumber":140,"author":{"gitId":"Gabau"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-31"},{"lineNumber":141,"author":{"gitId":"Gabau"},"content":"            tasks.get(i).done();","lastModifiedDate":"2021-08-31"},{"lineNumber":142,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":143,"author":{"gitId":"Gabau"},"content":"        duke.printList();","lastModifiedDate":"2021-08-31"},{"lineNumber":144,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":145,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":146,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":147,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":148,"author":{"gitId":"Gabau"},"content":"}","lastModifiedDate":"2021-08-31"},{"lineNumber":149,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":150,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"Gabau":150}},{"path":"src/main/java/duke/util/windows/TaskInputWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabau"},"content":"package duke.util.windows;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"Gabau"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"Gabau"},"content":"import duke.util.controller.Duke;","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":"import javafx.scene.control.DatePicker;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"Gabau"},"content":"import javafx.scene.control.Tab;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"Gabau"},"content":"import javafx.scene.control.TabPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"Gabau"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"Gabau"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"Gabau"},"content":" * Input window for tasks to be sent to the Duke.","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"Gabau"},"content":" *","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"Gabau"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"Gabau"},"content":"public class TaskInputWindow extends AnchorPane {","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"Gabau"},"content":"    private static Stage currentStage;","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"Gabau"},"content":"    private static Duke duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"Gabau"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"Gabau"},"content":"    private TabPane tabs;","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"Gabau"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"Gabau"},"content":"    private Tab todo;","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"Gabau"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"Gabau"},"content":"    private Tab deadline;","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"Gabau"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"Gabau"},"content":"    private Tab event;","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"Gabau"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"Gabau"},"content":"    private TextField todoDescription;","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"Gabau"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"Gabau"},"content":"    private TextField eventDescription;","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"Gabau"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"Gabau"},"content":"    private TextField deadlineDescription;","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"Gabau"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"Gabau"},"content":"    private DatePicker eventDate;","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"Gabau"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"Gabau"},"content":"    private DatePicker deadlineDate;","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"Gabau"},"content":"     * Sets the stage for the window.","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"Gabau"},"content":"     * @param stage The stage where the window is at.","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"Gabau"},"content":"    public static void setStage(Stage stage) {","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"Gabau"},"content":"        TaskInputWindow.currentStage \u003d stage;","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"Gabau"},"content":"        //make the input form not resizable","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"Gabau"},"content":"        stage.setResizable(false);","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"Gabau"},"content":"     * Sets the Duke for the input window.","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"Gabau"},"content":"     * @param duke The duke to put input via.","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"Gabau"},"content":"    public static void setDuke(Duke duke) {","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"Gabau"},"content":"        TaskInputWindow.duke \u003d duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"Gabau"},"content":"     * Handle the addition of tasks.","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"Gabau"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"Gabau"},"content":"    private void handleAddTodo() {","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"Gabau"},"content":"        String val \u003d todoDescription.getText();","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"Gabau"},"content":"        duke.addTodo(val);","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"Gabau"},"content":"        currentStage.close();","lastModifiedDate":"2021-08-29"},{"lineNumber":74,"author":{"gitId":"Gabau"},"content":"        duke.printList();","lastModifiedDate":"2021-08-31"},{"lineNumber":75,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":76,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":77,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":78,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":79,"author":{"gitId":"Gabau"},"content":"     * Handle the addition of tasks.","lastModifiedDate":"2021-08-29"},{"lineNumber":80,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":81,"author":{"gitId":"Gabau"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":82,"author":{"gitId":"Gabau"},"content":"    private void handleAddDeadline() {","lastModifiedDate":"2021-08-29"},{"lineNumber":83,"author":{"gitId":"Gabau"},"content":"        String val \u003d deadlineDescription.getText();","lastModifiedDate":"2021-08-29"},{"lineNumber":84,"author":{"gitId":"Gabau"},"content":"        LocalDate date \u003d deadlineDate.getValue();","lastModifiedDate":"2021-08-29"},{"lineNumber":85,"author":{"gitId":"Gabau"},"content":"        duke.addDeadline(val, date);","lastModifiedDate":"2021-08-29"},{"lineNumber":86,"author":{"gitId":"Gabau"},"content":"        currentStage.close();","lastModifiedDate":"2021-08-29"},{"lineNumber":87,"author":{"gitId":"Gabau"},"content":"        duke.printList();","lastModifiedDate":"2021-08-31"},{"lineNumber":88,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":89,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":90,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":91,"author":{"gitId":"Gabau"},"content":"     * Handle the addition of tasks.","lastModifiedDate":"2021-08-29"},{"lineNumber":92,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":93,"author":{"gitId":"Gabau"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":94,"author":{"gitId":"Gabau"},"content":"    private void handleAddEvent() {","lastModifiedDate":"2021-08-29"},{"lineNumber":95,"author":{"gitId":"Gabau"},"content":"        String val \u003d eventDescription.getText();","lastModifiedDate":"2021-08-29"},{"lineNumber":96,"author":{"gitId":"Gabau"},"content":"        LocalDate date \u003d eventDate.getValue();","lastModifiedDate":"2021-08-29"},{"lineNumber":97,"author":{"gitId":"Gabau"},"content":"        duke.addEvent(val, date);","lastModifiedDate":"2021-08-29"},{"lineNumber":98,"author":{"gitId":"Gabau"},"content":"        currentStage.close();","lastModifiedDate":"2021-08-29"},{"lineNumber":99,"author":{"gitId":"Gabau"},"content":"        duke.printList();","lastModifiedDate":"2021-08-31"},{"lineNumber":100,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":101,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":102,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":103,"author":{"gitId":"Gabau"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"Gabau":103}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Gabau"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"Gabau"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"Gabau"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"Gabau"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"Gabau"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"Gabau"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"Gabau"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"Gabau"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"Gabau"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"Gabau"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"Gabau":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Gabau"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"Gabau"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"Gabau"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"Gabau"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":"\u003c?import javafx.scene.control.ToolBar?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"Gabau"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"Gabau"},"content":"\u003c?import javafx.scene.layout.BorderPane?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"Gabau"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"Gabau"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"Gabau"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"590.0\" prefWidth\u003d\"770.0\" style\u003d\"-fx-background-color: grey;\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.util.windows.MainWindow\"\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"Gabau"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"Gabau"},"content":"      \u003cToolBar prefHeight\u003d\"25.0\" prefWidth\u003d\"770.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"Gabau"},"content":"         \u003citems\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"Gabau"},"content":"            \u003cButton mnemonicParsing\u003d\"false\" onAction\u003d\"#addTask\" text\u003d\"Add Task\" /\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"Gabau"},"content":"         \u003c/items\u003e\u003c/ToolBar\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"Gabau"},"content":"      \u003cScrollPane fx:id\u003d\"scrollPane1\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" layoutX\u003d\"522.0\" layoutY\u003d\"35.0\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" vvalue\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"35.0\"\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"Gabau"},"content":"         \u003ccontent\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"Gabau"},"content":"            \u003cListView fx:id\u003d\"listOfTasks\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" prefHeight\u003d\"170.0\" prefWidth\u003d\"248.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"Gabau"},"content":"         \u003c/content\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"Gabau"},"content":"      \u003c/ScrollPane\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"Gabau"},"content":"      \u003cText fx:id\u003d\"taskDisplay\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" wrappingWidth\u003d\"216.0\" AnchorPane.bottomAnchor\u003d\"586.98828125\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"554.0\" AnchorPane.topAnchor\u003d\"-12.94921875\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"Gabau"},"content":"      \u003cBorderPane layoutX\u003d\"-2.0\" layoutY\u003d\"260.0\" prefHeight\u003d\"293.0\" prefWidth\u003d\"770.0\" AnchorPane.bottomAnchor\u003d\"2.0\" AnchorPane.leftAnchor\u003d\"-2.0\" AnchorPane.rightAnchor\u003d\"2.0\"\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"Gabau"},"content":"         \u003ctop\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"Gabau"},"content":"              \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"284.0\" prefWidth\u003d\"770.0\" vvalue\u003d\"1.0\" BorderPane.alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"Gabau"},"content":"               \u003ccontent\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"Gabau"},"content":"                      \u003cVBox fx:id\u003d\"dialogContainer\" alignment\u003d\"CENTER\" disable\u003d\"true\" prefHeight\u003d\"281.0\" prefWidth\u003d\"771.0\" style\u003d\"-fx-background-color: white;\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"Gabau"},"content":"               \u003c/content\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"Gabau"},"content":"              \u003c/ScrollPane\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"Gabau"},"content":"         \u003c/top\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"Gabau"},"content":"         \u003cleft\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"Gabau"},"content":"              \u003cTextField fx:id\u003d\"userInput\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"639.0\" BorderPane.alignment\u003d\"CENTER\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"Gabau"},"content":"         \u003c/left\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"Gabau"},"content":"         \u003cright\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"Gabau"},"content":"              \u003cButton fx:id\u003d\"sendButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"127.0\" text\u003d\"Send\" BorderPane.alignment\u003d\"CENTER\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"Gabau"},"content":"         \u003c/right\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"Gabau"},"content":"      \u003c/BorderPane\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"Gabau"},"content":"      \u003cGridPane layoutX\u003d\"592.0\" layoutY\u003d\"207.0\" prefHeight\u003d\"35.0\" prefWidth\u003d\"178.0\" AnchorPane.rightAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"Gabau"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"Gabau"},"content":"          \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"Gabau"},"content":"          \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"Gabau"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"Gabau"},"content":"        \u003crowConstraints\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"Gabau"},"content":"          \u003cRowConstraints maxHeight\u003d\"83.0\" minHeight\u003d\"10.0\" prefHeight\u003d\"83.0\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"Gabau"},"content":"          \u003cRowConstraints maxHeight\u003d\"56.0\" minHeight\u003d\"0.0\" prefHeight\u003d\"0.0\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"Gabau"},"content":"          \u003cRowConstraints maxHeight\u003d\"23.0\" minHeight\u003d\"0.0\" prefHeight\u003d\"0.0\" vgrow\u003d\"SOMETIMES\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"Gabau"},"content":"        \u003c/rowConstraints\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"Gabau"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"Gabau"},"content":"            \u003cButton mnemonicParsing\u003d\"false\" onMouseClicked\u003d\"#handleRemoveEvent\" prefHeight\u003d\"44.0\" prefWidth\u003d\"113.0\" text\u003d\"Remove Task\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"Gabau"},"content":"            \u003cButton mnemonicParsing\u003d\"false\" onMouseClicked\u003d\"#handleDoneTasks\" prefHeight\u003d\"55.0\" prefWidth\u003d\"121.0\" text\u003d\"Done\" GridPane.columnIndex\u003d\"1\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"Gabau"},"content":"         \u003c/children\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"Gabau"},"content":"      \u003c/GridPane\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"Gabau"},"content":"      ","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"Gabau"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"Gabau"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"Gabau":60}},{"path":"src/main/resources/view/TaskInputWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Gabau"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"Gabau"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"Gabau"},"content":"\u003c?import javafx.scene.control.DatePicker?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"Gabau"},"content":"\u003c?import javafx.scene.control.Tab?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":"\u003c?import javafx.scene.control.TabPane?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"Gabau"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"Gabau"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"Gabau"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"400.0\" prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.util.windows.TaskInputWindow\"\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":"      \u003cTabPane prefHeight\u003d\"400.0\" prefWidth\u003d\"600.0\" tabClosingPolicy\u003d\"UNAVAILABLE\"\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"Gabau"},"content":"        \u003ctabs\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"Gabau"},"content":"          \u003cTab text\u003d\"Add Todo\"\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"Gabau"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"Gabau"},"content":"              \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"0.0\" prefHeight\u003d\"180.0\" prefWidth\u003d\"200.0\"\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"Gabau"},"content":"                     \u003cchildren\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"Gabau"},"content":"                        \u003cText layoutX\u003d\"27.0\" layoutY\u003d\"37.0\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Description\" wrappingWidth\u003d\"74.0390625\" /\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"Gabau"},"content":"                        \u003cTextField fx:id\u003d\"todoDescription\" layoutX\u003d\"27.0\" layoutY\u003d\"39.0\" prefHeight\u003d\"22.0\" prefWidth\u003d\"181.0\" /\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"Gabau"},"content":"                        \u003cButton layoutX\u003d\"465.0\" layoutY\u003d\"317.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleAddTodo\" text\u003d\"Submit\" /\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"Gabau"},"content":"                     \u003c/children\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"Gabau"},"content":"                  \u003c/AnchorPane\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"Gabau"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"Gabau"},"content":"          \u003c/Tab\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"Gabau"},"content":"          \u003cTab fx:id\u003d\"deadline\" text\u003d\"Add Deadline\"\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"Gabau"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"Gabau"},"content":"              \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"0.0\" prefHeight\u003d\"367.0\" prefWidth\u003d\"600.0\"\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"Gabau"},"content":"                     \u003cchildren\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"Gabau"},"content":"                        \u003cDatePicker fx:id\u003d\"deadlineDate\" layoutX\u003d\"27.0\" layoutY\u003d\"101.0\" /\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"Gabau"},"content":"                        \u003cText layoutX\u003d\"27.0\" layoutY\u003d\"98.0\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Date by\" /\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"Gabau"},"content":"                        \u003cButton layoutX\u003d\"465.0\" layoutY\u003d\"317.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleAddDeadline\" text\u003d\"Submit\" /\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"Gabau"},"content":"                        \u003cText layoutX\u003d\"27.0\" layoutY\u003d\"37.0\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Description\" wrappingWidth\u003d\"74.0390625\" /\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"Gabau"},"content":"                        \u003cTextField fx:id\u003d\"deadlineDescription\" layoutX\u003d\"27.0\" layoutY\u003d\"39.0\" prefHeight\u003d\"22.0\" prefWidth\u003d\"181.0\" /\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"Gabau"},"content":"                     \u003c/children\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"Gabau"},"content":"                  \u003c/AnchorPane\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"Gabau"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"Gabau"},"content":"          \u003c/Tab\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"Gabau"},"content":"            \u003cTab fx:id\u003d\"event\" text\u003d\"Add Event\"\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"Gabau"},"content":"              \u003ccontent\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"Gabau"},"content":"                \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"0.0\" prefHeight\u003d\"180.0\" prefWidth\u003d\"200.0\"\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"Gabau"},"content":"                     \u003cchildren\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"Gabau"},"content":"                        \u003cDatePicker fx:id\u003d\"eventDate\" layoutX\u003d\"27.0\" layoutY\u003d\"101.0\" /\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"Gabau"},"content":"                        \u003cText layoutX\u003d\"27.0\" layoutY\u003d\"98.0\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Date by\" /\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"Gabau"},"content":"                        \u003cButton layoutX\u003d\"465.0\" layoutY\u003d\"317.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleAddEvent\" text\u003d\"Submit\" /\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"Gabau"},"content":"                        \u003cText layoutX\u003d\"27.0\" layoutY\u003d\"37.0\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Description\" wrappingWidth\u003d\"74.0390625\" /\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"Gabau"},"content":"                        \u003cTextField fx:id\u003d\"eventDescription\" layoutX\u003d\"27.0\" layoutY\u003d\"39.0\" prefHeight\u003d\"22.0\" prefWidth\u003d\"181.0\" /\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"Gabau"},"content":"                     \u003c/children\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"Gabau"},"content":"                  \u003c/AnchorPane\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"Gabau"},"content":"              \u003c/content\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"Gabau"},"content":"            \u003c/Tab\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"Gabau"},"content":"        \u003c/tabs\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"Gabau"},"content":"      \u003c/TabPane\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"Gabau"},"content":"   \u003c/children\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"Gabau"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"Gabau":55}},{"path":"src/test/java/DukeTester.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gabau"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"Gabau"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"Gabau"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":"import duke.util.commands.DelCommand;","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"Gabau"},"content":"import duke.util.commands.ExitCommand;","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"Gabau"},"content":"import duke.util.parser.Parser;","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":"import duke.util.tasks.DateTaskTable;","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"Gabau"},"content":"import duke.util.tasks.DatedTask;","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":"import duke.util.tasks.Deadline;","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":"import duke.util.tasks.DukeException;","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"Gabau"},"content":"import duke.util.tasks.TaskList;","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"Gabau"},"content":"import duke.util.ui.Ui;","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Gabau"},"content":"public class DukeTester {","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"Gabau"},"content":"     * Function to test the dated task table.","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"Gabau"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Gabau"},"content":"    public void testDatedTaskTable() {","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Gabau"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"Gabau"},"content":"            DateTaskTable t \u003d new DateTaskTable();","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"Gabau"},"content":"            DatedTask[] arr \u003d new DatedTask[3];","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"Gabau"},"content":"            arr[0] \u003d Deadline.of(\"Working by life /by 2020-08-20\");","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"Gabau"},"content":"            arr[1] \u003d Deadline.of(\"Sleeping in life /by 2020-08-20\");","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"Gabau"},"content":"            arr[2] \u003d Deadline.of(\"kdsfmekfsdf /by 2020-08-20\");","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"Gabau"},"content":"            t.add(arr[0]);","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"Gabau"},"content":"            t.add(arr[1]);","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"Gabau"},"content":"            t.add(arr[2]);","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"Gabau"},"content":"            ArrayList\u003cDatedTask\u003e ls \u003d t.get(Parser.dateParse(\"2020-08-20\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"Gabau"},"content":"            assertEquals(3, ls.size());","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"Gabau"},"content":"            for (int i \u003d 0; i \u003c ls.size(); i++) {","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"Gabau"},"content":"                assertEquals(arr[i], t.get(Parser.dateParse(\"2020-08-20\")).get(i));","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"Gabau"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"Gabau"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"Gabau"},"content":"            System.err.println(e.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"Gabau"},"content":"     * Method to test the delete command.","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"Gabau"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"Gabau"},"content":"    public void testDeleteCommand() {","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"Gabau"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"Gabau"},"content":"            DateTaskTable t \u003d new DateTaskTable();","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"Gabau"},"content":"            TaskList tasklist \u003d new TaskList();","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"Gabau"},"content":"            t.add(Deadline.of(\"Driving a car /by 2020-08-20\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"Gabau"},"content":"            t.add(Deadline.of(\"Driving a traing/by2020-08-20\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"Gabau"},"content":"            t.add(Deadline.of(\"Building a car/by 2020-08-20\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"Gabau"},"content":"            tasklist.add(Deadline.of(\"Driving a car /by 2020-08-20\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"Gabau"},"content":"            tasklist.add(Deadline.of(\"Driving a traing/by2020-08-20\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"Gabau"},"content":"            tasklist.add(Deadline.of(\"Building a car/by 2020-08-20\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"Gabau"},"content":"            DelCommand removeDrCar \u003d new DelCommand(1, tasklist, t);","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"Gabau"},"content":"            removeDrCar.execute();","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"Gabau"},"content":"            assertEquals(Deadline.of(\"Driving a traing/by2020-08-20\"), tasklist.get(0));","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"Gabau"},"content":"            assertEquals(Deadline.of(\"Driving a traing/by2020-08-20\"), t.get(Parser.dateParse(\"2020-08-20\")).get(0));","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"Gabau"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"Gabau"},"content":"            System.err.println(e.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"Gabau"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":80,"author":{"gitId":"Gabau"},"content":"     * A method to test the parser.","lastModifiedDate":"2021-08-28"},{"lineNumber":81,"author":{"gitId":"Gabau"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":82,"author":{"gitId":"Gabau"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":83,"author":{"gitId":"Gabau"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"Gabau"},"content":"    public void testParser() {","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"Gabau"},"content":"        DateTaskTable t \u003d new DateTaskTable();","lastModifiedDate":"2021-08-22"},{"lineNumber":86,"author":{"gitId":"Gabau"},"content":"        TaskList tasklist \u003d new TaskList();","lastModifiedDate":"2021-08-22"},{"lineNumber":87,"author":{"gitId":"Gabau"},"content":"        Parser p \u003d new Parser(new Ui(), tasklist, t);","lastModifiedDate":"2021-08-22"},{"lineNumber":88,"author":{"gitId":"Gabau"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":89,"author":{"gitId":"Gabau"},"content":"            p.inputsParser(\"deadline fly a car /by 2020-08-01\").executeAll();","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"Gabau"},"content":"            p.inputsParser(\"todo Build the empire states building\").executeAll();","lastModifiedDate":"2021-08-22"},{"lineNumber":91,"author":{"gitId":"Gabau"},"content":"            assertEquals(2, tasklist.size());","lastModifiedDate":"2021-08-22"},{"lineNumber":92,"author":{"gitId":"Gabau"},"content":"            assertEquals(t.get(Parser.dateParse(\"2020-08-01\")).get(0), tasklist.get(0));","lastModifiedDate":"2021-08-22"},{"lineNumber":93,"author":{"gitId":"Gabau"},"content":"            p.inputsParser(\"bye\").executeAll();","lastModifiedDate":"2021-08-22"},{"lineNumber":94,"author":{"gitId":"Gabau"},"content":"            assertEquals(true, ExitCommand.isExit());","lastModifiedDate":"2021-08-28"},{"lineNumber":95,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":96,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"Gabau"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":98,"author":{"gitId":"Gabau"},"content":"            System.err.println(e.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":99,"author":{"gitId":"Gabau"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":100,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":101,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":102,"author":{"gitId":"Gabau"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":103,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":104,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":105,"author":{"gitId":"Gabau"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":106,"author":{"gitId":"Gabau"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Gabau":106}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Gabau"},"content":"todo drink water","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"Gabau"},"content":"deadline make origami /by Now","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"Gabau"},"content":"event attend concert /at 9-11-2001","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"Gabau"},"content":"event make windows 11 /at Microsoft","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"Gabau"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"Gabau"},"content":"done 2","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"Gabau"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"Gabau"},"content":"todo eat cheese","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"Gabau"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"Gabau"},"content":"delete 2","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"Gabau"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"Gabau"},"content":"delete","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"Gabau"},"content":"done 1","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"Gabau"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"Gabau"},"content":"bye","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"Gabau":15}}]
