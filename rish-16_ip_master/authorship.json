[{"path":"src/main/java/BotException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rish-16"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"rish-16"},"content":" * ","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"rish-16"},"content":" * This represents a BotException that\u0027s thrown when a bad command is given.","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"rish-16"},"content":" * ","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"rish-16"},"content":" * @author Rishabh Anand","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"rish-16"},"content":" * @version CS2103, AY21/22 Semester 1","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"rish-16"},"content":" * ","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"rish-16"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"rish-16"},"content":"public class BotException extends RuntimeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"rish-16"},"content":"    public BotException(String message) {","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"rish-16"},"content":"        super(message);","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"rish-16"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"rish-16":14}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rish-16"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"rish-16"},"content":" * ","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"rish-16"},"content":" * This represents a Deadline task with a time limit.","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"rish-16"},"content":" * ","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"rish-16"},"content":" * @author Rishabh Anand","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"rish-16"},"content":" * @version CS2103, AY21/22 Semester 1","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"rish-16"},"content":" * ","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"rish-16"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"rish-16"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"rish-16"},"content":"    protected String deadline;","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"rish-16"},"content":"    public Deadline(String desc, String deadline) {","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"rish-16"},"content":"        super(desc);","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"rish-16"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"rish-16"},"content":"    // returns the string representation of the Deadline","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"rish-16"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"rish-16"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"rish-16"},"content":"        return \"[D]\" ","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"rish-16"},"content":"                + super.toString()","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"rish-16"},"content":"                + \" (by: \"","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"rish-16"},"content":"                + this.deadline","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"rish-16"},"content":"                + \")\";","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"rish-16"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"rish-16":26}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rish-16"},"content":"/* ","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"rish-16"},"content":" * This file contains the main logic behind the Duke chatbot.","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"rish-16"},"content":" * ","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"rish-16"},"content":" * @author: @rish-16","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"rish-16"},"content":" * @version: CS2103, AY21/22 Semester 1","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"rish-16"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"rish-16"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"rish-16"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"rish-16"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"rish-16"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"rish-16"},"content":" * This represents the Duke chatbot and its business logic.","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"rish-16"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"rish-16"},"content":"    private static final String TODO_NO_DESC \u003d \"OOPS!!! The description of a todo cannot be empty.\";","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"rish-16"},"content":"    private static final String DEADLINE_NO_INFO \u003d \"OOPS!!! A deadline must have a description and datetime limit.\";","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"rish-16"},"content":"    private static final String UNRECOG \u003d \"OOPS!!! I\u0027m sorry, this is an unrecognised command.\";","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"rish-16"},"content":"    private static final String EVENT_NO_INFO \u003d \"OOPS!!! An event must have a description and datetime duration.\";","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"rish-16"},"content":"    private static final String IDX_OUT_OF_BOUNDS \u003d \"OOPS!!! You provided an invalid task index. Try again.\";","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"rish-16"},"content":"    private ArrayList\u003cTask\u003e dataStore; // stores the actual tasks","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"rish-16"},"content":"    ","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"rish-16"},"content":"    // Duke class constructor","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"rish-16"},"content":"    public Duke() {","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"rish-16"},"content":"        dataStore \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":36,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"rish-16"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"rish-16"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"rish-16"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"rish-16"},"content":"        ","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"rish-16"},"content":"        while (true) {","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"rish-16"},"content":"            // get user input until \"bye\" is typed","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"rish-16"},"content":"            Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"rish-16"},"content":"            System.out.println(\"\");","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"rish-16"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"rish-16"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"rish-16"},"content":"                // exit loop and close chatbot program","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"rish-16"},"content":"                System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"rish-16"},"content":"                break;","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"rish-16"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"rish-16"},"content":"            // handle errors and and chatbot logic","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"rish-16"},"content":"            try {","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"rish-16"},"content":"                duke.mainLogic(input);","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"rish-16"},"content":"            } catch (BotException err) {","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"rish-16"},"content":"                System.out.println(err);","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"rish-16"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"rish-16"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":63,"author":{"gitId":"rish-16"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":64,"author":{"gitId":"rish-16"},"content":"     * Throws exceptions when unexpected inputs are passed in to the chatbot.","lastModifiedDate":"2021-08-19"},{"lineNumber":65,"author":{"gitId":"rish-16"},"content":"     * ","lastModifiedDate":"2021-08-19"},{"lineNumber":66,"author":{"gitId":"rish-16"},"content":"     * @param input the user query from Scanner","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"rish-16"},"content":"     * @throws BotException","lastModifiedDate":"2021-08-19"},{"lineNumber":68,"author":{"gitId":"rish-16"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"rish-16"},"content":"    public void errorHandler(String input) throws BotException {","lastModifiedDate":"2021-08-19"},{"lineNumber":70,"author":{"gitId":"rish-16"},"content":"        input \u003d input.strip(); // remove whitespace","lastModifiedDate":"2021-08-19"},{"lineNumber":71,"author":{"gitId":"rish-16"},"content":"        String[] brokenInput \u003d input.split(\" \");","lastModifiedDate":"2021-08-19"},{"lineNumber":72,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":73,"author":{"gitId":"rish-16"},"content":"        if (input.equals(\"todo\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":74,"author":{"gitId":"rish-16"},"content":"            throw new BotException(TODO_NO_DESC);","lastModifiedDate":"2021-08-19"},{"lineNumber":75,"author":{"gitId":"rish-16"},"content":"        } else if (input.equals(\"deadline\") || input.contains(\"deadline\") \u0026\u0026 !input.contains(\"/by\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":76,"author":{"gitId":"rish-16"},"content":"            throw new BotException(DEADLINE_NO_INFO);","lastModifiedDate":"2021-08-19"},{"lineNumber":77,"author":{"gitId":"rish-16"},"content":"        } else if (input.equals(\"event\") || input.contains(\"event\") \u0026\u0026 !input.contains(\"/at\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":78,"author":{"gitId":"rish-16"},"content":"            throw new BotException(EVENT_NO_INFO);","lastModifiedDate":"2021-08-19"},{"lineNumber":79,"author":{"gitId":"rish-16"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":80,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":81,"author":{"gitId":"rish-16"},"content":"        ArrayList\u003cString\u003e prunedInput \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2021-08-19"},{"lineNumber":82,"author":{"gitId":"rish-16"},"content":"        for (String str : brokenInput) {","lastModifiedDate":"2021-08-19"},{"lineNumber":83,"author":{"gitId":"rish-16"},"content":"            if (str.length() \u003e 0) {","lastModifiedDate":"2021-08-19"},{"lineNumber":84,"author":{"gitId":"rish-16"},"content":"                prunedInput.add(str);","lastModifiedDate":"2021-08-19"},{"lineNumber":85,"author":{"gitId":"rish-16"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":86,"author":{"gitId":"rish-16"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":87,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":88,"author":{"gitId":"rish-16"},"content":"        // advanced syntax errors","lastModifiedDate":"2021-08-19"},{"lineNumber":89,"author":{"gitId":"rish-16"},"content":"        if (prunedInput.get(0).equals(\"deadline\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":90,"author":{"gitId":"rish-16"},"content":"            // deadline with no description","lastModifiedDate":"2021-08-19"},{"lineNumber":91,"author":{"gitId":"rish-16"},"content":"            if (prunedInput.get(1).equals(\"/by\")) { // eg: deadline /by Mon 2PM","lastModifiedDate":"2021-08-19"},{"lineNumber":92,"author":{"gitId":"rish-16"},"content":"                throw new BotException(DEADLINE_NO_INFO);","lastModifiedDate":"2021-08-19"},{"lineNumber":93,"author":{"gitId":"rish-16"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":94,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":95,"author":{"gitId":"rish-16"},"content":"            // deadline with no date limit","lastModifiedDate":"2021-08-19"},{"lineNumber":96,"author":{"gitId":"rish-16"},"content":"            int byIndex \u003d prunedInput.indexOf(\"/by\");","lastModifiedDate":"2021-08-19"},{"lineNumber":97,"author":{"gitId":"rish-16"},"content":"            if (byIndex \u003d\u003d prunedInput.size() - 1) { // eg: deadline write program /by","lastModifiedDate":"2021-08-19"},{"lineNumber":98,"author":{"gitId":"rish-16"},"content":"                throw new BotException(DEADLINE_NO_INFO);","lastModifiedDate":"2021-08-19"},{"lineNumber":99,"author":{"gitId":"rish-16"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":100,"author":{"gitId":"rish-16"},"content":"        } else if (prunedInput.get(0).equals(\"event\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":101,"author":{"gitId":"rish-16"},"content":"            // event with no description","lastModifiedDate":"2021-08-19"},{"lineNumber":102,"author":{"gitId":"rish-16"},"content":"            if (prunedInput.get(1).equals(\"/at\")) { // eg: event /at Mon 2-4PM","lastModifiedDate":"2021-08-19"},{"lineNumber":103,"author":{"gitId":"rish-16"},"content":"                throw new BotException(EVENT_NO_INFO);","lastModifiedDate":"2021-08-19"},{"lineNumber":104,"author":{"gitId":"rish-16"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":105,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":106,"author":{"gitId":"rish-16"},"content":"            // event with no date","lastModifiedDate":"2021-08-19"},{"lineNumber":107,"author":{"gitId":"rish-16"},"content":"            int byIndex \u003d prunedInput.indexOf(\"/at\");","lastModifiedDate":"2021-08-19"},{"lineNumber":108,"author":{"gitId":"rish-16"},"content":"            if (byIndex \u003d\u003d prunedInput.size() - 1) { // eg: event visit mom /at","lastModifiedDate":"2021-08-19"},{"lineNumber":109,"author":{"gitId":"rish-16"},"content":"                throw new BotException(EVENT_NO_INFO);","lastModifiedDate":"2021-08-19"},{"lineNumber":110,"author":{"gitId":"rish-16"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":111,"author":{"gitId":"rish-16"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":112,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":113,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":114,"author":{"gitId":"rish-16"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":115,"author":{"gitId":"rish-16"},"content":"     * Handles the main business logic of the chatbot. ","lastModifiedDate":"2021-08-19"},{"lineNumber":116,"author":{"gitId":"rish-16"},"content":"     * ","lastModifiedDate":"2021-08-19"},{"lineNumber":117,"author":{"gitId":"rish-16"},"content":"     * @param input the user query from Scanner","lastModifiedDate":"2021-08-19"},{"lineNumber":118,"author":{"gitId":"rish-16"},"content":"     * @throws BotException","lastModifiedDate":"2021-08-19"},{"lineNumber":119,"author":{"gitId":"rish-16"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":120,"author":{"gitId":"rish-16"},"content":"    public void mainLogic(String input) throws BotException {","lastModifiedDate":"2021-08-19"},{"lineNumber":121,"author":{"gitId":"rish-16"},"content":"        errorHandler(input);","lastModifiedDate":"2021-08-19"},{"lineNumber":122,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":123,"author":{"gitId":"rish-16"},"content":"        if (input.equals(\"list\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":124,"author":{"gitId":"rish-16"},"content":"            for (int i \u003d 0; i \u003c dataStore.size(); i++) {","lastModifiedDate":"2021-08-19"},{"lineNumber":125,"author":{"gitId":"rish-16"},"content":"                Task task \u003d dataStore.get(i);","lastModifiedDate":"2021-08-19"},{"lineNumber":126,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":127,"author":{"gitId":"rish-16"},"content":"                if (task.getStatus()) {","lastModifiedDate":"2021-08-19"},{"lineNumber":128,"author":{"gitId":"rish-16"},"content":"                    System.out.println(i+1 + \". \" + task.toString());","lastModifiedDate":"2021-08-19"},{"lineNumber":129,"author":{"gitId":"rish-16"},"content":"                } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":130,"author":{"gitId":"rish-16"},"content":"                    System.out.println(i+1 + \". \" + task.toString());","lastModifiedDate":"2021-08-19"},{"lineNumber":131,"author":{"gitId":"rish-16"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":132,"author":{"gitId":"rish-16"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":133,"author":{"gitId":"rish-16"},"content":"        } else if (input.contains(\"todo\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":134,"author":{"gitId":"rish-16"},"content":"            // create new ToDo task","lastModifiedDate":"2021-08-19"},{"lineNumber":135,"author":{"gitId":"rish-16"},"content":"            ToDo todo \u003d new ToDo(input);","lastModifiedDate":"2021-08-19"},{"lineNumber":136,"author":{"gitId":"rish-16"},"content":"            dataStore.add(todo);","lastModifiedDate":"2021-08-19"},{"lineNumber":137,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":138,"author":{"gitId":"rish-16"},"content":"            System.out.println(\"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2021-08-19"},{"lineNumber":139,"author":{"gitId":"rish-16"},"content":"            System.out.println(\"\\t\" + todo.toString());","lastModifiedDate":"2021-08-19"},{"lineNumber":140,"author":{"gitId":"rish-16"},"content":"            System.out.println(\"Now you have \" + dataStore.size() + \" tasks in the list.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":141,"author":{"gitId":"rish-16"},"content":"        } else if (input.contains(\"deadline\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":142,"author":{"gitId":"rish-16"},"content":"            // create new Deadline task","lastModifiedDate":"2021-08-19"},{"lineNumber":143,"author":{"gitId":"rish-16"},"content":"            String query \u003d input.split(\"/by\")[0];","lastModifiedDate":"2021-08-19"},{"lineNumber":144,"author":{"gitId":"rish-16"},"content":"            String limit \u003d input.split(\"/by\")[1];","lastModifiedDate":"2021-08-19"},{"lineNumber":145,"author":{"gitId":"rish-16"},"content":"            Deadline deadlineTask \u003d new Deadline(query, limit);","lastModifiedDate":"2021-08-19"},{"lineNumber":146,"author":{"gitId":"rish-16"},"content":"            dataStore.add(deadlineTask);","lastModifiedDate":"2021-08-19"},{"lineNumber":147,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":148,"author":{"gitId":"rish-16"},"content":"            System.out.println(\"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2021-08-19"},{"lineNumber":149,"author":{"gitId":"rish-16"},"content":"            System.out.println(\"\\t\" + deadlineTask.toString());","lastModifiedDate":"2021-08-19"},{"lineNumber":150,"author":{"gitId":"rish-16"},"content":"            System.out.println(\"Now you have \" + dataStore.size() + \" tasks in the list.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":151,"author":{"gitId":"rish-16"},"content":"        } else if (input.contains(\"event\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":152,"author":{"gitId":"rish-16"},"content":"            // Create new Event task","lastModifiedDate":"2021-08-19"},{"lineNumber":153,"author":{"gitId":"rish-16"},"content":"            String query \u003d input.split(\"/at\")[0];","lastModifiedDate":"2021-08-19"},{"lineNumber":154,"author":{"gitId":"rish-16"},"content":"            String datetime \u003d input.split(\"/at\")[1];","lastModifiedDate":"2021-08-19"},{"lineNumber":155,"author":{"gitId":"rish-16"},"content":"            Event eventTask \u003d new Event(query, datetime);","lastModifiedDate":"2021-08-19"},{"lineNumber":156,"author":{"gitId":"rish-16"},"content":"            dataStore.add(eventTask);","lastModifiedDate":"2021-08-19"},{"lineNumber":157,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":158,"author":{"gitId":"rish-16"},"content":"            System.out.println(\"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2021-08-19"},{"lineNumber":159,"author":{"gitId":"rish-16"},"content":"            System.out.println(\"\\t\" + eventTask.toString());","lastModifiedDate":"2021-08-19"},{"lineNumber":160,"author":{"gitId":"rish-16"},"content":"            System.out.println(\"Now you have \" + dataStore.size() + \" tasks in the list.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":161,"author":{"gitId":"rish-16"},"content":"        } else if (input.contains(\"done\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":162,"author":{"gitId":"rish-16"},"content":"            // Mark task as completed","lastModifiedDate":"2021-08-19"},{"lineNumber":163,"author":{"gitId":"rish-16"},"content":"            int idx \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2021-08-18"},{"lineNumber":164,"author":{"gitId":"rish-16"},"content":"            ","lastModifiedDate":"2021-08-19"},{"lineNumber":165,"author":{"gitId":"rish-16"},"content":"            // check if index is within appropriate range","lastModifiedDate":"2021-08-19"},{"lineNumber":166,"author":{"gitId":"rish-16"},"content":"            if (idx \u003c 0 || idx \u003e dataStore.size()) {","lastModifiedDate":"2021-08-19"},{"lineNumber":167,"author":{"gitId":"rish-16"},"content":"                throw new BotException(IDX_OUT_OF_BOUNDS);","lastModifiedDate":"2021-08-19"},{"lineNumber":168,"author":{"gitId":"rish-16"},"content":"            } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":169,"author":{"gitId":"rish-16"},"content":"                Task task \u003d dataStore.get(idx-1);","lastModifiedDate":"2021-08-19"},{"lineNumber":170,"author":{"gitId":"rish-16"},"content":"                task.setDone();","lastModifiedDate":"2021-08-19"},{"lineNumber":171,"author":{"gitId":"rish-16"},"content":"                System.out.println(\"Nice! I\u0027ve marked this task as done: \");","lastModifiedDate":"2021-08-19"},{"lineNumber":172,"author":{"gitId":"rish-16"},"content":"                System.out.println(\"\\t\" + task.toString());","lastModifiedDate":"2021-08-19"},{"lineNumber":173,"author":{"gitId":"rish-16"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":174,"author":{"gitId":"rish-16"},"content":"        } else if (input.contains(\"delete\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":175,"author":{"gitId":"rish-16"},"content":"            int idx \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2021-08-19"},{"lineNumber":176,"author":{"gitId":"rish-16"},"content":"            Task task \u003d dataStore.get(idx-1);","lastModifiedDate":"2021-08-19"},{"lineNumber":177,"author":{"gitId":"rish-16"},"content":"            ","lastModifiedDate":"2021-08-19"},{"lineNumber":178,"author":{"gitId":"rish-16"},"content":"            System.out.println(\"Notes. I\u0027ve removed this task:\");","lastModifiedDate":"2021-08-19"},{"lineNumber":179,"author":{"gitId":"rish-16"},"content":"            System.out.println(\"\\t\" + task.toString());","lastModifiedDate":"2021-08-19"},{"lineNumber":180,"author":{"gitId":"rish-16"},"content":"            dataStore.remove(idx-1); // actual deletion","lastModifiedDate":"2021-08-19"},{"lineNumber":181,"author":{"gitId":"rish-16"},"content":"            System.out.println(\"Now you have \" + (dataStore.size()) + \" tasks in the list.\"); ","lastModifiedDate":"2021-08-19"},{"lineNumber":182,"author":{"gitId":"rish-16"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":183,"author":{"gitId":"rish-16"},"content":"            throw new BotException(UNRECOG);","lastModifiedDate":"2021-08-19"},{"lineNumber":184,"author":{"gitId":"rish-16"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"rish-16":176,"-":10}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rish-16"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"rish-16"},"content":" * ","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"rish-16"},"content":" * This represents an Event task with a time duration.","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"rish-16"},"content":" * ","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"rish-16"},"content":" * @author Rishabh Anand","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"rish-16"},"content":" * @version CS2103, AY21/22 Semester 1","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"rish-16"},"content":" * ","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"rish-16"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"rish-16"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"rish-16"},"content":"    protected String timing;","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"rish-16"},"content":"    public Event(String desc, String timing) {","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"rish-16"},"content":"        super(desc);","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"rish-16"},"content":"        this.timing \u003d timing;","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"rish-16"},"content":"    // returns string representation of the Event","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"rish-16"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"rish-16"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"rish-16"},"content":"        return \"[E]\" ","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"rish-16"},"content":"                + super.toString()","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"rish-16"},"content":"                + \" (at: \"","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"rish-16"},"content":"                + this.timing","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"rish-16"},"content":"                + \")\";","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"rish-16"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"rish-16":27}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rish-16"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"rish-16"},"content":" * This represents a Task object for the list.","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"rish-16"},"content":" * ","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"rish-16"},"content":" * @author Rishabh Anand","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"rish-16"},"content":" * @version CS2103, AY21/222 Semester 1","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"rish-16"},"content":" * ","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"rish-16"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"rish-16"},"content":"public class Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"rish-16"},"content":"    protected String description;","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"rish-16"},"content":"    protected Boolean status;","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"rish-16"},"content":"    public Task(String desc) {","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"rish-16"},"content":"        this.description \u003d desc;","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"rish-16"},"content":"        this.status \u003d false;","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"rish-16"},"content":"    // Sets the task as completed","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"rish-16"},"content":"    public void setDone() {","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"rish-16"},"content":"        this.status \u003d true;","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"rish-16"},"content":"    // returns the task status","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"rish-16"},"content":"    public Boolean getStatus() {","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"rish-16"},"content":"        return this.status;","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"rish-16"},"content":"    // returns the string representation of the status","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"rish-16"},"content":"    public String getStatusString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"rish-16"},"content":"        return this.status ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"rish-16"},"content":"    // returns the textual description of the task","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"rish-16"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"rish-16"},"content":"        return this.description;","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"rish-16"},"content":"    // compares the task with another","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"rish-16"},"content":"    public Boolean equals(Task t) {","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"rish-16"},"content":"        if (t.getDescription().equals(this.description)) {","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"rish-16"},"content":"            return true;","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"rish-16"},"content":"        } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"rish-16"},"content":"            return false;","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"rish-16"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"rish-16"},"content":"    // returns the string representation of the Task","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"rish-16"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"rish-16"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"rish-16"},"content":"        return this.getStatusString() + \" \" + this.getDescription();","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"rish-16"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"rish-16":51}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rish-16"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"rish-16"},"content":" * ","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"rish-16"},"content":" * This represents a ToDo task without a time limit.","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"rish-16"},"content":" * ","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"rish-16"},"content":" * @author Rishabh Anand","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"rish-16"},"content":" * @version CS2103, AY21/22 Semester 1","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"rish-16"},"content":" * ","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"rish-16"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"rish-16"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"rish-16"},"content":"    public ToDo(String desc) {","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"rish-16"},"content":"        super(desc);","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"rish-16"},"content":"   ","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"rish-16"},"content":"    // returns the string representation of the ToDo task in the list","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"rish-16"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"rish-16"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"rish-16"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"rish-16"},"content":"    }    ","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"rish-16"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"rish-16":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rish-16"},"content":"todo buy book","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"rish-16"},"content":"deadline sell book /by Sunday","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"rish-16"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"rish-16"},"content":"icnerweorineoivne","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"rish-16"},"content":"event /at Mon 2-4pm","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"rish-16"},"content":"deadline do homework /by","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"rish-16"},"content":"done 45","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"rish-16"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"rish-16":8}}]
