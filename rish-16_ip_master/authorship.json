[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"rish-16"},"content":"# JarVIS","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"rish-16"},"content":"This repo contains the code for the `JarVIS` chatbot as part of **CS2103: Software Engineering**.","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"rish-16"},"content":"## The name","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"rish-16"},"content":"The chatbot is fully programmed in Java and packaged as a `.jar` file, hence the name.","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"rish-16"},"content":"\u003cimg src\u003d\"./docs/Ui.png\" height\u003d\"400\" /\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"rish-16"},"content":"## Setting up in Intellij","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":20,"author":{"gitId":"rish-16"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). ","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"rish-16":7,"-":13}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"rish-16"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.9\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"rish-16"},"content":"javafx {","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"rish-16"},"content":"    version \u003d \"11.0.2\"","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"rish-16"},"content":"    modules \u003d [ \u0027javafx.controls\u0027 ]","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"rish-16"},"content":"}","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"rish-16"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"rish-16"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"rish-16"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"rish-16"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"rish-16"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"rish-16"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"rish-16"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"rish-16"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"rish-16"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"rish-16"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"rish-16"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"rish-16"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"rish-16"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"rish-16"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"rish-16":22,"-":40}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"rish-16"},"content":"This README briefly documents the many things you can do with `JarVIS` – the fake, inauthentic ","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"rish-16"},"content":"CS2103 JARVIS clone.","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"rish-16"},"content":"## Command Overview","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"rish-16"},"content":"`JarVIS` provides the following functions and features:","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"rish-16"},"content":"| Command                  | Description                                                                                                 |","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"rish-16"},"content":"|--------------------------|-------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"rish-16"},"content":"| `JarVIS?`                | Pulls up the user manual with all available commands.                                                       |","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"rish-16"},"content":"| `todo DESC`              | Creates a ToDo task with `DESC` message                                                                     |","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"rish-16"},"content":"| `event DESC /at TIME`    | Creates an Event task with `DESC` message that takes place at `TIME` in `yyyy-MM-dd HH:mm` format           |","lastModifiedDate":"2021-09-13"},{"lineNumber":13,"author":{"gitId":"rish-16"},"content":"| `deadline DESC /by TIME` | Creates a Deadline task with `DESC` message that should be completed by `TIME` in `yyyy-MM-dd HH:mm` format |","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"rish-16"},"content":"| `done IDX`               | Marks the task at index `IDX` (starts from 1) as done                                                       |","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"rish-16"},"content":"| `delete IDX`             | Deletes the task at index `IDX` (starts from 1) from list                                                   |","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"rish-16"},"content":"| `bye`                    | Saves data and quits the chatbot application                                                                |","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":18,"author":{"gitId":"rish-16"},"content":"\u003e Sometimes, `JarVIS` tends to get a little cocky. Ignore him :/","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"rish-16"},"content":"## Full Commands","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"rish-16"},"content":"### `JarVIS?`","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"rish-16"},"content":"This returns the user manual that documents all the features offered.","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"rish-16"},"content":"**Input**: `JarVIS?`","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"rish-16"},"content":"**Output**: ","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"rish-16"},"content":"```","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"rish-16"},"content":"list","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"rish-16"},"content":"    lists all items in the memory","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"rish-16"},"content":"todo \u003ctask_name\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"rish-16"},"content":"    creates a ToDo task with no deadline","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"rish-16"},"content":"  ","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"rish-16"},"content":"deadline \u003ctask_name\u003e /by yyyy-MM-dd HH:mm","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"rish-16"},"content":"    creates a Deadline task with a timestamp deadline","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"rish-16"},"content":"    ","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"rish-16"},"content":"event  \u003ctask_name\u003e /at yyyy-MM-dd HH:mm","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"rish-16"},"content":"    creates an Event task taking place at a timestamp","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"rish-16"},"content":"delete \u003ctask_idx\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"rish-16"},"content":"    deletes the task found at the given index","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"rish-16"},"content":"done \u003ctask_idx\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"rish-16"},"content":"    sets the specified task\u0027s status to done","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"rish-16"},"content":"find \u003ckeyword\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"rish-16"},"content":"    finds the tasks containing a given keyword","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"rish-16"},"content":"```","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"rish-16"},"content":"### `todo`","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"rish-16"},"content":"**Input**: `todo DESC` \u003cbr\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"rish-16"},"content":"**Example**: `todo Homework` \u003cbr\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"rish-16"},"content":"**Output**:","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"rish-16"},"content":"```","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"rish-16"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"rish-16"},"content":"    [T][ ] Homework","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"rish-16"},"content":"Now you have 1 task(s) in the list.    ","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"rish-16"},"content":"```","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"rish-16"},"content":"### `event`","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"rish-16"},"content":"**Input**: `event DESC /at TIME` \u003cbr\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"rish-16"},"content":"**Example**: `event Dance Class /at 2021-12-12 12:12` \u003cbr\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"rish-16"},"content":"**Output**:","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"rish-16"},"content":"```","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"rish-16"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"rish-16"},"content":"    [E][ ] Dance Class (at: Dec 12 2021 12:12 PM)","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"rish-16"},"content":"Now you have 1 task(s) in the list.    ","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":71,"author":{"gitId":"rish-16"},"content":"### `deadline`","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":73,"author":{"gitId":"rish-16"},"content":"**Input**: `deadline DESC /by TIME` \u003cbr\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":74,"author":{"gitId":"rish-16"},"content":"**Example**: `deadline CS2103 iP /by 2021-12-12 12:12` \u003cbr\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":75,"author":{"gitId":"rish-16"},"content":"**Output**:","lastModifiedDate":"2021-10-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-10-16"},{"lineNumber":77,"author":{"gitId":"rish-16"},"content":"Awesome! I\u0027ve added this task:","lastModifiedDate":"2021-10-16"},{"lineNumber":78,"author":{"gitId":"rish-16"},"content":"    [D][ ] CS2103 iP (by: Dec 12 2021 12:12 PM)","lastModifiedDate":"2021-10-16"},{"lineNumber":79,"author":{"gitId":"rish-16"},"content":"Now you have 1 task(s) in the list.    ","lastModifiedDate":"2021-10-16"},{"lineNumber":80,"author":{"gitId":"rish-16"},"content":"```","lastModifiedDate":"2021-10-16"},{"lineNumber":81,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":82,"author":{"gitId":"rish-16"},"content":"### `done`","lastModifiedDate":"2021-10-16"},{"lineNumber":83,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":84,"author":{"gitId":"rish-16"},"content":"**Input**: `done IDX` \u003cbr\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":85,"author":{"gitId":"rish-16"},"content":"**Example**: `done 1` \u003cbr\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":86,"author":{"gitId":"rish-16"},"content":"**Output**:","lastModifiedDate":"2021-10-16"},{"lineNumber":87,"author":{"gitId":"rish-16"},"content":"```","lastModifiedDate":"2021-10-16"},{"lineNumber":88,"author":{"gitId":"rish-16"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2021-10-16"},{"lineNumber":89,"author":{"gitId":"rish-16"},"content":"    [T][X] Homework   ","lastModifiedDate":"2021-10-16"},{"lineNumber":90,"author":{"gitId":"rish-16"},"content":"```","lastModifiedDate":"2021-10-16"},{"lineNumber":91,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":92,"author":{"gitId":"rish-16"},"content":"### `delete`","lastModifiedDate":"2021-10-16"},{"lineNumber":93,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":94,"author":{"gitId":"rish-16"},"content":"**Input**: `delete IDX` \u003cbr\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":95,"author":{"gitId":"rish-16"},"content":"**Example**: `delete 1` \u003cbr\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":96,"author":{"gitId":"rish-16"},"content":"**Output**:","lastModifiedDate":"2021-10-16"},{"lineNumber":97,"author":{"gitId":"rish-16"},"content":"```","lastModifiedDate":"2021-10-16"},{"lineNumber":98,"author":{"gitId":"rish-16"},"content":"Understood. I\u0027ve removed,","lastModifiedDate":"2021-10-16"},{"lineNumber":99,"author":{"gitId":"rish-16"},"content":"    [T][X] Homework","lastModifiedDate":"2021-10-16"},{"lineNumber":100,"author":{"gitId":"rish-16"},"content":"You now have 2 tasks to totally ignore.    ","lastModifiedDate":"2021-10-16"},{"lineNumber":101,"author":{"gitId":"rish-16"},"content":"```","lastModifiedDate":"2021-10-16"},{"lineNumber":102,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":103,"author":{"gitId":"rish-16"},"content":"### `bye`","lastModifiedDate":"2021-10-16"},{"lineNumber":104,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":105,"author":{"gitId":"rish-16"},"content":"**Input**: `bye` \u003cbr\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":106,"author":{"gitId":"rish-16"},"content":"**Output**:","lastModifiedDate":"2021-10-16"},{"lineNumber":107,"author":{"gitId":"rish-16"},"content":"```","lastModifiedDate":"2021-10-16"},{"lineNumber":108,"author":{"gitId":"rish-16"},"content":"Goodbye! As always, a pleasure working with you.","lastModifiedDate":"2021-10-16"},{"lineNumber":109,"author":{"gitId":"rish-16"},"content":"```","lastModifiedDate":"2021-10-16"},{"lineNumber":110,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":111,"author":{"gitId":"rish-16"},"content":"The bot then proceeds to shut down completely.","lastModifiedDate":"2021-10-16"},{"lineNumber":112,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":115,"author":{"gitId":"rish-16"},"content":"1. Clone this repo and `cd` into it:","lastModifiedDate":"2021-09-13"},{"lineNumber":116,"author":{"gitId":"rish-16"},"content":"```bash","lastModifiedDate":"2021-09-13"},{"lineNumber":117,"author":{"gitId":"rish-16"},"content":"git clone https://github.com/rish-16/ip.git","lastModifiedDate":"2021-09-13"},{"lineNumber":118,"author":{"gitId":"rish-16"},"content":"cd ip","lastModifiedDate":"2021-09-13"},{"lineNumber":119,"author":{"gitId":"rish-16"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":121,"author":{"gitId":"rish-16"},"content":"2. Open up the `ip` codebase in **IntelliJ** and wait for the Gradle build and processes to end.","lastModifiedDate":"2021-09-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":123,"author":{"gitId":"rish-16"},"content":"3. Press the *Play* button at the top-right corner to launch the application.","lastModifiedDate":"2021-09-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"rish-16":103,"-":21}},{"path":"src/main/java/duke/BotException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rish-16"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"rish-16"},"content":" * ","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"rish-16"},"content":" * This represents a BotException that\u0027s thrown when a bad command is given.","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"rish-16"},"content":" * ","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"rish-16"},"content":" * @author Rishabh Anand","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"rish-16"},"content":" * @version CS2103, AY21/22 Semester 1","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"rish-16"},"content":" * ","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"rish-16"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"rish-16"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"rish-16"},"content":"public class BotException extends Exception {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"rish-16"},"content":"    public BotException(String message) {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"rish-16"},"content":"        super(message);","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"rish-16"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"rish-16":16}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rish-16"},"content":"package duke;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"rish-16"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"rish-16"},"content":" * This file contains the main logic behind the Duke chatbot.","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"rish-16"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"rish-16"},"content":" * @author: Rishabh Anand","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"rish-16"},"content":" * @version: CS2103, AY21/22 Semester 1","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"rish-16"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"rish-16"},"content":"import java.io.FileNotFoundException;  // Import this class to handle errors","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"rish-16"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"rish-16"},"content":"import java.io.File;","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"rish-16"},"content":"import duke.datastore.DataStore;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"rish-16"},"content":"import duke.membuffer.MemoryBuffer;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"rish-16"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"rish-16"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"rish-16"},"content":"public class Duke {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"rish-16"},"content":"    final private MemoryBuffer memBuff;","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"rish-16"},"content":"    public Ui userInt;","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"rish-16"},"content":"    public DataStore dataStore;","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"rish-16"},"content":"    final public Parser parser;","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"rish-16"},"content":"    public Duke() {","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"rish-16"},"content":"        String FILEPATH \u003d \"./data/duke.txt\";","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"rish-16"},"content":"        dataStore \u003d new DataStore();","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"rish-16"},"content":"        memBuff \u003d new MemoryBuffer(FILEPATH);","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"rish-16"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"rish-16"},"content":"        userInt \u003d new Ui();","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"rish-16"},"content":"        File f \u003d new File(FILEPATH);","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"rish-16"},"content":"        if(f.exists() \u0026\u0026 !f.isDirectory()) {","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"rish-16"},"content":"            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"rish-16"},"content":"                dataStore.ingestExternalSource(memBuff.readFile(), parser);","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"rish-16"},"content":"            } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"rish-16"},"content":"                System.out.println(\"File not found!\");","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"rish-16"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"rish-16"},"content":"        } else {","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"rish-16"},"content":"            try {","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"rish-16"},"content":"                dataStore.createFile(FILEPATH);","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"rish-16"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"rish-16"},"content":"                System.out.println(\"Something went wrong. \" + e);","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"rish-16"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"rish-16"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"rish-16"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"rish-16"},"content":"        return parser.execute(input, dataStore, memBuff);","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"rish-16"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"rish-16":50}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rish-16"},"content":"package duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"rish-16"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"rish-16"},"content":"public class Launcher {","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"rish-16"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"rish-16"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"rish-16"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"rish-16":9}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rish-16"},"content":"package duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"rish-16"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"rish-16"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"rish-16"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"rish-16"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"rish-16"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"rish-16"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"rish-16"},"content":"import duke.ui.uiController.MainWindow;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"rish-16"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"rish-16"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"rish-16"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"rish-16"},"content":"public class Main extends Application {","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"rish-16"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"rish-16"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"rish-16"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"rish-16"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"rish-16"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"rish-16"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"rish-16"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"rish-16"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"rish-16"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"rish-16"},"content":"            stage.setTitle(\"JarVIS\");","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"rish-16"},"content":"            stage.show();","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"rish-16"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"rish-16"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"rish-16"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"rish-16"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"rish-16":34}},{"path":"src/main/java/duke/datastore/DataStore.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rish-16"},"content":"package duke.datastore;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"rish-16"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"rish-16"},"content":" * This class represents the DataStore which serves as the primary","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"rish-16"},"content":" * working memory for all actions performed on the chatbot.","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"rish-16"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"rish-16"},"content":" * @author Rishabh Anand","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"rish-16"},"content":" * @version CS2103 AY21/22 Semester 1","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"rish-16"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"rish-16"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"rish-16"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"rish-16"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"rish-16"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"rish-16"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"rish-16"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"rish-16"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"rish-16"},"content":"public class DataStore {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"rish-16"},"content":"    private ArrayList\u003cTask\u003e dataStore;","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"rish-16"},"content":"    ","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"rish-16"},"content":"    public DataStore() {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"rish-16"},"content":"        dataStore \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"rish-16"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"rish-16"},"content":"     * Reads and stores the data from the flat file in memory.","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"rish-16"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"rish-16"},"content":"     * @param store the data store containing the per-line task records.","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"rish-16"},"content":"     * @param parser the Parser object that parses the commands from the file.","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"rish-16"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"rish-16"},"content":"    public void ingestExternalSource(ArrayList\u003cString\u003e store, Parser parser) {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"rish-16"},"content":"        dataStore \u003d parser.parseFromFile(store);","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"rish-16"},"content":"    // returns the size of the datastore","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"rish-16"},"content":"    public int length() {","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"rish-16"},"content":"        return dataStore.size();","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"rish-16"},"content":"    public Task get(int index) {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"rish-16"},"content":"        return dataStore.get(index);","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"rish-16"},"content":"    public void add(Task task) {","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"rish-16"},"content":"        dataStore.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"rish-16"},"content":"    public void remove(int i) {","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"rish-16"},"content":"        dataStore.remove(i);","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"rish-16"},"content":"    public void createFile(String fileName) throws IOException {","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"rish-16"},"content":"        Path storagePath \u003d Paths.get(fileName);","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"rish-16"},"content":"        Files.createDirectories(storagePath.getParent());","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"rish-16"},"content":"        Files.createFile(storagePath);","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"rish-16"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"rish-16":58}},{"path":"src/main/java/duke/membuffer/MemoryBuffer.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rish-16"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"rish-16"},"content":" * ","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"rish-16"},"content":" * Represents the memory buffer used to store commands after all","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"rish-16"},"content":" * changes have been made and the session has ended.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"rish-16"},"content":" * ","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"rish-16"},"content":" * @author Rishabh Anand","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"rish-16"},"content":" * @version CS2103 AY21/22 Semester 1","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"rish-16"},"content":" * ","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"rish-16"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"rish-16"},"content":"package duke.membuffer;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"rish-16"},"content":"import java.io.File;  // Import the File class","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"rish-16"},"content":"import java.io.FileNotFoundException;  // Import this class to handle errors","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"rish-16"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"rish-16"},"content":"import duke.datastore.DataStore;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"rish-16"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"rish-16"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"rish-16"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"rish-16"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"rish-16"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"rish-16"},"content":"public class MemoryBuffer {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"rish-16"},"content":"    private final String filePath;","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"rish-16"},"content":"    public MemoryBuffer(String fp) {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"rish-16"},"content":"        filePath \u003d fp;","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"rish-16"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"rish-16"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"rish-16"},"content":"     * Reads the flat file and its contents into an accessible format.","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"rish-16"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"rish-16"},"content":"     * @return an ArrayList of task records in string format.","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"rish-16"},"content":"     * @throws FileNotFoundException thrown when the file cannot be found in the file system.","lastModifiedDate":"2021-09-06"},{"lineNumber":38,"author":{"gitId":"rish-16"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"rish-16"},"content":"    public ArrayList\u003cString\u003e readFile() throws FileNotFoundException {","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"rish-16"},"content":"        ArrayList\u003cString\u003e store \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-06"},{"lineNumber":41,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"rish-16"},"content":"        File myObj \u003d new File(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"rish-16"},"content":"        Scanner myReader \u003d new Scanner(myObj);","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"rish-16"},"content":"        while (myReader.hasNextLine()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"rish-16"},"content":"            String data \u003d myReader.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"rish-16"},"content":"            store.add(data); // store line in collection","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"rish-16"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"rish-16"},"content":"        myReader.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"rish-16"},"content":"        return store;","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"rish-16"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"rish-16"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"rish-16"},"content":"     * Writes the most recent task record logs into memory on a flat file.","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"rish-16"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"rish-16"},"content":"     * @param dataStore the data store containing the updated list of tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"rish-16"},"content":"     * @throws IOException thrown when there is an error reading the file.","lastModifiedDate":"2021-09-06"},{"lineNumber":59,"author":{"gitId":"rish-16"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"rish-16"},"content":"    public void writeFile(DataStore dataStore) throws IOException {","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"rish-16"},"content":"        FileWriter fileWriter \u003d new FileWriter(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"rish-16"},"content":"        PrintWriter printWriter \u003d new PrintWriter(fileWriter);","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"rish-16"},"content":"        for (int i \u003d 0; i \u003c dataStore.length(); i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"rish-16"},"content":"            Task record \u003d dataStore.get(i);","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"rish-16"},"content":"            String recordRepresentation \u003d record.toTextRepresentation();","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"rish-16"},"content":"            ","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"rish-16"},"content":"            printWriter.print(recordRepresentation + \"\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"rish-16"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"rish-16"},"content":"        printWriter.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"rish-16"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"rish-16":72}},{"path":"src/main/java/duke/parser/Brain.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rish-16"},"content":"package duke.parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"rish-16"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"rish-16"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"rish-16"},"content":"import duke.BotException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"rish-16"},"content":"import duke.datastore.DataStore;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"rish-16"},"content":"import duke.membuffer.MemoryBuffer;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"rish-16"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"rish-16"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"rish-16"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"rish-16"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"rish-16"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"rish-16"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"rish-16"},"content":"import javafx.scene.control.ButtonType;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"rish-16"},"content":"/**","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"rish-16"},"content":" *","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"rish-16"},"content":" * This class represents the main logic unit of the","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"rish-16"},"content":" * JARVIS chatbot that performs the actual functions.","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"rish-16"},"content":" *","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"rish-16"},"content":" * @author Rishabh Anand","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"rish-16"},"content":" * @version CS2103 AY21/22 Semester 1","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"rish-16"},"content":" */","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"rish-16"},"content":"public class Brain {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"rish-16"},"content":"    public final String INVALID_DATE_MESSAGE \u003d \"You\u0027ve given me an invalid date. Learn to read a calendar ...\";","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"rish-16"},"content":"    public Brain() {}","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"rish-16"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"rish-16"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"rish-16"},"content":"     * Lists out the items in memory when requested by the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"rish-16"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"rish-16"},"content":"     * @param dataStore the list containing the up-to-date task records.","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"rish-16"},"content":"     * @return the final result for the given query.","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"rish-16"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"rish-16"},"content":"    public String listItems(DataStore dataStore) {","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"rish-16"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"rish-16"},"content":"        builder.append(\"A list of tasks for you to totally ignore: \\n\");","lastModifiedDate":"2021-09-13"},{"lineNumber":39,"author":{"gitId":"rish-16"},"content":"        for (int i \u003d 0; i \u003c dataStore.length(); i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"rish-16"},"content":"            Task task \u003d dataStore.get(i);","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"rish-16"},"content":"            String message \u003d i+1 + \". \" + task.toString() + \"\\n\";","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"rish-16"},"content":"            builder.append(message);","lastModifiedDate":"2021-09-06"},{"lineNumber":44,"author":{"gitId":"rish-16"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"rish-16"},"content":"        return builder.toString();","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"rish-16"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"rish-16"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"rish-16"},"content":"     * Returns the parsed LocalDate object using the given string date.","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"rish-16"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"rish-16"},"content":"     * @param date The date to be parsed in String format.","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"rish-16"},"content":"     * @return the LocalDate representation of the string date.","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"rish-16"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"rish-16"},"content":"    public String processDate(String date) {","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"rish-16"},"content":"        date \u003d date.strip();","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"rish-16"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"rish-16"},"content":"        DateTimeFormatter newFormatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\");","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"rish-16"},"content":"        try {","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"rish-16"},"content":"            LocalDateTime datetime \u003d LocalDateTime.parse(date, formatter);","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"rish-16"},"content":"            String finalTime \u003d datetime.format(newFormatter);","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"rish-16"},"content":"            return finalTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"rish-16"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"rish-16"},"content":"            return INVALID_DATE_MESSAGE;","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"rish-16"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"rish-16"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"rish-16"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"rish-16"},"content":"     * Creates a new ToDo task based on the description given.","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"rish-16"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"rish-16"},"content":"     * @param input the user\u0027s input with the description.","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"rish-16"},"content":"     * @param dataStore the list containing the up-to-date task records.","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"rish-16"},"content":"     * @return the final result for the given query.","lastModifiedDate":"2021-08-31"},{"lineNumber":76,"author":{"gitId":"rish-16"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"rish-16"},"content":"    public String createTodo(String input, DataStore dataStore) {","lastModifiedDate":"2021-09-06"},{"lineNumber":78,"author":{"gitId":"rish-16"},"content":"        String query \u003d input.strip().split(\" \", 2)[1].strip();","lastModifiedDate":"2021-10-16"},{"lineNumber":79,"author":{"gitId":"rish-16"},"content":"        ToDo todo \u003d new ToDo(query);","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"rish-16"},"content":"        int prevNumTasks \u003d dataStore.length();","lastModifiedDate":"2021-09-06"},{"lineNumber":81,"author":{"gitId":"rish-16"},"content":"        dataStore.add(todo);","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"rish-16"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-08-31"},{"lineNumber":84,"author":{"gitId":"rish-16"},"content":"        String message \u003d \"Got it. I\u0027ve added this task: \\n\"","lastModifiedDate":"2021-09-06"},{"lineNumber":85,"author":{"gitId":"rish-16"},"content":"                        + \"\\t\" + todo + \"\\n\"","lastModifiedDate":"2021-09-06"},{"lineNumber":86,"author":{"gitId":"rish-16"},"content":"                        + \"Now you have \" + dataStore.length() + \" tasks in the list.\\n\";","lastModifiedDate":"2021-09-06"},{"lineNumber":87,"author":{"gitId":"rish-16"},"content":"        builder.append(message);","lastModifiedDate":"2021-09-06"},{"lineNumber":88,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":89,"author":{"gitId":"rish-16"},"content":"        int newNumTasks \u003d dataStore.length();","lastModifiedDate":"2021-09-06"},{"lineNumber":90,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":91,"author":{"gitId":"rish-16"},"content":"        assert newNumTasks - prevNumTasks \u003d\u003d 1 : \"Data Store task count is not functioning as expected; Task increment not observed.\";","lastModifiedDate":"2021-09-06"},{"lineNumber":92,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":93,"author":{"gitId":"rish-16"},"content":"        return builder.toString();","lastModifiedDate":"2021-08-31"},{"lineNumber":94,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"rish-16"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"rish-16"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"rish-16"},"content":"     * Creates a Deadline task given a description and deadline.","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"rish-16"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"rish-16"},"content":"     * @param input the user\u0027s input with the description and deadline.","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"rish-16"},"content":"     * @param dataStore the list containing the up-to-date task records.","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"rish-16"},"content":"     * @return the final result for the given query.","lastModifiedDate":"2021-08-31"},{"lineNumber":103,"author":{"gitId":"rish-16"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"rish-16"},"content":"    public String createDeadline(String input, DataStore dataStore) {","lastModifiedDate":"2021-09-06"},{"lineNumber":105,"author":{"gitId":"rish-16"},"content":"        input \u003d input.strip().split(\" \", 2)[1].strip();","lastModifiedDate":"2021-10-16"},{"lineNumber":106,"author":{"gitId":"rish-16"},"content":"        String query \u003d input.split(\"/by\")[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"rish-16"},"content":"        String limit \u003d input.split(\"/by\")[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"rish-16"},"content":"        String procLimit \u003d processDate(limit);","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":110,"author":{"gitId":"rish-16"},"content":"        if (procLimit.equals(INVALID_DATE_MESSAGE)) {","lastModifiedDate":"2021-10-16"},{"lineNumber":111,"author":{"gitId":"rish-16"},"content":"            return \"You\u0027ve given me an invalid date.\\nLearn to read a calendar ...\";","lastModifiedDate":"2021-10-16"},{"lineNumber":112,"author":{"gitId":"rish-16"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":113,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":114,"author":{"gitId":"rish-16"},"content":"        int prevNumTasks \u003d dataStore.length();","lastModifiedDate":"2021-09-06"},{"lineNumber":115,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"rish-16"},"content":"        Deadline deadlineTask \u003d new Deadline(query, procLimit);","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"rish-16"},"content":"        dataStore.add(deadlineTask);","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"rish-16"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-08-31"},{"lineNumber":120,"author":{"gitId":"rish-16"},"content":"        String message \u003d \"Awesome! I\u0027ve added this task: \\n\"","lastModifiedDate":"2021-09-13"},{"lineNumber":121,"author":{"gitId":"rish-16"},"content":"                          + \"\\t\" + deadlineTask + \"\\n\"","lastModifiedDate":"2021-09-06"},{"lineNumber":122,"author":{"gitId":"rish-16"},"content":"                          + \"Now you have \" + dataStore.length() + \" tasks in the list.\\n\";","lastModifiedDate":"2021-09-06"},{"lineNumber":123,"author":{"gitId":"rish-16"},"content":"        builder.append(message);","lastModifiedDate":"2021-09-06"},{"lineNumber":124,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":125,"author":{"gitId":"rish-16"},"content":"        int newNumTasks \u003d dataStore.length();","lastModifiedDate":"2021-09-06"},{"lineNumber":126,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":127,"author":{"gitId":"rish-16"},"content":"        assert newNumTasks - prevNumTasks \u003d\u003d 1 : \"Data Store task count is not functioning as expected; Task increment not observed.\";","lastModifiedDate":"2021-09-06"},{"lineNumber":128,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":129,"author":{"gitId":"rish-16"},"content":"        return builder.toString();","lastModifiedDate":"2021-08-31"},{"lineNumber":130,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":132,"author":{"gitId":"rish-16"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":133,"author":{"gitId":"rish-16"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":134,"author":{"gitId":"rish-16"},"content":"     * Creates an Event task given a description and timing.","lastModifiedDate":"2021-08-24"},{"lineNumber":135,"author":{"gitId":"rish-16"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":136,"author":{"gitId":"rish-16"},"content":"     * @param input the user\u0027s input with the description and timing.","lastModifiedDate":"2021-08-24"},{"lineNumber":137,"author":{"gitId":"rish-16"},"content":"     * @param dataStore the list containing the up-to-date task records.","lastModifiedDate":"2021-08-24"},{"lineNumber":138,"author":{"gitId":"rish-16"},"content":"     * @return the final result for the given query.","lastModifiedDate":"2021-08-31"},{"lineNumber":139,"author":{"gitId":"rish-16"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":140,"author":{"gitId":"rish-16"},"content":"    public String createEvent(String input, DataStore dataStore) {","lastModifiedDate":"2021-09-06"},{"lineNumber":141,"author":{"gitId":"rish-16"},"content":"        input \u003d input.strip().split(\" \", 2)[1].strip();","lastModifiedDate":"2021-10-16"},{"lineNumber":142,"author":{"gitId":"rish-16"},"content":"        String query \u003d input.split(\"/at\")[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":143,"author":{"gitId":"rish-16"},"content":"        String datetime \u003d input.split(\"/at\")[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":144,"author":{"gitId":"rish-16"},"content":"        String procDate \u003d processDate(datetime);","lastModifiedDate":"2021-08-24"},{"lineNumber":145,"author":{"gitId":"rish-16"},"content":"        int prevNumTasks \u003d dataStore.length();","lastModifiedDate":"2021-09-06"},{"lineNumber":146,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":147,"author":{"gitId":"rish-16"},"content":"        if (procDate.equals(INVALID_DATE_MESSAGE)) {","lastModifiedDate":"2021-10-16"},{"lineNumber":148,"author":{"gitId":"rish-16"},"content":"            return \"You\u0027ve given me an invalid date.\\nLearn to read a calendar ...\";","lastModifiedDate":"2021-10-16"},{"lineNumber":149,"author":{"gitId":"rish-16"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":150,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":151,"author":{"gitId":"rish-16"},"content":"        Event eventTask \u003d new Event(query, procDate);","lastModifiedDate":"2021-08-24"},{"lineNumber":152,"author":{"gitId":"rish-16"},"content":"        dataStore.add(eventTask);","lastModifiedDate":"2021-08-24"},{"lineNumber":153,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":154,"author":{"gitId":"rish-16"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-08-31"},{"lineNumber":155,"author":{"gitId":"rish-16"},"content":"        String message \u003d \"Got it. I\u0027ve added this task: \\n\"","lastModifiedDate":"2021-09-06"},{"lineNumber":156,"author":{"gitId":"rish-16"},"content":"                + \"\\t\" + eventTask + \"\\n\"","lastModifiedDate":"2021-09-06"},{"lineNumber":157,"author":{"gitId":"rish-16"},"content":"                + \"Now you have \" + dataStore.length() + \" tasks to complete.\\n\";","lastModifiedDate":"2021-09-13"},{"lineNumber":158,"author":{"gitId":"rish-16"},"content":"        builder.append(message);","lastModifiedDate":"2021-09-06"},{"lineNumber":159,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":160,"author":{"gitId":"rish-16"},"content":"        int newNumTasks \u003d dataStore.length();","lastModifiedDate":"2021-09-06"},{"lineNumber":161,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":162,"author":{"gitId":"rish-16"},"content":"        assert newNumTasks - prevNumTasks \u003d\u003d 1 :","lastModifiedDate":"2021-10-16"},{"lineNumber":163,"author":{"gitId":"rish-16"},"content":"                \"Data Store task count is not functioning as expected; Task increment not observed.\";","lastModifiedDate":"2021-10-16"},{"lineNumber":164,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":165,"author":{"gitId":"rish-16"},"content":"        return builder.toString();","lastModifiedDate":"2021-08-31"},{"lineNumber":166,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":167,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":168,"author":{"gitId":"rish-16"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":169,"author":{"gitId":"rish-16"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":170,"author":{"gitId":"rish-16"},"content":"     * Sets a given task to completed status.","lastModifiedDate":"2021-08-24"},{"lineNumber":171,"author":{"gitId":"rish-16"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":172,"author":{"gitId":"rish-16"},"content":"     * @param input the user\u0027s input with the ID of the task in the list.","lastModifiedDate":"2021-08-24"},{"lineNumber":173,"author":{"gitId":"rish-16"},"content":"     * @param dataStore the list containing the up-to-date task records.","lastModifiedDate":"2021-08-24"},{"lineNumber":174,"author":{"gitId":"rish-16"},"content":"     * @return the final result for the given query.","lastModifiedDate":"2021-08-31"},{"lineNumber":175,"author":{"gitId":"rish-16"},"content":"     * @throws BotException throws a bot-specific exception when an error is encountered.","lastModifiedDate":"2021-09-06"},{"lineNumber":176,"author":{"gitId":"rish-16"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":177,"author":{"gitId":"rish-16"},"content":"    public String completeTask(String input, DataStore dataStore) {","lastModifiedDate":"2021-10-16"},{"lineNumber":178,"author":{"gitId":"rish-16"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-08-31"},{"lineNumber":179,"author":{"gitId":"rish-16"},"content":"        String[] breakdown \u003d input.split(\" \");","lastModifiedDate":"2021-10-16"},{"lineNumber":180,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":181,"author":{"gitId":"rish-16"},"content":"        if (breakdown.length \u003c\u003d 1) { // only \"done\" is provided","lastModifiedDate":"2021-10-16"},{"lineNumber":182,"author":{"gitId":"rish-16"},"content":"            builder.append(\"I need an index with that, my friend ...\");","lastModifiedDate":"2021-10-16"},{"lineNumber":183,"author":{"gitId":"rish-16"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":184,"author":{"gitId":"rish-16"},"content":"            int idx \u003d Integer.parseInt(breakdown[1]);","lastModifiedDate":"2021-10-16"},{"lineNumber":185,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":186,"author":{"gitId":"rish-16"},"content":"            if (1 \u003c\u003d idx \u0026\u0026 idx \u003c\u003d dataStore.length()) {","lastModifiedDate":"2021-10-16"},{"lineNumber":187,"author":{"gitId":"rish-16"},"content":"                Task task \u003d dataStore.get(idx-1);","lastModifiedDate":"2021-08-24"},{"lineNumber":188,"author":{"gitId":"rish-16"},"content":"                task.setDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":189,"author":{"gitId":"rish-16"},"content":"                assert task.getStatus().equals(true) : \"Task has not actually been set to true. Task still false;\";","lastModifiedDate":"2021-09-06"},{"lineNumber":190,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":191,"author":{"gitId":"rish-16"},"content":"                String message \u003d \"Nice! I\u0027ve marked this task as done: \\n\" + \"\\t\" + task + \"\\n\";","lastModifiedDate":"2021-09-06"},{"lineNumber":192,"author":{"gitId":"rish-16"},"content":"                builder.append(message);","lastModifiedDate":"2021-09-06"},{"lineNumber":193,"author":{"gitId":"rish-16"},"content":"            } else {","lastModifiedDate":"2021-10-16"},{"lineNumber":194,"author":{"gitId":"rish-16"},"content":"                builder.append(\"You\u0027ve given me an invalid index, I\u0027m afraid.\");","lastModifiedDate":"2021-10-16"},{"lineNumber":195,"author":{"gitId":"rish-16"},"content":"            }","lastModifiedDate":"2021-10-16"},{"lineNumber":196,"author":{"gitId":"rish-16"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":197,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":198,"author":{"gitId":"rish-16"},"content":"        return builder.toString();","lastModifiedDate":"2021-08-31"},{"lineNumber":199,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":200,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":201,"author":{"gitId":"rish-16"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":202,"author":{"gitId":"rish-16"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":203,"author":{"gitId":"rish-16"},"content":"     * Shuts down the bot and stops the program from running.","lastModifiedDate":"2021-08-24"},{"lineNumber":204,"author":{"gitId":"rish-16"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":205,"author":{"gitId":"rish-16"},"content":"     * @param dataStore the list containing the up-to-date task records.","lastModifiedDate":"2021-08-24"},{"lineNumber":206,"author":{"gitId":"rish-16"},"content":"     * @param memBuff the memory buffer for reading and writing files.","lastModifiedDate":"2021-08-24"},{"lineNumber":207,"author":{"gitId":"rish-16"},"content":"     * @return the final result for the given query.","lastModifiedDate":"2021-08-31"},{"lineNumber":208,"author":{"gitId":"rish-16"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":209,"author":{"gitId":"rish-16"},"content":"    public String shutdownBot(DataStore dataStore, MemoryBuffer memBuff) {","lastModifiedDate":"2021-09-06"},{"lineNumber":210,"author":{"gitId":"rish-16"},"content":"        // save current task log","lastModifiedDate":"2021-08-24"},{"lineNumber":211,"author":{"gitId":"rish-16"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-08-31"},{"lineNumber":212,"author":{"gitId":"rish-16"},"content":"        Alert alert \u003d new Alert(AlertType.CONFIRMATION, \"Shutdown JarVIS?\", ButtonType.YES, ButtonType.NO);","lastModifiedDate":"2021-10-16"},{"lineNumber":213,"author":{"gitId":"rish-16"},"content":"        alert.showAndWait();","lastModifiedDate":"2021-10-16"},{"lineNumber":214,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":215,"author":{"gitId":"rish-16"},"content":"        if (alert.getResult() \u003d\u003d ButtonType.YES) {","lastModifiedDate":"2021-10-16"},{"lineNumber":216,"author":{"gitId":"rish-16"},"content":"            builder.append(\"Goodbye! As always, a pleasure working with you.\\n\");","lastModifiedDate":"2021-09-13"},{"lineNumber":217,"author":{"gitId":"rish-16"},"content":"            System.exit(0);","lastModifiedDate":"2021-08-24"},{"lineNumber":218,"author":{"gitId":"rish-16"},"content":"        } else if (alert.getResult() \u003d\u003d ButtonType.NO) {","lastModifiedDate":"2021-10-16"},{"lineNumber":219,"author":{"gitId":"rish-16"},"content":"            builder.append(\"Oh, welcome back, by the way.\");","lastModifiedDate":"2021-10-16"},{"lineNumber":220,"author":{"gitId":"rish-16"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":221,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":222,"author":{"gitId":"rish-16"},"content":"        return builder.toString();","lastModifiedDate":"2021-08-31"},{"lineNumber":223,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":224,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":225,"author":{"gitId":"rish-16"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":226,"author":{"gitId":"rish-16"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":227,"author":{"gitId":"rish-16"},"content":"     * Deletes the current task from working memory.","lastModifiedDate":"2021-08-24"},{"lineNumber":228,"author":{"gitId":"rish-16"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":229,"author":{"gitId":"rish-16"},"content":"     * @param input the user\u0027s input with the task ID to be deleted.","lastModifiedDate":"2021-08-24"},{"lineNumber":230,"author":{"gitId":"rish-16"},"content":"     * @param dataStore the list containing the up-to-date task records.","lastModifiedDate":"2021-08-24"},{"lineNumber":231,"author":{"gitId":"rish-16"},"content":"     * @return the final result for the given query.","lastModifiedDate":"2021-08-31"},{"lineNumber":232,"author":{"gitId":"rish-16"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":233,"author":{"gitId":"rish-16"},"content":"    public String deleteTask(String input, DataStore dataStore) {","lastModifiedDate":"2021-09-06"},{"lineNumber":234,"author":{"gitId":"rish-16"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-10-16"},{"lineNumber":235,"author":{"gitId":"rish-16"},"content":"        String[] breakdown \u003d input.split(\" \");","lastModifiedDate":"2021-10-16"},{"lineNumber":236,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":237,"author":{"gitId":"rish-16"},"content":"        if (breakdown.length \u003c\u003d 1) {","lastModifiedDate":"2021-10-16"},{"lineNumber":238,"author":{"gitId":"rish-16"},"content":"            builder.append(\"I need an index with that, my friend ...\");","lastModifiedDate":"2021-10-16"},{"lineNumber":239,"author":{"gitId":"rish-16"},"content":"        } else {","lastModifiedDate":"2021-10-16"},{"lineNumber":240,"author":{"gitId":"rish-16"},"content":"            int idx \u003d Integer.parseInt(breakdown[1]);","lastModifiedDate":"2021-10-16"},{"lineNumber":241,"author":{"gitId":"rish-16"},"content":"            try {","lastModifiedDate":"2021-10-16"},{"lineNumber":242,"author":{"gitId":"rish-16"},"content":"                Task task \u003d dataStore.get(idx - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":243,"author":{"gitId":"rish-16"},"content":"                int prevNumTasks \u003d dataStore.length();","lastModifiedDate":"2021-09-06"},{"lineNumber":244,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":245,"author":{"gitId":"rish-16"},"content":"                // check if index is within appropriate range","lastModifiedDate":"2021-10-16"},{"lineNumber":246,"author":{"gitId":"rish-16"},"content":"                if (1 \u003c\u003d idx \u0026\u0026 idx \u003c\u003d dataStore.length()) {","lastModifiedDate":"2021-10-16"},{"lineNumber":247,"author":{"gitId":"rish-16"},"content":"                    String message \u003d \"Understood. I\u0027ve removed, \\n\" + \"\\t\" + task.toString() + \"\\n\";","lastModifiedDate":"2021-09-13"},{"lineNumber":248,"author":{"gitId":"rish-16"},"content":"                    builder.append(message);","lastModifiedDate":"2021-09-06"},{"lineNumber":249,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":250,"author":{"gitId":"rish-16"},"content":"                    dataStore.remove(idx - 1); // actual deletion","lastModifiedDate":"2021-08-24"},{"lineNumber":251,"author":{"gitId":"rish-16"},"content":"                    int newNumTasks \u003d dataStore.length();","lastModifiedDate":"2021-09-06"},{"lineNumber":252,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":253,"author":{"gitId":"rish-16"},"content":"                    assert prevNumTasks - newNumTasks \u003d\u003d 1 :","lastModifiedDate":"2021-10-16"},{"lineNumber":254,"author":{"gitId":"rish-16"},"content":"                            \"Data Store task count is not functioning as expected; Task increment not observed.\";","lastModifiedDate":"2021-10-16"},{"lineNumber":255,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":256,"author":{"gitId":"rish-16"},"content":"                    builder.append(String.format(\"You now have %d tasks to totally ignore.\\n\", dataStore.length()));","lastModifiedDate":"2021-09-13"},{"lineNumber":257,"author":{"gitId":"rish-16"},"content":"                } else {","lastModifiedDate":"2021-10-16"},{"lineNumber":258,"author":{"gitId":"rish-16"},"content":"                    builder.append(\"You\u0027ve given me an invalid index, I\u0027m afraid.\");","lastModifiedDate":"2021-10-16"},{"lineNumber":259,"author":{"gitId":"rish-16"},"content":"                }","lastModifiedDate":"2021-10-16"},{"lineNumber":260,"author":{"gitId":"rish-16"},"content":"            } catch (Exception e) {","lastModifiedDate":"2021-10-16"},{"lineNumber":261,"author":{"gitId":"rish-16"},"content":"                builder.append(\"You\u0027ve given me an invalid index, I\u0027m afraid.\");","lastModifiedDate":"2021-10-16"},{"lineNumber":262,"author":{"gitId":"rish-16"},"content":"            }","lastModifiedDate":"2021-10-16"},{"lineNumber":263,"author":{"gitId":"rish-16"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":264,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":265,"author":{"gitId":"rish-16"},"content":"        return builder.toString();","lastModifiedDate":"2021-08-31"},{"lineNumber":266,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":267,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":268,"author":{"gitId":"rish-16"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":269,"author":{"gitId":"rish-16"},"content":"     * Returns the closest matching results from list of tasks.","lastModifiedDate":"2021-08-31"},{"lineNumber":270,"author":{"gitId":"rish-16"},"content":"     * @param input the user query to be found.","lastModifiedDate":"2021-08-31"},{"lineNumber":271,"author":{"gitId":"rish-16"},"content":"     * @param dataStore the list containing the up-to-date task records.","lastModifiedDate":"2021-08-31"},{"lineNumber":272,"author":{"gitId":"rish-16"},"content":"     * @return the final result for the given query.","lastModifiedDate":"2021-08-31"},{"lineNumber":273,"author":{"gitId":"rish-16"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":274,"author":{"gitId":"rish-16"},"content":"    public String find(String input, DataStore dataStore) {","lastModifiedDate":"2021-09-06"},{"lineNumber":275,"author":{"gitId":"rish-16"},"content":"        String query \u003d input.split(\" \")[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":276,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":277,"author":{"gitId":"rish-16"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-08-31"},{"lineNumber":278,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":279,"author":{"gitId":"rish-16"},"content":"        builder.append(\"My search of the Oracle Cloud reveals these records: \\n\");","lastModifiedDate":"2021-09-13"},{"lineNumber":280,"author":{"gitId":"rish-16"},"content":"        for (int i \u003d 0; i \u003c dataStore.length(); i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":281,"author":{"gitId":"rish-16"},"content":"            Task record \u003d dataStore.get(i);","lastModifiedDate":"2021-08-24"},{"lineNumber":282,"author":{"gitId":"rish-16"},"content":"            String message \u003d record.toString();","lastModifiedDate":"2021-08-24"},{"lineNumber":283,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":284,"author":{"gitId":"rish-16"},"content":"            if (record.getDescription().contains(query)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":285,"author":{"gitId":"rish-16"},"content":"                String text \u003d (i + 1) + \". \" + message + \"\\n\";","lastModifiedDate":"2021-09-06"},{"lineNumber":286,"author":{"gitId":"rish-16"},"content":"                builder.append(text);","lastModifiedDate":"2021-09-06"},{"lineNumber":287,"author":{"gitId":"rish-16"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":288,"author":{"gitId":"rish-16"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":289,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":290,"author":{"gitId":"rish-16"},"content":"        return builder.toString();","lastModifiedDate":"2021-08-31"},{"lineNumber":291,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":292,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":293,"author":{"gitId":"rish-16"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":294,"author":{"gitId":"rish-16"},"content":"     * Returns a guide/manual for the user that presents all available commands","lastModifiedDate":"2021-09-06"},{"lineNumber":295,"author":{"gitId":"rish-16"},"content":"     * that can be used in JarVIS.","lastModifiedDate":"2021-09-06"},{"lineNumber":296,"author":{"gitId":"rish-16"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":297,"author":{"gitId":"rish-16"},"content":"     * @return string that represents the user manual and available commands for JarVIS.","lastModifiedDate":"2021-09-06"},{"lineNumber":298,"author":{"gitId":"rish-16"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":299,"author":{"gitId":"rish-16"},"content":"    public String manual() {","lastModifiedDate":"2021-09-06"},{"lineNumber":300,"author":{"gitId":"rish-16"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-09-06"},{"lineNumber":301,"author":{"gitId":"rish-16"},"content":"        String message \u003d \"Hello! Welcome to the JarVIS User Manual.\\n\" + \"Available commands:\\n\\n\";","lastModifiedDate":"2021-09-06"},{"lineNumber":302,"author":{"gitId":"rish-16"},"content":"        builder.append(message);","lastModifiedDate":"2021-09-06"},{"lineNumber":303,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":304,"author":{"gitId":"rish-16"},"content":"        String[] commands \u003d new String[]{","lastModifiedDate":"2021-09-06"},{"lineNumber":305,"author":{"gitId":"rish-16"},"content":"                \"list\",","lastModifiedDate":"2021-09-06"},{"lineNumber":306,"author":{"gitId":"rish-16"},"content":"                \"todo \u003ctask_name\u003e\",","lastModifiedDate":"2021-09-06"},{"lineNumber":307,"author":{"gitId":"rish-16"},"content":"                \"deadline \u003ctask_name\u003e /by yyyy-MM-dd HH:mm\",","lastModifiedDate":"2021-10-16"},{"lineNumber":308,"author":{"gitId":"rish-16"},"content":"                \"event  \u003ctask_name\u003e /at yyyy-MM-dd HH:mm\",","lastModifiedDate":"2021-10-16"},{"lineNumber":309,"author":{"gitId":"rish-16"},"content":"                \"delete \u003ctask_idx\u003e\",","lastModifiedDate":"2021-09-06"},{"lineNumber":310,"author":{"gitId":"rish-16"},"content":"                \"done \u003ctask_idx\u003e\",","lastModifiedDate":"2021-09-06"},{"lineNumber":311,"author":{"gitId":"rish-16"},"content":"                \"find \u003ckeyword\u003e\"","lastModifiedDate":"2021-09-06"},{"lineNumber":312,"author":{"gitId":"rish-16"},"content":"        };","lastModifiedDate":"2021-09-06"},{"lineNumber":313,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":314,"author":{"gitId":"rish-16"},"content":"        String[] cmdInfo \u003d new String[]{","lastModifiedDate":"2021-09-06"},{"lineNumber":315,"author":{"gitId":"rish-16"},"content":"                \"lists all items in the memory\",","lastModifiedDate":"2021-09-06"},{"lineNumber":316,"author":{"gitId":"rish-16"},"content":"                \"creates a ToDo task with no deadline\",","lastModifiedDate":"2021-09-06"},{"lineNumber":317,"author":{"gitId":"rish-16"},"content":"                \"creates a Deadline task with a timestamp deadline\",","lastModifiedDate":"2021-09-06"},{"lineNumber":318,"author":{"gitId":"rish-16"},"content":"                \"creates a Event task taking place at a timestamp\",","lastModifiedDate":"2021-09-06"},{"lineNumber":319,"author":{"gitId":"rish-16"},"content":"                \"deletes the task found at the given index\",","lastModifiedDate":"2021-09-06"},{"lineNumber":320,"author":{"gitId":"rish-16"},"content":"                \"sets the specified task\u0027s status to done\",","lastModifiedDate":"2021-09-06"},{"lineNumber":321,"author":{"gitId":"rish-16"},"content":"                \"finds the tasks containing a given keyword\"","lastModifiedDate":"2021-09-06"},{"lineNumber":322,"author":{"gitId":"rish-16"},"content":"        };","lastModifiedDate":"2021-09-06"},{"lineNumber":323,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":324,"author":{"gitId":"rish-16"},"content":"        for (int i \u003d 0; i \u003c commands.length; i++) {","lastModifiedDate":"2021-09-06"},{"lineNumber":325,"author":{"gitId":"rish-16"},"content":"            String cmd \u003d commands[i];","lastModifiedDate":"2021-09-06"},{"lineNumber":326,"author":{"gitId":"rish-16"},"content":"            String info \u003d cmdInfo[i];","lastModifiedDate":"2021-09-06"},{"lineNumber":327,"author":{"gitId":"rish-16"},"content":"            String desc \u003d String.format(\"%d. %s\\n\\t%s\\n\\n\", i + 1, cmd, info);","lastModifiedDate":"2021-09-06"},{"lineNumber":328,"author":{"gitId":"rish-16"},"content":"            builder.append(desc);","lastModifiedDate":"2021-09-06"},{"lineNumber":329,"author":{"gitId":"rish-16"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":330,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":331,"author":{"gitId":"rish-16"},"content":"        return builder.toString();","lastModifiedDate":"2021-09-06"},{"lineNumber":332,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":333,"author":{"gitId":"rish-16"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"rish-16":333}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rish-16"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"rish-16"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"rish-16"},"content":" * This class represents the Parser object that breaks queries","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"rish-16"},"content":" * into tokens before deciding what to compute.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"rish-16"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"rish-16"},"content":" * @author Rishabh Anand","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"rish-16"},"content":" * @version CS2103 AY21/22 Semester 1","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"rish-16"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"rish-16"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"rish-16"},"content":"package duke.parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"rish-16"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"rish-16"},"content":"import duke.BotException;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"rish-16"},"content":"import duke.datastore.DataStore;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"rish-16"},"content":"import duke.membuffer.MemoryBuffer;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"rish-16"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"rish-16"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"rish-16"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"rish-16"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"rish-16"},"content":"public class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"rish-16"},"content":"    private static final String TODO_NO_DESC \u003d \"I can\u0027t really help you if you don\u0027t describe what you\u0027re trying to do here.\";","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"rish-16"},"content":"    private static final String DEADLINE_NO_INFO \u003d \"I need a proper description and a proper time for this deadline. Look at my manual?\";","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"rish-16"},"content":"    private static final String EVENT_NO_INFO \u003d \"I need a proper description and a proper time for this event. Look at my manual?\";","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"rish-16"},"content":"    private final Brain brain;","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"rish-16"},"content":"    public Parser() {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"rish-16"},"content":"        brain \u003d new Brain();","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"rish-16"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"rish-16"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"rish-16"},"content":"     * Analyses the command and decides what function to perform.","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"rish-16"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"rish-16"},"content":"     * @param command the user input.","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"rish-16"},"content":"     * @param dataStore the list containing the up-to-date task records.","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"rish-16"},"content":"     * @param memBuff the memory buffer that reads and writes files","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"rish-16"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"rish-16"},"content":"    public String execute(String command, DataStore dataStore, MemoryBuffer memBuff) {","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"rish-16"},"content":"        String result \u003d errorHandle(command);","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"rish-16"},"content":"        if (result.length() \u003d\u003d 0) {","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"rish-16"},"content":"            if (command.equals(\"JarVIS?\")) {","lastModifiedDate":"2021-09-06"},{"lineNumber":46,"author":{"gitId":"rish-16"},"content":"                result \u003d brain.manual();","lastModifiedDate":"2021-09-06"},{"lineNumber":47,"author":{"gitId":"rish-16"},"content":"            } else if (command.equals(\"list\")) {","lastModifiedDate":"2021-09-06"},{"lineNumber":48,"author":{"gitId":"rish-16"},"content":"                result \u003d brain.listItems(dataStore);","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"rish-16"},"content":"            } else if (command.contains(\"todo\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"rish-16"},"content":"                result \u003d brain.createTodo(command, dataStore);","lastModifiedDate":"2021-09-06"},{"lineNumber":51,"author":{"gitId":"rish-16"},"content":"            } else if (command.contains(\"deadline\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"rish-16"},"content":"                result \u003d brain.createDeadline(command, dataStore);","lastModifiedDate":"2021-09-06"},{"lineNumber":53,"author":{"gitId":"rish-16"},"content":"            } else if (command.contains(\"event\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"rish-16"},"content":"                result \u003d brain.createEvent(command, dataStore);","lastModifiedDate":"2021-09-06"},{"lineNumber":55,"author":{"gitId":"rish-16"},"content":"            } else if (command.contains(\"done\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"rish-16"},"content":"                result \u003d brain.completeTask(command, dataStore);","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"rish-16"},"content":"            } else if (command.contains(\"delete\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"rish-16"},"content":"                result \u003d brain.deleteTask(command, dataStore);","lastModifiedDate":"2021-09-06"},{"lineNumber":59,"author":{"gitId":"rish-16"},"content":"            } else if (command.contains(\"find\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"rish-16"},"content":"                result \u003d brain.find(command, dataStore);","lastModifiedDate":"2021-09-06"},{"lineNumber":61,"author":{"gitId":"rish-16"},"content":"            } else if (command.equals(\"bye\")) {","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"rish-16"},"content":"                result \u003d brain.shutdownBot(dataStore, memBuff);","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"rish-16"},"content":"            } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"rish-16"},"content":"                result \u003d \"I don\u0027t seem to understand. Come again?\";","lastModifiedDate":"2021-09-13"},{"lineNumber":65,"author":{"gitId":"rish-16"},"content":"            }","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"rish-16"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":68,"author":{"gitId":"rish-16"},"content":"        return result;","lastModifiedDate":"2021-08-31"},{"lineNumber":69,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"rish-16"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"rish-16"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"rish-16"},"content":"     * Handles all invalid commands given by the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"rish-16"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"rish-16"},"content":"     * @param input the user input.","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"rish-16"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"rish-16"},"content":"    public String errorHandle(String input) {","lastModifiedDate":"2021-10-16"},{"lineNumber":78,"author":{"gitId":"rish-16"},"content":"        input \u003d input.strip(); // remove whitespace","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"rish-16"},"content":"        String[] brokenInput \u003d input.split(\" \");","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"rish-16"},"content":"        if (input.equals(\"todo\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"rish-16"},"content":"            return TODO_NO_DESC;","lastModifiedDate":"2021-10-16"},{"lineNumber":83,"author":{"gitId":"rish-16"},"content":"        } else if (input.equals(\"deadline\") || input.contains(\"deadline\") \u0026\u0026 !input.contains(\"/by\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"rish-16"},"content":"            return DEADLINE_NO_INFO;","lastModifiedDate":"2021-10-16"},{"lineNumber":85,"author":{"gitId":"rish-16"},"content":"        } else if (input.equals(\"event\") || input.contains(\"event\") \u0026\u0026 !input.contains(\"/at\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"rish-16"},"content":"            return EVENT_NO_INFO;","lastModifiedDate":"2021-10-16"},{"lineNumber":87,"author":{"gitId":"rish-16"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"rish-16"},"content":"        ArrayList\u003cString\u003e prunedInput \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-06"},{"lineNumber":90,"author":{"gitId":"rish-16"},"content":"        for (String str : brokenInput) {","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"rish-16"},"content":"            if (str.strip().length() \u003e 0) {","lastModifiedDate":"2021-10-16"},{"lineNumber":92,"author":{"gitId":"rish-16"},"content":"                prunedInput.add(str);","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"rish-16"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"rish-16"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"rish-16"},"content":"        System.out.println(prunedInput);","lastModifiedDate":"2021-10-16"},{"lineNumber":97,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":98,"author":{"gitId":"rish-16"},"content":"        // advanced syntax errors","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"rish-16"},"content":"        if (prunedInput.get(0).equals(\"deadline\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"rish-16"},"content":"            // deadline with no description","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"rish-16"},"content":"            if (prunedInput.get(1).equals(\"/by\")) { // eg: deadline /by Mon 2PM","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"rish-16"},"content":"                return DEADLINE_NO_INFO;","lastModifiedDate":"2021-10-16"},{"lineNumber":103,"author":{"gitId":"rish-16"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"rish-16"},"content":"            // deadline with no date limit","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"rish-16"},"content":"            int byIndex \u003d prunedInput.indexOf(\"/by\");","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"rish-16"},"content":"            if (byIndex \u003d\u003d prunedInput.size() - 1) { // eg: deadline write program /by","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"rish-16"},"content":"                return DEADLINE_NO_INFO;","lastModifiedDate":"2021-10-16"},{"lineNumber":109,"author":{"gitId":"rish-16"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"rish-16"},"content":"        } else if (prunedInput.get(0).equals(\"event\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"rish-16"},"content":"            // event with no description","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"rish-16"},"content":"            if (prunedInput.get(1).equals(\"/at\")) { // eg: event /at Mon 2-4PM","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"rish-16"},"content":"                return EVENT_NO_INFO;","lastModifiedDate":"2021-10-16"},{"lineNumber":114,"author":{"gitId":"rish-16"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"rish-16"},"content":"            // event with no date","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"rish-16"},"content":"            int byIndex \u003d prunedInput.indexOf(\"/at\");","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"rish-16"},"content":"            if (byIndex \u003d\u003d prunedInput.size() - 1) { // eg: event visit mom /at","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"rish-16"},"content":"                return EVENT_NO_INFO;","lastModifiedDate":"2021-10-16"},{"lineNumber":120,"author":{"gitId":"rish-16"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"rish-16"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":123,"author":{"gitId":"rish-16"},"content":"        return \"\";","lastModifiedDate":"2021-10-16"},{"lineNumber":124,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":125,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"rish-16"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"rish-16"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"rish-16"},"content":"     * Parses the commands from the flat file and commits it to working memory.","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"rish-16"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"rish-16"},"content":"     * @param store a list of per-line strings from the flat file.","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"rish-16"},"content":"     * @return an array list of tasks that were stored originally.","lastModifiedDate":"2021-09-06"},{"lineNumber":132,"author":{"gitId":"rish-16"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":133,"author":{"gitId":"rish-16"},"content":"    public ArrayList\u003cTask\u003e parseFromFile(ArrayList\u003cString\u003e store) {","lastModifiedDate":"2021-08-24"},{"lineNumber":134,"author":{"gitId":"rish-16"},"content":"        ArrayList\u003cTask\u003e dataStore \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-06"},{"lineNumber":135,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":136,"author":{"gitId":"rish-16"},"content":"        for (String record : store) {","lastModifiedDate":"2021-09-06"},{"lineNumber":137,"author":{"gitId":"rish-16"},"content":"            String[] splitRecord \u003d record.split(\";\");","lastModifiedDate":"2021-08-24"},{"lineNumber":138,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":139,"author":{"gitId":"rish-16"},"content":"            for (int j \u003d 0; j \u003c splitRecord.length; j++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":140,"author":{"gitId":"rish-16"},"content":"                splitRecord[j] \u003d splitRecord[j].strip();","lastModifiedDate":"2021-08-24"},{"lineNumber":141,"author":{"gitId":"rish-16"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":142,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":143,"author":{"gitId":"rish-16"},"content":"            if (splitRecord[0].equals(\"T\")) {","lastModifiedDate":"2021-09-06"},{"lineNumber":144,"author":{"gitId":"rish-16"},"content":"                ToDo todoTask \u003d new ToDo(splitRecord[2]);","lastModifiedDate":"2021-08-24"},{"lineNumber":145,"author":{"gitId":"rish-16"},"content":"                if (splitRecord[1].equals(\"1\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":146,"author":{"gitId":"rish-16"},"content":"                    todoTask.setDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":147,"author":{"gitId":"rish-16"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":148,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":149,"author":{"gitId":"rish-16"},"content":"                // add to task data store","lastModifiedDate":"2021-08-24"},{"lineNumber":150,"author":{"gitId":"rish-16"},"content":"                dataStore.add(todoTask);","lastModifiedDate":"2021-08-24"},{"lineNumber":151,"author":{"gitId":"rish-16"},"content":"            } else if (splitRecord[0].equals(\"D\")) {","lastModifiedDate":"2021-09-06"},{"lineNumber":152,"author":{"gitId":"rish-16"},"content":"                Deadline deadlineTask \u003d new Deadline(splitRecord[2], splitRecord[3]);","lastModifiedDate":"2021-08-24"},{"lineNumber":153,"author":{"gitId":"rish-16"},"content":"                if (splitRecord[1].equals(\"1\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":154,"author":{"gitId":"rish-16"},"content":"                    deadlineTask.setDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":155,"author":{"gitId":"rish-16"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":156,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":157,"author":{"gitId":"rish-16"},"content":"                // add to task data store","lastModifiedDate":"2021-08-24"},{"lineNumber":158,"author":{"gitId":"rish-16"},"content":"                dataStore.add(deadlineTask);","lastModifiedDate":"2021-08-24"},{"lineNumber":159,"author":{"gitId":"rish-16"},"content":"            } else if (splitRecord[0].equals(\"E\")) {","lastModifiedDate":"2021-09-06"},{"lineNumber":160,"author":{"gitId":"rish-16"},"content":"                Event eventTask \u003d new Event(splitRecord[2], splitRecord[3]);","lastModifiedDate":"2021-08-24"},{"lineNumber":161,"author":{"gitId":"rish-16"},"content":"                if (splitRecord[1].equals(\"1\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":162,"author":{"gitId":"rish-16"},"content":"                    eventTask.setDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":163,"author":{"gitId":"rish-16"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":164,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":165,"author":{"gitId":"rish-16"},"content":"                // add to task data store","lastModifiedDate":"2021-08-24"},{"lineNumber":166,"author":{"gitId":"rish-16"},"content":"                dataStore.add(eventTask);","lastModifiedDate":"2021-08-24"},{"lineNumber":167,"author":{"gitId":"rish-16"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":168,"author":{"gitId":"rish-16"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":169,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":170,"author":{"gitId":"rish-16"},"content":"        return dataStore;","lastModifiedDate":"2021-08-24"},{"lineNumber":171,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":172,"author":{"gitId":"rish-16"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"rish-16":172}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rish-16"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"rish-16"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"rish-16"},"content":" * ","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"rish-16"},"content":" * This represents a Deadline task with a time limit.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"rish-16"},"content":" * ","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"rish-16"},"content":" * @author Rishabh Anand","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"rish-16"},"content":" * @version CS2103, AY21/22 Semester 1","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"rish-16"},"content":" * ","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"rish-16"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"rish-16"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"rish-16"},"content":"    protected String deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"rish-16"},"content":"    public Deadline(String desc, String deadline) {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"rish-16"},"content":"        super(desc);","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"rish-16"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"rish-16"},"content":"    // returns the string representation of the Deadline","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"rish-16"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"rish-16"},"content":"    public String toString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"rish-16"},"content":"        return \"[D]\" ","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"rish-16"},"content":"                + super.toString()","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"rish-16"},"content":"                + \" (by: \"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"rish-16"},"content":"                + this.deadline","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"rish-16"},"content":"                + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"rish-16"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"rish-16"},"content":"    public String toTextRepresentation() {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"rish-16"},"content":"        String binaryStatus \u003d this.isDone ? \"1\" : \"0\";","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"rish-16"},"content":"        return String.format(\"D; %s; %s; %s\", binaryStatus, this.description.strip(), this.deadline.strip());","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"rish-16"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"rish-16":33}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rish-16"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"rish-16"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"rish-16"},"content":" * ","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"rish-16"},"content":" * This represents an Event task with a time duration.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"rish-16"},"content":" * ","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"rish-16"},"content":" * @author Rishabh Anand","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"rish-16"},"content":" * @version CS2103, AY21/22 Semester 1","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"rish-16"},"content":" * ","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"rish-16"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"rish-16"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"rish-16"},"content":"    protected String timing;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"rish-16"},"content":"    public Event(String desc, String timing) {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"rish-16"},"content":"        super(desc);","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"rish-16"},"content":"        this.timing \u003d timing;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"rish-16"},"content":"    // returns string representation of the Event","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"rish-16"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"rish-16"},"content":"    public String toString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"rish-16"},"content":"        return \"[E]\" ","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"rish-16"},"content":"                + super.toString()","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"rish-16"},"content":"                + \" (at: \"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"rish-16"},"content":"                + this.timing","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"rish-16"},"content":"                + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"rish-16"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"rish-16"},"content":"    public String toTextRepresentation() {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"rish-16"},"content":"        String binaryStatus \u003d this.isDone ? \"1\" : \"0\";","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"rish-16"},"content":"        return String.format(\"E; %s; %s; %s\", binaryStatus, this.description.strip(), this.timing.strip());","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"rish-16"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"rish-16":34}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rish-16"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"rish-16"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"rish-16"},"content":" * This represents a Task object for the list.","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"rish-16"},"content":" * ","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"rish-16"},"content":" * @author Rishabh Anand","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"rish-16"},"content":" * @version CS2103, AY21/222 Semester 1","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"rish-16"},"content":" * ","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"rish-16"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"rish-16"},"content":"abstract public class Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"rish-16"},"content":"    protected String description;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"rish-16"},"content":"    protected Boolean isDone;","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"rish-16"},"content":"    public Task(String desc) {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"rish-16"},"content":"        this.description \u003d desc;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"rish-16"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"rish-16"},"content":"    // Sets the task as completed","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"rish-16"},"content":"    public void setDone() {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"rish-16"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"rish-16"},"content":"    // returns the task status","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"rish-16"},"content":"    public Boolean getStatus() {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"rish-16"},"content":"        return this.isDone;","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"rish-16"},"content":"    // returns the string representation of the status","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"rish-16"},"content":"    public String getStatusString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"rish-16"},"content":"        return this.isDone ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"rish-16"},"content":"    // returns the textual description of the task","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"rish-16"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"rish-16"},"content":"        return this.description;","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"rish-16"},"content":"    // returns the string representation of the Task","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"rish-16"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"rish-16"},"content":"    public String toString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"rish-16"},"content":"        return this.getStatusString() + \" \" + this.getDescription();","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"rish-16"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"rish-16"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"rish-16"},"content":"     * Abstract method to return the chatbot list","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"rish-16"},"content":"     * representation of a task.","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"rish-16"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"rish-16"},"content":"     * @return CLI-friendly list representation of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"rish-16"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"rish-16"},"content":"    abstract public String toTextRepresentation();","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"rish-16"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"rish-16":52}},{"path":"src/main/java/duke/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rish-16"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"rish-16"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"rish-16"},"content":" * ","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"rish-16"},"content":" * This represents a ToDo task without a time limit.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"rish-16"},"content":" * ","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"rish-16"},"content":" * @author Rishabh Anand","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"rish-16"},"content":" * @version CS2103, AY21/22 Semester 1","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"rish-16"},"content":" * ","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"rish-16"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"rish-16"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"rish-16"},"content":"    public ToDo(String desc) {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"rish-16"},"content":"        super(desc);","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"rish-16"},"content":"   ","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"rish-16"},"content":"    // returns the string representation of the ToDo task in the list","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"rish-16"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"rish-16"},"content":"    public String toString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"rish-16"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"rish-16"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"rish-16"},"content":"    public String toTextRepresentation() {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"rish-16"},"content":"        String binaryStatus \u003d this.isDone ? \"1\" : \"0\";","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"rish-16"},"content":"        return String.format(\"T; %s; %s\", binaryStatus, this.description.strip());","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"rish-16"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"rish-16":26}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rish-16"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"rish-16"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"rish-16"},"content":" * This class represents the User Interface object that","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"rish-16"},"content":" * serves as the primary point of communication with the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"rish-16"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"rish-16"},"content":" * @author Rishabh Anand","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"rish-16"},"content":" * @version CS2103 AY21/22 Semester 1","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"rish-16"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"rish-16"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"rish-16"},"content":"package duke.ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"rish-16"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"rish-16"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"rish-16"},"content":"public class Ui {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"rish-16"},"content":"    public Ui() {}","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"rish-16"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"rish-16"},"content":"     * Prints out the welcome greeting upon successful summoning.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"rish-16"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"rish-16"},"content":"    public void greet() {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"rish-16"},"content":"        System.out.println(\"Hello, I\u0027m  JARVIS\");","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"rish-16"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"rish-16"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"rish-16"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"rish-16"},"content":"     * Returns the user\u0027s input without any preprocessing.","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"rish-16"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"rish-16"},"content":"     * @return the raw string representation of the user\u0027s input to console.","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"rish-16"},"content":"     * @throws IOException thrown when there\u0027s a problem reading a file.","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"rish-16"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"rish-16"},"content":"    public String getUserInput() throws IOException {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"rish-16"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"rish-16"},"content":"        System.out.println(\"\");","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"rish-16"},"content":"        String input \u003d sc.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"rish-16"},"content":"        return input;","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"rish-16"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"rish-16"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"rish-16"},"content":"     * Prints out messages from the chatbot to console.","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"rish-16"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"rish-16"},"content":"     * @param msg the exact message that needs to be logged.","lastModifiedDate":"2021-09-06"},{"lineNumber":47,"author":{"gitId":"rish-16"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"rish-16"},"content":"    public void say(String msg) {","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"rish-16"},"content":"        System.out.println(msg);","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"rish-16"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"rish-16":51}},{"path":"src/main/java/duke/ui/uiController/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rish-16"},"content":"package duke.ui.uiController;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"rish-16"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"rish-16"},"content":"import java.util.Collections;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"rish-16"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"rish-16"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"rish-16"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"rish-16"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"rish-16"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"rish-16"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"rish-16"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"rish-16"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"rish-16"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"rish-16"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"rish-16"},"content":"import javafx.scene.text.FontWeight;","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"rish-16"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"rish-16"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"rish-16"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"rish-16"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2021-09-13"},{"lineNumber":21,"author":{"gitId":"rish-16"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"rish-16"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"rish-16"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"rish-16"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"rish-16"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"rish-16"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"rish-16"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"rish-16"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"rish-16"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"rish-16"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"rish-16"},"content":"    private Label dialog;","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"rish-16"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"rish-16"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"rish-16"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"rish-16"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"rish-16"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"rish-16"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"rish-16"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"rish-16"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"rish-16"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"rish-16"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"rish-16"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"rish-16"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"rish-16"},"content":"        dialog.setPadding(new Insets(10, 10, 10, 10));","lastModifiedDate":"2021-09-13"},{"lineNumber":48,"author":{"gitId":"rish-16"},"content":"        dialog.setStyle(\"-fx-background-color: #c8d6e5;\");","lastModifiedDate":"2021-09-13"},{"lineNumber":49,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":50,"author":{"gitId":"rish-16"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"rish-16"},"content":"        final Circle clip \u003d new Circle(27.5, 27.5, 27.5);","lastModifiedDate":"2021-09-13"},{"lineNumber":52,"author":{"gitId":"rish-16"},"content":"        displayPicture.setClip(clip);","lastModifiedDate":"2021-09-13"},{"lineNumber":53,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"rish-16"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"rish-16"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"rish-16"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"rish-16"},"content":"    private void flip() {","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"rish-16"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"rish-16"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"rish-16"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"rish-16"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"rish-16"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"rish-16"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"rish-16"},"content":"        db.dialog.setTextFill(Color.rgb(19, 15, 64));","lastModifiedDate":"2021-09-13"},{"lineNumber":68,"author":{"gitId":"rish-16"},"content":"        db.dialog.setFont(Font.font(\"Verdana\", FontWeight.NORMAL, 13));","lastModifiedDate":"2021-09-13"},{"lineNumber":69,"author":{"gitId":"rish-16"},"content":"        db.dialog.setBackground(new Background(new BackgroundFill(Color.LIGHTSKYBLUE, new CornerRadii(7), Insets.EMPTY)));","lastModifiedDate":"2021-09-13"},{"lineNumber":70,"author":{"gitId":"rish-16"},"content":"        db.setSpacing(10.0);","lastModifiedDate":"2021-09-13"},{"lineNumber":71,"author":{"gitId":"rish-16"},"content":"        db.flip();","lastModifiedDate":"2021-08-31"},{"lineNumber":72,"author":{"gitId":"rish-16"},"content":"        return db;","lastModifiedDate":"2021-08-31"},{"lineNumber":73,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":74,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":75,"author":{"gitId":"rish-16"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-13"},{"lineNumber":76,"author":{"gitId":"rish-16"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-13"},{"lineNumber":77,"author":{"gitId":"rish-16"},"content":"        db.dialog.setTextFill(Color.rgb(83, 92, 104));","lastModifiedDate":"2021-09-13"},{"lineNumber":78,"author":{"gitId":"rish-16"},"content":"        db.dialog.setFont(Font.font(\"Verdana\", FontWeight.BOLD, 14));","lastModifiedDate":"2021-09-27"},{"lineNumber":79,"author":{"gitId":"rish-16"},"content":"        db.dialog.setBackground(new Background(new BackgroundFill(Color.LIGHTSKYBLUE, new CornerRadii(7), Insets.EMPTY)));","lastModifiedDate":"2021-09-13"},{"lineNumber":80,"author":{"gitId":"rish-16"},"content":"        db.setSpacing(10.0);","lastModifiedDate":"2021-09-13"},{"lineNumber":81,"author":{"gitId":"rish-16"},"content":"        return db;","lastModifiedDate":"2021-09-13"},{"lineNumber":82,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":83,"author":{"gitId":"rish-16"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"rish-16":83}},{"path":"src/main/java/duke/ui/uiController/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rish-16"},"content":"package duke.ui.uiController;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"rish-16"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"rish-16"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"rish-16"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"rish-16"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"rish-16"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"rish-16"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"rish-16"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"rish-16"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"rish-16"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"rish-16"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"rish-16"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"rish-16"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"rish-16"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"rish-16"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"rish-16"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"rish-16"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"rish-16"},"content":"    private Button sendButton;","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"rish-16"},"content":"    private Duke duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"rish-16"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/tony.jpg\"));","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"rish-16"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/jarvis.jpg\"));","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"rish-16"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"rish-16"},"content":"    public void initialize() {","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"rish-16"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"rish-16"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"rish-16"},"content":"        duke \u003d d;","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":35,"author":{"gitId":"rish-16"},"content":"        // initial greeting","lastModifiedDate":"2021-09-13"},{"lineNumber":36,"author":{"gitId":"rish-16"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-13"},{"lineNumber":37,"author":{"gitId":"rish-16"},"content":"                DialogBox.getDukeDialog(","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"rish-16"},"content":"                        \"Hello, I\u0027m JarVIS – Just A Rather Very Intelligent System!\\n\\n\" +","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"rish-16"},"content":"                                \"How may I assist you? [Type \\\u0027JarVIS?\\\u0027 for more!]\", dukeImage)","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"rish-16"},"content":"        );","lastModifiedDate":"2021-09-13"},{"lineNumber":41,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"rish-16"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"rish-16"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"rish-16"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"rish-16"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"rish-16"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"rish-16"},"content":"    public void handleUserInput() {","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"rish-16"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"rish-16"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"rish-16"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"rish-16"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"rish-16"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"rish-16"},"content":"        );","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"rish-16"},"content":"        userInput.clear();","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"rish-16"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"rish-16":59}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"rish-16"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"rish-16"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"rish-16"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"rish-16"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"rish-16"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"rish-16"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"500.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"rish-16"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"rish-16"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\" /\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"rish-16"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"55.0\" fitWidth\u003d\"55.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"rish-16"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"rish-16"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"rish-16"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"rish-16"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"rish-16"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"rish-16":17}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"rish-16"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"rish-16"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"rish-16"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"rish-16"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"rish-16"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"rish-16"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"rish-16"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"700.0\" prefWidth\u003d\"500.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.uiController.MainWindow\"\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"rish-16"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"rish-16"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"658.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"424.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"rish-16"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"424.0\" layoutY\u003d\"658.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"rish-16"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"657.0\" prefWidth\u003d\"500.0\" vvalue\u003d\"1.0\" \u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"rish-16"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"rish-16"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"652.0\" prefWidth\u003d\"488.0\" style\u003d\"-fx-background-color: #30336b;\" /\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"rish-16"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"rish-16"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"rish-16"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"rish-16"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"rish-16":19}},{"path":"src/test/java/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rish-16"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"rish-16"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"rish-16"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"rish-16"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"rish-16"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"rish-16"},"content":"    public void Subtest1() {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"rish-16"},"content":"        Deadline deadline \u003d new Deadline(","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"rish-16"},"content":"                                    \"Finish 2103 Homework\", ","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"rish-16"},"content":"                                    \"Apr 16 2021 6PM\"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"rish-16"},"content":"                                );","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"rish-16"},"content":"        assertEquals(\"[D][ ] Finish 2103 Homework (by: Apr 16 2021 6PM)\", deadline.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"rish-16"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"rish-16"},"content":"    public void Subtest2() {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"rish-16"},"content":"        Deadline deadline \u003d new Deadline(","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"rish-16"},"content":"                                    \"Finish 2103 Homework\", ","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"rish-16"},"content":"                                    \"Apr 16 2021 6PM\"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"rish-16"},"content":"                                );","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"rish-16"},"content":"        deadline.setDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"rish-16"},"content":"        assertEquals(\"[D][X] Finish 2103 Homework (by: Apr 16 2021 6PM)\", deadline.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"rish-16"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"rish-16"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"rish-16"},"content":"    public void Subtest3() {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"rish-16"},"content":"        Deadline deadline \u003d new Deadline(","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"rish-16"},"content":"                                    \"Group Project submission\", ","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"rish-16"},"content":"                                    \"Oct 15 2021 11PM\"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"rish-16"},"content":"                                );","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"rish-16"},"content":"        deadline.setDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"rish-16"},"content":"        assertEquals(\"[D][X] Group Project submission (by: Oct 15 2021 11PM)\", deadline.toString());","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"rish-16"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"rish-16"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"rish-16":34}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rish-16"},"content":"todo buy book","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"rish-16"},"content":"deadline sell book /by Sunday","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"rish-16"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"rish-16"},"content":"icnerweorineoivne","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"rish-16"},"content":"event /at Mon 2-4pm","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"rish-16"},"content":"deadline do homework /by","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"rish-16"},"content":"done 45","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"rish-16"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"rish-16":8}}]
