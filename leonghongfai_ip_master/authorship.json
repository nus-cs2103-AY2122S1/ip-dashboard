[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"leonghongfai"},"content":"T - 1 - 1","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"leonghongfai"},"content":"D - 1 - test  - 2015-08-04","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"leonghongfai":2}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leonghongfai"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"leonghongfai"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"leonghongfai"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"leonghongfai"},"content":" * Description:","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"leonghongfai"},"content":" * Deadlines: tasks that need to be done before a specific date/time e.g., submit report by 11/10/2019 5pm.","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"leonghongfai"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"leonghongfai"},"content":" * @author Leong Hong Fai","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"leonghongfai"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"leonghongfai"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"leonghongfai"},"content":"    private LocalDate date;","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"leonghongfai"},"content":"    public Deadline(String name, String date) {","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"leonghongfai"},"content":"        super(name);","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"leonghongfai"},"content":"        this.date \u003d LocalDate.parse(date);","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"leonghongfai"},"content":"     * Simple string representation of Deadline.","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"leonghongfai"},"content":"     * @return A string consisting of the information of the Deadline object.","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"leonghongfai"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"leonghongfai"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"leonghongfai"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"leonghongfai"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"leonghongfai":28}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leonghongfai"},"content":"import java.io.File;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"leonghongfai"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"leonghongfai"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"leonghongfai"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"leonghongfai"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"leonghongfai"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"leonghongfai"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"leonghongfai"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"leonghongfai"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"leonghongfai"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"leonghongfai"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"leonghongfai"},"content":"import static java.nio.file.StandardCopyOption.REPLACE_EXISTING;","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"leonghongfai"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"leonghongfai"},"content":" * Description:","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"leonghongfai"},"content":" * Duke the ChatBot allows users to add 3 different types of tasks, mark them as done, and delete tasks.","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"leonghongfai"},"content":" * The commands for usage are as follows:","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"leonghongfai"},"content":" * 1. \"todo \u003cname\u003e\" where name is what the user would like the todo to be called.","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"leonghongfai"},"content":" * 2. \"event \u003cname\u003e /at \u003cdate\u003e\" where name is what the user would like the event to be called and date is when the event is happening.","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"leonghongfai"},"content":" * 3. \"deadline \u003cname\u003e /by \u003cdate\u003e\" where name is what the user would like the deadline to be called and date is when the deadline is set.","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"leonghongfai"},"content":" * 4. \"list\" to view current tasks added to the tasks list.","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"leonghongfai"},"content":" * 5. \"done \u003cnumber\u003e\" where number is the task with the corresponding number in the list which the user would like to mark as completed.","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"leonghongfai"},"content":" * 6. \"delete \u003cnumber\u003e\" where number is the task with the corresponding number in the list which the user would like to remove.","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"leonghongfai"},"content":" * 7. \"bye\" to leave the ChatBot.","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"leonghongfai"},"content":" * Disclaimer: any other commands will not be recognised and user will be prompted to enter a valid command.","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"leonghongfai"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"leonghongfai"},"content":" * @author Leong Hong Fai","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"leonghongfai"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":34,"author":{"gitId":"leonghongfai"},"content":"    private static ArrayList\u003cTask\u003e storage \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"leonghongfai"},"content":"    private static final String fileAddress \u003d \"data/duke.txt\";","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":38,"author":{"gitId":"leonghongfai"},"content":"        makeFile();","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"leonghongfai"},"content":"        retrieveFileContents();","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":45,"author":{"gitId":"leonghongfai"},"content":"        System.out.println(\"Hello FROM\\n\" + logo);","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"leonghongfai"},"content":"        commands();","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":48,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"leonghongfai"},"content":"    private static void retrieveFileContents(){","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"leonghongfai"},"content":"        File textFile \u003d new File(\"data/duke.txt\");","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"leonghongfai"},"content":"        Integer counter \u003d 0;","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"leonghongfai"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"leonghongfai"},"content":"            Scanner s \u003d new Scanner(textFile);","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"leonghongfai"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"leonghongfai"},"content":"                String command \u003d s.nextLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"leonghongfai"},"content":"                String[] words \u003d command.split(\" - \");","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"leonghongfai"},"content":"                boolean isCompleted \u003d false;","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"leonghongfai"},"content":"                if (words[1].equals(\"1\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"leonghongfai"},"content":"                    isCompleted \u003d true;","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"leonghongfai"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"leonghongfai"},"content":"                String task \u003d words[0];","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"leonghongfai"},"content":"                switch (task) {","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"leonghongfai"},"content":"                    case (\"T\"):","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"leonghongfai"},"content":"                        addToDo(\"todo \" + words[2], false);","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"leonghongfai"},"content":"                        if (isCompleted) {","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"leonghongfai"},"content":"                            Integer temp \u003d counter + 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"leonghongfai"},"content":"                            markCompleted(\"done \" + temp.toString(), false);","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"leonghongfai"},"content":"                        }","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"leonghongfai"},"content":"                        counter++;","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"leonghongfai"},"content":"                        break;","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"leonghongfai"},"content":"                    case (\"E\"):","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"leonghongfai"},"content":"                        addEvent(\"event \" + words[2] + \"/at \" + words[3], false);","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"leonghongfai"},"content":"                        if (isCompleted) {","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"leonghongfai"},"content":"                            Integer temp \u003d counter + 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"leonghongfai"},"content":"                            markCompleted(\"done \" + temp.toString(), false);","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"leonghongfai"},"content":"                        }","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"leonghongfai"},"content":"                        counter++;","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"leonghongfai"},"content":"                        break;","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"leonghongfai"},"content":"                    case (\"D\"):","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"leonghongfai"},"content":"                        addDeadline(\"deadline \" + words[2] + \"/by \" + words[3], false);","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"leonghongfai"},"content":"                        if (isCompleted) {","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"leonghongfai"},"content":"                            Integer temp \u003d counter + 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"leonghongfai"},"content":"                            markCompleted(\"done \" + temp.toString(), false);","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"leonghongfai"},"content":"                        }","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"leonghongfai"},"content":"                        counter++;","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"leonghongfai"},"content":"                        break;","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"leonghongfai"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"leonghongfai"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"leonghongfai"},"content":"            s.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"leonghongfai"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"leonghongfai"},"content":"            System.err.println(\"File does not exist\" + e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"leonghongfai"},"content":"    private static void makeFile() {","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"leonghongfai"},"content":"        File textFile \u003d new File(\"data/duke.txt\");","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"leonghongfai"},"content":"        Path path \u003d Paths.get(\"data\");","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"leonghongfai"},"content":"        if (!Files.isDirectory(path)) {","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"leonghongfai"},"content":"            try {","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"leonghongfai"},"content":"                Files.createDirectories(path);","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"leonghongfai"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"leonghongfai"},"content":"                System.err.println(\"Failed to create directory!\" + e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"leonghongfai"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"leonghongfai"},"content":"        if (!textFile.exists()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"leonghongfai"},"content":"            try {","lastModifiedDate":"2021-08-23"},{"lineNumber":107,"author":{"gitId":"leonghongfai"},"content":"                textFile.createNewFile();","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"leonghongfai"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":109,"author":{"gitId":"leonghongfai"},"content":"                System.err.println(\"Failed to create file!\" + e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":110,"author":{"gitId":"leonghongfai"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":111,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":112,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":113,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":114,"author":{"gitId":"leonghongfai"},"content":"    private static void appendToFile(String filePath, String textToAppend) throws IOException {","lastModifiedDate":"2021-08-23"},{"lineNumber":115,"author":{"gitId":"leonghongfai"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"leonghongfai"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true); // create a FileWriter in append mode","lastModifiedDate":"2021-08-23"},{"lineNumber":117,"author":{"gitId":"leonghongfai"},"content":"        if (f.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-23"},{"lineNumber":118,"author":{"gitId":"leonghongfai"},"content":"            fw.write(textToAppend);","lastModifiedDate":"2021-08-23"},{"lineNumber":119,"author":{"gitId":"leonghongfai"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":120,"author":{"gitId":"leonghongfai"},"content":"            fw.write(System.lineSeparator() + textToAppend);","lastModifiedDate":"2021-08-23"},{"lineNumber":121,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":122,"author":{"gitId":"leonghongfai"},"content":"        fw.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":123,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":124,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":125,"author":{"gitId":"leonghongfai"},"content":"    private static void editFileContentsForCompletion(int taskNum) {","lastModifiedDate":"2021-08-23"},{"lineNumber":126,"author":{"gitId":"leonghongfai"},"content":"        File temp \u003d new File(\"data/temp.txt\");","lastModifiedDate":"2021-08-23"},{"lineNumber":127,"author":{"gitId":"leonghongfai"},"content":"        if (!temp.exists()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":128,"author":{"gitId":"leonghongfai"},"content":"            try {","lastModifiedDate":"2021-08-23"},{"lineNumber":129,"author":{"gitId":"leonghongfai"},"content":"                Files.copy(Paths.get(\"data/duke.txt\"), Paths.get(\"data/temp.txt\"), REPLACE_EXISTING);","lastModifiedDate":"2021-08-23"},{"lineNumber":130,"author":{"gitId":"leonghongfai"},"content":"                new FileWriter(fileAddress, false).close();","lastModifiedDate":"2021-08-23"},{"lineNumber":131,"author":{"gitId":"leonghongfai"},"content":"                Scanner s \u003d new Scanner(new File(\"data/temp.txt\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":132,"author":{"gitId":"leonghongfai"},"content":"                int count \u003d 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":133,"author":{"gitId":"leonghongfai"},"content":"                while (s.hasNextLine()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":134,"author":{"gitId":"leonghongfai"},"content":"                    String command \u003d s.nextLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":135,"author":{"gitId":"leonghongfai"},"content":"                    if (count \u003d\u003d taskNum) {","lastModifiedDate":"2021-08-23"},{"lineNumber":136,"author":{"gitId":"leonghongfai"},"content":"                        String head \u003d command.substring(0, 4);","lastModifiedDate":"2021-08-23"},{"lineNumber":137,"author":{"gitId":"leonghongfai"},"content":"                        String tail \u003d command.substring(5);","lastModifiedDate":"2021-08-23"},{"lineNumber":138,"author":{"gitId":"leonghongfai"},"content":"                        appendToFile(\"data/duke.txt\", head + \"1\" + tail);","lastModifiedDate":"2021-08-23"},{"lineNumber":139,"author":{"gitId":"leonghongfai"},"content":"                        count++;","lastModifiedDate":"2021-08-23"},{"lineNumber":140,"author":{"gitId":"leonghongfai"},"content":"                    } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":141,"author":{"gitId":"leonghongfai"},"content":"                        appendToFile(\"data/duke.txt\", command);","lastModifiedDate":"2021-08-23"},{"lineNumber":142,"author":{"gitId":"leonghongfai"},"content":"                        count++;","lastModifiedDate":"2021-08-23"},{"lineNumber":143,"author":{"gitId":"leonghongfai"},"content":"                    }","lastModifiedDate":"2021-08-23"},{"lineNumber":144,"author":{"gitId":"leonghongfai"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":145,"author":{"gitId":"leonghongfai"},"content":"                s.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":146,"author":{"gitId":"leonghongfai"},"content":"                Files.delete(Paths.get(\"data/temp.txt\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":147,"author":{"gitId":"leonghongfai"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":148,"author":{"gitId":"leonghongfai"},"content":"                System.err.println(\"Failed to create file!\" + e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":149,"author":{"gitId":"leonghongfai"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":150,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":151,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":152,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":153,"author":{"gitId":"leonghongfai"},"content":"    private static void editFileContentsForDeletion(int taskNum) {","lastModifiedDate":"2021-08-23"},{"lineNumber":154,"author":{"gitId":"leonghongfai"},"content":"        File temp \u003d new File(\"data/temp.txt\");","lastModifiedDate":"2021-08-23"},{"lineNumber":155,"author":{"gitId":"leonghongfai"},"content":"        if (!temp.exists()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":156,"author":{"gitId":"leonghongfai"},"content":"            try {","lastModifiedDate":"2021-08-23"},{"lineNumber":157,"author":{"gitId":"leonghongfai"},"content":"                Files.copy(Paths.get(\"data/duke.txt\"), Paths.get(\"data/temp.txt\"), REPLACE_EXISTING);","lastModifiedDate":"2021-08-23"},{"lineNumber":158,"author":{"gitId":"leonghongfai"},"content":"                new FileWriter(fileAddress, false).close();","lastModifiedDate":"2021-08-23"},{"lineNumber":159,"author":{"gitId":"leonghongfai"},"content":"                Scanner s \u003d new Scanner(new File(\"data/temp.txt\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":160,"author":{"gitId":"leonghongfai"},"content":"                int count \u003d 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":161,"author":{"gitId":"leonghongfai"},"content":"                while (s.hasNextLine()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":162,"author":{"gitId":"leonghongfai"},"content":"                    String command \u003d s.nextLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":163,"author":{"gitId":"leonghongfai"},"content":"                    if (count \u003d\u003d taskNum) {","lastModifiedDate":"2021-08-23"},{"lineNumber":164,"author":{"gitId":"leonghongfai"},"content":"                        count++;","lastModifiedDate":"2021-08-23"},{"lineNumber":165,"author":{"gitId":"leonghongfai"},"content":"                    } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":166,"author":{"gitId":"leonghongfai"},"content":"                        appendToFile(\"data/duke.txt\", command);","lastModifiedDate":"2021-08-23"},{"lineNumber":167,"author":{"gitId":"leonghongfai"},"content":"                        count++;","lastModifiedDate":"2021-08-23"},{"lineNumber":168,"author":{"gitId":"leonghongfai"},"content":"                    }","lastModifiedDate":"2021-08-23"},{"lineNumber":169,"author":{"gitId":"leonghongfai"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":170,"author":{"gitId":"leonghongfai"},"content":"                s.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":171,"author":{"gitId":"leonghongfai"},"content":"                Files.delete(Paths.get(\"data/temp.txt\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":172,"author":{"gitId":"leonghongfai"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":173,"author":{"gitId":"leonghongfai"},"content":"                System.err.println(\"Failed to create file!\" + e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":174,"author":{"gitId":"leonghongfai"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":175,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":176,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":177,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":178,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":179,"author":{"gitId":"leonghongfai"},"content":"     * Prints out text to say goodbye to user.","lastModifiedDate":"2021-08-18"},{"lineNumber":180,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":181,"author":{"gitId":"leonghongfai"},"content":"    private static void byeCommand() {","lastModifiedDate":"2021-08-18"},{"lineNumber":182,"author":{"gitId":"leonghongfai"},"content":"        System.out.println(\"    ______________________________________\");","lastModifiedDate":"2021-08-16"},{"lineNumber":183,"author":{"gitId":"leonghongfai"},"content":"        System.out.println(\"     Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-16"},{"lineNumber":184,"author":{"gitId":"leonghongfai"},"content":"        System.out.println(\"    ______________________________________\");","lastModifiedDate":"2021-08-16"},{"lineNumber":185,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":186,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":187,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":188,"author":{"gitId":"leonghongfai"},"content":"     * Prints out the current list of tasks the user has.","lastModifiedDate":"2021-08-18"},{"lineNumber":189,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":190,"author":{"gitId":"leonghongfai"},"content":"     * @param command entered by user.","lastModifiedDate":"2021-08-18"},{"lineNumber":191,"author":{"gitId":"leonghongfai"},"content":"     * @throws DukeException upon invalid commands or empty tasks list.","lastModifiedDate":"2021-08-18"},{"lineNumber":192,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":193,"author":{"gitId":"leonghongfai"},"content":"    private static void printList(String command) throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":194,"author":{"gitId":"leonghongfai"},"content":"        String[] words \u003d command.split(\" \");","lastModifiedDate":"2021-08-18"},{"lineNumber":195,"author":{"gitId":"leonghongfai"},"content":"        if (words.length \u003e 1) {","lastModifiedDate":"2021-08-18"},{"lineNumber":196,"author":{"gitId":"leonghongfai"},"content":"            throw new DukeException(\"invalidCommand\");","lastModifiedDate":"2021-08-18"},{"lineNumber":197,"author":{"gitId":"leonghongfai"},"content":"        } else if (storage.isEmpty()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":198,"author":{"gitId":"leonghongfai"},"content":"            throw new DukeException(\"noTasksException\");","lastModifiedDate":"2021-08-18"},{"lineNumber":199,"author":{"gitId":"leonghongfai"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":200,"author":{"gitId":"leonghongfai"},"content":"            System.out.println(\"    ______________________________________\");","lastModifiedDate":"2021-08-16"},{"lineNumber":201,"author":{"gitId":"leonghongfai"},"content":"            System.out.println(\"     Here are the tasks in your list:\");","lastModifiedDate":"2021-08-17"},{"lineNumber":202,"author":{"gitId":"leonghongfai"},"content":"            for (int i \u003d 0; i \u003c storage.size(); i++) {","lastModifiedDate":"2021-08-18"},{"lineNumber":203,"author":{"gitId":"leonghongfai"},"content":"                System.out.printf(\"     %d.%s\\n\", i + 1, storage.get(i).toString());","lastModifiedDate":"2021-08-18"},{"lineNumber":204,"author":{"gitId":"leonghongfai"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":205,"author":{"gitId":"leonghongfai"},"content":"            System.out.println(\"    ______________________________________\");","lastModifiedDate":"2021-08-16"},{"lineNumber":206,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":207,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":208,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":209,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":210,"author":{"gitId":"leonghongfai"},"content":"     * Adds a ToDo to the list of tasks.","lastModifiedDate":"2021-08-18"},{"lineNumber":211,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":212,"author":{"gitId":"leonghongfai"},"content":"     * @param command entered by the user.","lastModifiedDate":"2021-08-18"},{"lineNumber":213,"author":{"gitId":"leonghongfai"},"content":"     * @throws DukeException upon invalid command format.","lastModifiedDate":"2021-08-18"},{"lineNumber":214,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":215,"author":{"gitId":"leonghongfai"},"content":"    private static void addToDo(String command, boolean printOutput) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":216,"author":{"gitId":"leonghongfai"},"content":"        if (command.length() \u003c 6) {","lastModifiedDate":"2021-08-18"},{"lineNumber":217,"author":{"gitId":"leonghongfai"},"content":"            throw new DukeException(\"invalidToDo\");","lastModifiedDate":"2021-08-18"},{"lineNumber":218,"author":{"gitId":"leonghongfai"},"content":"        } else {","lastModifiedDate":"2021-08-16"},{"lineNumber":219,"author":{"gitId":"leonghongfai"},"content":"            String name \u003d command.substring(5);","lastModifiedDate":"2021-08-17"},{"lineNumber":220,"author":{"gitId":"leonghongfai"},"content":"            Task task  \u003d new ToDo(name);","lastModifiedDate":"2021-08-17"},{"lineNumber":221,"author":{"gitId":"leonghongfai"},"content":"            storage.add(task);","lastModifiedDate":"2021-08-18"},{"lineNumber":222,"author":{"gitId":"leonghongfai"},"content":"            if (printOutput) {","lastModifiedDate":"2021-08-23"},{"lineNumber":223,"author":{"gitId":"leonghongfai"},"content":"                try {","lastModifiedDate":"2021-08-23"},{"lineNumber":224,"author":{"gitId":"leonghongfai"},"content":"                    appendToFile(fileAddress, \"T - 0 - \" + name);","lastModifiedDate":"2021-08-23"},{"lineNumber":225,"author":{"gitId":"leonghongfai"},"content":"                } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":226,"author":{"gitId":"leonghongfai"},"content":"                    e.printStackTrace();","lastModifiedDate":"2021-08-23"},{"lineNumber":227,"author":{"gitId":"leonghongfai"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":228,"author":{"gitId":"leonghongfai"},"content":"                System.out.println(\"    ______________________________________\");","lastModifiedDate":"2021-08-17"},{"lineNumber":229,"author":{"gitId":"leonghongfai"},"content":"                System.out.println(\"     Got it. I\u0027ve added this task: \");","lastModifiedDate":"2021-08-17"},{"lineNumber":230,"author":{"gitId":"leonghongfai"},"content":"                System.out.printf(\"       %s\\n\",task);","lastModifiedDate":"2021-08-17"},{"lineNumber":231,"author":{"gitId":"leonghongfai"},"content":"                System.out.printf(\"     Now you have %d tasks in the list\\n\", storage.size());","lastModifiedDate":"2021-08-18"},{"lineNumber":232,"author":{"gitId":"leonghongfai"},"content":"                System.out.println(\"    ______________________________________\");","lastModifiedDate":"2021-08-17"},{"lineNumber":233,"author":{"gitId":"leonghongfai"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":234,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":235,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":236,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":237,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":238,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":239,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":240,"author":{"gitId":"leonghongfai"},"content":"     * Adds a deadline to the list of tasks.","lastModifiedDate":"2021-08-18"},{"lineNumber":241,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":242,"author":{"gitId":"leonghongfai"},"content":"     * @param command entered by the user.","lastModifiedDate":"2021-08-18"},{"lineNumber":243,"author":{"gitId":"leonghongfai"},"content":"     * @throws DukeException upon invalid command format.","lastModifiedDate":"2021-08-18"},{"lineNumber":244,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":245,"author":{"gitId":"leonghongfai"},"content":"    private static void addDeadline(String command, boolean printOutput) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":246,"author":{"gitId":"leonghongfai"},"content":"        String[] words \u003d command.split(\" \");","lastModifiedDate":"2021-08-18"},{"lineNumber":247,"author":{"gitId":"leonghongfai"},"content":"        if (words.length \u003c\u003d 3 ) {","lastModifiedDate":"2021-08-18"},{"lineNumber":248,"author":{"gitId":"leonghongfai"},"content":"            throw new DukeException(\"invalidDeadline\");","lastModifiedDate":"2021-08-18"},{"lineNumber":249,"author":{"gitId":"leonghongfai"},"content":"        } else if (!command.contains(\"/by\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":250,"author":{"gitId":"leonghongfai"},"content":"            throw new DukeException(\"invalidDeadline\");","lastModifiedDate":"2021-08-18"},{"lineNumber":251,"author":{"gitId":"leonghongfai"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":252,"author":{"gitId":"leonghongfai"},"content":"            try {","lastModifiedDate":"2021-08-23"},{"lineNumber":253,"author":{"gitId":"leonghongfai"},"content":"                LocalDate.parse(words[3]);","lastModifiedDate":"2021-08-23"},{"lineNumber":254,"author":{"gitId":"leonghongfai"},"content":"                int position \u003d command.indexOf(\"/by\");","lastModifiedDate":"2021-08-17"},{"lineNumber":255,"author":{"gitId":"leonghongfai"},"content":"                String name \u003d command.substring(9, position);","lastModifiedDate":"2021-08-17"},{"lineNumber":256,"author":{"gitId":"leonghongfai"},"content":"                String date \u003d command.substring(position + 4);","lastModifiedDate":"2021-08-17"},{"lineNumber":257,"author":{"gitId":"leonghongfai"},"content":"                Task task  \u003d new Deadline(name, date);","lastModifiedDate":"2021-08-17"},{"lineNumber":258,"author":{"gitId":"leonghongfai"},"content":"                storage.add(task);","lastModifiedDate":"2021-08-18"},{"lineNumber":259,"author":{"gitId":"leonghongfai"},"content":"                if (printOutput) {","lastModifiedDate":"2021-08-23"},{"lineNumber":260,"author":{"gitId":"leonghongfai"},"content":"                    appendToFile(fileAddress, \"D - 0 - \" + name + \" - \" + date);","lastModifiedDate":"2021-08-23"},{"lineNumber":261,"author":{"gitId":"leonghongfai"},"content":"                    System.out.println(\"    ______________________________________\");","lastModifiedDate":"2021-08-17"},{"lineNumber":262,"author":{"gitId":"leonghongfai"},"content":"                    System.out.println(\"     Got it. I\u0027ve added this task: \");","lastModifiedDate":"2021-08-17"},{"lineNumber":263,"author":{"gitId":"leonghongfai"},"content":"                    System.out.printf(\"       %s\\n\",task);","lastModifiedDate":"2021-08-17"},{"lineNumber":264,"author":{"gitId":"leonghongfai"},"content":"                    System.out.printf(\"     Now you have %d tasks in the list\\n\", storage.size());","lastModifiedDate":"2021-08-18"},{"lineNumber":265,"author":{"gitId":"leonghongfai"},"content":"                    System.out.println(\"    ______________________________________\");","lastModifiedDate":"2021-08-17"},{"lineNumber":266,"author":{"gitId":"leonghongfai"},"content":"                }","lastModifiedDate":"2021-08-17"},{"lineNumber":267,"author":{"gitId":"leonghongfai"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":268,"author":{"gitId":"leonghongfai"},"content":"                e.printStackTrace();","lastModifiedDate":"2021-08-23"},{"lineNumber":269,"author":{"gitId":"leonghongfai"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":270,"author":{"gitId":"leonghongfai"},"content":"                System.out.println(\"Enter valid date format!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":271,"author":{"gitId":"leonghongfai"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":272,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":273,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":274,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":275,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":276,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":277,"author":{"gitId":"leonghongfai"},"content":"     * Adds event to the list of tasks.","lastModifiedDate":"2021-08-18"},{"lineNumber":278,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":279,"author":{"gitId":"leonghongfai"},"content":"     * @param command entered by the user.","lastModifiedDate":"2021-08-18"},{"lineNumber":280,"author":{"gitId":"leonghongfai"},"content":"     * @throws DukeException upon invalid command format.","lastModifiedDate":"2021-08-18"},{"lineNumber":281,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":282,"author":{"gitId":"leonghongfai"},"content":"    private static void addEvent(String command, boolean printOutput) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":283,"author":{"gitId":"leonghongfai"},"content":"        String[] words \u003d command.split(\" \");","lastModifiedDate":"2021-08-18"},{"lineNumber":284,"author":{"gitId":"leonghongfai"},"content":"        if (words.length \u003c\u003d 3 ) {","lastModifiedDate":"2021-08-18"},{"lineNumber":285,"author":{"gitId":"leonghongfai"},"content":"            throw new DukeException(\"invalidEvent\");","lastModifiedDate":"2021-08-18"},{"lineNumber":286,"author":{"gitId":"leonghongfai"},"content":"        } else if (!command.contains(\"/at\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":287,"author":{"gitId":"leonghongfai"},"content":"            throw new DukeException(\"invalidEvent\");","lastModifiedDate":"2021-08-18"},{"lineNumber":288,"author":{"gitId":"leonghongfai"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":289,"author":{"gitId":"leonghongfai"},"content":"            try {","lastModifiedDate":"2021-08-23"},{"lineNumber":290,"author":{"gitId":"leonghongfai"},"content":"                LocalDate.parse(words[3]);","lastModifiedDate":"2021-08-23"},{"lineNumber":291,"author":{"gitId":"leonghongfai"},"content":"                int position \u003d command.indexOf(\"/at\");","lastModifiedDate":"2021-08-17"},{"lineNumber":292,"author":{"gitId":"leonghongfai"},"content":"                String name \u003d command.substring(6, position);","lastModifiedDate":"2021-08-17"},{"lineNumber":293,"author":{"gitId":"leonghongfai"},"content":"                String date \u003d command.substring(position + 4);","lastModifiedDate":"2021-08-17"},{"lineNumber":294,"author":{"gitId":"leonghongfai"},"content":"                Task task  \u003d new Event(name, date);","lastModifiedDate":"2021-08-17"},{"lineNumber":295,"author":{"gitId":"leonghongfai"},"content":"                storage.add(task);","lastModifiedDate":"2021-08-18"},{"lineNumber":296,"author":{"gitId":"leonghongfai"},"content":"                if (printOutput) {","lastModifiedDate":"2021-08-23"},{"lineNumber":297,"author":{"gitId":"leonghongfai"},"content":"                    appendToFile(fileAddress, \"E - 0 - \" + name + \" - \" + date);","lastModifiedDate":"2021-08-23"},{"lineNumber":298,"author":{"gitId":"leonghongfai"},"content":"                    System.out.println(\"    ______________________________________\");","lastModifiedDate":"2021-08-17"},{"lineNumber":299,"author":{"gitId":"leonghongfai"},"content":"                    System.out.println(\"     Got it. I\u0027ve added this task: \");","lastModifiedDate":"2021-08-17"},{"lineNumber":300,"author":{"gitId":"leonghongfai"},"content":"                    System.out.printf(\"       %s\\n\",task);","lastModifiedDate":"2021-08-17"},{"lineNumber":301,"author":{"gitId":"leonghongfai"},"content":"                    System.out.printf(\"     Now you have %d tasks in the list\\n\", storage.size());","lastModifiedDate":"2021-08-18"},{"lineNumber":302,"author":{"gitId":"leonghongfai"},"content":"                    System.out.println(\"    ______________________________________\");","lastModifiedDate":"2021-08-17"},{"lineNumber":303,"author":{"gitId":"leonghongfai"},"content":"                }","lastModifiedDate":"2021-08-17"},{"lineNumber":304,"author":{"gitId":"leonghongfai"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":305,"author":{"gitId":"leonghongfai"},"content":"                e.printStackTrace();","lastModifiedDate":"2021-08-23"},{"lineNumber":306,"author":{"gitId":"leonghongfai"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":307,"author":{"gitId":"leonghongfai"},"content":"                System.out.println(\"Enter valid date format!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":308,"author":{"gitId":"leonghongfai"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":309,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":310,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":311,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":312,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":313,"author":{"gitId":"leonghongfai"},"content":"     * Marks a specific task in the list as completed.","lastModifiedDate":"2021-08-18"},{"lineNumber":314,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":315,"author":{"gitId":"leonghongfai"},"content":"     * @param command entered by the user.","lastModifiedDate":"2021-08-18"},{"lineNumber":316,"author":{"gitId":"leonghongfai"},"content":"     * @throws DukeException upon incorrect command format.","lastModifiedDate":"2021-08-18"},{"lineNumber":317,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":318,"author":{"gitId":"leonghongfai"},"content":"    private static void markCompleted(String command, boolean printOutput) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":319,"author":{"gitId":"leonghongfai"},"content":"        String restOfCommand \u003d command.substring(5);","lastModifiedDate":"2021-08-18"},{"lineNumber":320,"author":{"gitId":"leonghongfai"},"content":"        boolean numeric;","lastModifiedDate":"2021-08-18"},{"lineNumber":321,"author":{"gitId":"leonghongfai"},"content":"        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":322,"author":{"gitId":"leonghongfai"},"content":"            int temp \u003d Integer.parseInt(restOfCommand);","lastModifiedDate":"2021-08-18"},{"lineNumber":323,"author":{"gitId":"leonghongfai"},"content":"            numeric \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":324,"author":{"gitId":"leonghongfai"},"content":"        } catch (NumberFormatException err) {","lastModifiedDate":"2021-08-18"},{"lineNumber":325,"author":{"gitId":"leonghongfai"},"content":"            numeric \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":326,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":327,"author":{"gitId":"leonghongfai"},"content":"        if (numeric) {","lastModifiedDate":"2021-08-18"},{"lineNumber":328,"author":{"gitId":"leonghongfai"},"content":"            int taskNum \u003d Integer.parseInt(restOfCommand) - 1;","lastModifiedDate":"2021-08-18"},{"lineNumber":329,"author":{"gitId":"leonghongfai"},"content":"            if (taskNum \u003c storage.size()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":330,"author":{"gitId":"leonghongfai"},"content":"                Task currTask \u003d storage.get(taskNum);","lastModifiedDate":"2021-08-18"},{"lineNumber":331,"author":{"gitId":"leonghongfai"},"content":"                currTask.setCompleted();","lastModifiedDate":"2021-08-18"},{"lineNumber":332,"author":{"gitId":"leonghongfai"},"content":"                if (printOutput) {","lastModifiedDate":"2021-08-23"},{"lineNumber":333,"author":{"gitId":"leonghongfai"},"content":"                    editFileContentsForCompletion(taskNum + 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":334,"author":{"gitId":"leonghongfai"},"content":"                    System.out.println(\"    ______________________________________\");","lastModifiedDate":"2021-08-17"},{"lineNumber":335,"author":{"gitId":"leonghongfai"},"content":"                    System.out.println(\"     Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2021-08-18"},{"lineNumber":336,"author":{"gitId":"leonghongfai"},"content":"                    System.out.printf(\"       %s\\n\", currTask);","lastModifiedDate":"2021-08-18"},{"lineNumber":337,"author":{"gitId":"leonghongfai"},"content":"                    System.out.println(\"    ______________________________________\");","lastModifiedDate":"2021-08-16"},{"lineNumber":338,"author":{"gitId":"leonghongfai"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":339,"author":{"gitId":"leonghongfai"},"content":"            } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":340,"author":{"gitId":"leonghongfai"},"content":"                throw new DukeException(\"invalidTaskNumber\");","lastModifiedDate":"2021-08-18"},{"lineNumber":341,"author":{"gitId":"leonghongfai"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":342,"author":{"gitId":"leonghongfai"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":343,"author":{"gitId":"leonghongfai"},"content":"            throw new DukeException(\"invalidNumberFormat\");","lastModifiedDate":"2021-08-18"},{"lineNumber":344,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":345,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":346,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":347,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":348,"author":{"gitId":"leonghongfai"},"content":"     * Deletes a specified task from the list of tasks.","lastModifiedDate":"2021-08-18"},{"lineNumber":349,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":350,"author":{"gitId":"leonghongfai"},"content":"     * @param command entered by the user.","lastModifiedDate":"2021-08-18"},{"lineNumber":351,"author":{"gitId":"leonghongfai"},"content":"     * @throws DukeException upon incorrect command format.","lastModifiedDate":"2021-08-18"},{"lineNumber":352,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":353,"author":{"gitId":"leonghongfai"},"content":"    private static void deleteTask(String command) throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":354,"author":{"gitId":"leonghongfai"},"content":"        String restOfCommand \u003d command.substring(7);","lastModifiedDate":"2021-08-18"},{"lineNumber":355,"author":{"gitId":"leonghongfai"},"content":"        boolean numeric;","lastModifiedDate":"2021-08-18"},{"lineNumber":356,"author":{"gitId":"leonghongfai"},"content":"        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":357,"author":{"gitId":"leonghongfai"},"content":"            int temp \u003d Integer.parseInt(restOfCommand);","lastModifiedDate":"2021-08-18"},{"lineNumber":358,"author":{"gitId":"leonghongfai"},"content":"            numeric \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":359,"author":{"gitId":"leonghongfai"},"content":"        } catch (NumberFormatException err) {","lastModifiedDate":"2021-08-18"},{"lineNumber":360,"author":{"gitId":"leonghongfai"},"content":"            numeric \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":361,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":362,"author":{"gitId":"leonghongfai"},"content":"        if (numeric) {","lastModifiedDate":"2021-08-18"},{"lineNumber":363,"author":{"gitId":"leonghongfai"},"content":"            int taskNum \u003d Integer.parseInt(restOfCommand) - 1;","lastModifiedDate":"2021-08-18"},{"lineNumber":364,"author":{"gitId":"leonghongfai"},"content":"            if (taskNum \u003c storage.size()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":365,"author":{"gitId":"leonghongfai"},"content":"                editFileContentsForDeletion(taskNum + 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":366,"author":{"gitId":"leonghongfai"},"content":"                Task currTask \u003d storage.get(taskNum);","lastModifiedDate":"2021-08-18"},{"lineNumber":367,"author":{"gitId":"leonghongfai"},"content":"                storage.remove(taskNum);","lastModifiedDate":"2021-08-18"},{"lineNumber":368,"author":{"gitId":"leonghongfai"},"content":"                System.out.println(\"    ______________________________________\");","lastModifiedDate":"2021-08-18"},{"lineNumber":369,"author":{"gitId":"leonghongfai"},"content":"                System.out.println(\"     Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2021-08-18"},{"lineNumber":370,"author":{"gitId":"leonghongfai"},"content":"                System.out.printf(\"       %s\\n\", currTask);","lastModifiedDate":"2021-08-18"},{"lineNumber":371,"author":{"gitId":"leonghongfai"},"content":"                System.out.printf(\"     Now you have %d tasks in the list.\\n\", storage.size());","lastModifiedDate":"2021-08-18"},{"lineNumber":372,"author":{"gitId":"leonghongfai"},"content":"                System.out.println(\"    ______________________________________\");","lastModifiedDate":"2021-08-18"},{"lineNumber":373,"author":{"gitId":"leonghongfai"},"content":"            } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":374,"author":{"gitId":"leonghongfai"},"content":"                throw new DukeException(\"invalidTaskNumber\");","lastModifiedDate":"2021-08-18"},{"lineNumber":375,"author":{"gitId":"leonghongfai"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":376,"author":{"gitId":"leonghongfai"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":377,"author":{"gitId":"leonghongfai"},"content":"            throw new DukeException(\"invalidNumberFormatDelete\");","lastModifiedDate":"2021-08-18"},{"lineNumber":378,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":379,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":380,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":381,"author":{"gitId":"leonghongfai"},"content":"    private static void commands() throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":382,"author":{"gitId":"leonghongfai"},"content":"        int pointer \u003d 1;","lastModifiedDate":"2021-08-18"},{"lineNumber":383,"author":{"gitId":"leonghongfai"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\n\");","lastModifiedDate":"2021-08-18"},{"lineNumber":384,"author":{"gitId":"leonghongfai"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2021-08-18"},{"lineNumber":385,"author":{"gitId":"leonghongfai"},"content":"        System.out.println(\"__________________________________________\");","lastModifiedDate":"2021-08-18"},{"lineNumber":386,"author":{"gitId":"leonghongfai"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-18"},{"lineNumber":387,"author":{"gitId":"leonghongfai"},"content":"        while (scanner.hasNext()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":388,"author":{"gitId":"leonghongfai"},"content":"            String command \u003d scanner.nextLine();","lastModifiedDate":"2021-08-18"},{"lineNumber":389,"author":{"gitId":"leonghongfai"},"content":"            String[] words \u003d command.split(\" \");","lastModifiedDate":"2021-08-18"},{"lineNumber":390,"author":{"gitId":"leonghongfai"},"content":"            String init \u003d words[0];","lastModifiedDate":"2021-08-18"},{"lineNumber":391,"author":{"gitId":"leonghongfai"},"content":"            if (!command.equals(\"bye\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":392,"author":{"gitId":"leonghongfai"},"content":"                try {","lastModifiedDate":"2021-08-18"},{"lineNumber":393,"author":{"gitId":"leonghongfai"},"content":"                    switch (init) {","lastModifiedDate":"2021-08-18"},{"lineNumber":394,"author":{"gitId":"leonghongfai"},"content":"                    case (\"list\"):","lastModifiedDate":"2021-08-18"},{"lineNumber":395,"author":{"gitId":"leonghongfai"},"content":"                        printList(command);","lastModifiedDate":"2021-08-18"},{"lineNumber":396,"author":{"gitId":"leonghongfai"},"content":"                        break;","lastModifiedDate":"2021-08-18"},{"lineNumber":397,"author":{"gitId":"leonghongfai"},"content":"                    case (\"todo\"):","lastModifiedDate":"2021-08-18"},{"lineNumber":398,"author":{"gitId":"leonghongfai"},"content":"                        addToDo(command, true);","lastModifiedDate":"2021-08-23"},{"lineNumber":399,"author":{"gitId":"leonghongfai"},"content":"                        break;","lastModifiedDate":"2021-08-18"},{"lineNumber":400,"author":{"gitId":"leonghongfai"},"content":"                    case (\"deadline\"):","lastModifiedDate":"2021-08-18"},{"lineNumber":401,"author":{"gitId":"leonghongfai"},"content":"                        addDeadline(command, true);","lastModifiedDate":"2021-08-23"},{"lineNumber":402,"author":{"gitId":"leonghongfai"},"content":"                        break;","lastModifiedDate":"2021-08-18"},{"lineNumber":403,"author":{"gitId":"leonghongfai"},"content":"                    case (\"event\"):","lastModifiedDate":"2021-08-18"},{"lineNumber":404,"author":{"gitId":"leonghongfai"},"content":"                        addEvent(command, true);","lastModifiedDate":"2021-08-23"},{"lineNumber":405,"author":{"gitId":"leonghongfai"},"content":"                        break;","lastModifiedDate":"2021-08-18"},{"lineNumber":406,"author":{"gitId":"leonghongfai"},"content":"                    case (\"done\"):","lastModifiedDate":"2021-08-18"},{"lineNumber":407,"author":{"gitId":"leonghongfai"},"content":"                        markCompleted(command, true);","lastModifiedDate":"2021-08-23"},{"lineNumber":408,"author":{"gitId":"leonghongfai"},"content":"                        break;","lastModifiedDate":"2021-08-18"},{"lineNumber":409,"author":{"gitId":"leonghongfai"},"content":"                    case (\"delete\"):","lastModifiedDate":"2021-08-18"},{"lineNumber":410,"author":{"gitId":"leonghongfai"},"content":"                        deleteTask(command);","lastModifiedDate":"2021-08-18"},{"lineNumber":411,"author":{"gitId":"leonghongfai"},"content":"                        break;","lastModifiedDate":"2021-08-18"},{"lineNumber":412,"author":{"gitId":"leonghongfai"},"content":"                    default:","lastModifiedDate":"2021-08-18"},{"lineNumber":413,"author":{"gitId":"leonghongfai"},"content":"                        throw new DukeException(\"invalidCommand\");","lastModifiedDate":"2021-08-18"},{"lineNumber":414,"author":{"gitId":"leonghongfai"},"content":"                    }","lastModifiedDate":"2021-08-18"},{"lineNumber":415,"author":{"gitId":"leonghongfai"},"content":"                } catch (DukeException err) {","lastModifiedDate":"2021-08-18"},{"lineNumber":416,"author":{"gitId":"leonghongfai"},"content":"                    System.out.println(\"    ______________________________________\");","lastModifiedDate":"2021-08-18"},{"lineNumber":417,"author":{"gitId":"leonghongfai"},"content":"                    System.out.printf(\"     %s\\n\", err);","lastModifiedDate":"2021-08-18"},{"lineNumber":418,"author":{"gitId":"leonghongfai"},"content":"                    System.out.println(\"    ______________________________________\");","lastModifiedDate":"2021-08-18"},{"lineNumber":419,"author":{"gitId":"leonghongfai"},"content":"                }","lastModifiedDate":"2021-08-18"},{"lineNumber":420,"author":{"gitId":"leonghongfai"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":421,"author":{"gitId":"leonghongfai"},"content":"            else {","lastModifiedDate":"2021-08-18"},{"lineNumber":422,"author":{"gitId":"leonghongfai"},"content":"                byeCommand();","lastModifiedDate":"2021-08-18"},{"lineNumber":423,"author":{"gitId":"leonghongfai"},"content":"                scanner.close();","lastModifiedDate":"2021-08-18"},{"lineNumber":424,"author":{"gitId":"leonghongfai"},"content":"                break;","lastModifiedDate":"2021-08-18"},{"lineNumber":425,"author":{"gitId":"leonghongfai"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":426,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":427,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":428,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":429,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":430,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":431,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":432,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"leonghongfai":423,"-":9}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leonghongfai"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"leonghongfai"},"content":" * Description:","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"leonghongfai"},"content":" * DukeException class stores a variety of error messages that will be printed accordingly based on the","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"leonghongfai"},"content":" * error encountered while Duke is running.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"leonghongfai"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"leonghongfai"},"content":" * @author Leong Hong Fai","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"leonghongfai"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"leonghongfai"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"leonghongfai"},"content":"    private final String INVALIDTODO \u003d \"Enter a valid todo in this format \u0027todo \u003ctask here\u003e\u0027\";","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"leonghongfai"},"content":"    private final String NOTASKSEXCEPTION \u003d \"There are no tasks in the list yet!\";","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"leonghongfai"},"content":"    private final String INVALIDDEADLINE \u003d \"Enter a valid deadline in this format \u0027deadline \u003ctask\u003e /by \u003cdate or day\u003e\u0027\";","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"leonghongfai"},"content":"    private final String INVALIDEVENT \u003d \"Enter a valid event in this format \u0027event \u003ctask\u003e /at \u003cdate or day\u003e\u0027\";","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"leonghongfai"},"content":"    private final String INVALIDTASKNUMBER \u003d \"Current task number does not exist. Enter \u003clist\u003e to see all tasks\";","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"leonghongfai"},"content":"    private final String INVALIDNUMBERFORMAT \u003d \"Enter a valid number in this format \u0027done \u003cnumber\u003e\u0027\";","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"leonghongfai"},"content":"    private final String INVALIDCOMMAND \u003d \"Enter a valid command!\";","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"leonghongfai"},"content":"    private final String INVALIDNUMBERFORMATDELETE \u003d \"Enter a valid number in this format \u0027delete \u003cnumber\u003e\u0027\";","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"leonghongfai"},"content":"    private String type;","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"leonghongfai"},"content":"    private String errorMessage;","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"leonghongfai"},"content":"    public DukeException(String type) {","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"leonghongfai"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"leonghongfai"},"content":"        switch (type) {","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"leonghongfai"},"content":"            case (\"invalidToDo\"):","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"leonghongfai"},"content":"                errorMessage \u003d INVALIDTODO;","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"leonghongfai"},"content":"                break;","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"leonghongfai"},"content":"            case (\"noTasksException\"):","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"leonghongfai"},"content":"                errorMessage \u003d NOTASKSEXCEPTION;","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"leonghongfai"},"content":"                break;","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"leonghongfai"},"content":"            case (\"invalidDeadline\"):","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"leonghongfai"},"content":"                errorMessage \u003d INVALIDDEADLINE;","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"leonghongfai"},"content":"                break;","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"leonghongfai"},"content":"            case (\"invalidEvent\"):","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"leonghongfai"},"content":"                errorMessage \u003d INVALIDEVENT;","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"leonghongfai"},"content":"                break;","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"leonghongfai"},"content":"            case (\"invalidTaskNumber\"):","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"leonghongfai"},"content":"                errorMessage \u003d INVALIDTASKNUMBER;","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"leonghongfai"},"content":"                break;","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"leonghongfai"},"content":"            case (\"invalidNumberFormat\"):","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"leonghongfai"},"content":"                errorMessage \u003d INVALIDNUMBERFORMAT;","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"leonghongfai"},"content":"                break;","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"leonghongfai"},"content":"            case (\"invalidCommand\"):","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"leonghongfai"},"content":"                errorMessage \u003d INVALIDCOMMAND;","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"leonghongfai"},"content":"                break;","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"leonghongfai"},"content":"            case (\"invalidNumberFormatDelete\"):","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"leonghongfai"},"content":"                errorMessage \u003d INVALIDNUMBERFORMATDELETE;","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"leonghongfai"},"content":"     * Simple string representation of DukeException.","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"leonghongfai"},"content":"     * @return A string consisting of the relevant error message.","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"leonghongfai"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"leonghongfai"},"content":"        return errorMessage;","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"leonghongfai"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"leonghongfai":60}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leonghongfai"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"leonghongfai"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"leonghongfai"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"leonghongfai"},"content":" * Description:","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"leonghongfai"},"content":" * Events: tasks that start at a specific time and ends at a specific time e.g. team project meeting on 2/10/2019 2-4pm.","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"leonghongfai"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"leonghongfai"},"content":" * @author Leong Hong Fai","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"leonghongfai"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"leonghongfai"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"leonghongfai"},"content":"    private LocalDate date;","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"leonghongfai"},"content":"    public Event(String name, String date) {","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"leonghongfai"},"content":"        super(name);","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"leonghongfai"},"content":"        this.date \u003d LocalDate.parse(date);","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"leonghongfai"},"content":"     * Simple string representation of Event.","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"leonghongfai"},"content":"     * @return A string consisting of the information of the Event object.","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"leonghongfai"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"leonghongfai"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"leonghongfai"},"content":"        return \"[E]\" + super.toString() + \"(at: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"leonghongfai"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"leonghongfai":28}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leonghongfai"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"leonghongfai"},"content":" * Description:","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"leonghongfai"},"content":" * Simple parent class to Event, ToDo, and Deadline.","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"leonghongfai"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"leonghongfai"},"content":" * @author Leong Hong Fai","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"leonghongfai"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"leonghongfai"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"leonghongfai"},"content":"    private String name;","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"leonghongfai"},"content":"    private boolean completion;","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"leonghongfai"},"content":"    public Task(String name) {","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"leonghongfai"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"leonghongfai"},"content":"        this.completion \u003d false;","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"leonghongfai"},"content":"     * Marks current task as completed.","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"leonghongfai"},"content":"    public void setCompleted() {","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"leonghongfai"},"content":"        this.completion \u003d true;","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"leonghongfai"},"content":"     * @return X or space depending on completion status of the Task object.","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"leonghongfai"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"leonghongfai"},"content":"        return (this.completion","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"leonghongfai"},"content":"                ?\"X\"","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"leonghongfai"},"content":"                :\" \");","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"leonghongfai"},"content":"     * Simple string representation of Task.","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"leonghongfai"},"content":"     * @return A string consisting of the information of the Task object.","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"leonghongfai"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"leonghongfai"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"leonghongfai"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.name;","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"leonghongfai"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"leonghongfai":45}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leonghongfai"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"leonghongfai"},"content":" * Description:","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"leonghongfai"},"content":" * ToDos: tasks without any date/time attached to it e.g., visit new theme park.","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"leonghongfai"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"leonghongfai"},"content":" * @author Leong Hong Fai","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"leonghongfai"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"leonghongfai"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"leonghongfai"},"content":"    public ToDo(String name) {","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"leonghongfai"},"content":"        super(name);","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"leonghongfai"},"content":"     * Simple string representation of ToDo.","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"leonghongfai"},"content":"     * @return A string consisting of the information of the ToDo object.","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"leonghongfai"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"leonghongfai"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"leonghongfai"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"leonghongfai"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"leonghongfai":23}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"leonghongfai"},"content":"hello","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"leonghongfai"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"leonghongfai"},"content":"deadline","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"leonghongfai"},"content":"event example2 /at Monday","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"leonghongfai"},"content":"event","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"leonghongfai"},"content":"todo something","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"leonghongfai"},"content":"todo","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"leonghongfai"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"leonghongfai"},"content":"done 3","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"leonghongfai"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"leonghongfai"},"content":"done 6","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"leonghongfai"},"content":"delete 1","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"leonghongfai"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"leonghongfai"},"content":"delete 6","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"leonghongfai"},"content":"bye","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"leonghongfai":15}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"leonghongfai"},"content":".@ECHO OFF","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"leonghongfai":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"leonghongfai"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"leonghongfai"},"content":"    read","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"leonghongfai"},"content":"    read","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"leonghongfai":3,"-":30}}]
