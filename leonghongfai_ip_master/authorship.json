[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"leonghongfai"},"content":"# duke project template","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"leonghongfai"},"content":"3. After that, locate the `src/main/java/duke.java` file, right-click it, and choose `Run duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"leonghongfai":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"leonghongfai"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"leonghongfai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"leonghongfai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"leonghongfai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"leonghongfai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"leonghongfai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"leonghongfai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"leonghongfai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"leonghongfai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"leonghongfai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"leonghongfai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"leonghongfai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"leonghongfai"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"leonghongfai"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"leonghongfai"},"content":"    toolVersion \u003d \u00278.45\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"leonghongfai"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-09-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"leonghongfai":18,"-":44}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"leonghongfai"},"content":"T - 1 - sth","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"leonghongfai"},"content":"T - 0 - 2","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"leonghongfai"},"content":"T - 0 - 3","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"leonghongfai"},"content":"T - 0 - 5","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"leonghongfai"},"content":"T - 0 - 4","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"leonghongfai":5}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leonghongfai"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"leonghongfai"},"content":"import duke.commands.Command;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"leonghongfai"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"leonghongfai"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"leonghongfai"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"leonghongfai"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"leonghongfai"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"leonghongfai"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"leonghongfai"},"content":" * Allows users to add 3 different types of tasks, mark them as done, and delete tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"leonghongfai"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"leonghongfai"},"content":" * The commands for usage are as follows:","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"leonghongfai"},"content":" * 1. \"todo name\" where name is what the user would like the todo to be called.","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"leonghongfai"},"content":" * 2. \"event name /at YYYY-MM-DD\"","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"leonghongfai"},"content":" * 3. \"deadline name /by YYYY-MM-DD\"","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"leonghongfai"},"content":" * 4. \"list\" to view current tasks added to the tasks list.","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"leonghongfai"},"content":" * 5. \"done taskNumber\" to mark task as completed.","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"leonghongfai"},"content":" * 6. \"delete taskNumber\" to delete task.","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"leonghongfai"},"content":" * 7. \"bye\" to leave the ChatBot.","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"leonghongfai"},"content":" * Disclaimer: any other commands will not be recognised and user will be prompted to enter a valid command.","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"leonghongfai"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"leonghongfai"},"content":" * @author Leong Hong Fai","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"leonghongfai"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"leonghongfai"},"content":"public class Duke {","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"leonghongfai"},"content":"    private static final String fileAddress \u003d \"data/duke.txt\";","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"leonghongfai"},"content":"    private static Storage storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"leonghongfai"},"content":"    private static TaskList tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"leonghongfai"},"content":"     * Creates a Duke object.","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"leonghongfai"},"content":"    public Duke() {","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"leonghongfai"},"content":"        this.storage \u003d new Storage(fileAddress);","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"leonghongfai"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"leonghongfai"},"content":"            this.tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"leonghongfai"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"leonghongfai"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"leonghongfai"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"leonghongfai"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"leonghongfai"},"content":"    public String[] getResponse(String input) {","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"leonghongfai"},"content":"        return commands(input);","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"leonghongfai"},"content":"     * Facilitates which command to run based on the type of command processed by the Parser.","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"leonghongfai"},"content":"     * @throws DukeException If command is not recognised or improperly formatted.","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"leonghongfai"},"content":"    private String[] commands(String command) throws DukeException {","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"leonghongfai"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"leonghongfai"},"content":"            Command c \u003d Parser.process(command);","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"leonghongfai"},"content":"            return c.execute(storage, tasks);","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"leonghongfai"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"leonghongfai"},"content":"            return Ui.display(e.toString());","lastModifiedDate":"2021-09-02"},{"lineNumber":62,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":63,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":64,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"leonghongfai"},"content":"}","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":67,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":69,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":70,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"leonghongfai":70}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leonghongfai"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"leonghongfai"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"leonghongfai"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"leonghongfai"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"leonghongfai"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"leonghongfai"},"content":"public class Launcher {","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"leonghongfai"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"leonghongfai"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"leonghongfai"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"leonghongfai":13}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leonghongfai"},"content":"package duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"leonghongfai"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"leonghongfai"},"content":"import duke.gui.MainWindow;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"leonghongfai"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"leonghongfai"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"leonghongfai"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"leonghongfai"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"leonghongfai"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"leonghongfai"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"leonghongfai"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"leonghongfai"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"leonghongfai"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"leonghongfai"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"leonghongfai"},"content":"     * Starts the Gui.","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"leonghongfai"},"content":"     * @param stage Stage to show Gui elements.","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"leonghongfai"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"leonghongfai"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"leonghongfai"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"leonghongfai"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"leonghongfai"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"leonghongfai"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"leonghongfai"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"leonghongfai"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"leonghongfai"},"content":"            stage.show();","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"leonghongfai"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"leonghongfai"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"leonghongfai"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"leonghongfai":37}},{"path":"src/main/java/duke/commands/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leonghongfai"},"content":"package duke.commands;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"leonghongfai"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"leonghongfai"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"leonghongfai"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"leonghongfai"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"leonghongfai"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"leonghongfai"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"leonghongfai"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"leonghongfai"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"leonghongfai"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"leonghongfai"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"leonghongfai"},"content":" * Creates an AddDeadlineCommand to add deadlines to the task list.","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"leonghongfai"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"leonghongfai"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"leonghongfai"},"content":"    private String command;","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"leonghongfai"},"content":"     * Constructs new AddDeadlineCommand object.","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"leonghongfai"},"content":"     * @param command Command the object carries out.","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"leonghongfai"},"content":"    public AddDeadlineCommand(String command) {","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"leonghongfai"},"content":"        assert command.startsWith(\"deadline\");","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"leonghongfai"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"leonghongfai"},"content":"     * Executes the Command accordingly.","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"leonghongfai"},"content":"     * @param storage Storage to store changes in text file.","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"leonghongfai"},"content":"     * @param tasks Tasks compiled in a TaskList.","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"leonghongfai"},"content":"     * @return A String array containing output.","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"leonghongfai"},"content":"    public String[] execute(Storage storage, TaskList tasks) {","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"leonghongfai"},"content":"        String[] words \u003d command.split(\" \");","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"leonghongfai"},"content":"        if (words.length \u003c\u003d 3) {","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"leonghongfai"},"content":"            throw new DukeException(\"invalidDeadline\");","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"leonghongfai"},"content":"        } else if (!command.contains(\"/by\")) {","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"leonghongfai"},"content":"            throw new DukeException(\"invalidDeadline\");","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"leonghongfai"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"leonghongfai"},"content":"            LocalDate.parse(words[3]);","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"leonghongfai"},"content":"            int position \u003d command.indexOf(\"/by\");","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"leonghongfai"},"content":"            String name \u003d command.substring(9, position);","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"leonghongfai"},"content":"            String date \u003d command.substring(position + 4);","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"leonghongfai"},"content":"            Task task \u003d new Deadline(name, date);","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"leonghongfai"},"content":"            tasks.add(task);","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"leonghongfai"},"content":"            storage.appendToFile(\"data/duke.txt\", \"D - 0 - \" + name + \"- \" + date);","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"leonghongfai"},"content":"            storage.storeHistory(command);","lastModifiedDate":"2021-09-06"},{"lineNumber":54,"author":{"gitId":"leonghongfai"},"content":"            return Ui.printTaskAdded(task, tasks.size());","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"leonghongfai"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"leonghongfai"},"content":"            return new String[]{e.toString()};","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"leonghongfai"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"leonghongfai"},"content":"            return new String[]{(\"Enter valid date format!\")};","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"leonghongfai"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"leonghongfai"},"content":"            return new String[]{e.toString()};","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":62,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":63,"author":{"gitId":"leonghongfai"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"leonghongfai":63}},{"path":"src/main/java/duke/commands/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leonghongfai"},"content":"package duke.commands;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"leonghongfai"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"leonghongfai"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"leonghongfai"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"leonghongfai"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"leonghongfai"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"leonghongfai"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"leonghongfai"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"leonghongfai"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"leonghongfai"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"leonghongfai"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"leonghongfai"},"content":" * Creates an AddDeadlineCommand to add deadlines to the task list.","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"leonghongfai"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"leonghongfai"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"leonghongfai"},"content":"    private String command;","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"leonghongfai"},"content":"    public AddEventCommand(String command) {","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"leonghongfai"},"content":"        assert command.startsWith(\"event\");","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"leonghongfai"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"leonghongfai"},"content":"     * Executes the Command accordingly.","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"leonghongfai"},"content":"     * @param storage Storage to store changes in text file.","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"leonghongfai"},"content":"     * @param tasks Tasks compiled in a TaskList.","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"leonghongfai"},"content":"     * @return A String array containing output.","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"leonghongfai"},"content":"    public String[] execute(Storage storage, TaskList tasks) {","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"leonghongfai"},"content":"        String[] words \u003d command.split(\" \");","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"leonghongfai"},"content":"        if (words.length \u003c\u003d 3) {","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"leonghongfai"},"content":"            throw new DukeException(\"invalidEvent\");","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"leonghongfai"},"content":"        } else if (!command.contains(\"/at\")) {","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"leonghongfai"},"content":"            throw new DukeException(\"invalidEvent\");","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"leonghongfai"},"content":"        } else {","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"leonghongfai"},"content":"            try {","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"leonghongfai"},"content":"                LocalDate.parse(words[3]);","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"leonghongfai"},"content":"                int position \u003d command.indexOf(\"/at\");","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"leonghongfai"},"content":"                String name \u003d command.substring(6, position);","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"leonghongfai"},"content":"                String date \u003d command.substring(position + 4);","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"leonghongfai"},"content":"                Task task \u003d new Event(name, date);","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"leonghongfai"},"content":"                tasks.add(task);","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"leonghongfai"},"content":"                storage.appendToFile(\"data/duke.txt\", \"E - 0 - \" + name + \"- \" + date);","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"leonghongfai"},"content":"                storage.storeHistory(command);","lastModifiedDate":"2021-09-06"},{"lineNumber":50,"author":{"gitId":"leonghongfai"},"content":"                return Ui.printTaskAdded(task, tasks.size());","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"leonghongfai"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"leonghongfai"},"content":"                return new String[]{e.toString()};","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"leonghongfai"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"leonghongfai"},"content":"                return new String[]{(\"Enter valid date format!\")};","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"leonghongfai"},"content":"            }","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"leonghongfai"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"leonghongfai":59}},{"path":"src/main/java/duke/commands/AddToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leonghongfai"},"content":"package duke.commands;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"leonghongfai"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"leonghongfai"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"leonghongfai"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"leonghongfai"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"leonghongfai"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"leonghongfai"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"leonghongfai"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"leonghongfai"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"leonghongfai"},"content":" * Creates an AddDeadlineCommand to add deadlines to the task list.","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"leonghongfai"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"leonghongfai"},"content":"public class AddToDoCommand extends Command {","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"leonghongfai"},"content":"    private String command;","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"leonghongfai"},"content":"    public AddToDoCommand(String command) {","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"leonghongfai"},"content":"        assert command.startsWith(\"todo\");","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"leonghongfai"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"leonghongfai"},"content":"     * Executes the Command accordingly.","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"leonghongfai"},"content":"     * @param storage Storage to store changes in text file.","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"leonghongfai"},"content":"     * @param tasks Tasks compiled in a TaskList.","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"leonghongfai"},"content":"     * @return A String array containing output.","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"leonghongfai"},"content":"    public String[] execute(Storage storage, TaskList tasks) {","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"leonghongfai"},"content":"        if (command.length() \u003c 6 || command \u003d\u003d null) {","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"leonghongfai"},"content":"            throw new DukeException(\"invalidToDo\");","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"leonghongfai"},"content":"        String name \u003d command.substring(5);","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"leonghongfai"},"content":"        Task task \u003d new ToDo(name);","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"leonghongfai"},"content":"        tasks.add(task);","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"leonghongfai"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"leonghongfai"},"content":"            storage.appendToFile(\"data/duke.txt\", \"T - 0 - \" + name);","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"leonghongfai"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"leonghongfai"},"content":"            return new String[] {e.toString()};","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"leonghongfai"},"content":"        storage.storeHistory(command);","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"leonghongfai"},"content":"        return Ui.printTaskAdded(task, tasks.size());","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"leonghongfai"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"leonghongfai":46}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leonghongfai"},"content":"package duke.commands;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"leonghongfai"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"leonghongfai"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"leonghongfai"},"content":"public abstract class Command {","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"leonghongfai"},"content":"    public abstract String[] execute(Storage storage, TaskList tasks);","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"leonghongfai"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"leonghongfai":9}},{"path":"src/main/java/duke/commands/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leonghongfai"},"content":"package duke.commands;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"leonghongfai"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"leonghongfai"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"leonghongfai"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"leonghongfai"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"leonghongfai"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"leonghongfai"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"leonghongfai"},"content":" * Creates an AddDeadlineCommand to add deadlines to the task list.","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"leonghongfai"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"leonghongfai"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"leonghongfai"},"content":"    private String command;","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"leonghongfai"},"content":"    public DeleteTaskCommand(String command) {","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"leonghongfai"},"content":"        assert command.startsWith(\"delete\");","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"leonghongfai"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"leonghongfai"},"content":"     * Executes the Command accordingly.","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"leonghongfai"},"content":"     * @param storage Storage to store changes in text file.","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"leonghongfai"},"content":"     * @param tasks Tasks compiled in a TaskList.","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"leonghongfai"},"content":"     * @return A String array containing output.","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"leonghongfai"},"content":"    public String[] execute(Storage storage, TaskList tasks) {","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"leonghongfai"},"content":"        String restOfCommand \u003d \"\";","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"leonghongfai"},"content":"        boolean numeric;","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"leonghongfai"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"leonghongfai"},"content":"            restOfCommand \u003d command.substring(7);","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"leonghongfai"},"content":"            int temp \u003d Integer.parseInt(restOfCommand);","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"leonghongfai"},"content":"            numeric \u003d true;","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"leonghongfai"},"content":"        } catch (NumberFormatException err) {","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"leonghongfai"},"content":"            numeric \u003d false;","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"leonghongfai"},"content":"        } catch (StringIndexOutOfBoundsException err) {","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"leonghongfai"},"content":"            throw new DukeException(\"invalidNumberFormat\");","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"leonghongfai"},"content":"        if (!numeric) {","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"leonghongfai"},"content":"            throw new DukeException(\"invalidNumberFormatDelete\");","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"leonghongfai"},"content":"        int taskNum \u003d Integer.parseInt(restOfCommand) - 1;","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"leonghongfai"},"content":"        if (!(taskNum \u003c tasks.size())) {","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"leonghongfai"},"content":"            throw new DukeException(\"invalidTaskNumber\");","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"leonghongfai"},"content":"        storage.editFileContentsForDeletion(taskNum + 1);","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"leonghongfai"},"content":"        Task currTask \u003d tasks.get(taskNum);","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"leonghongfai"},"content":"        tasks.remove(taskNum);","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"leonghongfai"},"content":"        Storage.storeDeleted(currTask);","lastModifiedDate":"2021-09-06"},{"lineNumber":50,"author":{"gitId":"leonghongfai"},"content":"        storage.storeHistory(command);","lastModifiedDate":"2021-09-06"},{"lineNumber":51,"author":{"gitId":"leonghongfai"},"content":"        return Ui.printDeleteTask(currTask, tasks.size());","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"leonghongfai"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"leonghongfai":53}},{"path":"src/main/java/duke/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leonghongfai"},"content":"package duke.commands;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"leonghongfai"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"leonghongfai"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"leonghongfai"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"leonghongfai"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"leonghongfai"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"leonghongfai"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"leonghongfai"},"content":" * Creates an AddDeadlineCommand to add deadlines to the task list.","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"leonghongfai"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"leonghongfai"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"leonghongfai"},"content":"    private String command;","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"leonghongfai"},"content":"    public DoneCommand(String command) {","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"leonghongfai"},"content":"        assert command.startsWith(\"done\");","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"leonghongfai"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"leonghongfai"},"content":"     * Executes the Command accordingly.","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"leonghongfai"},"content":"     * @param storage Storage to store changes in text file.","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"leonghongfai"},"content":"     * @param tasks Tasks compiled in a TaskList.","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"leonghongfai"},"content":"     * @return A String array containing output.","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"leonghongfai"},"content":"    public String[] execute(Storage storage, TaskList tasks) {","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"leonghongfai"},"content":"        boolean numeric;","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"leonghongfai"},"content":"        String restOfCommand \u003d \"\";","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"leonghongfai"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"leonghongfai"},"content":"            restOfCommand \u003d command.substring(5);","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"leonghongfai"},"content":"            int temp \u003d Integer.parseInt(restOfCommand);","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"leonghongfai"},"content":"            numeric \u003d true;","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"leonghongfai"},"content":"        } catch (NumberFormatException err) {","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"leonghongfai"},"content":"            numeric \u003d false;","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"leonghongfai"},"content":"        } catch (StringIndexOutOfBoundsException err) {","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"leonghongfai"},"content":"            throw new DukeException(\"invalidNumberFormat\");","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"leonghongfai"},"content":"        if (!numeric) {","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"leonghongfai"},"content":"            throw new DukeException(\"invalidNumberFormat\");","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"leonghongfai"},"content":"        int taskNum \u003d Integer.parseInt(restOfCommand) - 1;","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"leonghongfai"},"content":"        if (!(taskNum \u003c tasks.size())) {","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"leonghongfai"},"content":"            throw new DukeException(\"invalidTaskNumber\");","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"leonghongfai"},"content":"        Task currTask \u003d tasks.get(taskNum);","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"leonghongfai"},"content":"        currTask.setCompleted();","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"leonghongfai"},"content":"        storage.editFileContentsForCompletion(taskNum + 1);","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"leonghongfai"},"content":"        storage.storeHistory(command);","lastModifiedDate":"2021-09-06"},{"lineNumber":50,"author":{"gitId":"leonghongfai"},"content":"        return Ui.printTaskCompleted(currTask);","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"leonghongfai"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"leonghongfai":52}},{"path":"src/main/java/duke/commands/EndCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leonghongfai"},"content":"package duke.commands;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"leonghongfai"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"leonghongfai"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"leonghongfai"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"leonghongfai"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"leonghongfai"},"content":" * Creates an AddDeadlineCommand to add deadlines to the task list.","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"leonghongfai"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"leonghongfai"},"content":"public class EndCommand extends Command {","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"leonghongfai"},"content":"    private String command;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"leonghongfai"},"content":"    public EndCommand(String command) {","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"leonghongfai"},"content":"        assert command.startsWith(\"bye\");","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"leonghongfai"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"leonghongfai"},"content":"     * Executes the Command accordingly.","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"leonghongfai"},"content":"     * @param storage Storage to store changes in text file.","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"leonghongfai"},"content":"     * @param tasks Tasks compiled in a TaskList.","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"leonghongfai"},"content":"     * @return A String array containing output.","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"leonghongfai"},"content":"    public String[] execute(Storage storage, TaskList tasks) {","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"leonghongfai"},"content":"        return Ui.end();","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"leonghongfai"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"leonghongfai":28}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leonghongfai"},"content":"package duke.commands;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"leonghongfai"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"leonghongfai"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"leonghongfai"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"leonghongfai"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"leonghongfai"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"leonghongfai"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"leonghongfai"},"content":" * Creates an AddDeadlineCommand to add deadlines to the task list.","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"leonghongfai"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"leonghongfai"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"leonghongfai"},"content":"    private String command;","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"leonghongfai"},"content":"    public FindCommand(String command) {","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"leonghongfai"},"content":"        assert command.startsWith(\"find\");","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"leonghongfai"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"leonghongfai"},"content":"     * Executes the Command accordingly.","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"leonghongfai"},"content":"     * @param storage Storage to store changes in text file.","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"leonghongfai"},"content":"     * @param tasks Tasks compiled in a TaskList.","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"leonghongfai"},"content":"     * @return A String array containing output.","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"leonghongfai"},"content":"    public String[] execute(Storage storage, TaskList tasks) {","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"leonghongfai"},"content":"        Task[] result \u003d new Task[tasks.size()];","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"leonghongfai"},"content":"        String[] words \u003d command.split(\" \");","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"leonghongfai"},"content":"        if (words.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"leonghongfai"},"content":"            throw new DukeException(\"invalidFindTask\");","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"leonghongfai"},"content":"        String piece \u003d command.substring(5);","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"leonghongfai"},"content":"        int count \u003d 0;","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"leonghongfai"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"leonghongfai"},"content":"            String name \u003d tasks.get(i).getName();","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"leonghongfai"},"content":"            if (name.contains(piece)) {","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"leonghongfai"},"content":"                result[count] \u003d tasks.get(i);","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"leonghongfai"},"content":"                count++;","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"leonghongfai"},"content":"            }","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"leonghongfai"},"content":"        return Ui.printFindTask(result);","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"leonghongfai"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"leonghongfai":44}},{"path":"src/main/java/duke/commands/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leonghongfai"},"content":"package duke.commands;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"leonghongfai"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"leonghongfai"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"leonghongfai"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"leonghongfai"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"leonghongfai"},"content":" * Creates an AddDeadlineCommand to add deadlines to the task list.","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"leonghongfai"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"leonghongfai"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"leonghongfai"},"content":"    private String command;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"leonghongfai"},"content":"    public InvalidCommand(String command) {","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"leonghongfai"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"leonghongfai"},"content":"     * Executes the Command accordingly.","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"leonghongfai"},"content":"     * @param storage Storage to store changes in text file.","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"leonghongfai"},"content":"     * @param tasks Tasks compiled in a TaskList.","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"leonghongfai"},"content":"     * @return A String array containing output.","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"leonghongfai"},"content":"    public String[] execute(Storage storage, TaskList tasks) {","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"leonghongfai"},"content":"        throw new DukeException(\"invalidCommand\");","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"leonghongfai"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"leonghongfai":27}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leonghongfai"},"content":"package duke.commands;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"leonghongfai"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"leonghongfai"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"leonghongfai"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"leonghongfai"},"content":" * Creates an AddDeadlineCommand to add deadlines to the task list.","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"leonghongfai"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"leonghongfai"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"leonghongfai"},"content":"    private String command;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"leonghongfai"},"content":"    public ListCommand(String command) {","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"leonghongfai"},"content":"        assert command.startsWith(\"list\");","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"leonghongfai"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"leonghongfai"},"content":"     * Executes the Command accordingly.","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"leonghongfai"},"content":"     * @param storage Storage to store changes in text file.","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"leonghongfai"},"content":"     * @param tasks Tasks compiled in a TaskList.","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"leonghongfai"},"content":"     * @return A String array containing output.","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"leonghongfai"},"content":"    public String[] execute(Storage storage, TaskList tasks) {","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"leonghongfai"},"content":"        return tasks.printList(command);","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"leonghongfai"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"leonghongfai":27}},{"path":"src/main/java/duke/commands/ShowHistoryCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leonghongfai"},"content":"package duke.commands;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"leonghongfai"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"leonghongfai"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"leonghongfai"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"leonghongfai"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"leonghongfai"},"content":"public class ShowHistoryCommand extends Command {","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"leonghongfai"},"content":"    private String command;","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"leonghongfai"},"content":"    public ShowHistoryCommand(String command) {","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"leonghongfai"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"leonghongfai"},"content":"     * Executes the Command accordingly.","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"leonghongfai"},"content":"     * @param storage Storage to store changes in text file.","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"leonghongfai"},"content":"     * @param tasks Tasks compiled in a TaskList.","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"leonghongfai"},"content":"     * @return A String array containing output.","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"leonghongfai"},"content":"    public String[] execute(Storage storage, TaskList tasks) {","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"leonghongfai"},"content":"        try {","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"leonghongfai"},"content":"            int len \u003d storage.historySize();","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"leonghongfai"},"content":"            String[] result \u003d new String[len];","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"leonghongfai"},"content":"            for (int i \u003d 0; i \u003c len; i++) {","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"leonghongfai"},"content":"                result[i] \u003d storage.getHistoryAt(i);","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"leonghongfai"},"content":"            }","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"leonghongfai"},"content":"            return Ui.printHistory(result);","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"leonghongfai"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"leonghongfai"},"content":"            return Ui.display(e.toString());","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"leonghongfai"},"content":"}","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"leonghongfai":35}},{"path":"src/main/java/duke/commands/UndoAddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leonghongfai"},"content":"package duke.commands;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"leonghongfai"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"leonghongfai"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"leonghongfai"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"leonghongfai"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"leonghongfai"},"content":"public class UndoAddTaskCommand extends Command {","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"leonghongfai"},"content":"    private String command;","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"leonghongfai"},"content":"    public UndoAddTaskCommand(String command) {","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"leonghongfai"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"leonghongfai"},"content":"     * Executes the Command accordingly.","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"leonghongfai"},"content":"     * @param storage Storage to store changes in text file.","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"leonghongfai"},"content":"     * @param tasks Tasks compiled in a TaskList.","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"leonghongfai"},"content":"     * @return A String array containing output.","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"leonghongfai"},"content":"    public String[] execute(Storage storage, TaskList tasks) {","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"leonghongfai"},"content":"        storage.editFileContentsForDeletion(tasks.size());","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"leonghongfai"},"content":"        Task currTask \u003d tasks.get(tasks.size() - 1);","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"leonghongfai"},"content":"        tasks.remove(tasks.size() - 1);","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"leonghongfai"},"content":"        Storage.deleteLastCommand();","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"leonghongfai"},"content":"        return Ui.printDeleteTask(currTask, tasks.size());","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"leonghongfai"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"leonghongfai":29}},{"path":"src/main/java/duke/commands/UndoDeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leonghongfai"},"content":"package duke.commands;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"leonghongfai"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"leonghongfai"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"leonghongfai"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"leonghongfai"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"leonghongfai"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"leonghongfai"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"leonghongfai"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"leonghongfai"},"content":"public class UndoDeleteTaskCommand extends Command {","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"leonghongfai"},"content":"    private String command;","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"leonghongfai"},"content":"    public UndoDeleteTaskCommand(String command) {","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"leonghongfai"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"leonghongfai"},"content":"     * Executes the Command accordingly.","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"leonghongfai"},"content":"     * @param storage Storage to store changes in text file.","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"leonghongfai"},"content":"     * @param tasks Tasks compiled in a TaskList.","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"leonghongfai"},"content":"     * @return A String array containing output.","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"leonghongfai"},"content":"    public String[] execute(Storage storage, TaskList tasks) {","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"leonghongfai"},"content":"        Task deletedTask \u003d Storage.getDeleted();","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"leonghongfai"},"content":"        tasks.add(deletedTask);","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"leonghongfai"},"content":"        char type \u003d deletedTask.toString().charAt(1);","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"leonghongfai"},"content":"        switch (type) {","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"leonghongfai"},"content":"        case (\u0027T\u0027):","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"leonghongfai"},"content":"            try {","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"leonghongfai"},"content":"                storage.appendToFile(\"data/duke.txt\", \"T - 0 - \" + deletedTask.getName());","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"leonghongfai"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"leonghongfai"},"content":"                return Ui.display(e.getMessage());","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"leonghongfai"},"content":"            }","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"leonghongfai"},"content":"            Storage.deleteLastCommand();","lastModifiedDate":"2021-09-06"},{"lineNumber":38,"author":{"gitId":"leonghongfai"},"content":"            Storage.removeDeletedTask();","lastModifiedDate":"2021-09-06"},{"lineNumber":39,"author":{"gitId":"leonghongfai"},"content":"            return Ui.printTaskAdded(deletedTask, tasks.size());","lastModifiedDate":"2021-09-06"},{"lineNumber":40,"author":{"gitId":"leonghongfai"},"content":"        case (\u0027E\u0027):","lastModifiedDate":"2021-09-06"},{"lineNumber":41,"author":{"gitId":"leonghongfai"},"content":"            Event deleted \u003d (Event) Storage.getDeleted();","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"leonghongfai"},"content":"            String date \u003d deleted.getUnformattedDate();","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"leonghongfai"},"content":"            String name \u003d deleted.getName();","lastModifiedDate":"2021-09-06"},{"lineNumber":44,"author":{"gitId":"leonghongfai"},"content":"            try {","lastModifiedDate":"2021-09-06"},{"lineNumber":45,"author":{"gitId":"leonghongfai"},"content":"                storage.appendToFile(\"data/duke.txt\", \"E - 0 - \" + name","lastModifiedDate":"2021-09-06"},{"lineNumber":46,"author":{"gitId":"leonghongfai"},"content":"                        + \"- \" + date);","lastModifiedDate":"2021-09-06"},{"lineNumber":47,"author":{"gitId":"leonghongfai"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":48,"author":{"gitId":"leonghongfai"},"content":"                return Ui.display(e.getMessage());","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"leonghongfai"},"content":"            }","lastModifiedDate":"2021-09-06"},{"lineNumber":50,"author":{"gitId":"leonghongfai"},"content":"            Storage.deleteLastCommand();","lastModifiedDate":"2021-09-06"},{"lineNumber":51,"author":{"gitId":"leonghongfai"},"content":"            Storage.removeDeletedTask();","lastModifiedDate":"2021-09-06"},{"lineNumber":52,"author":{"gitId":"leonghongfai"},"content":"            return Ui.printTaskAdded(deletedTask, tasks.size());","lastModifiedDate":"2021-09-06"},{"lineNumber":53,"author":{"gitId":"leonghongfai"},"content":"        case (\u0027D\u0027):","lastModifiedDate":"2021-09-06"},{"lineNumber":54,"author":{"gitId":"leonghongfai"},"content":"            Deadline deadline \u003d (Deadline) Storage.getDeleted();","lastModifiedDate":"2021-09-06"},{"lineNumber":55,"author":{"gitId":"leonghongfai"},"content":"            String deadlineDate \u003d deadline.getUnformattedDate();","lastModifiedDate":"2021-09-06"},{"lineNumber":56,"author":{"gitId":"leonghongfai"},"content":"            String deadlineName \u003d deadline.getName();","lastModifiedDate":"2021-09-06"},{"lineNumber":57,"author":{"gitId":"leonghongfai"},"content":"            try {","lastModifiedDate":"2021-09-06"},{"lineNumber":58,"author":{"gitId":"leonghongfai"},"content":"                storage.appendToFile(\"data/duke.txt\", \"D - 0 - \" + deadlineName + \"- \"","lastModifiedDate":"2021-09-06"},{"lineNumber":59,"author":{"gitId":"leonghongfai"},"content":"                        + deadlineDate);","lastModifiedDate":"2021-09-06"},{"lineNumber":60,"author":{"gitId":"leonghongfai"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":61,"author":{"gitId":"leonghongfai"},"content":"                return Ui.display(e.getMessage());","lastModifiedDate":"2021-09-06"},{"lineNumber":62,"author":{"gitId":"leonghongfai"},"content":"            }","lastModifiedDate":"2021-09-06"},{"lineNumber":63,"author":{"gitId":"leonghongfai"},"content":"            Storage.deleteLastCommand();","lastModifiedDate":"2021-09-06"},{"lineNumber":64,"author":{"gitId":"leonghongfai"},"content":"            Storage.removeDeletedTask();","lastModifiedDate":"2021-09-06"},{"lineNumber":65,"author":{"gitId":"leonghongfai"},"content":"            return Ui.printTaskAdded(deletedTask, tasks.size());","lastModifiedDate":"2021-09-06"},{"lineNumber":66,"author":{"gitId":"leonghongfai"},"content":"        default:","lastModifiedDate":"2021-09-06"},{"lineNumber":67,"author":{"gitId":"leonghongfai"},"content":"            return Ui.display(\"Unknown error has occurred\");","lastModifiedDate":"2021-09-06"},{"lineNumber":68,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":69,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":70,"author":{"gitId":"leonghongfai"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"leonghongfai":70}},{"path":"src/main/java/duke/commands/UndoDoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leonghongfai"},"content":"package duke.commands;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"leonghongfai"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"leonghongfai"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"leonghongfai"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"leonghongfai"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"leonghongfai"},"content":"public class UndoDoneCommand extends Command {","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"leonghongfai"},"content":"    private String command;","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"leonghongfai"},"content":"    public UndoDoneCommand(String command) {","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"leonghongfai"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"leonghongfai"},"content":"     * Executes the Command accordingly.","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"leonghongfai"},"content":"     * @param storage Storage to store changes in text file.","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"leonghongfai"},"content":"     * @param tasks Tasks compiled in a TaskList.","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"leonghongfai"},"content":"     * @return A String array containing output.","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"leonghongfai"},"content":"    public String[] execute(Storage storage, TaskList tasks) {","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"leonghongfai"},"content":"        String instruction \u003d Storage.getLastCommand();","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"leonghongfai"},"content":"        int taskNum \u003d Integer.parseInt(instruction.substring(5));","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"leonghongfai"},"content":"        System.out.println(taskNum);","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"leonghongfai"},"content":"        Task currTask \u003d tasks.get(taskNum - 1);","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"leonghongfai"},"content":"        currTask.setUncompleted();","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"leonghongfai"},"content":"        storage.editFileContentsForUndoCompletion(taskNum);","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"leonghongfai"},"content":"        Storage.deleteLastCommand();","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"leonghongfai"},"content":"        return Ui.printTaskUncompleted(currTask);","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"leonghongfai"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"leonghongfai":32}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leonghongfai"},"content":"package duke.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"leonghongfai"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"leonghongfai"},"content":" * Stores exceptions which generate a variety of error messages based on the error encountered during runtime.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"leonghongfai"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"leonghongfai"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"leonghongfai"},"content":"    private final String INVALID_TODO \u003d \"Enter a valid todo in this format \u0027todo \u003ctask here\u003e\u0027\";","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"leonghongfai"},"content":"    private final String NO_TASKS_EXCEPTION \u003d \"There are no tasks in the list yet!\";","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"leonghongfai"},"content":"    private final String INVALID_DEADLINE \u003d \"Enter a valid deadline in this format \u0027deadline \u003ctask\u003e /by \u003cYYYY-MM-DD\u003e\u0027\";","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"leonghongfai"},"content":"    private final String INVALID_EVENT \u003d \"Enter a valid event in this format \u0027event \u003ctask\u003e /at \u003cYYYY-MM-DD\u003e\u0027\";","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"leonghongfai"},"content":"    private final String INVALID_TASK_NUMBER \u003d \"Current task number does not exist. Enter \u003clist\u003e to see all tasks\";","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"leonghongfai"},"content":"    private final String INVALID_NUMBER_FORMAT \u003d \"Enter a valid number in this format \u0027done \u003cnumber\u003e\u0027\";","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"leonghongfai"},"content":"    private final String INVALID_COMMAND \u003d \"Enter a valid command!\";","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"leonghongfai"},"content":"    private final String INVALID_NUMBER_FORMAT_DELETE \u003d \"Enter a valid number in this format \u0027delete \u003cnumber\u003e\u0027\";","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"leonghongfai"},"content":"    private final String INVALID_FIND_TASK \u003d \"Enter a valid find task format \u0027find \u003ctask name\u003e\";","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"leonghongfai"},"content":"    private final String NO_CHANGES_TO_UNDO \u003d \"No changes to undo!\";","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"leonghongfai"},"content":"    private final String NO_COMMANDS_HAVE_BEEN_MADE \u003d \"No prior commands have been made!\";","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"leonghongfai"},"content":"    private String type;","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"leonghongfai"},"content":"    private String errorMessage;","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"leonghongfai"},"content":"     * Creates DukeException object.","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"leonghongfai"},"content":"     * @param type Type of error message to throw.","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"leonghongfai"},"content":"    public DukeException(String type) {","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"leonghongfai"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"leonghongfai"},"content":"        switch (type) {","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"leonghongfai"},"content":"        case (\"noCommandsHaveBeenMade\"):","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"leonghongfai"},"content":"            errorMessage \u003d NO_COMMANDS_HAVE_BEEN_MADE;","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"leonghongfai"},"content":"            break;","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"leonghongfai"},"content":"        case (\"noChangesToUndo\"):","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"leonghongfai"},"content":"            errorMessage \u003d NO_CHANGES_TO_UNDO;","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"leonghongfai"},"content":"            break;","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"leonghongfai"},"content":"        case (\"invalidToDo\"):","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"leonghongfai"},"content":"            errorMessage \u003d INVALID_TODO;","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"leonghongfai"},"content":"            break;","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"leonghongfai"},"content":"        case (\"invalidFindTask\"):","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"leonghongfai"},"content":"            errorMessage \u003d INVALID_FIND_TASK;","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"leonghongfai"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"leonghongfai"},"content":"        case (\"noTasksException\"):","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"leonghongfai"},"content":"            errorMessage \u003d NO_TASKS_EXCEPTION;","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"leonghongfai"},"content":"            break;","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"leonghongfai"},"content":"        case (\"invalidDeadline\"):","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"leonghongfai"},"content":"            errorMessage \u003d INVALID_DEADLINE;","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"leonghongfai"},"content":"            break;","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"leonghongfai"},"content":"        case (\"invalidEvent\"):","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"leonghongfai"},"content":"            errorMessage \u003d INVALID_EVENT;","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"leonghongfai"},"content":"            break;","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"leonghongfai"},"content":"        case (\"invalidTaskNumber\"):","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"leonghongfai"},"content":"            errorMessage \u003d INVALID_TASK_NUMBER;","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"leonghongfai"},"content":"            break;","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"leonghongfai"},"content":"        case (\"invalidNumberFormat\"):","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"leonghongfai"},"content":"            errorMessage \u003d INVALID_NUMBER_FORMAT;","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"leonghongfai"},"content":"            break;","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"leonghongfai"},"content":"        case (\"invalidCommand\"):","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"leonghongfai"},"content":"            errorMessage \u003d INVALID_COMMAND;","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"leonghongfai"},"content":"            break;","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"leonghongfai"},"content":"        case (\"invalidNumberFormatDelete\"):","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"leonghongfai"},"content":"            errorMessage \u003d INVALID_NUMBER_FORMAT_DELETE;","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"leonghongfai"},"content":"            break;","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"leonghongfai"},"content":"        default:","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"leonghongfai"},"content":"            errorMessage \u003d \"Unknown error has occurred.\";","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":67,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":69,"author":{"gitId":"leonghongfai"},"content":"     * Simple string representation of DukeException.","lastModifiedDate":"2021-08-18"},{"lineNumber":70,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":71,"author":{"gitId":"leonghongfai"},"content":"     * @return A string consisting of the relevant error message.","lastModifiedDate":"2021-08-18"},{"lineNumber":72,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":73,"author":{"gitId":"leonghongfai"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":74,"author":{"gitId":"leonghongfai"},"content":"        return errorMessage;","lastModifiedDate":"2021-08-18"},{"lineNumber":75,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":76,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":77,"author":{"gitId":"leonghongfai"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"leonghongfai":77}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leonghongfai"},"content":"package duke.gui;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"leonghongfai"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"leonghongfai"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"leonghongfai"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"leonghongfai"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"leonghongfai"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"leonghongfai"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"leonghongfai"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"leonghongfai"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"leonghongfai"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"leonghongfai"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"leonghongfai"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"leonghongfai"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"leonghongfai"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"leonghongfai"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"leonghongfai"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"leonghongfai"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"leonghongfai"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"leonghongfai"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"leonghongfai"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"leonghongfai"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"leonghongfai"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"leonghongfai"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"leonghongfai"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"leonghongfai"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"leonghongfai"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"leonghongfai"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"leonghongfai"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"leonghongfai"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"leonghongfai"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"leonghongfai"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"leonghongfai"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"leonghongfai"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"leonghongfai"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"leonghongfai"},"content":"    private void flip() {","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"leonghongfai"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"leonghongfai"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"leonghongfai"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"leonghongfai"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"leonghongfai"},"content":"     * Gets the DialogBox for the user.","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"leonghongfai"},"content":"     * @param text Text to be displayed in the DialogBox.","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"leonghongfai"},"content":"     * @param img Image to be displayed in the DialogBox.","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"leonghongfai"},"content":"     * @return A DialogBox showing user profile picture and input text.","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"leonghongfai"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"leonghongfai"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":64,"author":{"gitId":"leonghongfai"},"content":"     * Gets the DialogBox for Duke.","lastModifiedDate":"2021-09-02"},{"lineNumber":65,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":66,"author":{"gitId":"leonghongfai"},"content":"     * @param text Text to be displayed in the DialogBox.","lastModifiedDate":"2021-09-02"},{"lineNumber":67,"author":{"gitId":"leonghongfai"},"content":"     * @param img Image to be displayed in the DialogBox.","lastModifiedDate":"2021-09-02"},{"lineNumber":68,"author":{"gitId":"leonghongfai"},"content":"     * @return A DialogBox showing Duke profile picture and output text.","lastModifiedDate":"2021-09-02"},{"lineNumber":69,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":70,"author":{"gitId":"leonghongfai"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-02"},{"lineNumber":71,"author":{"gitId":"leonghongfai"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-02"},{"lineNumber":72,"author":{"gitId":"leonghongfai"},"content":"        db.flip();","lastModifiedDate":"2021-09-01"},{"lineNumber":73,"author":{"gitId":"leonghongfai"},"content":"        return db;","lastModifiedDate":"2021-09-01"},{"lineNumber":74,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":75,"author":{"gitId":"leonghongfai"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"leonghongfai":75}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leonghongfai"},"content":"package duke.gui;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"leonghongfai"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"leonghongfai"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"leonghongfai"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"leonghongfai"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"leonghongfai"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"leonghongfai"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"leonghongfai"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"leonghongfai"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"leonghongfai"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"leonghongfai"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"leonghongfai"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"leonghongfai"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"leonghongfai"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"leonghongfai"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"leonghongfai"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"leonghongfai"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"leonghongfai"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"leonghongfai"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"leonghongfai"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"leonghongfai"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"leonghongfai"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"leonghongfai"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"leonghongfai"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"leonghongfai"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"leonghongfai"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"leonghongfai"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"leonghongfai"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"leonghongfai"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"leonghongfai"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"leonghongfai"},"content":"        String[] content \u003d Ui.printIntro();","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"leonghongfai"},"content":"        String[] listContent \u003d TaskList.printList(\"list\");","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"leonghongfai"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"leonghongfai"},"content":"                DialogBox.getDukeDialog(String.join(\"\\n\", content), dukeImage),","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"leonghongfai"},"content":"                DialogBox.getDukeDialog(String.join(\"\\n\", listContent), dukeImage)","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"leonghongfai"},"content":"        );","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"leonghongfai"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"leonghongfai"},"content":"        duke \u003d d;","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"leonghongfai"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"leonghongfai"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"leonghongfai"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"leonghongfai"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"leonghongfai"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"leonghongfai"},"content":"        String[] response \u003d duke.getResponse(input);","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"leonghongfai"},"content":"        if (response[0] \u003d\u003d \"Bye. Hope to see you again soon!\") {","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"leonghongfai"},"content":"            Platform.exit();","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"leonghongfai"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"leonghongfai"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-02"},{"lineNumber":62,"author":{"gitId":"leonghongfai"},"content":"                DialogBox.getDukeDialog(String.join(\"\\n\", response), dukeImage)","lastModifiedDate":"2021-09-02"},{"lineNumber":63,"author":{"gitId":"leonghongfai"},"content":"        );","lastModifiedDate":"2021-09-02"},{"lineNumber":64,"author":{"gitId":"leonghongfai"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-02"},{"lineNumber":65,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":66,"author":{"gitId":"leonghongfai"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"leonghongfai":66}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leonghongfai"},"content":"package duke.parser;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"leonghongfai"},"content":"import duke.commands.*;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"leonghongfai"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"leonghongfai"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"leonghongfai"},"content":" * Reads the command input and processes it to decipher what actions Duke should carry out.","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"leonghongfai"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"leonghongfai"},"content":"public class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"leonghongfai"},"content":"    private String command;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"leonghongfai"},"content":"    public Parser(String command) {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"leonghongfai"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"leonghongfai"},"content":"     * Reads the command and processes the first word to determine what the command type is.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"leonghongfai"},"content":"     * @param command Command that is passed into the parser.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"leonghongfai"},"content":"     * @return Type of Command to be executed.","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"leonghongfai"},"content":"    public static Command process(String command) {","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"leonghongfai"},"content":"        assert command !\u003d null;","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"leonghongfai"},"content":"        String[] words \u003d command.split(\" \");","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"leonghongfai"},"content":"        String parsed \u003d words[0];","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"leonghongfai"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"leonghongfai"},"content":"            switch (parsed) {","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"leonghongfai"},"content":"            case (\"history\"):","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"leonghongfai"},"content":"                return new ShowHistoryCommand(command);","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"leonghongfai"},"content":"            case (\"undo\"):","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"leonghongfai"},"content":"                return UndoParser.process(command);","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"leonghongfai"},"content":"            case (\"bye\"):","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"leonghongfai"},"content":"                return new EndCommand(command);","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"leonghongfai"},"content":"            case (\"list\"):","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"leonghongfai"},"content":"                return new ListCommand(command);","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"leonghongfai"},"content":"            case (\"deadline\"):","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"leonghongfai"},"content":"                return new AddDeadlineCommand(command);","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"leonghongfai"},"content":"            case (\"event\"):","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"leonghongfai"},"content":"                return new AddEventCommand(command);","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"leonghongfai"},"content":"            case (\"done\"):","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"leonghongfai"},"content":"                return new DoneCommand(command);","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"leonghongfai"},"content":"            case (\"delete\"):","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"leonghongfai"},"content":"                return new DeleteTaskCommand(command);","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"leonghongfai"},"content":"            case (\"find\"):","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"leonghongfai"},"content":"                return new FindCommand(command);","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"leonghongfai"},"content":"            case (\"todo\"):","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"leonghongfai"},"content":"                return new AddToDoCommand(command);","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"leonghongfai"},"content":"            default:","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"leonghongfai"},"content":"                return new InvalidCommand(command);","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"leonghongfai"},"content":"            }","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"leonghongfai"},"content":"        } catch (DukeException err) {","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"leonghongfai"},"content":"            return new InvalidCommand(command);","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"leonghongfai"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"leonghongfai":57}},{"path":"src/main/java/duke/parser/UndoParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leonghongfai"},"content":"package duke.parser;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"leonghongfai"},"content":"import duke.commands.Command;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"leonghongfai"},"content":"import duke.commands.InvalidCommand;","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"leonghongfai"},"content":"import duke.commands.UndoAddTaskCommand;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"leonghongfai"},"content":"import duke.commands.UndoDeleteTaskCommand;","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"leonghongfai"},"content":"import duke.commands.UndoDoneCommand;","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"leonghongfai"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"leonghongfai"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"leonghongfai"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"leonghongfai"},"content":"public class UndoParser {","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"leonghongfai"},"content":"    private String command;","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"leonghongfai"},"content":"    public UndoParser(String command) {","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"leonghongfai"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"leonghongfai"},"content":"     * Reads the command and processes the first word to determine what the command type is.","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"leonghongfai"},"content":"     * @param command Command that is passed into the parser.","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"leonghongfai"},"content":"     * @return Type of Command to be executed.","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"leonghongfai"},"content":"    public static Command process(String command) {","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"leonghongfai"},"content":"        if (!(command.equals(\"undo\"))) {","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"leonghongfai"},"content":"            throw new DukeException(\"invalidCommand\");","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"leonghongfai"},"content":"        String instruction \u003d Storage.getLastCommand();","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"leonghongfai"},"content":"        String[] words \u003d instruction.split(\" \");","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"leonghongfai"},"content":"        String parsed \u003d words[0];","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"leonghongfai"},"content":"        try {","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"leonghongfai"},"content":"            switch (parsed) {","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"leonghongfai"},"content":"            case (\"delete\"):","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"leonghongfai"},"content":"                return new UndoDeleteTaskCommand(command);","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"leonghongfai"},"content":"            case (\"deadline\"):","lastModifiedDate":"2021-09-06"},{"lineNumber":38,"author":{"gitId":"leonghongfai"},"content":"            case (\"event\"):","lastModifiedDate":"2021-09-06"},{"lineNumber":39,"author":{"gitId":"leonghongfai"},"content":"            case (\"todo\"):","lastModifiedDate":"2021-09-06"},{"lineNumber":40,"author":{"gitId":"leonghongfai"},"content":"                return new UndoAddTaskCommand(command);","lastModifiedDate":"2021-09-06"},{"lineNumber":41,"author":{"gitId":"leonghongfai"},"content":"            case (\"done\"):","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"leonghongfai"},"content":"                return new UndoDoneCommand(command);","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"leonghongfai"},"content":"            default:","lastModifiedDate":"2021-09-06"},{"lineNumber":44,"author":{"gitId":"leonghongfai"},"content":"                throw new DukeException(\"noChangesToUndo\");","lastModifiedDate":"2021-09-06"},{"lineNumber":45,"author":{"gitId":"leonghongfai"},"content":"            }","lastModifiedDate":"2021-09-06"},{"lineNumber":46,"author":{"gitId":"leonghongfai"},"content":"        } catch (DukeException err) {","lastModifiedDate":"2021-09-06"},{"lineNumber":47,"author":{"gitId":"leonghongfai"},"content":"            Ui.display(err.toString());","lastModifiedDate":"2021-09-06"},{"lineNumber":48,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"leonghongfai"},"content":"        return new InvalidCommand(command);","lastModifiedDate":"2021-09-06"},{"lineNumber":50,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":51,"author":{"gitId":"leonghongfai"},"content":"}","lastModifiedDate":"2021-09-06"},{"lineNumber":52,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"leonghongfai":52}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leonghongfai"},"content":"package duke.storage;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"leonghongfai"},"content":"import java.io.File;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"leonghongfai"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"leonghongfai"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"leonghongfai"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"leonghongfai"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"leonghongfai"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"leonghongfai"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"leonghongfai"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"leonghongfai"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"leonghongfai"},"content":"import static java.nio.file.StandardCopyOption.REPLACE_EXISTING;","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"leonghongfai"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"leonghongfai"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"leonghongfai"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"leonghongfai"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"leonghongfai"},"content":" * Stores in real-time the edits to the TaskList directly into the destination text file.","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"leonghongfai"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"leonghongfai"},"content":"public class Storage {","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"leonghongfai"},"content":"    private static ArrayList\u003cString\u003e history;","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"leonghongfai"},"content":"    private static ArrayList\u003cTask\u003e deleted;","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"leonghongfai"},"content":"    private String filepath;","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"leonghongfai"},"content":"     * Creates new Storage object.","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"leonghongfai"},"content":"     * @param filepath Filepath of text file to store information in.","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"leonghongfai"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"leonghongfai"},"content":"        assert filepath !\u003d null;","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"leonghongfai"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"leonghongfai"},"content":"        this.history \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-06"},{"lineNumber":39,"author":{"gitId":"leonghongfai"},"content":"        this.deleted \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-06"},{"lineNumber":40,"author":{"gitId":"leonghongfai"},"content":"        makeFile();","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"leonghongfai"},"content":"        load();","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":45,"author":{"gitId":"leonghongfai"},"content":"     * Stores command into history ArrayList.","lastModifiedDate":"2021-09-06"},{"lineNumber":46,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":47,"author":{"gitId":"leonghongfai"},"content":"     * @param command Command to be stored.","lastModifiedDate":"2021-09-06"},{"lineNumber":48,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"leonghongfai"},"content":"    public void storeHistory(String command) {","lastModifiedDate":"2021-09-06"},{"lineNumber":50,"author":{"gitId":"leonghongfai"},"content":"        history.add(command);","lastModifiedDate":"2021-09-06"},{"lineNumber":51,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":52,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":53,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":54,"author":{"gitId":"leonghongfai"},"content":"     * Gets number of items in history.","lastModifiedDate":"2021-09-06"},{"lineNumber":55,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":56,"author":{"gitId":"leonghongfai"},"content":"     * @return size of history ArrayList.","lastModifiedDate":"2021-09-06"},{"lineNumber":57,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":58,"author":{"gitId":"leonghongfai"},"content":"    public int historySize() {","lastModifiedDate":"2021-09-06"},{"lineNumber":59,"author":{"gitId":"leonghongfai"},"content":"        int len \u003d this.history.size();","lastModifiedDate":"2021-09-06"},{"lineNumber":60,"author":{"gitId":"leonghongfai"},"content":"        if (len \u003d\u003d 0) {","lastModifiedDate":"2021-09-06"},{"lineNumber":61,"author":{"gitId":"leonghongfai"},"content":"            throw new DukeException(\"noCommandsHaveBeenMade\");","lastModifiedDate":"2021-09-06"},{"lineNumber":62,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":63,"author":{"gitId":"leonghongfai"},"content":"        return len;","lastModifiedDate":"2021-09-06"},{"lineNumber":64,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":65,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":66,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":67,"author":{"gitId":"leonghongfai"},"content":"     * Gets particular String in history.","lastModifiedDate":"2021-09-06"},{"lineNumber":68,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":69,"author":{"gitId":"leonghongfai"},"content":"     * @param index Index of that particular String.","lastModifiedDate":"2021-09-06"},{"lineNumber":70,"author":{"gitId":"leonghongfai"},"content":"     * @return String at that index in history.","lastModifiedDate":"2021-09-06"},{"lineNumber":71,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":72,"author":{"gitId":"leonghongfai"},"content":"    public String getHistoryAt(int index) {","lastModifiedDate":"2021-09-06"},{"lineNumber":73,"author":{"gitId":"leonghongfai"},"content":"        return this.history.get(index);","lastModifiedDate":"2021-09-06"},{"lineNumber":74,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":75,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":76,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":77,"author":{"gitId":"leonghongfai"},"content":"     * Deletes last item in history ArrayList.","lastModifiedDate":"2021-09-06"},{"lineNumber":78,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":79,"author":{"gitId":"leonghongfai"},"content":"    public static void deleteLastCommand() {","lastModifiedDate":"2021-09-06"},{"lineNumber":80,"author":{"gitId":"leonghongfai"},"content":"        int index \u003d history.size() - 1;","lastModifiedDate":"2021-09-06"},{"lineNumber":81,"author":{"gitId":"leonghongfai"},"content":"        history.remove(index);","lastModifiedDate":"2021-09-06"},{"lineNumber":82,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":83,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":84,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":85,"author":{"gitId":"leonghongfai"},"content":"     * Gets the last command in history ArrayList.","lastModifiedDate":"2021-09-06"},{"lineNumber":86,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":87,"author":{"gitId":"leonghongfai"},"content":"     * @return Command last added into history.","lastModifiedDate":"2021-09-06"},{"lineNumber":88,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":89,"author":{"gitId":"leonghongfai"},"content":"    public static String getLastCommand() {","lastModifiedDate":"2021-09-06"},{"lineNumber":90,"author":{"gitId":"leonghongfai"},"content":"        int index \u003d history.size() - 1;","lastModifiedDate":"2021-09-06"},{"lineNumber":91,"author":{"gitId":"leonghongfai"},"content":"        if (index \u003c 0) {","lastModifiedDate":"2021-09-06"},{"lineNumber":92,"author":{"gitId":"leonghongfai"},"content":"            throw new DukeException(\"noChangesToUndo\");","lastModifiedDate":"2021-09-06"},{"lineNumber":93,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":94,"author":{"gitId":"leonghongfai"},"content":"        return history.get(index);","lastModifiedDate":"2021-09-06"},{"lineNumber":95,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":96,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":97,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":98,"author":{"gitId":"leonghongfai"},"content":"     * Stores recently deleted task into ArrayList.","lastModifiedDate":"2021-09-06"},{"lineNumber":99,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":100,"author":{"gitId":"leonghongfai"},"content":"     * @param task Task that was recently deleted.","lastModifiedDate":"2021-09-06"},{"lineNumber":101,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":102,"author":{"gitId":"leonghongfai"},"content":"    public static void storeDeleted(Task task) {","lastModifiedDate":"2021-09-06"},{"lineNumber":103,"author":{"gitId":"leonghongfai"},"content":"        deleted.add(task);","lastModifiedDate":"2021-09-06"},{"lineNumber":104,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":105,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":106,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":107,"author":{"gitId":"leonghongfai"},"content":"     * Gets the most recently deleted task.","lastModifiedDate":"2021-09-06"},{"lineNumber":108,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":109,"author":{"gitId":"leonghongfai"},"content":"     * @return Most recently deleted task.","lastModifiedDate":"2021-09-06"},{"lineNumber":110,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":111,"author":{"gitId":"leonghongfai"},"content":"    public static Task getDeleted() {","lastModifiedDate":"2021-09-06"},{"lineNumber":112,"author":{"gitId":"leonghongfai"},"content":"        return deleted.get(deleted.size() - 1);","lastModifiedDate":"2021-09-06"},{"lineNumber":113,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":114,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":115,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":116,"author":{"gitId":"leonghongfai"},"content":"     * Removes most recently deleted task from ArrayList.","lastModifiedDate":"2021-09-06"},{"lineNumber":117,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":118,"author":{"gitId":"leonghongfai"},"content":"    public static void removeDeletedTask() {","lastModifiedDate":"2021-09-06"},{"lineNumber":119,"author":{"gitId":"leonghongfai"},"content":"        int index \u003d deleted.size() - 1;","lastModifiedDate":"2021-09-06"},{"lineNumber":120,"author":{"gitId":"leonghongfai"},"content":"        deleted.remove(index);","lastModifiedDate":"2021-09-06"},{"lineNumber":121,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":122,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":123,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":124,"author":{"gitId":"leonghongfai"},"content":"     * Creates a folder and destination file if either of them do not exist.","lastModifiedDate":"2021-08-25"},{"lineNumber":125,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":126,"author":{"gitId":"leonghongfai"},"content":"    public void makeFile() {","lastModifiedDate":"2021-08-23"},{"lineNumber":127,"author":{"gitId":"leonghongfai"},"content":"        File textFile \u003d new File(filepath);","lastModifiedDate":"2021-09-05"},{"lineNumber":128,"author":{"gitId":"leonghongfai"},"content":"        Path path \u003d Paths.get(\"data\");","lastModifiedDate":"2021-08-23"},{"lineNumber":129,"author":{"gitId":"leonghongfai"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":130,"author":{"gitId":"leonghongfai"},"content":"            if (!Files.isDirectory(path)) {","lastModifiedDate":"2021-09-05"},{"lineNumber":131,"author":{"gitId":"leonghongfai"},"content":"                Files.createDirectories(path);","lastModifiedDate":"2021-08-23"},{"lineNumber":132,"author":{"gitId":"leonghongfai"},"content":"            } else if (!textFile.exists()) {","lastModifiedDate":"2021-09-06"},{"lineNumber":133,"author":{"gitId":"leonghongfai"},"content":"                textFile.createNewFile();","lastModifiedDate":"2021-08-23"},{"lineNumber":134,"author":{"gitId":"leonghongfai"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":135,"author":{"gitId":"leonghongfai"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":136,"author":{"gitId":"leonghongfai"},"content":"            Ui.display(e.getMessage());","lastModifiedDate":"2021-09-05"},{"lineNumber":137,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":138,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":139,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":140,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":141,"author":{"gitId":"leonghongfai"},"content":"     * Reads the text file and stores the String commands line by line into an array.","lastModifiedDate":"2021-08-25"},{"lineNumber":142,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":143,"author":{"gitId":"leonghongfai"},"content":"     * @return String array containing commands separated by lines.","lastModifiedDate":"2021-08-25"},{"lineNumber":144,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":145,"author":{"gitId":"leonghongfai"},"content":"    public String[] load() {","lastModifiedDate":"2021-08-23"},{"lineNumber":146,"author":{"gitId":"leonghongfai"},"content":"        File textFile \u003d new File(\"data/duke.txt\");","lastModifiedDate":"2021-08-23"},{"lineNumber":147,"author":{"gitId":"leonghongfai"},"content":"        String[] temp \u003d new String[50];","lastModifiedDate":"2021-08-23"},{"lineNumber":148,"author":{"gitId":"leonghongfai"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":149,"author":{"gitId":"leonghongfai"},"content":"            loadHelper(textFile, temp);","lastModifiedDate":"2021-09-05"},{"lineNumber":150,"author":{"gitId":"leonghongfai"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":151,"author":{"gitId":"leonghongfai"},"content":"            Ui.display(e.getMessage());","lastModifiedDate":"2021-09-05"},{"lineNumber":152,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":153,"author":{"gitId":"leonghongfai"},"content":"        return temp;","lastModifiedDate":"2021-09-05"},{"lineNumber":154,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":155,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":156,"author":{"gitId":"leonghongfai"},"content":"    private void loadHelper(File textFile, String[] temp) throws FileNotFoundException {","lastModifiedDate":"2021-09-05"},{"lineNumber":157,"author":{"gitId":"leonghongfai"},"content":"        int counter \u003d 0;","lastModifiedDate":"2021-09-05"},{"lineNumber":158,"author":{"gitId":"leonghongfai"},"content":"        Scanner s \u003d new Scanner(textFile);","lastModifiedDate":"2021-08-23"},{"lineNumber":159,"author":{"gitId":"leonghongfai"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":160,"author":{"gitId":"leonghongfai"},"content":"            String command \u003d s.nextLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":161,"author":{"gitId":"leonghongfai"},"content":"            temp[counter] \u003d command;","lastModifiedDate":"2021-08-23"},{"lineNumber":162,"author":{"gitId":"leonghongfai"},"content":"            counter++;","lastModifiedDate":"2021-08-23"},{"lineNumber":163,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":164,"author":{"gitId":"leonghongfai"},"content":"        s.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":165,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":166,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":167,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":168,"author":{"gitId":"leonghongfai"},"content":"     * Appends changes to the text file.","lastModifiedDate":"2021-08-25"},{"lineNumber":169,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":170,"author":{"gitId":"leonghongfai"},"content":"     * @param path Path to the text file.","lastModifiedDate":"2021-08-25"},{"lineNumber":171,"author":{"gitId":"leonghongfai"},"content":"     * @param textToAppend Text to append to the file.","lastModifiedDate":"2021-08-25"},{"lineNumber":172,"author":{"gitId":"leonghongfai"},"content":"     * @throws IOException If file at specified path does not exist.","lastModifiedDate":"2021-08-25"},{"lineNumber":173,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":174,"author":{"gitId":"leonghongfai"},"content":"    public void appendToFile(String path, String textToAppend) throws IOException {","lastModifiedDate":"2021-08-25"},{"lineNumber":175,"author":{"gitId":"leonghongfai"},"content":"        File f \u003d new File(path);","lastModifiedDate":"2021-08-25"},{"lineNumber":176,"author":{"gitId":"leonghongfai"},"content":"        FileWriter fw \u003d new FileWriter(path, true); // create a FileWriter in append mode","lastModifiedDate":"2021-08-25"},{"lineNumber":177,"author":{"gitId":"leonghongfai"},"content":"        if (f.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-23"},{"lineNumber":178,"author":{"gitId":"leonghongfai"},"content":"            fw.write(textToAppend);","lastModifiedDate":"2021-08-23"},{"lineNumber":179,"author":{"gitId":"leonghongfai"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":180,"author":{"gitId":"leonghongfai"},"content":"            fw.write(System.lineSeparator() + textToAppend);","lastModifiedDate":"2021-08-23"},{"lineNumber":181,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":182,"author":{"gitId":"leonghongfai"},"content":"        fw.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":183,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":184,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":185,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":186,"author":{"gitId":"leonghongfai"},"content":"     * Edit the contents of the file to account for a current task being marked as completed.","lastModifiedDate":"2021-08-25"},{"lineNumber":187,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":188,"author":{"gitId":"leonghongfai"},"content":"     * @param taskNum Task number of the task that is to be marked as completed.","lastModifiedDate":"2021-08-25"},{"lineNumber":189,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":190,"author":{"gitId":"leonghongfai"},"content":"    public void editFileContentsForCompletion(int taskNum) {","lastModifiedDate":"2021-08-23"},{"lineNumber":191,"author":{"gitId":"leonghongfai"},"content":"        File temp \u003d new File(\"data/temp.txt\");","lastModifiedDate":"2021-08-23"},{"lineNumber":192,"author":{"gitId":"leonghongfai"},"content":"        if (!temp.exists()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":193,"author":{"gitId":"leonghongfai"},"content":"            try {","lastModifiedDate":"2021-08-23"},{"lineNumber":194,"author":{"gitId":"leonghongfai"},"content":"                Files.copy(Paths.get(\"data/duke.txt\"), Paths.get(\"data/temp.txt\"), REPLACE_EXISTING);","lastModifiedDate":"2021-08-23"},{"lineNumber":195,"author":{"gitId":"leonghongfai"},"content":"                new FileWriter(\"data/duke.txt\", false).close();","lastModifiedDate":"2021-08-23"},{"lineNumber":196,"author":{"gitId":"leonghongfai"},"content":"                editFileContentsForCompletionHelper(taskNum);","lastModifiedDate":"2021-09-05"},{"lineNumber":197,"author":{"gitId":"leonghongfai"},"content":"                Files.delete(Paths.get(\"data/temp.txt\"));","lastModifiedDate":"2021-09-05"},{"lineNumber":198,"author":{"gitId":"leonghongfai"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":199,"author":{"gitId":"leonghongfai"},"content":"                Ui.display(e.getMessage());","lastModifiedDate":"2021-09-05"},{"lineNumber":200,"author":{"gitId":"leonghongfai"},"content":"            }","lastModifiedDate":"2021-09-05"},{"lineNumber":201,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":202,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":203,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":204,"author":{"gitId":"leonghongfai"},"content":"    private void editFileContentsForCompletionHelper(int taskNum) throws IOException {","lastModifiedDate":"2021-09-05"},{"lineNumber":205,"author":{"gitId":"leonghongfai"},"content":"        Scanner s \u003d new Scanner(new File(\"data/temp.txt\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":206,"author":{"gitId":"leonghongfai"},"content":"        int count \u003d 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":207,"author":{"gitId":"leonghongfai"},"content":"        while (s.hasNextLine()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":208,"author":{"gitId":"leonghongfai"},"content":"            String command \u003d s.nextLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":209,"author":{"gitId":"leonghongfai"},"content":"            if (count \u003d\u003d taskNum) {","lastModifiedDate":"2021-08-23"},{"lineNumber":210,"author":{"gitId":"leonghongfai"},"content":"                String head \u003d command.substring(0, 4);","lastModifiedDate":"2021-08-23"},{"lineNumber":211,"author":{"gitId":"leonghongfai"},"content":"                String tail \u003d command.substring(5);","lastModifiedDate":"2021-08-23"},{"lineNumber":212,"author":{"gitId":"leonghongfai"},"content":"                appendToFile(\"data/duke.txt\", head + \"1\" + tail);","lastModifiedDate":"2021-08-23"},{"lineNumber":213,"author":{"gitId":"leonghongfai"},"content":"            } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":214,"author":{"gitId":"leonghongfai"},"content":"                appendToFile(\"data/duke.txt\", command);","lastModifiedDate":"2021-08-23"},{"lineNumber":215,"author":{"gitId":"leonghongfai"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":216,"author":{"gitId":"leonghongfai"},"content":"            count++;","lastModifiedDate":"2021-09-05"},{"lineNumber":217,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":218,"author":{"gitId":"leonghongfai"},"content":"        s.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":219,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":220,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":221,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":222,"author":{"gitId":"leonghongfai"},"content":"     * Edits the contents of the file to account for a task being deleted.","lastModifiedDate":"2021-08-25"},{"lineNumber":223,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":224,"author":{"gitId":"leonghongfai"},"content":"     * @param taskNum Task number of the task that is to be deleted.","lastModifiedDate":"2021-08-25"},{"lineNumber":225,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":226,"author":{"gitId":"leonghongfai"},"content":"    public void editFileContentsForDeletion(int taskNum) {","lastModifiedDate":"2021-08-23"},{"lineNumber":227,"author":{"gitId":"leonghongfai"},"content":"        File temp \u003d new File(\"data/temp.txt\");","lastModifiedDate":"2021-08-23"},{"lineNumber":228,"author":{"gitId":"leonghongfai"},"content":"        if (!temp.exists()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":229,"author":{"gitId":"leonghongfai"},"content":"            try {","lastModifiedDate":"2021-08-23"},{"lineNumber":230,"author":{"gitId":"leonghongfai"},"content":"                Files.copy(Paths.get(\"data/duke.txt\"), Paths.get(\"data/temp.txt\"), REPLACE_EXISTING);","lastModifiedDate":"2021-08-23"},{"lineNumber":231,"author":{"gitId":"leonghongfai"},"content":"                new FileWriter(\"data/duke.txt\", false).close();","lastModifiedDate":"2021-08-23"},{"lineNumber":232,"author":{"gitId":"leonghongfai"},"content":"                editFileContentsForDeletionHelper(taskNum);","lastModifiedDate":"2021-09-05"},{"lineNumber":233,"author":{"gitId":"leonghongfai"},"content":"                Files.delete(Paths.get(\"data/temp.txt\"));","lastModifiedDate":"2021-09-05"},{"lineNumber":234,"author":{"gitId":"leonghongfai"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":235,"author":{"gitId":"leonghongfai"},"content":"                Ui.display(e.getMessage());","lastModifiedDate":"2021-09-05"},{"lineNumber":236,"author":{"gitId":"leonghongfai"},"content":"            }","lastModifiedDate":"2021-09-05"},{"lineNumber":237,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":238,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":239,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":240,"author":{"gitId":"leonghongfai"},"content":"    private void editFileContentsForDeletionHelper(int taskNum) throws IOException {","lastModifiedDate":"2021-09-05"},{"lineNumber":241,"author":{"gitId":"leonghongfai"},"content":"        Scanner s \u003d new Scanner(new File(\"data/temp.txt\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":242,"author":{"gitId":"leonghongfai"},"content":"        int count \u003d 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":243,"author":{"gitId":"leonghongfai"},"content":"        while (s.hasNextLine()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":244,"author":{"gitId":"leonghongfai"},"content":"            String command \u003d s.nextLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":245,"author":{"gitId":"leonghongfai"},"content":"            if (count \u003d\u003d taskNum) {","lastModifiedDate":"2021-08-23"},{"lineNumber":246,"author":{"gitId":"leonghongfai"},"content":"            } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":247,"author":{"gitId":"leonghongfai"},"content":"                appendToFile(\"data/duke.txt\", command);","lastModifiedDate":"2021-08-23"},{"lineNumber":248,"author":{"gitId":"leonghongfai"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":249,"author":{"gitId":"leonghongfai"},"content":"            count++;","lastModifiedDate":"2021-09-05"},{"lineNumber":250,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":251,"author":{"gitId":"leonghongfai"},"content":"        s.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":252,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":253,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":254,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":255,"author":{"gitId":"leonghongfai"},"content":"     * Edits text file to undo completion command.","lastModifiedDate":"2021-09-06"},{"lineNumber":256,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":257,"author":{"gitId":"leonghongfai"},"content":"     * @param taskNum Task Number to carry out operation on.","lastModifiedDate":"2021-09-06"},{"lineNumber":258,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":259,"author":{"gitId":"leonghongfai"},"content":"    public void editFileContentsForUndoCompletion(int taskNum) {","lastModifiedDate":"2021-09-06"},{"lineNumber":260,"author":{"gitId":"leonghongfai"},"content":"        File temp \u003d new File(\"data/temp.txt\");","lastModifiedDate":"2021-09-06"},{"lineNumber":261,"author":{"gitId":"leonghongfai"},"content":"        if (!temp.exists()) {","lastModifiedDate":"2021-09-06"},{"lineNumber":262,"author":{"gitId":"leonghongfai"},"content":"            try {","lastModifiedDate":"2021-09-06"},{"lineNumber":263,"author":{"gitId":"leonghongfai"},"content":"                Files.copy(Paths.get(\"data/duke.txt\"), Paths.get(\"data/temp.txt\"), REPLACE_EXISTING);","lastModifiedDate":"2021-09-06"},{"lineNumber":264,"author":{"gitId":"leonghongfai"},"content":"                new FileWriter(\"data/duke.txt\", false).close();","lastModifiedDate":"2021-09-06"},{"lineNumber":265,"author":{"gitId":"leonghongfai"},"content":"                editFileContentsForUndoCompletionHelper(taskNum);","lastModifiedDate":"2021-09-06"},{"lineNumber":266,"author":{"gitId":"leonghongfai"},"content":"                Files.delete(Paths.get(\"data/temp.txt\"));","lastModifiedDate":"2021-09-06"},{"lineNumber":267,"author":{"gitId":"leonghongfai"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":268,"author":{"gitId":"leonghongfai"},"content":"                Ui.display(e.getMessage());","lastModifiedDate":"2021-09-06"},{"lineNumber":269,"author":{"gitId":"leonghongfai"},"content":"            }","lastModifiedDate":"2021-09-06"},{"lineNumber":270,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":271,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":272,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":273,"author":{"gitId":"leonghongfai"},"content":"    private void editFileContentsForUndoCompletionHelper(int taskNum) throws IOException {","lastModifiedDate":"2021-09-06"},{"lineNumber":274,"author":{"gitId":"leonghongfai"},"content":"        Scanner s \u003d new Scanner(new File(\"data/temp.txt\"));","lastModifiedDate":"2021-09-06"},{"lineNumber":275,"author":{"gitId":"leonghongfai"},"content":"        int count \u003d 1;","lastModifiedDate":"2021-09-06"},{"lineNumber":276,"author":{"gitId":"leonghongfai"},"content":"        while (s.hasNextLine()) {","lastModifiedDate":"2021-09-06"},{"lineNumber":277,"author":{"gitId":"leonghongfai"},"content":"            String command \u003d s.nextLine();","lastModifiedDate":"2021-09-06"},{"lineNumber":278,"author":{"gitId":"leonghongfai"},"content":"            if (count \u003d\u003d taskNum) {","lastModifiedDate":"2021-09-06"},{"lineNumber":279,"author":{"gitId":"leonghongfai"},"content":"                String head \u003d command.substring(0, 4);","lastModifiedDate":"2021-09-06"},{"lineNumber":280,"author":{"gitId":"leonghongfai"},"content":"                String tail \u003d command.substring(5);","lastModifiedDate":"2021-09-06"},{"lineNumber":281,"author":{"gitId":"leonghongfai"},"content":"                appendToFile(\"data/duke.txt\", head + \"0\" + tail);","lastModifiedDate":"2021-09-06"},{"lineNumber":282,"author":{"gitId":"leonghongfai"},"content":"            } else {","lastModifiedDate":"2021-09-06"},{"lineNumber":283,"author":{"gitId":"leonghongfai"},"content":"                appendToFile(\"data/duke.txt\", command);","lastModifiedDate":"2021-09-06"},{"lineNumber":284,"author":{"gitId":"leonghongfai"},"content":"            }","lastModifiedDate":"2021-09-06"},{"lineNumber":285,"author":{"gitId":"leonghongfai"},"content":"            count++;","lastModifiedDate":"2021-09-06"},{"lineNumber":286,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":287,"author":{"gitId":"leonghongfai"},"content":"        s.close();","lastModifiedDate":"2021-09-06"},{"lineNumber":288,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":289,"author":{"gitId":"leonghongfai"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"leonghongfai":289}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leonghongfai"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"leonghongfai"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"leonghongfai"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"leonghongfai"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"leonghongfai"},"content":" * Creates Deadline objects.","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"leonghongfai"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"leonghongfai"},"content":" * @author Leong Hong Fai","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"leonghongfai"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"leonghongfai"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"leonghongfai"},"content":"    private LocalDate date;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"leonghongfai"},"content":"    private String unformattedDate;","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"leonghongfai"},"content":"     * Creates Deadline object.","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"leonghongfai"},"content":"     * @param name Name of Deadline object.","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"leonghongfai"},"content":"     * @param date Date object should be completed by.","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"leonghongfai"},"content":"    public Deadline(String name, String date) {","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"leonghongfai"},"content":"        super(name);","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"leonghongfai"},"content":"        assert !(name \u003d\u003d null);","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"leonghongfai"},"content":"        this.date \u003d LocalDate.parse(date);","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"leonghongfai"},"content":"        this.unformattedDate \u003d date;","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"leonghongfai"},"content":"     * Represents Deadline in a String format","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"leonghongfai"},"content":"     * @return A string consisting of the information of the Deadline object.","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"leonghongfai"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"leonghongfai"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"leonghongfai"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":38,"author":{"gitId":"leonghongfai"},"content":"    public String getUnformattedDate() {","lastModifiedDate":"2021-09-06"},{"lineNumber":39,"author":{"gitId":"leonghongfai"},"content":"        return this.unformattedDate;","lastModifiedDate":"2021-09-06"},{"lineNumber":40,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":41,"author":{"gitId":"leonghongfai"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"leonghongfai":41}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leonghongfai"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"leonghongfai"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"leonghongfai"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"leonghongfai"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"leonghongfai"},"content":" * Creates Event objects.","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"leonghongfai"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"leonghongfai"},"content":" * @author Leong Hong Fai","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"leonghongfai"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"leonghongfai"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"leonghongfai"},"content":"    private LocalDate date;","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"leonghongfai"},"content":"    private String unformattedDate;","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"leonghongfai"},"content":"     * Creates Event object.","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"leonghongfai"},"content":"     * @param name Name of Event object.","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"leonghongfai"},"content":"     * @param date Date Event is happening at.","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"leonghongfai"},"content":"    public Event(String name, String date) {","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"leonghongfai"},"content":"        super(name);","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"leonghongfai"},"content":"        assert !(name \u003d\u003d null);","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"leonghongfai"},"content":"        this.date \u003d LocalDate.parse(date);","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"leonghongfai"},"content":"        this.unformattedDate \u003d date;","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"leonghongfai"},"content":"     * Represents Event in a String format","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"leonghongfai"},"content":"     * @return A string consisting of the information of the Event object.","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"leonghongfai"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"leonghongfai"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"leonghongfai"},"content":"        return \"[E]\" + super.toString() + \"(at: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"leonghongfai"},"content":"    public String getUnformattedDate() {","lastModifiedDate":"2021-09-06"},{"lineNumber":38,"author":{"gitId":"leonghongfai"},"content":"        return this.unformattedDate;","lastModifiedDate":"2021-09-06"},{"lineNumber":39,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":40,"author":{"gitId":"leonghongfai"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"leonghongfai":40}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leonghongfai"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"leonghongfai"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"leonghongfai"},"content":" * Exists to provide a parent class to Event, Deadline, and ToDo classes.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"leonghongfai"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"leonghongfai"},"content":" * @author Leong Hong Fai","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"leonghongfai"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"leonghongfai"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"leonghongfai"},"content":"    private String name;","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"leonghongfai"},"content":"    private boolean isCompleted;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"leonghongfai"},"content":"     * Creates new Task object.","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"leonghongfai"},"content":"     * @param name Name of Task object.","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"leonghongfai"},"content":"    public Task(String name) {","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"leonghongfai"},"content":"        assert !(name \u003d\u003d null);","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"leonghongfai"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"leonghongfai"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"leonghongfai"},"content":"     * Marks current task as completed.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"leonghongfai"},"content":"    public void setCompleted() {","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"leonghongfai"},"content":"        this.isCompleted \u003d true;","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"leonghongfai"},"content":"    public void setUncompleted() {","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"leonghongfai"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"leonghongfai"},"content":"     * Indicates task object\u0027s completion using an \u0027X\u0027 or a blank space \u0027 \u0027.","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"leonghongfai"},"content":"     * @return X or space depending on completion status of the Task object.","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"leonghongfai"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"leonghongfai"},"content":"        return (this.isCompleted","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"leonghongfai"},"content":"                ? \"X\"","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"leonghongfai"},"content":"                : \" \");","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"leonghongfai"},"content":"     * Represents Task in a String format","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"leonghongfai"},"content":"     * @return A string consisting of the information of the Task object.","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"leonghongfai"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":53,"author":{"gitId":"leonghongfai"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":54,"author":{"gitId":"leonghongfai"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.name;","lastModifiedDate":"2021-08-17"},{"lineNumber":55,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":56,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"leonghongfai"},"content":"     * Gets the name of the task.","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"leonghongfai"},"content":"     * @return Name of task.","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":62,"author":{"gitId":"leonghongfai"},"content":"    public String getName() {","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"leonghongfai"},"content":"        return this.name;","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"leonghongfai"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"leonghongfai":65}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leonghongfai"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"leonghongfai"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"leonghongfai"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"leonghongfai"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"leonghongfai"},"content":" * Creates an ArrayList to store tasks and provides functionality to manipulate the tasks inside the ArrayList.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"leonghongfai"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"leonghongfai"},"content":"public class TaskList {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"leonghongfai"},"content":"    private static ArrayList\u003cTask\u003e store;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"leonghongfai"},"content":"    private String[] input;","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"leonghongfai"},"content":"     * Creates new TaskList object.","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"leonghongfai"},"content":"     * @param input Input array of tasks in String representation.","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"leonghongfai"},"content":"    public TaskList(String[] input) {","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"leonghongfai"},"content":"        this.input \u003d input;","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"leonghongfai"},"content":"        store \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"leonghongfai"},"content":"        generateStore();","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"leonghongfai"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"leonghongfai"},"content":"        store \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"leonghongfai"},"content":"     * Represents TaskList in a String format.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"leonghongfai"},"content":"     * @return String representation of TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"leonghongfai"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"leonghongfai"},"content":"    public String toString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"leonghongfai"},"content":"        assert !(store \u003d\u003d null);","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"leonghongfai"},"content":"        return store.toString();","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"leonghongfai"},"content":"     * Generates the TaskList upon start-up of the Duke using information stored in the text file.","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"leonghongfai"},"content":"    private void generateStore() {","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"leonghongfai"},"content":"        for (int i \u003d 0; i \u003c input.length; i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"leonghongfai"},"content":"            String command \u003d input[i];","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"leonghongfai"},"content":"            if (command \u003d\u003d null) {","lastModifiedDate":"2021-09-05"},{"lineNumber":47,"author":{"gitId":"leonghongfai"},"content":"                return;","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"leonghongfai"},"content":"            }","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"leonghongfai"},"content":"            String[] words \u003d command.split(\" - \");","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"leonghongfai"},"content":"            boolean isCompleted \u003d false;","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"leonghongfai"},"content":"            if (words[1].equals(\"1\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"leonghongfai"},"content":"                isCompleted \u003d true;","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"leonghongfai"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"leonghongfai"},"content":"            String task \u003d words[0];","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"leonghongfai"},"content":"            switch (task) {","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"leonghongfai"},"content":"            case (\"T\"):","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"leonghongfai"},"content":"                Task toAdd \u003d new ToDo(words[2]);","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"leonghongfai"},"content":"                if (isCompleted) {","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"leonghongfai"},"content":"                    toAdd.setCompleted();","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"leonghongfai"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"leonghongfai"},"content":"                store.add(toAdd);","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"leonghongfai"},"content":"                break;","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"leonghongfai"},"content":"            case (\"E\"):","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"leonghongfai"},"content":"                Task temp \u003d new Event(words[2], words[3]);","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"leonghongfai"},"content":"                if (isCompleted) {","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"leonghongfai"},"content":"                    temp.setCompleted();","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"leonghongfai"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"leonghongfai"},"content":"                store.add(temp);","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"leonghongfai"},"content":"                break;","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"leonghongfai"},"content":"            case (\"D\"):","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"leonghongfai"},"content":"                Task temp1 \u003d new Deadline(words[2], words[3]);","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"leonghongfai"},"content":"                if (isCompleted) {","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"leonghongfai"},"content":"                    temp1.setCompleted();","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"leonghongfai"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"leonghongfai"},"content":"                store.add(temp1);","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"leonghongfai"},"content":"                break;","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"leonghongfai"},"content":"            default:","lastModifiedDate":"2021-08-29"},{"lineNumber":78,"author":{"gitId":"leonghongfai"},"content":"                break;","lastModifiedDate":"2021-08-29"},{"lineNumber":79,"author":{"gitId":"leonghongfai"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"leonghongfai"},"content":"     * Adds a task to TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"leonghongfai"},"content":"     * @param task Task that is to be added.","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"leonghongfai"},"content":"    public static void add(Task task) {","lastModifiedDate":"2021-09-02"},{"lineNumber":89,"author":{"gitId":"leonghongfai"},"content":"        assert !(store \u003d\u003d null);","lastModifiedDate":"2021-09-05"},{"lineNumber":90,"author":{"gitId":"leonghongfai"},"content":"        store.add(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"leonghongfai"},"content":"     * Gets size of TaskList currently.","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"leonghongfai"},"content":"     * @return Number of Tasks inside the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"leonghongfai"},"content":"    public int size() {","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"leonghongfai"},"content":"        assert !(store \u003d\u003d null);","lastModifiedDate":"2021-09-05"},{"lineNumber":100,"author":{"gitId":"leonghongfai"},"content":"        return store.size();","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"leonghongfai"},"content":"     * Gets a specific Task inside TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"leonghongfai"},"content":"     * @param taskNumber Task Number to be taken from the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"leonghongfai"},"content":"     * @return Task at specified position in the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"leonghongfai"},"content":"    public Task get(int taskNumber) {","lastModifiedDate":"2021-08-23"},{"lineNumber":110,"author":{"gitId":"leonghongfai"},"content":"        assert !(store \u003d\u003d null);","lastModifiedDate":"2021-09-05"},{"lineNumber":111,"author":{"gitId":"leonghongfai"},"content":"        assert (taskNumber \u003c store.size());","lastModifiedDate":"2021-09-05"},{"lineNumber":112,"author":{"gitId":"leonghongfai"},"content":"        return store.get(taskNumber);","lastModifiedDate":"2021-08-23"},{"lineNumber":113,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":114,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":115,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"leonghongfai"},"content":"     * Removes Task from TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"leonghongfai"},"content":"     * @param taskNumber Task Number to remove from the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"leonghongfai"},"content":"    public void remove(int taskNumber) {","lastModifiedDate":"2021-08-23"},{"lineNumber":121,"author":{"gitId":"leonghongfai"},"content":"        assert !(store \u003d\u003d null);","lastModifiedDate":"2021-09-05"},{"lineNumber":122,"author":{"gitId":"leonghongfai"},"content":"        assert (taskNumber \u003c store.size());","lastModifiedDate":"2021-09-05"},{"lineNumber":123,"author":{"gitId":"leonghongfai"},"content":"        store.remove(taskNumber);","lastModifiedDate":"2021-08-23"},{"lineNumber":124,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":125,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":126,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":127,"author":{"gitId":"leonghongfai"},"content":"     * Creates String array containing contents of tasks in list.","lastModifiedDate":"2021-09-02"},{"lineNumber":128,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":129,"author":{"gitId":"leonghongfai"},"content":"     * @param command Command given by user.","lastModifiedDate":"2021-09-02"},{"lineNumber":130,"author":{"gitId":"leonghongfai"},"content":"     * @return String Array of output.","lastModifiedDate":"2021-09-02"},{"lineNumber":131,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":132,"author":{"gitId":"leonghongfai"},"content":"    public static String[] printList(String command) {","lastModifiedDate":"2021-09-02"},{"lineNumber":133,"author":{"gitId":"leonghongfai"},"content":"        String[] words \u003d command.split(\" \");","lastModifiedDate":"2021-08-23"},{"lineNumber":134,"author":{"gitId":"leonghongfai"},"content":"        assert words[0].equals(\"list\");","lastModifiedDate":"2021-09-05"},{"lineNumber":135,"author":{"gitId":"leonghongfai"},"content":"        if (words.length \u003e 1) {","lastModifiedDate":"2021-08-23"},{"lineNumber":136,"author":{"gitId":"leonghongfai"},"content":"            throw new DukeException(\"invalidCommand\");","lastModifiedDate":"2021-08-23"},{"lineNumber":137,"author":{"gitId":"leonghongfai"},"content":"        } else if (store.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-23"},{"lineNumber":138,"author":{"gitId":"leonghongfai"},"content":"            throw new DukeException(\"noTasksException\");","lastModifiedDate":"2021-08-23"},{"lineNumber":139,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":140,"author":{"gitId":"leonghongfai"},"content":"        String[] output \u003d new String[store.size() + 1];","lastModifiedDate":"2021-09-02"},{"lineNumber":141,"author":{"gitId":"leonghongfai"},"content":"        output[0] \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2021-09-02"},{"lineNumber":142,"author":{"gitId":"leonghongfai"},"content":"        for (int i \u003d 0; i \u003c store.size(); i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":143,"author":{"gitId":"leonghongfai"},"content":"            output[i + 1] \u003d (i + 1) + \". \" + store.get(i).toString();","lastModifiedDate":"2021-09-02"},{"lineNumber":144,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":145,"author":{"gitId":"leonghongfai"},"content":"        return output;","lastModifiedDate":"2021-09-02"},{"lineNumber":146,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":147,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":148,"author":{"gitId":"leonghongfai"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"leonghongfai":148}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leonghongfai"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"leonghongfai"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"leonghongfai"},"content":" * Description:","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"leonghongfai"},"content":" * ToDos: tasks without any date/time attached to it e.g., visit new theme park.","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"leonghongfai"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"leonghongfai"},"content":" * @author Leong Hong Fai","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"leonghongfai"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"leonghongfai"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"leonghongfai"},"content":"    public ToDo(String name) {","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"leonghongfai"},"content":"        super(name);","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"leonghongfai"},"content":"        assert !(name \u003d\u003d null);","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"leonghongfai"},"content":"     * Simple string representation of ToDo.","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"leonghongfai"},"content":"     * @return A string consisting of the information of the ToDo object.","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"leonghongfai"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"leonghongfai"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"leonghongfai"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"leonghongfai"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"leonghongfai":26}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leonghongfai"},"content":"package duke.ui;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"leonghongfai"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"leonghongfai"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"leonghongfai"},"content":" * Manages the user interface and contains all user outputs to print during user interaction.","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"leonghongfai"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"leonghongfai"},"content":"public class Ui {","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"leonghongfai"},"content":"     * Creates new Ui object.","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"leonghongfai"},"content":"    public Ui() {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"leonghongfai"},"content":"        printIntro();","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"leonghongfai"},"content":"     * Compiles messages in an array for Duke output.","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"leonghongfai"},"content":"     * @param messages Messages to be output by Duke.","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"leonghongfai"},"content":"     * @return String Array of messages to be output.","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"leonghongfai"},"content":"    public static String[] display(String... messages) {","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"leonghongfai"},"content":"        return messages;","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"leonghongfai"},"content":"     * Compiles message in an array for Duke output.","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"leonghongfai"},"content":"     * @param message Message to be output by Duke.","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"leonghongfai"},"content":"     * @return String Array of messages to be output.","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"leonghongfai"},"content":"    public static String[] display(String message) {","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"leonghongfai"},"content":"        return new String[] { message };","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"leonghongfai"},"content":"     * Prints logo of DUKE and short introduction.","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"leonghongfai"},"content":"    public static String[] printIntro() {","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"leonghongfai"},"content":"        String logo \u003d \"____        _        \\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"leonghongfai"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"leonghongfai"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"leonghongfai"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"leonghongfai"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"leonghongfai"},"content":"        return display(\"HELLO FROM\", logo);","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"leonghongfai"},"content":"     * Prints simple farewell message to user.","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"leonghongfai"},"content":"     * @return String Array of output.","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"leonghongfai"},"content":"    public static String[] end() {","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"leonghongfai"},"content":"        return display(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"leonghongfai"},"content":"     * Prints simple message to indicate the task that has been added and how many items user has in the list.","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"leonghongfai"},"content":"     * @param task Task that is currently being added into the list.","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"leonghongfai"},"content":"     * @param size Size of current list including current Task being added.","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"leonghongfai"},"content":"     * @return String Array of output.","lastModifiedDate":"2021-09-02"},{"lineNumber":66,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"leonghongfai"},"content":"    public static String[] printTaskAdded(Task task, int size) {","lastModifiedDate":"2021-09-02"},{"lineNumber":68,"author":{"gitId":"leonghongfai"},"content":"        return display(\"Got it. I\u0027ve added this task: \",","lastModifiedDate":"2021-09-02"},{"lineNumber":69,"author":{"gitId":"leonghongfai"},"content":"                task.toString(), \"Now you have \" + size + \" tasks in the list\");","lastModifiedDate":"2021-09-02"},{"lineNumber":70,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"leonghongfai"},"content":"     * Prints simple message to indicate that a certain task has been marked as completed.","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"leonghongfai"},"content":"     * @param task Task that user has indicated as completed.","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"leonghongfai"},"content":"     * @return String Array of output.","lastModifiedDate":"2021-09-02"},{"lineNumber":77,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"leonghongfai"},"content":"    public static String[] printTaskCompleted(Task task) {","lastModifiedDate":"2021-09-02"},{"lineNumber":79,"author":{"gitId":"leonghongfai"},"content":"        return display(\"Nice! I\u0027ve marked this task as done:\",","lastModifiedDate":"2021-09-02"},{"lineNumber":80,"author":{"gitId":"leonghongfai"},"content":"                task.toString());","lastModifiedDate":"2021-09-02"},{"lineNumber":81,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":84,"author":{"gitId":"leonghongfai"},"content":"     * Prints simple message to indicate that a certain task has been marked as uncompleted.","lastModifiedDate":"2021-09-06"},{"lineNumber":85,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":86,"author":{"gitId":"leonghongfai"},"content":"     * @param task Task that user has indicated as completed.","lastModifiedDate":"2021-09-06"},{"lineNumber":87,"author":{"gitId":"leonghongfai"},"content":"     * @return String Array of output.","lastModifiedDate":"2021-09-06"},{"lineNumber":88,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":89,"author":{"gitId":"leonghongfai"},"content":"    public static String[] printTaskUncompleted(Task task) {","lastModifiedDate":"2021-09-06"},{"lineNumber":90,"author":{"gitId":"leonghongfai"},"content":"        return display(\"OHNOES! I\u0027ve marked this task as not completed:\",","lastModifiedDate":"2021-09-06"},{"lineNumber":91,"author":{"gitId":"leonghongfai"},"content":"                task.toString());","lastModifiedDate":"2021-09-06"},{"lineNumber":92,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":93,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":94,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"leonghongfai"},"content":"     * Prints simple message to indicate that a certain task has been deleted and how many tasks remain.","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"leonghongfai"},"content":"     * @param task Task that the user wants deleted.","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"leonghongfai"},"content":"     * @param size Size of list with remaining tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"leonghongfai"},"content":"     * @return String Array of output.","lastModifiedDate":"2021-09-02"},{"lineNumber":100,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"leonghongfai"},"content":"    public static String[] printDeleteTask(Task task, int size) {","lastModifiedDate":"2021-09-02"},{"lineNumber":102,"author":{"gitId":"leonghongfai"},"content":"        return display(\"Noted. I\u0027ve removed this task:\",","lastModifiedDate":"2021-09-02"},{"lineNumber":103,"author":{"gitId":"leonghongfai"},"content":"                task.toString(), \"Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2021-09-02"},{"lineNumber":104,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"leonghongfai"},"content":"     * Prints results of finding tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"leonghongfai"},"content":"     * @param result Result of tasks that pass the search.","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"leonghongfai"},"content":"     * @return String Array of output.","lastModifiedDate":"2021-09-02"},{"lineNumber":111,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"leonghongfai"},"content":"    public static String[] printFindTask(Task[] result) {","lastModifiedDate":"2021-09-02"},{"lineNumber":113,"author":{"gitId":"leonghongfai"},"content":"        if (result[0] \u003d\u003d null) {","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"leonghongfai"},"content":"            return display(\"There are no matching tasks in your list!\");","lastModifiedDate":"2021-09-02"},{"lineNumber":115,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":116,"author":{"gitId":"leonghongfai"},"content":"        int count \u003d 0;","lastModifiedDate":"2021-09-02"},{"lineNumber":117,"author":{"gitId":"leonghongfai"},"content":"        for (int i \u003d 0; i \u003c result.length; i++) {","lastModifiedDate":"2021-09-02"},{"lineNumber":118,"author":{"gitId":"leonghongfai"},"content":"            if (result[i] \u003d\u003d null) {","lastModifiedDate":"2021-09-02"},{"lineNumber":119,"author":{"gitId":"leonghongfai"},"content":"                break;","lastModifiedDate":"2021-09-02"},{"lineNumber":120,"author":{"gitId":"leonghongfai"},"content":"            }","lastModifiedDate":"2021-09-02"},{"lineNumber":121,"author":{"gitId":"leonghongfai"},"content":"            count++;","lastModifiedDate":"2021-09-02"},{"lineNumber":122,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":123,"author":{"gitId":"leonghongfai"},"content":"        String[] output \u003d new String[count + 1];","lastModifiedDate":"2021-09-02"},{"lineNumber":124,"author":{"gitId":"leonghongfai"},"content":"        output[0] \u003d \"Here are the matching tasks in your list:\";","lastModifiedDate":"2021-09-02"},{"lineNumber":125,"author":{"gitId":"leonghongfai"},"content":"        for (int i \u003d 0; i \u003c result.length; i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":126,"author":{"gitId":"leonghongfai"},"content":"            if (result[i] \u003d\u003d null) {","lastModifiedDate":"2021-08-25"},{"lineNumber":127,"author":{"gitId":"leonghongfai"},"content":"                break;","lastModifiedDate":"2021-08-25"},{"lineNumber":128,"author":{"gitId":"leonghongfai"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":129,"author":{"gitId":"leonghongfai"},"content":"            output[i + 1] \u003d (i + 1) + \". \" + result[i].toString();","lastModifiedDate":"2021-09-02"},{"lineNumber":130,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":131,"author":{"gitId":"leonghongfai"},"content":"        return output;","lastModifiedDate":"2021-09-02"},{"lineNumber":132,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":133,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":134,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":135,"author":{"gitId":"leonghongfai"},"content":"     * Prints out items in history ArrayList.","lastModifiedDate":"2021-09-06"},{"lineNumber":136,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":137,"author":{"gitId":"leonghongfai"},"content":"     * @param input Input String array containing objects in history.","lastModifiedDate":"2021-09-06"},{"lineNumber":138,"author":{"gitId":"leonghongfai"},"content":"     * @return Numbered list of items in history.","lastModifiedDate":"2021-09-06"},{"lineNumber":139,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":140,"author":{"gitId":"leonghongfai"},"content":"    public static String[] printHistory(String[] input) {","lastModifiedDate":"2021-09-06"},{"lineNumber":141,"author":{"gitId":"leonghongfai"},"content":"        for (int i \u003d 0; i \u003c input.length; i++) {","lastModifiedDate":"2021-09-06"},{"lineNumber":142,"author":{"gitId":"leonghongfai"},"content":"            input[i] \u003d (i + 1) + \". \" + input[i];","lastModifiedDate":"2021-09-06"},{"lineNumber":143,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":144,"author":{"gitId":"leonghongfai"},"content":"        return input;","lastModifiedDate":"2021-09-06"},{"lineNumber":145,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":146,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":147,"author":{"gitId":"leonghongfai"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"leonghongfai":147}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"leonghongfai"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"leonghongfai"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"leonghongfai"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"leonghongfai"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"leonghongfai"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"leonghongfai"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"leonghongfai"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"leonghongfai"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"leonghongfai"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"leonghongfai"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"leonghongfai"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"leonghongfai"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"leonghongfai"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"leonghongfai"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"leonghongfai":17}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"leonghongfai"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"leonghongfai"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"leonghongfai"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"leonghongfai"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"leonghongfai"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"leonghongfai"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"leonghongfai"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"leonghongfai"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"leonghongfai"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"leonghongfai"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"leonghongfai"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"leonghongfai"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"leonghongfai"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"leonghongfai"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"leonghongfai"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"leonghongfai"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"leonghongfai"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"leonghongfai":19}},{"path":"src/test/java/duke/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leonghongfai"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"leonghongfai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"leonghongfai"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"leonghongfai"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"leonghongfai"},"content":"public class TaskListTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"leonghongfai"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"leonghongfai"},"content":"    public void testGenerateStore() {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"leonghongfai"},"content":"        String[] input \u003d new String[]{\"T - 1 - sth\", \"E - 1 - sth3 - 2020-12-12\", \"D - 1 - sth2 - 2020-12-12\"};","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"leonghongfai"},"content":"        TaskList tl \u003d new TaskList(input);","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"leonghongfai"},"content":"        assertEquals(\"[T][X] sth\", tl.get(0).toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"leonghongfai"},"content":"        assertEquals(\"[E][X] sth3(at: Dec 12 2020)\", tl.get(1).toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"leonghongfai"},"content":"        assertEquals(\"[D][X] sth2(by: Dec 12 2020)\", tl.get(2).toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"leonghongfai"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"leonghongfai":18}},{"path":"src/test/java/duke/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leonghongfai"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"leonghongfai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"leonghongfai"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"leonghongfai"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"leonghongfai"},"content":"public class ToDoTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"leonghongfai"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"leonghongfai"},"content":"    public void testStringConversion() {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"leonghongfai"},"content":"        assertEquals(\"[T][ ] example\", new ToDo(\"example\").toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"leonghongfai"},"content":"        assertEquals(\"[T][ ] example2\", new ToDo(\"example2\").toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"leonghongfai"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"leonghongfai":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"leonghongfai"},"content":"hello","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"leonghongfai"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"leonghongfai"},"content":"deadline","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"leonghongfai"},"content":"event example2 /at Monday","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"leonghongfai"},"content":"event","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"leonghongfai"},"content":"todo something","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"leonghongfai"},"content":"todo","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"leonghongfai"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"leonghongfai"},"content":"done 3","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"leonghongfai"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"leonghongfai"},"content":"done 6","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"leonghongfai"},"content":"delete 1","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"leonghongfai"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"leonghongfai"},"content":"delete 6","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"leonghongfai"},"content":"bye","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"leonghongfai":15}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"leonghongfai"},"content":".@ECHO OFF","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"leonghongfai":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"leonghongfai"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"leonghongfai"},"content":"    read","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"leonghongfai"},"content":"    read","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"leonghongfai":3,"-":30}}]
