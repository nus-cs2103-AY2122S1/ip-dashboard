[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leonghongfai"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"leonghongfai"},"content":" * Description:","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"leonghongfai"},"content":" * Deadlines: tasks that need to be done before a specific date/time e.g., submit report by 11/10/2019 5pm.","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"leonghongfai"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"leonghongfai"},"content":" * @author Leong Hong Fai","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"leonghongfai"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"leonghongfai"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"leonghongfai"},"content":"    private String name;","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"leonghongfai"},"content":"    private String date;","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"leonghongfai"},"content":"    public Deadline(String name, String date) {","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"leonghongfai"},"content":"        super(name);","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"leonghongfai"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"leonghongfai"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"leonghongfai"},"content":"     * Simple string representation of Deadline.","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"leonghongfai"},"content":"     * @return A string consisting of the information of the Deadline object.","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"leonghongfai"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"leonghongfai"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"leonghongfai"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + date + \")\";","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"leonghongfai"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"leonghongfai":27}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leonghongfai"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"leonghongfai"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"leonghongfai"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"leonghongfai"},"content":" * Description:","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"leonghongfai"},"content":" * Duke the ChatBot allows users to add 3 different types of tasks, mark them as done, and delete tasks.","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"leonghongfai"},"content":" * The commands for usage are as follows:","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"leonghongfai"},"content":" * 1. \"todo \u003cname\u003e\" where name is what the user would like the todo to be called.","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"leonghongfai"},"content":" * 2. \"event \u003cname\u003e\" where name is what the user would like the event to be called.","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"leonghongfai"},"content":" * 3. \"deadline \u003cname\u003e\" where name is what the user would like the deadline to be called.","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"leonghongfai"},"content":" * 4. \"list\" to view current tasks added to the tasks list.","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"leonghongfai"},"content":" * 5. \"done \u003cnumber\u003e\" where number is the task with the corresponding number in the list which the user would like to mark as completed.","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"leonghongfai"},"content":" * 6. \"delete \u003cnumber\u003e\" where number is the task with the corresponding number in the list which the user would like to remove.","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"leonghongfai"},"content":" * 7. \"bye\" to leave the ChatBot.","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"leonghongfai"},"content":" * Disclaimer: any other commands will not be recognised and user will be prompted to enter a valid command.","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"leonghongfai"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"leonghongfai"},"content":" * @author Leong Hong Fai","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"leonghongfai"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"leonghongfai"},"content":"    private static ArrayList\u003cTask\u003e storage \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"leonghongfai"},"content":"        System.out.println(\"Hello FROM\\n\" + logo);","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"leonghongfai"},"content":"        commands();","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"leonghongfai"},"content":"     * Prints out text to say goodbye to user.","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"leonghongfai"},"content":"    private static void byeCommand() {","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"leonghongfai"},"content":"        System.out.println(\"    ______________________________________\");","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"leonghongfai"},"content":"        System.out.println(\"     Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"leonghongfai"},"content":"        System.out.println(\"    ______________________________________\");","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"leonghongfai"},"content":"     * Prints out the current list of tasks the user has.","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"leonghongfai"},"content":"     * @param command entered by user.","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"leonghongfai"},"content":"     * @throws DukeException upon invalid commands or empty tasks list.","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"leonghongfai"},"content":"    private static void printList(String command) throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"leonghongfai"},"content":"        String[] words \u003d command.split(\" \");","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"leonghongfai"},"content":"        if (words.length \u003e 1) {","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"leonghongfai"},"content":"            throw new DukeException(\"invalidCommand\");","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"leonghongfai"},"content":"        else if (storage.isEmpty()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"leonghongfai"},"content":"            throw new DukeException(\"noTasksException\");","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"leonghongfai"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"leonghongfai"},"content":"            System.out.println(\"    ______________________________________\");","lastModifiedDate":"2021-08-16"},{"lineNumber":57,"author":{"gitId":"leonghongfai"},"content":"            System.out.println(\"     Here are the tasks in your list:\");","lastModifiedDate":"2021-08-17"},{"lineNumber":58,"author":{"gitId":"leonghongfai"},"content":"            for (int i \u003d 0; i \u003c storage.size(); i++) {","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"leonghongfai"},"content":"                System.out.printf(\"     %d.%s\\n\", i + 1, storage.get(i).toString());","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"leonghongfai"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":61,"author":{"gitId":"leonghongfai"},"content":"            System.out.println(\"    ______________________________________\");","lastModifiedDate":"2021-08-16"},{"lineNumber":62,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":63,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":64,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"leonghongfai"},"content":"     * Adds a ToDo to the list of tasks.","lastModifiedDate":"2021-08-18"},{"lineNumber":67,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"leonghongfai"},"content":"     * @param command entered by the user.","lastModifiedDate":"2021-08-18"},{"lineNumber":69,"author":{"gitId":"leonghongfai"},"content":"     * @throws DukeException upon invalid command format.","lastModifiedDate":"2021-08-18"},{"lineNumber":70,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":71,"author":{"gitId":"leonghongfai"},"content":"    private static void addToDo(String command) throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":72,"author":{"gitId":"leonghongfai"},"content":"        if (command.length() \u003c 6) {","lastModifiedDate":"2021-08-18"},{"lineNumber":73,"author":{"gitId":"leonghongfai"},"content":"            throw new DukeException(\"invalidToDo\");","lastModifiedDate":"2021-08-18"},{"lineNumber":74,"author":{"gitId":"leonghongfai"},"content":"        } else {","lastModifiedDate":"2021-08-16"},{"lineNumber":75,"author":{"gitId":"leonghongfai"},"content":"            String name \u003d command.substring(5);","lastModifiedDate":"2021-08-17"},{"lineNumber":76,"author":{"gitId":"leonghongfai"},"content":"            Task task  \u003d new ToDo(name);","lastModifiedDate":"2021-08-17"},{"lineNumber":77,"author":{"gitId":"leonghongfai"},"content":"            storage.add(task);","lastModifiedDate":"2021-08-18"},{"lineNumber":78,"author":{"gitId":"leonghongfai"},"content":"            System.out.println(\"    ______________________________________\");","lastModifiedDate":"2021-08-17"},{"lineNumber":79,"author":{"gitId":"leonghongfai"},"content":"            System.out.println(\"     Got it. I\u0027ve added this task: \");","lastModifiedDate":"2021-08-17"},{"lineNumber":80,"author":{"gitId":"leonghongfai"},"content":"            System.out.printf(\"       %s\\n\",task);","lastModifiedDate":"2021-08-17"},{"lineNumber":81,"author":{"gitId":"leonghongfai"},"content":"            System.out.printf(\"     Now you have %d tasks in the list\\n\", storage.size());","lastModifiedDate":"2021-08-18"},{"lineNumber":82,"author":{"gitId":"leonghongfai"},"content":"            System.out.println(\"    ______________________________________\");","lastModifiedDate":"2021-08-17"},{"lineNumber":83,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":84,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":85,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":86,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":87,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":88,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":89,"author":{"gitId":"leonghongfai"},"content":"     * Adds a deadline to the list of tasks.","lastModifiedDate":"2021-08-18"},{"lineNumber":90,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":91,"author":{"gitId":"leonghongfai"},"content":"     * @param command entered by the user.","lastModifiedDate":"2021-08-18"},{"lineNumber":92,"author":{"gitId":"leonghongfai"},"content":"     * @throws DukeException upon invalid command format.","lastModifiedDate":"2021-08-18"},{"lineNumber":93,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":94,"author":{"gitId":"leonghongfai"},"content":"    private static void addDeadline(String command) throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":95,"author":{"gitId":"leonghongfai"},"content":"        String[] words \u003d command.split(\" \");","lastModifiedDate":"2021-08-18"},{"lineNumber":96,"author":{"gitId":"leonghongfai"},"content":"        if (words.length \u003c\u003d 3 ) {","lastModifiedDate":"2021-08-18"},{"lineNumber":97,"author":{"gitId":"leonghongfai"},"content":"            throw new DukeException(\"invalidDeadline\");","lastModifiedDate":"2021-08-18"},{"lineNumber":98,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":99,"author":{"gitId":"leonghongfai"},"content":"         else if (!command.contains(\"/by\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":100,"author":{"gitId":"leonghongfai"},"content":"            throw new DukeException(\"invalidDeadline\");","lastModifiedDate":"2021-08-18"},{"lineNumber":101,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":102,"author":{"gitId":"leonghongfai"},"content":"        else {","lastModifiedDate":"2021-08-18"},{"lineNumber":103,"author":{"gitId":"leonghongfai"},"content":"            int position \u003d command.indexOf(\"/by\");","lastModifiedDate":"2021-08-17"},{"lineNumber":104,"author":{"gitId":"leonghongfai"},"content":"            String name \u003d command.substring(9, position);","lastModifiedDate":"2021-08-17"},{"lineNumber":105,"author":{"gitId":"leonghongfai"},"content":"            String date \u003d command.substring(position + 4);","lastModifiedDate":"2021-08-17"},{"lineNumber":106,"author":{"gitId":"leonghongfai"},"content":"            Task task  \u003d new Deadline(name, date);","lastModifiedDate":"2021-08-17"},{"lineNumber":107,"author":{"gitId":"leonghongfai"},"content":"            storage.add(task);","lastModifiedDate":"2021-08-18"},{"lineNumber":108,"author":{"gitId":"leonghongfai"},"content":"            System.out.println(\"    ______________________________________\");","lastModifiedDate":"2021-08-17"},{"lineNumber":109,"author":{"gitId":"leonghongfai"},"content":"            System.out.println(\"     Got it. I\u0027ve added this task: \");","lastModifiedDate":"2021-08-17"},{"lineNumber":110,"author":{"gitId":"leonghongfai"},"content":"            System.out.printf(\"       %s\\n\",task);","lastModifiedDate":"2021-08-17"},{"lineNumber":111,"author":{"gitId":"leonghongfai"},"content":"            System.out.printf(\"     Now you have %d tasks in the list\\n\", storage.size());","lastModifiedDate":"2021-08-18"},{"lineNumber":112,"author":{"gitId":"leonghongfai"},"content":"            System.out.println(\"    ______________________________________\");","lastModifiedDate":"2021-08-17"},{"lineNumber":113,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":114,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":115,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":116,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":117,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":118,"author":{"gitId":"leonghongfai"},"content":"     * Adds event to the list of tasks.","lastModifiedDate":"2021-08-18"},{"lineNumber":119,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":120,"author":{"gitId":"leonghongfai"},"content":"     * @param command entered by the user.","lastModifiedDate":"2021-08-18"},{"lineNumber":121,"author":{"gitId":"leonghongfai"},"content":"     * @throws DukeException upon invalid command format.","lastModifiedDate":"2021-08-18"},{"lineNumber":122,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":123,"author":{"gitId":"leonghongfai"},"content":"    private static void addEvent(String command) throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":124,"author":{"gitId":"leonghongfai"},"content":"        String[] words \u003d command.split(\" \");","lastModifiedDate":"2021-08-18"},{"lineNumber":125,"author":{"gitId":"leonghongfai"},"content":"        if (words.length \u003c\u003d 3 ) {","lastModifiedDate":"2021-08-18"},{"lineNumber":126,"author":{"gitId":"leonghongfai"},"content":"            throw new DukeException(\"invalidEvent\");","lastModifiedDate":"2021-08-18"},{"lineNumber":127,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":128,"author":{"gitId":"leonghongfai"},"content":"        else if (!command.contains(\"/at\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":129,"author":{"gitId":"leonghongfai"},"content":"            throw new DukeException(\"invalidEvent\");","lastModifiedDate":"2021-08-18"},{"lineNumber":130,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":131,"author":{"gitId":"leonghongfai"},"content":"        else {","lastModifiedDate":"2021-08-18"},{"lineNumber":132,"author":{"gitId":"leonghongfai"},"content":"            int position \u003d command.indexOf(\"/at\");","lastModifiedDate":"2021-08-17"},{"lineNumber":133,"author":{"gitId":"leonghongfai"},"content":"            String name \u003d command.substring(6, position);","lastModifiedDate":"2021-08-17"},{"lineNumber":134,"author":{"gitId":"leonghongfai"},"content":"            String date \u003d command.substring(position + 4);","lastModifiedDate":"2021-08-17"},{"lineNumber":135,"author":{"gitId":"leonghongfai"},"content":"            Task task  \u003d new Event(name, date);","lastModifiedDate":"2021-08-17"},{"lineNumber":136,"author":{"gitId":"leonghongfai"},"content":"            storage.add(task);","lastModifiedDate":"2021-08-18"},{"lineNumber":137,"author":{"gitId":"leonghongfai"},"content":"            System.out.println(\"    ______________________________________\");","lastModifiedDate":"2021-08-17"},{"lineNumber":138,"author":{"gitId":"leonghongfai"},"content":"            System.out.println(\"     Got it. I\u0027ve added this task: \");","lastModifiedDate":"2021-08-17"},{"lineNumber":139,"author":{"gitId":"leonghongfai"},"content":"            System.out.printf(\"       %s\\n\",task);","lastModifiedDate":"2021-08-17"},{"lineNumber":140,"author":{"gitId":"leonghongfai"},"content":"            System.out.printf(\"     Now you have %d tasks in the list\\n\", storage.size());","lastModifiedDate":"2021-08-18"},{"lineNumber":141,"author":{"gitId":"leonghongfai"},"content":"            System.out.println(\"    ______________________________________\");","lastModifiedDate":"2021-08-17"},{"lineNumber":142,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":143,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":144,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":145,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":146,"author":{"gitId":"leonghongfai"},"content":"     * Marks a specific task in the list as completed.","lastModifiedDate":"2021-08-18"},{"lineNumber":147,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":148,"author":{"gitId":"leonghongfai"},"content":"     * @param command entered by the user.","lastModifiedDate":"2021-08-18"},{"lineNumber":149,"author":{"gitId":"leonghongfai"},"content":"     * @throws DukeException upon incorrect command format.","lastModifiedDate":"2021-08-18"},{"lineNumber":150,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":151,"author":{"gitId":"leonghongfai"},"content":"    private static void markCompleted(String command) throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":152,"author":{"gitId":"leonghongfai"},"content":"        String restOfCommand \u003d command.substring(5);","lastModifiedDate":"2021-08-18"},{"lineNumber":153,"author":{"gitId":"leonghongfai"},"content":"        boolean numeric;","lastModifiedDate":"2021-08-18"},{"lineNumber":154,"author":{"gitId":"leonghongfai"},"content":"        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":155,"author":{"gitId":"leonghongfai"},"content":"            int temp \u003d Integer.parseInt(restOfCommand);","lastModifiedDate":"2021-08-18"},{"lineNumber":156,"author":{"gitId":"leonghongfai"},"content":"            numeric \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":157,"author":{"gitId":"leonghongfai"},"content":"        } catch (NumberFormatException err) {","lastModifiedDate":"2021-08-18"},{"lineNumber":158,"author":{"gitId":"leonghongfai"},"content":"            numeric \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":159,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":160,"author":{"gitId":"leonghongfai"},"content":"        if (numeric) {","lastModifiedDate":"2021-08-18"},{"lineNumber":161,"author":{"gitId":"leonghongfai"},"content":"            int taskNum \u003d Integer.parseInt(restOfCommand) - 1;","lastModifiedDate":"2021-08-18"},{"lineNumber":162,"author":{"gitId":"leonghongfai"},"content":"            if (taskNum \u003c storage.size()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":163,"author":{"gitId":"leonghongfai"},"content":"                Task currTask \u003d storage.get(taskNum);","lastModifiedDate":"2021-08-18"},{"lineNumber":164,"author":{"gitId":"leonghongfai"},"content":"                currTask.setCompleted();","lastModifiedDate":"2021-08-18"},{"lineNumber":165,"author":{"gitId":"leonghongfai"},"content":"                System.out.println(\"    ______________________________________\");","lastModifiedDate":"2021-08-17"},{"lineNumber":166,"author":{"gitId":"leonghongfai"},"content":"                System.out.println(\"     Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2021-08-18"},{"lineNumber":167,"author":{"gitId":"leonghongfai"},"content":"                System.out.printf(\"       %s\\n\", currTask);","lastModifiedDate":"2021-08-18"},{"lineNumber":168,"author":{"gitId":"leonghongfai"},"content":"                System.out.println(\"    ______________________________________\");","lastModifiedDate":"2021-08-16"},{"lineNumber":169,"author":{"gitId":"leonghongfai"},"content":"            } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":170,"author":{"gitId":"leonghongfai"},"content":"                throw new DukeException(\"invalidTaskNumber\");","lastModifiedDate":"2021-08-18"},{"lineNumber":171,"author":{"gitId":"leonghongfai"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":172,"author":{"gitId":"leonghongfai"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":173,"author":{"gitId":"leonghongfai"},"content":"            throw new DukeException(\"invalidNumberFormat\");","lastModifiedDate":"2021-08-18"},{"lineNumber":174,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":175,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":176,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":177,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":178,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":179,"author":{"gitId":"leonghongfai"},"content":"     * Deletes a specified task from the list of tasks.","lastModifiedDate":"2021-08-18"},{"lineNumber":180,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":181,"author":{"gitId":"leonghongfai"},"content":"     * @param command entered by the user.","lastModifiedDate":"2021-08-18"},{"lineNumber":182,"author":{"gitId":"leonghongfai"},"content":"     * @throws DukeException upon incorrect command format.","lastModifiedDate":"2021-08-18"},{"lineNumber":183,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":184,"author":{"gitId":"leonghongfai"},"content":"    private static void deleteTask(String command) throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":185,"author":{"gitId":"leonghongfai"},"content":"        String restOfCommand \u003d command.substring(7);","lastModifiedDate":"2021-08-18"},{"lineNumber":186,"author":{"gitId":"leonghongfai"},"content":"        boolean numeric;","lastModifiedDate":"2021-08-18"},{"lineNumber":187,"author":{"gitId":"leonghongfai"},"content":"        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":188,"author":{"gitId":"leonghongfai"},"content":"            int temp \u003d Integer.parseInt(restOfCommand);","lastModifiedDate":"2021-08-18"},{"lineNumber":189,"author":{"gitId":"leonghongfai"},"content":"            numeric \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":190,"author":{"gitId":"leonghongfai"},"content":"        } catch (NumberFormatException err) {","lastModifiedDate":"2021-08-18"},{"lineNumber":191,"author":{"gitId":"leonghongfai"},"content":"            numeric \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":192,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":193,"author":{"gitId":"leonghongfai"},"content":"        if (numeric) {","lastModifiedDate":"2021-08-18"},{"lineNumber":194,"author":{"gitId":"leonghongfai"},"content":"            int taskNum \u003d Integer.parseInt(restOfCommand) - 1;","lastModifiedDate":"2021-08-18"},{"lineNumber":195,"author":{"gitId":"leonghongfai"},"content":"            if (taskNum \u003c storage.size()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":196,"author":{"gitId":"leonghongfai"},"content":"                Task currTask \u003d storage.get(taskNum);","lastModifiedDate":"2021-08-18"},{"lineNumber":197,"author":{"gitId":"leonghongfai"},"content":"                storage.remove(taskNum);","lastModifiedDate":"2021-08-18"},{"lineNumber":198,"author":{"gitId":"leonghongfai"},"content":"                System.out.println(\"    ______________________________________\");","lastModifiedDate":"2021-08-18"},{"lineNumber":199,"author":{"gitId":"leonghongfai"},"content":"                System.out.println(\"     Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2021-08-18"},{"lineNumber":200,"author":{"gitId":"leonghongfai"},"content":"                System.out.printf(\"       %s\\n\", currTask);","lastModifiedDate":"2021-08-18"},{"lineNumber":201,"author":{"gitId":"leonghongfai"},"content":"                System.out.printf(\"     Now you have %d tasks in the list.\\n\", storage.size());","lastModifiedDate":"2021-08-18"},{"lineNumber":202,"author":{"gitId":"leonghongfai"},"content":"                System.out.println(\"    ______________________________________\");","lastModifiedDate":"2021-08-18"},{"lineNumber":203,"author":{"gitId":"leonghongfai"},"content":"            } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":204,"author":{"gitId":"leonghongfai"},"content":"                throw new DukeException(\"invalidTaskNumber\");","lastModifiedDate":"2021-08-18"},{"lineNumber":205,"author":{"gitId":"leonghongfai"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":206,"author":{"gitId":"leonghongfai"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":207,"author":{"gitId":"leonghongfai"},"content":"            throw new DukeException(\"invalidNumberFormatDelete\");","lastModifiedDate":"2021-08-18"},{"lineNumber":208,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":209,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":210,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":211,"author":{"gitId":"leonghongfai"},"content":"    private static void commands() throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":212,"author":{"gitId":"leonghongfai"},"content":"        int pointer \u003d 1;","lastModifiedDate":"2021-08-18"},{"lineNumber":213,"author":{"gitId":"leonghongfai"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\n\");","lastModifiedDate":"2021-08-18"},{"lineNumber":214,"author":{"gitId":"leonghongfai"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2021-08-18"},{"lineNumber":215,"author":{"gitId":"leonghongfai"},"content":"        System.out.println(\"__________________________________________\");","lastModifiedDate":"2021-08-18"},{"lineNumber":216,"author":{"gitId":"leonghongfai"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-18"},{"lineNumber":217,"author":{"gitId":"leonghongfai"},"content":"        while (scanner.hasNext()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":218,"author":{"gitId":"leonghongfai"},"content":"            String command \u003d scanner.nextLine();","lastModifiedDate":"2021-08-18"},{"lineNumber":219,"author":{"gitId":"leonghongfai"},"content":"            String[] words \u003d command.split(\" \");","lastModifiedDate":"2021-08-18"},{"lineNumber":220,"author":{"gitId":"leonghongfai"},"content":"            String init \u003d words[0];","lastModifiedDate":"2021-08-18"},{"lineNumber":221,"author":{"gitId":"leonghongfai"},"content":"            if (!command.equals(\"bye\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":222,"author":{"gitId":"leonghongfai"},"content":"                try {","lastModifiedDate":"2021-08-18"},{"lineNumber":223,"author":{"gitId":"leonghongfai"},"content":"                    switch (init) {","lastModifiedDate":"2021-08-18"},{"lineNumber":224,"author":{"gitId":"leonghongfai"},"content":"                        case (\"list\"):","lastModifiedDate":"2021-08-18"},{"lineNumber":225,"author":{"gitId":"leonghongfai"},"content":"                            printList(command);","lastModifiedDate":"2021-08-18"},{"lineNumber":226,"author":{"gitId":"leonghongfai"},"content":"                            break;","lastModifiedDate":"2021-08-18"},{"lineNumber":227,"author":{"gitId":"leonghongfai"},"content":"                        case (\"todo\"):","lastModifiedDate":"2021-08-18"},{"lineNumber":228,"author":{"gitId":"leonghongfai"},"content":"                            addToDo(command);","lastModifiedDate":"2021-08-18"},{"lineNumber":229,"author":{"gitId":"leonghongfai"},"content":"                            break;","lastModifiedDate":"2021-08-18"},{"lineNumber":230,"author":{"gitId":"leonghongfai"},"content":"                        case (\"deadline\"):","lastModifiedDate":"2021-08-18"},{"lineNumber":231,"author":{"gitId":"leonghongfai"},"content":"                            addDeadline(command);","lastModifiedDate":"2021-08-18"},{"lineNumber":232,"author":{"gitId":"leonghongfai"},"content":"                            break;","lastModifiedDate":"2021-08-18"},{"lineNumber":233,"author":{"gitId":"leonghongfai"},"content":"                        case (\"event\"):","lastModifiedDate":"2021-08-18"},{"lineNumber":234,"author":{"gitId":"leonghongfai"},"content":"                            addEvent(command);","lastModifiedDate":"2021-08-18"},{"lineNumber":235,"author":{"gitId":"leonghongfai"},"content":"                            break;","lastModifiedDate":"2021-08-18"},{"lineNumber":236,"author":{"gitId":"leonghongfai"},"content":"                        case (\"done\"):","lastModifiedDate":"2021-08-18"},{"lineNumber":237,"author":{"gitId":"leonghongfai"},"content":"                            markCompleted(command);","lastModifiedDate":"2021-08-18"},{"lineNumber":238,"author":{"gitId":"leonghongfai"},"content":"                            break;","lastModifiedDate":"2021-08-18"},{"lineNumber":239,"author":{"gitId":"leonghongfai"},"content":"                        case (\"delete\"):","lastModifiedDate":"2021-08-18"},{"lineNumber":240,"author":{"gitId":"leonghongfai"},"content":"                            deleteTask(command);","lastModifiedDate":"2021-08-18"},{"lineNumber":241,"author":{"gitId":"leonghongfai"},"content":"                            break;","lastModifiedDate":"2021-08-18"},{"lineNumber":242,"author":{"gitId":"leonghongfai"},"content":"                        default:","lastModifiedDate":"2021-08-18"},{"lineNumber":243,"author":{"gitId":"leonghongfai"},"content":"                            throw new DukeException(\"invalidCommand\");","lastModifiedDate":"2021-08-18"},{"lineNumber":244,"author":{"gitId":"leonghongfai"},"content":"                    }","lastModifiedDate":"2021-08-18"},{"lineNumber":245,"author":{"gitId":"leonghongfai"},"content":"                } catch (DukeException err) {","lastModifiedDate":"2021-08-18"},{"lineNumber":246,"author":{"gitId":"leonghongfai"},"content":"                    System.out.println(\"    ______________________________________\");","lastModifiedDate":"2021-08-18"},{"lineNumber":247,"author":{"gitId":"leonghongfai"},"content":"                    System.out.printf(\"     %s\\n\", err);","lastModifiedDate":"2021-08-18"},{"lineNumber":248,"author":{"gitId":"leonghongfai"},"content":"                    System.out.println(\"    ______________________________________\");","lastModifiedDate":"2021-08-18"},{"lineNumber":249,"author":{"gitId":"leonghongfai"},"content":"                }","lastModifiedDate":"2021-08-18"},{"lineNumber":250,"author":{"gitId":"leonghongfai"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":251,"author":{"gitId":"leonghongfai"},"content":"            else {","lastModifiedDate":"2021-08-18"},{"lineNumber":252,"author":{"gitId":"leonghongfai"},"content":"                byeCommand();","lastModifiedDate":"2021-08-18"},{"lineNumber":253,"author":{"gitId":"leonghongfai"},"content":"                scanner.close();","lastModifiedDate":"2021-08-18"},{"lineNumber":254,"author":{"gitId":"leonghongfai"},"content":"                break;","lastModifiedDate":"2021-08-18"},{"lineNumber":255,"author":{"gitId":"leonghongfai"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":256,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":257,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":258,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":259,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":260,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":261,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":262,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"leonghongfai":253,"-":9}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leonghongfai"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"leonghongfai"},"content":" * Description:","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"leonghongfai"},"content":" * DukeException class stores a variety of error messages that will be printed accordingly based on the","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"leonghongfai"},"content":" * error encountered while Duke is running.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"leonghongfai"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"leonghongfai"},"content":" * @author Leong Hong Fai","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"leonghongfai"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"leonghongfai"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"leonghongfai"},"content":"    private final String INVALIDTODO \u003d \"Enter a valid todo in this format \u0027todo \u003ctask here\u003e\u0027\";","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"leonghongfai"},"content":"    private final String NOTASKSEXCEPTION \u003d \"There are no tasks in the list yet!\";","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"leonghongfai"},"content":"    private final String INVALIDDEADLINE \u003d \"Enter a valid deadline in this format \u0027deadline \u003ctask\u003e /by \u003cdate or day\u003e\u0027\";","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"leonghongfai"},"content":"    private final String INVALIDEVENT \u003d \"Enter a valid event in this format \u0027event \u003ctask\u003e /at \u003cdate or day\u003e\u0027\";","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"leonghongfai"},"content":"    private final String INVALIDTASKNUMBER \u003d \"Current task number does not exist. Enter \u003clist\u003e to see all tasks\";","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"leonghongfai"},"content":"    private final String INVALIDNUMBERFORMAT \u003d \"Enter a valid number in this format \u0027done \u003cnumber\u003e\u0027\";","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"leonghongfai"},"content":"    private final String INVALIDCOMMAND \u003d \"Enter a valid command!\";","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"leonghongfai"},"content":"    private final String INVALIDNUMBERFORMATDELETE \u003d \"Enter a valid number in this format \u0027delete \u003cnumber\u003e\u0027\";","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"leonghongfai"},"content":"    private String type;","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"leonghongfai"},"content":"    private String errorMessage;","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"leonghongfai"},"content":"    public DukeException(String type) {","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"leonghongfai"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"leonghongfai"},"content":"        switch (type) {","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"leonghongfai"},"content":"            case (\"invalidToDo\"):","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"leonghongfai"},"content":"                errorMessage \u003d INVALIDTODO;","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"leonghongfai"},"content":"                break;","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"leonghongfai"},"content":"            case (\"noTasksException\"):","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"leonghongfai"},"content":"                errorMessage \u003d NOTASKSEXCEPTION;","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"leonghongfai"},"content":"                break;","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"leonghongfai"},"content":"            case (\"invalidDeadline\"):","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"leonghongfai"},"content":"                errorMessage \u003d INVALIDDEADLINE;","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"leonghongfai"},"content":"                break;","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"leonghongfai"},"content":"            case (\"invalidEvent\"):","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"leonghongfai"},"content":"                errorMessage \u003d INVALIDEVENT;","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"leonghongfai"},"content":"                break;","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"leonghongfai"},"content":"            case (\"invalidTaskNumber\"):","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"leonghongfai"},"content":"                errorMessage \u003d INVALIDTASKNUMBER;","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"leonghongfai"},"content":"                break;","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"leonghongfai"},"content":"            case (\"invalidNumberFormat\"):","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"leonghongfai"},"content":"                errorMessage \u003d INVALIDNUMBERFORMAT;","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"leonghongfai"},"content":"                break;","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"leonghongfai"},"content":"            case (\"invalidCommand\"):","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"leonghongfai"},"content":"                errorMessage \u003d INVALIDCOMMAND;","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"leonghongfai"},"content":"                break;","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"leonghongfai"},"content":"            case (\"invalidNumberFormatDelete\"):","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"leonghongfai"},"content":"                errorMessage \u003d INVALIDNUMBERFORMATDELETE;","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"leonghongfai"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"leonghongfai"},"content":"     * Simple string representation of DukeException.","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"leonghongfai"},"content":"     * @return A string consisting of the relevant error message.","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"leonghongfai"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"leonghongfai"},"content":"        return errorMessage;","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"leonghongfai"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"leonghongfai":60}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leonghongfai"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"leonghongfai"},"content":" * Description:","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"leonghongfai"},"content":" * Events: tasks that start at a specific time and ends at a specific time e.g., team project meeting on 2/10/2019 2-4pm.","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"leonghongfai"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"leonghongfai"},"content":" * @author Leong Hong Fai","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"leonghongfai"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"leonghongfai"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"leonghongfai"},"content":"    private String name;","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"leonghongfai"},"content":"    private String date;","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"leonghongfai"},"content":"    public Event(String name, String date) {","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"leonghongfai"},"content":"        super(name);","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"leonghongfai"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"leonghongfai"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"leonghongfai"},"content":"     * Simple string representation of Event.","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"leonghongfai"},"content":"     * @return A string consisting of the information of the Event object.","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"leonghongfai"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"leonghongfai"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"leonghongfai"},"content":"        return \"[E]\" + super.toString() + \"(at: \" + date + \")\";","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"leonghongfai"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"leonghongfai":27}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leonghongfai"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"leonghongfai"},"content":" * Description:","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"leonghongfai"},"content":" * Simple parent class to Event, ToDo, and Deadline.","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"leonghongfai"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"leonghongfai"},"content":" * @author Leong Hong Fai","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"leonghongfai"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"leonghongfai"},"content":"public class Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"leonghongfai"},"content":"    private String name;","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"leonghongfai"},"content":"    private boolean completion;","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"leonghongfai"},"content":"    public Task(String name) {","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"leonghongfai"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"leonghongfai"},"content":"        this.completion \u003d false;","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"leonghongfai"},"content":"     * Marks current task as completed.","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"leonghongfai"},"content":"    public void setCompleted() {","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"leonghongfai"},"content":"        this.completion \u003d true;","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"leonghongfai"},"content":"     * @return X or space depending on completion status of the Task object.","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"leonghongfai"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"leonghongfai"},"content":"        return (this.completion","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"leonghongfai"},"content":"                ?\"X\"","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"leonghongfai"},"content":"                :\" \");","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"leonghongfai"},"content":"     * Simple string representation of Task.","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"leonghongfai"},"content":"     * @return A string consisting of the information of the Task object.","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"leonghongfai"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"leonghongfai"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"leonghongfai"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.name;","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"leonghongfai"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"leonghongfai":45}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leonghongfai"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"leonghongfai"},"content":" * Description:","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"leonghongfai"},"content":" * ToDos: tasks without any date/time attached to it e.g., visit new theme park.","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"leonghongfai"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"leonghongfai"},"content":" * @author Leong Hong Fai","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"leonghongfai"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"leonghongfai"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"leonghongfai"},"content":"    private String name;","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"leonghongfai"},"content":"    public ToDo(String name) {","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"leonghongfai"},"content":"        super(name);","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"leonghongfai"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"leonghongfai"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"leonghongfai"},"content":"     * Simple string representation of ToDo.","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"leonghongfai"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"leonghongfai"},"content":"     * @return A string consisting of the information of the ToDo object.","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"leonghongfai"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"leonghongfai"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"leonghongfai"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"leonghongfai"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"leonghongfai"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"leonghongfai"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"leonghongfai":24}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"leonghongfai"},"content":"hello","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"leonghongfai"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"leonghongfai"},"content":"deadline","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"leonghongfai"},"content":"event example2 /at Monday","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"leonghongfai"},"content":"event","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"leonghongfai"},"content":"todo something","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"leonghongfai"},"content":"todo","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"leonghongfai"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"leonghongfai"},"content":"done 3","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"leonghongfai"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"leonghongfai"},"content":"done 6","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"leonghongfai"},"content":"delete 1","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"leonghongfai"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"leonghongfai"},"content":"delete 6","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"leonghongfai"},"content":"bye","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"leonghongfai":15}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"leonghongfai"},"content":".@ECHO OFF","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"leonghongfai":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"leonghongfai"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"leonghongfai"},"content":"    read","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"leonghongfai"},"content":"    read","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"leonghongfai":3,"-":30}}]
