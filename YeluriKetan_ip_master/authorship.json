[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"YeluriKetan":1,"-":45}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"    /** Storage object that reads from and writes onto the hard disk  */","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"    /** TaskList object that maintains and updates the list of tasks */","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"    /** Ui object to be used to interact with the user via the command line interface */","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"     * Constructs a Duke object and initialises the class members.","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"    public Duke() {","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"            storage \u003d new Storage();","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"            taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"        } catch (DukeException ex) {","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"            ui.showStorageError();","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"            storage \u003d null;","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"     * Runs the bot and actively listens and executes the user commands until closed by the user.","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"    public void run() {","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"        ui.showWelcome();","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"        ui.beginListen();","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"YeluriKetan"},"content":"        while (!isExit) {","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"YeluriKetan"},"content":"            try {","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"YeluriKetan"},"content":"                String newCommand \u003d ui.readCommand();","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"YeluriKetan"},"content":"                String[] parsedCommand \u003d Parser.parse(newCommand);","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"YeluriKetan"},"content":"                switch (parsedCommand[0]) {","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"YeluriKetan"},"content":"                case \"bye\":","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"YeluriKetan"},"content":"                    ui.showGoodbye();","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"YeluriKetan"},"content":"                    isExit \u003d true;","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"YeluriKetan"},"content":"                    break;","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"YeluriKetan"},"content":"                case \"list\":","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"YeluriKetan"},"content":"                    ui.showList(taskList.getList());","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"YeluriKetan"},"content":"                    break;","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"YeluriKetan"},"content":"                case \"add\":","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"YeluriKetan"},"content":"                    addTask(parsedCommand);","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"YeluriKetan"},"content":"                    break;","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"YeluriKetan"},"content":"                case \"done\":","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"YeluriKetan"},"content":"                    markTaskDone(parsedCommand);","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"YeluriKetan"},"content":"                    break;","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"YeluriKetan"},"content":"                case \"delete\":","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"YeluriKetan"},"content":"                    deleteTask(parsedCommand);","lastModifiedDate":"2021-08-27"},{"lineNumber":65,"author":{"gitId":"YeluriKetan"},"content":"                    break;","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"YeluriKetan"},"content":"                case \"find\":","lastModifiedDate":"2021-08-27"},{"lineNumber":67,"author":{"gitId":"YeluriKetan"},"content":"                    ui.showFindList(taskList.findTasks(parsedCommand[1]));","lastModifiedDate":"2021-08-27"},{"lineNumber":68,"author":{"gitId":"YeluriKetan"},"content":"                    break;","lastModifiedDate":"2021-08-27"},{"lineNumber":69,"author":{"gitId":"YeluriKetan"},"content":"                case \"fail\":","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"YeluriKetan"},"content":"                    ui.showCommandFail();","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"YeluriKetan"},"content":"                    break;","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"YeluriKetan"},"content":"                default:","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"YeluriKetan"},"content":"                    break;","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"YeluriKetan"},"content":"                }","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"YeluriKetan"},"content":"            } catch (DukeException | IOException ex) {","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"YeluriKetan"},"content":"                ui.showError(ex.getMessage());","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"YeluriKetan"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":80,"author":{"gitId":"YeluriKetan"},"content":"        ui.stopListen();","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"YeluriKetan"},"content":"    private void addTask(String[] parsedCommand) throws IOException {","lastModifiedDate":"2021-08-27"},{"lineNumber":84,"author":{"gitId":"YeluriKetan"},"content":"        Task newTask \u003d null;","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"YeluriKetan"},"content":"        switch (parsedCommand[1]) {","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"YeluriKetan"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"YeluriKetan"},"content":"            newTask \u003d new Todo(parsedCommand[2]);","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"YeluriKetan"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"YeluriKetan"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"YeluriKetan"},"content":"            LocalDateTime by \u003d Parser.parseDateTime(parsedCommand[3]);","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"YeluriKetan"},"content":"            newTask \u003d new Deadline(parsedCommand[2], by);","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"YeluriKetan"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"YeluriKetan"},"content":"        case \"event\":","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"YeluriKetan"},"content":"            LocalDateTime from \u003d Parser.parseDateTime(parsedCommand[3]);","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"YeluriKetan"},"content":"            LocalDateTime to \u003d Parser.parseDateTime(parsedCommand[3]);","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"YeluriKetan"},"content":"            newTask \u003d new Event(parsedCommand[2], from, to);","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"YeluriKetan"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"YeluriKetan"},"content":"        default:","lastModifiedDate":"2021-08-26"},{"lineNumber":99,"author":{"gitId":"YeluriKetan"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"YeluriKetan"},"content":"        if (newTask !\u003d null) {","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"YeluriKetan"},"content":"            storage.storeAdd(newTask.toStorage());","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"YeluriKetan"},"content":"            String message \u003d taskList.addTask(newTask);","lastModifiedDate":"2021-08-26"},{"lineNumber":104,"author":{"gitId":"YeluriKetan"},"content":"            ui.showMessage(message);","lastModifiedDate":"2021-08-26"},{"lineNumber":105,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":106,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":107,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":108,"author":{"gitId":"YeluriKetan"},"content":"    private void markTaskDone(String[] parsedCommand) throws IOException {","lastModifiedDate":"2021-08-27"},{"lineNumber":109,"author":{"gitId":"YeluriKetan"},"content":"        int taskIndex \u003d Parser.parseIndex(parsedCommand[1]);","lastModifiedDate":"2021-08-26"},{"lineNumber":110,"author":{"gitId":"YeluriKetan"},"content":"        if (taskList.isIndexValid(taskIndex)) {","lastModifiedDate":"2021-08-26"},{"lineNumber":111,"author":{"gitId":"YeluriKetan"},"content":"            String message \u003d taskList.markTaskDone(taskIndex);","lastModifiedDate":"2021-09-02"},{"lineNumber":112,"author":{"gitId":"YeluriKetan"},"content":"            ui.showMessage(message);","lastModifiedDate":"2021-08-26"},{"lineNumber":113,"author":{"gitId":"YeluriKetan"},"content":"            String taskStorage \u003d taskList.getTaskStorage(taskIndex);","lastModifiedDate":"2021-08-26"},{"lineNumber":114,"author":{"gitId":"YeluriKetan"},"content":"            storage.storeDone(taskIndex, taskStorage);","lastModifiedDate":"2021-08-26"},{"lineNumber":115,"author":{"gitId":"YeluriKetan"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":116,"author":{"gitId":"YeluriKetan"},"content":"            ui.showError(\"That task doesn\u0027t exist.\\nPlease Try again.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":117,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":118,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":119,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":120,"author":{"gitId":"YeluriKetan"},"content":"    private void deleteTask(String[] parsedCommand) throws IOException {","lastModifiedDate":"2021-08-27"},{"lineNumber":121,"author":{"gitId":"YeluriKetan"},"content":"        int taskIndex \u003d Parser.parseIndex(parsedCommand[1]);","lastModifiedDate":"2021-08-26"},{"lineNumber":122,"author":{"gitId":"YeluriKetan"},"content":"        if (taskList.isIndexValid(taskIndex)) {","lastModifiedDate":"2021-08-26"},{"lineNumber":123,"author":{"gitId":"YeluriKetan"},"content":"            String message \u003d taskList.deleteTask(taskIndex);","lastModifiedDate":"2021-08-26"},{"lineNumber":124,"author":{"gitId":"YeluriKetan"},"content":"            ui.showMessage(message);","lastModifiedDate":"2021-08-26"},{"lineNumber":125,"author":{"gitId":"YeluriKetan"},"content":"            storage.storeDelete(taskIndex);","lastModifiedDate":"2021-08-26"},{"lineNumber":126,"author":{"gitId":"YeluriKetan"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":127,"author":{"gitId":"YeluriKetan"},"content":"            ui.showError(\"That task doesn\u0027t exist.\\nPlease Try again.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":128,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":129,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":130,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":131,"author":{"gitId":"YeluriKetan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-26"},{"lineNumber":132,"author":{"gitId":"YeluriKetan"},"content":"        new Duke().run();","lastModifiedDate":"2021-08-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"YeluriKetan":131,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"public class DukeException extends IllegalArgumentException {","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"    protected DukeException(String errorMsg) {","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"        super(errorMsg);","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"YeluriKetan":9}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"public class Parser {","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"     * Returns a String array that contains the useful and necessary parts of a command to be executed.","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"     * @param newCommand String version of a command.","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"     * @return String array.","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"    public static String[] parse(String newCommand) {","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"        if (Pattern.compile(\"(?i)bye\\\\s*\").matcher(newCommand).matches()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"            return new String[]{\"bye\"};","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"        } else if (Pattern.compile(\"(?i)list\\\\s*\").matcher(newCommand).matches()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"            return new String[]{\"list\"};","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"        } else if (Pattern.compile(\"(?i)done\\\\s+\\\\d+\\\\s*\").matcher(newCommand).matches()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"            return new String[]{\"done\", newCommand.substring(4).trim()};","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"        } else if (Pattern.compile(\"(?i)delete\\\\s+\\\\d+\\\\s*\").matcher(newCommand).matches()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"            return new String[]{\"delete\", newCommand.substring(6).trim()};","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"        } else if (Pattern.compile(\"(?i)todo.*\").matcher(newCommand).matches()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"            return parseTodo(newCommand);","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"        } else if (Pattern.compile(\"(?i)deadline.*\").matcher(newCommand).matches()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"            return parseDeadline(newCommand);","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"        } else if (Pattern.compile(\"(?i)event.*\").matcher(newCommand).matches()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"            return parseEvent(newCommand);","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"        } else if (Pattern.compile(\"(?i)find.*\").matcher(newCommand).matches()) {","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"            return parseFind(newCommand);","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"            return new String[]{\"fail\"};","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"     * Returns a LocalDateTime object after parsing a string version of date and time.","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"     * @param dateTime String version of date and time.","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"     * @return LocalDateTime object.","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"    public static LocalDateTime parseDateTime(String dateTime) {","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"YeluriKetan"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy MM dd HHmm\");","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"YeluriKetan"},"content":"        LocalDateTime deadlineDT;","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"YeluriKetan"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"YeluriKetan"},"content":"            deadlineDT \u003d LocalDateTime.parse(dateTime, formatter);","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"YeluriKetan"},"content":"            return deadlineDT;","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"YeluriKetan"},"content":"        } catch (DateTimeException ex) {","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"YeluriKetan"},"content":"            throw new DukeException(ex.getMessage() + \"\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"YeluriKetan"},"content":"                    + \"Please try again.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"YeluriKetan"},"content":"     * Returns the integer version of a string number.","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"YeluriKetan"},"content":"     * @param intString String version of a number.","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"YeluriKetan"},"content":"     * @return integer version of the given number.","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"YeluriKetan"},"content":"    public static int parseIndex(String intString) {","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"YeluriKetan"},"content":"        return Integer.parseInt(intString.trim());","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"YeluriKetan"},"content":"    private static String[] parseTodo(String newCommand) {","lastModifiedDate":"2021-09-02"},{"lineNumber":68,"author":{"gitId":"YeluriKetan"},"content":"        String[] strArr \u003d Pattern.compile(\"(?i)todo\\\\s+\").split(newCommand, 2);","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":70,"author":{"gitId":"YeluriKetan"},"content":"        if (strArr.length \u003d\u003d 2 \u0026\u0026 strArr[1].length() \u003e 0) {","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"YeluriKetan"},"content":"            return new String[]{\"add\", \"todo\", strArr[1]};","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"YeluriKetan"},"content":"        } else if (strArr.length \u003d\u003d 2 || strArr[0].length() \u003d\u003d 4) {","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"YeluriKetan"},"content":"            throw new DukeException(\"The description of a TODO task cannot be empty.\\nPlease try again.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"YeluriKetan"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"YeluriKetan"},"content":"            throw new DukeException(\"There appears to be a typo in your TODO command.\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"YeluriKetan"},"content":"                    + \"The command should be of the form:\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"YeluriKetan"},"content":"                    + \"  todo \u0027description\u0027\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"YeluriKetan"},"content":"                    + \"Please try again.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"YeluriKetan"},"content":"    private static String[] parseDeadline(String newCommand) {","lastModifiedDate":"2021-09-02"},{"lineNumber":83,"author":{"gitId":"YeluriKetan"},"content":"        if (Pattern.compile(\"(?i)(deadline ).*\\\\S+.*( /by )\\\\d{4}\\\\s\\\\d{2}\\\\s\\\\d{2}\\\\s\\\\d{4}\")","lastModifiedDate":"2021-09-02"},{"lineNumber":84,"author":{"gitId":"YeluriKetan"},"content":"                .matcher(newCommand).matches()) {","lastModifiedDate":"2021-09-02"},{"lineNumber":85,"author":{"gitId":"YeluriKetan"},"content":"            String[] strArr \u003d newCommand.substring(8).split(\" /by \", 2);","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"YeluriKetan"},"content":"            return new String[]{\"add\", \"deadline\", strArr[0].trim(), strArr[1].trim()};","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"YeluriKetan"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"YeluriKetan"},"content":"            throw new DukeException(\"There appears to be a typo in your DEADLINE command.\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"YeluriKetan"},"content":"                    + \"The command should be of the form:\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"YeluriKetan"},"content":"                    + \"  deadline \u0027description\u0027 /by \u0027yyyy mm dd hhmm\u0027\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"YeluriKetan"},"content":"                    + \"Please try again.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"YeluriKetan"},"content":"    private static String[] parseEvent(String newCommand) {","lastModifiedDate":"2021-09-02"},{"lineNumber":96,"author":{"gitId":"YeluriKetan"},"content":"        if (Pattern.compile(\"(?i)(event ).*\\\\S+.*( /from )\\\\d{4}\\\\s\\\\d{2}\\\\s\\\\d{2}\\\\s\\\\d{4}\"","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"YeluriKetan"},"content":"                + \"( to )\\\\d{4}\\\\s\\\\d{2}\\\\s\\\\d{2}\\\\s\\\\d{4}\").matcher(newCommand).matches()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"YeluriKetan"},"content":"            String[] strArr \u003d newCommand.substring(5).split(\" /from \", 2);","lastModifiedDate":"2021-08-26"},{"lineNumber":99,"author":{"gitId":"YeluriKetan"},"content":"            String[] dateTimeArr \u003d strArr[1].split(\" to \", 2);","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"YeluriKetan"},"content":"            return new String[]{\"add\", \"event\", strArr[0].trim(), dateTimeArr[0], dateTimeArr[1]};","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"YeluriKetan"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"YeluriKetan"},"content":"            throw new DukeException(\"There appears to be a typo in your EVENT command.\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"YeluriKetan"},"content":"                    + \"The command should be of the form:\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":104,"author":{"gitId":"YeluriKetan"},"content":"                    + \"  event \u0027description\u0027 /from \u0027yyyy mm dd hhmm\u0027 to \u0027yyyy mm dd hhmm\u0027\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":105,"author":{"gitId":"YeluriKetan"},"content":"                    + \"Please try again.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":106,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":107,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":108,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":109,"author":{"gitId":"YeluriKetan"},"content":"    private static String[] parseFind(String newCommand) {","lastModifiedDate":"2021-08-27"},{"lineNumber":110,"author":{"gitId":"YeluriKetan"},"content":"        String[] strArr \u003d Pattern.compile(\"(?i)find\\\\s+\").split(newCommand, 2);","lastModifiedDate":"2021-08-27"},{"lineNumber":111,"author":{"gitId":"YeluriKetan"},"content":"        if (strArr.length \u003d\u003d 2 \u0026\u0026 strArr[1].length() \u003e 0) {","lastModifiedDate":"2021-08-27"},{"lineNumber":112,"author":{"gitId":"YeluriKetan"},"content":"            return new String[]{\"find\", strArr[1].trim()};","lastModifiedDate":"2021-08-27"},{"lineNumber":113,"author":{"gitId":"YeluriKetan"},"content":"        } else if (strArr.length \u003d\u003d 2 || strArr[0].length() \u003d\u003d 4) {","lastModifiedDate":"2021-08-27"},{"lineNumber":114,"author":{"gitId":"YeluriKetan"},"content":"            throw new DukeException(\"The contents of a FIND command cannot be empty.\\nPlease try again.\");","lastModifiedDate":"2021-08-27"},{"lineNumber":115,"author":{"gitId":"YeluriKetan"},"content":"        } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":116,"author":{"gitId":"YeluriKetan"},"content":"            throw new DukeException(\"There appears to be a typo in your FIND command.\\n\"","lastModifiedDate":"2021-08-27"},{"lineNumber":117,"author":{"gitId":"YeluriKetan"},"content":"                    + \"The command should be of the form:\\n\"","lastModifiedDate":"2021-08-27"},{"lineNumber":118,"author":{"gitId":"YeluriKetan"},"content":"                    + \"  find \u0027content\u0027\\n\"","lastModifiedDate":"2021-08-27"},{"lineNumber":119,"author":{"gitId":"YeluriKetan"},"content":"                    + \"Please try again.\");","lastModifiedDate":"2021-08-27"},{"lineNumber":120,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":121,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":122,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"YeluriKetan":122}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"import java.io.File;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"public class Storage {","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"    private File taskDataFile;","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"     * Constructs a Storage object and initializes the taskDataFile File object.","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"    public Storage() {","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"            File taskDataDir \u003d new File(Paths.get(\"data\").toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"            if (!taskDataDir.exists()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"                taskDataDir.mkdir();","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"            File taskDataFile \u003d new File(Paths.get(\"data\", \"taskData.txt\").toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"            if (!taskDataFile.exists()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"                taskDataFile.createNewFile();","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"            this.taskDataFile \u003d taskDataFile;","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"            throw new DukeException(ex.getMessage() + \"\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"                    + \"Couldn\u0027t access/create necessary file to store tasks.\"","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"                    + \"Please exit the bot if you don\u0027t want to lose new tasks.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"     * Returns a list containing all the tasks after reading through a text file saved on the hard disk.","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"YeluriKetan"},"content":"     * @return List containing all the saved tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"YeluriKetan"},"content":"    public ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"YeluriKetan"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"YeluriKetan"},"content":"            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"YeluriKetan"},"content":"            Scanner loadScan \u003d new Scanner(taskDataFile);","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"YeluriKetan"},"content":"            while (loadScan.hasNextLine()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"YeluriKetan"},"content":"                String[] nextLineArr \u003d loadScan.nextLine().split(\"%\");","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"YeluriKetan"},"content":"                switch (nextLineArr[0]) {","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"YeluriKetan"},"content":"                case \"T\":","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"YeluriKetan"},"content":"                    tasks.add(new Todo(nextLineArr[2], Boolean.parseBoolean(nextLineArr[1])));","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"YeluriKetan"},"content":"                    break;","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"YeluriKetan"},"content":"                case \"E\":","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"YeluriKetan"},"content":"                    tasks.add(new Event(nextLineArr[2], Boolean.parseBoolean(nextLineArr[1]),","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"YeluriKetan"},"content":"                            LocalDateTime.parse(nextLineArr[3]), LocalDateTime.parse(nextLineArr[4])));","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"YeluriKetan"},"content":"                    break;","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"YeluriKetan"},"content":"                case \"D\":","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"YeluriKetan"},"content":"                    tasks.add(new Deadline(nextLineArr[2], Boolean.parseBoolean(nextLineArr[1]),","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"YeluriKetan"},"content":"                            LocalDateTime.parse(nextLineArr[3])));","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"YeluriKetan"},"content":"                    break;","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"YeluriKetan"},"content":"                default:","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"YeluriKetan"},"content":"                    break;","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"YeluriKetan"},"content":"                }","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"YeluriKetan"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"YeluriKetan"},"content":"            loadScan.close();","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"YeluriKetan"},"content":"            return tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"YeluriKetan"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"YeluriKetan"},"content":"            throw new DukeException(ex.getMessage() + \"\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"YeluriKetan"},"content":"                    + \"Couldn\u0027t load data from stored file.\"","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"YeluriKetan"},"content":"                    + \"Please exit the bot if you don\u0027t want to lose new tasks.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":80,"author":{"gitId":"YeluriKetan"},"content":"     * Writes a new Task to the storage document of Duke.","lastModifiedDate":"2021-09-02"},{"lineNumber":81,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":82,"author":{"gitId":"YeluriKetan"},"content":"     * @param taskStorage Storage string version of the new Task.","lastModifiedDate":"2021-09-02"},{"lineNumber":83,"author":{"gitId":"YeluriKetan"},"content":"     * @throws IOException If file access or modification is obstructed.","lastModifiedDate":"2021-09-02"},{"lineNumber":84,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":85,"author":{"gitId":"YeluriKetan"},"content":"    public void storeAdd(String taskStorage) throws IOException {","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"YeluriKetan"},"content":"        FileWriter taskDataWriter \u003d new FileWriter(taskDataFile, true);","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"YeluriKetan"},"content":"        taskDataWriter.write(taskStorage);","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"YeluriKetan"},"content":"        taskDataWriter.close();","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":92,"author":{"gitId":"YeluriKetan"},"content":"     * Writes an existing Task as done in the storage document of Duke.","lastModifiedDate":"2021-09-02"},{"lineNumber":93,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":94,"author":{"gitId":"YeluriKetan"},"content":"     * @param index Index of the Task to be modified.","lastModifiedDate":"2021-09-02"},{"lineNumber":95,"author":{"gitId":"YeluriKetan"},"content":"     * @param taskStorage Storage string version of the modified Task.","lastModifiedDate":"2021-09-02"},{"lineNumber":96,"author":{"gitId":"YeluriKetan"},"content":"     * @throws IOException If file access or modification is obstructed.","lastModifiedDate":"2021-09-02"},{"lineNumber":97,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":98,"author":{"gitId":"YeluriKetan"},"content":"    public void storeDone(int index, String taskStorage) throws IOException {","lastModifiedDate":"2021-08-26"},{"lineNumber":99,"author":{"gitId":"YeluriKetan"},"content":"        BufferedReader taskDataReader \u003d new BufferedReader(new FileReader(taskDataFile));","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"YeluriKetan"},"content":"        StringBuilder newTaskData \u003d new StringBuilder();","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":102,"author":{"gitId":"YeluriKetan"},"content":"        for (int i \u003d 0; i \u003c index - 1; i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"YeluriKetan"},"content":"            newTaskData.append(taskDataReader.readLine() + \"\\n\");","lastModifiedDate":"2021-08-26"},{"lineNumber":104,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":105,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":106,"author":{"gitId":"YeluriKetan"},"content":"        taskDataReader.readLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":107,"author":{"gitId":"YeluriKetan"},"content":"        newTaskData.append(taskStorage);","lastModifiedDate":"2021-08-26"},{"lineNumber":108,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":109,"author":{"gitId":"YeluriKetan"},"content":"        while (true) {","lastModifiedDate":"2021-08-26"},{"lineNumber":110,"author":{"gitId":"YeluriKetan"},"content":"            String nextLine \u003d taskDataReader.readLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":111,"author":{"gitId":"YeluriKetan"},"content":"            if (nextLine \u003d\u003d null) {","lastModifiedDate":"2021-08-26"},{"lineNumber":112,"author":{"gitId":"YeluriKetan"},"content":"                break;","lastModifiedDate":"2021-08-26"},{"lineNumber":113,"author":{"gitId":"YeluriKetan"},"content":"            } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":114,"author":{"gitId":"YeluriKetan"},"content":"                newTaskData.append(nextLine + \"\\n\");","lastModifiedDate":"2021-08-26"},{"lineNumber":115,"author":{"gitId":"YeluriKetan"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":116,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":117,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":118,"author":{"gitId":"YeluriKetan"},"content":"        FileWriter taskDataWriter \u003d new FileWriter(taskDataFile);","lastModifiedDate":"2021-08-26"},{"lineNumber":119,"author":{"gitId":"YeluriKetan"},"content":"        taskDataWriter.write(newTaskData.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":120,"author":{"gitId":"YeluriKetan"},"content":"        taskDataWriter.close();","lastModifiedDate":"2021-08-26"},{"lineNumber":121,"author":{"gitId":"YeluriKetan"},"content":"        taskDataReader.close();","lastModifiedDate":"2021-08-26"},{"lineNumber":122,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":123,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":124,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":125,"author":{"gitId":"YeluriKetan"},"content":"     * Deletes a Task from the storage document of Duke.","lastModifiedDate":"2021-09-02"},{"lineNumber":126,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":127,"author":{"gitId":"YeluriKetan"},"content":"     * @param index Index of the deleted Task.","lastModifiedDate":"2021-09-02"},{"lineNumber":128,"author":{"gitId":"YeluriKetan"},"content":"     * @throws IOException If file access or modification is obstructed.","lastModifiedDate":"2021-09-02"},{"lineNumber":129,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":130,"author":{"gitId":"YeluriKetan"},"content":"    public void storeDelete(int index) throws IOException {","lastModifiedDate":"2021-08-26"},{"lineNumber":131,"author":{"gitId":"YeluriKetan"},"content":"        BufferedReader taskDataReader \u003d new BufferedReader(new FileReader(taskDataFile));","lastModifiedDate":"2021-08-26"},{"lineNumber":132,"author":{"gitId":"YeluriKetan"},"content":"        StringBuilder newTaskData \u003d new StringBuilder();","lastModifiedDate":"2021-08-26"},{"lineNumber":133,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":134,"author":{"gitId":"YeluriKetan"},"content":"        for (int i \u003d 0; i \u003c index - 1; i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":135,"author":{"gitId":"YeluriKetan"},"content":"            newTaskData.append(taskDataReader.readLine() + \"\\n\");","lastModifiedDate":"2021-08-26"},{"lineNumber":136,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":137,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":138,"author":{"gitId":"YeluriKetan"},"content":"        taskDataReader.readLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":139,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":140,"author":{"gitId":"YeluriKetan"},"content":"        while (true) {","lastModifiedDate":"2021-08-26"},{"lineNumber":141,"author":{"gitId":"YeluriKetan"},"content":"            String nextLine \u003d taskDataReader.readLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":142,"author":{"gitId":"YeluriKetan"},"content":"            if (nextLine \u003d\u003d null) {","lastModifiedDate":"2021-08-26"},{"lineNumber":143,"author":{"gitId":"YeluriKetan"},"content":"                break;","lastModifiedDate":"2021-08-26"},{"lineNumber":144,"author":{"gitId":"YeluriKetan"},"content":"            } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":145,"author":{"gitId":"YeluriKetan"},"content":"                newTaskData.append(nextLine + \"\\n\");","lastModifiedDate":"2021-08-26"},{"lineNumber":146,"author":{"gitId":"YeluriKetan"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":147,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":148,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":149,"author":{"gitId":"YeluriKetan"},"content":"        FileWriter taskDataWriter \u003d new FileWriter(taskDataFile);","lastModifiedDate":"2021-08-26"},{"lineNumber":150,"author":{"gitId":"YeluriKetan"},"content":"        taskDataWriter.write(newTaskData.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":151,"author":{"gitId":"YeluriKetan"},"content":"        taskDataWriter.close();","lastModifiedDate":"2021-08-26"},{"lineNumber":152,"author":{"gitId":"YeluriKetan"},"content":"        taskDataReader.close();","lastModifiedDate":"2021-08-26"},{"lineNumber":153,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":154,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"YeluriKetan":154}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"public class TaskList {","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"     * Returns a string message indicating success after adding a task to the list of tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"     * @param newTask New task to be added.","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"     * @return String success message.","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"    public String addTask(Task newTask) {","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"        tasks.add(newTask);","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"        return \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"                + \"  \" + newTask + \"\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"                + countTasks();","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"     * Returns a string message indicating success after marking a task done in the list of tasks.","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"     * @param taskIndex Index of the Task.","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"     * @return String success message.","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"    public String markTaskDone(int taskIndex) {","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"        Task currTask \u003d tasks.get(taskIndex - 1);","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"        currTask.setDone();","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"                + \"  \" + taskIndex + \". \" + currTask;","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"YeluriKetan"},"content":"     * Returns a string message indicating success after deleting a task from the list of tasks.","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"YeluriKetan"},"content":"     * @param taskIndex Index of the Task.","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"YeluriKetan"},"content":"     * @return String success message.","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"YeluriKetan"},"content":"    public String deleteTask(int taskIndex) {","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"YeluriKetan"},"content":"        Task currTask \u003d tasks.get(taskIndex - 1);","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"YeluriKetan"},"content":"        tasks.remove(taskIndex - 1);","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"YeluriKetan"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"YeluriKetan"},"content":"                + \"  \" + taskIndex + \". \" + currTask + \"\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"YeluriKetan"},"content":"                + countTasks();","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"YeluriKetan"},"content":"     * Returns the ArrayList of tasks maintained by this TaskList object.","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":62,"author":{"gitId":"YeluriKetan"},"content":"     * @return ArrayList of Task objects.","lastModifiedDate":"2021-09-02"},{"lineNumber":63,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":64,"author":{"gitId":"YeluriKetan"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"YeluriKetan"},"content":"        return tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":69,"author":{"gitId":"YeluriKetan"},"content":"     * Returns the string representation of a Task (based on the Index) to be used for storage.","lastModifiedDate":"2021-09-02"},{"lineNumber":70,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":71,"author":{"gitId":"YeluriKetan"},"content":"     * @param taskIndex Index of the Task.","lastModifiedDate":"2021-09-02"},{"lineNumber":72,"author":{"gitId":"YeluriKetan"},"content":"     * @return String for storage.","lastModifiedDate":"2021-09-02"},{"lineNumber":73,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":74,"author":{"gitId":"YeluriKetan"},"content":"    public String getTaskStorage(int taskIndex) {","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"YeluriKetan"},"content":"        return tasks.get(taskIndex - 1).toStorage();","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":79,"author":{"gitId":"YeluriKetan"},"content":"     * Returns a boolean indicating the validity of the Task\u0027s Index.","lastModifiedDate":"2021-09-02"},{"lineNumber":80,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":81,"author":{"gitId":"YeluriKetan"},"content":"     * @param taskIndex Index of the Task.","lastModifiedDate":"2021-09-02"},{"lineNumber":82,"author":{"gitId":"YeluriKetan"},"content":"     * @return Validity of the Index.","lastModifiedDate":"2021-09-02"},{"lineNumber":83,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":84,"author":{"gitId":"YeluriKetan"},"content":"    public boolean isIndexValid(int taskIndex) {","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"YeluriKetan"},"content":"        return ((taskIndex - 1) \u003c tasks.size() \u0026\u0026 (taskIndex - 1) \u003e -1);","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":89,"author":{"gitId":"YeluriKetan"},"content":"     * Returns an ArrayList containing all the tasks that have the content in their description.","lastModifiedDate":"2021-09-02"},{"lineNumber":90,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":91,"author":{"gitId":"YeluriKetan"},"content":"     * @param content Content to be searched for.","lastModifiedDate":"2021-09-02"},{"lineNumber":92,"author":{"gitId":"YeluriKetan"},"content":"     * @return ArrayList of Task objects.","lastModifiedDate":"2021-09-02"},{"lineNumber":93,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":94,"author":{"gitId":"YeluriKetan"},"content":"    public ArrayList\u003cTask\u003e findTasks(String content) {","lastModifiedDate":"2021-08-27"},{"lineNumber":95,"author":{"gitId":"YeluriKetan"},"content":"        ArrayList\u003cTask\u003e findTasksResult \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-27"},{"lineNumber":96,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":97,"author":{"gitId":"YeluriKetan"},"content":"        for (Task currTask: tasks) {","lastModifiedDate":"2021-08-27"},{"lineNumber":98,"author":{"gitId":"YeluriKetan"},"content":"            if (currTask.hasContent(content)) {","lastModifiedDate":"2021-09-02"},{"lineNumber":99,"author":{"gitId":"YeluriKetan"},"content":"                findTasksResult.add(currTask);","lastModifiedDate":"2021-08-27"},{"lineNumber":100,"author":{"gitId":"YeluriKetan"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":101,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":102,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":103,"author":{"gitId":"YeluriKetan"},"content":"        return findTasksResult;","lastModifiedDate":"2021-08-27"},{"lineNumber":104,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":105,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":106,"author":{"gitId":"YeluriKetan"},"content":"    private String countTasks() {","lastModifiedDate":"2021-09-02"},{"lineNumber":107,"author":{"gitId":"YeluriKetan"},"content":"        if (tasks.size() \u003e 0) {","lastModifiedDate":"2021-08-26"},{"lineNumber":108,"author":{"gitId":"YeluriKetan"},"content":"            return \"Now you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2021-08-26"},{"lineNumber":109,"author":{"gitId":"YeluriKetan"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":110,"author":{"gitId":"YeluriKetan"},"content":"            return \"There are no tasks in your list.\";","lastModifiedDate":"2021-08-26"},{"lineNumber":111,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":112,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":113,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"YeluriKetan":113}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"public class Ui {","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"    /** Line divider for beautification of command line interface */","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"    private static final String H_LINE \u003d \"------------------------------\\n\";","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"    /** Scanner to be used for taking in the user\u0027s commands */","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"    private Scanner commandInput;","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"     * Constructs a Ui object.","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"    public Ui() {","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"     * Prints a welcome message.","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"    public void showWelcome() {","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"        String helloMsg \u003d H_LINE","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"                + \"Hello! I\u0027m Duke\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"                + \"What can I do for you?\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"                + H_LINE;","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"        System.out.print(logo + helloMsg);","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"     * Begins listening to the user input from the command line.","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"    public void beginListen() {","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"        commandInput \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"YeluriKetan"},"content":"     * Returns the next line of user input from the command line interface.","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"YeluriKetan"},"content":"     * @return Next command.","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"YeluriKetan"},"content":"    public String readCommand() {","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"YeluriKetan"},"content":"        return commandInput.nextLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"YeluriKetan"},"content":"     * Prints out the string representation of the list of tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"YeluriKetan"},"content":"     * @param tasks ArrayList containing all the tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"YeluriKetan"},"content":"    public void showList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"YeluriKetan"},"content":"        System.out.print(H_LINE);","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"YeluriKetan"},"content":"        if (tasks.size() \u003e 0) {","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"YeluriKetan"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"YeluriKetan"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"YeluriKetan"},"content":"                System.out.println(\"  \" + (i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"YeluriKetan"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"YeluriKetan"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"YeluriKetan"},"content":"            System.out.println(\"There are no tasks in your list.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"YeluriKetan"},"content":"        System.out.print(H_LINE);","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":74,"author":{"gitId":"YeluriKetan"},"content":"     * Prints out the string representation of the list of tasks that are a result from the findTasks operation.","lastModifiedDate":"2021-09-02"},{"lineNumber":75,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":76,"author":{"gitId":"YeluriKetan"},"content":"     * @param tasks ArrayList containing all the tasks.","lastModifiedDate":"2021-09-02"},{"lineNumber":77,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":78,"author":{"gitId":"YeluriKetan"},"content":"    public void showFindList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-27"},{"lineNumber":79,"author":{"gitId":"YeluriKetan"},"content":"        System.out.print(H_LINE);","lastModifiedDate":"2021-08-27"},{"lineNumber":80,"author":{"gitId":"YeluriKetan"},"content":"        if (tasks.size() \u003e 0) {","lastModifiedDate":"2021-08-27"},{"lineNumber":81,"author":{"gitId":"YeluriKetan"},"content":"            System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2021-08-27"},{"lineNumber":82,"author":{"gitId":"YeluriKetan"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-27"},{"lineNumber":83,"author":{"gitId":"YeluriKetan"},"content":"                System.out.println(\"  \" + (i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2021-08-27"},{"lineNumber":84,"author":{"gitId":"YeluriKetan"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":85,"author":{"gitId":"YeluriKetan"},"content":"        } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":86,"author":{"gitId":"YeluriKetan"},"content":"            System.out.println(\"There are no matching tasks in your list.\");","lastModifiedDate":"2021-08-27"},{"lineNumber":87,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":88,"author":{"gitId":"YeluriKetan"},"content":"        System.out.print(H_LINE);","lastModifiedDate":"2021-08-27"},{"lineNumber":89,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":90,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":91,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":92,"author":{"gitId":"YeluriKetan"},"content":"     * Prints a message indicating that a user command has failed to be understood by the bot.","lastModifiedDate":"2021-08-27"},{"lineNumber":93,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":94,"author":{"gitId":"YeluriKetan"},"content":"    public void showCommandFail() {","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"YeluriKetan"},"content":"        System.out.print(H_LINE + \"I didn\u0027t get that. Please try again.\\n\" + H_LINE);","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":99,"author":{"gitId":"YeluriKetan"},"content":"     * Prints a message indicating an error in Duke\u0027s operations.","lastModifiedDate":"2021-09-02"},{"lineNumber":100,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":101,"author":{"gitId":"YeluriKetan"},"content":"     * @param message Error message to be printed.","lastModifiedDate":"2021-09-02"},{"lineNumber":102,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":103,"author":{"gitId":"YeluriKetan"},"content":"    public void showError(String message) {","lastModifiedDate":"2021-08-26"},{"lineNumber":104,"author":{"gitId":"YeluriKetan"},"content":"        System.out.print(H_LINE + \"Oops... Something\u0027s wrong.\\n\" + message + \"\\n\" + H_LINE);","lastModifiedDate":"2021-08-26"},{"lineNumber":105,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":106,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":107,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":108,"author":{"gitId":"YeluriKetan"},"content":"     * Prints a custom general message resulting from Duke\u0027s operations.","lastModifiedDate":"2021-09-02"},{"lineNumber":109,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":110,"author":{"gitId":"YeluriKetan"},"content":"     * @param message Message to be printed.","lastModifiedDate":"2021-09-02"},{"lineNumber":111,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":112,"author":{"gitId":"YeluriKetan"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2021-08-26"},{"lineNumber":113,"author":{"gitId":"YeluriKetan"},"content":"        System.out.print(H_LINE + message + \"\\n\" + H_LINE);","lastModifiedDate":"2021-08-26"},{"lineNumber":114,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":115,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":116,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":117,"author":{"gitId":"YeluriKetan"},"content":"     * Prints a message indicating an error related to storage operations.","lastModifiedDate":"2021-09-02"},{"lineNumber":118,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":119,"author":{"gitId":"YeluriKetan"},"content":"    public void showStorageError() {","lastModifiedDate":"2021-08-26"},{"lineNumber":120,"author":{"gitId":"YeluriKetan"},"content":"        showError(\"File for storage of tasks could not be accessed or written.\");","lastModifiedDate":"2021-09-02"},{"lineNumber":121,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":122,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":123,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":124,"author":{"gitId":"YeluriKetan"},"content":"     * Stops listening to the user input from the command line.","lastModifiedDate":"2021-09-02"},{"lineNumber":125,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":126,"author":{"gitId":"YeluriKetan"},"content":"    public void stopListen() {","lastModifiedDate":"2021-08-26"},{"lineNumber":127,"author":{"gitId":"YeluriKetan"},"content":"        commandInput.close();","lastModifiedDate":"2021-08-26"},{"lineNumber":128,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":129,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":130,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":131,"author":{"gitId":"YeluriKetan"},"content":"     * Prints a goodbye message from Duke.","lastModifiedDate":"2021-09-02"},{"lineNumber":132,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":133,"author":{"gitId":"YeluriKetan"},"content":"    public void showGoodbye() {","lastModifiedDate":"2021-08-26"},{"lineNumber":134,"author":{"gitId":"YeluriKetan"},"content":"        System.out.print(H_LINE + \"Bye. Hope to see you again soon!\\n\" + H_LINE);","lastModifiedDate":"2021-08-26"},{"lineNumber":135,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":136,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"YeluriKetan":136}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"    private LocalDateTime byDateTime;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"     * Constructs a new Deadline using the given description, done status and by time.","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"     * @param description Description of the new Deadline.","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"     * @param byDateTime By time of the new Deadline.","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"    public Deadline(String description, LocalDateTime byDateTime) {","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"        this.byDateTime \u003d byDateTime;","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"     * Constructs a new Deadline using the given description, done status and by time.","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"     * @param description Description of the new Deadline.","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"     * @param isDone Done status of the new Deadline.","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"     * @param byDateTime By time of the new Deadline.","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"    public Deadline(String description, boolean isDone, LocalDateTime byDateTime) {","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"        super(description);","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"        this.byDateTime \u003d byDateTime;","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"        return \"[D]\" + (isDone ? \"[X] \" : \"[ ] \") + description + \" (by: \"","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"                + byDateTime.format(DateTimeFormatter.ofLocalizedDateTime(FormatStyle.MEDIUM, FormatStyle.SHORT))","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"                + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"    public String toStorage() {","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"        return (\"D%\" + isDone + \"%\" + description + \"%\" + byDateTime + \"\\n\");","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"YeluriKetan":46}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"    private LocalDateTime fromDateTime;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"    private LocalDateTime toDateTime;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"     * Constructs a new Event using the given description, from time and to time.","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"     * @param description Description of the Event.","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"     * @param fromDateTime From time of the Event.","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"     * @param toDateTime To time of the Event.","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"    public Event(String description, LocalDateTime fromDateTime, LocalDateTime toDateTime) {","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"        this.fromDateTime \u003d fromDateTime;","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"        this.toDateTime \u003d toDateTime;","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"     * Constructs a new Event using the given description, done status, from time and to time.","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"     * @param description Description of the new Event.","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"     * @param isDone Done status of the new Event.","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"     * @param fromDateTime From time of the new Event.","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"     * @param toDateTime To time of the new Event.","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"    public Event(String description, boolean isDone, LocalDateTime fromDateTime, LocalDateTime toDateTime) {","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"        super(description);","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"        this.fromDateTime \u003d fromDateTime;","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"        this.toDateTime \u003d toDateTime;","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"        return \"[E]\" + (isDone ? \"[X] \" : \"[ ] \") + description","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"                + \" (from: \"","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"                + fromDateTime.format(DateTimeFormatter.ofLocalizedDateTime(FormatStyle.MEDIUM, FormatStyle.SHORT))","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"YeluriKetan"},"content":"                + \" to \"","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"YeluriKetan"},"content":"                + toDateTime.format(DateTimeFormatter.ofLocalizedDateTime(FormatStyle.MEDIUM, FormatStyle.SHORT))","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"YeluriKetan"},"content":"                + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"YeluriKetan"},"content":"    public String toStorage() {","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"YeluriKetan"},"content":"        return (\"E%\" + isDone + \"%\" + description + \"%\" + fromDateTime + \"%\" + toDateTime + \"\\n\");","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"YeluriKetan":54}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"public class Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"    protected String description;","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"     * Constructs a new Task object with the given description.","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"     * @param description Description of the new Task.","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"     * Marks the status of this Task as done.","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"    public void setDone() {","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"     * Return a boolean to convey the presence of the given content in the description of the current Task object.","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"     * @param content Content whose presence is to be checked for.","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"     * @return Boolean to show presence.","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"    public boolean hasContent(String content) {","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"        return description.contains(content);","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"        return (isDone ? \"[X] \" : \"[ ] \") + description;","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"     * String representation of the Task to be used for storage on the hard-disk purposes.","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"     * @return String to be used for storage.","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"YeluriKetan"},"content":"    public String toStorage() {","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"YeluriKetan"},"content":"        return (isDone + \"%\" + description + \"\\n\");","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"YeluriKetan":48}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"     * Constructs a new Todo object with the given description.","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"     * @param description Description of the Todo object.","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"     * Constructs a new Todo object with the given description and done status.","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"     * @param description Description of the Todo object.","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"     * @param isDone Done status of the Todo object.","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"        super(description);","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"        return \"[T]\" + (isDone ? \"[X] \" : \"[ ] \") + description;","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"    public String toStorage() {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"        return \"T%\" + isDone + \"%\" + description + \"\\n\";","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"YeluriKetan":34}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"    public void parse_todoCommand_stringArray() {","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"        String todoCommand \u003d \"todo finish all week 3 iP tasks\";","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"        String[] todoCommandArray \u003d new String[]{\"add\", \"todo\", \"finish all week 3 iP tasks\"};","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(Arrays.toString(todoCommandArray), Arrays.toString(Parser.parse(todoCommand)));","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"    public void parse_deadlineCommand_stringArray() {","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"        String deadlineCommand \u003d \"deadline finish all week 3 iP tasks /by 2021 08 30 2359\";","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"        String[] deadlineCommandArray \u003d new String[]{\"add\", \"deadline\",","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"            \"finish all week 3 iP tasks\", \"2021 08 30 2359\"};","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(Arrays.toString(deadlineCommandArray), Arrays.toString(Parser.parse(deadlineCommand)));","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"    public void parse_eventCommand_stringArray() {","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"        String eventCommand \u003d \"event morning lecture /from 2021 09 01 0900 to 2021 09 01 1000\";","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"        String[] eventCommandArray \u003d new String[]{\"add\", \"event\",","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"            \"morning lecture\", \"2021 09 01 0900\", \"2021 09 01 1000\"};","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(Arrays.toString(eventCommandArray), Arrays.toString(Parser.parse(eventCommand)));","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"    public void parseIndex_intString_integer() {","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(23, Parser.parseIndex(\"23\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"YeluriKetan":38}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"import duke.Parser;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"    public void toString_deadlineObject_stringRep() {","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"        LocalDateTime deadlineDT \u003d Parser.parseDateTime(\"2021 08 30 2359\");","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"        Deadline deadline \u003d new Deadline(\"finish all tasks\", deadlineDT);","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(\"[D][ ] finish all tasks (by: 30 Aug 2021, 11:59 PM)\", deadline.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"    public void toStorage_deadlineObject_storageRep() {","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"        LocalDateTime deadlineDT \u003d Parser.parseDateTime(\"2021 08 30 2359\");","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"        Deadline deadline \u003d new Deadline(\"finish all tasks\", deadlineDT);","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(\"D%false%finish all tasks%2021-08-30T23:59\\n\", deadline.toStorage());","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"YeluriKetan":26}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"todo eat dinner","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"TOdo finish laundry","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"todo","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"done 1","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"done 45","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"event meet friends /at 2-4 p.m.","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"EVent watch movie /at 7-10 p.m.","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"event shower /by tonight","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"done 3","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"deadline submit iP /by tonight","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"deadLINE form tP teams /by 13 August","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"deadline return book /at tomorrow","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"done 7","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"YeluriKetan":21}}]
