[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"![Project Poseidon](./src/main/resources/images/Logo.png)","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"## *Project POSEIDON*","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"Repository for the Individual Project of CS2103T - Software Engineering taken in AY2021-2022 Semester 1.","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"## *About*","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"**POSEIDON** -  stands for  **P**lanner **O**rganizer that\u0027s **S**imple **E**fficient **I**ntelligent **D**igital **O**ptimized and **N**ifty.","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"**POSEIDON** (Poseidon) is a **desktop application for keeping track of todo tasks, upcoming deadlines and planning events**. Poseidon\u0027s efficient and intelligent algorithm, combined with an optimized Command Line Interface (CLI) and a simple Graphical User Interface (GUI) gives you a fast and smooth user experience. If you can type fast, Poseidon can help you plan and organize your day faster than traditional GUI apps.","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"## *Tech*","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"Project POSEIDON was made possible due to the following tech stack:","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"- [Java](https://www.java.com/en/) - Written in Javaâ„¢ SE Development Kit 11.0.9 (JDK 11.0.9)","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"- [JavaFX](https://openjfx.io/) - An open source software platform for creating GUI-based desktop applications built on Java. JavaFX Version 11 used.","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"- [SceneBuilder](https://gluonhq.com/products/scene-builder/) -  A visual layout tool with Drag \u0026 Drop interface for designing JavaFX application interfaces. Scene Builder 16.0.0 used.","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"-   [IntelliJ IDEA Community Edition](https://www.jetbrains.com/idea/download/#section\u003dwindows)  - Text editor for Java. IntelliJ IDEA 2021.2 IC-212.4746.92 used.","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"- [Git CLI](https://git-scm.com/book/en/v2/Getting-Started-The-Command-Line) - Version control","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"## *Acknowledgements*","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"Thank you.","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"- Send icon made by [Freepik](https://www.freepik.com) from [Flaticon](https://www.flaticon.com/)","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"- Poseidon art and logo created using [Canva](https://www.canva.com/)","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"- Code inspiration and help from [SkyBlaise99](https://github.com/SkyBlaise99) from [Task](https://github.com/SkyBlaise99/ip/blob/master/src/main/java/sora/task/Task.java)","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"- User Guide art inspiration from [hsiaotingluv](https://github.com/hsiaotingluv) from [User Guide](https://github.com/hsiaotingluv/ip/blob/master/docs/README.md)","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"## *Repo Stats*","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"-   Project POSEIDON was initiated on 19th August, 2021, and took 12 coding sessions spread over 31 days and was last updated on 18th September, 2021.","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"-   2750 total lines of text of which 1500 LOC are in Java","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"## *Author*","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"[Yeluri Ketan](https://github.com/YeluriKetan) - Undergraduate, Computer Science, NUS \u002724","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"YeluriKetan":33}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"YeluriKetan"},"content":"    mainClassName \u003d \"poseidon.Launcher\"","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"YeluriKetan"},"content":"    archiveBaseName \u003d \"poseidon\"","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"YeluriKetan":16,"-":44}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"![Project Poseidon](./Logo.png)","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"**Table of Contents**:","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"- [Introduction](#ocean-introduction)","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"- [Quick Start](#ocean-quick-start)","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"- [Features](#ocean-features)","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"  - [Help - `help`](#trident-help)","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"  - [Todo - `todo`](#trident-todo)","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"  - [Deadline - `deadline`](#trident-deadline)","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"  - [Event - `event`](#trident-event)","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"  - [Done - `done`](#trident-done)","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"  - [Delete - `delete`](#trident-delete)","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"  - [List - `list`](#trident-list)","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"  - [List Sorted - `list -s`](#trident-list-sorted)","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"  - [Find - `find`](#trident-find)","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"  - [Bye - `bye`](#trident-bye)","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"- [Command Summary](#ocean-command-summary)","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"## :ocean: Introduction","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"**P.O.S.E.I.D.O.N** (Poseidon) is a **desktop application for keeping track of todo tasks, upcoming deadlines and planning events**. Poseidon\u0027s efficient and intelligent algorithm, combined with an optimized Command Line Interface (CLI) and a simple Graphical User Interface (GUI) gives you a fast and smooth user experience. If you can type fast, Poseidon can help you plan and organize your day faster than traditional GUI apps.","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":":merman: :trident: :ocean:","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"**P.O.S.E.I.D.O.N** -  stands for","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"**P** lanner","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"**O** rganizer that\u0027s","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"**S** imple","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"**E** fficient","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"**I** ntelligent","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"**D** igital","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"**O** ptimized and","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"**N** ifty.","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"## :ocean: Quick Start","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"1. Ensure you have Java  `11` or above installed on your Computer.","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"YeluriKetan"},"content":"2. Download the latest  `poseidon.jar` from  [here](https://github.com/YeluriKetan/ip/releases).","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"YeluriKetan"},"content":"3. Copy the file to the folder you want to use as the  _home folder_ for your Poseidon.","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"YeluriKetan"},"content":"4. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. (If you face trouble opening the app this way, follow this [tutorial](#alternate-way))","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"YeluriKetan"},"content":"![Poseidon](./Ui.png)","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"YeluriKetan"},"content":"5. Type the command in the command box and press Enter to execute it. For starters type `help` and press Enter to find out more about the commands you can use.","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"YeluriKetan"},"content":"### Alternate way","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"YeluriKetan"},"content":"Open up a command prompt in the working directory that contains `poseidon.jar` and type in the following command.","lastModifiedDate":"2021-09-18"},{"lineNumber":58,"author":{"gitId":"YeluriKetan"},"content":"```sh  ","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"YeluriKetan"},"content":"java -jar poseidon.jar","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"YeluriKetan"},"content":"```  ","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"YeluriKetan"},"content":"## :ocean: Features","lastModifiedDate":"2021-09-18"},{"lineNumber":62,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":63,"author":{"gitId":"YeluriKetan"},"content":"### :trident: Help","lastModifiedDate":"2021-09-18"},{"lineNumber":64,"author":{"gitId":"YeluriKetan"},"content":"Lists all the commands you can use.","lastModifiedDate":"2021-09-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":66,"author":{"gitId":"YeluriKetan"},"content":"***Syntax:*** `help`","lastModifiedDate":"2021-09-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":68,"author":{"gitId":"YeluriKetan"},"content":"e.g., `help`","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":70,"author":{"gitId":"YeluriKetan"},"content":"### :trident: Todo","lastModifiedDate":"2021-09-18"},{"lineNumber":71,"author":{"gitId":"YeluriKetan"},"content":"A todo task is a simple task with description of the task.  ","lastModifiedDate":"2021-09-18"},{"lineNumber":72,"author":{"gitId":"YeluriKetan"},"content":"This command adds a todo task with a non-empty description.","lastModifiedDate":"2021-09-18"},{"lineNumber":73,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":74,"author":{"gitId":"YeluriKetan"},"content":"***Syntax:*** `todo \u0027description\u0027`","lastModifiedDate":"2021-09-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":76,"author":{"gitId":"YeluriKetan"},"content":"e.g., `todo Eat Dinner`","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":78,"author":{"gitId":"YeluriKetan"},"content":"### :trident: Deadline","lastModifiedDate":"2021-09-18"},{"lineNumber":79,"author":{"gitId":"YeluriKetan"},"content":"A deadline task is a task with a description of the task and a date and time by which the task is to be completed.  ","lastModifiedDate":"2021-09-18"},{"lineNumber":80,"author":{"gitId":"YeluriKetan"},"content":"This command adds a Deadline task with a non-empty description and a valid date and time.","lastModifiedDate":"2021-09-18"},{"lineNumber":81,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":82,"author":{"gitId":"YeluriKetan"},"content":"***Syntax:*** `deadline \u0027description\u0027 /by \u0027yyyy MM dd HHmm\u0027`","lastModifiedDate":"2021-09-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":84,"author":{"gitId":"YeluriKetan"},"content":"e.g., `deadline finish project /by 2021 10 01 2359`","lastModifiedDate":"2021-09-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":86,"author":{"gitId":"YeluriKetan"},"content":"### :trident: Event","lastModifiedDate":"2021-09-18"},{"lineNumber":87,"author":{"gitId":"YeluriKetan"},"content":"An Event is a task with a description, a start date and time and an end date and time.  ","lastModifiedDate":"2021-09-18"},{"lineNumber":88,"author":{"gitId":"YeluriKetan"},"content":"This command adds an Event task with a non-empty description, \"from\" valid date and time and a \"to\" valid date and time.","lastModifiedDate":"2021-09-18"},{"lineNumber":89,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":90,"author":{"gitId":"YeluriKetan"},"content":"***Syntax:*** `event \u0027description\u0027 /from \u0027yyyy MM dd HHmm\u0027 to \u0027yyyy MM dd HHmm\u0027`","lastModifiedDate":"2021-09-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":92,"author":{"gitId":"YeluriKetan"},"content":"e.g., `event team meeting /from 2021 10 01 2000 to 2021 10 01 2200`","lastModifiedDate":"2021-09-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":94,"author":{"gitId":"YeluriKetan"},"content":"### :trident: Done","lastModifiedDate":"2021-09-18"},{"lineNumber":95,"author":{"gitId":"YeluriKetan"},"content":"Marks a task as done based on the index of the task as shown in the normal list.","lastModifiedDate":"2021-09-18"},{"lineNumber":96,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":97,"author":{"gitId":"YeluriKetan"},"content":"***Syntax:*** `done \u0027index\u0027`","lastModifiedDate":"2021-09-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":99,"author":{"gitId":"YeluriKetan"},"content":"e.g., `done 2`","lastModifiedDate":"2021-09-17"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":101,"author":{"gitId":"YeluriKetan"},"content":"### :trident: Delete","lastModifiedDate":"2021-09-18"},{"lineNumber":102,"author":{"gitId":"YeluriKetan"},"content":"Deletes a task based on the index of the task as shown in the normal list.","lastModifiedDate":"2021-09-18"},{"lineNumber":103,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":104,"author":{"gitId":"YeluriKetan"},"content":"***Syntax:*** `delete \u0027index\u0027`","lastModifiedDate":"2021-09-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":106,"author":{"gitId":"YeluriKetan"},"content":"e.g., `delete 3`","lastModifiedDate":"2021-09-17"},{"lineNumber":107,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":108,"author":{"gitId":"YeluriKetan"},"content":"### :trident: List","lastModifiedDate":"2021-09-18"},{"lineNumber":109,"author":{"gitId":"YeluriKetan"},"content":"Lists all the tasks with their description, time(s) (if-applicable) and the done status.","lastModifiedDate":"2021-09-18"},{"lineNumber":110,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":111,"author":{"gitId":"YeluriKetan"},"content":"***Syntax:*** `list\u0027`","lastModifiedDate":"2021-09-18"},{"lineNumber":112,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":113,"author":{"gitId":"YeluriKetan"},"content":"e.g., `list`","lastModifiedDate":"2021-09-17"},{"lineNumber":114,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":115,"author":{"gitId":"YeluriKetan"},"content":"### :trident: List Sorted","lastModifiedDate":"2021-09-18"},{"lineNumber":116,"author":{"gitId":"YeluriKetan"},"content":"Lists all the tasks with their description, time(s) (if-applicable) and the done status, sorted based on time.","lastModifiedDate":"2021-09-18"},{"lineNumber":117,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":118,"author":{"gitId":"YeluriKetan"},"content":"***Syntax:*** `list -s\u0027`","lastModifiedDate":"2021-09-18"},{"lineNumber":119,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":120,"author":{"gitId":"YeluriKetan"},"content":"e.g., `list -s`","lastModifiedDate":"2021-09-17"},{"lineNumber":121,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":122,"author":{"gitId":"YeluriKetan"},"content":"### :trident: Find","lastModifiedDate":"2021-09-18"},{"lineNumber":123,"author":{"gitId":"YeluriKetan"},"content":"Searches all the tasks based on the given content and shows the results in the form of a list.","lastModifiedDate":"2021-09-18"},{"lineNumber":124,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":125,"author":{"gitId":"YeluriKetan"},"content":"***Syntax:*** `find \u0027content\u0027`","lastModifiedDate":"2021-09-18"},{"lineNumber":126,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":127,"author":{"gitId":"YeluriKetan"},"content":"e.g., `find \u0027meeting\u0027`","lastModifiedDate":"2021-09-17"},{"lineNumber":128,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":129,"author":{"gitId":"YeluriKetan"},"content":"### :trident: Bye","lastModifiedDate":"2021-09-18"},{"lineNumber":130,"author":{"gitId":"YeluriKetan"},"content":"Exits the application.","lastModifiedDate":"2021-09-17"},{"lineNumber":131,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":132,"author":{"gitId":"YeluriKetan"},"content":"***Syntax:*** `bye`","lastModifiedDate":"2021-09-18"},{"lineNumber":133,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":134,"author":{"gitId":"YeluriKetan"},"content":"e.g., `bye`","lastModifiedDate":"2021-09-17"},{"lineNumber":135,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":136,"author":{"gitId":"YeluriKetan"},"content":"### :trident: Case Sensitivity","lastModifiedDate":"2021-09-18"},{"lineNumber":137,"author":{"gitId":"YeluriKetan"},"content":"All commands are case insensitive.","lastModifiedDate":"2021-09-18"},{"lineNumber":138,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":139,"author":{"gitId":"YeluriKetan"},"content":"e.g., `bye`,`BYE` and `Bye` all work.","lastModifiedDate":"2021-09-18"},{"lineNumber":140,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":141,"author":{"gitId":"YeluriKetan"},"content":"## :ocean: Command Summary","lastModifiedDate":"2021-09-18"},{"lineNumber":142,"author":{"gitId":"YeluriKetan"},"content":"Action | Command Format","lastModifiedDate":"2021-09-17"},{"lineNumber":143,"author":{"gitId":"YeluriKetan"},"content":"--------|----------------  ","lastModifiedDate":"2021-09-18"},{"lineNumber":144,"author":{"gitId":"YeluriKetan"},"content":"For help | `help`","lastModifiedDate":"2021-09-18"},{"lineNumber":145,"author":{"gitId":"YeluriKetan"},"content":"Add todo task | `todo \u0027description`","lastModifiedDate":"2021-09-18"},{"lineNumber":146,"author":{"gitId":"YeluriKetan"},"content":"Add deadline task| `deadline \u0027description\u0027 /by \u0027yyyy MM dd HHmm\u0027`","lastModifiedDate":"2021-09-18"},{"lineNumber":147,"author":{"gitId":"YeluriKetan"},"content":"Add event | `event \u0027description\u0027 /from \u0027yyyy MM dd HHmm\u0027 to \u0027yyyy MM dd HHmm\u0027`","lastModifiedDate":"2021-09-18"},{"lineNumber":148,"author":{"gitId":"YeluriKetan"},"content":"Mark task done | `done \u0027index\u0027`","lastModifiedDate":"2021-09-18"},{"lineNumber":149,"author":{"gitId":"YeluriKetan"},"content":"Delete task | `delete \u0027index\u0027`","lastModifiedDate":"2021-09-18"},{"lineNumber":150,"author":{"gitId":"YeluriKetan"},"content":"List tasks | `list`","lastModifiedDate":"2021-09-18"},{"lineNumber":151,"author":{"gitId":"YeluriKetan"},"content":"List tasks sorted | `list -s`","lastModifiedDate":"2021-09-18"},{"lineNumber":152,"author":{"gitId":"YeluriKetan"},"content":"Find content | `find \u0027content\u0027`","lastModifiedDate":"2021-09-18"},{"lineNumber":153,"author":{"gitId":"YeluriKetan"},"content":"Exit app | `bye`","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"YeluriKetan":127,"-":26}},{"path":"src/main/java/poseidon/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package poseidon;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"/**","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":" * Represents a launcher class to workaround classpath issues.","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":" *","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":" * @author Yeluri Ketan","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":" * @version CS2103T AY21/22 Sem 1 iP","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":" */","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"public class Launcher {","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"     * @param args Arguments for the launch of the Application.","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"YeluriKetan":19}},{"path":"src/main/java/poseidon/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package poseidon;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"import poseidon.ui.MainWindow;","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"/**","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":" * Represents a GUI for {@code Poseidon} using JavaFX and FXML.","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":" *","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":" * @author Yeluri Ketan","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":" * @version CS2103T AY21/22 Sem 1 iP","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":" */","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"    // Icon for application window.","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"    private static final Image BOT_ICON \u003d new Image(Main.class.getResourceAsStream(\"/images/BotIcon.png\"));","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"    private Poseidon poseidon \u003d new Poseidon();","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"        try {","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"            stage.getIcons().add(BOT_ICON);","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setPoseidon(poseidon);","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"            stage.setTitle(\"Poseidon\");","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"            stage.show();","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"            stage.setResizable(false);","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"YeluriKetan":41}},{"path":"src/main/java/poseidon/Poseidon.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package poseidon;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"import poseidon.exception.PoseidonException;","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"import poseidon.parser.Parser;","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"import poseidon.storage.Storage;","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"import poseidon.task.Deadline;","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"import poseidon.task.Event;","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"import poseidon.task.Task;","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"import poseidon.task.Todo;","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"import poseidon.tasklist.TaskList;","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"import poseidon.ui.Ui;","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":" * Represents a {@code Poseidon} object that executes the user commands.","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":" *","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":" * @author Yeluri Ketan","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":" * @version CS2103T AY21/22 Sem 1 iP","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"public class Poseidon {","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"    private static final String NON_EXISTENT_TASK_MSG \u003d \"That task doesn\u0027t exist.\\nPlease Try again.\";","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"    private static final String BYE_CMD \u003d \"bye\";","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"    private static final String LIST_CMD \u003d \"list\";","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"    private static final String ADD_CMD \u003d \"add\";","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"    private static final String DONE_CMD \u003d \"done\";","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"    private static final String DELETE_CMD \u003d \"delete\";","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"    private static final String FIND_CMD \u003d \"find\";","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"    private static final String SORT_CMD \u003d \"sort\";","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"    private static final String FAIL_CMD \u003d \"fail\";","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"    private static final String ADD_TODO_CMD \u003d \"todo\";","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"    private static final String ADD_DEADLINE_CMD \u003d \"deadline\";","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"    private static final String ADD_EVENT_CMD \u003d \"event\";","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"    private static final String HELP_CMD \u003d \"help\";","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"    /** {@code Storage} object that reads from and writes onto the hard disk  */","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"    /** {@code TaskList} object that maintains and updates the list of tasks */","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"YeluriKetan"},"content":"    /** {@code Ui} object to be used to generate responses to User commands */","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"YeluriKetan"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"YeluriKetan"},"content":"     * Constructs a {@code Poseidon} object and initialises the class members.","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"YeluriKetan"},"content":"    public Poseidon() {","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"YeluriKetan"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"YeluriKetan"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"YeluriKetan"},"content":"            storage \u003d new Storage();","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"YeluriKetan"},"content":"            taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"YeluriKetan"},"content":"        } catch (PoseidonException ex) {","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"YeluriKetan"},"content":"            ui.showStorageError();","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"YeluriKetan"},"content":"            storage \u003d null;","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"YeluriKetan"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":63,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":64,"author":{"gitId":"YeluriKetan"},"content":"     * Returns a {@code String} representation of a welcome message as prepared by {@code Ui} class.","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":66,"author":{"gitId":"YeluriKetan"},"content":"     * @return {@code String} welcome message.","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":68,"author":{"gitId":"YeluriKetan"},"content":"    public String runWelcome() {","lastModifiedDate":"2021-09-08"},{"lineNumber":69,"author":{"gitId":"YeluriKetan"},"content":"        return ui.getWelcomeMessage();","lastModifiedDate":"2021-09-08"},{"lineNumber":70,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":71,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":72,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":73,"author":{"gitId":"YeluriKetan"},"content":"     * Returns a {@code String} representation of the Bot\u0027s response to the given new User command.","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":75,"author":{"gitId":"YeluriKetan"},"content":"     * @param newCommand {@code String} version of the User input.","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"YeluriKetan"},"content":"     * @return {@code String} response.","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":78,"author":{"gitId":"YeluriKetan"},"content":"    public String run(String newCommand) {","lastModifiedDate":"2021-09-08"},{"lineNumber":79,"author":{"gitId":"YeluriKetan"},"content":"        String errorMessage \u003d \"\";","lastModifiedDate":"2021-09-08"},{"lineNumber":80,"author":{"gitId":"YeluriKetan"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"YeluriKetan"},"content":"            String[] parsedCommand \u003d Parser.parse(newCommand);","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"YeluriKetan"},"content":"            switch (parsedCommand[0]) {","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"YeluriKetan"},"content":"            case HELP_CMD:","lastModifiedDate":"2021-09-17"},{"lineNumber":84,"author":{"gitId":"YeluriKetan"},"content":"                return ui.showHelp();","lastModifiedDate":"2021-09-17"},{"lineNumber":85,"author":{"gitId":"YeluriKetan"},"content":"            case BYE_CMD:","lastModifiedDate":"2021-09-17"},{"lineNumber":86,"author":{"gitId":"YeluriKetan"},"content":"                return ui.showGoodbye();","lastModifiedDate":"2021-09-08"},{"lineNumber":87,"author":{"gitId":"YeluriKetan"},"content":"            case LIST_CMD:","lastModifiedDate":"2021-09-17"},{"lineNumber":88,"author":{"gitId":"YeluriKetan"},"content":"                return ui.getListMessage(taskList.getList());","lastModifiedDate":"2021-09-08"},{"lineNumber":89,"author":{"gitId":"YeluriKetan"},"content":"            case ADD_CMD:","lastModifiedDate":"2021-09-17"},{"lineNumber":90,"author":{"gitId":"YeluriKetan"},"content":"                return addTask(parsedCommand);","lastModifiedDate":"2021-09-08"},{"lineNumber":91,"author":{"gitId":"YeluriKetan"},"content":"            case DONE_CMD:","lastModifiedDate":"2021-09-17"},{"lineNumber":92,"author":{"gitId":"YeluriKetan"},"content":"                return markTaskDone(parsedCommand);","lastModifiedDate":"2021-09-08"},{"lineNumber":93,"author":{"gitId":"YeluriKetan"},"content":"            case DELETE_CMD:","lastModifiedDate":"2021-09-17"},{"lineNumber":94,"author":{"gitId":"YeluriKetan"},"content":"                return deleteTask(parsedCommand);","lastModifiedDate":"2021-09-08"},{"lineNumber":95,"author":{"gitId":"YeluriKetan"},"content":"            case FIND_CMD:","lastModifiedDate":"2021-09-17"},{"lineNumber":96,"author":{"gitId":"YeluriKetan"},"content":"                return ui.showFindList(taskList.findTasks(parsedCommand[1]));","lastModifiedDate":"2021-09-08"},{"lineNumber":97,"author":{"gitId":"YeluriKetan"},"content":"            case SORT_CMD:","lastModifiedDate":"2021-09-17"},{"lineNumber":98,"author":{"gitId":"YeluriKetan"},"content":"                return ui.getListMessage(taskList.sortTasks());","lastModifiedDate":"2021-09-11"},{"lineNumber":99,"author":{"gitId":"YeluriKetan"},"content":"            case FAIL_CMD:","lastModifiedDate":"2021-09-17"},{"lineNumber":100,"author":{"gitId":"YeluriKetan"},"content":"                return ui.showCommandFail();","lastModifiedDate":"2021-09-08"},{"lineNumber":101,"author":{"gitId":"YeluriKetan"},"content":"            default:","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"YeluriKetan"},"content":"                break;","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"YeluriKetan"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":104,"author":{"gitId":"YeluriKetan"},"content":"        } catch (PoseidonException | IOException ex) {","lastModifiedDate":"2021-09-17"},{"lineNumber":105,"author":{"gitId":"YeluriKetan"},"content":"            errorMessage \u003d ui.showError(ex.getMessage());","lastModifiedDate":"2021-09-08"},{"lineNumber":106,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":107,"author":{"gitId":"YeluriKetan"},"content":"        assert errorMessage.length() !\u003d 0 : \"Error message supposed to contain readable text\";","lastModifiedDate":"2021-09-09"},{"lineNumber":108,"author":{"gitId":"YeluriKetan"},"content":"        return errorMessage;","lastModifiedDate":"2021-09-08"},{"lineNumber":109,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":110,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":111,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":112,"author":{"gitId":"YeluriKetan"},"content":"     * Returns true if the given user input is a \"bye\" command.","lastModifiedDate":"2021-09-17"},{"lineNumber":113,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":114,"author":{"gitId":"YeluriKetan"},"content":"     * @param newCommand {@code String} version of the user input.","lastModifiedDate":"2021-09-17"},{"lineNumber":115,"author":{"gitId":"YeluriKetan"},"content":"     * @return {@code Boolean} validation result.","lastModifiedDate":"2021-09-17"},{"lineNumber":116,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":117,"author":{"gitId":"YeluriKetan"},"content":"    public boolean isBye(String newCommand) {","lastModifiedDate":"2021-09-08"},{"lineNumber":118,"author":{"gitId":"YeluriKetan"},"content":"        return Parser.isParsedBye(newCommand);","lastModifiedDate":"2021-09-08"},{"lineNumber":119,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":120,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":121,"author":{"gitId":"YeluriKetan"},"content":"    private String addTask(String[] parsedCommand) throws IOException {","lastModifiedDate":"2021-09-08"},{"lineNumber":122,"author":{"gitId":"YeluriKetan"},"content":"        Task newTask \u003d null;","lastModifiedDate":"2021-08-26"},{"lineNumber":123,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":124,"author":{"gitId":"YeluriKetan"},"content":"        switch (parsedCommand[1]) {","lastModifiedDate":"2021-08-26"},{"lineNumber":125,"author":{"gitId":"YeluriKetan"},"content":"        case ADD_TODO_CMD:","lastModifiedDate":"2021-09-17"},{"lineNumber":126,"author":{"gitId":"YeluriKetan"},"content":"            newTask \u003d new Todo(parsedCommand[2]);","lastModifiedDate":"2021-08-26"},{"lineNumber":127,"author":{"gitId":"YeluriKetan"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":128,"author":{"gitId":"YeluriKetan"},"content":"        case ADD_DEADLINE_CMD:","lastModifiedDate":"2021-09-17"},{"lineNumber":129,"author":{"gitId":"YeluriKetan"},"content":"            LocalDateTime by \u003d Parser.parseDateTime(parsedCommand[3]);","lastModifiedDate":"2021-08-26"},{"lineNumber":130,"author":{"gitId":"YeluriKetan"},"content":"            newTask \u003d new Deadline(parsedCommand[2], by);","lastModifiedDate":"2021-08-26"},{"lineNumber":131,"author":{"gitId":"YeluriKetan"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":132,"author":{"gitId":"YeluriKetan"},"content":"        case ADD_EVENT_CMD:","lastModifiedDate":"2021-09-17"},{"lineNumber":133,"author":{"gitId":"YeluriKetan"},"content":"            LocalDateTime from \u003d Parser.parseDateTime(parsedCommand[3]);","lastModifiedDate":"2021-08-26"},{"lineNumber":134,"author":{"gitId":"YeluriKetan"},"content":"            LocalDateTime to \u003d Parser.parseDateTime(parsedCommand[3]);","lastModifiedDate":"2021-08-26"},{"lineNumber":135,"author":{"gitId":"YeluriKetan"},"content":"            newTask \u003d new Event(parsedCommand[2], from, to);","lastModifiedDate":"2021-08-26"},{"lineNumber":136,"author":{"gitId":"YeluriKetan"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":137,"author":{"gitId":"YeluriKetan"},"content":"        default:","lastModifiedDate":"2021-08-26"},{"lineNumber":138,"author":{"gitId":"YeluriKetan"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":139,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":140,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":141,"author":{"gitId":"YeluriKetan"},"content":"        if (newTask \u003d\u003d null) {","lastModifiedDate":"2021-09-09"},{"lineNumber":142,"author":{"gitId":"YeluriKetan"},"content":"            return ui.showCommandFail();","lastModifiedDate":"2021-09-09"},{"lineNumber":143,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":144,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":145,"author":{"gitId":"YeluriKetan"},"content":"        storage.storeAdd(newTask.toStorage());","lastModifiedDate":"2021-08-26"},{"lineNumber":146,"author":{"gitId":"YeluriKetan"},"content":"        String message \u003d taskList.addTask(newTask);","lastModifiedDate":"2021-08-26"},{"lineNumber":147,"author":{"gitId":"YeluriKetan"},"content":"        return ui.showMessage(message);","lastModifiedDate":"2021-09-08"},{"lineNumber":148,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":149,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":150,"author":{"gitId":"YeluriKetan"},"content":"    private String markTaskDone(String[] parsedCommand) throws IOException {","lastModifiedDate":"2021-09-08"},{"lineNumber":151,"author":{"gitId":"YeluriKetan"},"content":"        int taskIndex \u003d Parser.parseIndex(parsedCommand[1]);","lastModifiedDate":"2021-08-26"},{"lineNumber":152,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":153,"author":{"gitId":"YeluriKetan"},"content":"        if (!taskList.isIndexValid(taskIndex)) {","lastModifiedDate":"2021-09-09"},{"lineNumber":154,"author":{"gitId":"YeluriKetan"},"content":"            throw new PoseidonException(NON_EXISTENT_TASK_MSG);","lastModifiedDate":"2021-09-17"},{"lineNumber":155,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":156,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":157,"author":{"gitId":"YeluriKetan"},"content":"        String message \u003d taskList.markTaskDone(taskIndex);","lastModifiedDate":"2021-09-02"},{"lineNumber":158,"author":{"gitId":"YeluriKetan"},"content":"        String taskStorage \u003d taskList.getTaskStorage(taskIndex);","lastModifiedDate":"2021-08-26"},{"lineNumber":159,"author":{"gitId":"YeluriKetan"},"content":"        storage.storeDone(taskIndex, taskStorage);","lastModifiedDate":"2021-08-26"},{"lineNumber":160,"author":{"gitId":"YeluriKetan"},"content":"        return ui.showMessage(message);","lastModifiedDate":"2021-09-08"},{"lineNumber":161,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":162,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":163,"author":{"gitId":"YeluriKetan"},"content":"    private String deleteTask(String[] parsedCommand) throws IOException {","lastModifiedDate":"2021-09-08"},{"lineNumber":164,"author":{"gitId":"YeluriKetan"},"content":"        int taskIndex \u003d Parser.parseIndex(parsedCommand[1]);","lastModifiedDate":"2021-08-26"},{"lineNumber":165,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":166,"author":{"gitId":"YeluriKetan"},"content":"        if (!taskList.isIndexValid(taskIndex)) {","lastModifiedDate":"2021-09-09"},{"lineNumber":167,"author":{"gitId":"YeluriKetan"},"content":"            throw new PoseidonException(NON_EXISTENT_TASK_MSG);","lastModifiedDate":"2021-09-17"},{"lineNumber":168,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":169,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":170,"author":{"gitId":"YeluriKetan"},"content":"        String message \u003d taskList.deleteTask(taskIndex);","lastModifiedDate":"2021-08-26"},{"lineNumber":171,"author":{"gitId":"YeluriKetan"},"content":"        storage.storeDelete(taskIndex);","lastModifiedDate":"2021-08-26"},{"lineNumber":172,"author":{"gitId":"YeluriKetan"},"content":"        return ui.showMessage(message);","lastModifiedDate":"2021-09-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"YeluriKetan":172,"-":2}},{"path":"src/main/java/poseidon/exception/PoseidonException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package poseidon.exception;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":" * Represents a custom {@code Exception} for Poseidon.","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":" *","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":" * @author Yeluri Ketan","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":" * @version CS2103T AY21/22 Sem 1 iP","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"public class PoseidonException extends IllegalArgumentException {","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"     * Constructs a new {@code PoseidonException} with the given error message.","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"     * @param errorMsg Error message of the new {@code Exception}.","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"    public PoseidonException(String errorMsg) {","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"        super(errorMsg);","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"YeluriKetan":20}},{"path":"src/main/java/poseidon/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package poseidon.parser;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"import poseidon.exception.PoseidonException;","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":" * Represents a {@code Parser} object for all parsing related operations.","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":" *","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":" * @author Yeluri Ketan","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":" * @version CS2103T AY21/22 Sem 1 iP","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"public class Parser {","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"    // Regex versions of all the possible commands","lastModifiedDate":"2021-09-09"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"    private static final String CMD_BYE \u003d \"(?i)bye\\\\s*\";","lastModifiedDate":"2021-09-09"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"    private static final String CMD_LIST \u003d \"(?i)list\\\\s*\";","lastModifiedDate":"2021-09-09"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"    private static final String CMD_DONE \u003d \"(?i)done\\\\s+\\\\d+\\\\s*\";","lastModifiedDate":"2021-09-09"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"    private static final String CMD_DELETE \u003d \"(?i)delete\\\\s+\\\\d+\\\\s*\";","lastModifiedDate":"2021-09-09"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"    private static final String CMD_TODO \u003d \"(?i)todo.*\";","lastModifiedDate":"2021-09-09"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"    private static final String CMD_DEADLINE \u003d \"(?i)deadline.*\";","lastModifiedDate":"2021-09-09"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"    private static final String CMD_EVENT \u003d \"(?i)event.*\";","lastModifiedDate":"2021-09-09"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"    private static final String CMD_FIND \u003d \"(?i)find.*\";","lastModifiedDate":"2021-09-09"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"    private static final String CMD_SORT \u003d \"(?i)list\\\\s*-s\\\\s*\";","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"    private static final String CMD_HELP \u003d \"(?i)help\\\\s*\";","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"     * Returns a {@code String} array that contains the useful and necessary parts of a command to be executed.","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"     * @param newCommand {@code String} version of a command.","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"     * @return {@code String} array.","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"    public static String[] parse(String newCommand) {","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"        if (Pattern.compile(CMD_HELP).matcher(newCommand).matches()) {","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"            return new String[]{\"help\"};","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"        } else if (Pattern.compile(CMD_BYE).matcher(newCommand).matches()) {","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"            return new String[]{\"bye\"};","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"        } else if (Pattern.compile(CMD_LIST).matcher(newCommand).matches()) {","lastModifiedDate":"2021-09-09"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"            return new String[]{\"list\"};","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"        } else if (Pattern.compile(CMD_SORT).matcher(newCommand).matches()) {","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"            return new String[]{\"sort\"};","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"YeluriKetan"},"content":"        } else if (Pattern.compile(CMD_DONE).matcher(newCommand).matches()) {","lastModifiedDate":"2021-09-09"},{"lineNumber":46,"author":{"gitId":"YeluriKetan"},"content":"            return new String[]{\"done\", newCommand.substring(4).trim()};","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"YeluriKetan"},"content":"        } else if (Pattern.compile(CMD_DELETE).matcher(newCommand).matches()) {","lastModifiedDate":"2021-09-09"},{"lineNumber":48,"author":{"gitId":"YeluriKetan"},"content":"            return new String[]{\"delete\", newCommand.substring(6).trim()};","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"YeluriKetan"},"content":"        } else if (Pattern.compile(CMD_TODO).matcher(newCommand).matches()) {","lastModifiedDate":"2021-09-09"},{"lineNumber":50,"author":{"gitId":"YeluriKetan"},"content":"            return parseTodo(newCommand);","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"YeluriKetan"},"content":"        } else if (Pattern.compile(CMD_DEADLINE).matcher(newCommand).matches()) {","lastModifiedDate":"2021-09-09"},{"lineNumber":52,"author":{"gitId":"YeluriKetan"},"content":"            return parseDeadline(newCommand);","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"YeluriKetan"},"content":"        } else if (Pattern.compile(CMD_EVENT).matcher(newCommand).matches()) {","lastModifiedDate":"2021-09-09"},{"lineNumber":54,"author":{"gitId":"YeluriKetan"},"content":"            return parseEvent(newCommand);","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"YeluriKetan"},"content":"        } else if (Pattern.compile(CMD_FIND).matcher(newCommand).matches()) {","lastModifiedDate":"2021-09-09"},{"lineNumber":56,"author":{"gitId":"YeluriKetan"},"content":"            return parseFind(newCommand);","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"YeluriKetan"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"YeluriKetan"},"content":"            return new String[]{\"fail\"};","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"YeluriKetan"},"content":"     * Returns a {@code LocalDateTime} object after parsing a string version of date and time.","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":65,"author":{"gitId":"YeluriKetan"},"content":"     * @param dateTime {@code String} version of date and time.","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"YeluriKetan"},"content":"     * @return {@code LocalDateTime} object.","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":68,"author":{"gitId":"YeluriKetan"},"content":"    public static LocalDateTime parseDateTime(String dateTime) {","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"YeluriKetan"},"content":"        final String dateFormat \u003d \"yyyy MM dd HHmm\";","lastModifiedDate":"2021-09-09"},{"lineNumber":70,"author":{"gitId":"YeluriKetan"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(dateFormat);","lastModifiedDate":"2021-09-09"},{"lineNumber":71,"author":{"gitId":"YeluriKetan"},"content":"        LocalDateTime deadlineDT;","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":73,"author":{"gitId":"YeluriKetan"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"YeluriKetan"},"content":"            deadlineDT \u003d LocalDateTime.parse(dateTime, formatter);","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"YeluriKetan"},"content":"            return deadlineDT;","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"YeluriKetan"},"content":"        } catch (DateTimeException ex) {","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"YeluriKetan"},"content":"            throw new PoseidonException(ex.getMessage() + \"\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"YeluriKetan"},"content":"                    + \"Please try again.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":83,"author":{"gitId":"YeluriKetan"},"content":"     * Returns the {@code Integer} version of a {@code String} number.","lastModifiedDate":"2021-09-17"},{"lineNumber":84,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":85,"author":{"gitId":"YeluriKetan"},"content":"     * @param intString {@code String} version of a number.","lastModifiedDate":"2021-09-17"},{"lineNumber":86,"author":{"gitId":"YeluriKetan"},"content":"     * @return {@code Integer} version of the given number.","lastModifiedDate":"2021-09-17"},{"lineNumber":87,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":88,"author":{"gitId":"YeluriKetan"},"content":"    public static int parseIndex(String intString) {","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"YeluriKetan"},"content":"        return Integer.parseInt(intString.trim());","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":93,"author":{"gitId":"YeluriKetan"},"content":"     * Returns true if the given user {@code String} input is a valid \"bye\" command by pattern matching.","lastModifiedDate":"2021-09-17"},{"lineNumber":94,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":95,"author":{"gitId":"YeluriKetan"},"content":"     * @param newCommand {@code String} user input.","lastModifiedDate":"2021-09-17"},{"lineNumber":96,"author":{"gitId":"YeluriKetan"},"content":"     * @return {@code Boolean} validation result.","lastModifiedDate":"2021-09-17"},{"lineNumber":97,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":98,"author":{"gitId":"YeluriKetan"},"content":"    public static boolean isParsedBye(String newCommand) {","lastModifiedDate":"2021-09-08"},{"lineNumber":99,"author":{"gitId":"YeluriKetan"},"content":"        return Pattern.compile(CMD_BYE).matcher(newCommand).matches();","lastModifiedDate":"2021-09-09"},{"lineNumber":100,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":101,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":102,"author":{"gitId":"YeluriKetan"},"content":"    private static String[] parseTodo(String newCommand) {","lastModifiedDate":"2021-09-02"},{"lineNumber":103,"author":{"gitId":"YeluriKetan"},"content":"        final String validTodo \u003d \"(?i)todo\\\\s+\";","lastModifiedDate":"2021-09-09"},{"lineNumber":104,"author":{"gitId":"YeluriKetan"},"content":"        String[] strArr \u003d Pattern.compile(validTodo).split(newCommand, 2);","lastModifiedDate":"2021-09-09"},{"lineNumber":105,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":106,"author":{"gitId":"YeluriKetan"},"content":"        if (strArr.length \u003d\u003d 1 \u0026\u0026 strArr[0].length() \u003e 4) {","lastModifiedDate":"2021-09-09"},{"lineNumber":107,"author":{"gitId":"YeluriKetan"},"content":"            throw new PoseidonException(\"There appears to be a typo in your TODO command.\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":108,"author":{"gitId":"YeluriKetan"},"content":"                    + \"The command should be of the form:\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":109,"author":{"gitId":"YeluriKetan"},"content":"                    + \"  todo \u0027description\u0027\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":110,"author":{"gitId":"YeluriKetan"},"content":"                    + \"Please try again.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":111,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":112,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":113,"author":{"gitId":"YeluriKetan"},"content":"        if (strArr.length \u003d\u003d 1 || strArr[1].length() \u003d\u003d 0) {","lastModifiedDate":"2021-09-09"},{"lineNumber":114,"author":{"gitId":"YeluriKetan"},"content":"            throw new PoseidonException(\"The description of a TODO task cannot be empty.\\nPlease try again.\");","lastModifiedDate":"2021-09-17"},{"lineNumber":115,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":116,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":117,"author":{"gitId":"YeluriKetan"},"content":"        return new String[]{\"add\", \"todo\", strArr[1].trim()};","lastModifiedDate":"2021-09-17"},{"lineNumber":118,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":119,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":120,"author":{"gitId":"YeluriKetan"},"content":"    private static String[] parseDeadline(String newCommand) {","lastModifiedDate":"2021-09-02"},{"lineNumber":121,"author":{"gitId":"YeluriKetan"},"content":"        final String validDeadline \u003d \"(?i)(deadline ).*\\\\S+.*( /by )\\\\d{4}\\\\s\\\\d{2}\\\\s\\\\d{2}\\\\s\\\\d{4}\";","lastModifiedDate":"2021-09-09"},{"lineNumber":122,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":123,"author":{"gitId":"YeluriKetan"},"content":"        if (!Pattern.compile(validDeadline).matcher(newCommand).matches()) {","lastModifiedDate":"2021-09-09"},{"lineNumber":124,"author":{"gitId":"YeluriKetan"},"content":"            throw new PoseidonException(\"There appears to be a typo in your DEADLINE command.\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":125,"author":{"gitId":"YeluriKetan"},"content":"                    + \"The command should be of the form:\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":126,"author":{"gitId":"YeluriKetan"},"content":"                    + \"  deadline \u0027description\u0027 /by \u0027yyyy mm dd hhmm\u0027\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":127,"author":{"gitId":"YeluriKetan"},"content":"                    + \"Please try again.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":128,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":129,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":130,"author":{"gitId":"YeluriKetan"},"content":"        String[] strArr \u003d newCommand.substring(8).split(\" /by \", 2);","lastModifiedDate":"2021-09-09"},{"lineNumber":131,"author":{"gitId":"YeluriKetan"},"content":"        return new String[]{\"add\", \"deadline\", strArr[0].trim(), strArr[1].trim()};","lastModifiedDate":"2021-09-09"},{"lineNumber":132,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":133,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":134,"author":{"gitId":"YeluriKetan"},"content":"    private static String[] parseEvent(String newCommand) {","lastModifiedDate":"2021-09-02"},{"lineNumber":135,"author":{"gitId":"YeluriKetan"},"content":"        final String validEvent \u003d \"(?i)(event ).*\\\\S+.*( /from )\\\\d{4}\\\\s\\\\d{2}\\\\s\\\\d{2}\\\\s\\\\d{4}\"","lastModifiedDate":"2021-09-09"},{"lineNumber":136,"author":{"gitId":"YeluriKetan"},"content":"                + \"( to )\\\\d{4}\\\\s\\\\d{2}\\\\s\\\\d{2}\\\\s\\\\d{4}\";","lastModifiedDate":"2021-09-09"},{"lineNumber":137,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":138,"author":{"gitId":"YeluriKetan"},"content":"        if (!Pattern.compile(validEvent).matcher(newCommand).matches()) {","lastModifiedDate":"2021-09-09"},{"lineNumber":139,"author":{"gitId":"YeluriKetan"},"content":"            throw new PoseidonException(\"There appears to be a typo in your EVENT command.\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":140,"author":{"gitId":"YeluriKetan"},"content":"                    + \"The command should be of the form:\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":141,"author":{"gitId":"YeluriKetan"},"content":"                    + \"  event \u0027description\u0027 /from \u0027yyyy mm dd hhmm\u0027 to \u0027yyyy mm dd hhmm\u0027\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":142,"author":{"gitId":"YeluriKetan"},"content":"                    + \"Please try again.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":143,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":144,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":145,"author":{"gitId":"YeluriKetan"},"content":"        String[] strArr \u003d newCommand.substring(5).split(\" /from \", 2);","lastModifiedDate":"2021-09-09"},{"lineNumber":146,"author":{"gitId":"YeluriKetan"},"content":"        String[] dateTimeArr \u003d strArr[1].split(\" to \", 2);","lastModifiedDate":"2021-09-09"},{"lineNumber":147,"author":{"gitId":"YeluriKetan"},"content":"        return new String[]{\"add\", \"event\", strArr[0].trim(), dateTimeArr[0], dateTimeArr[1]};","lastModifiedDate":"2021-09-09"},{"lineNumber":148,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":149,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":150,"author":{"gitId":"YeluriKetan"},"content":"    private static String[] parseFind(String newCommand) {","lastModifiedDate":"2021-08-27"},{"lineNumber":151,"author":{"gitId":"YeluriKetan"},"content":"        final String validFind \u003d \"(?i)find\\\\s+\";","lastModifiedDate":"2021-09-09"},{"lineNumber":152,"author":{"gitId":"YeluriKetan"},"content":"        String[] strArr \u003d Pattern.compile(validFind).split(newCommand, 2);","lastModifiedDate":"2021-09-09"},{"lineNumber":153,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":154,"author":{"gitId":"YeluriKetan"},"content":"        if (strArr.length \u003d\u003d 1 \u0026\u0026 strArr[0].length() \u003e 4) {","lastModifiedDate":"2021-09-09"},{"lineNumber":155,"author":{"gitId":"YeluriKetan"},"content":"            throw new PoseidonException(\"There appears to be a typo in your FIND command.\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":156,"author":{"gitId":"YeluriKetan"},"content":"                    + \"The command should be of the form:\\n\"","lastModifiedDate":"2021-08-27"},{"lineNumber":157,"author":{"gitId":"YeluriKetan"},"content":"                    + \"  find \u0027content\u0027\\n\"","lastModifiedDate":"2021-08-27"},{"lineNumber":158,"author":{"gitId":"YeluriKetan"},"content":"                    + \"Please try again.\");","lastModifiedDate":"2021-08-27"},{"lineNumber":159,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":160,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":161,"author":{"gitId":"YeluriKetan"},"content":"        if (strArr.length \u003d\u003d 1 || strArr[1].length() \u003d\u003d 0) {","lastModifiedDate":"2021-09-09"},{"lineNumber":162,"author":{"gitId":"YeluriKetan"},"content":"            throw new PoseidonException(\"The contents of a FIND command cannot be empty.\\nPlease try again.\");","lastModifiedDate":"2021-09-17"},{"lineNumber":163,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":164,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":165,"author":{"gitId":"YeluriKetan"},"content":"        return new String[]{\"find\", strArr[1].trim()};","lastModifiedDate":"2021-09-09"},{"lineNumber":166,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":167,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"YeluriKetan":167}},{"path":"src/main/java/poseidon/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package poseidon.storage;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"import java.io.File;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"import poseidon.exception.PoseidonException;","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"import poseidon.task.Deadline;","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"import poseidon.task.Event;","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"import poseidon.task.Task;","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"import poseidon.task.Todo;","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":" * Represents a {@code Storage} object for all operations related to storage such as reading and writing","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":" * to a local file on the hard disk.","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":" *","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":" * @author Yeluri Ketan","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":" * @version CS2103T AY21/22 Sem 1 iP","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"public class Storage {","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"    private File taskDataFile;","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"     * Constructs a {@code Storage} object and initializes the {@code taskDataFile} {@code File} object.","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"    public Storage() {","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"            File taskDataDir \u003d new File(Paths.get(\"data\").toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"            if (!taskDataDir.exists()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"                taskDataDir.mkdir();","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"            File taskDataFile \u003d new File(Paths.get(\"data\", \"taskData.txt\").toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"            if (!taskDataFile.exists()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"                taskDataFile.createNewFile();","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"            this.taskDataFile \u003d taskDataFile;","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"YeluriKetan"},"content":"            throw new PoseidonException(ex.getMessage() + \"\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"YeluriKetan"},"content":"                    + \"Couldn\u0027t access/create necessary file to store tasks.\"","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"YeluriKetan"},"content":"                    + \"Please exit the bot if you don\u0027t want to lose new tasks.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"YeluriKetan"},"content":"        assert taskDataFile.exists() : \"File for storage is supposed to exist\";","lastModifiedDate":"2021-09-09"},{"lineNumber":50,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"YeluriKetan"},"content":"     * Returns a {@code ArrayList} containing all the {@code Task}s after reading through a text {@code File}","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"YeluriKetan"},"content":"     * saved on the hard disk.","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"YeluriKetan"},"content":"     * @return {@code ArrayList} containing all the saved {@code Task}s.","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"YeluriKetan"},"content":"    public ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"YeluriKetan"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"YeluriKetan"},"content":"            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"YeluriKetan"},"content":"            Scanner loadScan \u003d new Scanner(taskDataFile);","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"YeluriKetan"},"content":"            while (loadScan.hasNextLine()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"YeluriKetan"},"content":"                String[] nextLineArr \u003d loadScan.nextLine().split(\"%\");","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"YeluriKetan"},"content":"                switch (nextLineArr[0]) {","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"YeluriKetan"},"content":"                case \"T\":","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"YeluriKetan"},"content":"                    tasks.add(new Todo(nextLineArr[2], Boolean.parseBoolean(nextLineArr[1])));","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"YeluriKetan"},"content":"                    break;","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"YeluriKetan"},"content":"                case \"E\":","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"YeluriKetan"},"content":"                    tasks.add(new Event(nextLineArr[2], Boolean.parseBoolean(nextLineArr[1]),","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"YeluriKetan"},"content":"                            LocalDateTime.parse(nextLineArr[3]), LocalDateTime.parse(nextLineArr[4])));","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"YeluriKetan"},"content":"                    break;","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"YeluriKetan"},"content":"                case \"D\":","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"YeluriKetan"},"content":"                    tasks.add(new Deadline(nextLineArr[2], Boolean.parseBoolean(nextLineArr[1]),","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"YeluriKetan"},"content":"                            LocalDateTime.parse(nextLineArr[3])));","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"YeluriKetan"},"content":"                    break;","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"YeluriKetan"},"content":"                default:","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"YeluriKetan"},"content":"                    break;","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"YeluriKetan"},"content":"                }","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"YeluriKetan"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"YeluriKetan"},"content":"            loadScan.close();","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"YeluriKetan"},"content":"            return tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"YeluriKetan"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"YeluriKetan"},"content":"            throw new PoseidonException(ex.getMessage() + \"\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":84,"author":{"gitId":"YeluriKetan"},"content":"                    + \"Couldn\u0027t load data from stored file.\"","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"YeluriKetan"},"content":"                    + \"Please exit the bot if you don\u0027t want to lose new tasks.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":90,"author":{"gitId":"YeluriKetan"},"content":"     * Writes a new {@code Task} to the storage document of the Bot.","lastModifiedDate":"2021-09-17"},{"lineNumber":91,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":92,"author":{"gitId":"YeluriKetan"},"content":"     * @param taskStorage Storage {@code String} version of the new {@code Task}.","lastModifiedDate":"2021-09-17"},{"lineNumber":93,"author":{"gitId":"YeluriKetan"},"content":"     * @throws IOException If file access or modification is obstructed.","lastModifiedDate":"2021-09-02"},{"lineNumber":94,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":95,"author":{"gitId":"YeluriKetan"},"content":"    public void storeAdd(String taskStorage) throws IOException {","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"YeluriKetan"},"content":"        FileWriter taskDataWriter \u003d new FileWriter(taskDataFile, true);","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"YeluriKetan"},"content":"        taskDataWriter.write(taskStorage);","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"YeluriKetan"},"content":"        taskDataWriter.close();","lastModifiedDate":"2021-08-26"},{"lineNumber":99,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":102,"author":{"gitId":"YeluriKetan"},"content":"     * Writes an existing {@code Task} as done in the storage document of the Bot.","lastModifiedDate":"2021-09-17"},{"lineNumber":103,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":104,"author":{"gitId":"YeluriKetan"},"content":"     * @param index Index of the {@code Task} to be modified.","lastModifiedDate":"2021-09-17"},{"lineNumber":105,"author":{"gitId":"YeluriKetan"},"content":"     * @param taskStorage Storage {@code String} version of the modified {@code Task}.","lastModifiedDate":"2021-09-17"},{"lineNumber":106,"author":{"gitId":"YeluriKetan"},"content":"     * @throws IOException If file access or modification is obstructed.","lastModifiedDate":"2021-09-02"},{"lineNumber":107,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":108,"author":{"gitId":"YeluriKetan"},"content":"    public void storeDone(int index, String taskStorage) throws IOException {","lastModifiedDate":"2021-08-26"},{"lineNumber":109,"author":{"gitId":"YeluriKetan"},"content":"        BufferedReader taskDataReader \u003d new BufferedReader(new FileReader(taskDataFile));","lastModifiedDate":"2021-08-26"},{"lineNumber":110,"author":{"gitId":"YeluriKetan"},"content":"        StringBuilder newTaskData \u003d new StringBuilder();","lastModifiedDate":"2021-08-26"},{"lineNumber":111,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":112,"author":{"gitId":"YeluriKetan"},"content":"        for (int i \u003d 0; i \u003c index - 1; i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":113,"author":{"gitId":"YeluriKetan"},"content":"            newTaskData.append(taskDataReader.readLine() + \"\\n\");","lastModifiedDate":"2021-08-26"},{"lineNumber":114,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":115,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":116,"author":{"gitId":"YeluriKetan"},"content":"        taskDataReader.readLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":117,"author":{"gitId":"YeluriKetan"},"content":"        newTaskData.append(taskStorage);","lastModifiedDate":"2021-08-26"},{"lineNumber":118,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":119,"author":{"gitId":"YeluriKetan"},"content":"        while (true) {","lastModifiedDate":"2021-08-26"},{"lineNumber":120,"author":{"gitId":"YeluriKetan"},"content":"            String nextLine \u003d taskDataReader.readLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":121,"author":{"gitId":"YeluriKetan"},"content":"            if (nextLine \u003d\u003d null) {","lastModifiedDate":"2021-08-26"},{"lineNumber":122,"author":{"gitId":"YeluriKetan"},"content":"                break;","lastModifiedDate":"2021-08-26"},{"lineNumber":123,"author":{"gitId":"YeluriKetan"},"content":"            } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":124,"author":{"gitId":"YeluriKetan"},"content":"                newTaskData.append(nextLine + \"\\n\");","lastModifiedDate":"2021-08-26"},{"lineNumber":125,"author":{"gitId":"YeluriKetan"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":126,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":127,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":128,"author":{"gitId":"YeluriKetan"},"content":"        FileWriter taskDataWriter \u003d new FileWriter(taskDataFile);","lastModifiedDate":"2021-08-26"},{"lineNumber":129,"author":{"gitId":"YeluriKetan"},"content":"        taskDataWriter.write(newTaskData.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":130,"author":{"gitId":"YeluriKetan"},"content":"        taskDataWriter.close();","lastModifiedDate":"2021-08-26"},{"lineNumber":131,"author":{"gitId":"YeluriKetan"},"content":"        taskDataReader.close();","lastModifiedDate":"2021-08-26"},{"lineNumber":132,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":133,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":134,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":135,"author":{"gitId":"YeluriKetan"},"content":"     * Deletes a {@code Task} from the storage document of Bot.","lastModifiedDate":"2021-09-17"},{"lineNumber":136,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":137,"author":{"gitId":"YeluriKetan"},"content":"     * @param index Index of the deleted {@code Task}.","lastModifiedDate":"2021-09-17"},{"lineNumber":138,"author":{"gitId":"YeluriKetan"},"content":"     * @throws IOException If file access or modification is obstructed.","lastModifiedDate":"2021-09-02"},{"lineNumber":139,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":140,"author":{"gitId":"YeluriKetan"},"content":"    public void storeDelete(int index) throws IOException {","lastModifiedDate":"2021-08-26"},{"lineNumber":141,"author":{"gitId":"YeluriKetan"},"content":"        BufferedReader taskDataReader \u003d new BufferedReader(new FileReader(taskDataFile));","lastModifiedDate":"2021-08-26"},{"lineNumber":142,"author":{"gitId":"YeluriKetan"},"content":"        StringBuilder newTaskData \u003d new StringBuilder();","lastModifiedDate":"2021-08-26"},{"lineNumber":143,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":144,"author":{"gitId":"YeluriKetan"},"content":"        for (int i \u003d 0; i \u003c index - 1; i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":145,"author":{"gitId":"YeluriKetan"},"content":"            newTaskData.append(taskDataReader.readLine() + \"\\n\");","lastModifiedDate":"2021-08-26"},{"lineNumber":146,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":147,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":148,"author":{"gitId":"YeluriKetan"},"content":"        taskDataReader.readLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":149,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":150,"author":{"gitId":"YeluriKetan"},"content":"        while (true) {","lastModifiedDate":"2021-08-26"},{"lineNumber":151,"author":{"gitId":"YeluriKetan"},"content":"            String nextLine \u003d taskDataReader.readLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":152,"author":{"gitId":"YeluriKetan"},"content":"            if (nextLine \u003d\u003d null) {","lastModifiedDate":"2021-08-26"},{"lineNumber":153,"author":{"gitId":"YeluriKetan"},"content":"                break;","lastModifiedDate":"2021-08-26"},{"lineNumber":154,"author":{"gitId":"YeluriKetan"},"content":"            } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":155,"author":{"gitId":"YeluriKetan"},"content":"                newTaskData.append(nextLine + \"\\n\");","lastModifiedDate":"2021-08-26"},{"lineNumber":156,"author":{"gitId":"YeluriKetan"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":157,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":158,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":159,"author":{"gitId":"YeluriKetan"},"content":"        FileWriter taskDataWriter \u003d new FileWriter(taskDataFile);","lastModifiedDate":"2021-08-26"},{"lineNumber":160,"author":{"gitId":"YeluriKetan"},"content":"        taskDataWriter.write(newTaskData.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":161,"author":{"gitId":"YeluriKetan"},"content":"        taskDataWriter.close();","lastModifiedDate":"2021-08-26"},{"lineNumber":162,"author":{"gitId":"YeluriKetan"},"content":"        taskDataReader.close();","lastModifiedDate":"2021-08-26"},{"lineNumber":163,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":164,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"YeluriKetan":164}},{"path":"src/main/java/poseidon/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package poseidon.task;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":" * Represents a {@code Deadline} object that extends from {@code Task} and contains","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":" * the description of the deadline task and","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":" * a date and time to finish the task by.","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":" *","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":" * @author Yeluri Ketan","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":" * @version CS2103T AY21/22 Sem 1 iP","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"    private LocalDateTime byDateTime;","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"     * Constructs a new {@code Deadline} using the given description, done status and by time.","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"     * @param description Description of the new {@code Deadline}.","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"     * @param byDateTime By time of the new {@code Deadline}.","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"    public Deadline(String description, LocalDateTime byDateTime) {","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"        this.byDateTime \u003d byDateTime;","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"     * Constructs a new {@code Deadline} using the given description, done status and by time.","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"     * @param description Description of the new {@code Deadline}.","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"     * @param isDone Done status of the new {@code Deadline}.","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"     * @param byDateTime By time of the new {@code Deadline}.","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"    public Deadline(String description, boolean isDone, LocalDateTime byDateTime) {","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"        super(description);","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"        this.byDateTime \u003d byDateTime;","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"YeluriKetan"},"content":"        return \"[D]\" + (isDone ? \"[X] \" : \"[ ] \") + description + \" (by: \"","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"YeluriKetan"},"content":"                + byDateTime.format(DateTimeFormatter.ofLocalizedDateTime(FormatStyle.MEDIUM, FormatStyle.SHORT))","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"YeluriKetan"},"content":"                + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"YeluriKetan"},"content":"    public String toStorage() {","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"YeluriKetan"},"content":"        return (\"D%\" + isDone + \"%\" + description + \"%\" + byDateTime + \"\\n\");","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":55,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":56,"author":{"gitId":"YeluriKetan"},"content":"    protected LocalDateTime getDateTime() {","lastModifiedDate":"2021-09-11"},{"lineNumber":57,"author":{"gitId":"YeluriKetan"},"content":"        return byDateTime;","lastModifiedDate":"2021-09-11"},{"lineNumber":58,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":59,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"YeluriKetan":59}},{"path":"src/main/java/poseidon/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package poseidon.task;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":" * Represents an {@code Event} object that contains the description of the event task,","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":" * a date and time to mark the beginning of the event and","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":" * a date and time to mark the end of the event.","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":" *","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":" * @author Yeluri Ketan","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":" * @version CS2103T AY21/22 Sem 1 iP","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"    private LocalDateTime fromDateTime;","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"    private LocalDateTime toDateTime;","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"     * Constructs a new {@code Event} using the given description, from time and to time.","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"     * @param description Description of the {@code Event}.","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"     * @param fromDateTime From time of the {@code Event}.","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"     * @param toDateTime To time of the {@code Event}.","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"    public Event(String description, LocalDateTime fromDateTime, LocalDateTime toDateTime) {","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"        this.fromDateTime \u003d fromDateTime;","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"        this.toDateTime \u003d toDateTime;","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"     * Constructs a new {@code Event} using the given description, done status, from time and to time.","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"     * @param description Description of the new {@code Event}.","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"     * @param isDone Done status of the new {@code Event}.","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"     * @param fromDateTime From time of the new {@code Event}.","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"     * @param toDateTime To time of the new {@code Event}.","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"    public Event(String description, boolean isDone, LocalDateTime fromDateTime, LocalDateTime toDateTime) {","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"        super(description);","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"        this.fromDateTime \u003d fromDateTime;","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"YeluriKetan"},"content":"        this.toDateTime \u003d toDateTime;","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"YeluriKetan"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"YeluriKetan"},"content":"        return \"[E]\" + (isDone ? \"[X] \" : \"[ ] \") + description","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"YeluriKetan"},"content":"                + \" (from: \"","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"YeluriKetan"},"content":"                + fromDateTime.format(DateTimeFormatter.ofLocalizedDateTime(FormatStyle.MEDIUM, FormatStyle.SHORT))","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"YeluriKetan"},"content":"                + \" to \"","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"YeluriKetan"},"content":"                + toDateTime.format(DateTimeFormatter.ofLocalizedDateTime(FormatStyle.MEDIUM, FormatStyle.SHORT))","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"YeluriKetan"},"content":"                + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"YeluriKetan"},"content":"    public String toStorage() {","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"YeluriKetan"},"content":"        return (\"E%\" + isDone + \"%\" + description + \"%\" + fromDateTime + \"%\" + toDateTime + \"\\n\");","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":63,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":64,"author":{"gitId":"YeluriKetan"},"content":"    protected LocalDateTime getDateTime() {","lastModifiedDate":"2021-09-11"},{"lineNumber":65,"author":{"gitId":"YeluriKetan"},"content":"        return fromDateTime;","lastModifiedDate":"2021-09-11"},{"lineNumber":66,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":67,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"YeluriKetan":67}},{"path":"src/main/java/poseidon/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package poseidon.task;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":" * Represents an abstract {@code Task} class containing a {@code String} description and {@code Boolean}","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":" * representing the done status.","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":" *","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":" * @author Yeluri Ketan","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":" * @version CS2103T AY21/22 Sem 1 iP","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"public abstract class Task implements Comparable\u003cTask\u003e {","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"    protected String description;","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"     * Constructs a new {@code Task} object with the given description.","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"     * @param description Description of the new {@code Task}.","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"    protected Task(String description) {","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"     * Marks the status of this {@code Task} as done.","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"    public void setDone() {","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"     * Returns a {@code Boolean} to convey the presence of the given content in the description","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"     * of the current {@code Task} object.","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"     * @param content Content whose presence is to be checked for.","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"     * @return {@code Boolean} to show presence.","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"    public boolean hasContent(String content) {","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"        return description.contains(content);","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":46,"author":{"gitId":"YeluriKetan"},"content":"     * Returns a human-readable {@code String} representation of the {@code Task}","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"YeluriKetan"},"content":"     * to be used for printing/showing to the user.","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":49,"author":{"gitId":"YeluriKetan"},"content":"     * @return {@code String} to be used for printing.","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":51,"author":{"gitId":"YeluriKetan"},"content":"    public abstract String toString();","lastModifiedDate":"2021-09-11"},{"lineNumber":52,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"YeluriKetan"},"content":"     * Returns the {@code String} representation of the {@code Task}","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"YeluriKetan"},"content":"     * to be used for the purpose of storage on the hard-disk.","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"YeluriKetan"},"content":"     * @return {@code String} to be used for storage.","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"YeluriKetan"},"content":"    public abstract String toStorage();","lastModifiedDate":"2021-09-11"},{"lineNumber":60,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    //@@author YeluriKetan-reused","lastModifiedDate":"2021-09-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    //Reused from https://github.com/SkyBlaise99/ip/blob/master/src/main/java/sora/task/Task.java","lastModifiedDate":"2021-09-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    // with minor modifications. Original author SkyBlaise99 - https://github.com/SkyBlaise99","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    protected abstract LocalDateTime getDateTime();","lastModifiedDate":"2021-09-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int compareTo(Task otherTask) {","lastModifiedDate":"2021-09-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return this.getDateTime().compareTo(otherTask.getDateTime());","lastModifiedDate":"2021-09-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    //@@author","lastModifiedDate":"2021-09-11"},{"lineNumber":71,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"YeluriKetan":61,"-":10}},{"path":"src/main/java/poseidon/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package poseidon.task;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":" * Represents an {@code Todo} object that contains the description of the task.","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":" *","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":" * @author Yeluri Ketan","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":" * @version CS2103T AY21/22 Sem 1 iP","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"     * Constructs a new {@code Todo} object with the given description.","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"     * @param description Description of the {@code Todo} object.","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"     * Constructs a new {@code Todo} object with the given description and done status.","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"     * @param description Description of the {@code Todo} object.","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"     * @param isDone Done status of the {@code Todo} object.","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"        super(description);","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"        return \"[T]\" + (isDone ? \"[X] \" : \"[ ] \") + description;","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"    public String toStorage() {","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"        return \"T%\" + isDone + \"%\" + description + \"\\n\";","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"    protected LocalDateTime getDateTime() {","lastModifiedDate":"2021-09-11"},{"lineNumber":45,"author":{"gitId":"YeluriKetan"},"content":"        return LocalDateTime.MAX;","lastModifiedDate":"2021-09-11"},{"lineNumber":46,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":47,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"YeluriKetan":47}},{"path":"src/main/java/poseidon/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package poseidon.tasklist;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"import poseidon.task.Task;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":" * Represents an {@code TaskList} object that contains an {@code ArrayList} to keep track of the {@code Task}s during","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":" * runtime and dictates operations based for modifying the {@code ArrayList}.","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":" *","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":" * @author Yeluri Ketan","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":" * @version CS2103T AY21/22 Sem 1 iP","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"public class TaskList {","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"     * Constructs a new {@code TaskList} object by initializing a new {@code ArrayList} for runtime storage.","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"     * Constructs a new {@code TaskList} object by storing the given {@code ArrayList} for runtime storage.","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"     * @param tasks ArrayList to be used runtime storage.","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"     * Returns a {@code String} message indicating success after adding a {@code Task} to the list of tasks.","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"     * @param newTask New {@code Task} to be added.","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"     * @return {@code String} success message.","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"    public String addTask(Task newTask) {","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"        tasks.add(newTask);","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"        return \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"                + \"  \" + newTask + \"\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"                + countTasks();","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"YeluriKetan"},"content":"     * Returns a {@code String} message indicating success after marking a {@code Task} done in the list of tasks.","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"YeluriKetan"},"content":"     * @param taskIndex Index of the {@code Task}.","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"YeluriKetan"},"content":"     * @return {@code String} success message.","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"YeluriKetan"},"content":"    public String markTaskDone(int taskIndex) {","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"YeluriKetan"},"content":"        Task currTask \u003d tasks.get(taskIndex - 1);","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"YeluriKetan"},"content":"        currTask.setDone();","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"YeluriKetan"},"content":"        assert currTask.toString().charAt(5) \u003d\u003d \u0027X\u0027 : \"Task is supposed to be marked done\";","lastModifiedDate":"2021-09-09"},{"lineNumber":57,"author":{"gitId":"YeluriKetan"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"YeluriKetan"},"content":"                + \"  \" + taskIndex + \". \" + currTask;","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":62,"author":{"gitId":"YeluriKetan"},"content":"     * Returns a {@code String} message indicating success after deleting a {@code Task} from the list of tasks.","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":64,"author":{"gitId":"YeluriKetan"},"content":"     * @param taskIndex Index of the {@code Task}.","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"YeluriKetan"},"content":"     * @return {@code String} success message.","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":67,"author":{"gitId":"YeluriKetan"},"content":"    public String deleteTask(int taskIndex) {","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"YeluriKetan"},"content":"        Task currTask \u003d tasks.get(taskIndex - 1);","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"YeluriKetan"},"content":"        tasks.remove(taskIndex - 1);","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"YeluriKetan"},"content":"        assert !tasks.contains(currTask) : \"Removed task is not supposed to be in the TaskList\";","lastModifiedDate":"2021-09-09"},{"lineNumber":71,"author":{"gitId":"YeluriKetan"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"YeluriKetan"},"content":"                + \"  \" + taskIndex + \". \" + currTask + \"\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"YeluriKetan"},"content":"                + countTasks();","lastModifiedDate":"2021-09-02"},{"lineNumber":74,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":77,"author":{"gitId":"YeluriKetan"},"content":"     * Returns the {@code ArrayList} of {@code Task}s maintained by this {@code TaskList} object.","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":79,"author":{"gitId":"YeluriKetan"},"content":"     * @return {@code ArrayList} of {@code Task} objects.","lastModifiedDate":"2021-09-17"},{"lineNumber":80,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":81,"author":{"gitId":"YeluriKetan"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"YeluriKetan"},"content":"        return tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":86,"author":{"gitId":"YeluriKetan"},"content":"     * Returns the {@code String} representation of a {@code Task} (based on the Index) to be used for storage.","lastModifiedDate":"2021-09-17"},{"lineNumber":87,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":88,"author":{"gitId":"YeluriKetan"},"content":"     * @param taskIndex Index of the {@code Task}.","lastModifiedDate":"2021-09-17"},{"lineNumber":89,"author":{"gitId":"YeluriKetan"},"content":"     * @return {@code String} for storage.","lastModifiedDate":"2021-09-17"},{"lineNumber":90,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":91,"author":{"gitId":"YeluriKetan"},"content":"    public String getTaskStorage(int taskIndex) {","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"YeluriKetan"},"content":"        return tasks.get(taskIndex - 1).toStorage();","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":96,"author":{"gitId":"YeluriKetan"},"content":"     * Returns a {@code Boolean} indicating the validity of the {@code Task}\u0027s Index.","lastModifiedDate":"2021-09-17"},{"lineNumber":97,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":98,"author":{"gitId":"YeluriKetan"},"content":"     * @param taskIndex Index of the {@code Task}.","lastModifiedDate":"2021-09-17"},{"lineNumber":99,"author":{"gitId":"YeluriKetan"},"content":"     * @return Validity of the Index.","lastModifiedDate":"2021-09-02"},{"lineNumber":100,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":101,"author":{"gitId":"YeluriKetan"},"content":"    public boolean isIndexValid(int taskIndex) {","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"YeluriKetan"},"content":"        return ((taskIndex - 1) \u003c tasks.size() \u0026\u0026 (taskIndex - 1) \u003e -1);","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":104,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":105,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":106,"author":{"gitId":"YeluriKetan"},"content":"     * Returns an {@code ArrayList} containing all the {@code Task}s that have the content in their description.","lastModifiedDate":"2021-09-17"},{"lineNumber":107,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":108,"author":{"gitId":"YeluriKetan"},"content":"     * @param content Content to be searched for.","lastModifiedDate":"2021-09-02"},{"lineNumber":109,"author":{"gitId":"YeluriKetan"},"content":"     * @return {@code ArrayList} of {@code Task} objects.","lastModifiedDate":"2021-09-17"},{"lineNumber":110,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":111,"author":{"gitId":"YeluriKetan"},"content":"    public ArrayList\u003cTask\u003e findTasks(String content) {","lastModifiedDate":"2021-08-27"},{"lineNumber":112,"author":{"gitId":"YeluriKetan"},"content":"        ArrayList\u003cTask\u003e filteredList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-10"},{"lineNumber":113,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":114,"author":{"gitId":"YeluriKetan"},"content":"        tasks.stream()","lastModifiedDate":"2021-09-10"},{"lineNumber":115,"author":{"gitId":"YeluriKetan"},"content":"                .filter((currTask) -\u003e currTask.hasContent(content))","lastModifiedDate":"2021-09-10"},{"lineNumber":116,"author":{"gitId":"YeluriKetan"},"content":"                .forEach(filteredList::add);","lastModifiedDate":"2021-09-10"},{"lineNumber":117,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":118,"author":{"gitId":"YeluriKetan"},"content":"        return filteredList;","lastModifiedDate":"2021-09-10"},{"lineNumber":119,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":120,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":121,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":122,"author":{"gitId":"YeluriKetan"},"content":"     * Returns an {@code ArrayList} of {@code Task}s maintained by this {@code TaskList} object sorted by time.","lastModifiedDate":"2021-09-17"},{"lineNumber":123,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":124,"author":{"gitId":"YeluriKetan"},"content":"     * @return {@code ArrayList} of {@code Task} objects.","lastModifiedDate":"2021-09-17"},{"lineNumber":125,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":126,"author":{"gitId":"YeluriKetan"},"content":"    public ArrayList\u003cTask\u003e sortTasks() {","lastModifiedDate":"2021-09-11"},{"lineNumber":127,"author":{"gitId":"YeluriKetan"},"content":"        ArrayList\u003cTask\u003e sortedList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-11"},{"lineNumber":128,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":129,"author":{"gitId":"YeluriKetan"},"content":"        tasks.stream()","lastModifiedDate":"2021-09-11"},{"lineNumber":130,"author":{"gitId":"YeluriKetan"},"content":"                .sorted()","lastModifiedDate":"2021-09-11"},{"lineNumber":131,"author":{"gitId":"YeluriKetan"},"content":"                .forEach(sortedList::add);","lastModifiedDate":"2021-09-11"},{"lineNumber":132,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":133,"author":{"gitId":"YeluriKetan"},"content":"        return sortedList;","lastModifiedDate":"2021-09-11"},{"lineNumber":134,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":135,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":136,"author":{"gitId":"YeluriKetan"},"content":"    private String countTasks() {","lastModifiedDate":"2021-09-02"},{"lineNumber":137,"author":{"gitId":"YeluriKetan"},"content":"        if (tasks.size() \u003e 0) {","lastModifiedDate":"2021-08-26"},{"lineNumber":138,"author":{"gitId":"YeluriKetan"},"content":"            return \"Now you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2021-08-26"},{"lineNumber":139,"author":{"gitId":"YeluriKetan"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":140,"author":{"gitId":"YeluriKetan"},"content":"            return \"There are no tasks in your list.\";","lastModifiedDate":"2021-08-26"},{"lineNumber":141,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":142,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":143,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"YeluriKetan":143}},{"path":"src/main/java/poseidon/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package poseidon.ui;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"import javafx.scene.layout.Pane;","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"import javafx.scene.paint.ImagePattern;","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"/**","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":" * Represents a controller for {@code DialogBox} used by JavaFX to create GUI, consisting of","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":" * a {@code Circle} containing an image to represent the speaker\u0027s face and","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":" * a {@code Text} box containing text from the speaker.","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":" *","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":" * @author Yeluri Ketan","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":" * @version CS2103T AY21/22 Sem 1 iP","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":" */","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"public class DialogBox extends VBox {","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"    // Constants to be used for creation of a User\u0027s DialogBox.","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"    private static final Font USER_FONT \u003d Font.loadFont(DialogBox.class.getResource(\"/fonts/JetBrainsMono-Italic.ttf\")","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"                    .toExternalForm(),","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"            15);","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"    private static final String USER_BOX_STYLE \u003d \"-fx-background-color: #A3C4BC; -fx-background-radius: 20;\";","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"    private static final String USER_ICON_STYLE \u003d","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"            \"-fx-border-color: #A3C4BC; -fx-border-width: 5; -fx-border-radius: 50;\";","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"    // Constants to be used for creation of the Bot\u0027s DialogBox.","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"    private static final Font BOT_FONT \u003d Font.loadFont(DialogBox.class.getResource(\"/fonts/JetBrainsMono-Regular.ttf\")","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"                    .toExternalForm(),","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"            15);","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"    private static final String BOT_BOX_STYLE \u003d \"-fx-background-color: #E7EFC5; -fx-background-radius: 20;\";","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"    private static final String BOT_ICON_STYLE \u003d","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"            \"-fx-border-color: #E7EFC5; -fx-border-width: 5; -fx-border-radius: 50;\";","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"    // Background and content box of the text box.","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"    @FXML","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"    private HBox textBackgroundBox;","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"YeluriKetan"},"content":"    @FXML","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"YeluriKetan"},"content":"    private Text dialog;","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"YeluriKetan"},"content":"    // Background and content container of the image icon.","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"YeluriKetan"},"content":"    @FXML","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"YeluriKetan"},"content":"    private Pane imagePane;","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"YeluriKetan"},"content":"    @FXML","lastModifiedDate":"2021-09-08"},{"lineNumber":52,"author":{"gitId":"YeluriKetan"},"content":"    private Circle imageCircle;","lastModifiedDate":"2021-09-08"},{"lineNumber":53,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":54,"author":{"gitId":"YeluriKetan"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-08"},{"lineNumber":55,"author":{"gitId":"YeluriKetan"},"content":"        try {","lastModifiedDate":"2021-09-08"},{"lineNumber":56,"author":{"gitId":"YeluriKetan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-08"},{"lineNumber":57,"author":{"gitId":"YeluriKetan"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-08"},{"lineNumber":58,"author":{"gitId":"YeluriKetan"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-08"},{"lineNumber":59,"author":{"gitId":"YeluriKetan"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-08"},{"lineNumber":60,"author":{"gitId":"YeluriKetan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-08"},{"lineNumber":61,"author":{"gitId":"YeluriKetan"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-08"},{"lineNumber":62,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":63,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":64,"author":{"gitId":"YeluriKetan"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-08"},{"lineNumber":65,"author":{"gitId":"YeluriKetan"},"content":"        imageCircle.setFill(new ImagePattern(img));","lastModifiedDate":"2021-09-08"},{"lineNumber":66,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":67,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":68,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":69,"author":{"gitId":"YeluriKetan"},"content":"     * Modifies the {@code DialogBox} to set the style and font intended for User dialog boxes.","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":71,"author":{"gitId":"YeluriKetan"},"content":"    private void modifyForUser() {","lastModifiedDate":"2021-09-16"},{"lineNumber":72,"author":{"gitId":"YeluriKetan"},"content":"        imagePane.setStyle(USER_ICON_STYLE);","lastModifiedDate":"2021-09-16"},{"lineNumber":73,"author":{"gitId":"YeluriKetan"},"content":"        textBackgroundBox.setStyle(USER_BOX_STYLE);","lastModifiedDate":"2021-09-16"},{"lineNumber":74,"author":{"gitId":"YeluriKetan"},"content":"        dialog.setFont(USER_FONT);","lastModifiedDate":"2021-09-16"},{"lineNumber":75,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":76,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":77,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":78,"author":{"gitId":"YeluriKetan"},"content":"     * Modifies the {@code DialogBox} to set the style and font intended for Bot dialog boxes","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"YeluriKetan"},"content":"     * and flips the contents to the left.","lastModifiedDate":"2021-09-16"},{"lineNumber":80,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":81,"author":{"gitId":"YeluriKetan"},"content":"    private void modifyForBot() {","lastModifiedDate":"2021-09-16"},{"lineNumber":82,"author":{"gitId":"YeluriKetan"},"content":"        imagePane.setStyle(BOT_ICON_STYLE);","lastModifiedDate":"2021-09-16"},{"lineNumber":83,"author":{"gitId":"YeluriKetan"},"content":"        imagePane.setTranslateX(0);","lastModifiedDate":"2021-09-09"},{"lineNumber":84,"author":{"gitId":"YeluriKetan"},"content":"        textBackgroundBox.setStyle(BOT_BOX_STYLE);","lastModifiedDate":"2021-09-16"},{"lineNumber":85,"author":{"gitId":"YeluriKetan"},"content":"        textBackgroundBox.setTranslateX(0);","lastModifiedDate":"2021-09-16"},{"lineNumber":86,"author":{"gitId":"YeluriKetan"},"content":"        dialog.setFont(BOT_FONT);","lastModifiedDate":"2021-09-16"},{"lineNumber":87,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":88,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":89,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":90,"author":{"gitId":"YeluriKetan"},"content":"     * Returns a {@code DialogBox} representing a User dialog (i.e.) image on right side,","lastModifiedDate":"2021-09-17"},{"lineNumber":91,"author":{"gitId":"YeluriKetan"},"content":"     * user background color and user font.","lastModifiedDate":"2021-09-17"},{"lineNumber":92,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":93,"author":{"gitId":"YeluriKetan"},"content":"     * @param text Text to be shown in the {@code DialogBox}.","lastModifiedDate":"2021-09-17"},{"lineNumber":94,"author":{"gitId":"YeluriKetan"},"content":"     * @param img {@code Image} to be used as profile image.","lastModifiedDate":"2021-09-17"},{"lineNumber":95,"author":{"gitId":"YeluriKetan"},"content":"     * @return {@code DialogBox} with Text and profile image.","lastModifiedDate":"2021-09-17"},{"lineNumber":96,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":97,"author":{"gitId":"YeluriKetan"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-08"},{"lineNumber":98,"author":{"gitId":"YeluriKetan"},"content":"        DialogBox db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-16"},{"lineNumber":99,"author":{"gitId":"YeluriKetan"},"content":"        db.modifyForUser();","lastModifiedDate":"2021-09-16"},{"lineNumber":100,"author":{"gitId":"YeluriKetan"},"content":"        return db;","lastModifiedDate":"2021-09-16"},{"lineNumber":101,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":102,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":103,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":104,"author":{"gitId":"YeluriKetan"},"content":"     * Returns a {@code DialogBox} representing a Bot dialog","lastModifiedDate":"2021-09-17"},{"lineNumber":105,"author":{"gitId":"YeluriKetan"},"content":"     * (i.e.) image on left side, bot background color and bot font.","lastModifiedDate":"2021-09-17"},{"lineNumber":106,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":107,"author":{"gitId":"YeluriKetan"},"content":"     * @param text Text to be shown in the {@code DialogBox}.","lastModifiedDate":"2021-09-17"},{"lineNumber":108,"author":{"gitId":"YeluriKetan"},"content":"     * @param img {@code Image} to be used as profile image.","lastModifiedDate":"2021-09-17"},{"lineNumber":109,"author":{"gitId":"YeluriKetan"},"content":"     * @return {@code DialogBox} with Text and profile image.","lastModifiedDate":"2021-09-17"},{"lineNumber":110,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":111,"author":{"gitId":"YeluriKetan"},"content":"    public static DialogBox getBotDialog(String text, Image img) {","lastModifiedDate":"2021-09-16"},{"lineNumber":112,"author":{"gitId":"YeluriKetan"},"content":"        DialogBox db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-16"},{"lineNumber":113,"author":{"gitId":"YeluriKetan"},"content":"        db.modifyForBot();","lastModifiedDate":"2021-09-16"},{"lineNumber":114,"author":{"gitId":"YeluriKetan"},"content":"        return db;","lastModifiedDate":"2021-09-08"},{"lineNumber":115,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":116,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"YeluriKetan":116}},{"path":"src/main/java/poseidon/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package poseidon.ui;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"import poseidon.Poseidon;","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"/**","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":" * Represents a controller for {@code MainWindow} used by JavaFX in creating the GUI.","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":" * Also provides the layout for the other controls.","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":" *","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":" * @author Yeluri Ketan","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":" * @version CS2103T AY21/22 Sem 1 iP","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":" */","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"    // Font to be used for the user input box.","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"    private static final Font USER_INPUT_FONT \u003d Font.loadFont(DialogBox.class","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"                    .getResource(\"/fonts/JetBrainsMono-Italic.ttf\")","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"                    .toExternalForm(),","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"            15);","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"    // Images to be used for DialogBox(es) and send button.","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"    private static final Image USER_IMAGE \u003d new Image(MainWindow.class.getResourceAsStream(\"/images/UserIcon.jpg\"));","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"    private static final Image BOT_IMAGE \u003d new Image(MainWindow.class.getResourceAsStream(\"/images/BotIcon.png\"));","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"    private static final Image SEND_IMAGE \u003d new Image(MainWindow.class.getResourceAsStream(\"/images/SendIcon.png\"));","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"    // The scrollable vertical space containing all the dialog boxes.","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"    @FXML","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"    @FXML","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"    // User input box.","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"    @FXML","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"YeluriKetan"},"content":"    // Send button and icon used.","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"YeluriKetan"},"content":"    @FXML","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"YeluriKetan"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"YeluriKetan"},"content":"    @FXML","lastModifiedDate":"2021-09-16"},{"lineNumber":49,"author":{"gitId":"YeluriKetan"},"content":"    private ImageView sendButtonImage;","lastModifiedDate":"2021-09-16"},{"lineNumber":50,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"YeluriKetan"},"content":"    private Poseidon poseidon;","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":53,"author":{"gitId":"YeluriKetan"},"content":"    @FXML","lastModifiedDate":"2021-09-08"},{"lineNumber":54,"author":{"gitId":"YeluriKetan"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-08"},{"lineNumber":55,"author":{"gitId":"YeluriKetan"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-08"},{"lineNumber":56,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":57,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":58,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":59,"author":{"gitId":"YeluriKetan"},"content":"     * @param pos {@code Poseidon} to be set as logical unit for the GUI.","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":61,"author":{"gitId":"YeluriKetan"},"content":"    public void setPoseidon(Poseidon pos) {","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"YeluriKetan"},"content":"        poseidon \u003d pos;","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"YeluriKetan"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getBotDialog(poseidon.runWelcome(), BOT_IMAGE));","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"YeluriKetan"},"content":"        sendButtonImage.setImage(SEND_IMAGE);","lastModifiedDate":"2021-09-16"},{"lineNumber":65,"author":{"gitId":"YeluriKetan"},"content":"        userInput.setFont(USER_INPUT_FONT);","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":67,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":68,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":69,"author":{"gitId":"YeluriKetan"},"content":"     * Creates two {@code DialogBox}es, one echoing the user input and the other containing the Bot\u0027s reply and","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"YeluriKetan"},"content":"     * then appends them to the dialog container. Also clears the user input after processing.","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":72,"author":{"gitId":"YeluriKetan"},"content":"    @FXML","lastModifiedDate":"2021-09-08"},{"lineNumber":73,"author":{"gitId":"YeluriKetan"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-08"},{"lineNumber":74,"author":{"gitId":"YeluriKetan"},"content":"        final String emptyString \u003d \"\";","lastModifiedDate":"2021-09-17"},{"lineNumber":75,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"YeluriKetan"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-08"},{"lineNumber":77,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":78,"author":{"gitId":"YeluriKetan"},"content":"        if (input.equals(emptyString)) {","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"YeluriKetan"},"content":"            return;","lastModifiedDate":"2021-09-17"},{"lineNumber":80,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":82,"author":{"gitId":"YeluriKetan"},"content":"        if (poseidon.isBye(input)) {","lastModifiedDate":"2021-09-17"},{"lineNumber":83,"author":{"gitId":"YeluriKetan"},"content":"            Platform.exit();","lastModifiedDate":"2021-09-08"},{"lineNumber":84,"author":{"gitId":"YeluriKetan"},"content":"            return;","lastModifiedDate":"2021-09-08"},{"lineNumber":85,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":86,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":87,"author":{"gitId":"YeluriKetan"},"content":"        String response \u003d poseidon.run(input);","lastModifiedDate":"2021-09-17"},{"lineNumber":88,"author":{"gitId":"YeluriKetan"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-08"},{"lineNumber":89,"author":{"gitId":"YeluriKetan"},"content":"                DialogBox.getUserDialog(input, USER_IMAGE),","lastModifiedDate":"2021-09-16"},{"lineNumber":90,"author":{"gitId":"YeluriKetan"},"content":"                DialogBox.getBotDialog(response, BOT_IMAGE)","lastModifiedDate":"2021-09-16"},{"lineNumber":91,"author":{"gitId":"YeluriKetan"},"content":"        );","lastModifiedDate":"2021-09-08"},{"lineNumber":92,"author":{"gitId":"YeluriKetan"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-08"},{"lineNumber":93,"author":{"gitId":"YeluriKetan"},"content":"        assert userInput.getText().length() \u003d\u003d 0 : \"User input in GUI text field is supposed to be cleared\";","lastModifiedDate":"2021-09-09"},{"lineNumber":94,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":95,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"YeluriKetan":95}},{"path":"src/main/java/poseidon/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package poseidon.ui;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"import poseidon.task.Task;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":" * Represents an {@code Ui} object that contains all the functionality for creating responses from the Bot.","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":" *","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":" * @author Yeluri Ketan","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":" * @version CS2103T AY21/22 Sem 1 iP","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"public class Ui {","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"    private static final String LOGO \u003d \"                   /\\\\                   \\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"            + \"           ||\\\\    /||\\\\    /||           \\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"            + \"           \\\\\\\\_\\\\  \u0027\u0027||\u0027\u0027  /_//           \\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"            + \"            \\\\\\\\     ||     //            \\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"            + \"             \\\\\\\\    ||    //             \\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"            + \"              \\\\\\\\   ||   //              \\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"            + \"               \\\\\\\\__||__//               \\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"            + \"                   ||                   \\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"            + \"                   ||                   \\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"            + \"                   ||                   \\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"            + \"                   ||                   \\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"            + \"           P O S E || D O N             \\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"            + \"                   ||                   \\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"            + \"                   ||                   \\n\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"    private static final String HELLO_MSG \u003d \"Hello! I\u0027m POSEIDON\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"            + \"What can I do for you?\";","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"    private static final String LIST_TASKS_INTRO_MSG \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"    private static final String LIST_TASKS_EMPTY_MSG \u003d \"There are no tasks in your list.\";","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"    private static final String LIST_TASKS_FIND_INTRO_MSG \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"    private static final String LIST_TASKS_FIND_EMPTY_MSG \u003d \"There are no matching tasks in your list.\";","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"    private static final String COMMAND_FAIL_MSG \u003d \"I didn\u0027t get that. Please try again.\";","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"    private static final String ERROR_INTRO_MSG \u003d \"Oops... Something\u0027s wrong.\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"    private static final String STORAGE_ERROR_MSG \u003d \"File for storage of tasks could not be accessed or written.\";","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"    private static final String GOODBYE_MSG \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"    private static final String HELP_MSG \u003d \"Here\u0027s a list of all the commands I can understand:\\n\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"            + \"FOR HELP - help\\n\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"            + \"ADD TODO - todo \u0027description\u0027\\n\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"            + \"ADD DEADLINE - deadline \u0027description\u0027 /by \u0027yyyy MM dd HHmm\u0027\\n\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"            + \"ADD EVENT - event \u0027description\u0027 /from \u0027yyyy MM dd HHmm\u0027 to \u0027yyyy MM dd HHmm\u0027\\n\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"            + \"MARK TASK DONE - done \u0027int\u0027\\n\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"YeluriKetan"},"content":"            + \"DELETE TASK - delete \u0027int\u0027\\n\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"YeluriKetan"},"content":"            + \"LIST TASKS - list\\n\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"YeluriKetan"},"content":"            + \"SORT TASKS - list -s\\n\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"YeluriKetan"},"content":"            + \"FIND CONTENT - find \u0027content\u0027\\n\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"YeluriKetan"},"content":"            + \"EXIT - bye\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"YeluriKetan"},"content":"     * Constructs a Ui object.","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"YeluriKetan"},"content":"    public Ui() {","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"YeluriKetan"},"content":"     * Returns a human-readable {@code String} that conveys a welcome message from the Bot to the User.","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"YeluriKetan"},"content":"     * @return {@code String} welcome message.","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"YeluriKetan"},"content":"    public String getWelcomeMessage() {","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"YeluriKetan"},"content":"        return LOGO + HELLO_MSG;","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":68,"author":{"gitId":"YeluriKetan"},"content":"     * Returns a human-readable {@code String} representation of a list.","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":70,"author":{"gitId":"YeluriKetan"},"content":"     * @param tasks List of {@code Task}s to be converted to {@code String}.","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"YeluriKetan"},"content":"     * @return {@code String} list representation.","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":73,"author":{"gitId":"YeluriKetan"},"content":"    public String getListMessage(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-08"},{"lineNumber":74,"author":{"gitId":"YeluriKetan"},"content":"        StringBuilder message \u003d new StringBuilder();","lastModifiedDate":"2021-09-08"},{"lineNumber":75,"author":{"gitId":"YeluriKetan"},"content":"        if (tasks.size() \u003e 0) {","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"YeluriKetan"},"content":"            message.append(LIST_TASKS_INTRO_MSG);","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"YeluriKetan"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"YeluriKetan"},"content":"                message.append(\"  \" + (i + 1) + \". \" + tasks.get(i) + \"\\n\");","lastModifiedDate":"2021-09-08"},{"lineNumber":79,"author":{"gitId":"YeluriKetan"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"YeluriKetan"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"YeluriKetan"},"content":"            message.append(LIST_TASKS_EMPTY_MSG);","lastModifiedDate":"2021-09-17"},{"lineNumber":82,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"YeluriKetan"},"content":"        return message.toString();","lastModifiedDate":"2021-09-08"},{"lineNumber":84,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":87,"author":{"gitId":"YeluriKetan"},"content":"     * Returns a human-readable {@code String} representation of a list resulting from a find operation.","lastModifiedDate":"2021-09-17"},{"lineNumber":88,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":89,"author":{"gitId":"YeluriKetan"},"content":"     * @param tasks List of {@code Task}s to be converted to {@code String}.","lastModifiedDate":"2021-09-17"},{"lineNumber":90,"author":{"gitId":"YeluriKetan"},"content":"     * @return {@code String} list representation with added \"find\" message.","lastModifiedDate":"2021-09-17"},{"lineNumber":91,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":92,"author":{"gitId":"YeluriKetan"},"content":"    public String showFindList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-08"},{"lineNumber":93,"author":{"gitId":"YeluriKetan"},"content":"        StringBuilder message \u003d new StringBuilder();","lastModifiedDate":"2021-09-08"},{"lineNumber":94,"author":{"gitId":"YeluriKetan"},"content":"        if (tasks.size() \u003e 0) {","lastModifiedDate":"2021-08-27"},{"lineNumber":95,"author":{"gitId":"YeluriKetan"},"content":"            message.append(LIST_TASKS_FIND_INTRO_MSG);","lastModifiedDate":"2021-09-17"},{"lineNumber":96,"author":{"gitId":"YeluriKetan"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-27"},{"lineNumber":97,"author":{"gitId":"YeluriKetan"},"content":"                message.append(\"  \" + (i + 1) + \". \" + tasks.get(i) + \"\\n\");","lastModifiedDate":"2021-09-08"},{"lineNumber":98,"author":{"gitId":"YeluriKetan"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":99,"author":{"gitId":"YeluriKetan"},"content":"        } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":100,"author":{"gitId":"YeluriKetan"},"content":"            message.append(LIST_TASKS_FIND_EMPTY_MSG);","lastModifiedDate":"2021-09-17"},{"lineNumber":101,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":102,"author":{"gitId":"YeluriKetan"},"content":"        return message.toString();","lastModifiedDate":"2021-09-08"},{"lineNumber":103,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":104,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":105,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":106,"author":{"gitId":"YeluriKetan"},"content":"     * Returns a human-readable {@code String} that conveys that an unknown/non-existent command has been encountered.","lastModifiedDate":"2021-09-17"},{"lineNumber":107,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":108,"author":{"gitId":"YeluriKetan"},"content":"     * @return {@code String} error message.","lastModifiedDate":"2021-09-17"},{"lineNumber":109,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":110,"author":{"gitId":"YeluriKetan"},"content":"    public String showCommandFail() {","lastModifiedDate":"2021-09-08"},{"lineNumber":111,"author":{"gitId":"YeluriKetan"},"content":"        return COMMAND_FAIL_MSG;","lastModifiedDate":"2021-09-17"},{"lineNumber":112,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":113,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":114,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":115,"author":{"gitId":"YeluriKetan"},"content":"     * Returns a human-readable {@code String} that conveys that the given error message.","lastModifiedDate":"2021-09-17"},{"lineNumber":116,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":117,"author":{"gitId":"YeluriKetan"},"content":"     * @param message Error message to be shown.","lastModifiedDate":"2021-09-08"},{"lineNumber":118,"author":{"gitId":"YeluriKetan"},"content":"     * @return {@code String} error message.","lastModifiedDate":"2021-09-17"},{"lineNumber":119,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":120,"author":{"gitId":"YeluriKetan"},"content":"    public String showError(String message) {","lastModifiedDate":"2021-09-08"},{"lineNumber":121,"author":{"gitId":"YeluriKetan"},"content":"        return ERROR_INTRO_MSG + message;","lastModifiedDate":"2021-09-17"},{"lineNumber":122,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":123,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":124,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":125,"author":{"gitId":"YeluriKetan"},"content":"     * Returns a {@code String} that conveys the given message.","lastModifiedDate":"2021-09-17"},{"lineNumber":126,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":127,"author":{"gitId":"YeluriKetan"},"content":"     * @param message Message to be shown.","lastModifiedDate":"2021-09-08"},{"lineNumber":128,"author":{"gitId":"YeluriKetan"},"content":"     * @return {@code String} message.","lastModifiedDate":"2021-09-17"},{"lineNumber":129,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":130,"author":{"gitId":"YeluriKetan"},"content":"    public String showMessage(String message) {","lastModifiedDate":"2021-09-08"},{"lineNumber":131,"author":{"gitId":"YeluriKetan"},"content":"        return message;","lastModifiedDate":"2021-09-08"},{"lineNumber":132,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":133,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":134,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":135,"author":{"gitId":"YeluriKetan"},"content":"     * Returns a {@code String} that conveys that a storage error has been encountered.","lastModifiedDate":"2021-09-17"},{"lineNumber":136,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":137,"author":{"gitId":"YeluriKetan"},"content":"     * @return {@code String} error message.","lastModifiedDate":"2021-09-17"},{"lineNumber":138,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":139,"author":{"gitId":"YeluriKetan"},"content":"    public String showStorageError() {","lastModifiedDate":"2021-09-08"},{"lineNumber":140,"author":{"gitId":"YeluriKetan"},"content":"        return showError(STORAGE_ERROR_MSG);","lastModifiedDate":"2021-09-17"},{"lineNumber":141,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":142,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":143,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":144,"author":{"gitId":"YeluriKetan"},"content":"     * Returns a {@code String} that conveys a goodbye message from the Bot to the User.","lastModifiedDate":"2021-09-17"},{"lineNumber":145,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":146,"author":{"gitId":"YeluriKetan"},"content":"     * @return {@code String} goodbye message.","lastModifiedDate":"2021-09-17"},{"lineNumber":147,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":148,"author":{"gitId":"YeluriKetan"},"content":"    public String showGoodbye() {","lastModifiedDate":"2021-09-08"},{"lineNumber":149,"author":{"gitId":"YeluriKetan"},"content":"        return GOODBYE_MSG;","lastModifiedDate":"2021-09-17"},{"lineNumber":150,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":151,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":152,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":153,"author":{"gitId":"YeluriKetan"},"content":"     * Returns a {@code String} that contains a list of all the commands as a help to the User.","lastModifiedDate":"2021-09-17"},{"lineNumber":154,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":155,"author":{"gitId":"YeluriKetan"},"content":"     * @return {@code String} help message.","lastModifiedDate":"2021-09-17"},{"lineNumber":156,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":157,"author":{"gitId":"YeluriKetan"},"content":"    public String showHelp() {","lastModifiedDate":"2021-09-17"},{"lineNumber":158,"author":{"gitId":"YeluriKetan"},"content":"        return HELP_MSG;","lastModifiedDate":"2021-09-17"},{"lineNumber":159,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":160,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"YeluriKetan":160}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"\u003c?import javafx.scene.layout.Pane?\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"\u003cfx:root maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefWidth\u003d\"485.0\" type\u003d\"VBox\"","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"         xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"      \u003cPane fx:id\u003d\"imagePane\" maxHeight\u003d\"60.0\" maxWidth\u003d\"60.0\" minHeight\u003d\"60.0\" minWidth\u003d\"60.0\" prefHeight\u003d\"60.0\"","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"            prefWidth\u003d\"60.0\" snapToPixel\u003d\"false\" translateX\u003d\"405.0\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"            \u003cCircle fx:id\u003d\"imageCircle\" layoutX\u003d\"30.0\" layoutY\u003d\"30.0\" radius\u003d\"25.0\" stroke\u003d\"TRANSPARENT\"","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"                    strokeType\u003d\"INSIDE\" /\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"         \u003c/children\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"         \u003cVBox.margin\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"         \u003c/VBox.margin\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"      \u003c/Pane\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"      \u003cjavafx.scene.layout.HBox fx:id\u003d\"textBackgroundBox\" alignment\u003d\"TOP_RIGHT\"","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"                                maxWidth\u003d\"400.0\" prefHeight\u003d\"40.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"                                style\u003d\"-fx-background-radius: 20; -fx-background-color: gray;\" translateX\u003d\"65.0\"\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"              \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"         \u003cVBox.margin\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"         \u003c/VBox.margin\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"            \u003cText fx:id\u003d\"dialog\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Sample Text\" wrappingWidth\u003d\"380.0\"\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"               \u003cHBox.margin\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"                  \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"               \u003c/HBox.margin\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"               \u003cfont\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"                  \u003cFont name\u003d\"Roboto Medium\" size\u003d\"16.0\" /\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"               \u003c/font\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"            \u003c/Text\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"         \u003c/children\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"      \u003c/javafx.scene.layout.HBox\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"   \u003c/children\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"YeluriKetan"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"YeluriKetan":45}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"\u003c?import javafx.geometry.Rectangle2D?\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"700.0\"","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"            prefWidth\u003d\"500.0\" style\u003d\"-fx-background-color: #413c58;\" xmlns\u003d\"http://javafx.com/javafx/11\"","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"poseidon.ui.MainWindow\"\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutX\u003d\"5.0\" layoutY\u003d\"650.0\" maxHeight\u003d\"-Infinity\"","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"                   maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"                   prefHeight\u003d\"50.0\" prefWidth\u003d\"440.0\" style\u003d\"-fx-background-color: A3C4BC;\"","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.6000000000000227\" /\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"        \u003cButton fx:id\u003d\"sendButton\" contentDisplay\u003d\"CENTER\" layoutX\u003d\"448.0\" layoutY\u003d\"647.0\" maxHeight\u003d\"-Infinity\"","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"                maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" mnemonicParsing\u003d\"false\"","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"                onAction\u003d\"#handleUserInput\" prefHeight\u003d\"50.0\" prefWidth\u003d\"50.0\"","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"                style\u003d\"-fx-background-color: E7EFC5; -fx-background-radius: 5;\" textAlignment\u003d\"CENTER\"","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"                textFill\u003d\"#000000ce\"\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"         \u003cfont\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"            \u003cFont name\u003d\"Segoe UI Bold Italic\" size\u003d\"16.0\" /\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"         \u003c/font\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"         \u003cgraphic\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"            \u003cImageView fx:id\u003d\"sendButtonImage\" fitHeight\u003d\"32.0\" fitWidth\u003d\"32.0\" pickOnBounds\u003d\"true\"","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"                       preserveRatio\u003d\"true\" translateX\u003d\"-1.0\" translateY\u003d\"2.0\"\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"               \u003cviewport\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"                  \u003cRectangle2D /\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"               \u003c/viewport\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"            \u003c/ImageView\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"         \u003c/graphic\u003e\u003c/Button\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\"","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"                    minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"644.0\" prefWidth\u003d\"500.0\"","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"                    style\u003d\"-fx-background-color: transparent;\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"644.0\" prefWidth\u003d\"486.0\"","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"                      style\u003d\"-fx-background-color: #413c58;\" translateY\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"YeluriKetan"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"YeluriKetan":45}},{"path":"src/test/java/poseidon/exception/PoseidonExceptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package poseidon.exception;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":" * Represents a testing class for {@code PoseidonException}.","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":" *","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":" * @author Yeluri Ketan","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":" * @version CS2103T AY21/22 Sem 1 iP","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"public class PoseidonExceptionTest {","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"    public void constructor_newPoseidonException_correctErrorMessage() {","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"        String errorMsg \u003d \"Sample Error Message\";","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"        PoseidonException poseidonException \u003d new PoseidonException(errorMsg);","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(errorMsg, poseidonException.getMessage());","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"YeluriKetan":21}},{"path":"src/test/java/poseidon/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package poseidon.parser;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"import poseidon.exception.PoseidonException;","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":" * Represents a testing class for {@code Parser}.","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":" *","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":" * @author Yeluri Ketan","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":" * @version CS2103T AY21/22 Sem 1 iP","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"public class ParserTest {","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"    public void parse_byeCommand_correctStringArray() {","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"        String byeCommand1 \u003d \"bye\";","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"        String byeCommand2 \u003d \"BYE\";","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"        String byeCommand3 \u003d \"Bye      \";","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"        String[] byeCommandArr \u003d new String[]{\"bye\"};","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(Arrays.toString(byeCommandArr), Arrays.toString(Parser.parse(byeCommand1)));","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(Arrays.toString(byeCommandArr), Arrays.toString(Parser.parse(byeCommand2)));","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(Arrays.toString(byeCommandArr), Arrays.toString(Parser.parse(byeCommand3)));","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"    public void parse_listCommand_correctStringArray() {","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"        String listCommand1 \u003d \"list\";","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"        String listCommand2 \u003d \"LIST\";","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"        String listCommand3 \u003d \"LisT      \";","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"        String[] listCommandArr \u003d new String[]{\"list\"};","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(Arrays.toString(listCommandArr), Arrays.toString(Parser.parse(listCommand1)));","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(Arrays.toString(listCommandArr), Arrays.toString(Parser.parse(listCommand2)));","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(Arrays.toString(listCommandArr), Arrays.toString(Parser.parse(listCommand3)));","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"YeluriKetan"},"content":"    public void parse_doneCommand_correctStringArray() {","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"YeluriKetan"},"content":"        String doneCommand1 \u003d \"done 1\";","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"YeluriKetan"},"content":"        String doneCommand2 \u003d \"DONE       1\";","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"YeluriKetan"},"content":"        String doneCommand3 \u003d \"DoNe      1       \";","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"YeluriKetan"},"content":"        String[] doneCommandArr \u003d new String[]{\"done\", \"1\"};","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(Arrays.toString(doneCommandArr), Arrays.toString(Parser.parse(doneCommand1)));","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(Arrays.toString(doneCommandArr), Arrays.toString(Parser.parse(doneCommand2)));","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(Arrays.toString(doneCommandArr), Arrays.toString(Parser.parse(doneCommand3)));","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"YeluriKetan"},"content":"    public void parse_deleteCommand_correctStringArray() {","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"YeluriKetan"},"content":"        String deleteCommand1 \u003d \"delete 1\";","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"YeluriKetan"},"content":"        String deleteCommand2 \u003d \"DELeTE       1\";","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"YeluriKetan"},"content":"        String deleteCommand3 \u003d \"Delete      1       \";","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"YeluriKetan"},"content":"        String[] deleteCommandArr \u003d new String[]{\"delete\", \"1\"};","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(Arrays.toString(deleteCommandArr), Arrays.toString(Parser.parse(deleteCommand1)));","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(Arrays.toString(deleteCommandArr), Arrays.toString(Parser.parse(deleteCommand2)));","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(Arrays.toString(deleteCommandArr), Arrays.toString(Parser.parse(deleteCommand3)));","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-09-17"},{"lineNumber":75,"author":{"gitId":"YeluriKetan"},"content":"    public void parse_todoCommand_correctStringArray() {","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"YeluriKetan"},"content":"        String todoCommand1 \u003d \"todo finish all week 3 iP tasks\";","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"YeluriKetan"},"content":"        String todoCommand2 \u003d \"TODO   finish all week 3 iP tasks\";","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"YeluriKetan"},"content":"        String todoCommand3 \u003d \"TodO      finish all week 3 iP tasks        \";","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":80,"author":{"gitId":"YeluriKetan"},"content":"        String[] todoCommandArray \u003d new String[]{\"add\", \"todo\", \"finish all week 3 iP tasks\"};","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":82,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(Arrays.toString(todoCommandArray), Arrays.toString(Parser.parse(todoCommand1)));","lastModifiedDate":"2021-09-17"},{"lineNumber":83,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(Arrays.toString(todoCommandArray), Arrays.toString(Parser.parse(todoCommand2)));","lastModifiedDate":"2021-09-17"},{"lineNumber":84,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(Arrays.toString(todoCommandArray), Arrays.toString(Parser.parse(todoCommand3)));","lastModifiedDate":"2021-09-17"},{"lineNumber":85,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":86,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":87,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-09-17"},{"lineNumber":88,"author":{"gitId":"YeluriKetan"},"content":"    public void parse_emptyTodoCommand_correctErrorMessage() {","lastModifiedDate":"2021-09-17"},{"lineNumber":89,"author":{"gitId":"YeluriKetan"},"content":"        String emptyTodoCommand \u003d \"todo   \";","lastModifiedDate":"2021-09-17"},{"lineNumber":90,"author":{"gitId":"YeluriKetan"},"content":"        String errorMsg \u003d \"\";","lastModifiedDate":"2021-09-17"},{"lineNumber":91,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":92,"author":{"gitId":"YeluriKetan"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":93,"author":{"gitId":"YeluriKetan"},"content":"            Parser.parse(emptyTodoCommand);","lastModifiedDate":"2021-09-17"},{"lineNumber":94,"author":{"gitId":"YeluriKetan"},"content":"            fail();","lastModifiedDate":"2021-09-17"},{"lineNumber":95,"author":{"gitId":"YeluriKetan"},"content":"        } catch (PoseidonException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":96,"author":{"gitId":"YeluriKetan"},"content":"            errorMsg \u003d e.getMessage();","lastModifiedDate":"2021-09-17"},{"lineNumber":97,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":98,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":99,"author":{"gitId":"YeluriKetan"},"content":"        String expectedErrorMsg \u003d \"The description of a TODO task cannot be empty.\\nPlease try again.\";","lastModifiedDate":"2021-09-17"},{"lineNumber":100,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":101,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(expectedErrorMsg, errorMsg);","lastModifiedDate":"2021-09-17"},{"lineNumber":102,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":103,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":104,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-09-17"},{"lineNumber":105,"author":{"gitId":"YeluriKetan"},"content":"    public void parse_deadlineCommand_correctStringArray() {","lastModifiedDate":"2021-09-17"},{"lineNumber":106,"author":{"gitId":"YeluriKetan"},"content":"        String deadlineCommand1 \u003d \"deadline finish all week 3 iP tasks /by 2021 09 17 2359\";","lastModifiedDate":"2021-09-17"},{"lineNumber":107,"author":{"gitId":"YeluriKetan"},"content":"        String deadlineCommand2 \u003d \"DEADLINE   finish all week 3 iP tasks     /by 2021 09 17 2359\";","lastModifiedDate":"2021-09-17"},{"lineNumber":108,"author":{"gitId":"YeluriKetan"},"content":"        String deadlineCommand3 \u003d \"DeadLine      finish all week 3 iP tasks        /by 2021 09 17 2359\";","lastModifiedDate":"2021-09-17"},{"lineNumber":109,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":110,"author":{"gitId":"YeluriKetan"},"content":"        String[] deadlineCommandArray \u003d new String[]{\"add\", \"deadline\",","lastModifiedDate":"2021-09-17"},{"lineNumber":111,"author":{"gitId":"YeluriKetan"},"content":"            \"finish all week 3 iP tasks\", \"2021 09 17 2359\"};","lastModifiedDate":"2021-09-17"},{"lineNumber":112,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":113,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(Arrays.toString(deadlineCommandArray), Arrays.toString(Parser.parse(deadlineCommand1)));","lastModifiedDate":"2021-09-17"},{"lineNumber":114,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(Arrays.toString(deadlineCommandArray), Arrays.toString(Parser.parse(deadlineCommand2)));","lastModifiedDate":"2021-09-17"},{"lineNumber":115,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(Arrays.toString(deadlineCommandArray), Arrays.toString(Parser.parse(deadlineCommand3)));","lastModifiedDate":"2021-09-17"},{"lineNumber":116,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":117,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":118,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-09-17"},{"lineNumber":119,"author":{"gitId":"YeluriKetan"},"content":"    public void parse_invalidDeadlineCommand_correctErrorMsg() {","lastModifiedDate":"2021-09-17"},{"lineNumber":120,"author":{"gitId":"YeluriKetan"},"content":"        String invalidDeadlineCommand \u003d \"deadline finish all week 3 iP tasks\";","lastModifiedDate":"2021-09-17"},{"lineNumber":121,"author":{"gitId":"YeluriKetan"},"content":"        String errorMsg \u003d \"\";","lastModifiedDate":"2021-09-17"},{"lineNumber":122,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":123,"author":{"gitId":"YeluriKetan"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":124,"author":{"gitId":"YeluriKetan"},"content":"            Parser.parse(invalidDeadlineCommand);","lastModifiedDate":"2021-09-17"},{"lineNumber":125,"author":{"gitId":"YeluriKetan"},"content":"            fail();","lastModifiedDate":"2021-09-17"},{"lineNumber":126,"author":{"gitId":"YeluriKetan"},"content":"        } catch (PoseidonException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":127,"author":{"gitId":"YeluriKetan"},"content":"            errorMsg \u003d e.getMessage();","lastModifiedDate":"2021-09-17"},{"lineNumber":128,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":129,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":130,"author":{"gitId":"YeluriKetan"},"content":"        String expectedErrorMsg \u003d \"There appears to be a typo in your DEADLINE command.\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":131,"author":{"gitId":"YeluriKetan"},"content":"                + \"The command should be of the form:\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":132,"author":{"gitId":"YeluriKetan"},"content":"                + \"  deadline \u0027description\u0027 /by \u0027yyyy mm dd hhmm\u0027\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":133,"author":{"gitId":"YeluriKetan"},"content":"                + \"Please try again.\";","lastModifiedDate":"2021-09-17"},{"lineNumber":134,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":135,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(expectedErrorMsg, errorMsg);","lastModifiedDate":"2021-09-17"},{"lineNumber":136,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":137,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":138,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-09-17"},{"lineNumber":139,"author":{"gitId":"YeluriKetan"},"content":"    public void parse_eventCommand_correctStringArray() {","lastModifiedDate":"2021-09-17"},{"lineNumber":140,"author":{"gitId":"YeluriKetan"},"content":"        String eventCommand1 \u003d \"event week 3 team meeting /from 2021 09 17 2000 to 2021 09 17 2200\";","lastModifiedDate":"2021-09-17"},{"lineNumber":141,"author":{"gitId":"YeluriKetan"},"content":"        String eventCommand2 \u003d \"EVENT   week 3 team meeting     /from 2021 09 17 2000 to 2021 09 17 2200\";","lastModifiedDate":"2021-09-17"},{"lineNumber":142,"author":{"gitId":"YeluriKetan"},"content":"        String eventCommand3 \u003d \"EvenT      week 3 team meeting        /from 2021 09 17 2000 to 2021 09 17 2200\";","lastModifiedDate":"2021-09-17"},{"lineNumber":143,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":144,"author":{"gitId":"YeluriKetan"},"content":"        String[] eventCommandArray \u003d new String[]{\"add\", \"event\",","lastModifiedDate":"2021-09-17"},{"lineNumber":145,"author":{"gitId":"YeluriKetan"},"content":"            \"week 3 team meeting\", \"2021 09 17 2000\", \"2021 09 17 2200\"};","lastModifiedDate":"2021-09-17"},{"lineNumber":146,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":147,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(Arrays.toString(eventCommandArray), Arrays.toString(Parser.parse(eventCommand1)));","lastModifiedDate":"2021-09-17"},{"lineNumber":148,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(Arrays.toString(eventCommandArray), Arrays.toString(Parser.parse(eventCommand2)));","lastModifiedDate":"2021-09-17"},{"lineNumber":149,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(Arrays.toString(eventCommandArray), Arrays.toString(Parser.parse(eventCommand3)));","lastModifiedDate":"2021-09-17"},{"lineNumber":150,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":151,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":152,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-09-17"},{"lineNumber":153,"author":{"gitId":"YeluriKetan"},"content":"    public void parse_findCommand_correctStringArray() {","lastModifiedDate":"2021-09-17"},{"lineNumber":154,"author":{"gitId":"YeluriKetan"},"content":"        String findCommand1 \u003d \"find team\";","lastModifiedDate":"2021-09-17"},{"lineNumber":155,"author":{"gitId":"YeluriKetan"},"content":"        String findCommand2 \u003d \"FIND    team\";","lastModifiedDate":"2021-09-17"},{"lineNumber":156,"author":{"gitId":"YeluriKetan"},"content":"        String findCommand3 \u003d \"FInd        team          \";","lastModifiedDate":"2021-09-17"},{"lineNumber":157,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":158,"author":{"gitId":"YeluriKetan"},"content":"        String[] findCommandArray \u003d new String[]{\"find\", \"team\"};","lastModifiedDate":"2021-09-17"},{"lineNumber":159,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":160,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(Arrays.toString(findCommandArray), Arrays.toString(Parser.parse(findCommand1)));","lastModifiedDate":"2021-09-17"},{"lineNumber":161,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(Arrays.toString(findCommandArray), Arrays.toString(Parser.parse(findCommand2)));","lastModifiedDate":"2021-09-17"},{"lineNumber":162,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(Arrays.toString(findCommandArray), Arrays.toString(Parser.parse(findCommand3)));","lastModifiedDate":"2021-09-17"},{"lineNumber":163,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":164,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":165,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-09-17"},{"lineNumber":166,"author":{"gitId":"YeluriKetan"},"content":"    public void parse_sortCommand_correctStringArray() {","lastModifiedDate":"2021-09-17"},{"lineNumber":167,"author":{"gitId":"YeluriKetan"},"content":"        String sortCommand1 \u003d \"list -s\";","lastModifiedDate":"2021-09-17"},{"lineNumber":168,"author":{"gitId":"YeluriKetan"},"content":"        String sortCommand2 \u003d \"LIST -S    \";","lastModifiedDate":"2021-09-17"},{"lineNumber":169,"author":{"gitId":"YeluriKetan"},"content":"        String sortCommand3 \u003d \"LisT     -S      \";","lastModifiedDate":"2021-09-17"},{"lineNumber":170,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":171,"author":{"gitId":"YeluriKetan"},"content":"        String[] sortCommandArray \u003d new String[]{\"sort\"};","lastModifiedDate":"2021-09-17"},{"lineNumber":172,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":173,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(Arrays.toString(sortCommandArray), Arrays.toString(Parser.parse(sortCommand1)));","lastModifiedDate":"2021-09-17"},{"lineNumber":174,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(Arrays.toString(sortCommandArray), Arrays.toString(Parser.parse(sortCommand2)));","lastModifiedDate":"2021-09-17"},{"lineNumber":175,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(Arrays.toString(sortCommandArray), Arrays.toString(Parser.parse(sortCommand3)));","lastModifiedDate":"2021-09-17"},{"lineNumber":176,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":177,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":178,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-09-17"},{"lineNumber":179,"author":{"gitId":"YeluriKetan"},"content":"    public void parse_nonExistentCommand_correctStringArray() {","lastModifiedDate":"2021-09-17"},{"lineNumber":180,"author":{"gitId":"YeluriKetan"},"content":"        String failCommand1 \u003d \"hello\";","lastModifiedDate":"2021-09-17"},{"lineNumber":181,"author":{"gitId":"YeluriKetan"},"content":"        String failCommand2 \u003d \"     sdadsdsdas    \";","lastModifiedDate":"2021-09-17"},{"lineNumber":182,"author":{"gitId":"YeluriKetan"},"content":"        String failCommand3 \u003d \"asadsadasd                  sdasdsad     adsdsda\";","lastModifiedDate":"2021-09-17"},{"lineNumber":183,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":184,"author":{"gitId":"YeluriKetan"},"content":"        String[] failCommandArray \u003d new String[]{\"fail\"};","lastModifiedDate":"2021-09-17"},{"lineNumber":185,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":186,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(Arrays.toString(failCommandArray), Arrays.toString(Parser.parse(failCommand1)));","lastModifiedDate":"2021-09-17"},{"lineNumber":187,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(Arrays.toString(failCommandArray), Arrays.toString(Parser.parse(failCommand2)));","lastModifiedDate":"2021-09-17"},{"lineNumber":188,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(Arrays.toString(failCommandArray), Arrays.toString(Parser.parse(failCommand3)));","lastModifiedDate":"2021-09-17"},{"lineNumber":189,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":190,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":191,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-09-17"},{"lineNumber":192,"author":{"gitId":"YeluriKetan"},"content":"    public void parseIndex_intString_integer() {","lastModifiedDate":"2021-09-17"},{"lineNumber":193,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(1, Parser.parseIndex(\"1\"));","lastModifiedDate":"2021-09-17"},{"lineNumber":194,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(23, Parser.parseIndex(\"23\"));","lastModifiedDate":"2021-09-17"},{"lineNumber":195,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(-10, Parser.parseIndex(\"-10\"));","lastModifiedDate":"2021-09-17"},{"lineNumber":196,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":197,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":198,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-09-17"},{"lineNumber":199,"author":{"gitId":"YeluriKetan"},"content":"    public void isParsedBye_byeCommand() {","lastModifiedDate":"2021-09-17"},{"lineNumber":200,"author":{"gitId":"YeluriKetan"},"content":"        String byeCommand1 \u003d \"bye\";","lastModifiedDate":"2021-09-17"},{"lineNumber":201,"author":{"gitId":"YeluriKetan"},"content":"        String byeCommand2 \u003d \"BYE\";","lastModifiedDate":"2021-09-17"},{"lineNumber":202,"author":{"gitId":"YeluriKetan"},"content":"        String byeCommand3 \u003d \"Bye      \";","lastModifiedDate":"2021-09-17"},{"lineNumber":203,"author":{"gitId":"YeluriKetan"},"content":"        String byeCommand4 \u003d \"Not a bye\";","lastModifiedDate":"2021-09-17"},{"lineNumber":204,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":205,"author":{"gitId":"YeluriKetan"},"content":"        assertTrue(Parser.isParsedBye(byeCommand1));","lastModifiedDate":"2021-09-17"},{"lineNumber":206,"author":{"gitId":"YeluriKetan"},"content":"        assertTrue(Parser.isParsedBye(byeCommand2));","lastModifiedDate":"2021-09-17"},{"lineNumber":207,"author":{"gitId":"YeluriKetan"},"content":"        assertTrue(Parser.isParsedBye(byeCommand3));","lastModifiedDate":"2021-09-17"},{"lineNumber":208,"author":{"gitId":"YeluriKetan"},"content":"        assertFalse(Parser.isParsedBye(byeCommand4));","lastModifiedDate":"2021-09-17"},{"lineNumber":209,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":210,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":211,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-09-17"},{"lineNumber":212,"author":{"gitId":"YeluriKetan"},"content":"    public void parseDateTime_dateTimeString_correctDateTimeObject() {","lastModifiedDate":"2021-09-17"},{"lineNumber":213,"author":{"gitId":"YeluriKetan"},"content":"        String dateTimeString \u003d \"2021 09 17 2359\";","lastModifiedDate":"2021-09-17"},{"lineNumber":214,"author":{"gitId":"YeluriKetan"},"content":"        String expectedDateTimeObjectToString \u003d \"2021-09-17T23:59\";","lastModifiedDate":"2021-09-17"},{"lineNumber":215,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":216,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(expectedDateTimeObjectToString, Parser.parseDateTime(dateTimeString).toString());","lastModifiedDate":"2021-09-17"},{"lineNumber":217,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":218,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"YeluriKetan":218}},{"path":"src/test/java/poseidon/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package poseidon.task;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"import poseidon.parser.Parser;","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":" * Represents a testing class for {@code Deadline}.","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":" *","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":" * @author Yeluri Ketan","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":" * @version CS2103T AY21/22 Sem 1 iP","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"    public void deadlineConstructor_newDeadline_correctDescAndStatus() {","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"        String description \u003d \"Finish all tasks\";","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"        LocalDateTime deadlineDT \u003d Parser.parseDateTime(\"2021 08 30 2359\");","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"        Deadline deadline \u003d new Deadline(description, deadlineDT);","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(description, deadline.description);","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"        assertFalse(deadline.isDone);","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"    public void deadlineConstructorWithStatus_undoneDeadline_correctDoneStatus() {","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"        String description \u003d \"Finish all tasks\";","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"        LocalDateTime deadlineDT \u003d Parser.parseDateTime(\"2021 08 30 2359\");","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"        Deadline deadline \u003d new Deadline(description, false, deadlineDT);","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"        assertFalse(deadline.isDone);","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"    public void deadlineConstructorWithStatus_doneDeadline_correctDoneStatus() {","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"        String description \u003d \"Finish all tasks\";","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"        LocalDateTime deadlineDT \u003d Parser.parseDateTime(\"2021 08 30 2359\");","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"        Deadline deadline \u003d new Deadline(description, true, deadlineDT);","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"YeluriKetan"},"content":"        assertTrue(deadline.isDone);","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"YeluriKetan"},"content":"    public void setDone_deadlineMarkedDone_correctDoneStatus() {","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"YeluriKetan"},"content":"        String description \u003d \"Finish all tasks\";","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"YeluriKetan"},"content":"        LocalDateTime deadlineDT \u003d Parser.parseDateTime(\"2021 08 30 2359\");","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"YeluriKetan"},"content":"        Deadline deadline \u003d new Deadline(description, deadlineDT);","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"YeluriKetan"},"content":"        deadline.setDone();","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"YeluriKetan"},"content":"        assertTrue(deadline.isDone);","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"YeluriKetan"},"content":"    public void getDateTime_deadlineObject_correctDateTime() {","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"YeluriKetan"},"content":"        String description \u003d \"Finish all tasks\";","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"YeluriKetan"},"content":"        LocalDateTime deadlineDT \u003d Parser.parseDateTime(\"2021 08 30 2359\");","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"YeluriKetan"},"content":"        Deadline deadline1 \u003d new Deadline(description, deadlineDT);","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(deadlineDT, deadline1.getDateTime());","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"YeluriKetan"},"content":"        Deadline deadline2 \u003d new Deadline(description, true, deadlineDT);","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(deadlineDT, deadline2.getDateTime());","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"YeluriKetan"},"content":"        Deadline deadline3 \u003d new Deadline(description, false, deadlineDT);","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(deadlineDT, deadline3.getDateTime());","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"YeluriKetan"},"content":"    public void toString_deadlineObject_stringRep() {","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"YeluriKetan"},"content":"        String description \u003d \"Finish all tasks\";","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"YeluriKetan"},"content":"        LocalDateTime deadlineDT \u003d Parser.parseDateTime(\"2021 08 30 2359\");","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"YeluriKetan"},"content":"        Deadline deadline \u003d new Deadline(description, deadlineDT);","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"YeluriKetan"},"content":"        String expectedToString \u003d \"[D][ ] Finish all tasks (by: \"","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"YeluriKetan"},"content":"                + deadlineDT.format(DateTimeFormatter.ofLocalizedDateTime(FormatStyle.MEDIUM, FormatStyle.SHORT))","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"YeluriKetan"},"content":"                + \")\";","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(expectedToString, deadline.toString());","lastModifiedDate":"2021-09-17"},{"lineNumber":80,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"YeluriKetan"},"content":"    public void toStorage_deadlineObject_storageRep() {","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"YeluriKetan"},"content":"        String description \u003d \"Finish all tasks\";","lastModifiedDate":"2021-09-17"},{"lineNumber":85,"author":{"gitId":"YeluriKetan"},"content":"        LocalDateTime deadlineDT \u003d Parser.parseDateTime(\"2021 08 30 2359\");","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"YeluriKetan"},"content":"        Deadline deadline \u003d new Deadline(description, deadlineDT);","lastModifiedDate":"2021-09-17"},{"lineNumber":87,"author":{"gitId":"YeluriKetan"},"content":"        String expectedToStorageString \u003d \"D%false%Finish all tasks%2021-08-30T23:59\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":88,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(expectedToStorageString, deadline.toStorage());","lastModifiedDate":"2021-09-17"},{"lineNumber":89,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"YeluriKetan":90}},{"path":"src/test/java/poseidon/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package poseidon.task;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"import poseidon.parser.Parser;","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":" * Represents a testing class for {@code Event}.","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":" *","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":" * @author Yeluri Ketan","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":" * @version CS2103T AY21/22 Sem 1 iP","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"public class EventTest {","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"    public void eventConstructor_newEvent_correctDescAndStatus() {","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"        String description \u003d \"Team meeting\";","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"        LocalDateTime fromDt \u003d Parser.parseDateTime(\"2021 08 30 2000\");","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"        LocalDateTime toDt \u003d Parser.parseDateTime(\"2021 08 30 2200\");","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"        Event event \u003d new Event(description, fromDt, toDt);","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(description, event.description);","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"        assertFalse(event.isDone);","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"    public void eventConstructorWithStatus_undoneEvent_correctDoneStatus() {","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"        String description \u003d \"Team meeting\";","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"        LocalDateTime fromDt \u003d Parser.parseDateTime(\"2021 08 30 2000\");","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"        LocalDateTime toDt \u003d Parser.parseDateTime(\"2021 08 30 2200\");","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"        Event event \u003d new Event(description, false, fromDt, toDt);","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"        assertFalse(event.isDone);","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"    public void eventConstructorWithStatus_doneEvent_correctDoneStatus() {","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"        String description \u003d \"Team meeting\";","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"YeluriKetan"},"content":"        LocalDateTime fromDt \u003d Parser.parseDateTime(\"2021 08 30 2000\");","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"YeluriKetan"},"content":"        LocalDateTime toDt \u003d Parser.parseDateTime(\"2021 08 30 2200\");","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"YeluriKetan"},"content":"        Event event \u003d new Event(description, true, fromDt, toDt);","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"YeluriKetan"},"content":"        assertTrue(event.isDone);","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"YeluriKetan"},"content":"    public void setDone_eventMarkedDone_correctDoneStatus() {","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"YeluriKetan"},"content":"        String description \u003d \"Team meeting\";","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"YeluriKetan"},"content":"        LocalDateTime fromDt \u003d Parser.parseDateTime(\"2021 08 30 2000\");","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"YeluriKetan"},"content":"        LocalDateTime toDt \u003d Parser.parseDateTime(\"2021 08 30 2200\");","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"YeluriKetan"},"content":"        Event event \u003d new Event(description, fromDt, toDt);","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"YeluriKetan"},"content":"        event.setDone();","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"YeluriKetan"},"content":"        assertTrue(event.isDone);","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"YeluriKetan"},"content":"    public void getDateTime_eventObject_correctFromDateTime() {","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"YeluriKetan"},"content":"        String description \u003d \"Team meeting\";","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"YeluriKetan"},"content":"        LocalDateTime fromDt \u003d Parser.parseDateTime(\"2021 08 30 2000\");","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"YeluriKetan"},"content":"        LocalDateTime toDt \u003d Parser.parseDateTime(\"2021 08 30 2200\");","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"YeluriKetan"},"content":"        Event event1 \u003d new Event(description, fromDt, toDt);","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(fromDt, event1.getDateTime());","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"YeluriKetan"},"content":"        Event event2 \u003d new Event(description, true, fromDt, toDt);","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(fromDt, event2.getDateTime());","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"YeluriKetan"},"content":"        Event event3 \u003d new Event(description, false, fromDt, toDt);","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(fromDt, event3.getDateTime());","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":75,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"YeluriKetan"},"content":"    public void toString_eventObject_stringRep() {","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"YeluriKetan"},"content":"        String description \u003d \"Team meeting\";","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"YeluriKetan"},"content":"        LocalDateTime fromDt \u003d Parser.parseDateTime(\"2021 08 30 2000\");","lastModifiedDate":"2021-09-17"},{"lineNumber":80,"author":{"gitId":"YeluriKetan"},"content":"        LocalDateTime toDt \u003d Parser.parseDateTime(\"2021 08 30 2200\");","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"YeluriKetan"},"content":"        Event event \u003d new Event(description, fromDt, toDt);","lastModifiedDate":"2021-09-17"},{"lineNumber":82,"author":{"gitId":"YeluriKetan"},"content":"        String expectedToString \u003d \"[E][ ] Team meeting (from: \"","lastModifiedDate":"2021-09-17"},{"lineNumber":83,"author":{"gitId":"YeluriKetan"},"content":"                + fromDt.format(DateTimeFormatter.ofLocalizedDateTime(FormatStyle.MEDIUM, FormatStyle.SHORT))","lastModifiedDate":"2021-09-17"},{"lineNumber":84,"author":{"gitId":"YeluriKetan"},"content":"                + \" to \"","lastModifiedDate":"2021-09-17"},{"lineNumber":85,"author":{"gitId":"YeluriKetan"},"content":"                + toDt.format(DateTimeFormatter.ofLocalizedDateTime(FormatStyle.MEDIUM, FormatStyle.SHORT))","lastModifiedDate":"2021-09-17"},{"lineNumber":86,"author":{"gitId":"YeluriKetan"},"content":"                + \")\";","lastModifiedDate":"2021-09-17"},{"lineNumber":87,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(expectedToString, event.toString());","lastModifiedDate":"2021-09-17"},{"lineNumber":88,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":89,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":90,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-09-17"},{"lineNumber":91,"author":{"gitId":"YeluriKetan"},"content":"    public void toStorage_eventObject_storageRep() {","lastModifiedDate":"2021-09-17"},{"lineNumber":92,"author":{"gitId":"YeluriKetan"},"content":"        String description \u003d \"Team meeting\";","lastModifiedDate":"2021-09-17"},{"lineNumber":93,"author":{"gitId":"YeluriKetan"},"content":"        LocalDateTime fromDt \u003d Parser.parseDateTime(\"2021 08 30 2000\");","lastModifiedDate":"2021-09-17"},{"lineNumber":94,"author":{"gitId":"YeluriKetan"},"content":"        LocalDateTime toDt \u003d Parser.parseDateTime(\"2021 08 30 2200\");","lastModifiedDate":"2021-09-17"},{"lineNumber":95,"author":{"gitId":"YeluriKetan"},"content":"        Event event \u003d new Event(description, fromDt, toDt);","lastModifiedDate":"2021-09-17"},{"lineNumber":96,"author":{"gitId":"YeluriKetan"},"content":"        String expectedToStorageString \u003d \"E%false%Team meeting%2021-08-30T20:00%2021-08-30T22:00\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":97,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(expectedToStorageString, event.toStorage());","lastModifiedDate":"2021-09-17"},{"lineNumber":98,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":99,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"YeluriKetan":99}},{"path":"src/test/java/poseidon/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package poseidon.task;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":" * Represents a testing class for {@code Todo}.","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":" *","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":" * @author Yeluri Ketan","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":" * @version CS2103T AY21/22 Sem 1 iP","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"public class TodoTest {","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"    public void todoConstructor_newTodo_correctDescAndStatus() {","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"        String description \u003d \"Finish all tasks\";","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"        Todo todo \u003d new Todo(description);","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(description, todo.description);","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"        assertFalse(todo.isDone);","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"    public void todoConstructorWithStatus_undoneTodo_correctDoneStatus() {","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"        String description \u003d \"Finish all tasks\";","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"        Todo todo \u003d new Todo(description, false);","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"        assertFalse(todo.isDone);","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"    public void todoConstructorWithStatus_doneTodo_correctDoneStatus() {","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"        String description \u003d \"Finish all tasks\";","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"        Todo todo \u003d new Todo(description, true);","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"        assertTrue(todo.isDone);","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"    public void setDone_todoMarkedDone_correctDoneStatus() {","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"        String description \u003d \"Finish all tasks\";","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"        Todo todo \u003d new Todo(description);","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"YeluriKetan"},"content":"        todo.setDone();","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"YeluriKetan"},"content":"        assertTrue(todo.isDone);","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"YeluriKetan"},"content":"    public void getDateTime_todoObject_correctDateTime() {","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"YeluriKetan"},"content":"        String description \u003d \"Finish all tasks\";","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"YeluriKetan"},"content":"        LocalDateTime todoTime \u003d LocalDateTime.MAX;","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"YeluriKetan"},"content":"        Todo todo1 \u003d new Todo(description);","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(todoTime, todo1.getDateTime());","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"YeluriKetan"},"content":"        Todo todo2 \u003d new Todo(description);","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(todoTime, todo2.getDateTime());","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"YeluriKetan"},"content":"        Todo todo3 \u003d new Todo(description);","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(todoTime, todo3.getDateTime());","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"YeluriKetan"},"content":"    public void toString_todoObject_stringRep() {","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"YeluriKetan"},"content":"        String description \u003d \"Finish all tasks\";","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"YeluriKetan"},"content":"        Todo todo \u003d new Todo(description);","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"YeluriKetan"},"content":"        String expectedToString \u003d \"[T][ ] Finish all tasks\";","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(expectedToString, todo.toString());","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"YeluriKetan"},"content":"    public void toStorage_todoObject_storageRep() {","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"YeluriKetan"},"content":"        String description \u003d \"Finish all tasks\";","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"YeluriKetan"},"content":"        Todo todo \u003d new Todo(description);","lastModifiedDate":"2021-09-17"},{"lineNumber":75,"author":{"gitId":"YeluriKetan"},"content":"        String expectedToStorageString \u003d \"T%false%Finish all tasks\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(expectedToStorageString, todo.toStorage());","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"YeluriKetan":78}},{"path":"src/test/java/poseidon/tasklist/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package poseidon.tasklist;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"import poseidon.task.Task;","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"import poseidon.task.Todo;","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":" * Represents a testing class for {@code TaskList}.","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":" *","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":" * @author Yeluri Ketan","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":" * @version CS2103T AY21/22 Sem 1 iP","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"public class TaskListTest {","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"    public void taskListConstructor_newTaskList_holdEmptyArrayList() {","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(0, taskList.getList().size());","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"    public void taskListConstructor_existingTaskList_holdGivenArrayList() {","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"        ArrayList\u003cTask\u003e arrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"        int size \u003d 5;","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"        for (int i \u003d 0; i \u003c size; i++) {","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"            arrayList.add(new Todo(\"new Todo object\"));","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"        TaskList taskList \u003d new TaskList(arrayList);","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(size, taskList.getList().size());","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"    public void addTask_newTasks_addCorrectTask() {","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"        ArrayList\u003cTask\u003e arrayListInsideTaskList \u003d taskList.getList();","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"        Todo todo \u003d new Todo(\"sample todo object\");","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"        taskList.addTask(todo);","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(todo, arrayListInsideTaskList.get(arrayListInsideTaskList.size() - 1));","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"YeluriKetan":45}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"todo eat dinner","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"TOdo finish laundry","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"todo","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"done 1","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"done 45","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"event meet friends /at 2-4 p.m.","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"EVent watch movie /at 7-10 p.m.","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"event shower /by tonight","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"done 3","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"deadline submit iP /by tonight","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"deadLINE form tP teams /by 13 August","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"deadline return book /at tomorrow","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"done 7","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"YeluriKetan":21}}]
