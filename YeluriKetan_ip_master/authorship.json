[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"YeluriKetan"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"YeluriKetan":15,"-":45}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package duke;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"import javafx.scene.layout.Pane;","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"import javafx.scene.paint.ImagePattern;","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"/**","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":" */","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"public class DialogBox extends VBox {","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"    private static final Font USER_FONT \u003d Font.loadFont(DialogBox.class.getResource(\"/fonts/JetBrainsMono-Italic.ttf\")","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"                    .toExternalForm(),","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"            15);","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"    private static final String USER_BOX_STYLE \u003d \"-fx-background-color: #A3C4BC; -fx-background-radius: 20;\";","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"    private static final String USER_ICON_STYLE \u003d","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"            \"-fx-border-color: #A3C4BC; -fx-border-width: 5; -fx-border-radius: 50;\";","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"    private static final Font BOT_FONT \u003d Font.loadFont(DialogBox.class.getResource(\"/fonts/JetBrainsMono-Regular.ttf\")","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"                    .toExternalForm(),","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"            15);","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"    private static final String BOT_BOX_STYLE \u003d \"-fx-background-color: #E7EFC5; -fx-background-radius: 20;\";","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"    private static final String BOT_ICON_STYLE \u003d","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"            \"-fx-border-color: #E7EFC5; -fx-border-width: 5; -fx-border-radius: 50;\";","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"    @FXML","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"    private Text dialog;","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"    @FXML","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"    private Pane imagePane;","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"    @FXML","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"    private Circle imageCircle;","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"    @FXML","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"YeluriKetan"},"content":"    private HBox textBackgroundBox;","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"YeluriKetan"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"YeluriKetan"},"content":"        try {","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"YeluriKetan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"YeluriKetan"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"YeluriKetan"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-08"},{"lineNumber":52,"author":{"gitId":"YeluriKetan"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-08"},{"lineNumber":53,"author":{"gitId":"YeluriKetan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-08"},{"lineNumber":54,"author":{"gitId":"YeluriKetan"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-08"},{"lineNumber":55,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":56,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":57,"author":{"gitId":"YeluriKetan"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-08"},{"lineNumber":58,"author":{"gitId":"YeluriKetan"},"content":"        imageCircle.setFill(new ImagePattern(img));","lastModifiedDate":"2021-09-08"},{"lineNumber":59,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":60,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":61,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":62,"author":{"gitId":"YeluriKetan"},"content":"     * Modifies the dialog box to set the style and font intended for User dialog boxes.","lastModifiedDate":"2021-09-16"},{"lineNumber":63,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":64,"author":{"gitId":"YeluriKetan"},"content":"    private void modifyForUser() {","lastModifiedDate":"2021-09-16"},{"lineNumber":65,"author":{"gitId":"YeluriKetan"},"content":"        imagePane.setStyle(USER_ICON_STYLE);","lastModifiedDate":"2021-09-16"},{"lineNumber":66,"author":{"gitId":"YeluriKetan"},"content":"        textBackgroundBox.setStyle(USER_BOX_STYLE);","lastModifiedDate":"2021-09-16"},{"lineNumber":67,"author":{"gitId":"YeluriKetan"},"content":"        dialog.setFont(USER_FONT);","lastModifiedDate":"2021-09-16"},{"lineNumber":68,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":69,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":70,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":71,"author":{"gitId":"YeluriKetan"},"content":"     * Modifies the dialog box to set the style and font intended for Bot dialog boxes","lastModifiedDate":"2021-09-16"},{"lineNumber":72,"author":{"gitId":"YeluriKetan"},"content":"     * and flips the contents to the left.","lastModifiedDate":"2021-09-16"},{"lineNumber":73,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":74,"author":{"gitId":"YeluriKetan"},"content":"    private void modifyForBot() {","lastModifiedDate":"2021-09-16"},{"lineNumber":75,"author":{"gitId":"YeluriKetan"},"content":"        imagePane.setStyle(BOT_ICON_STYLE);","lastModifiedDate":"2021-09-16"},{"lineNumber":76,"author":{"gitId":"YeluriKetan"},"content":"        imagePane.setTranslateX(0);","lastModifiedDate":"2021-09-09"},{"lineNumber":77,"author":{"gitId":"YeluriKetan"},"content":"        textBackgroundBox.setStyle(BOT_BOX_STYLE);","lastModifiedDate":"2021-09-16"},{"lineNumber":78,"author":{"gitId":"YeluriKetan"},"content":"        textBackgroundBox.setTranslateX(0);","lastModifiedDate":"2021-09-16"},{"lineNumber":79,"author":{"gitId":"YeluriKetan"},"content":"        dialog.setFont(BOT_FONT);","lastModifiedDate":"2021-09-16"},{"lineNumber":80,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":81,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":82,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":83,"author":{"gitId":"YeluriKetan"},"content":"     * Returns a dialog box representing a User dialog (i.e.) image on right side, user background color and user font.","lastModifiedDate":"2021-09-16"},{"lineNumber":84,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":85,"author":{"gitId":"YeluriKetan"},"content":"     * @param text Text to be shown in the dialog box.","lastModifiedDate":"2021-09-08"},{"lineNumber":86,"author":{"gitId":"YeluriKetan"},"content":"     * @param img Image to be used as profile image.","lastModifiedDate":"2021-09-08"},{"lineNumber":87,"author":{"gitId":"YeluriKetan"},"content":"     * @return Dialog Box with Text and profile image.","lastModifiedDate":"2021-09-08"},{"lineNumber":88,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":89,"author":{"gitId":"YeluriKetan"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-08"},{"lineNumber":90,"author":{"gitId":"YeluriKetan"},"content":"        DialogBox db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-16"},{"lineNumber":91,"author":{"gitId":"YeluriKetan"},"content":"        db.modifyForUser();","lastModifiedDate":"2021-09-16"},{"lineNumber":92,"author":{"gitId":"YeluriKetan"},"content":"        return db;","lastModifiedDate":"2021-09-16"},{"lineNumber":93,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":94,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":95,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":96,"author":{"gitId":"YeluriKetan"},"content":"     * Returns a dialog box representing a Bot dialog (i.e.) image on left side, bot background color and bot font.","lastModifiedDate":"2021-09-16"},{"lineNumber":97,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":98,"author":{"gitId":"YeluriKetan"},"content":"     * @param text Text to be shown in the dialog box.","lastModifiedDate":"2021-09-08"},{"lineNumber":99,"author":{"gitId":"YeluriKetan"},"content":"     * @param img Image to be used as profile image.","lastModifiedDate":"2021-09-08"},{"lineNumber":100,"author":{"gitId":"YeluriKetan"},"content":"     * @return Dialog Box with Text and profile image.","lastModifiedDate":"2021-09-08"},{"lineNumber":101,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":102,"author":{"gitId":"YeluriKetan"},"content":"    public static DialogBox getBotDialog(String text, Image img) {","lastModifiedDate":"2021-09-16"},{"lineNumber":103,"author":{"gitId":"YeluriKetan"},"content":"        DialogBox db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-16"},{"lineNumber":104,"author":{"gitId":"YeluriKetan"},"content":"        db.modifyForBot();","lastModifiedDate":"2021-09-16"},{"lineNumber":105,"author":{"gitId":"YeluriKetan"},"content":"        return db;","lastModifiedDate":"2021-09-08"},{"lineNumber":106,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":107,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"YeluriKetan":107}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"    private static final String NON_EXISTENT_TASK \u003d \"That task doesn\u0027t exist.\\nPlease Try again.\";","lastModifiedDate":"2021-09-09"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"    /** Storage object that reads from and writes onto the hard disk  */","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"    /** TaskList object that maintains and updates the list of tasks */","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"    /** Ui object to be used to interact with the user via the command line interface */","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"     * Constructs a Duke object and initialises the class members.","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"    public Duke() {","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"            storage \u003d new Storage();","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"            taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"        } catch (DukeException ex) {","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"            ui.showStorageError();","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"            storage \u003d null;","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"     * Returns a string representation of a welcome message as prepared by Ui class.","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"     * @return String welcome message.","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"YeluriKetan"},"content":"    public String runWelcome() {","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"YeluriKetan"},"content":"        return ui.getWelcomeMessage();","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"YeluriKetan"},"content":"     * Returns a string representation of the bot\u0027s response to the given new user command.","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":52,"author":{"gitId":"YeluriKetan"},"content":"     * @param newCommand String version of the user input.","lastModifiedDate":"2021-09-08"},{"lineNumber":53,"author":{"gitId":"YeluriKetan"},"content":"     * @return String response.","lastModifiedDate":"2021-09-08"},{"lineNumber":54,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":55,"author":{"gitId":"YeluriKetan"},"content":"    public String run(String newCommand) {","lastModifiedDate":"2021-09-08"},{"lineNumber":56,"author":{"gitId":"YeluriKetan"},"content":"        String errorMessage \u003d \"\";","lastModifiedDate":"2021-09-08"},{"lineNumber":57,"author":{"gitId":"YeluriKetan"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"YeluriKetan"},"content":"            String[] parsedCommand \u003d Parser.parse(newCommand);","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"YeluriKetan"},"content":"            switch (parsedCommand[0]) {","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"YeluriKetan"},"content":"            case \"bye\":","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"YeluriKetan"},"content":"                return ui.showGoodbye();","lastModifiedDate":"2021-09-08"},{"lineNumber":62,"author":{"gitId":"YeluriKetan"},"content":"            case \"list\":","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"YeluriKetan"},"content":"                return ui.getListMessage(taskList.getList());","lastModifiedDate":"2021-09-08"},{"lineNumber":64,"author":{"gitId":"YeluriKetan"},"content":"            case \"add\":","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"YeluriKetan"},"content":"                return addTask(parsedCommand);","lastModifiedDate":"2021-09-08"},{"lineNumber":66,"author":{"gitId":"YeluriKetan"},"content":"            case \"done\":","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"YeluriKetan"},"content":"                return markTaskDone(parsedCommand);","lastModifiedDate":"2021-09-08"},{"lineNumber":68,"author":{"gitId":"YeluriKetan"},"content":"            case \"delete\":","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"YeluriKetan"},"content":"                return deleteTask(parsedCommand);","lastModifiedDate":"2021-09-08"},{"lineNumber":70,"author":{"gitId":"YeluriKetan"},"content":"            case \"find\":","lastModifiedDate":"2021-08-27"},{"lineNumber":71,"author":{"gitId":"YeluriKetan"},"content":"                return ui.showFindList(taskList.findTasks(parsedCommand[1]));","lastModifiedDate":"2021-09-08"},{"lineNumber":72,"author":{"gitId":"YeluriKetan"},"content":"            case \"sort\":","lastModifiedDate":"2021-09-11"},{"lineNumber":73,"author":{"gitId":"YeluriKetan"},"content":"                return ui.getListMessage(taskList.sortTasks());","lastModifiedDate":"2021-09-11"},{"lineNumber":74,"author":{"gitId":"YeluriKetan"},"content":"            case \"fail\":","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"YeluriKetan"},"content":"                return ui.showCommandFail();","lastModifiedDate":"2021-09-08"},{"lineNumber":76,"author":{"gitId":"YeluriKetan"},"content":"            default:","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"YeluriKetan"},"content":"                break;","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"YeluriKetan"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"YeluriKetan"},"content":"        } catch (DukeException | IOException ex) {","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"YeluriKetan"},"content":"            errorMessage \u003d ui.showError(ex.getMessage());","lastModifiedDate":"2021-09-08"},{"lineNumber":81,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"YeluriKetan"},"content":"        assert errorMessage.length() !\u003d 0 : \"Error message supposed to contain readable text\";","lastModifiedDate":"2021-09-09"},{"lineNumber":83,"author":{"gitId":"YeluriKetan"},"content":"        return errorMessage;","lastModifiedDate":"2021-09-08"},{"lineNumber":84,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":86,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":87,"author":{"gitId":"YeluriKetan"},"content":"     * Returns true is the given user input is a \"bye\" command.","lastModifiedDate":"2021-09-08"},{"lineNumber":88,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":89,"author":{"gitId":"YeluriKetan"},"content":"     * @param newCommand String version of the user input.","lastModifiedDate":"2021-09-08"},{"lineNumber":90,"author":{"gitId":"YeluriKetan"},"content":"     * @return Boolean validation result.","lastModifiedDate":"2021-09-08"},{"lineNumber":91,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":92,"author":{"gitId":"YeluriKetan"},"content":"    public boolean isBye(String newCommand) {","lastModifiedDate":"2021-09-08"},{"lineNumber":93,"author":{"gitId":"YeluriKetan"},"content":"        return Parser.isParsedBye(newCommand);","lastModifiedDate":"2021-09-08"},{"lineNumber":94,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"YeluriKetan"},"content":"    private String addTask(String[] parsedCommand) throws IOException {","lastModifiedDate":"2021-09-08"},{"lineNumber":97,"author":{"gitId":"YeluriKetan"},"content":"        Task newTask \u003d null;","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":99,"author":{"gitId":"YeluriKetan"},"content":"        switch (parsedCommand[1]) {","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"YeluriKetan"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"YeluriKetan"},"content":"            newTask \u003d new Todo(parsedCommand[2]);","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"YeluriKetan"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"YeluriKetan"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-26"},{"lineNumber":104,"author":{"gitId":"YeluriKetan"},"content":"            LocalDateTime by \u003d Parser.parseDateTime(parsedCommand[3]);","lastModifiedDate":"2021-08-26"},{"lineNumber":105,"author":{"gitId":"YeluriKetan"},"content":"            newTask \u003d new Deadline(parsedCommand[2], by);","lastModifiedDate":"2021-08-26"},{"lineNumber":106,"author":{"gitId":"YeluriKetan"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":107,"author":{"gitId":"YeluriKetan"},"content":"        case \"event\":","lastModifiedDate":"2021-08-26"},{"lineNumber":108,"author":{"gitId":"YeluriKetan"},"content":"            LocalDateTime from \u003d Parser.parseDateTime(parsedCommand[3]);","lastModifiedDate":"2021-08-26"},{"lineNumber":109,"author":{"gitId":"YeluriKetan"},"content":"            LocalDateTime to \u003d Parser.parseDateTime(parsedCommand[3]);","lastModifiedDate":"2021-08-26"},{"lineNumber":110,"author":{"gitId":"YeluriKetan"},"content":"            newTask \u003d new Event(parsedCommand[2], from, to);","lastModifiedDate":"2021-08-26"},{"lineNumber":111,"author":{"gitId":"YeluriKetan"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":112,"author":{"gitId":"YeluriKetan"},"content":"        default:","lastModifiedDate":"2021-08-26"},{"lineNumber":113,"author":{"gitId":"YeluriKetan"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":114,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":115,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":116,"author":{"gitId":"YeluriKetan"},"content":"        if (newTask \u003d\u003d null) {","lastModifiedDate":"2021-09-09"},{"lineNumber":117,"author":{"gitId":"YeluriKetan"},"content":"            return ui.showCommandFail();","lastModifiedDate":"2021-09-09"},{"lineNumber":118,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":119,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":120,"author":{"gitId":"YeluriKetan"},"content":"        storage.storeAdd(newTask.toStorage());","lastModifiedDate":"2021-08-26"},{"lineNumber":121,"author":{"gitId":"YeluriKetan"},"content":"        String message \u003d taskList.addTask(newTask);","lastModifiedDate":"2021-08-26"},{"lineNumber":122,"author":{"gitId":"YeluriKetan"},"content":"        return ui.showMessage(message);","lastModifiedDate":"2021-09-08"},{"lineNumber":123,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":124,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":125,"author":{"gitId":"YeluriKetan"},"content":"    private String markTaskDone(String[] parsedCommand) throws IOException {","lastModifiedDate":"2021-09-08"},{"lineNumber":126,"author":{"gitId":"YeluriKetan"},"content":"        int taskIndex \u003d Parser.parseIndex(parsedCommand[1]);","lastModifiedDate":"2021-08-26"},{"lineNumber":127,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":128,"author":{"gitId":"YeluriKetan"},"content":"        if (!taskList.isIndexValid(taskIndex)) {","lastModifiedDate":"2021-09-09"},{"lineNumber":129,"author":{"gitId":"YeluriKetan"},"content":"            throw new DukeException(NON_EXISTENT_TASK);","lastModifiedDate":"2021-09-09"},{"lineNumber":130,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":131,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":132,"author":{"gitId":"YeluriKetan"},"content":"        String message \u003d taskList.markTaskDone(taskIndex);","lastModifiedDate":"2021-09-02"},{"lineNumber":133,"author":{"gitId":"YeluriKetan"},"content":"        String taskStorage \u003d taskList.getTaskStorage(taskIndex);","lastModifiedDate":"2021-08-26"},{"lineNumber":134,"author":{"gitId":"YeluriKetan"},"content":"        storage.storeDone(taskIndex, taskStorage);","lastModifiedDate":"2021-08-26"},{"lineNumber":135,"author":{"gitId":"YeluriKetan"},"content":"        return ui.showMessage(message);","lastModifiedDate":"2021-09-08"},{"lineNumber":136,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":137,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":138,"author":{"gitId":"YeluriKetan"},"content":"    private String deleteTask(String[] parsedCommand) throws IOException {","lastModifiedDate":"2021-09-08"},{"lineNumber":139,"author":{"gitId":"YeluriKetan"},"content":"        int taskIndex \u003d Parser.parseIndex(parsedCommand[1]);","lastModifiedDate":"2021-08-26"},{"lineNumber":140,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":141,"author":{"gitId":"YeluriKetan"},"content":"        if (!taskList.isIndexValid(taskIndex)) {","lastModifiedDate":"2021-09-09"},{"lineNumber":142,"author":{"gitId":"YeluriKetan"},"content":"            throw new DukeException(NON_EXISTENT_TASK);","lastModifiedDate":"2021-09-09"},{"lineNumber":143,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":144,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":145,"author":{"gitId":"YeluriKetan"},"content":"        String message \u003d taskList.deleteTask(taskIndex);","lastModifiedDate":"2021-08-26"},{"lineNumber":146,"author":{"gitId":"YeluriKetan"},"content":"        storage.storeDelete(taskIndex);","lastModifiedDate":"2021-08-26"},{"lineNumber":147,"author":{"gitId":"YeluriKetan"},"content":"        return ui.showMessage(message);","lastModifiedDate":"2021-09-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"YeluriKetan":146,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"public class DukeException extends IllegalArgumentException {","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"    protected DukeException(String errorMsg) {","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"        super(errorMsg);","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"YeluriKetan":9}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package duke;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"/**","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":" */","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"public class Launcher {","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"     * @param args Arguments for the launch of the Application.","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"        //assert false : \"Assertions are active\";","lastModifiedDate":"2021-09-09"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"YeluriKetan":17}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package duke;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"/**","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":" */","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"    private static final Image BOT_ICON \u003d new Image(Main.class.getResourceAsStream(\"/images/BotIcon.png\"));","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"        try {","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"            stage.getIcons().add(BOT_ICON);","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"            stage.show();","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"            stage.setResizable(false);","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"YeluriKetan":35}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package duke;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"/**","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":" */","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"    private static final Font USER_FONT \u003d Font.loadFont(DialogBox.class.getResource(\"/fonts/JetBrainsMono-Italic.ttf\")","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"                    .toExternalForm(),","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"            15);","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"    private static final Image USER_IMAGE \u003d new Image(MainWindow.class.getResourceAsStream(\"/images/UserIcon.jpg\"));","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"    private static final Image BOT_IMAGE \u003d new Image(MainWindow.class.getResourceAsStream(\"/images/BotIcon.png\"));","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"    private static final Image SEND_IMAGE \u003d new Image(MainWindow.class.getResourceAsStream(\"/images/SendIcon.png\"));","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"    @FXML","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"    @FXML","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"    @FXML","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"    @FXML","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"    @FXML","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"    private ImageView sendButtonImage;","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"    @FXML","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"YeluriKetan"},"content":"     * @param d Duke to be set as logical unit for the GUI.","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"YeluriKetan"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"YeluriKetan"},"content":"        duke \u003d d;","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"YeluriKetan"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getBotDialog(duke.runWelcome(), BOT_IMAGE));","lastModifiedDate":"2021-09-16"},{"lineNumber":50,"author":{"gitId":"YeluriKetan"},"content":"        sendButtonImage.setImage(SEND_IMAGE);","lastModifiedDate":"2021-09-16"},{"lineNumber":51,"author":{"gitId":"YeluriKetan"},"content":"        userInput.setFont(USER_FONT);","lastModifiedDate":"2021-09-16"},{"lineNumber":52,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":53,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":54,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":55,"author":{"gitId":"YeluriKetan"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-08"},{"lineNumber":56,"author":{"gitId":"YeluriKetan"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-08"},{"lineNumber":57,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":58,"author":{"gitId":"YeluriKetan"},"content":"    @FXML","lastModifiedDate":"2021-09-08"},{"lineNumber":59,"author":{"gitId":"YeluriKetan"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-08"},{"lineNumber":60,"author":{"gitId":"YeluriKetan"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-08"},{"lineNumber":61,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":62,"author":{"gitId":"YeluriKetan"},"content":"        if (duke.isBye(input)) {","lastModifiedDate":"2021-09-08"},{"lineNumber":63,"author":{"gitId":"YeluriKetan"},"content":"            Platform.exit();","lastModifiedDate":"2021-09-08"},{"lineNumber":64,"author":{"gitId":"YeluriKetan"},"content":"            return;","lastModifiedDate":"2021-09-08"},{"lineNumber":65,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":66,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":67,"author":{"gitId":"YeluriKetan"},"content":"        String response \u003d duke.run(input);","lastModifiedDate":"2021-09-08"},{"lineNumber":68,"author":{"gitId":"YeluriKetan"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-08"},{"lineNumber":69,"author":{"gitId":"YeluriKetan"},"content":"                DialogBox.getUserDialog(input, USER_IMAGE),","lastModifiedDate":"2021-09-16"},{"lineNumber":70,"author":{"gitId":"YeluriKetan"},"content":"                DialogBox.getBotDialog(response, BOT_IMAGE)","lastModifiedDate":"2021-09-16"},{"lineNumber":71,"author":{"gitId":"YeluriKetan"},"content":"        );","lastModifiedDate":"2021-09-08"},{"lineNumber":72,"author":{"gitId":"YeluriKetan"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-08"},{"lineNumber":73,"author":{"gitId":"YeluriKetan"},"content":"        assert userInput.getText().length() \u003d\u003d 0 : \"User input in GUI text field is supposed to be cleared\";","lastModifiedDate":"2021-09-09"},{"lineNumber":74,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":75,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"YeluriKetan":75}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"public class Parser {","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"    // Regex versions of all the possible commands","lastModifiedDate":"2021-09-09"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"    private static final String CMD_BYE \u003d \"(?i)bye\\\\s*\";","lastModifiedDate":"2021-09-09"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"    private static final String CMD_LIST \u003d \"(?i)list\\\\s*\";","lastModifiedDate":"2021-09-09"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"    private static final String CMD_DONE \u003d \"(?i)done\\\\s+\\\\d+\\\\s*\";","lastModifiedDate":"2021-09-09"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"    private static final String CMD_DELETE \u003d \"(?i)delete\\\\s+\\\\d+\\\\s*\";","lastModifiedDate":"2021-09-09"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"    private static final String CMD_TODO \u003d \"(?i)todo.*\";","lastModifiedDate":"2021-09-09"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"    private static final String CMD_DEADLINE \u003d \"(?i)deadline.*\";","lastModifiedDate":"2021-09-09"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"    private static final String CMD_EVENT \u003d \"(?i)event.*\";","lastModifiedDate":"2021-09-09"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"    private static final String CMD_FIND \u003d \"(?i)find.*\";","lastModifiedDate":"2021-09-09"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"    private static final String CMD_SORT \u003d \"(?i)sort\\\\s*\";","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"     * Returns a String array that contains the useful and necessary parts of a command to be executed.","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"     * @param newCommand String version of a command.","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"     * @return String array.","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"    public static String[] parse(String newCommand) {","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"        if (Pattern.compile(CMD_BYE).matcher(newCommand).matches()) {","lastModifiedDate":"2021-09-09"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"            return new String[]{\"bye\"};","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"        } else if (Pattern.compile(CMD_LIST).matcher(newCommand).matches()) {","lastModifiedDate":"2021-09-09"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"            return new String[]{\"list\"};","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"        } else if (Pattern.compile(CMD_DONE).matcher(newCommand).matches()) {","lastModifiedDate":"2021-09-09"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"            return new String[]{\"done\", newCommand.substring(4).trim()};","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"        } else if (Pattern.compile(CMD_DELETE).matcher(newCommand).matches()) {","lastModifiedDate":"2021-09-09"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"            return new String[]{\"delete\", newCommand.substring(6).trim()};","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"        } else if (Pattern.compile(CMD_TODO).matcher(newCommand).matches()) {","lastModifiedDate":"2021-09-09"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"            return parseTodo(newCommand);","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"        } else if (Pattern.compile(CMD_DEADLINE).matcher(newCommand).matches()) {","lastModifiedDate":"2021-09-09"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"            return parseDeadline(newCommand);","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"        } else if (Pattern.compile(CMD_EVENT).matcher(newCommand).matches()) {","lastModifiedDate":"2021-09-09"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"            return parseEvent(newCommand);","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"        } else if (Pattern.compile(CMD_FIND).matcher(newCommand).matches()) {","lastModifiedDate":"2021-09-09"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"            return parseFind(newCommand);","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"        } else if (Pattern.compile(CMD_SORT).matcher(newCommand).matches()) {","lastModifiedDate":"2021-09-11"},{"lineNumber":45,"author":{"gitId":"YeluriKetan"},"content":"            return new String[]{\"sort\"};","lastModifiedDate":"2021-09-11"},{"lineNumber":46,"author":{"gitId":"YeluriKetan"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"YeluriKetan"},"content":"            return new String[]{\"fail\"};","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"YeluriKetan"},"content":"     * Returns a LocalDateTime object after parsing a string version of date and time.","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"YeluriKetan"},"content":"     * @param dateTime String version of date and time.","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"YeluriKetan"},"content":"     * @return LocalDateTime object.","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"YeluriKetan"},"content":"    public static LocalDateTime parseDateTime(String dateTime) {","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"YeluriKetan"},"content":"        final String dateFormat \u003d \"yyyy MM dd HHmm\";","lastModifiedDate":"2021-09-09"},{"lineNumber":59,"author":{"gitId":"YeluriKetan"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(dateFormat);","lastModifiedDate":"2021-09-09"},{"lineNumber":60,"author":{"gitId":"YeluriKetan"},"content":"        LocalDateTime deadlineDT;","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"YeluriKetan"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"YeluriKetan"},"content":"            deadlineDT \u003d LocalDateTime.parse(dateTime, formatter);","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"YeluriKetan"},"content":"            return deadlineDT;","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"YeluriKetan"},"content":"        } catch (DateTimeException ex) {","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"YeluriKetan"},"content":"            throw new DukeException(ex.getMessage() + \"\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"YeluriKetan"},"content":"                    + \"Please try again.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":72,"author":{"gitId":"YeluriKetan"},"content":"     * Returns the integer version of a string number.","lastModifiedDate":"2021-08-27"},{"lineNumber":73,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":74,"author":{"gitId":"YeluriKetan"},"content":"     * @param intString String version of a number.","lastModifiedDate":"2021-08-27"},{"lineNumber":75,"author":{"gitId":"YeluriKetan"},"content":"     * @return integer version of the given number.","lastModifiedDate":"2021-08-27"},{"lineNumber":76,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":77,"author":{"gitId":"YeluriKetan"},"content":"    public static int parseIndex(String intString) {","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"YeluriKetan"},"content":"        return Integer.parseInt(intString.trim());","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":82,"author":{"gitId":"YeluriKetan"},"content":"     * Returns true if the given user string input is a valid \"bye\" command by pattern matching.","lastModifiedDate":"2021-09-08"},{"lineNumber":83,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":84,"author":{"gitId":"YeluriKetan"},"content":"     * @param newCommand String user input.","lastModifiedDate":"2021-09-08"},{"lineNumber":85,"author":{"gitId":"YeluriKetan"},"content":"     * @return Boolean validation result.","lastModifiedDate":"2021-09-08"},{"lineNumber":86,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":87,"author":{"gitId":"YeluriKetan"},"content":"    public static boolean isParsedBye(String newCommand) {","lastModifiedDate":"2021-09-08"},{"lineNumber":88,"author":{"gitId":"YeluriKetan"},"content":"        return Pattern.compile(CMD_BYE).matcher(newCommand).matches();","lastModifiedDate":"2021-09-09"},{"lineNumber":89,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":90,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":91,"author":{"gitId":"YeluriKetan"},"content":"    private static String[] parseTodo(String newCommand) {","lastModifiedDate":"2021-09-02"},{"lineNumber":92,"author":{"gitId":"YeluriKetan"},"content":"        final String validTodo \u003d \"(?i)todo\\\\s+\";","lastModifiedDate":"2021-09-09"},{"lineNumber":93,"author":{"gitId":"YeluriKetan"},"content":"        String[] strArr \u003d Pattern.compile(validTodo).split(newCommand, 2);","lastModifiedDate":"2021-09-09"},{"lineNumber":94,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":95,"author":{"gitId":"YeluriKetan"},"content":"        if (strArr.length \u003d\u003d 1 \u0026\u0026 strArr[0].length() \u003e 4) {","lastModifiedDate":"2021-09-09"},{"lineNumber":96,"author":{"gitId":"YeluriKetan"},"content":"            throw new DukeException(\"There appears to be a typo in your TODO command.\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"YeluriKetan"},"content":"                    + \"The command should be of the form:\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"YeluriKetan"},"content":"                    + \"  todo \u0027description\u0027\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":99,"author":{"gitId":"YeluriKetan"},"content":"                    + \"Please try again.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":102,"author":{"gitId":"YeluriKetan"},"content":"        if (strArr.length \u003d\u003d 1 || strArr[1].length() \u003d\u003d 0) {","lastModifiedDate":"2021-09-09"},{"lineNumber":103,"author":{"gitId":"YeluriKetan"},"content":"            throw new DukeException(\"The description of a TODO task cannot be empty.\\nPlease try again.\");","lastModifiedDate":"2021-09-09"},{"lineNumber":104,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":105,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":106,"author":{"gitId":"YeluriKetan"},"content":"        return new String[]{\"add\", \"todo\", strArr[1]};","lastModifiedDate":"2021-09-09"},{"lineNumber":107,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":108,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":109,"author":{"gitId":"YeluriKetan"},"content":"    private static String[] parseDeadline(String newCommand) {","lastModifiedDate":"2021-09-02"},{"lineNumber":110,"author":{"gitId":"YeluriKetan"},"content":"        final String validDeadline \u003d \"(?i)(deadline ).*\\\\S+.*( /by )\\\\d{4}\\\\s\\\\d{2}\\\\s\\\\d{2}\\\\s\\\\d{4}\";","lastModifiedDate":"2021-09-09"},{"lineNumber":111,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":112,"author":{"gitId":"YeluriKetan"},"content":"        if (!Pattern.compile(validDeadline).matcher(newCommand).matches()) {","lastModifiedDate":"2021-09-09"},{"lineNumber":113,"author":{"gitId":"YeluriKetan"},"content":"            throw new DukeException(\"There appears to be a typo in your DEADLINE command.\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":114,"author":{"gitId":"YeluriKetan"},"content":"                    + \"The command should be of the form:\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":115,"author":{"gitId":"YeluriKetan"},"content":"                    + \"  deadline \u0027description\u0027 /by \u0027yyyy mm dd hhmm\u0027\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":116,"author":{"gitId":"YeluriKetan"},"content":"                    + \"Please try again.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":117,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":118,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":119,"author":{"gitId":"YeluriKetan"},"content":"        String[] strArr \u003d newCommand.substring(8).split(\" /by \", 2);","lastModifiedDate":"2021-09-09"},{"lineNumber":120,"author":{"gitId":"YeluriKetan"},"content":"        return new String[]{\"add\", \"deadline\", strArr[0].trim(), strArr[1].trim()};","lastModifiedDate":"2021-09-09"},{"lineNumber":121,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":122,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":123,"author":{"gitId":"YeluriKetan"},"content":"    private static String[] parseEvent(String newCommand) {","lastModifiedDate":"2021-09-02"},{"lineNumber":124,"author":{"gitId":"YeluriKetan"},"content":"        final String validEvent \u003d \"(?i)(event ).*\\\\S+.*( /from )\\\\d{4}\\\\s\\\\d{2}\\\\s\\\\d{2}\\\\s\\\\d{4}\"","lastModifiedDate":"2021-09-09"},{"lineNumber":125,"author":{"gitId":"YeluriKetan"},"content":"                + \"( to )\\\\d{4}\\\\s\\\\d{2}\\\\s\\\\d{2}\\\\s\\\\d{4}\";","lastModifiedDate":"2021-09-09"},{"lineNumber":126,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":127,"author":{"gitId":"YeluriKetan"},"content":"        if (!Pattern.compile(validEvent).matcher(newCommand).matches()) {","lastModifiedDate":"2021-09-09"},{"lineNumber":128,"author":{"gitId":"YeluriKetan"},"content":"            throw new DukeException(\"There appears to be a typo in your EVENT command.\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":129,"author":{"gitId":"YeluriKetan"},"content":"                    + \"The command should be of the form:\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":130,"author":{"gitId":"YeluriKetan"},"content":"                    + \"  event \u0027description\u0027 /from \u0027yyyy mm dd hhmm\u0027 to \u0027yyyy mm dd hhmm\u0027\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":131,"author":{"gitId":"YeluriKetan"},"content":"                    + \"Please try again.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":132,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":133,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":134,"author":{"gitId":"YeluriKetan"},"content":"        String[] strArr \u003d newCommand.substring(5).split(\" /from \", 2);","lastModifiedDate":"2021-09-09"},{"lineNumber":135,"author":{"gitId":"YeluriKetan"},"content":"        String[] dateTimeArr \u003d strArr[1].split(\" to \", 2);","lastModifiedDate":"2021-09-09"},{"lineNumber":136,"author":{"gitId":"YeluriKetan"},"content":"        return new String[]{\"add\", \"event\", strArr[0].trim(), dateTimeArr[0], dateTimeArr[1]};","lastModifiedDate":"2021-09-09"},{"lineNumber":137,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":138,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":139,"author":{"gitId":"YeluriKetan"},"content":"    private static String[] parseFind(String newCommand) {","lastModifiedDate":"2021-08-27"},{"lineNumber":140,"author":{"gitId":"YeluriKetan"},"content":"        final String validFind \u003d \"(?i)find\\\\s+\";","lastModifiedDate":"2021-09-09"},{"lineNumber":141,"author":{"gitId":"YeluriKetan"},"content":"        String[] strArr \u003d Pattern.compile(validFind).split(newCommand, 2);","lastModifiedDate":"2021-09-09"},{"lineNumber":142,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":143,"author":{"gitId":"YeluriKetan"},"content":"        if (strArr.length \u003d\u003d 1 \u0026\u0026 strArr[0].length() \u003e 4) {","lastModifiedDate":"2021-09-09"},{"lineNumber":144,"author":{"gitId":"YeluriKetan"},"content":"            throw new DukeException(\"There appears to be a typo in your FIND command.\\n\"","lastModifiedDate":"2021-08-27"},{"lineNumber":145,"author":{"gitId":"YeluriKetan"},"content":"                    + \"The command should be of the form:\\n\"","lastModifiedDate":"2021-08-27"},{"lineNumber":146,"author":{"gitId":"YeluriKetan"},"content":"                    + \"  find \u0027content\u0027\\n\"","lastModifiedDate":"2021-08-27"},{"lineNumber":147,"author":{"gitId":"YeluriKetan"},"content":"                    + \"Please try again.\");","lastModifiedDate":"2021-08-27"},{"lineNumber":148,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":149,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":150,"author":{"gitId":"YeluriKetan"},"content":"        if (strArr.length \u003d\u003d 1 || strArr[1].length() \u003d\u003d 0) {","lastModifiedDate":"2021-09-09"},{"lineNumber":151,"author":{"gitId":"YeluriKetan"},"content":"            throw new DukeException(\"The contents of a FIND command cannot be empty.\\nPlease try again.\");","lastModifiedDate":"2021-09-09"},{"lineNumber":152,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":153,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":154,"author":{"gitId":"YeluriKetan"},"content":"        return new String[]{\"find\", strArr[1].trim()};","lastModifiedDate":"2021-09-09"},{"lineNumber":155,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":156,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"YeluriKetan":156}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"import java.io.File;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"public class Storage {","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"    private File taskDataFile;","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"     * Constructs a Storage object and initializes the taskDataFile File object.","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"    public Storage() {","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"            File taskDataDir \u003d new File(Paths.get(\"data\").toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"            if (!taskDataDir.exists()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"                taskDataDir.mkdir();","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"            File taskDataFile \u003d new File(Paths.get(\"data\", \"taskData.txt\").toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"            if (!taskDataFile.exists()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"                taskDataFile.createNewFile();","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"            this.taskDataFile \u003d taskDataFile;","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"            throw new DukeException(ex.getMessage() + \"\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"                    + \"Couldn\u0027t access/create necessary file to store tasks.\"","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"                    + \"Please exit the bot if you don\u0027t want to lose new tasks.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"        assert taskDataFile.exists() : \"File for storage is supposed to exist\";","lastModifiedDate":"2021-09-09"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"YeluriKetan"},"content":"     * Returns a list containing all the tasks after reading through a text file saved on the hard disk.","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"YeluriKetan"},"content":"     * @return List containing all the saved tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"YeluriKetan"},"content":"    public ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"YeluriKetan"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"YeluriKetan"},"content":"            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"YeluriKetan"},"content":"            Scanner loadScan \u003d new Scanner(taskDataFile);","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"YeluriKetan"},"content":"            while (loadScan.hasNextLine()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"YeluriKetan"},"content":"                String[] nextLineArr \u003d loadScan.nextLine().split(\"%\");","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"YeluriKetan"},"content":"                switch (nextLineArr[0]) {","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"YeluriKetan"},"content":"                case \"T\":","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"YeluriKetan"},"content":"                    tasks.add(new Todo(nextLineArr[2], Boolean.parseBoolean(nextLineArr[1])));","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"YeluriKetan"},"content":"                    break;","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"YeluriKetan"},"content":"                case \"E\":","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"YeluriKetan"},"content":"                    tasks.add(new Event(nextLineArr[2], Boolean.parseBoolean(nextLineArr[1]),","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"YeluriKetan"},"content":"                            LocalDateTime.parse(nextLineArr[3]), LocalDateTime.parse(nextLineArr[4])));","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"YeluriKetan"},"content":"                    break;","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"YeluriKetan"},"content":"                case \"D\":","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"YeluriKetan"},"content":"                    tasks.add(new Deadline(nextLineArr[2], Boolean.parseBoolean(nextLineArr[1]),","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"YeluriKetan"},"content":"                            LocalDateTime.parse(nextLineArr[3])));","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"YeluriKetan"},"content":"                    break;","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"YeluriKetan"},"content":"                default:","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"YeluriKetan"},"content":"                    break;","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"YeluriKetan"},"content":"                }","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"YeluriKetan"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"YeluriKetan"},"content":"            loadScan.close();","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"YeluriKetan"},"content":"            return tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"YeluriKetan"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"YeluriKetan"},"content":"            throw new DukeException(ex.getMessage() + \"\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"YeluriKetan"},"content":"                    + \"Couldn\u0027t load data from stored file.\"","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"YeluriKetan"},"content":"                    + \"Please exit the bot if you don\u0027t want to lose new tasks.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":81,"author":{"gitId":"YeluriKetan"},"content":"     * Writes a new Task to the storage document of Duke.","lastModifiedDate":"2021-09-02"},{"lineNumber":82,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":83,"author":{"gitId":"YeluriKetan"},"content":"     * @param taskStorage Storage string version of the new Task.","lastModifiedDate":"2021-09-02"},{"lineNumber":84,"author":{"gitId":"YeluriKetan"},"content":"     * @throws IOException If file access or modification is obstructed.","lastModifiedDate":"2021-09-02"},{"lineNumber":85,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":86,"author":{"gitId":"YeluriKetan"},"content":"    public void storeAdd(String taskStorage) throws IOException {","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"YeluriKetan"},"content":"        FileWriter taskDataWriter \u003d new FileWriter(taskDataFile, true);","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"YeluriKetan"},"content":"        taskDataWriter.write(taskStorage);","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"YeluriKetan"},"content":"        taskDataWriter.close();","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":93,"author":{"gitId":"YeluriKetan"},"content":"     * Writes an existing Task as done in the storage document of Duke.","lastModifiedDate":"2021-09-02"},{"lineNumber":94,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":95,"author":{"gitId":"YeluriKetan"},"content":"     * @param index Index of the Task to be modified.","lastModifiedDate":"2021-09-02"},{"lineNumber":96,"author":{"gitId":"YeluriKetan"},"content":"     * @param taskStorage Storage string version of the modified Task.","lastModifiedDate":"2021-09-02"},{"lineNumber":97,"author":{"gitId":"YeluriKetan"},"content":"     * @throws IOException If file access or modification is obstructed.","lastModifiedDate":"2021-09-02"},{"lineNumber":98,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":99,"author":{"gitId":"YeluriKetan"},"content":"    public void storeDone(int index, String taskStorage) throws IOException {","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"YeluriKetan"},"content":"        BufferedReader taskDataReader \u003d new BufferedReader(new FileReader(taskDataFile));","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"YeluriKetan"},"content":"        StringBuilder newTaskData \u003d new StringBuilder();","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":103,"author":{"gitId":"YeluriKetan"},"content":"        for (int i \u003d 0; i \u003c index - 1; i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":104,"author":{"gitId":"YeluriKetan"},"content":"            newTaskData.append(taskDataReader.readLine() + \"\\n\");","lastModifiedDate":"2021-08-26"},{"lineNumber":105,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":106,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":107,"author":{"gitId":"YeluriKetan"},"content":"        taskDataReader.readLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":108,"author":{"gitId":"YeluriKetan"},"content":"        newTaskData.append(taskStorage);","lastModifiedDate":"2021-08-26"},{"lineNumber":109,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":110,"author":{"gitId":"YeluriKetan"},"content":"        while (true) {","lastModifiedDate":"2021-08-26"},{"lineNumber":111,"author":{"gitId":"YeluriKetan"},"content":"            String nextLine \u003d taskDataReader.readLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":112,"author":{"gitId":"YeluriKetan"},"content":"            if (nextLine \u003d\u003d null) {","lastModifiedDate":"2021-08-26"},{"lineNumber":113,"author":{"gitId":"YeluriKetan"},"content":"                break;","lastModifiedDate":"2021-08-26"},{"lineNumber":114,"author":{"gitId":"YeluriKetan"},"content":"            } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":115,"author":{"gitId":"YeluriKetan"},"content":"                newTaskData.append(nextLine + \"\\n\");","lastModifiedDate":"2021-08-26"},{"lineNumber":116,"author":{"gitId":"YeluriKetan"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":117,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":118,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":119,"author":{"gitId":"YeluriKetan"},"content":"        FileWriter taskDataWriter \u003d new FileWriter(taskDataFile);","lastModifiedDate":"2021-08-26"},{"lineNumber":120,"author":{"gitId":"YeluriKetan"},"content":"        taskDataWriter.write(newTaskData.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":121,"author":{"gitId":"YeluriKetan"},"content":"        taskDataWriter.close();","lastModifiedDate":"2021-08-26"},{"lineNumber":122,"author":{"gitId":"YeluriKetan"},"content":"        taskDataReader.close();","lastModifiedDate":"2021-08-26"},{"lineNumber":123,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":124,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":125,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":126,"author":{"gitId":"YeluriKetan"},"content":"     * Deletes a Task from the storage document of Duke.","lastModifiedDate":"2021-09-02"},{"lineNumber":127,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":128,"author":{"gitId":"YeluriKetan"},"content":"     * @param index Index of the deleted Task.","lastModifiedDate":"2021-09-02"},{"lineNumber":129,"author":{"gitId":"YeluriKetan"},"content":"     * @throws IOException If file access or modification is obstructed.","lastModifiedDate":"2021-09-02"},{"lineNumber":130,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":131,"author":{"gitId":"YeluriKetan"},"content":"    public void storeDelete(int index) throws IOException {","lastModifiedDate":"2021-08-26"},{"lineNumber":132,"author":{"gitId":"YeluriKetan"},"content":"        BufferedReader taskDataReader \u003d new BufferedReader(new FileReader(taskDataFile));","lastModifiedDate":"2021-08-26"},{"lineNumber":133,"author":{"gitId":"YeluriKetan"},"content":"        StringBuilder newTaskData \u003d new StringBuilder();","lastModifiedDate":"2021-08-26"},{"lineNumber":134,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":135,"author":{"gitId":"YeluriKetan"},"content":"        for (int i \u003d 0; i \u003c index - 1; i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":136,"author":{"gitId":"YeluriKetan"},"content":"            newTaskData.append(taskDataReader.readLine() + \"\\n\");","lastModifiedDate":"2021-08-26"},{"lineNumber":137,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":138,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":139,"author":{"gitId":"YeluriKetan"},"content":"        taskDataReader.readLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":140,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":141,"author":{"gitId":"YeluriKetan"},"content":"        while (true) {","lastModifiedDate":"2021-08-26"},{"lineNumber":142,"author":{"gitId":"YeluriKetan"},"content":"            String nextLine \u003d taskDataReader.readLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":143,"author":{"gitId":"YeluriKetan"},"content":"            if (nextLine \u003d\u003d null) {","lastModifiedDate":"2021-08-26"},{"lineNumber":144,"author":{"gitId":"YeluriKetan"},"content":"                break;","lastModifiedDate":"2021-08-26"},{"lineNumber":145,"author":{"gitId":"YeluriKetan"},"content":"            } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":146,"author":{"gitId":"YeluriKetan"},"content":"                newTaskData.append(nextLine + \"\\n\");","lastModifiedDate":"2021-08-26"},{"lineNumber":147,"author":{"gitId":"YeluriKetan"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":148,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":149,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":150,"author":{"gitId":"YeluriKetan"},"content":"        FileWriter taskDataWriter \u003d new FileWriter(taskDataFile);","lastModifiedDate":"2021-08-26"},{"lineNumber":151,"author":{"gitId":"YeluriKetan"},"content":"        taskDataWriter.write(newTaskData.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":152,"author":{"gitId":"YeluriKetan"},"content":"        taskDataWriter.close();","lastModifiedDate":"2021-08-26"},{"lineNumber":153,"author":{"gitId":"YeluriKetan"},"content":"        taskDataReader.close();","lastModifiedDate":"2021-08-26"},{"lineNumber":154,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":155,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"YeluriKetan":155}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"public class TaskList {","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"     * Constructs a new TaskList object by initializing a new ArrayList for runtime storage.","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"     * Constructs a new TaskList object by storing the given ArrayList for runtime storage.","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"     * @param tasks ArrayList to be used runtime storage.","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"     * Returns a string message indicating success after adding a task to the list of tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"     * @param newTask New task to be added.","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"     * @return String success message.","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"    public String addTask(Task newTask) {","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"        tasks.add(newTask);","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"        return \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"                + \"  \" + newTask + \"\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"                + countTasks();","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"     * Returns a string message indicating success after marking a task done in the list of tasks.","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"     * @param taskIndex Index of the Task.","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"     * @return String success message.","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"YeluriKetan"},"content":"    public String markTaskDone(int taskIndex) {","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"YeluriKetan"},"content":"        Task currTask \u003d tasks.get(taskIndex - 1);","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"YeluriKetan"},"content":"        currTask.setDone();","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"YeluriKetan"},"content":"        assert currTask.toString().charAt(5) \u003d\u003d \u0027X\u0027 : \"Task is supposed to be marked done\";","lastModifiedDate":"2021-09-09"},{"lineNumber":50,"author":{"gitId":"YeluriKetan"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"YeluriKetan"},"content":"                + \"  \" + taskIndex + \". \" + currTask;","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"YeluriKetan"},"content":"     * Returns a string message indicating success after deleting a task from the list of tasks.","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"YeluriKetan"},"content":"     * @param taskIndex Index of the Task.","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"YeluriKetan"},"content":"     * @return String success message.","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"YeluriKetan"},"content":"    public String deleteTask(int taskIndex) {","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"YeluriKetan"},"content":"        Task currTask \u003d tasks.get(taskIndex - 1);","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"YeluriKetan"},"content":"        tasks.remove(taskIndex - 1);","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"YeluriKetan"},"content":"        assert !tasks.contains(currTask) : \"Removed task is not supposed to be in the TaskList\";","lastModifiedDate":"2021-09-09"},{"lineNumber":64,"author":{"gitId":"YeluriKetan"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"YeluriKetan"},"content":"                + \"  \" + taskIndex + \". \" + currTask + \"\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"YeluriKetan"},"content":"                + countTasks();","lastModifiedDate":"2021-09-02"},{"lineNumber":67,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":70,"author":{"gitId":"YeluriKetan"},"content":"     * Returns the ArrayList of tasks maintained by this TaskList object.","lastModifiedDate":"2021-09-02"},{"lineNumber":71,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":72,"author":{"gitId":"YeluriKetan"},"content":"     * @return ArrayList of Task objects.","lastModifiedDate":"2021-09-02"},{"lineNumber":73,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":74,"author":{"gitId":"YeluriKetan"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"YeluriKetan"},"content":"        return tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":79,"author":{"gitId":"YeluriKetan"},"content":"     * Returns the string representation of a Task (based on the Index) to be used for storage.","lastModifiedDate":"2021-09-02"},{"lineNumber":80,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":81,"author":{"gitId":"YeluriKetan"},"content":"     * @param taskIndex Index of the Task.","lastModifiedDate":"2021-09-02"},{"lineNumber":82,"author":{"gitId":"YeluriKetan"},"content":"     * @return String for storage.","lastModifiedDate":"2021-09-02"},{"lineNumber":83,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":84,"author":{"gitId":"YeluriKetan"},"content":"    public String getTaskStorage(int taskIndex) {","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"YeluriKetan"},"content":"        return tasks.get(taskIndex - 1).toStorage();","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":89,"author":{"gitId":"YeluriKetan"},"content":"     * Returns a boolean indicating the validity of the Task\u0027s Index.","lastModifiedDate":"2021-09-02"},{"lineNumber":90,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":91,"author":{"gitId":"YeluriKetan"},"content":"     * @param taskIndex Index of the Task.","lastModifiedDate":"2021-09-02"},{"lineNumber":92,"author":{"gitId":"YeluriKetan"},"content":"     * @return Validity of the Index.","lastModifiedDate":"2021-09-02"},{"lineNumber":93,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":94,"author":{"gitId":"YeluriKetan"},"content":"    public boolean isIndexValid(int taskIndex) {","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"YeluriKetan"},"content":"        return ((taskIndex - 1) \u003c tasks.size() \u0026\u0026 (taskIndex - 1) \u003e -1);","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":99,"author":{"gitId":"YeluriKetan"},"content":"     * Returns an ArrayList containing all the tasks that have the content in their description.","lastModifiedDate":"2021-09-02"},{"lineNumber":100,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":101,"author":{"gitId":"YeluriKetan"},"content":"     * @param content Content to be searched for.","lastModifiedDate":"2021-09-02"},{"lineNumber":102,"author":{"gitId":"YeluriKetan"},"content":"     * @return ArrayList of Task objects.","lastModifiedDate":"2021-09-02"},{"lineNumber":103,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":104,"author":{"gitId":"YeluriKetan"},"content":"    public ArrayList\u003cTask\u003e findTasks(String content) {","lastModifiedDate":"2021-08-27"},{"lineNumber":105,"author":{"gitId":"YeluriKetan"},"content":"        ArrayList\u003cTask\u003e filteredList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-10"},{"lineNumber":106,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":107,"author":{"gitId":"YeluriKetan"},"content":"        tasks.stream()","lastModifiedDate":"2021-09-10"},{"lineNumber":108,"author":{"gitId":"YeluriKetan"},"content":"                .filter((currTask) -\u003e currTask.hasContent(content))","lastModifiedDate":"2021-09-10"},{"lineNumber":109,"author":{"gitId":"YeluriKetan"},"content":"                .forEach(filteredList::add);","lastModifiedDate":"2021-09-10"},{"lineNumber":110,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":111,"author":{"gitId":"YeluriKetan"},"content":"        return filteredList;","lastModifiedDate":"2021-09-10"},{"lineNumber":112,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":113,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":114,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":115,"author":{"gitId":"YeluriKetan"},"content":"     * Returns an ArrayList of tasks maintained by this TaskList object sorted by time.","lastModifiedDate":"2021-09-11"},{"lineNumber":116,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":117,"author":{"gitId":"YeluriKetan"},"content":"     * @return ArrayList of Task objects.","lastModifiedDate":"2021-09-11"},{"lineNumber":118,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":119,"author":{"gitId":"YeluriKetan"},"content":"    public ArrayList\u003cTask\u003e sortTasks() {","lastModifiedDate":"2021-09-11"},{"lineNumber":120,"author":{"gitId":"YeluriKetan"},"content":"        ArrayList\u003cTask\u003e sortedList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-11"},{"lineNumber":121,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":122,"author":{"gitId":"YeluriKetan"},"content":"        tasks.stream()","lastModifiedDate":"2021-09-11"},{"lineNumber":123,"author":{"gitId":"YeluriKetan"},"content":"                .sorted()","lastModifiedDate":"2021-09-11"},{"lineNumber":124,"author":{"gitId":"YeluriKetan"},"content":"                .forEach(sortedList::add);","lastModifiedDate":"2021-09-11"},{"lineNumber":125,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":126,"author":{"gitId":"YeluriKetan"},"content":"        return sortedList;","lastModifiedDate":"2021-09-11"},{"lineNumber":127,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":128,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":129,"author":{"gitId":"YeluriKetan"},"content":"    private String countTasks() {","lastModifiedDate":"2021-09-02"},{"lineNumber":130,"author":{"gitId":"YeluriKetan"},"content":"        if (tasks.size() \u003e 0) {","lastModifiedDate":"2021-08-26"},{"lineNumber":131,"author":{"gitId":"YeluriKetan"},"content":"            return \"Now you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2021-08-26"},{"lineNumber":132,"author":{"gitId":"YeluriKetan"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":133,"author":{"gitId":"YeluriKetan"},"content":"            return \"There are no tasks in your list.\";","lastModifiedDate":"2021-08-26"},{"lineNumber":134,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":135,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":136,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"YeluriKetan":136}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"public class Ui {","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"     * Constructs a Ui object.","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"    public Ui() {","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"     * Returns a human-readable string that conveys a welcome message from the bot to the user.","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"     * @return String welcome message.","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"    public String getWelcomeMessage() {","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"        String helloMsg \u003d \"Hello! I\u0027m Duke\\n\"","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"                + \"What can I do for you?\";","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"        return logo + helloMsg;","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"     * Returns a human-readable string representation of a list.","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"     * @param tasks List of tasks to be converted to string.","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"     * @return String list representation.","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"    public String getListMessage(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"        StringBuilder message \u003d new StringBuilder();","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"        if (tasks.size() \u003e 0) {","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"            message.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"                message.append(\"  \" + (i + 1) + \". \" + tasks.get(i) + \"\\n\");","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"YeluriKetan"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"YeluriKetan"},"content":"            message.append(\"There are no tasks in your list.\");","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"YeluriKetan"},"content":"        return message.toString();","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"YeluriKetan"},"content":"     * Returns a human-readable string representation of a list resulting from a find operation.","lastModifiedDate":"2021-09-08"},{"lineNumber":53,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"YeluriKetan"},"content":"     * @param tasks List of tasks to be converted to string.","lastModifiedDate":"2021-09-08"},{"lineNumber":55,"author":{"gitId":"YeluriKetan"},"content":"     * @return String list representation with added \"find\" message.","lastModifiedDate":"2021-09-08"},{"lineNumber":56,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"YeluriKetan"},"content":"    public String showFindList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-08"},{"lineNumber":58,"author":{"gitId":"YeluriKetan"},"content":"        StringBuilder message \u003d new StringBuilder();","lastModifiedDate":"2021-09-08"},{"lineNumber":59,"author":{"gitId":"YeluriKetan"},"content":"        if (tasks.size() \u003e 0) {","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"YeluriKetan"},"content":"            message.append(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2021-09-08"},{"lineNumber":61,"author":{"gitId":"YeluriKetan"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"YeluriKetan"},"content":"                message.append(\"  \" + (i + 1) + \". \" + tasks.get(i) + \"\\n\");","lastModifiedDate":"2021-09-08"},{"lineNumber":63,"author":{"gitId":"YeluriKetan"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":64,"author":{"gitId":"YeluriKetan"},"content":"        } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":65,"author":{"gitId":"YeluriKetan"},"content":"            message.append(\"There are no matching tasks in your list.\");","lastModifiedDate":"2021-09-08"},{"lineNumber":66,"author":{"gitId":"YeluriKetan"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":67,"author":{"gitId":"YeluriKetan"},"content":"        return message.toString();","lastModifiedDate":"2021-09-08"},{"lineNumber":68,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":69,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":70,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":71,"author":{"gitId":"YeluriKetan"},"content":"     * Returns a human-readable string that conveys that an unknown/non-existent command has been encountered.","lastModifiedDate":"2021-09-08"},{"lineNumber":72,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":73,"author":{"gitId":"YeluriKetan"},"content":"     * @return String error message.","lastModifiedDate":"2021-09-08"},{"lineNumber":74,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":75,"author":{"gitId":"YeluriKetan"},"content":"    public String showCommandFail() {","lastModifiedDate":"2021-09-08"},{"lineNumber":76,"author":{"gitId":"YeluriKetan"},"content":"        return \"I didn\u0027t get that. Please try again.\";","lastModifiedDate":"2021-09-08"},{"lineNumber":77,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":80,"author":{"gitId":"YeluriKetan"},"content":"     * Returns a human-readable string that conveys that the given error message.","lastModifiedDate":"2021-09-08"},{"lineNumber":81,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":82,"author":{"gitId":"YeluriKetan"},"content":"     * @param message Error message to be shown.","lastModifiedDate":"2021-09-08"},{"lineNumber":83,"author":{"gitId":"YeluriKetan"},"content":"     * @return String error message.","lastModifiedDate":"2021-09-08"},{"lineNumber":84,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":85,"author":{"gitId":"YeluriKetan"},"content":"    public String showError(String message) {","lastModifiedDate":"2021-09-08"},{"lineNumber":86,"author":{"gitId":"YeluriKetan"},"content":"        return \"Oops... Something\u0027s wrong.\\n\" + message;","lastModifiedDate":"2021-09-08"},{"lineNumber":87,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":90,"author":{"gitId":"YeluriKetan"},"content":"     * Returns a string that conveys the given message.","lastModifiedDate":"2021-09-08"},{"lineNumber":91,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":92,"author":{"gitId":"YeluriKetan"},"content":"     * @param message Message to be shown.","lastModifiedDate":"2021-09-08"},{"lineNumber":93,"author":{"gitId":"YeluriKetan"},"content":"     * @return String message.","lastModifiedDate":"2021-09-08"},{"lineNumber":94,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":95,"author":{"gitId":"YeluriKetan"},"content":"    public String showMessage(String message) {","lastModifiedDate":"2021-09-08"},{"lineNumber":96,"author":{"gitId":"YeluriKetan"},"content":"        return message;","lastModifiedDate":"2021-09-08"},{"lineNumber":97,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":99,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":100,"author":{"gitId":"YeluriKetan"},"content":"     * Returns a string that conveys that a storage error has been encountered.","lastModifiedDate":"2021-09-08"},{"lineNumber":101,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":102,"author":{"gitId":"YeluriKetan"},"content":"     * @return String error message.","lastModifiedDate":"2021-09-08"},{"lineNumber":103,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":104,"author":{"gitId":"YeluriKetan"},"content":"    public String showStorageError() {","lastModifiedDate":"2021-09-08"},{"lineNumber":105,"author":{"gitId":"YeluriKetan"},"content":"        return showError(\"File for storage of tasks could not be accessed or written.\");","lastModifiedDate":"2021-09-08"},{"lineNumber":106,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":107,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":108,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":109,"author":{"gitId":"YeluriKetan"},"content":"     * Returns a string that conveys a goodbye message from the bot to the user.","lastModifiedDate":"2021-09-08"},{"lineNumber":110,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":111,"author":{"gitId":"YeluriKetan"},"content":"     * @return String goodbye message.","lastModifiedDate":"2021-09-08"},{"lineNumber":112,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":113,"author":{"gitId":"YeluriKetan"},"content":"    public String showGoodbye() {","lastModifiedDate":"2021-09-08"},{"lineNumber":114,"author":{"gitId":"YeluriKetan"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-09-08"},{"lineNumber":115,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":116,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"YeluriKetan":116}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"    private LocalDateTime byDateTime;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"     * Constructs a new Deadline using the given description, done status and by time.","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"     * @param description Description of the new Deadline.","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"     * @param byDateTime By time of the new Deadline.","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"    public Deadline(String description, LocalDateTime byDateTime) {","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"        this.byDateTime \u003d byDateTime;","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"     * Constructs a new Deadline using the given description, done status and by time.","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"     * @param description Description of the new Deadline.","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"     * @param isDone Done status of the new Deadline.","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"     * @param byDateTime By time of the new Deadline.","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"    public Deadline(String description, boolean isDone, LocalDateTime byDateTime) {","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"        super(description);","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"        this.byDateTime \u003d byDateTime;","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"        return \"[D]\" + (isDone ? \"[X] \" : \"[ ] \") + description + \" (by: \"","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"                + byDateTime.format(DateTimeFormatter.ofLocalizedDateTime(FormatStyle.MEDIUM, FormatStyle.SHORT))","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"                + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"    public String toStorage() {","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"        return (\"D%\" + isDone + \"%\" + description + \"%\" + byDateTime + \"\\n\");","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":47,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":48,"author":{"gitId":"YeluriKetan"},"content":"    protected LocalDateTime getDateTime() {","lastModifiedDate":"2021-09-11"},{"lineNumber":49,"author":{"gitId":"YeluriKetan"},"content":"        return byDateTime;","lastModifiedDate":"2021-09-11"},{"lineNumber":50,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":51,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"YeluriKetan":51}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"    private LocalDateTime fromDateTime;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"    private LocalDateTime toDateTime;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"     * Constructs a new Event using the given description, from time and to time.","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"     * @param description Description of the Event.","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"     * @param fromDateTime From time of the Event.","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"     * @param toDateTime To time of the Event.","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"    public Event(String description, LocalDateTime fromDateTime, LocalDateTime toDateTime) {","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"        this.fromDateTime \u003d fromDateTime;","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"        this.toDateTime \u003d toDateTime;","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"     * Constructs a new Event using the given description, done status, from time and to time.","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"     * @param description Description of the new Event.","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"     * @param isDone Done status of the new Event.","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"     * @param fromDateTime From time of the new Event.","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"     * @param toDateTime To time of the new Event.","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"    public Event(String description, boolean isDone, LocalDateTime fromDateTime, LocalDateTime toDateTime) {","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"        super(description);","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"        this.fromDateTime \u003d fromDateTime;","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"        this.toDateTime \u003d toDateTime;","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"        return \"[E]\" + (isDone ? \"[X] \" : \"[ ] \") + description","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"                + \" (from: \"","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"                + fromDateTime.format(DateTimeFormatter.ofLocalizedDateTime(FormatStyle.MEDIUM, FormatStyle.SHORT))","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"YeluriKetan"},"content":"                + \" to \"","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"YeluriKetan"},"content":"                + toDateTime.format(DateTimeFormatter.ofLocalizedDateTime(FormatStyle.MEDIUM, FormatStyle.SHORT))","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"YeluriKetan"},"content":"                + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"YeluriKetan"},"content":"    public String toStorage() {","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"YeluriKetan"},"content":"        return (\"E%\" + isDone + \"%\" + description + \"%\" + fromDateTime + \"%\" + toDateTime + \"\\n\");","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":55,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":56,"author":{"gitId":"YeluriKetan"},"content":"    protected LocalDateTime getDateTime() {","lastModifiedDate":"2021-09-11"},{"lineNumber":57,"author":{"gitId":"YeluriKetan"},"content":"        return fromDateTime;","lastModifiedDate":"2021-09-11"},{"lineNumber":58,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":59,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"YeluriKetan":59}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"public abstract class Task implements Comparable\u003cTask\u003e {","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"    protected String description;","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"     * Constructs a new Task object with the given description.","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"     * @param description Description of the new Task.","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"     * Marks the status of this Task as done.","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"    public void setDone() {","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"     * Return a boolean to convey the presence of the given content in the description of the current Task object.","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"     * @param content Content whose presence is to be checked for.","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"     * @return Boolean to show presence.","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"    public boolean hasContent(String content) {","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"        return description.contains(content);","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"     * Returns a human-readable string representation of the Task to be used for printing/showing to the user.","lastModifiedDate":"2021-09-11"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"     * @return String to be used for printing.","lastModifiedDate":"2021-09-11"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"    public abstract String toString();","lastModifiedDate":"2021-09-11"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"YeluriKetan"},"content":"     * Returns the string representation of the Task to be used for the purpose of storage on the hard-disk.","lastModifiedDate":"2021-09-11"},{"lineNumber":46,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"YeluriKetan"},"content":"     * @return String to be used for storage.","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"YeluriKetan"},"content":"    public abstract String toStorage();","lastModifiedDate":"2021-09-11"},{"lineNumber":50,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    //@@author YeluriKetan-reused","lastModifiedDate":"2021-09-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    //Reused from https://github.com/SkyBlaise99/ip/blob/master/src/main/java/sora/task/Task.java","lastModifiedDate":"2021-09-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    // with minor modifications.","lastModifiedDate":"2021-09-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    // Original author SkyBlaise99 - https://github.com/SkyBlaise99","lastModifiedDate":"2021-09-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    protected abstract LocalDateTime getDateTime();","lastModifiedDate":"2021-09-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public int compareTo(Task otherTask) {","lastModifiedDate":"2021-09-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return this.getDateTime().compareTo(otherTask.getDateTime());","lastModifiedDate":"2021-09-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    //@@author","lastModifiedDate":"2021-09-11"},{"lineNumber":62,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"YeluriKetan":51,"-":11}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"     * Constructs a new Todo object with the given description.","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"     * @param description Description of the Todo object.","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"     * Constructs a new Todo object with the given description and done status.","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"     * @param description Description of the Todo object.","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"     * @param isDone Done status of the Todo object.","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"        super(description);","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"        return \"[T]\" + (isDone ? \"[X] \" : \"[ ] \") + description;","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"    public String toStorage() {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"        return \"T%\" + isDone + \"%\" + description + \"\\n\";","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"    protected LocalDateTime getDateTime() {","lastModifiedDate":"2021-09-11"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"        return LocalDateTime.MAX;","lastModifiedDate":"2021-09-11"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"YeluriKetan":41}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"\u003c?import javafx.scene.layout.Pane?\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"\u003cfx:root maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefWidth\u003d\"485.0\" type\u003d\"VBox\"","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"         xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"      \u003cPane fx:id\u003d\"imagePane\" maxHeight\u003d\"60.0\" maxWidth\u003d\"60.0\" minHeight\u003d\"60.0\" minWidth\u003d\"60.0\" prefHeight\u003d\"60.0\"","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"            prefWidth\u003d\"60.0\" snapToPixel\u003d\"false\" translateX\u003d\"405.0\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"            \u003cCircle fx:id\u003d\"imageCircle\" layoutX\u003d\"30.0\" layoutY\u003d\"30.0\" radius\u003d\"25.0\" stroke\u003d\"TRANSPARENT\"","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"                    strokeType\u003d\"INSIDE\" /\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"         \u003c/children\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"         \u003cVBox.margin\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"         \u003c/VBox.margin\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"      \u003c/Pane\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"      \u003cjavafx.scene.layout.HBox fx:id\u003d\"textBackgroundBox\" alignment\u003d\"TOP_RIGHT\"","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"                                maxWidth\u003d\"400.0\" prefHeight\u003d\"40.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"                                style\u003d\"-fx-background-radius: 20; -fx-background-color: gray;\" translateX\u003d\"65.0\"\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"              \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"         \u003cVBox.margin\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"         \u003c/VBox.margin\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"            \u003cText fx:id\u003d\"dialog\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Sample Text\" wrappingWidth\u003d\"380.0\"\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"               \u003cHBox.margin\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"                  \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"               \u003c/HBox.margin\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"               \u003cfont\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"                  \u003cFont name\u003d\"Roboto Medium\" size\u003d\"16.0\" /\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"               \u003c/font\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"            \u003c/Text\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"         \u003c/children\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"      \u003c/javafx.scene.layout.HBox\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"   \u003c/children\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"YeluriKetan"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"YeluriKetan":45}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"\u003c?import javafx.geometry.Rectangle2D?\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"700.0\"","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"            prefWidth\u003d\"500.0\" style\u003d\"-fx-background-color: #413c58;\" xmlns\u003d\"http://javafx.com/javafx/11\"","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutX\u003d\"5.0\" layoutY\u003d\"650.0\" maxHeight\u003d\"-Infinity\"","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"                   maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"                   prefHeight\u003d\"50.0\" prefWidth\u003d\"440.0\" style\u003d\"-fx-background-color: A3C4BC;\"","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.6000000000000227\" /\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"        \u003cButton fx:id\u003d\"sendButton\" contentDisplay\u003d\"CENTER\" layoutX\u003d\"448.0\" layoutY\u003d\"647.0\" maxHeight\u003d\"-Infinity\"","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"                maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" mnemonicParsing\u003d\"false\"","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"                onAction\u003d\"#handleUserInput\" prefHeight\u003d\"50.0\" prefWidth\u003d\"50.0\"","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"                style\u003d\"-fx-background-color: E7EFC5; -fx-background-radius: 5;\" textAlignment\u003d\"CENTER\"","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"                textFill\u003d\"#000000ce\"\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"         \u003cfont\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"            \u003cFont name\u003d\"Segoe UI Bold Italic\" size\u003d\"16.0\" /\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"         \u003c/font\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"         \u003cgraphic\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"            \u003cImageView fx:id\u003d\"sendButtonImage\" fitHeight\u003d\"32.0\" fitWidth\u003d\"32.0\" pickOnBounds\u003d\"true\"","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"                       preserveRatio\u003d\"true\" translateX\u003d\"-1.0\" translateY\u003d\"2.0\"\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"               \u003cviewport\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"                  \u003cRectangle2D /\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"               \u003c/viewport\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"            \u003c/ImageView\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"         \u003c/graphic\u003e\u003c/Button\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\"","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"                    minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"644.0\" prefWidth\u003d\"500.0\"","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"                    style\u003d\"-fx-background-color: transparent;\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"YeluriKetan"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"YeluriKetan"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"644.0\" prefWidth\u003d\"486.0\"","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"YeluriKetan"},"content":"                      style\u003d\"-fx-background-color: #413c58;\" translateY\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"YeluriKetan"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"YeluriKetan"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"YeluriKetan"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"YeluriKetan"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"YeluriKetan":45}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"    public void parse_todoCommand_stringArray() {","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"        String todoCommand \u003d \"todo finish all week 3 iP tasks\";","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"        String[] todoCommandArray \u003d new String[]{\"add\", \"todo\", \"finish all week 3 iP tasks\"};","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(Arrays.toString(todoCommandArray), Arrays.toString(Parser.parse(todoCommand)));","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"    public void parse_deadlineCommand_stringArray() {","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"        String deadlineCommand \u003d \"deadline finish all week 3 iP tasks /by 2021 08 30 2359\";","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"        String[] deadlineCommandArray \u003d new String[]{\"add\", \"deadline\",","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"            \"finish all week 3 iP tasks\", \"2021 08 30 2359\"};","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(Arrays.toString(deadlineCommandArray), Arrays.toString(Parser.parse(deadlineCommand)));","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"YeluriKetan"},"content":"    public void parse_eventCommand_stringArray() {","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"YeluriKetan"},"content":"        String eventCommand \u003d \"event morning lecture /from 2021 09 01 0900 to 2021 09 01 1000\";","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"YeluriKetan"},"content":"        String[] eventCommandArray \u003d new String[]{\"add\", \"event\",","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"YeluriKetan"},"content":"            \"morning lecture\", \"2021 09 01 0900\", \"2021 09 01 1000\"};","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(Arrays.toString(eventCommandArray), Arrays.toString(Parser.parse(eventCommand)));","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"YeluriKetan"},"content":"    public void parseIndex_intString_integer() {","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(23, Parser.parseIndex(\"23\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"YeluriKetan":38}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"import duke.Parser;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"    public void toString_deadlineObject_stringRep() {","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"        LocalDateTime deadlineDT \u003d Parser.parseDateTime(\"2021 08 30 2359\");","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"        Deadline deadline \u003d new Deadline(\"finish all tasks\", deadlineDT);","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(\"[D][ ] finish all tasks (by: 30 Aug 2021, 11:59 PM)\", deadline.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"    public void toStorage_deadlineObject_storageRep() {","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"YeluriKetan"},"content":"        LocalDateTime deadlineDT \u003d Parser.parseDateTime(\"2021 08 30 2359\");","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"YeluriKetan"},"content":"        Deadline deadline \u003d new Deadline(\"finish all tasks\", deadlineDT);","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"YeluriKetan"},"content":"        assertEquals(\"D%false%finish all tasks%2021-08-30T23:59\\n\", deadline.toStorage());","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"YeluriKetan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"YeluriKetan"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"YeluriKetan":26}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"YeluriKetan"},"content":"todo eat dinner","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"YeluriKetan"},"content":"TOdo finish laundry","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"YeluriKetan"},"content":"todo","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"YeluriKetan"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"YeluriKetan"},"content":"done 1","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"YeluriKetan"},"content":"done 45","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"YeluriKetan"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"YeluriKetan"},"content":"event meet friends /at 2-4 p.m.","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"YeluriKetan"},"content":"EVent watch movie /at 7-10 p.m.","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"YeluriKetan"},"content":"event shower /by tonight","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"YeluriKetan"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"YeluriKetan"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"YeluriKetan"},"content":"done 3","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"YeluriKetan"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"YeluriKetan"},"content":"deadline submit iP /by tonight","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"YeluriKetan"},"content":"deadLINE form tP teams /by 13 August","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"YeluriKetan"},"content":"deadline return book /at tomorrow","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"YeluriKetan"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"YeluriKetan"},"content":"done 7","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"YeluriKetan"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"YeluriKetan"},"content":"","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"YeluriKetan":21}}]
