[{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhaoPeiduo"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"ZhaoPeiduo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"ZhaoPeiduo"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"ZhaoPeiduo"},"content":" * Represents a specific type of Task with an additional deadline(ddl) field.","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"ZhaoPeiduo"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"ZhaoPeiduo"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"ZhaoPeiduo"},"content":"    private LocalDate ddl;","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"ZhaoPeiduo"},"content":"    public Deadline(String taskTitle, LocalDate ddl) {","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"ZhaoPeiduo"},"content":"        super(taskTitle);","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"ZhaoPeiduo"},"content":"        this.ddl \u003d ddl;","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"ZhaoPeiduo"},"content":"     * Customize the string representation of a deadline object.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"ZhaoPeiduo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"ZhaoPeiduo"},"content":"     * @return string representation of a deadline in the form [D][{X}] {description} (by: {ddl})","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"ZhaoPeiduo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"ZhaoPeiduo"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"ZhaoPeiduo"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"ZhaoPeiduo"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + ddl.getMonth().toString() + \" \" +","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"ZhaoPeiduo"},"content":"                ddl.getDayOfMonth() + \" \" + ddl.getYear() + \")\";","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"ZhaoPeiduo"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"ZhaoPeiduo":26}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhaoPeiduo"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"ZhaoPeiduo"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"ZhaoPeiduo"},"content":" * A driver class that initializes the the parser, task list and storage for the chatterbot.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"ZhaoPeiduo"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"ZhaoPeiduo"},"content":"    private Parser parser;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"ZhaoPeiduo"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"ZhaoPeiduo"},"content":"    private DukeUi ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"ZhaoPeiduo"},"content":"    public Duke() {","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"ZhaoPeiduo"},"content":"        ui \u003d new DukeUi();","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"ZhaoPeiduo"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"ZhaoPeiduo"},"content":"        storage.autoLoad();","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"ZhaoPeiduo"},"content":"        parser \u003d new Parser(new TaskList(storage));","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"ZhaoPeiduo"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"ZhaoPeiduo"},"content":"        new Duke().run();","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"ZhaoPeiduo"},"content":"     * This method starts and ends the program, and pass the user input to the parser.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"ZhaoPeiduo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"ZhaoPeiduo"},"content":"    public void run() {","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"ZhaoPeiduo"},"content":"        ui.welcome();","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"ZhaoPeiduo"},"content":"        ui.readUserInput(parser);","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"ZhaoPeiduo"},"content":"        ui.exit();","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ZhaoPeiduo":29,"-":2}},{"path":"src/main/java/duke/DukeUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhaoPeiduo"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"ZhaoPeiduo"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"ZhaoPeiduo"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"ZhaoPeiduo"},"content":" * The ui for Duke that is in charge of displaying relevant messages to the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"ZhaoPeiduo"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"ZhaoPeiduo"},"content":"public class DukeUi extends Ui {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"ZhaoPeiduo"},"content":"     * Present a farewell message to the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"ZhaoPeiduo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"ZhaoPeiduo"},"content":"    public void exit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"ZhaoPeiduo"},"content":"        System.out.println(formatMessage(\"Bye. Hope to see you again soon!\\n\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"ZhaoPeiduo"},"content":"     * Scan the user inputs for parser to act upon the user\u0027s command.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"ZhaoPeiduo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"ZhaoPeiduo"},"content":"     * @param parser the parser that interprets user\u0027s input.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"ZhaoPeiduo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"ZhaoPeiduo"},"content":"    public void readUserInput(Parser parser) {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"ZhaoPeiduo"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"ZhaoPeiduo"},"content":"        parser.parse(scanner);","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"ZhaoPeiduo"},"content":"        scanner.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"ZhaoPeiduo"},"content":"     * Present an welcome message to the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"ZhaoPeiduo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"ZhaoPeiduo"},"content":"    public void welcome() {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"ZhaoPeiduo"},"content":"        System.out.println(formatMessage(\"Hello! I\u0027m Peoduo\\n\" + getIndentation() + \"Can I help you?\\n\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"ZhaoPeiduo"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"ZhaoPeiduo":34}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhaoPeiduo"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"ZhaoPeiduo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"ZhaoPeiduo"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"ZhaoPeiduo"},"content":" * Represents a specific type of Task with an additional time field.","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"ZhaoPeiduo"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"ZhaoPeiduo"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"ZhaoPeiduo"},"content":"    private LocalDate time;","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"ZhaoPeiduo"},"content":"    public Event(String taskTitle, LocalDate time) {","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"ZhaoPeiduo"},"content":"        super(taskTitle);","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"ZhaoPeiduo"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"ZhaoPeiduo"},"content":"     * Customize the string representation of an event object.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"ZhaoPeiduo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"ZhaoPeiduo"},"content":"     * @return string representation of an event in the form [E][{X}] {description} (at: {time})","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"ZhaoPeiduo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"ZhaoPeiduo"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"ZhaoPeiduo"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"ZhaoPeiduo"},"content":"        return \"[E]\" + super.toString() + \"(at: \" + time.getMonth().toString() + \" \" +","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"ZhaoPeiduo"},"content":"                time.getDayOfMonth() + \" \" + time.getYear() + \")\";","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"ZhaoPeiduo"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"ZhaoPeiduo":26}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhaoPeiduo"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"ZhaoPeiduo"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"ZhaoPeiduo"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"ZhaoPeiduo"},"content":" * Parse user\u0027s input, identify whether it is a valid command and calls relevant method(s) to execute the command.","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"ZhaoPeiduo"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"ZhaoPeiduo"},"content":"public class Parser {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"ZhaoPeiduo"},"content":"    private final TaskList tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"ZhaoPeiduo"},"content":"    private final ParserUi ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"ZhaoPeiduo"},"content":"    public Parser(TaskList tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"ZhaoPeiduo"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"ZhaoPeiduo"},"content":"        this.ui \u003d new ParserUi();","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"ZhaoPeiduo"},"content":"     * This method checks if a String starting with delete is a delete command.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"ZhaoPeiduo"},"content":"     * A delete command is a string with the keyword delete followed by numbers and spaces only.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"ZhaoPeiduo"},"content":"     * Examples of valid user inputs:","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"ZhaoPeiduo"},"content":"     * -\u003e delete 3","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"ZhaoPeiduo"},"content":"     * -\u003e delete   4(spaces trimmed)","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"ZhaoPeiduo"},"content":"     * -\u003e delete 1 4(spaces trimmed and interpret as done 14)","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"ZhaoPeiduo"},"content":"     * Examples of invalid user inputs:","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"ZhaoPeiduo"},"content":"     * -\u003e delete task","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"ZhaoPeiduo"},"content":"     * -\u003e delete 2 task","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"ZhaoPeiduo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"ZhaoPeiduo"},"content":"     * @param userInput input from the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"ZhaoPeiduo"},"content":"     * @return whether the user input can be taken as a delete command.","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"ZhaoPeiduo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"ZhaoPeiduo"},"content":"    private boolean checkDeleteCommand(String userInput) {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"ZhaoPeiduo"},"content":"        String copy \u003d userInput.replace(\"delete\", \"\");","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"ZhaoPeiduo"},"content":"        copy \u003d copy.replaceAll(\"[0-9]\", \"\");","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"ZhaoPeiduo"},"content":"        copy \u003d copy.trim();","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"ZhaoPeiduo"},"content":"        return copy.isEmpty();","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"ZhaoPeiduo"},"content":"     * Similar to isDeleteCommand This method checks if a String starting with done is a done command.","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"ZhaoPeiduo"},"content":"     * A done command is a string with the keyword done followed by numbers and spaces only.","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"ZhaoPeiduo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"ZhaoPeiduo"},"content":"     * @param userInput input from the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"ZhaoPeiduo"},"content":"     * @return whether the user input can be taken as a done command.","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"ZhaoPeiduo"},"content":"     **/","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"ZhaoPeiduo"},"content":"    private boolean checkDoneCommand(String userInput) {","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"ZhaoPeiduo"},"content":"        String copy \u003d userInput.replace(\"done\", \"\");","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"ZhaoPeiduo"},"content":"        //Learnt from https://attacomsian.com/blog/java-extract-digits-from-string","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"ZhaoPeiduo"},"content":"        copy \u003d copy.replaceAll(\"[0-9]\", \"\");","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"ZhaoPeiduo"},"content":"        copy \u003d copy.trim();","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"ZhaoPeiduo"},"content":"        return copy.isEmpty();","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"ZhaoPeiduo"},"content":"     * Parse the user\u0027s command and calls relevant method to execute the command.","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"ZhaoPeiduo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"ZhaoPeiduo"},"content":"     * @param scanner the scanner from ParserUi that reads the user\u0027s input.","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"ZhaoPeiduo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"ZhaoPeiduo"},"content":"    public void parse(Scanner scanner) {","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"ZhaoPeiduo"},"content":"        String userInput \u003d scanner.nextLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"ZhaoPeiduo"},"content":"        while (!userInput.equals(\"bye\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"ZhaoPeiduo"},"content":"            if (userInput.equals(\"list\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"ZhaoPeiduo"},"content":"                ui.printUserInputRecord(tasks.getStorage().getUserInputRecords());","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"ZhaoPeiduo"},"content":"            } else if (userInput.startsWith(\"done\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"ZhaoPeiduo"},"content":"                if (checkDoneCommand(userInput)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"ZhaoPeiduo"},"content":"                    tasks.markAsDone(userInput, tasks.getStorage().getUserInputRecords());","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"ZhaoPeiduo"},"content":"                } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"ZhaoPeiduo"},"content":"                    ui.cannotInterpretMessage();","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"ZhaoPeiduo"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"ZhaoPeiduo"},"content":"            } else if (userInput.equals(\"deleteAll\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"ZhaoPeiduo"},"content":"                tasks.deleteAll(tasks.getStorage().getUserInputRecords());","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"ZhaoPeiduo"},"content":"            } else if (userInput.startsWith(\"delete\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"ZhaoPeiduo"},"content":"                if (checkDeleteCommand(userInput)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"ZhaoPeiduo"},"content":"                    tasks.delete(userInput, tasks.getStorage().getUserInputRecords());","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"ZhaoPeiduo"},"content":"                } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"ZhaoPeiduo"},"content":"                    ui.cannotInterpretMessage();","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"ZhaoPeiduo"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"ZhaoPeiduo"},"content":"            } else if (userInput.startsWith(\"save \")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"ZhaoPeiduo"},"content":"                tasks.getStorage().save(userInput);","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"ZhaoPeiduo"},"content":"            } else if (userInput.startsWith(\"load \")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"ZhaoPeiduo"},"content":"                tasks.getStorage().load(userInput);","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"ZhaoPeiduo"},"content":"            } else if (userInput.startsWith(\"find\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"ZhaoPeiduo"},"content":"                tasks.search(userInput, tasks.getStorage().getUserInputRecords());","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"ZhaoPeiduo"},"content":"            } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"ZhaoPeiduo"},"content":"                tasks.add(userInput, tasks.getStorage().getUserInputRecords());","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"ZhaoPeiduo"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":87,"author":{"gitId":"ZhaoPeiduo"},"content":"            userInput \u003d scanner.nextLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":88,"author":{"gitId":"ZhaoPeiduo"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":89,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"ZhaoPeiduo"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"ZhaoPeiduo":90}},{"path":"src/main/java/duke/ParserUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhaoPeiduo"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"ZhaoPeiduo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"ZhaoPeiduo"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"ZhaoPeiduo"},"content":" * The ui for Parser that is in charge of displaying relevant messages to the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"ZhaoPeiduo"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"ZhaoPeiduo"},"content":"public class ParserUi extends Ui {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"ZhaoPeiduo"},"content":"     * Remind the user that the parser cannot interpret the input command.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"ZhaoPeiduo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"ZhaoPeiduo"},"content":"    public void cannotInterpretMessage() {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"ZhaoPeiduo"},"content":"        System.out.println(formatMessage(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"ZhaoPeiduo"},"content":"     * Show the list of events saved at .../data/record.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"ZhaoPeiduo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"ZhaoPeiduo"},"content":"    public void printUserInputRecord(ArrayList\u003cTask\u003e userInputRecords) {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"ZhaoPeiduo"},"content":"        if (userInputRecords.isEmpty()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"ZhaoPeiduo"},"content":"            System.out.println(formatMessage(\"Ah oh, seems like nothing is added yet :( \\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"ZhaoPeiduo"},"content":"                    getIndentation() + \"Try to input something first! \\n\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"ZhaoPeiduo"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"ZhaoPeiduo"},"content":"            System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"ZhaoPeiduo"},"content":"            System.out.println(\"     Here are the tasks in your list:\");","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"ZhaoPeiduo"},"content":"            for (int i \u003d 0; i \u003c userInputRecords.size(); i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"ZhaoPeiduo"},"content":"                System.out.println(\"     \" + (i + 1) + \".\" + userInputRecords.get(i));","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"ZhaoPeiduo"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"ZhaoPeiduo"},"content":"            System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"ZhaoPeiduo"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"ZhaoPeiduo"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"ZhaoPeiduo":33}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhaoPeiduo"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"ZhaoPeiduo"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"ZhaoPeiduo"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"ZhaoPeiduo"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"ZhaoPeiduo"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"ZhaoPeiduo"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"ZhaoPeiduo"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"ZhaoPeiduo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"ZhaoPeiduo"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"ZhaoPeiduo"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"ZhaoPeiduo"},"content":" * The storage class is in charge of recording the user\u0027s input and loading saved user record.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"ZhaoPeiduo"},"content":" * Saving and loading tasks are done automatically by default, but a user can save and load the tasks to a specified","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"ZhaoPeiduo"},"content":" * directory by using the save/load command.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"ZhaoPeiduo"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"ZhaoPeiduo"},"content":"public class Storage {","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"ZhaoPeiduo"},"content":"    private ArrayList\u003cTask\u003e userInputRecords;","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"ZhaoPeiduo"},"content":"    private StorageUi ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"ZhaoPeiduo"},"content":"    public Storage() {","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"ZhaoPeiduo"},"content":"        this.userInputRecords \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"ZhaoPeiduo"},"content":"        this.ui \u003d new StorageUi();","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"ZhaoPeiduo"},"content":"     * Automatically(without any user command) load the users inputs from ../data/record when the program is restarted.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"ZhaoPeiduo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"ZhaoPeiduo"},"content":"    public void autoLoad() {","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"ZhaoPeiduo"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"ZhaoPeiduo"},"content":"            Scanner scanner \u003d new Scanner(Paths.get(\"data\", \"record\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"ZhaoPeiduo"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"ZhaoPeiduo"},"content":"                String itemInfo \u003d scanner.nextLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"ZhaoPeiduo"},"content":"                if (itemInfo.startsWith(\"[T]\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"ZhaoPeiduo"},"content":"                    Task task \u003d new ToDo(itemInfo.substring(7));","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"ZhaoPeiduo"},"content":"                    if (itemInfo.contains(\"[X]\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"ZhaoPeiduo"},"content":"                        task.setDone(true);","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"ZhaoPeiduo"},"content":"                    }","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"ZhaoPeiduo"},"content":"                    userInputRecords.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"ZhaoPeiduo"},"content":"                } else if (itemInfo.startsWith(\"[D]\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"ZhaoPeiduo"},"content":"                    Task task \u003d new Deadline(itemInfo.substring(7, itemInfo.indexOf(\"(by\")),","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"ZhaoPeiduo"},"content":"                            ui.convertToLocalTime(itemInfo.substring(itemInfo.indexOf(\"(by\") + 5,","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"ZhaoPeiduo"},"content":"                                    itemInfo.length() - 1)));","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"ZhaoPeiduo"},"content":"                    if (itemInfo.contains(\"[X]\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"ZhaoPeiduo"},"content":"                        task.setDone(true);","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"ZhaoPeiduo"},"content":"                    }","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"ZhaoPeiduo"},"content":"                    userInputRecords.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"ZhaoPeiduo"},"content":"                } else if (itemInfo.startsWith(\"[E]\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"ZhaoPeiduo"},"content":"                    Task task \u003d new Event(itemInfo.substring(7, itemInfo.indexOf(\"(at\")),","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"ZhaoPeiduo"},"content":"                            ui.convertToLocalTime(itemInfo.substring(itemInfo.indexOf(\"(at\") + 5,","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"ZhaoPeiduo"},"content":"                                    itemInfo.length() - 1)));","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"ZhaoPeiduo"},"content":"                    if (itemInfo.contains(\"[X]\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"ZhaoPeiduo"},"content":"                        task.setDone(true);","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"ZhaoPeiduo"},"content":"                    }","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"ZhaoPeiduo"},"content":"                    userInputRecords.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"ZhaoPeiduo"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"ZhaoPeiduo"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"ZhaoPeiduo"},"content":"            scanner.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"ZhaoPeiduo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"ZhaoPeiduo"},"content":"            ui.saveNotFoundMessage();","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"ZhaoPeiduo"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"ZhaoPeiduo"},"content":"     * Automatically(without any user command) save the users inputs to ../data/record.","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"ZhaoPeiduo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"ZhaoPeiduo"},"content":"    public void autoSave() {","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"ZhaoPeiduo"},"content":"        boolean directoryExists \u003d Files.exists(Paths.get(\"data\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"ZhaoPeiduo"},"content":"        boolean fileExists \u003d Files.exists(Paths.get(\"data\", \"record\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"ZhaoPeiduo"},"content":"        if (!directoryExists) {","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"ZhaoPeiduo"},"content":"            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"ZhaoPeiduo"},"content":"                Files.createDirectory(Path.of(\"data\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"ZhaoPeiduo"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"ZhaoPeiduo"},"content":"                ui.directoryAlreadyExistMessage();","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"ZhaoPeiduo"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"ZhaoPeiduo"},"content":"        } else if (!fileExists) {","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"ZhaoPeiduo"},"content":"            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"ZhaoPeiduo"},"content":"                Files.createFile(Path.of(\"data\", \"record\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"ZhaoPeiduo"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"ZhaoPeiduo"},"content":"                ui.fileAlreadyExistMessage();","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"ZhaoPeiduo"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"ZhaoPeiduo"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"ZhaoPeiduo"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"ZhaoPeiduo"},"content":"            FileWriter writer \u003d new FileWriter(Paths.get(\"data\", \"record\").toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"ZhaoPeiduo"},"content":"            for (Task task : userInputRecords) {","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"ZhaoPeiduo"},"content":"                writer.write(task.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"ZhaoPeiduo"},"content":"                writer.write(System.getProperty(\"line.separator\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"ZhaoPeiduo"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"ZhaoPeiduo"},"content":"            writer.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"ZhaoPeiduo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"ZhaoPeiduo"},"content":"            ui.unexpectedErrorMessage();","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"ZhaoPeiduo"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"ZhaoPeiduo"},"content":"    public ArrayList\u003cTask\u003e getUserInputRecords() {","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"ZhaoPeiduo"},"content":"        return userInputRecords;","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"ZhaoPeiduo"},"content":"     * Load the current task list from a user-specified file, upon receiving a load command.","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"ZhaoPeiduo"},"content":"     * Texts not recorded in the standard format wll be ignored.","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"ZhaoPeiduo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"ZhaoPeiduo"},"content":"     * @param filePath the filepath indicated by the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"ZhaoPeiduo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"ZhaoPeiduo"},"content":"    public void load(String filePath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"ZhaoPeiduo"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"ZhaoPeiduo"},"content":"            filePath \u003d filePath.replace(\"load \", \"\");","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"ZhaoPeiduo"},"content":"            Scanner scanner \u003d new Scanner(Paths.get(filePath));","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"ZhaoPeiduo"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"ZhaoPeiduo"},"content":"                String itemInfo \u003d scanner.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"ZhaoPeiduo"},"content":"                if (itemInfo.startsWith(\"[T]\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"ZhaoPeiduo"},"content":"                    Task task \u003d new ToDo(itemInfo.substring(7));","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"ZhaoPeiduo"},"content":"                    if (itemInfo.contains(\"[X]\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"ZhaoPeiduo"},"content":"                        task.setDone(true);","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"ZhaoPeiduo"},"content":"                    }","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"ZhaoPeiduo"},"content":"                    userInputRecords.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"ZhaoPeiduo"},"content":"                } else if (itemInfo.startsWith(\"[D]\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"ZhaoPeiduo"},"content":"                    Task task \u003d new Deadline(itemInfo.substring(7, itemInfo.indexOf(\"(by\")),","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"ZhaoPeiduo"},"content":"                            ui.convertToLocalTime(itemInfo.substring(itemInfo.indexOf(\"(by\") + 5,","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"ZhaoPeiduo"},"content":"                                    itemInfo.length() - 1)));","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"ZhaoPeiduo"},"content":"                    if (itemInfo.contains(\"[X]\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"ZhaoPeiduo"},"content":"                        task.setDone(true);","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"ZhaoPeiduo"},"content":"                    }","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"ZhaoPeiduo"},"content":"                    userInputRecords.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":125,"author":{"gitId":"ZhaoPeiduo"},"content":"                } else if (itemInfo.startsWith(\"[E]\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"ZhaoPeiduo"},"content":"                    Task task \u003d new Event(itemInfo.substring(7, itemInfo.indexOf(\"(at\")),","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"ZhaoPeiduo"},"content":"                            ui.convertToLocalTime(itemInfo.substring(itemInfo.indexOf(\"(at\") + 5,","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"ZhaoPeiduo"},"content":"                                    itemInfo.length() - 1)));","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"ZhaoPeiduo"},"content":"                    if (itemInfo.contains(\"[X]\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"ZhaoPeiduo"},"content":"                        task.setDone(true);","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"ZhaoPeiduo"},"content":"                    }","lastModifiedDate":"2021-08-24"},{"lineNumber":132,"author":{"gitId":"ZhaoPeiduo"},"content":"                    userInputRecords.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":133,"author":{"gitId":"ZhaoPeiduo"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":134,"author":{"gitId":"ZhaoPeiduo"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":135,"author":{"gitId":"ZhaoPeiduo"},"content":"            scanner.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":136,"author":{"gitId":"ZhaoPeiduo"},"content":"            ui.loadSuccessfulMessage();","lastModifiedDate":"2021-08-24"},{"lineNumber":137,"author":{"gitId":"ZhaoPeiduo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":138,"author":{"gitId":"ZhaoPeiduo"},"content":"            ui.invalidFilePathMessage();","lastModifiedDate":"2021-08-24"},{"lineNumber":139,"author":{"gitId":"ZhaoPeiduo"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":140,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":141,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":142,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":143,"author":{"gitId":"ZhaoPeiduo"},"content":"     * Save the current task list to a user-specified file, upon receiving a save command.","lastModifiedDate":"2021-08-24"},{"lineNumber":144,"author":{"gitId":"ZhaoPeiduo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":145,"author":{"gitId":"ZhaoPeiduo"},"content":"     * @param filePath the filepath indicated by the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":146,"author":{"gitId":"ZhaoPeiduo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":147,"author":{"gitId":"ZhaoPeiduo"},"content":"    public void save(String filePath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":148,"author":{"gitId":"ZhaoPeiduo"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":149,"author":{"gitId":"ZhaoPeiduo"},"content":"            filePath \u003d filePath.replace(\"save \", \"\");","lastModifiedDate":"2021-08-24"},{"lineNumber":150,"author":{"gitId":"ZhaoPeiduo"},"content":"            Files.deleteIfExists(Path.of(filePath));","lastModifiedDate":"2021-08-24"},{"lineNumber":151,"author":{"gitId":"ZhaoPeiduo"},"content":"            Files.createFile(Path.of(filePath));","lastModifiedDate":"2021-08-24"},{"lineNumber":152,"author":{"gitId":"ZhaoPeiduo"},"content":"            FileWriter writer \u003d new FileWriter(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":153,"author":{"gitId":"ZhaoPeiduo"},"content":"            for (Task task : userInputRecords) {","lastModifiedDate":"2021-08-24"},{"lineNumber":154,"author":{"gitId":"ZhaoPeiduo"},"content":"                writer.write(task.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":155,"author":{"gitId":"ZhaoPeiduo"},"content":"                writer.write(System.getProperty(\"line.separator\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":156,"author":{"gitId":"ZhaoPeiduo"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":157,"author":{"gitId":"ZhaoPeiduo"},"content":"            writer.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":158,"author":{"gitId":"ZhaoPeiduo"},"content":"            autoSave();","lastModifiedDate":"2021-08-24"},{"lineNumber":159,"author":{"gitId":"ZhaoPeiduo"},"content":"            ui.saveSuccessfulMessage();","lastModifiedDate":"2021-08-24"},{"lineNumber":160,"author":{"gitId":"ZhaoPeiduo"},"content":"        } catch (IOException | InvalidPathException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":161,"author":{"gitId":"ZhaoPeiduo"},"content":"            ui.invalidFilePathMessage();","lastModifiedDate":"2021-08-24"},{"lineNumber":162,"author":{"gitId":"ZhaoPeiduo"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":163,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":164,"author":{"gitId":"ZhaoPeiduo"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"ZhaoPeiduo":164}},{"path":"src/main/java/duke/StorageUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhaoPeiduo"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"ZhaoPeiduo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"ZhaoPeiduo"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"ZhaoPeiduo"},"content":" * The ui for Storage that is in charge of displaying relevant messages to the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"ZhaoPeiduo"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"ZhaoPeiduo"},"content":"public class StorageUi extends Ui {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"ZhaoPeiduo"},"content":"    private static final String[] MONTHS \u003d new String[]{","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"ZhaoPeiduo"},"content":"            \"JANUARY\", \"FEBRUARY\", \"MARCH\", \"APRIL\", \"MAY\", \"JUNE\", \"JULY\",","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"ZhaoPeiduo"},"content":"            \"AUGUST\", \"SEPTEMBER\", \"OCTOBER\", \"NOVEMBER\", \"DECEMBER\"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"ZhaoPeiduo"},"content":"    };","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"ZhaoPeiduo"},"content":"     * Convert a input string time to a LocalDate object.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"ZhaoPeiduo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"ZhaoPeiduo"},"content":"     * @param time the input time in String format.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"ZhaoPeiduo"},"content":"     * @return a LocalDate object whose time field is from the input time string.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"ZhaoPeiduo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"ZhaoPeiduo"},"content":"    public LocalDate convertToLocalTime(String time) {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"ZhaoPeiduo"},"content":"        String copy \u003d time;","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"ZhaoPeiduo"},"content":"        String month \u003d copy.substring(0, time.indexOf(\" \"));","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"ZhaoPeiduo"},"content":"        int monthValue \u003d -1;","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"ZhaoPeiduo"},"content":"        for (int i \u003d 0; i \u003c MONTHS.length; i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"ZhaoPeiduo"},"content":"            if (month.equals(MONTHS[i])) {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"ZhaoPeiduo"},"content":"                monthValue \u003d i + 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"ZhaoPeiduo"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"ZhaoPeiduo"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"ZhaoPeiduo"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"ZhaoPeiduo"},"content":"        copy \u003d copy.replace(month + \" \", \"\");","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"ZhaoPeiduo"},"content":"        String day \u003d copy.substring(0, copy.indexOf(\" \")).trim();","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"ZhaoPeiduo"},"content":"        int dayValue \u003d Integer.parseInt(day);","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"ZhaoPeiduo"},"content":"        copy \u003d copy.replace(day + \" \", \"\");","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"ZhaoPeiduo"},"content":"        int yearValue \u003d Integer.parseInt(copy);","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"ZhaoPeiduo"},"content":"        return LocalDate.of(yearValue, monthValue, dayValue);","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"ZhaoPeiduo"},"content":"     * Remind the user that a directory already exists.","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"ZhaoPeiduo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"ZhaoPeiduo"},"content":"    public void directoryAlreadyExistMessage() {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"ZhaoPeiduo"},"content":"        System.out.println(formatMessage(\"This directory already exists!\\n\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"ZhaoPeiduo"},"content":"     * Remind the user that a file already exists.","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"ZhaoPeiduo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"ZhaoPeiduo"},"content":"    public void fileAlreadyExistMessage() {","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"ZhaoPeiduo"},"content":"        System.out.println(formatMessage(\"This file already exists!\\n\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"ZhaoPeiduo"},"content":"     * Warn the user that the input file path is invalid.","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"ZhaoPeiduo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"ZhaoPeiduo"},"content":"    public void invalidFilePathMessage() {","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"ZhaoPeiduo"},"content":"        System.out.println(formatMessage(\"Invalid file path detected, please try again.\\n\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"ZhaoPeiduo"},"content":"     * Tell the user that the task list is loaded from the specified file successfully.","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"ZhaoPeiduo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"ZhaoPeiduo"},"content":"    public void loadSuccessfulMessage() {","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"ZhaoPeiduo"},"content":"        System.out.println(formatMessage(\"Load successfully.\\n\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"ZhaoPeiduo"},"content":"     * Warn the user that the autosave record is missing and a new data file is created.","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"ZhaoPeiduo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"ZhaoPeiduo"},"content":"    public void saveNotFoundMessage() {","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"ZhaoPeiduo"},"content":"        System.out.println(formatMessage(\"Saved data not found, a new data file created.\\n\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"ZhaoPeiduo"},"content":"     * Tell the user that the task list is saved into the specified file successfully.","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"ZhaoPeiduo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"ZhaoPeiduo"},"content":"    public void saveSuccessfulMessage() {","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"ZhaoPeiduo"},"content":"        System.out.println(formatMessage(\"Save successfully.\\n\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"ZhaoPeiduo"},"content":"     * Remind the user that an unexpected error has occurred.","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"ZhaoPeiduo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"ZhaoPeiduo"},"content":"    public void unexpectedErrorMessage() {","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"ZhaoPeiduo"},"content":"        System.out.println(formatMessage(\"An unknown error has occurred.\\n\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"ZhaoPeiduo"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"ZhaoPeiduo":86}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhaoPeiduo"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"ZhaoPeiduo"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"ZhaoPeiduo"},"content":" * Represents a task with a description and a status.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"ZhaoPeiduo"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"ZhaoPeiduo"},"content":"public class Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"ZhaoPeiduo"},"content":"    private final String taskTitle;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"ZhaoPeiduo"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"ZhaoPeiduo"},"content":"    public Task(String taskTitle) {","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"ZhaoPeiduo"},"content":"        this.taskTitle \u003d taskTitle;","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"ZhaoPeiduo"},"content":"        //When a task is first created, it is by default not completed.","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"ZhaoPeiduo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"ZhaoPeiduo"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"ZhaoPeiduo"},"content":"        this.isDone \u003d done;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"ZhaoPeiduo"},"content":"    public String getTaskTitle() {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"ZhaoPeiduo"},"content":"        return taskTitle;","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"ZhaoPeiduo"},"content":"     * Customize the string representation of a task object.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"ZhaoPeiduo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"ZhaoPeiduo"},"content":"     * @return string representation of a task in the form [][{X}] {description}","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"ZhaoPeiduo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"ZhaoPeiduo"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"ZhaoPeiduo"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"ZhaoPeiduo"},"content":"        if (isDone) {","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"ZhaoPeiduo"},"content":"            return \"[X] \" + taskTitle;","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"ZhaoPeiduo"},"content":"        } else {","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"ZhaoPeiduo"},"content":"            return \"[ ] \" + taskTitle;","lastModifiedDate":"2021-08-15"},{"lineNumber":35,"author":{"gitId":"ZhaoPeiduo"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":36,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":37,"author":{"gitId":"ZhaoPeiduo"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"ZhaoPeiduo":37}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhaoPeiduo"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"ZhaoPeiduo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"ZhaoPeiduo"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"ZhaoPeiduo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"ZhaoPeiduo"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"ZhaoPeiduo"},"content":" * The TaskList class is in charge of executing the users command on the saved record, as instructed by the parser.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"ZhaoPeiduo"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"ZhaoPeiduo"},"content":"public class TaskList {","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"ZhaoPeiduo"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"ZhaoPeiduo"},"content":"    private TaskListUi ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"ZhaoPeiduo"},"content":"    public TaskList(Storage storage) {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"ZhaoPeiduo"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"ZhaoPeiduo"},"content":"        this.ui \u003d new TaskListUi();","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"ZhaoPeiduo"},"content":"     * Add the user\u0027s input to the saved record only if the user\u0027s input is of a specific form.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"ZhaoPeiduo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"ZhaoPeiduo"},"content":"     * @param userInput        input from the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"ZhaoPeiduo"},"content":"     * @param userInputRecords the saved record.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"ZhaoPeiduo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"ZhaoPeiduo"},"content":"    public void add(String userInput, ArrayList\u003cTask\u003e userInputRecords) {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"ZhaoPeiduo"},"content":"        Task task;","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"ZhaoPeiduo"},"content":"        if (userInput.startsWith(\"todo\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"ZhaoPeiduo"},"content":"            String description \u003d userInput.substring(5);","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"ZhaoPeiduo"},"content":"            if (description.trim().isEmpty()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"ZhaoPeiduo"},"content":"                ui.nonEmptyDescriptionMessage(\"todo\");","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"ZhaoPeiduo"},"content":"                return;","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"ZhaoPeiduo"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"ZhaoPeiduo"},"content":"            task \u003d new ToDo(description);","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"ZhaoPeiduo"},"content":"        } else if (userInput.startsWith(\"deadline\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"ZhaoPeiduo"},"content":"            try {","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"ZhaoPeiduo"},"content":"                int byPosition \u003d userInput.lastIndexOf(\"/by\");","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"ZhaoPeiduo"},"content":"                String description \u003d userInput.substring(9, byPosition); //Length of \"deadline\" \u003d 9","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"ZhaoPeiduo"},"content":"                LocalDate ddl \u003d LocalDate.parse(userInput.substring(byPosition + 4));","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"ZhaoPeiduo"},"content":"                task \u003d new Deadline(description, ddl);","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"ZhaoPeiduo"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"ZhaoPeiduo"},"content":"                ui.nonEmptyDescriptionMessage(\"deadline\");","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"ZhaoPeiduo"},"content":"                return;","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"ZhaoPeiduo"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"ZhaoPeiduo"},"content":"                ui.invalidDateFormMessage();","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"ZhaoPeiduo"},"content":"                return;","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"ZhaoPeiduo"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"ZhaoPeiduo"},"content":"        } else if (userInput.startsWith(\"event\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"ZhaoPeiduo"},"content":"            try {","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"ZhaoPeiduo"},"content":"                int atPosition \u003d userInput.lastIndexOf(\"/at\");","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"ZhaoPeiduo"},"content":"                String description \u003d userInput.substring(6, atPosition);//Length of \"event \" \u003d 6","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"ZhaoPeiduo"},"content":"                LocalDate time \u003d LocalDate.parse(userInput.substring(atPosition + 4));","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"ZhaoPeiduo"},"content":"                task \u003d new Event(description, time);","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"ZhaoPeiduo"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"ZhaoPeiduo"},"content":"                ui.nonEmptyDescriptionMessage(\"event\");","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"ZhaoPeiduo"},"content":"                return;","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"ZhaoPeiduo"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"ZhaoPeiduo"},"content":"                ui.invalidDateFormMessage();","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"ZhaoPeiduo"},"content":"                return;","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"ZhaoPeiduo"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"ZhaoPeiduo"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"ZhaoPeiduo"},"content":"            ui.cannotInterpretMessage();","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"ZhaoPeiduo"},"content":"            return;","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"ZhaoPeiduo"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"ZhaoPeiduo"},"content":"        userInputRecords.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"ZhaoPeiduo"},"content":"        storage.autoSave();","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"ZhaoPeiduo"},"content":"        ui.addMessage(userInputRecords, task);","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"ZhaoPeiduo"},"content":"     * Delete the user-specified event, according to the task index.","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"ZhaoPeiduo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"ZhaoPeiduo"},"content":"     * @param userInput        input from the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"ZhaoPeiduo"},"content":"     * @param userInputRecords the saved record.","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"ZhaoPeiduo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"ZhaoPeiduo"},"content":"    public void delete(String userInput, ArrayList\u003cTask\u003e userInputRecords) {","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"ZhaoPeiduo"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"ZhaoPeiduo"},"content":"            int itemToDelete \u003d Integer.parseInt(userInput.replaceAll(\"[^0-9]\", \"\")) - 1;","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"ZhaoPeiduo"},"content":"            Task itemDeleted \u003d userInputRecords.get(itemToDelete);","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"ZhaoPeiduo"},"content":"            userInputRecords.remove(itemToDelete);","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"ZhaoPeiduo"},"content":"            storage.autoSave();","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"ZhaoPeiduo"},"content":"            ui.deleteMessage(userInputRecords, itemDeleted);","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"ZhaoPeiduo"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"ZhaoPeiduo"},"content":"            ui.absentIdMessage();","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"ZhaoPeiduo"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":86,"author":{"gitId":"ZhaoPeiduo"},"content":"            ui.invalidIdMessage();","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"ZhaoPeiduo"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":88,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":89,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"ZhaoPeiduo"},"content":"     * Delete all tasks saved in the record.","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"ZhaoPeiduo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"ZhaoPeiduo"},"content":"    public void deleteAll(ArrayList\u003cTask\u003e userInputRecords) {","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"ZhaoPeiduo"},"content":"        userInputRecords.clear();","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"ZhaoPeiduo"},"content":"        ui.deleteAllMessage();","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"ZhaoPeiduo"},"content":"    public Storage getStorage() {","lastModifiedDate":"2021-08-22"},{"lineNumber":99,"author":{"gitId":"ZhaoPeiduo"},"content":"        return storage;","lastModifiedDate":"2021-08-22"},{"lineNumber":100,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":101,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"ZhaoPeiduo"},"content":"     * Mark the user-specified event as done, according to the task index.","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"ZhaoPeiduo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"ZhaoPeiduo"},"content":"     * @param userInput        input from the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"ZhaoPeiduo"},"content":"     * @param userInputRecords the saved record.","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"ZhaoPeiduo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"ZhaoPeiduo"},"content":"    public void markAsDone(String userInput, ArrayList\u003cTask\u003e userInputRecords) {","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"ZhaoPeiduo"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"ZhaoPeiduo"},"content":"            int itemToComplete \u003d Integer.parseInt(userInput.replaceAll(\"[^0-9]\", \"\")) - 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"ZhaoPeiduo"},"content":"            Task taskDone \u003d userInputRecords.get(itemToComplete);","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"ZhaoPeiduo"},"content":"            taskDone.setDone(true);","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"ZhaoPeiduo"},"content":"            userInputRecords.set(itemToComplete, taskDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"ZhaoPeiduo"},"content":"            ui.markAsDoneMessage(userInputRecords, itemToComplete);","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"ZhaoPeiduo"},"content":"            storage.autoSave();","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"ZhaoPeiduo"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"ZhaoPeiduo"},"content":"            ui.absentIdMessage();","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"ZhaoPeiduo"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"ZhaoPeiduo"},"content":"            ui.invalidIdMessage();","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"ZhaoPeiduo"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"ZhaoPeiduo"},"content":"     * Search for the events according to the user-specified keyword.","lastModifiedDate":"2021-08-24"},{"lineNumber":125,"author":{"gitId":"ZhaoPeiduo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"ZhaoPeiduo"},"content":"     * @param userInput        input from the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"ZhaoPeiduo"},"content":"     * @param userInputRecords the saved record.","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"ZhaoPeiduo"},"content":"     * @return Search result (for testing purposes)","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"ZhaoPeiduo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"ZhaoPeiduo"},"content":"    public ArrayList\u003cTask\u003e search(String userInput, ArrayList\u003cTask\u003e userInputRecords) {","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"ZhaoPeiduo"},"content":"        String keyword \u003d userInput.replace(\"find\", \"\").trim();","lastModifiedDate":"2021-08-24"},{"lineNumber":132,"author":{"gitId":"ZhaoPeiduo"},"content":"        ArrayList\u003cTask\u003e searchResult \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":133,"author":{"gitId":"ZhaoPeiduo"},"content":"        for (Task userInputRecord : userInputRecords) {","lastModifiedDate":"2021-08-24"},{"lineNumber":134,"author":{"gitId":"ZhaoPeiduo"},"content":"            String taskTitle \u003d userInputRecord.getTaskTitle();","lastModifiedDate":"2021-08-24"},{"lineNumber":135,"author":{"gitId":"ZhaoPeiduo"},"content":"            if (taskTitle.contains(keyword)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":136,"author":{"gitId":"ZhaoPeiduo"},"content":"                searchResult.add(userInputRecord);","lastModifiedDate":"2021-08-24"},{"lineNumber":137,"author":{"gitId":"ZhaoPeiduo"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":138,"author":{"gitId":"ZhaoPeiduo"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":139,"author":{"gitId":"ZhaoPeiduo"},"content":"        ui.printSearchResult(searchResult, keyword);","lastModifiedDate":"2021-08-24"},{"lineNumber":140,"author":{"gitId":"ZhaoPeiduo"},"content":"        return searchResult;","lastModifiedDate":"2021-08-24"},{"lineNumber":141,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":142,"author":{"gitId":"ZhaoPeiduo"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"ZhaoPeiduo":142}},{"path":"src/main/java/duke/TaskListUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhaoPeiduo"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"ZhaoPeiduo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"ZhaoPeiduo"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"ZhaoPeiduo"},"content":" * The ui for TaskList that is in charge of displaying relevant messages to the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"ZhaoPeiduo"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"ZhaoPeiduo"},"content":"public class TaskListUi extends Ui {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"ZhaoPeiduo"},"content":"     * Warn the user that the ID for deleting a task/marking a task as done is absent.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"ZhaoPeiduo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"ZhaoPeiduo"},"content":"    public void absentIdMessage() {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"ZhaoPeiduo"},"content":"        System.out.println(formatMessage(\"Oops, the ID of the task does not exist!\\n\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"ZhaoPeiduo"},"content":"     * Remind the user that a task has been successfully added.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"ZhaoPeiduo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"ZhaoPeiduo"},"content":"     * @param userInputRecords the saved record.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"ZhaoPeiduo"},"content":"     * @param task             the added task.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"ZhaoPeiduo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"ZhaoPeiduo"},"content":"    public void addMessage(ArrayList\u003cTask\u003e userInputRecords, Task task) {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"ZhaoPeiduo"},"content":"        System.out.println(formatMessage(\"Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"ZhaoPeiduo"},"content":"                getSubIndentation() + task + \"\\n\" + getIndentation() +","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"ZhaoPeiduo"},"content":"                \"Now you have \" + userInputRecords.size() + \" tasks in the list.\\n\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"ZhaoPeiduo"},"content":"     * Remind the user that the command cannot be interpreted.","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"ZhaoPeiduo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"ZhaoPeiduo"},"content":"    public void cannotInterpretMessage() {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"ZhaoPeiduo"},"content":"        System.out.println(formatMessage(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"ZhaoPeiduo"},"content":"     * Remind the user that all messages in the record has been deleted.","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"ZhaoPeiduo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"ZhaoPeiduo"},"content":"    public void deleteAllMessage() {","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"ZhaoPeiduo"},"content":"        System.out.println(formatMessage(\"All records deleted!\\n\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"ZhaoPeiduo"},"content":"     * Remind the user that a task has been deleted.","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"ZhaoPeiduo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"ZhaoPeiduo"},"content":"     * @param userInputRecords the saved record.","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"ZhaoPeiduo"},"content":"     * @param itemDeleted      the task deleted, by index.","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"ZhaoPeiduo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"ZhaoPeiduo"},"content":"    public void deleteMessage(ArrayList\u003cTask\u003e userInputRecords, Task itemDeleted) {","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"ZhaoPeiduo"},"content":"        System.out.println(formatMessage(\"Noted. I\u0027ve removed this task:\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"ZhaoPeiduo"},"content":"                getSubIndentation() + itemDeleted + \"\\n\" + getIndentation() +","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"ZhaoPeiduo"},"content":"                \"Now you have \" + userInputRecords.size() + \" tasks in the list.\\n\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"ZhaoPeiduo"},"content":"     * Remind the user that a task description is required.","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"ZhaoPeiduo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"ZhaoPeiduo"},"content":"     * @param taskType the type of task specified by the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"ZhaoPeiduo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"ZhaoPeiduo"},"content":"    public void nonEmptyDescriptionMessage(String taskType) {","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"ZhaoPeiduo"},"content":"        if (taskType.startsWith(\"a\") || taskType.startsWith(\"e\") || taskType.startsWith(\"i\") ||","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"ZhaoPeiduo"},"content":"                taskType.startsWith(\"o\") || taskType.startsWith(\"u\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"ZhaoPeiduo"},"content":"            System.out.println(formatMessage(\"OOPS!!! The description of an \" + taskType + \" cannot be empty.\\n\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"ZhaoPeiduo"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"ZhaoPeiduo"},"content":"            System.out.println(formatMessage(\"OOPS!!! The description of a \" + taskType + \" cannot be empty.\\n\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"ZhaoPeiduo"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"ZhaoPeiduo"},"content":"     * Warn the user that the date format is invalid (for deadline and event tasks only).","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"ZhaoPeiduo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"ZhaoPeiduo"},"content":"    public void invalidDateFormMessage() {","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"ZhaoPeiduo"},"content":"        System.out.println(formatMessage(\"Please enter a valid date in the format:/at yyyy-mm-dd!\\n\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"ZhaoPeiduo"},"content":"     * Warn the user that the ID for deleting a task/marking a task as done is invalid.","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"ZhaoPeiduo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"ZhaoPeiduo"},"content":"    public void invalidIdMessage() {","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"ZhaoPeiduo"},"content":"        System.out.println(formatMessage(\"Please enter a valid ID!\\n\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"ZhaoPeiduo"},"content":"     * Remind the user that a task has been marked done.","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"ZhaoPeiduo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"ZhaoPeiduo"},"content":"     * @param userInputRecords the saved record.","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"ZhaoPeiduo"},"content":"     * @param itemToComplete   the task marked done, by index.","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"ZhaoPeiduo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"ZhaoPeiduo"},"content":"    public void markAsDoneMessage(ArrayList\u003cTask\u003e userInputRecords, int itemToComplete) {","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"ZhaoPeiduo"},"content":"        System.out.println(formatMessage(\"Nice! I\u0027ve marked this task as done:\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"ZhaoPeiduo"},"content":"                getSubIndentation() + userInputRecords.get(itemToComplete) + \"\\n\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"ZhaoPeiduo"},"content":"     * Show the search result.","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"ZhaoPeiduo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"ZhaoPeiduo"},"content":"    public void printSearchResult(ArrayList\u003cTask\u003e searchResult, String keyword) {","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"ZhaoPeiduo"},"content":"        if (searchResult.isEmpty()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"ZhaoPeiduo"},"content":"            System.out.println(formatMessage(\"Oops,there is no record for the keyword \" + keyword + \"\\n\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"ZhaoPeiduo"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"ZhaoPeiduo"},"content":"            System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"ZhaoPeiduo"},"content":"            System.out.println(\"     Here are the matching tasks in your list:\");","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"ZhaoPeiduo"},"content":"            for (int i \u003d 0; i \u003c searchResult.size(); i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"ZhaoPeiduo"},"content":"                System.out.println(\"     \" + (i + 1) + \".\" + searchResult.get(i));","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"ZhaoPeiduo"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"ZhaoPeiduo"},"content":"            System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"ZhaoPeiduo"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"ZhaoPeiduo"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"ZhaoPeiduo":109}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhaoPeiduo"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"ZhaoPeiduo"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"ZhaoPeiduo"},"content":" * Represents a specific type of Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"ZhaoPeiduo"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"ZhaoPeiduo"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"ZhaoPeiduo"},"content":"    public ToDo(String taskTitle) {","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"ZhaoPeiduo"},"content":"        super(taskTitle);","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"ZhaoPeiduo"},"content":"     * Customize the string representation of a todo object.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"ZhaoPeiduo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"ZhaoPeiduo"},"content":"     * @return string representation of a deadline in the form [T][{X}] {description}","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"ZhaoPeiduo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"ZhaoPeiduo"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"ZhaoPeiduo"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"ZhaoPeiduo"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"ZhaoPeiduo"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"ZhaoPeiduo":21}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhaoPeiduo"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"ZhaoPeiduo"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"ZhaoPeiduo"},"content":" * A general user interface that identifies the format of messages displayed to the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"ZhaoPeiduo"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"ZhaoPeiduo"},"content":"public class Ui {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"ZhaoPeiduo"},"content":"    private static final String INDENTATION \u003d \"     \";","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"ZhaoPeiduo"},"content":"    private static final String SUBINDENTATION \u003d \"       \";","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"ZhaoPeiduo"},"content":"    public static String getIndentation() {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"ZhaoPeiduo"},"content":"        return INDENTATION;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"ZhaoPeiduo"},"content":"    public static String getSubIndentation() {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"ZhaoPeiduo"},"content":"        return SUBINDENTATION;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"ZhaoPeiduo"},"content":"     * Standardise the format of an input message.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"ZhaoPeiduo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"ZhaoPeiduo"},"content":"     * @param message the string to be shown to the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"ZhaoPeiduo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"ZhaoPeiduo"},"content":"    public String formatMessage(String message) {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"ZhaoPeiduo"},"content":"        return \"    ____________________________________________________________\\n\" + INDENTATION","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"ZhaoPeiduo"},"content":"                + message + \"    ____________________________________________________________\";","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"ZhaoPeiduo"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"ZhaoPeiduo":27}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhaoPeiduo"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"ZhaoPeiduo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"ZhaoPeiduo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"ZhaoPeiduo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"ZhaoPeiduo"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"ZhaoPeiduo"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"ZhaoPeiduo"},"content":"    public void deadlineTest_createInstance_sameStringrep() {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"ZhaoPeiduo"},"content":"        Deadline deadline \u003d new Deadline(\"Finish Assignment\", LocalDate.of(2021,8,7));","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"ZhaoPeiduo"},"content":"        assertEquals(deadline.toString(),\"[D][ ] Finish Assignment(by: AUGUST 7 2021)\");","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"ZhaoPeiduo"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"ZhaoPeiduo":15}},{"path":"src/test/java/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhaoPeiduo"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"ZhaoPeiduo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"ZhaoPeiduo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"ZhaoPeiduo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"ZhaoPeiduo"},"content":"public class EventTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"ZhaoPeiduo"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"ZhaoPeiduo"},"content":"    public void eventTest_createInstance_sameStringRep() {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"ZhaoPeiduo"},"content":"        Event event \u003d new Event(\"Go for concert\", LocalDate.of(2021,8,1));","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"ZhaoPeiduo"},"content":"        assertEquals(event.toString(),\"[E][ ] Go for concert(at: AUGUST 1 2021)\");","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"ZhaoPeiduo"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"ZhaoPeiduo":15}},{"path":"src/test/java/duke/ParserTaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhaoPeiduo"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"ZhaoPeiduo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"ZhaoPeiduo"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"ZhaoPeiduo"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"ZhaoPeiduo"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"ZhaoPeiduo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"ZhaoPeiduo"},"content":"public class ParserTaskListTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"ZhaoPeiduo"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"ZhaoPeiduo"},"content":"    public void parseAndTaskList_addAndMarkDone_eventsCreatedAndMarkedDone() {","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"ZhaoPeiduo"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"ZhaoPeiduo"},"content":"            Scanner testScanner \u003d new Scanner(Paths.get(\"java\",\"duke\",\"add-markdone-command\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"ZhaoPeiduo"},"content":"            Storage storage \u003d new Storage();","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"ZhaoPeiduo"},"content":"            Parser parser \u003d new Parser(new TaskList(storage));","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"ZhaoPeiduo"},"content":"            parser.parse(testScanner);","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"ZhaoPeiduo"},"content":"            assertEquals(storage.getUserInputRecords().get(0).toString(),\"[T][X] sleep\");","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"ZhaoPeiduo"},"content":"            assertEquals(storage.getUserInputRecords().get(1).toString(),\"[D][X] assignment (by: AUGUST 9 2021)\");","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"ZhaoPeiduo"},"content":"            assertEquals(storage.getUserInputRecords().get(2).toString(),\"[E][X] meeting (at: AUGUST 1 2021)\");","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"ZhaoPeiduo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"ZhaoPeiduo"},"content":"            System.out.println(\"Test file does not exist\");","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"ZhaoPeiduo"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"ZhaoPeiduo"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"ZhaoPeiduo"},"content":"    public void parseAndTaskList_delete_eventsDeleted() {","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"ZhaoPeiduo"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"ZhaoPeiduo"},"content":"            Scanner testScanner \u003d new Scanner(Paths.get(\"java\",\"duke\",\"delete-command\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"ZhaoPeiduo"},"content":"            Storage storage \u003d new Storage();","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"ZhaoPeiduo"},"content":"            Parser parser \u003d new Parser(new TaskList(storage));","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"ZhaoPeiduo"},"content":"            parser.parse(testScanner);","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"ZhaoPeiduo"},"content":"            assert(storage.getUserInputRecords().isEmpty());","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"ZhaoPeiduo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"ZhaoPeiduo"},"content":"            System.out.println(\"Test file does not exist\");","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"ZhaoPeiduo"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"ZhaoPeiduo"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"ZhaoPeiduo"},"content":"    public void parseAndTaskList_deleteAll_allEventsDeleted() {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"ZhaoPeiduo"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"ZhaoPeiduo"},"content":"            Scanner testScanner \u003d new Scanner(Paths.get(\"java\",\"duke\",\"deleteAll-command\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"ZhaoPeiduo"},"content":"            Storage storage \u003d new Storage();","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"ZhaoPeiduo"},"content":"            Parser parser \u003d new Parser(new TaskList(storage));","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"ZhaoPeiduo"},"content":"            parser.parse(testScanner);","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"ZhaoPeiduo"},"content":"            assert(storage.getUserInputRecords().isEmpty());","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"ZhaoPeiduo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"ZhaoPeiduo"},"content":"            System.out.println(\"Test file does not exist\");","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"ZhaoPeiduo"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"ZhaoPeiduo"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"ZhaoPeiduo":55}},{"path":"src/test/java/duke/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhaoPeiduo"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"ZhaoPeiduo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"ZhaoPeiduo"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"ZhaoPeiduo"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"ZhaoPeiduo"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"ZhaoPeiduo"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"ZhaoPeiduo"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"ZhaoPeiduo"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"ZhaoPeiduo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"ZhaoPeiduo"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"ZhaoPeiduo"},"content":"public class StorageTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"ZhaoPeiduo"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"ZhaoPeiduo"},"content":"    public void autoSaveTest_tasksEntered_AutomaticallySaved() {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"ZhaoPeiduo"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"ZhaoPeiduo"},"content":"            Scanner testScanner \u003d new Scanner(Paths.get(\"java\",\"duke\",\"autosave-command\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"ZhaoPeiduo"},"content":"            Storage storage \u003d new Storage();","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"ZhaoPeiduo"},"content":"            Parser parser \u003d new Parser(new TaskList(storage));","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"ZhaoPeiduo"},"content":"            parser.parse(testScanner);","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"ZhaoPeiduo"},"content":"            BufferedReader expectedReader \u003d new BufferedReader(new FileReader(String.valueOf(Path.of(\"java\",\"duke\",\"expected-storage\"))));","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"ZhaoPeiduo"},"content":"            BufferedReader actualReader \u003d new BufferedReader(new FileReader(String.valueOf(Path.of(\"data\",\"record\"))));","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"ZhaoPeiduo"},"content":"            String expected \u003d expectedReader.readLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"ZhaoPeiduo"},"content":"            String actual \u003d actualReader.readLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"ZhaoPeiduo"},"content":"            while (expected !\u003d null \u0026\u0026 actual !\u003d null) {","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"ZhaoPeiduo"},"content":"                assertEquals(expected,actual);","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"ZhaoPeiduo"},"content":"                expected \u003d expectedReader.readLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"ZhaoPeiduo"},"content":"                actual \u003d actualReader.readLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"ZhaoPeiduo"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"ZhaoPeiduo"},"content":"            if(expected !\u003d null || actual !\u003d null) {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"ZhaoPeiduo"},"content":"                fail();","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"ZhaoPeiduo"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"ZhaoPeiduo"},"content":"        }  catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"ZhaoPeiduo"},"content":"            System.out.println(\"Test file does not exist\");","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"ZhaoPeiduo"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"ZhaoPeiduo"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"ZhaoPeiduo"},"content":"    public void saveLoadTest_tasksEntered_savedAndLoaded() {","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"ZhaoPeiduo"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"ZhaoPeiduo"},"content":"            Scanner testScanner \u003d new Scanner(Paths.get(\"java\",\"duke\",\"save-load-command\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"ZhaoPeiduo"},"content":"            Storage storage \u003d new Storage();","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"ZhaoPeiduo"},"content":"            Parser parser \u003d new Parser(new TaskList(storage));","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"ZhaoPeiduo"},"content":"            parser.parse(testScanner);","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"ZhaoPeiduo"},"content":"            BufferedReader expectedReader \u003d new BufferedReader(new FileReader(String.valueOf(Path.of(\"java\",\"duke\",\"expected-storage\"))));","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"ZhaoPeiduo"},"content":"            BufferedReader actualReader \u003d new BufferedReader(new FileReader(String.valueOf(Path.of(\"data\",\"record\"))));","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"ZhaoPeiduo"},"content":"            String expected \u003d expectedReader.readLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"ZhaoPeiduo"},"content":"            String actual \u003d actualReader.readLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"ZhaoPeiduo"},"content":"            while (expected !\u003d null \u0026\u0026 actual !\u003d null) {","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"ZhaoPeiduo"},"content":"                assertEquals(expected,actual);","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"ZhaoPeiduo"},"content":"                expected \u003d expectedReader.readLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"ZhaoPeiduo"},"content":"                actual \u003d actualReader.readLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"ZhaoPeiduo"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"ZhaoPeiduo"},"content":"            if(expected !\u003d null || actual !\u003d null) {","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"ZhaoPeiduo"},"content":"                fail();","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"ZhaoPeiduo"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"ZhaoPeiduo"},"content":"        }  catch (IOException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"ZhaoPeiduo"},"content":"            System.out.println(\"Test file does not exist\");","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"ZhaoPeiduo"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"ZhaoPeiduo"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"ZhaoPeiduo":71}},{"path":"src/test/java/duke/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhaoPeiduo"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"ZhaoPeiduo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"ZhaoPeiduo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"ZhaoPeiduo"},"content":"public class ToDoTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"ZhaoPeiduo"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"ZhaoPeiduo"},"content":"    public void toDoTest_createInstance_sameStringRep() {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"ZhaoPeiduo"},"content":"        ToDo event \u003d new ToDo(\"Sleep\");","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"ZhaoPeiduo"},"content":"        assertEquals(event.toString(),\"[T][ ] Sleep\");","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"ZhaoPeiduo"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"ZhaoPeiduo":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ZhaoPeiduo"},"content":"todo borrow book","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"ZhaoPeiduo"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"ZhaoPeiduo"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"ZhaoPeiduo"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"ZhaoPeiduo"},"content":"deadline return book /by 2021-08-01","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"ZhaoPeiduo"},"content":"event project meeting /at 2021-08-06","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"ZhaoPeiduo"},"content":"todo","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"ZhaoPeiduo"},"content":"deadline","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"ZhaoPeiduo"},"content":"event","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"ZhaoPeiduo"},"content":"done 1","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"ZhaoPeiduo"},"content":"done 2","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"ZhaoPeiduo"},"content":"done 3","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"ZhaoPeiduo"},"content":"done 10","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"ZhaoPeiduo"},"content":"done errrr","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"ZhaoPeiduo"},"content":"delete 3","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"ZhaoPeiduo"},"content":"delete 2","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"ZhaoPeiduo"},"content":"delete 1","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"ZhaoPeiduo"},"content":"delete 10","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"ZhaoPeiduo"},"content":"delete errr","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"ZhaoPeiduo"},"content":"RandomCommand","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"ZhaoPeiduo"},"content":"bye","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"ZhaoPeiduo":21}}]
