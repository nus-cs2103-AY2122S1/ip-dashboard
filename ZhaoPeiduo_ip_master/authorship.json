[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"ZhaoPeiduo"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"ZhaoPeiduo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"ZhaoPeiduo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"ZhaoPeiduo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"ZhaoPeiduo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"ZhaoPeiduo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"ZhaoPeiduo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"ZhaoPeiduo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"ZhaoPeiduo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"ZhaoPeiduo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"ZhaoPeiduo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"ZhaoPeiduo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"ZhaoPeiduo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ZhaoPeiduo":14,"-":46}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"ZhaoPeiduo"},"content":"### Features:","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"ZhaoPeiduo"},"content":"- [x] Save and delete different types of tasks: todo, deadline, event;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"ZhaoPeiduo"},"content":"- [x] Set a saved task to be done;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"ZhaoPeiduo"},"content":"- [x] Autosave to and autoload user\u0027s data from a default directory;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"ZhaoPeiduo"},"content":"- [x] Allows user to save/load data from a specified directory;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"ZhaoPeiduo"},"content":"- [x] Search for task according to a specified key word.","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"ZhaoPeiduo"},"content":"- [ ]  An in-app user guideline (to be developed)","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"ZhaoPeiduo"},"content":"### Syntax List:","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"ZhaoPeiduo"},"content":"\u003eLegend for datatype:","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"ZhaoPeiduo"},"content":"\u003e1. **bolded** String","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"ZhaoPeiduo"},"content":"\u003e2. *italic* int","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"ZhaoPeiduo"},"content":"- todo \u003c**description**\u003e: create and save a todo task;","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"ZhaoPeiduo"},"content":"- deadline \u003c**description**\u003e /by \u003c**time in format yyyy-mm-dd**\u003e: create and save a deadline task;","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"ZhaoPeiduo"},"content":"- event \u003c**description**\u003e /at \u003c**time in format yyyy-mm-dd**\u003e: create and save an event task;","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"ZhaoPeiduo"},"content":"- save \u003c**directory**\u003e: save the current task list to the specified directory;","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"ZhaoPeiduo"},"content":"- load \u003c**directory**\u003e: load the task list from the specified directory;","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"ZhaoPeiduo"},"content":"- done \u003c*number*\u003e: mark the task with *number* index as done;","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"ZhaoPeiduo"},"content":"- delete \u003c*number*\u003e: delete the task with *number* index;","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"ZhaoPeiduo"},"content":"- deleteAll: delete all saved tasks in the task list;","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"ZhaoPeiduo"},"content":"- find \u003c**keyword**\u003e: find all tasks with description containing the **keyword**.","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"ZhaoPeiduo"},"content":"- help: shows the list of avaliable command(work in progress ⛔)Description of the outcome.","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"ZhaoPeiduo":22,"-":2}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhaoPeiduo"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"ZhaoPeiduo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"ZhaoPeiduo"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"ZhaoPeiduo"},"content":" * Represents a specific type of Task with an additional deadline field.","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"ZhaoPeiduo"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"ZhaoPeiduo"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"ZhaoPeiduo"},"content":"    private LocalDate deadline;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"ZhaoPeiduo"},"content":"     * The constructor for a Deadline Object.","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"ZhaoPeiduo"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"ZhaoPeiduo"},"content":"    public Deadline(String taskTitle, LocalDate deadline) {","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"ZhaoPeiduo"},"content":"        super(taskTitle);","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"ZhaoPeiduo"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"ZhaoPeiduo"},"content":"    public LocalDate getDdl() {","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"ZhaoPeiduo"},"content":"        return deadline;","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"ZhaoPeiduo"},"content":"     * Customizes the string representation of a deadline object.","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"ZhaoPeiduo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"ZhaoPeiduo"},"content":"     * @return string representation of a deadline in the form [D][{X}] {description} (by: {deadline})","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"ZhaoPeiduo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"ZhaoPeiduo"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"ZhaoPeiduo"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"ZhaoPeiduo"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + deadline.getMonth().toString() + \" \"","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"ZhaoPeiduo"},"content":"                + deadline.getDayOfMonth() + \" \" + deadline.getYear() + \")\";","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"ZhaoPeiduo"},"content":"     * Creates the string representation to be saved in external txt file.","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"ZhaoPeiduo"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"ZhaoPeiduo"},"content":"     * @return String representation to be saved in external txt file.","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"ZhaoPeiduo"},"content":"     * */","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"ZhaoPeiduo"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"ZhaoPeiduo"},"content":"    public String toStringRecord() {","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"ZhaoPeiduo"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + deadline.toString() + \")\";","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"ZhaoPeiduo"},"content":"     * Two deadline objects are equal iff they are equal tasks and they have the same ddl.","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"ZhaoPeiduo"},"content":"     * */","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"ZhaoPeiduo"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"ZhaoPeiduo"},"content":"    public boolean equals(Object another) {","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"ZhaoPeiduo"},"content":"        if (another instanceof Deadline) {","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"ZhaoPeiduo"},"content":"            Deadline anotherTask \u003d (Deadline) another;","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"ZhaoPeiduo"},"content":"            return super.equals(another) \u0026\u0026 deadline.equals(anotherTask.getDdl());","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"ZhaoPeiduo"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"ZhaoPeiduo"},"content":"        return false;","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":55,"author":{"gitId":"ZhaoPeiduo"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"ZhaoPeiduo":55}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhaoPeiduo"},"content":"package duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"ZhaoPeiduo"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"ZhaoPeiduo"},"content":"import java.util.Collections;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"ZhaoPeiduo"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"ZhaoPeiduo"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"ZhaoPeiduo"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"ZhaoPeiduo"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"ZhaoPeiduo"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"ZhaoPeiduo"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"ZhaoPeiduo"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"ZhaoPeiduo"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"ZhaoPeiduo"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"ZhaoPeiduo"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"ZhaoPeiduo"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"ZhaoPeiduo"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"ZhaoPeiduo"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"ZhaoPeiduo"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"ZhaoPeiduo"},"content":"import javafx.scene.paint.Paint;","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"ZhaoPeiduo"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"ZhaoPeiduo"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"ZhaoPeiduo"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"ZhaoPeiduo"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"ZhaoPeiduo"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"ZhaoPeiduo"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"ZhaoPeiduo"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"ZhaoPeiduo"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"ZhaoPeiduo"},"content":"    private Label dialog;","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"ZhaoPeiduo"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"ZhaoPeiduo"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"ZhaoPeiduo"},"content":"    private Circle circle;","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"ZhaoPeiduo"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"ZhaoPeiduo"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"ZhaoPeiduo"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"ZhaoPeiduo"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"ZhaoPeiduo"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"ZhaoPeiduo"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"ZhaoPeiduo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"ZhaoPeiduo"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"ZhaoPeiduo"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"ZhaoPeiduo"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"ZhaoPeiduo"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"ZhaoPeiduo"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"ZhaoPeiduo"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"ZhaoPeiduo"},"content":"    private void flip() {","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"ZhaoPeiduo"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"ZhaoPeiduo"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"ZhaoPeiduo"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"ZhaoPeiduo"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"ZhaoPeiduo"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"ZhaoPeiduo"},"content":"        var box \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"ZhaoPeiduo"},"content":"        Background background \u003d new Background(new BackgroundFill(Paint.valueOf(\"#00bfff\"),","lastModifiedDate":"2021-09-02"},{"lineNumber":62,"author":{"gitId":"ZhaoPeiduo"},"content":"                new CornerRadii(5.0), Insets.EMPTY));","lastModifiedDate":"2021-09-02"},{"lineNumber":63,"author":{"gitId":"ZhaoPeiduo"},"content":"        box.setBackground(background);","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"ZhaoPeiduo"},"content":"        return box;","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"ZhaoPeiduo"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"ZhaoPeiduo"},"content":"        var box \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-01"},{"lineNumber":69,"author":{"gitId":"ZhaoPeiduo"},"content":"        Background background \u003d new Background(new BackgroundFill(Paint.valueOf(\"#7fffd4\"),","lastModifiedDate":"2021-09-02"},{"lineNumber":70,"author":{"gitId":"ZhaoPeiduo"},"content":"                new CornerRadii(5.0), Insets.EMPTY));","lastModifiedDate":"2021-09-02"},{"lineNumber":71,"author":{"gitId":"ZhaoPeiduo"},"content":"        box.setBackground(background);","lastModifiedDate":"2021-09-01"},{"lineNumber":72,"author":{"gitId":"ZhaoPeiduo"},"content":"        box.flip();","lastModifiedDate":"2021-09-01"},{"lineNumber":73,"author":{"gitId":"ZhaoPeiduo"},"content":"        return box;","lastModifiedDate":"2021-09-01"},{"lineNumber":74,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":75,"author":{"gitId":"ZhaoPeiduo"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"ZhaoPeiduo":75}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhaoPeiduo"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"ZhaoPeiduo"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"ZhaoPeiduo"},"content":" * A driver class that initializes the the parser, task list and storage for the chatterbot.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"ZhaoPeiduo"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"ZhaoPeiduo"},"content":"    private Parser parser;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"ZhaoPeiduo"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"ZhaoPeiduo"},"content":"     * The constructor for a Duke Object.","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"ZhaoPeiduo"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"ZhaoPeiduo"},"content":"    public Duke() {","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"ZhaoPeiduo"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"ZhaoPeiduo"},"content":"        storage.autoLoad();","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"ZhaoPeiduo"},"content":"        parser \u003d new Parser(new TaskList(storage));","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"ZhaoPeiduo"},"content":"    public String getResponse(String userInput) {","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"ZhaoPeiduo"},"content":"        return parser.parse(userInput);","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ZhaoPeiduo":21,"-":2}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhaoPeiduo"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"ZhaoPeiduo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"ZhaoPeiduo"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"ZhaoPeiduo"},"content":" * Represents a specific type of Task with an additional date field.","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"ZhaoPeiduo"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"ZhaoPeiduo"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"ZhaoPeiduo"},"content":"    private LocalDate date;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"ZhaoPeiduo"},"content":"     * The constructor for an Event Object.","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"ZhaoPeiduo"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"ZhaoPeiduo"},"content":"    public Event(String taskTitle, LocalDate date) {","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"ZhaoPeiduo"},"content":"        super(taskTitle);","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"ZhaoPeiduo"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"ZhaoPeiduo"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"ZhaoPeiduo"},"content":"        return date;","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"ZhaoPeiduo"},"content":"     * Customizes the string representation of an event object.","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"ZhaoPeiduo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"ZhaoPeiduo"},"content":"     * @return string representation of an event in the form [E][{X}] {description} (at: {date})","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"ZhaoPeiduo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"ZhaoPeiduo"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"ZhaoPeiduo"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"ZhaoPeiduo"},"content":"        return \"[E]\" + super.toString() + \"(at: \" + date.getMonth().toString() + \" \"","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"ZhaoPeiduo"},"content":"                + date.getDayOfMonth() + \" \" + date.getYear() + \")\";","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"ZhaoPeiduo"},"content":"     * Creates the string representation to be saved in external txt file.","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"ZhaoPeiduo"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"ZhaoPeiduo"},"content":"     * @return String representation to be saved in external txt file.","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"ZhaoPeiduo"},"content":"     * */","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"ZhaoPeiduo"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"ZhaoPeiduo"},"content":"    public String toStringRecord() {","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"ZhaoPeiduo"},"content":"        return \"[E]\" + super.toString() + \"(at: \" + date.toString() + \")\";","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"ZhaoPeiduo"},"content":"     * Two event objects are equal iff they are equal tasks and they have the same date.","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"ZhaoPeiduo"},"content":"     * */","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"ZhaoPeiduo"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"ZhaoPeiduo"},"content":"    public boolean equals(Object another) {","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"ZhaoPeiduo"},"content":"        if (another instanceof Event) {","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"ZhaoPeiduo"},"content":"            Event anotherTask \u003d (Event) another;","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"ZhaoPeiduo"},"content":"            return super.equals(another) \u0026\u0026 date.equals(anotherTask.getDate());","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"ZhaoPeiduo"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"ZhaoPeiduo"},"content":"        return false;","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":55,"author":{"gitId":"ZhaoPeiduo"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"ZhaoPeiduo":55}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhaoPeiduo"},"content":"package duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"ZhaoPeiduo"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"ZhaoPeiduo"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"ZhaoPeiduo"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"ZhaoPeiduo"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"ZhaoPeiduo"},"content":"public class Launcher {","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"ZhaoPeiduo"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"ZhaoPeiduo"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"ZhaoPeiduo"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"ZhaoPeiduo":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhaoPeiduo"},"content":"package duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"ZhaoPeiduo"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"ZhaoPeiduo"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"ZhaoPeiduo"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"ZhaoPeiduo"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"ZhaoPeiduo"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"ZhaoPeiduo"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"ZhaoPeiduo"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"ZhaoPeiduo"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"ZhaoPeiduo"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"ZhaoPeiduo"},"content":"public class Main extends Application {","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"ZhaoPeiduo"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"ZhaoPeiduo"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"ZhaoPeiduo"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"ZhaoPeiduo"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"ZhaoPeiduo"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"ZhaoPeiduo"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"ZhaoPeiduo"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"ZhaoPeiduo"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"ZhaoPeiduo"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"ZhaoPeiduo"},"content":"            stage.show();","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"ZhaoPeiduo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"ZhaoPeiduo"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"ZhaoPeiduo"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"ZhaoPeiduo"},"content":"}","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"ZhaoPeiduo":32}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhaoPeiduo"},"content":"package duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"ZhaoPeiduo"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"ZhaoPeiduo"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"ZhaoPeiduo"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"ZhaoPeiduo"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"ZhaoPeiduo"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"ZhaoPeiduo"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"ZhaoPeiduo"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"ZhaoPeiduo"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"ZhaoPeiduo"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"ZhaoPeiduo"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"ZhaoPeiduo"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"ZhaoPeiduo"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"ZhaoPeiduo"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"ZhaoPeiduo"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"ZhaoPeiduo"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"ZhaoPeiduo"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"ZhaoPeiduo"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"ZhaoPeiduo"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"ZhaoPeiduo"},"content":"    private Button sendButton;","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"ZhaoPeiduo"},"content":"    private Duke duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"ZhaoPeiduo"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Tom.png\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"ZhaoPeiduo"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Jerry.png\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"ZhaoPeiduo"},"content":"     * Initialize the MainWindow.","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"ZhaoPeiduo"},"content":"     * */","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"ZhaoPeiduo"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"ZhaoPeiduo"},"content":"    public void initialize() {","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"ZhaoPeiduo"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"ZhaoPeiduo"},"content":"        String welcome \u003d \"Hello! I\u0027m Peoduo\\n\" + \"Can I help you?\\n\";","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"ZhaoPeiduo"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(welcome, dukeImage));","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"ZhaoPeiduo"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"ZhaoPeiduo"},"content":"        duke \u003d d;","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"ZhaoPeiduo"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"ZhaoPeiduo"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"ZhaoPeiduo"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"ZhaoPeiduo"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"ZhaoPeiduo"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"ZhaoPeiduo"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"ZhaoPeiduo"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"ZhaoPeiduo"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"ZhaoPeiduo"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"ZhaoPeiduo"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"ZhaoPeiduo"},"content":"        );","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"ZhaoPeiduo"},"content":"        userInput.clear();","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"ZhaoPeiduo"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"ZhaoPeiduo":58}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhaoPeiduo"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"ZhaoPeiduo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"ZhaoPeiduo"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"ZhaoPeiduo"},"content":" * Parse user\u0027s input, identify whether it is a valid command and calls relevant method(s) to execute the command.","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"ZhaoPeiduo"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"ZhaoPeiduo"},"content":"public class Parser {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"ZhaoPeiduo"},"content":"    private final TaskList tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"ZhaoPeiduo"},"content":"     * The constructor for a Parser Object.","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"ZhaoPeiduo"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"ZhaoPeiduo"},"content":"    public Parser(TaskList tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"ZhaoPeiduo"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"ZhaoPeiduo"},"content":"     * This method checks if a String starting with delete is a delete command.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"ZhaoPeiduo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"ZhaoPeiduo"},"content":"     * @param userInput input from the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"ZhaoPeiduo"},"content":"     * @return whether the user input can be taken as a delete command.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"ZhaoPeiduo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"ZhaoPeiduo"},"content":"    private boolean checkDeleteCommand(String userInput) {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"ZhaoPeiduo"},"content":"        String copy \u003d userInput.replace(\"delete\", \"\");","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"ZhaoPeiduo"},"content":"        copy \u003d copy.replaceAll(\"[0-9]\", \"\");","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"ZhaoPeiduo"},"content":"        copy \u003d copy.trim();","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"ZhaoPeiduo"},"content":"        return copy.isEmpty();","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"ZhaoPeiduo"},"content":"     *  This method checks if a String starting with done is a done command.","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"ZhaoPeiduo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"ZhaoPeiduo"},"content":"     * @param userInput input from the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"ZhaoPeiduo"},"content":"     * @return whether the user input can be taken as a done command.","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"ZhaoPeiduo"},"content":"     **/","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"ZhaoPeiduo"},"content":"    private boolean checkDoneCommand(String userInput) {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"ZhaoPeiduo"},"content":"        String copy \u003d userInput.replace(\"done\", \"\");","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"ZhaoPeiduo"},"content":"        //Learnt from https://attacomsian.com/blog/java-extract-digits-from-string","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"ZhaoPeiduo"},"content":"        copy \u003d copy.replaceAll(\"[0-9]\", \"\");","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"ZhaoPeiduo"},"content":"        copy \u003d copy.trim();","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"ZhaoPeiduo"},"content":"        return copy.isEmpty();","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"ZhaoPeiduo"},"content":"     * Parses the user\u0027s command and calls relevant method to execute the command.","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"ZhaoPeiduo"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"ZhaoPeiduo"},"content":"     * @param userInput the command from the user.","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"ZhaoPeiduo"},"content":"     * @return the response generated by executing user\u0027s command","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"ZhaoPeiduo"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"ZhaoPeiduo"},"content":"    public String parse(String userInput) {","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"ZhaoPeiduo"},"content":"        if (userInput.equals(\"list\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"ZhaoPeiduo"},"content":"            return printList();","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"ZhaoPeiduo"},"content":"        } else if (userInput.startsWith(\"done\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"ZhaoPeiduo"},"content":"            return printDoneMessage(userInput);","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"ZhaoPeiduo"},"content":"        } else if (userInput.equals(\"deleteAll\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"ZhaoPeiduo"},"content":"            return tasks.deleteAll(tasks.getStorage().getUserInputRecords());","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"ZhaoPeiduo"},"content":"        } else if (userInput.startsWith(\"delete\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"ZhaoPeiduo"},"content":"            return printDeleteMessage(userInput);","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"ZhaoPeiduo"},"content":"        } else if (userInput.startsWith(\"save \")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"ZhaoPeiduo"},"content":"            return tasks.getStorage().save(userInput);","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"ZhaoPeiduo"},"content":"        } else if (userInput.startsWith(\"load \")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"ZhaoPeiduo"},"content":"            return tasks.getStorage().load(userInput);","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"ZhaoPeiduo"},"content":"        } else if (userInput.startsWith(\"find\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"ZhaoPeiduo"},"content":"            return tasks.search(userInput, tasks.getStorage().getUserInputRecords());","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"ZhaoPeiduo"},"content":"        } else if (userInput.equals(\"help\")) {","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"ZhaoPeiduo"},"content":"            return printHelpMessage();","lastModifiedDate":"2021-09-01"},{"lineNumber":69,"author":{"gitId":"ZhaoPeiduo"},"content":"        } else if (userInput.startsWith(\"todo\") || userInput.startsWith(\"deadline\")","lastModifiedDate":"2021-09-01"},{"lineNumber":70,"author":{"gitId":"ZhaoPeiduo"},"content":"                || userInput.startsWith(\"event\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":71,"author":{"gitId":"ZhaoPeiduo"},"content":"            return tasks.add(userInput, tasks.getStorage().getUserInputRecords());","lastModifiedDate":"2021-09-01"},{"lineNumber":72,"author":{"gitId":"ZhaoPeiduo"},"content":"        } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":73,"author":{"gitId":"ZhaoPeiduo"},"content":"            return \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\";","lastModifiedDate":"2021-09-01"},{"lineNumber":74,"author":{"gitId":"ZhaoPeiduo"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":75,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":76,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":77,"author":{"gitId":"ZhaoPeiduo"},"content":"    private String printHelpMessage() {","lastModifiedDate":"2021-09-01"},{"lineNumber":78,"author":{"gitId":"ZhaoPeiduo"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-08-29"},{"lineNumber":79,"author":{"gitId":"ZhaoPeiduo"},"content":"        builder.append(\"todo \u003cdescription\u003e\\n\");","lastModifiedDate":"2021-08-29"},{"lineNumber":80,"author":{"gitId":"ZhaoPeiduo"},"content":"        builder.append(\"deadline \u003cdescription\u003e/by \u003ctime in format yyyy-mm-dd\u003e\\n\");","lastModifiedDate":"2021-08-29"},{"lineNumber":81,"author":{"gitId":"ZhaoPeiduo"},"content":"        builder.append(\"event \u003cdescription\u003e/at \u003ctime in format yyyy-mm-dd\u003e\\n\");","lastModifiedDate":"2021-08-29"},{"lineNumber":82,"author":{"gitId":"ZhaoPeiduo"},"content":"        builder.append(\"save \u003cdirectory\u003e\\n\");","lastModifiedDate":"2021-08-29"},{"lineNumber":83,"author":{"gitId":"ZhaoPeiduo"},"content":"        builder.append(\"load \u003cdirectory\u003e\\n\");","lastModifiedDate":"2021-08-29"},{"lineNumber":84,"author":{"gitId":"ZhaoPeiduo"},"content":"        builder.append(\"done \u003cnumber\u003e\\n\");","lastModifiedDate":"2021-08-29"},{"lineNumber":85,"author":{"gitId":"ZhaoPeiduo"},"content":"        builder.append(\"delete \u003cnumber\u003e\\n\");","lastModifiedDate":"2021-08-29"},{"lineNumber":86,"author":{"gitId":"ZhaoPeiduo"},"content":"        builder.append(\"deleteAll\\n\");","lastModifiedDate":"2021-08-29"},{"lineNumber":87,"author":{"gitId":"ZhaoPeiduo"},"content":"        builder.append(\"find \u003ckeyword\u003e\\n\");","lastModifiedDate":"2021-08-29"},{"lineNumber":88,"author":{"gitId":"ZhaoPeiduo"},"content":"        return builder.toString();","lastModifiedDate":"2021-08-29"},{"lineNumber":89,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":90,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":91,"author":{"gitId":"ZhaoPeiduo"},"content":"    private String printList() {","lastModifiedDate":"2021-09-01"},{"lineNumber":92,"author":{"gitId":"ZhaoPeiduo"},"content":"        ArrayList\u003cTask\u003e userInputRecords \u003d tasks.getStorage().getUserInputRecords();","lastModifiedDate":"2021-09-01"},{"lineNumber":93,"author":{"gitId":"ZhaoPeiduo"},"content":"        if (userInputRecords.isEmpty()) {","lastModifiedDate":"2021-09-01"},{"lineNumber":94,"author":{"gitId":"ZhaoPeiduo"},"content":"            return \"Ah oh, seems like nothing is added yet :( \\n\" + \"Try to input something first! \\n\";","lastModifiedDate":"2021-09-01"},{"lineNumber":95,"author":{"gitId":"ZhaoPeiduo"},"content":"        } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":96,"author":{"gitId":"ZhaoPeiduo"},"content":"            StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-09-01"},{"lineNumber":97,"author":{"gitId":"ZhaoPeiduo"},"content":"            stringBuilder.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2021-09-01"},{"lineNumber":98,"author":{"gitId":"ZhaoPeiduo"},"content":"            for (int i \u003d 0; i \u003c userInputRecords.size(); i++) {","lastModifiedDate":"2021-09-01"},{"lineNumber":99,"author":{"gitId":"ZhaoPeiduo"},"content":"                stringBuilder.append(\"  \" + (i + 1) + \".\" + userInputRecords.get(i) + \"\\n\");","lastModifiedDate":"2021-09-01"},{"lineNumber":100,"author":{"gitId":"ZhaoPeiduo"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":101,"author":{"gitId":"ZhaoPeiduo"},"content":"            return stringBuilder.toString();","lastModifiedDate":"2021-09-01"},{"lineNumber":102,"author":{"gitId":"ZhaoPeiduo"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":103,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":104,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":105,"author":{"gitId":"ZhaoPeiduo"},"content":"    private String printDeleteMessage(String userInput) {","lastModifiedDate":"2021-09-01"},{"lineNumber":106,"author":{"gitId":"ZhaoPeiduo"},"content":"        if (checkDeleteCommand(userInput)) {","lastModifiedDate":"2021-09-01"},{"lineNumber":107,"author":{"gitId":"ZhaoPeiduo"},"content":"            return tasks.delete(userInput, tasks.getStorage().getUserInputRecords());","lastModifiedDate":"2021-09-01"},{"lineNumber":108,"author":{"gitId":"ZhaoPeiduo"},"content":"        } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":109,"author":{"gitId":"ZhaoPeiduo"},"content":"            return \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\";","lastModifiedDate":"2021-09-01"},{"lineNumber":110,"author":{"gitId":"ZhaoPeiduo"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":111,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":112,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":113,"author":{"gitId":"ZhaoPeiduo"},"content":"    private String printDoneMessage(String userInput) {","lastModifiedDate":"2021-09-01"},{"lineNumber":114,"author":{"gitId":"ZhaoPeiduo"},"content":"        if (checkDoneCommand(userInput)) {","lastModifiedDate":"2021-09-01"},{"lineNumber":115,"author":{"gitId":"ZhaoPeiduo"},"content":"            return tasks.markAsDone(userInput, tasks.getStorage().getUserInputRecords());","lastModifiedDate":"2021-09-01"},{"lineNumber":116,"author":{"gitId":"ZhaoPeiduo"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":117,"author":{"gitId":"ZhaoPeiduo"},"content":"            return \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\";","lastModifiedDate":"2021-08-29"},{"lineNumber":118,"author":{"gitId":"ZhaoPeiduo"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":119,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":120,"author":{"gitId":"ZhaoPeiduo"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"ZhaoPeiduo":120}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhaoPeiduo"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"ZhaoPeiduo"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"ZhaoPeiduo"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"ZhaoPeiduo"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"ZhaoPeiduo"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"ZhaoPeiduo"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"ZhaoPeiduo"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"ZhaoPeiduo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"ZhaoPeiduo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"ZhaoPeiduo"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"ZhaoPeiduo"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"ZhaoPeiduo"},"content":" * The storage class is in charge of recording the user\u0027s input and loading saved user record.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"ZhaoPeiduo"},"content":" * Saving and loading tasks are done automatically by default, but a user can save and load the tasks to a specified","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"ZhaoPeiduo"},"content":" * directory by using the save/load command.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"ZhaoPeiduo"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"ZhaoPeiduo"},"content":"public class Storage {","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"ZhaoPeiduo"},"content":"    private ArrayList\u003cTask\u003e userInputRecords;","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"ZhaoPeiduo"},"content":"     * The constructor for a Storage Object.","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"ZhaoPeiduo"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"ZhaoPeiduo"},"content":"    public Storage() {","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"ZhaoPeiduo"},"content":"        this.userInputRecords \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"ZhaoPeiduo"},"content":"     * Automatically(without any user command) loads the users inputs from ../data/record when the program is restarted.","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"ZhaoPeiduo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"ZhaoPeiduo"},"content":"    public void autoLoad() {","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"ZhaoPeiduo"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"ZhaoPeiduo"},"content":"            Scanner scanner \u003d new Scanner(Paths.get(\"data\", \"record\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"ZhaoPeiduo"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"ZhaoPeiduo"},"content":"                String itemInfo \u003d scanner.nextLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"ZhaoPeiduo"},"content":"                addTask(itemInfo);","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"ZhaoPeiduo"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"ZhaoPeiduo"},"content":"            scanner.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"ZhaoPeiduo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"ZhaoPeiduo"},"content":"            System.out.println(\"Saved data not found, a new data file created.\\n\");","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"ZhaoPeiduo"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"ZhaoPeiduo"},"content":"     * Automatically(without any user command) saves the users inputs to ../data/record.","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"ZhaoPeiduo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"ZhaoPeiduo"},"content":"    public void autoSave() {","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"ZhaoPeiduo"},"content":"        boolean directoryExists \u003d Files.exists(Paths.get(\"data\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"ZhaoPeiduo"},"content":"        boolean fileExists \u003d Files.exists(Paths.get(\"data\", \"record\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"ZhaoPeiduo"},"content":"        if (!directoryExists) {","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"ZhaoPeiduo"},"content":"            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"ZhaoPeiduo"},"content":"                Files.createDirectory(Path.of(\"data\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"ZhaoPeiduo"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"ZhaoPeiduo"},"content":"                System.out.println(\"This directory already exists!\\n\");","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"ZhaoPeiduo"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"ZhaoPeiduo"},"content":"        } else if (!fileExists) {","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"ZhaoPeiduo"},"content":"            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"ZhaoPeiduo"},"content":"                Files.createFile(Path.of(\"data\", \"record\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"ZhaoPeiduo"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"ZhaoPeiduo"},"content":"                System.out.println(\"This file already exists!\\n\");","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"ZhaoPeiduo"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"ZhaoPeiduo"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"ZhaoPeiduo"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"ZhaoPeiduo"},"content":"            FileWriter writer \u003d new FileWriter(Paths.get(\"data\", \"record\").toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"ZhaoPeiduo"},"content":"            for (Task task : userInputRecords) {","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"ZhaoPeiduo"},"content":"                writer.write(task.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"ZhaoPeiduo"},"content":"                writer.write(System.getProperty(\"line.separator\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"ZhaoPeiduo"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"ZhaoPeiduo"},"content":"            writer.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"ZhaoPeiduo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"ZhaoPeiduo"},"content":"            System.out.println(\"An unknown error has occurred.\\n\");","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"ZhaoPeiduo"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"ZhaoPeiduo"},"content":"    public ArrayList\u003cTask\u003e getUserInputRecords() {","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"ZhaoPeiduo"},"content":"        return userInputRecords;","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"ZhaoPeiduo"},"content":"     * Loads the current task list from a user-specified file, upon receiving a load command.","lastModifiedDate":"2021-08-28"},{"lineNumber":82,"author":{"gitId":"ZhaoPeiduo"},"content":"     * Texts not recorded in the standard format wll be ignored.","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"ZhaoPeiduo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"ZhaoPeiduo"},"content":"     * @param filePath the filepath indicated by the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"ZhaoPeiduo"},"content":"     * @return the response on whether a file is successfully loaded.","lastModifiedDate":"2021-08-30"},{"lineNumber":86,"author":{"gitId":"ZhaoPeiduo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"ZhaoPeiduo"},"content":"    public String load(String filePath) {","lastModifiedDate":"2021-08-29"},{"lineNumber":88,"author":{"gitId":"ZhaoPeiduo"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"ZhaoPeiduo"},"content":"            filePath \u003d filePath.replace(\"load \", \"\");","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"ZhaoPeiduo"},"content":"            Scanner scanner \u003d new Scanner(Paths.get(filePath));","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"ZhaoPeiduo"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"ZhaoPeiduo"},"content":"                String itemInfo \u003d scanner.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"ZhaoPeiduo"},"content":"                addTask(itemInfo);","lastModifiedDate":"2021-09-01"},{"lineNumber":94,"author":{"gitId":"ZhaoPeiduo"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"ZhaoPeiduo"},"content":"            scanner.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"ZhaoPeiduo"},"content":"            return \"Load successfully.\\n\";","lastModifiedDate":"2021-08-29"},{"lineNumber":97,"author":{"gitId":"ZhaoPeiduo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"ZhaoPeiduo"},"content":"            return \"Saved data not found.\\n\";","lastModifiedDate":"2021-08-29"},{"lineNumber":99,"author":{"gitId":"ZhaoPeiduo"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":100,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":101,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":102,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"ZhaoPeiduo"},"content":"     * Saves the current task list to a user-specified file, upon receiving a save command.","lastModifiedDate":"2021-08-28"},{"lineNumber":104,"author":{"gitId":"ZhaoPeiduo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"ZhaoPeiduo"},"content":"     * @param filePath the filepath indicated by the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"ZhaoPeiduo"},"content":"     * @return the response on whether a file is successfully saved.","lastModifiedDate":"2021-08-30"},{"lineNumber":107,"author":{"gitId":"ZhaoPeiduo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"ZhaoPeiduo"},"content":"    public String save(String filePath) {","lastModifiedDate":"2021-08-29"},{"lineNumber":109,"author":{"gitId":"ZhaoPeiduo"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"ZhaoPeiduo"},"content":"            filePath \u003d filePath.replace(\"save \", \"\");","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"ZhaoPeiduo"},"content":"            Files.deleteIfExists(Path.of(filePath));","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"ZhaoPeiduo"},"content":"            Files.createFile(Path.of(filePath));","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"ZhaoPeiduo"},"content":"            FileWriter writer \u003d new FileWriter(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"ZhaoPeiduo"},"content":"            for (Task task : userInputRecords) {","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"ZhaoPeiduo"},"content":"                writer.write(task.toStringRecord());","lastModifiedDate":"2021-09-02"},{"lineNumber":116,"author":{"gitId":"ZhaoPeiduo"},"content":"                writer.write(System.getProperty(\"line.separator\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"ZhaoPeiduo"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"ZhaoPeiduo"},"content":"            writer.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"ZhaoPeiduo"},"content":"            autoSave();","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"ZhaoPeiduo"},"content":"            return \"Save successfully.\\n\";","lastModifiedDate":"2021-08-29"},{"lineNumber":121,"author":{"gitId":"ZhaoPeiduo"},"content":"        } catch (IOException | InvalidPathException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"ZhaoPeiduo"},"content":"            return \"Invalid file path detected, please try again.\\n\";","lastModifiedDate":"2021-08-29"},{"lineNumber":123,"author":{"gitId":"ZhaoPeiduo"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":125,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":126,"author":{"gitId":"ZhaoPeiduo"},"content":"    private void addTask(String taskRecord) {","lastModifiedDate":"2021-09-01"},{"lineNumber":127,"author":{"gitId":"ZhaoPeiduo"},"content":"        int indexForDescriptionStart \u003d 7;","lastModifiedDate":"2021-09-01"},{"lineNumber":128,"author":{"gitId":"ZhaoPeiduo"},"content":"        int indexForTimeStart \u003d 5;","lastModifiedDate":"2021-09-01"},{"lineNumber":129,"author":{"gitId":"ZhaoPeiduo"},"content":"        Task task;","lastModifiedDate":"2021-09-01"},{"lineNumber":130,"author":{"gitId":"ZhaoPeiduo"},"content":"        if (taskRecord.startsWith(\"[T]\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":131,"author":{"gitId":"ZhaoPeiduo"},"content":"            task \u003d new ToDo(taskRecord.substring(indexForDescriptionStart));","lastModifiedDate":"2021-09-01"},{"lineNumber":132,"author":{"gitId":"ZhaoPeiduo"},"content":"        } else if (taskRecord.startsWith(\"[D]\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":133,"author":{"gitId":"ZhaoPeiduo"},"content":"            task \u003d new Deadline(taskRecord.substring(indexForDescriptionStart, taskRecord.indexOf(\"(by\")),","lastModifiedDate":"2021-09-01"},{"lineNumber":134,"author":{"gitId":"ZhaoPeiduo"},"content":"                    LocalDate.parse(taskRecord.substring(taskRecord.indexOf(\"(by\") + indexForTimeStart,","lastModifiedDate":"2021-09-02"},{"lineNumber":135,"author":{"gitId":"ZhaoPeiduo"},"content":"                            taskRecord.length() - 1)));","lastModifiedDate":"2021-09-01"},{"lineNumber":136,"author":{"gitId":"ZhaoPeiduo"},"content":"        } else if (taskRecord.startsWith(\"[E]\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":137,"author":{"gitId":"ZhaoPeiduo"},"content":"            task \u003d new Event(taskRecord.substring(indexForDescriptionStart, taskRecord.indexOf(\"(at\")),","lastModifiedDate":"2021-09-01"},{"lineNumber":138,"author":{"gitId":"ZhaoPeiduo"},"content":"                    LocalDate.parse(taskRecord.substring(taskRecord.indexOf(\"(at\") + indexForTimeStart,","lastModifiedDate":"2021-09-02"},{"lineNumber":139,"author":{"gitId":"ZhaoPeiduo"},"content":"                            taskRecord.length() - 1)));","lastModifiedDate":"2021-09-01"},{"lineNumber":140,"author":{"gitId":"ZhaoPeiduo"},"content":"        } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":141,"author":{"gitId":"ZhaoPeiduo"},"content":"            //Should not reach here unless the file is corrupted; skip the line that is not properly formatted.","lastModifiedDate":"2021-09-01"},{"lineNumber":142,"author":{"gitId":"ZhaoPeiduo"},"content":"            return;","lastModifiedDate":"2021-09-01"},{"lineNumber":143,"author":{"gitId":"ZhaoPeiduo"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":144,"author":{"gitId":"ZhaoPeiduo"},"content":"        setDone(taskRecord, task);","lastModifiedDate":"2021-09-01"},{"lineNumber":145,"author":{"gitId":"ZhaoPeiduo"},"content":"        userInputRecords.add(task);","lastModifiedDate":"2021-09-01"},{"lineNumber":146,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":147,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":148,"author":{"gitId":"ZhaoPeiduo"},"content":"    private void setDone(String taskRecord, Task task) {","lastModifiedDate":"2021-09-01"},{"lineNumber":149,"author":{"gitId":"ZhaoPeiduo"},"content":"        if (taskRecord.contains(\"[X]\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":150,"author":{"gitId":"ZhaoPeiduo"},"content":"            task.setDone(true);","lastModifiedDate":"2021-09-01"},{"lineNumber":151,"author":{"gitId":"ZhaoPeiduo"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":152,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":153,"author":{"gitId":"ZhaoPeiduo"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"ZhaoPeiduo":153}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhaoPeiduo"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"ZhaoPeiduo"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"ZhaoPeiduo"},"content":" * Represents a task with a description and a status.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"ZhaoPeiduo"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"ZhaoPeiduo"},"content":"public class Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"ZhaoPeiduo"},"content":"    private final String taskTitle;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"ZhaoPeiduo"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"ZhaoPeiduo"},"content":"     * The constructor for a Task Object.","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"ZhaoPeiduo"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"ZhaoPeiduo"},"content":"    public Task(String taskTitle) {","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"ZhaoPeiduo"},"content":"        this.taskTitle \u003d taskTitle;","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"ZhaoPeiduo"},"content":"        //When a task is first created, it is by default not completed.","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"ZhaoPeiduo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"ZhaoPeiduo"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"ZhaoPeiduo"},"content":"        this.isDone \u003d done;","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"ZhaoPeiduo"},"content":"    public String getTaskTitle() {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"ZhaoPeiduo"},"content":"        return taskTitle;","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"ZhaoPeiduo"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"ZhaoPeiduo"},"content":"        return isDone;","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"ZhaoPeiduo"},"content":"     * Customizes the string representation of a task object.","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"ZhaoPeiduo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"ZhaoPeiduo"},"content":"     * @return string representation of a task in the form [][{X}] {description}","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"ZhaoPeiduo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"ZhaoPeiduo"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":37,"author":{"gitId":"ZhaoPeiduo"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":38,"author":{"gitId":"ZhaoPeiduo"},"content":"        if (isDone) {","lastModifiedDate":"2021-08-15"},{"lineNumber":39,"author":{"gitId":"ZhaoPeiduo"},"content":"            return \"[X] \" + taskTitle;","lastModifiedDate":"2021-08-15"},{"lineNumber":40,"author":{"gitId":"ZhaoPeiduo"},"content":"        } else {","lastModifiedDate":"2021-08-15"},{"lineNumber":41,"author":{"gitId":"ZhaoPeiduo"},"content":"            return \"[ ] \" + taskTitle;","lastModifiedDate":"2021-08-15"},{"lineNumber":42,"author":{"gitId":"ZhaoPeiduo"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":43,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":44,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"ZhaoPeiduo"},"content":"     * Creates the string representation to be saved in external txt file.","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"ZhaoPeiduo"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"ZhaoPeiduo"},"content":"     * @return String representation to be saved in external txt file.","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"ZhaoPeiduo"},"content":"     * */","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"ZhaoPeiduo"},"content":"    public String toStringRecord() {","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"ZhaoPeiduo"},"content":"        return this.toString();","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"ZhaoPeiduo"},"content":"     * Two task objects are equal iff they have the same task title and same isDone value.","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"ZhaoPeiduo"},"content":"     * */","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"ZhaoPeiduo"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"ZhaoPeiduo"},"content":"    public boolean equals(Object another) {","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"ZhaoPeiduo"},"content":"        if (another instanceof Task) {","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"ZhaoPeiduo"},"content":"            Task anotherTask \u003d (Task) another;","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"ZhaoPeiduo"},"content":"            return isDone \u003d\u003d anotherTask.getIsDone() \u0026\u0026 taskTitle.equals(anotherTask.getTaskTitle());","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"ZhaoPeiduo"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"ZhaoPeiduo"},"content":"        return false;","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"ZhaoPeiduo"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"ZhaoPeiduo":65}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhaoPeiduo"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"ZhaoPeiduo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"ZhaoPeiduo"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"ZhaoPeiduo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"ZhaoPeiduo"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"ZhaoPeiduo"},"content":" * The TaskList class is in charge of executing the users command on the saved record, as instructed by the parser.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"ZhaoPeiduo"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"ZhaoPeiduo"},"content":"public class TaskList {","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"ZhaoPeiduo"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"ZhaoPeiduo"},"content":"     * The constructor for a TaskList Object.","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"ZhaoPeiduo"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"ZhaoPeiduo"},"content":"    public TaskList(Storage storage) {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"ZhaoPeiduo"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"ZhaoPeiduo"},"content":"     * Adds the user\u0027s input to the saved record only if the user\u0027s input is of a specific form.","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"ZhaoPeiduo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"ZhaoPeiduo"},"content":"     * @param userInput        input from the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"ZhaoPeiduo"},"content":"     * @param userInputRecords the saved record.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"ZhaoPeiduo"},"content":"     * @return the response on whether a task is successfully added.","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"ZhaoPeiduo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"ZhaoPeiduo"},"content":"    public String add(String userInput, ArrayList\u003cTask\u003e userInputRecords) {","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"ZhaoPeiduo"},"content":"        Task task;","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"ZhaoPeiduo"},"content":"        if (userInput.startsWith(\"todo\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"ZhaoPeiduo"},"content":"            String description \u003d userInput.substring(5);","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"ZhaoPeiduo"},"content":"            if (description.trim().isEmpty()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"ZhaoPeiduo"},"content":"                return \"OOPS!!! The description of a todo cannot be empty.\\n\";","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"ZhaoPeiduo"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"ZhaoPeiduo"},"content":"            task \u003d new ToDo(description);","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"ZhaoPeiduo"},"content":"        } else if (userInput.startsWith(\"deadline\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"ZhaoPeiduo"},"content":"            try {","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"ZhaoPeiduo"},"content":"                int lengthOfDeadlineString \u003d 9;","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"ZhaoPeiduo"},"content":"                int byPosition \u003d userInput.lastIndexOf(\"/by\");","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"ZhaoPeiduo"},"content":"                String description \u003d userInput.substring(lengthOfDeadlineString, byPosition);","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"ZhaoPeiduo"},"content":"                LocalDate deadline \u003d LocalDate.parse(userInput.substring(byPosition + 4));","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"ZhaoPeiduo"},"content":"                task \u003d new Deadline(description, deadline);","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"ZhaoPeiduo"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"ZhaoPeiduo"},"content":"                return \"OOPS!!! The description of a deadline cannot be empty.\\n\";","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"ZhaoPeiduo"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"ZhaoPeiduo"},"content":"                return \"Please enter a valid date in the format:/at yyyy-mm-dd!\\n\";","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"ZhaoPeiduo"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"ZhaoPeiduo"},"content":"        } else if (userInput.startsWith(\"event\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"ZhaoPeiduo"},"content":"            try {","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"ZhaoPeiduo"},"content":"                int lengthOfEventString \u003d 6;","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"ZhaoPeiduo"},"content":"                int atPosition \u003d userInput.lastIndexOf(\"/at\");","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"ZhaoPeiduo"},"content":"                String description \u003d userInput.substring(lengthOfEventString, atPosition);","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"ZhaoPeiduo"},"content":"                LocalDate time \u003d LocalDate.parse(userInput.substring(atPosition + 4));","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"ZhaoPeiduo"},"content":"                task \u003d new Event(description, time);","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"ZhaoPeiduo"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"ZhaoPeiduo"},"content":"                return \"OOPS!!! The description of an event cannot be empty.\\n\";","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"ZhaoPeiduo"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"ZhaoPeiduo"},"content":"                return \"Please enter a valid date in the format:/at yyyy-mm-dd!\\n\";","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"ZhaoPeiduo"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"ZhaoPeiduo"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"ZhaoPeiduo"},"content":"            //Should not reach here","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"ZhaoPeiduo"},"content":"            return \"unexpected error.\";","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"ZhaoPeiduo"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"ZhaoPeiduo"},"content":"        userInputRecords.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"ZhaoPeiduo"},"content":"        storage.autoSave();","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"ZhaoPeiduo"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + task + \"\\n\" + \"Now you have \"","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"ZhaoPeiduo"},"content":"                + userInputRecords.size() + \" tasks in the list.\\n\";","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"ZhaoPeiduo"},"content":"     * Deletes the user-specified event, according to the task index.","lastModifiedDate":"2021-08-28"},{"lineNumber":72,"author":{"gitId":"ZhaoPeiduo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"ZhaoPeiduo"},"content":"     * @param userInput        input from the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"ZhaoPeiduo"},"content":"     * @param userInputRecords the saved record.","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"ZhaoPeiduo"},"content":"     * @return the response on whether a task is successfully deleted.","lastModifiedDate":"2021-08-30"},{"lineNumber":76,"author":{"gitId":"ZhaoPeiduo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"ZhaoPeiduo"},"content":"    public String delete(String userInput, ArrayList\u003cTask\u003e userInputRecords) {","lastModifiedDate":"2021-08-29"},{"lineNumber":78,"author":{"gitId":"ZhaoPeiduo"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"ZhaoPeiduo"},"content":"            int itemToDelete \u003d Integer.parseInt(userInput.replaceAll(\"[^0-9]\", \"\")) - 1;","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"ZhaoPeiduo"},"content":"            Task itemDeleted \u003d userInputRecords.get(itemToDelete);","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"ZhaoPeiduo"},"content":"            userInputRecords.remove(itemToDelete);","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"ZhaoPeiduo"},"content":"            storage.autoSave();","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"ZhaoPeiduo"},"content":"            return \"Noted. I\u0027ve removed this task:\\n\" + itemDeleted + \"\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":84,"author":{"gitId":"ZhaoPeiduo"},"content":"                    + \"Now you have \" + userInputRecords.size() + \" tasks in the list.\\n\";","lastModifiedDate":"2021-08-29"},{"lineNumber":85,"author":{"gitId":"ZhaoPeiduo"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":86,"author":{"gitId":"ZhaoPeiduo"},"content":"            return \"Oops, the ID of the task does not exist!\\n\";","lastModifiedDate":"2021-08-29"},{"lineNumber":87,"author":{"gitId":"ZhaoPeiduo"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":88,"author":{"gitId":"ZhaoPeiduo"},"content":"            return \"Please enter a valid ID!\\n\";","lastModifiedDate":"2021-08-29"},{"lineNumber":89,"author":{"gitId":"ZhaoPeiduo"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":91,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":92,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"ZhaoPeiduo"},"content":"     * Deletes all tasks saved in the record.","lastModifiedDate":"2021-08-28"},{"lineNumber":94,"author":{"gitId":"ZhaoPeiduo"},"content":"     * @return the response on whether all tasks are successfully deleted.","lastModifiedDate":"2021-08-30"},{"lineNumber":95,"author":{"gitId":"ZhaoPeiduo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"ZhaoPeiduo"},"content":"    public String deleteAll(ArrayList\u003cTask\u003e userInputRecords) {","lastModifiedDate":"2021-08-29"},{"lineNumber":97,"author":{"gitId":"ZhaoPeiduo"},"content":"        userInputRecords.clear();","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"ZhaoPeiduo"},"content":"        storage.autoSave();","lastModifiedDate":"2021-08-29"},{"lineNumber":99,"author":{"gitId":"ZhaoPeiduo"},"content":"        return \"All records deleted!\\n\";","lastModifiedDate":"2021-08-29"},{"lineNumber":100,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"ZhaoPeiduo"},"content":"    public Storage getStorage() {","lastModifiedDate":"2021-08-22"},{"lineNumber":103,"author":{"gitId":"ZhaoPeiduo"},"content":"        return storage;","lastModifiedDate":"2021-08-22"},{"lineNumber":104,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":105,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"ZhaoPeiduo"},"content":"     * Marks the user-specified event as done, according to the task index.","lastModifiedDate":"2021-08-28"},{"lineNumber":108,"author":{"gitId":"ZhaoPeiduo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"ZhaoPeiduo"},"content":"     * @param userInput        input from the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"ZhaoPeiduo"},"content":"     * @param userInputRecords the saved record.","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"ZhaoPeiduo"},"content":"     * @return the response on whether a task is successfully marked done.","lastModifiedDate":"2021-08-30"},{"lineNumber":112,"author":{"gitId":"ZhaoPeiduo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"ZhaoPeiduo"},"content":"    public String markAsDone(String userInput, ArrayList\u003cTask\u003e userInputRecords) {","lastModifiedDate":"2021-08-29"},{"lineNumber":114,"author":{"gitId":"ZhaoPeiduo"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"ZhaoPeiduo"},"content":"            int itemIndex \u003d Integer.parseInt(userInput.replaceAll(\"[^0-9]\", \"\")) - 1;","lastModifiedDate":"2021-09-02"},{"lineNumber":116,"author":{"gitId":"ZhaoPeiduo"},"content":"            Task taskDone \u003d userInputRecords.get(itemIndex);","lastModifiedDate":"2021-09-02"},{"lineNumber":117,"author":{"gitId":"ZhaoPeiduo"},"content":"            taskDone.setDone(true);","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"ZhaoPeiduo"},"content":"            userInputRecords.set(itemIndex, taskDone);","lastModifiedDate":"2021-09-02"},{"lineNumber":119,"author":{"gitId":"ZhaoPeiduo"},"content":"            storage.autoSave();","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"ZhaoPeiduo"},"content":"            return \"Nice! I\u0027ve marked this task as done:\\n\" + userInputRecords.get(itemIndex) + \"\\n\";","lastModifiedDate":"2021-09-02"},{"lineNumber":121,"author":{"gitId":"ZhaoPeiduo"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"ZhaoPeiduo"},"content":"            return \"Oops, the ID of the task does not exist!\\n\";","lastModifiedDate":"2021-08-29"},{"lineNumber":123,"author":{"gitId":"ZhaoPeiduo"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"ZhaoPeiduo"},"content":"            return \"Please enter a valid ID!\\n\";","lastModifiedDate":"2021-08-29"},{"lineNumber":125,"author":{"gitId":"ZhaoPeiduo"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"ZhaoPeiduo"},"content":"     * Searches for the events according to the user-specified keyword.","lastModifiedDate":"2021-08-28"},{"lineNumber":130,"author":{"gitId":"ZhaoPeiduo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"ZhaoPeiduo"},"content":"     * @param userInput        input from the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":132,"author":{"gitId":"ZhaoPeiduo"},"content":"     * @param userInputRecords the saved record.","lastModifiedDate":"2021-08-24"},{"lineNumber":133,"author":{"gitId":"ZhaoPeiduo"},"content":"     * @return the response on whether a task is successfully found.","lastModifiedDate":"2021-08-30"},{"lineNumber":134,"author":{"gitId":"ZhaoPeiduo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":135,"author":{"gitId":"ZhaoPeiduo"},"content":"    public String search(String userInput, ArrayList\u003cTask\u003e userInputRecords) {","lastModifiedDate":"2021-08-29"},{"lineNumber":136,"author":{"gitId":"ZhaoPeiduo"},"content":"        String keyword \u003d userInput.replace(\"find\", \"\").trim();","lastModifiedDate":"2021-08-24"},{"lineNumber":137,"author":{"gitId":"ZhaoPeiduo"},"content":"        ArrayList\u003cTask\u003e searchResults \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-02"},{"lineNumber":138,"author":{"gitId":"ZhaoPeiduo"},"content":"        for (Task userInputRecord : userInputRecords) {","lastModifiedDate":"2021-08-24"},{"lineNumber":139,"author":{"gitId":"ZhaoPeiduo"},"content":"            String taskTitle \u003d userInputRecord.getTaskTitle();","lastModifiedDate":"2021-08-24"},{"lineNumber":140,"author":{"gitId":"ZhaoPeiduo"},"content":"            if (taskTitle.contains(keyword)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":141,"author":{"gitId":"ZhaoPeiduo"},"content":"                searchResults.add(userInputRecord);","lastModifiedDate":"2021-09-02"},{"lineNumber":142,"author":{"gitId":"ZhaoPeiduo"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":143,"author":{"gitId":"ZhaoPeiduo"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":144,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":145,"author":{"gitId":"ZhaoPeiduo"},"content":"        if (searchResults.isEmpty()) {","lastModifiedDate":"2021-09-02"},{"lineNumber":146,"author":{"gitId":"ZhaoPeiduo"},"content":"            return \"Oops,there is no record for the keyword \" + keyword + \"\\n\";","lastModifiedDate":"2021-08-29"},{"lineNumber":147,"author":{"gitId":"ZhaoPeiduo"},"content":"        } else {","lastModifiedDate":"2021-08-29"},{"lineNumber":148,"author":{"gitId":"ZhaoPeiduo"},"content":"            StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-08-29"},{"lineNumber":149,"author":{"gitId":"ZhaoPeiduo"},"content":"            builder.append(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2021-08-29"},{"lineNumber":150,"author":{"gitId":"ZhaoPeiduo"},"content":"            for (int i \u003d 0; i \u003c searchResults.size(); i++) {","lastModifiedDate":"2021-09-02"},{"lineNumber":151,"author":{"gitId":"ZhaoPeiduo"},"content":"                builder.append(\"     \" + (i + 1) + \".\" + searchResults.get(i));","lastModifiedDate":"2021-09-02"},{"lineNumber":152,"author":{"gitId":"ZhaoPeiduo"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":153,"author":{"gitId":"ZhaoPeiduo"},"content":"            return builder.toString();","lastModifiedDate":"2021-08-29"},{"lineNumber":154,"author":{"gitId":"ZhaoPeiduo"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":155,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":156,"author":{"gitId":"ZhaoPeiduo"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"ZhaoPeiduo":156}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhaoPeiduo"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"ZhaoPeiduo"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"ZhaoPeiduo"},"content":" * Represents a specific type of Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"ZhaoPeiduo"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"ZhaoPeiduo"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"ZhaoPeiduo"},"content":"     * The constructor for a Todo Object.","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"ZhaoPeiduo"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"ZhaoPeiduo"},"content":"    public ToDo(String taskTitle) {","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"ZhaoPeiduo"},"content":"        super(taskTitle);","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"ZhaoPeiduo"},"content":"     * Customizes the string representation of a todo object.","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"ZhaoPeiduo"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"ZhaoPeiduo"},"content":"     * @return string representation of a deadline in the form [T][{X}] {description}","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"ZhaoPeiduo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"ZhaoPeiduo"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"ZhaoPeiduo"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"ZhaoPeiduo"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"ZhaoPeiduo"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"ZhaoPeiduo"},"content":"     * Two todo objects are equal iff they are equal tasks and they are both ToDo objects.","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"ZhaoPeiduo"},"content":"     * */","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"ZhaoPeiduo"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"ZhaoPeiduo"},"content":"    public boolean equals(Object another) {","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"ZhaoPeiduo"},"content":"        if (another instanceof ToDo) {","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"ZhaoPeiduo"},"content":"            return super.equals(another);","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"ZhaoPeiduo"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"ZhaoPeiduo"},"content":"        return false;","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"ZhaoPeiduo"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"ZhaoPeiduo":35}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ZhaoPeiduo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"ZhaoPeiduo"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"ZhaoPeiduo"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"ZhaoPeiduo"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"ZhaoPeiduo"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"ZhaoPeiduo"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"ZhaoPeiduo"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"ZhaoPeiduo"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"ZhaoPeiduo"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"ZhaoPeiduo"},"content":"  \u003c/children\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"ZhaoPeiduo"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"ZhaoPeiduo"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"ZhaoPeiduo"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"ZhaoPeiduo"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"ZhaoPeiduo":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ZhaoPeiduo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"ZhaoPeiduo"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"ZhaoPeiduo"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"ZhaoPeiduo"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"ZhaoPeiduo"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"ZhaoPeiduo"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"ZhaoPeiduo"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"ZhaoPeiduo"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"ZhaoPeiduo"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"ZhaoPeiduo"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"ZhaoPeiduo"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"ZhaoPeiduo"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"ZhaoPeiduo"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"ZhaoPeiduo"},"content":"      \u003c/content\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"ZhaoPeiduo"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"ZhaoPeiduo"},"content":"  \u003c/children\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"ZhaoPeiduo"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"ZhaoPeiduo":19}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhaoPeiduo"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"ZhaoPeiduo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"ZhaoPeiduo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"ZhaoPeiduo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"ZhaoPeiduo"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"ZhaoPeiduo"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"ZhaoPeiduo"},"content":"    public void deadlineTest_createInstance_sameStringRep() {","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"ZhaoPeiduo"},"content":"        Deadline deadline \u003d new Deadline(\"Finish Assignment\", LocalDate.of(2021, 8, 7));","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"ZhaoPeiduo"},"content":"        assertEquals(deadline.toString(), \"[D][ ] Finish Assignment(by: AUGUST 7 2021)\");","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"ZhaoPeiduo"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"ZhaoPeiduo":15}},{"path":"src/test/java/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhaoPeiduo"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"ZhaoPeiduo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"ZhaoPeiduo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"ZhaoPeiduo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"ZhaoPeiduo"},"content":"public class EventTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"ZhaoPeiduo"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"ZhaoPeiduo"},"content":"    public void eventTest_createInstance_sameStringRep() {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"ZhaoPeiduo"},"content":"        Event event \u003d new Event(\"Go for concert\", LocalDate.of(2021, 8, 1));","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"ZhaoPeiduo"},"content":"        assertEquals(event.toString(), \"[E][ ] Go for concert(at: AUGUST 1 2021)\");","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"ZhaoPeiduo"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"ZhaoPeiduo":15}},{"path":"src/test/java/duke/ParserTaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhaoPeiduo"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"ZhaoPeiduo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"ZhaoPeiduo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"ZhaoPeiduo"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"ZhaoPeiduo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"ZhaoPeiduo"},"content":"public class ParserTaskListTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"ZhaoPeiduo"},"content":"    @Test","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"ZhaoPeiduo"},"content":"    public void parseAndTaskList_addAndMarkDone_eventsCreatedAndMarkedDone() {","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"ZhaoPeiduo"},"content":"        Scanner testScanner \u003d new Scanner(\"todo sleep\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"ZhaoPeiduo"},"content":"                + \"deadline assignment /by 2021-08-09\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"ZhaoPeiduo"},"content":"                + \"event meeting /at 2021-08-01\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"ZhaoPeiduo"},"content":"                + \"done 1\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"ZhaoPeiduo"},"content":"                + \"done 2\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"ZhaoPeiduo"},"content":"                + \"done 3\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"ZhaoPeiduo"},"content":"                + \"bye\");","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"ZhaoPeiduo"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"ZhaoPeiduo"},"content":"        Parser parser \u003d new Parser(new TaskList(storage));","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"ZhaoPeiduo"},"content":"        while (testScanner.hasNextLine()) {","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"ZhaoPeiduo"},"content":"            parser.parse(testScanner.nextLine());","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"ZhaoPeiduo"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"ZhaoPeiduo"},"content":"        assertEquals(storage.getUserInputRecords().get(0).toString(), \"[T][X] sleep\");","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"ZhaoPeiduo"},"content":"        assertEquals(storage.getUserInputRecords().get(1).toString(), \"[D][X] assignment (by: AUGUST 9 2021)\");","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"ZhaoPeiduo"},"content":"        assertEquals(storage.getUserInputRecords().get(2).toString(), \"[E][X] meeting (at: AUGUST 1 2021)\");","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"ZhaoPeiduo"},"content":"    @Test","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"ZhaoPeiduo"},"content":"    public void parseAndTaskList_delete_eventsDeleted() {","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"ZhaoPeiduo"},"content":"        Scanner testScanner \u003d new Scanner(\"todo task 1\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"ZhaoPeiduo"},"content":"                + \"todo task 2\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"ZhaoPeiduo"},"content":"                + \"todo task 3\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"ZhaoPeiduo"},"content":"                + \"delete 3\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"ZhaoPeiduo"},"content":"                + \"delete 2\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"ZhaoPeiduo"},"content":"                + \"bye\");","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"ZhaoPeiduo"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"ZhaoPeiduo"},"content":"        ArrayList\u003cTask\u003e expectedRecord \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"ZhaoPeiduo"},"content":"        expectedRecord.add(new ToDo(\"task 1\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"ZhaoPeiduo"},"content":"        Parser parser \u003d new Parser(new TaskList(storage));","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"ZhaoPeiduo"},"content":"        while (testScanner.hasNextLine()) {","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"ZhaoPeiduo"},"content":"            parser.parse(testScanner.nextLine());","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"ZhaoPeiduo"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"ZhaoPeiduo"},"content":"        assertEquals(storage.getUserInputRecords(), expectedRecord);","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"ZhaoPeiduo"},"content":"    @Test","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"ZhaoPeiduo"},"content":"    public void parseAndTaskList_deleteAll_allEventsDeleted() {","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"ZhaoPeiduo"},"content":"        Scanner testScanner \u003d new Scanner(\"todo task 1\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"ZhaoPeiduo"},"content":"                + \"todo task 2\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"ZhaoPeiduo"},"content":"                + \"todo task 3\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"ZhaoPeiduo"},"content":"                + \"deleteAll\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"ZhaoPeiduo"},"content":"                + \"bye\");","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"ZhaoPeiduo"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"ZhaoPeiduo"},"content":"        Parser parser \u003d new Parser(new TaskList(storage));","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"ZhaoPeiduo"},"content":"        while (testScanner.hasNextLine()) {","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"ZhaoPeiduo"},"content":"            parser.parse(testScanner.nextLine());","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"ZhaoPeiduo"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"ZhaoPeiduo"},"content":"        assert (storage.getUserInputRecords().isEmpty());","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"ZhaoPeiduo"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"ZhaoPeiduo":62}},{"path":"src/test/java/duke/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhaoPeiduo"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"ZhaoPeiduo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"ZhaoPeiduo"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"ZhaoPeiduo"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"ZhaoPeiduo"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"ZhaoPeiduo"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"ZhaoPeiduo"},"content":"import org.junit.jupiter.api.AfterAll;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"ZhaoPeiduo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"ZhaoPeiduo"},"content":"public class StorageTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"ZhaoPeiduo"},"content":"    private void readTestInputs(Scanner testScanner, Parser parser) {","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"ZhaoPeiduo"},"content":"        while (testScanner.hasNextLine()) {","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"ZhaoPeiduo"},"content":"            parser.parse(testScanner.nextLine());","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"ZhaoPeiduo"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"ZhaoPeiduo"},"content":"    @Test","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"ZhaoPeiduo"},"content":"    public void autoSaveTest_tasksEntered_automaticallySaved() {","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"ZhaoPeiduo"},"content":"        Scanner testScanner \u003d new Scanner(\"todo sleep\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"ZhaoPeiduo"},"content":"                + \"deadline assignment/by 2021-08-09\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"ZhaoPeiduo"},"content":"                + \"event meeting/at 2021-08-01\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"ZhaoPeiduo"},"content":"                + \"done 1\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"ZhaoPeiduo"},"content":"                + \"done 2\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"ZhaoPeiduo"},"content":"                + \"done 3\\n\");","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"ZhaoPeiduo"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"ZhaoPeiduo"},"content":"        Parser parser \u003d new Parser(new TaskList(storage));","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"ZhaoPeiduo"},"content":"        readTestInputs(testScanner, parser);","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"ZhaoPeiduo"},"content":"        StubStorage stubStorage \u003d new StubStorage();","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"ZhaoPeiduo"},"content":"        stubStorage.setExpectedResults();","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"ZhaoPeiduo"},"content":"        assertEquals(stubStorage.getUserInputRecords(), storage.getUserInputRecords());","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"ZhaoPeiduo"},"content":"    @Test","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"ZhaoPeiduo"},"content":"    public void saveLoadTest_tasksEntered_savedAndLoaded() {","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"ZhaoPeiduo"},"content":"        Scanner testScanner \u003d new Scanner(\"todo sleep\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"ZhaoPeiduo"},"content":"                + \"deadline assignment/by 2021-08-09\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"ZhaoPeiduo"},"content":"                + \"event meeting/at 2021-08-01\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"ZhaoPeiduo"},"content":"                + \"done 1\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"ZhaoPeiduo"},"content":"                + \"done 2\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"ZhaoPeiduo"},"content":"                + \"done 3\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"ZhaoPeiduo"},"content":"                + \"save data/another-record\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"ZhaoPeiduo"},"content":"                + \"deleteAll\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"ZhaoPeiduo"},"content":"                + \"load data/another-record\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"ZhaoPeiduo"},"content":"                + \"bye\");","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"ZhaoPeiduo"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"ZhaoPeiduo"},"content":"        Parser parser \u003d new Parser(new TaskList(storage));","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"ZhaoPeiduo"},"content":"        readTestInputs(testScanner, parser);","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"ZhaoPeiduo"},"content":"        StubStorage stubStorage \u003d new StubStorage();","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"ZhaoPeiduo"},"content":"        stubStorage.setExpectedResults();","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"ZhaoPeiduo"},"content":"        assertEquals(stubStorage.getUserInputRecords(), storage.getUserInputRecords());","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"ZhaoPeiduo"},"content":"    @AfterAll","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"ZhaoPeiduo"},"content":"    private static void cleanUp() {","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"ZhaoPeiduo"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":62,"author":{"gitId":"ZhaoPeiduo"},"content":"            Storage storage \u003d new Storage();","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"ZhaoPeiduo"},"content":"            Parser parser \u003d new Parser(new TaskList(storage));","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"ZhaoPeiduo"},"content":"            parser.parse(\"deleteAll\");","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"ZhaoPeiduo"},"content":"            Files.delete(Path.of(\"data\", \"another-record\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":66,"author":{"gitId":"ZhaoPeiduo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":67,"author":{"gitId":"ZhaoPeiduo"},"content":"            System.out.println(\"Error during clean up\" + e);","lastModifiedDate":"2021-09-02"},{"lineNumber":68,"author":{"gitId":"ZhaoPeiduo"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":69,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":70,"author":{"gitId":"ZhaoPeiduo"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"ZhaoPeiduo":70}},{"path":"src/test/java/duke/StubStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhaoPeiduo"},"content":"package duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"ZhaoPeiduo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"ZhaoPeiduo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"ZhaoPeiduo"},"content":"public class StubStorage extends Storage {","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"ZhaoPeiduo"},"content":"    private ArrayList\u003cTask\u003e userInputRecords;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"ZhaoPeiduo"},"content":"    public StubStorage() {","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"ZhaoPeiduo"},"content":"        this.userInputRecords \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"ZhaoPeiduo"},"content":"    public void setExpectedResults() {","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"ZhaoPeiduo"},"content":"        ToDo todoTestcase \u003d new ToDo(\"sleep\");","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"ZhaoPeiduo"},"content":"        Deadline deadlineTestcase \u003d new Deadline(\"assignment\", LocalDate.of(2021, 8, 9));","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"ZhaoPeiduo"},"content":"        Event eventTestcase \u003d new Event(\"meeting\", LocalDate.of(2021, 8, 1));","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"ZhaoPeiduo"},"content":"        todoTestcase.setDone(true);","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"ZhaoPeiduo"},"content":"        deadlineTestcase.setDone(true);","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"ZhaoPeiduo"},"content":"        eventTestcase.setDone(true);","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"ZhaoPeiduo"},"content":"        userInputRecords.add(todoTestcase);","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"ZhaoPeiduo"},"content":"        userInputRecords.add(deadlineTestcase);","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"ZhaoPeiduo"},"content":"        userInputRecords.add(eventTestcase);","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"ZhaoPeiduo"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"ZhaoPeiduo"},"content":"    public ArrayList\u003cTask\u003e getUserInputRecords() {","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"ZhaoPeiduo"},"content":"        return this.userInputRecords;","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"ZhaoPeiduo"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"ZhaoPeiduo":29}},{"path":"src/test/java/duke/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZhaoPeiduo"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"ZhaoPeiduo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"ZhaoPeiduo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"ZhaoPeiduo"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"ZhaoPeiduo"},"content":"public class ToDoTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"ZhaoPeiduo"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"ZhaoPeiduo"},"content":"    public void toDoTest_createInstance_sameStringRep() {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"ZhaoPeiduo"},"content":"        ToDo event \u003d new ToDo(\"Sleep\");","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"ZhaoPeiduo"},"content":"        assertEquals(event.toString(), \"[T][ ] Sleep\");","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"ZhaoPeiduo"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"ZhaoPeiduo"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"ZhaoPeiduo":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ZhaoPeiduo"},"content":"todo borrow book","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"ZhaoPeiduo"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"ZhaoPeiduo"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"ZhaoPeiduo"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"ZhaoPeiduo"},"content":"deadline return book /by 2021-08-01","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"ZhaoPeiduo"},"content":"event project meeting /at 2021-08-06","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"ZhaoPeiduo"},"content":"todo","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"ZhaoPeiduo"},"content":"deadline","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"ZhaoPeiduo"},"content":"event","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"ZhaoPeiduo"},"content":"done 1","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"ZhaoPeiduo"},"content":"done 2","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"ZhaoPeiduo"},"content":"done 3","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"ZhaoPeiduo"},"content":"done 10","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"ZhaoPeiduo"},"content":"done errrr","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"ZhaoPeiduo"},"content":"delete 3","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"ZhaoPeiduo"},"content":"delete 2","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"ZhaoPeiduo"},"content":"delete 1","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"ZhaoPeiduo"},"content":"delete 10","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"ZhaoPeiduo"},"content":"delete errr","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"ZhaoPeiduo"},"content":"RandomCommand","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"ZhaoPeiduo"},"content":"bye","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"ZhaoPeiduo":21}}]
