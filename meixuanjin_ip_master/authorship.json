[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"meixuanjin"},"content":"# duke.Duke project template","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"meixuanjin"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"meixuanjin":2,"-":22}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"meixuanjin"},"content":"[E][X] hi  (at: Oct 10 2020 1800)","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"meixuanjin"},"content":"[T][ ] hi","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"meixuanjin"},"content":"[E][ ] jshen lim  (at: Oct 10 2020 1800)","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"meixuanjin"},"content":"[T][ ] hi","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"meixuanjin"},"content":"[T][ ] hi","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"meixuanjin"},"content":"[T][ ] hfkuwrghaukh","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"meixuanjin":6}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meixuanjin"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"meixuanjin"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"meixuanjin"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"meixuanjin"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"meixuanjin"},"content":"import java.io.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"meixuanjin"},"content":"import java.util.*;","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"meixuanjin"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"meixuanjin"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"meixuanjin"},"content":" * This is a Duke application, which allows for user interaction.","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"meixuanjin"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"meixuanjin"},"content":"    private final static String LINE \u003d \"-----------------------------------------\";","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"meixuanjin"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"meixuanjin"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"meixuanjin"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"meixuanjin"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"meixuanjin"},"content":"        Ui.sayHello();","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"meixuanjin"},"content":"        String task \u003d sc.nextLine();","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"meixuanjin"},"content":"        Storage.readFromFile();","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"meixuanjin"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"meixuanjin"},"content":"        while(!task.equals(\"bye\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"meixuanjin"},"content":"            try {","lastModifiedDate":"2021-08-20"},{"lineNumber":23,"author":{"gitId":"meixuanjin"},"content":"                if (task.equals(\"list\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"meixuanjin"},"content":"                    TaskList.printList();","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"meixuanjin"},"content":"                } else if (task.startsWith(\"done\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"meixuanjin"},"content":"                    TaskList.complete(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"meixuanjin"},"content":"                    Storage.overwrite();","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"meixuanjin"},"content":"                } else if (task.startsWith(\"find\")) {","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"meixuanjin"},"content":"                    String[] input \u003d task.split(\"find \", 2);","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"meixuanjin"},"content":"                    TaskList.find(input[1]);","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"meixuanjin"},"content":"                }else if (task.startsWith(\"deadline\") || task.startsWith(\"event\") || task.startsWith(\"todo\")) {","lastModifiedDate":"2021-08-20"},{"lineNumber":32,"author":{"gitId":"meixuanjin"},"content":"                    Storage.writeToFile(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"meixuanjin"},"content":"                } else if (task.startsWith(\"delete\")) {","lastModifiedDate":"2021-08-20"},{"lineNumber":34,"author":{"gitId":"meixuanjin"},"content":"                    String numString \u003d task.replaceAll(\"[^0-9]\", \"\");","lastModifiedDate":"2021-08-20"},{"lineNumber":35,"author":{"gitId":"meixuanjin"},"content":"                    int num \u003d Integer.parseInt(numString);","lastModifiedDate":"2021-08-20"},{"lineNumber":36,"author":{"gitId":"meixuanjin"},"content":"                    TaskList.deleteTask(num);","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"meixuanjin"},"content":"                    Storage.overwrite();","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"meixuanjin"},"content":"                } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"meixuanjin"},"content":"                    throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-20"},{"lineNumber":40,"author":{"gitId":"meixuanjin"},"content":"                }","lastModifiedDate":"2021-08-20"},{"lineNumber":41,"author":{"gitId":"meixuanjin"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-20"},{"lineNumber":42,"author":{"gitId":"meixuanjin"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2021-08-20"},{"lineNumber":43,"author":{"gitId":"meixuanjin"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"meixuanjin"},"content":"            task \u003d sc.nextLine();","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"meixuanjin"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"meixuanjin"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"meixuanjin"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"meixuanjin"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"meixuanjin"},"content":"        sc.close();","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"meixuanjin"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"meixuanjin"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"meixuanjin":50,"-":1}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meixuanjin"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"meixuanjin"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"meixuanjin"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"meixuanjin"},"content":" * An exception class for Duke.","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"meixuanjin"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"meixuanjin"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"meixuanjin"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"meixuanjin"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"meixuanjin"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"meixuanjin"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"meixuanjin":10}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meixuanjin"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"meixuanjin"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"meixuanjin"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"meixuanjin"},"content":" * Parses the user\u0027s input.","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"meixuanjin"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"meixuanjin"},"content":"public class Parser {","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"meixuanjin"},"content":"    static void parseTask(String input) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"meixuanjin"},"content":"        switch (input) {","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"meixuanjin"},"content":"            case \"deadline\" -\u003e throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"meixuanjin"},"content":"            case \"event\" -\u003e throw new DukeException(\"OOPS!!! The description of a event cannot be empty.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"meixuanjin"},"content":"            case \"todo\" -\u003e throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"meixuanjin"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"meixuanjin"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"meixuanjin"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"meixuanjin":14}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meixuanjin"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"meixuanjin"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"meixuanjin"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"meixuanjin"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"meixuanjin"},"content":"import java.io.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"meixuanjin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"meixuanjin"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"meixuanjin"},"content":" * Represents the file containing the list of tasks.","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"meixuanjin"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"meixuanjin"},"content":"public class Storage {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"meixuanjin"},"content":"    private static final String text \u003d \"./data/duke.txt\";","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"meixuanjin"},"content":"    private static BufferedWriter writer;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"meixuanjin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"meixuanjin"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"meixuanjin"},"content":"     * Takes in a task and adds it to the tasklist, while writing it to the file","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"meixuanjin"},"content":"     * @param task Task ot be added.","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"meixuanjin"},"content":"     * @throws IOException if an error while reading has occurred.","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"meixuanjin"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"meixuanjin"},"content":"    static void writeToFile(String task) throws IOException {","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"meixuanjin"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"meixuanjin"},"content":"            Parser.parseTask(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"meixuanjin"},"content":"            if (task.startsWith(\"deadline\") ||","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"meixuanjin"},"content":"                    (task.startsWith(\"event\") \u0026\u0026 task.contains(\"/at \")) ||","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"meixuanjin"},"content":"                    (task.startsWith(\"todo\"))) {","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"meixuanjin"},"content":"                TaskList.addSpecificTask(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"meixuanjin"},"content":"                writer.write(TaskList.getLast().toString() + \"\\n\");","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"meixuanjin"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"meixuanjin"},"content":"            writer.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"meixuanjin"},"content":"            FileWriter fWriter \u003d new FileWriter(text, true);","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"meixuanjin"},"content":"            writer \u003d new BufferedWriter(fWriter);","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"meixuanjin"},"content":"        } catch (IOException | DukeException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"meixuanjin"},"content":"            System.out.println(\"Something went wrong\");","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"meixuanjin"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"meixuanjin"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"meixuanjin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"meixuanjin"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"meixuanjin"},"content":"     * Loads the task list from the duke.txt file and returns void.","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"meixuanjin"},"content":"     * @throws IOException if an error while reading has occurred.","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"meixuanjin"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"meixuanjin"},"content":"    static void readFromFile() throws IOException {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"meixuanjin"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"meixuanjin"},"content":"            //create a BufferedReader which loads the data when duke.Duke starts up","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"meixuanjin"},"content":"            String line;","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"meixuanjin"},"content":"            FileReader fReader \u003d new FileReader(text);","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"meixuanjin"},"content":"            BufferedReader reader \u003d new BufferedReader(fReader);","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"meixuanjin"},"content":"            FileWriter fWriter \u003d new FileWriter(text, true);","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"meixuanjin"},"content":"            writer \u003d new BufferedWriter(fWriter);","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"meixuanjin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"meixuanjin"},"content":"            //reading data","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"meixuanjin"},"content":"            while((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"meixuanjin"},"content":"                String[] curr \u003d new String[4];","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"meixuanjin"},"content":"                curr[0] \u003d line.substring(1,2);","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"meixuanjin"},"content":"                curr[1] \u003d line.substring(4,5);","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"meixuanjin"},"content":"                curr[2] \u003d line.substring(7);","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"meixuanjin"},"content":"                switch (curr[1]) {","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"meixuanjin"},"content":"                    case \"T\" -\u003e {","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"meixuanjin"},"content":"                        TaskList.addSpecificTask(\"todo \" + curr[2]);","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"meixuanjin"},"content":"                        if (curr[1].equals(\"X\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"meixuanjin"},"content":"                            TaskList.getLast().markAsDone();","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"meixuanjin"},"content":"                        }","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"meixuanjin"},"content":"                    }","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"meixuanjin"},"content":"                    case \"E\" -\u003e {","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"meixuanjin"},"content":"                        TaskList.addSpecificTask(\"event \" + curr[2]);","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"meixuanjin"},"content":"                        if (curr[1].equals(\"X\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"meixuanjin"},"content":"                            TaskList.getLast().markAsDone();","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"meixuanjin"},"content":"                        }","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"meixuanjin"},"content":"                    }","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"meixuanjin"},"content":"                    case \"D\" -\u003e {","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"meixuanjin"},"content":"                        TaskList.addSpecificTask(\"deadline \" + curr[2]);","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"meixuanjin"},"content":"                        if (curr[1].equals(\"X\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"meixuanjin"},"content":"                            TaskList.getLast().markAsDone();","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"meixuanjin"},"content":"                        }","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"meixuanjin"},"content":"                    }","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"meixuanjin"},"content":"                    default -\u003e {","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"meixuanjin"},"content":"                    }","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"meixuanjin"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"meixuanjin"},"content":"                reader.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"meixuanjin"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"meixuanjin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"meixuanjin"},"content":"            FileWriter fWriter \u003d new FileWriter(text, true);","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"meixuanjin"},"content":"            writer \u003d new BufferedWriter(fWriter);","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"meixuanjin"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"meixuanjin"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"meixuanjin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"meixuanjin"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":86,"author":{"gitId":"meixuanjin"},"content":"     * Rewrites the duke.txt file with the new list of tasks.","lastModifiedDate":"2021-08-29"},{"lineNumber":87,"author":{"gitId":"meixuanjin"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":88,"author":{"gitId":"meixuanjin"},"content":"    public static void overwrite() throws IOException {","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"meixuanjin"},"content":"        FileWriter fWriter \u003d new FileWriter(text, false);","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"meixuanjin"},"content":"        writer \u003d new BufferedWriter(fWriter);","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"meixuanjin"},"content":"        writer.write(TaskList.overwrite());","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"meixuanjin"},"content":"        writer.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"meixuanjin"},"content":"        FileWriter newWriter \u003d new FileWriter(text, true);","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"meixuanjin"},"content":"        writer \u003d new BufferedWriter(newWriter);","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"meixuanjin"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"meixuanjin"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"meixuanjin":96}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meixuanjin"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"meixuanjin"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"meixuanjin"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"meixuanjin"},"content":" * UI of the Duke application.","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"meixuanjin"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"meixuanjin"},"content":"public class Ui {","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"meixuanjin"},"content":"    private final static String LINE \u003d \"-----------------------------------------\";","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"meixuanjin"},"content":"    private final static String DEFAULT_MESSAGE \u003d LINE + \"\\nHello! I\u0027m duke.Duke \\nWhat can I do for you?\\n\" + LINE;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"meixuanjin"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"meixuanjin"},"content":"    public static void sayHello() {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"meixuanjin"},"content":"        System.out.println(DEFAULT_MESSAGE);","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"meixuanjin"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"meixuanjin"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"meixuanjin":13}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meixuanjin"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"meixuanjin"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"meixuanjin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"meixuanjin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"meixuanjin"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"meixuanjin"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"meixuanjin"},"content":" * Represents a Deadline task.","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"meixuanjin"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"meixuanjin"},"content":"public class Deadline extends Tasks {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"meixuanjin"},"content":"    protected static final DateTimeFormatter formatted \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\");","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"meixuanjin"},"content":"    protected LocalDateTime dueTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"meixuanjin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"meixuanjin"},"content":"    public Deadline(String description, LocalDateTime dueTime) {","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"meixuanjin"},"content":"        super(description.substring(9, description.indexOf(\"/by\")));","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"meixuanjin"},"content":"        this.dueTime \u003d dueTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"meixuanjin"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"meixuanjin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"meixuanjin"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"meixuanjin"},"content":"    public String toString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"meixuanjin"},"content":"        return \"[D]\" + super.toString()","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"meixuanjin"},"content":"                + \" (by: \" + dueTime.format(formatted) + \")\";","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"meixuanjin"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"meixuanjin"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"meixuanjin":23}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meixuanjin"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"meixuanjin"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"meixuanjin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"meixuanjin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"meixuanjin"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"meixuanjin"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"meixuanjin"},"content":" * Represents an Event task.","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"meixuanjin"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"meixuanjin"},"content":"public class Event extends Tasks {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"meixuanjin"},"content":"    protected static final DateTimeFormatter formatted \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\");","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"meixuanjin"},"content":"    protected LocalDateTime startTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"meixuanjin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"meixuanjin"},"content":"    public Event(String description, LocalDateTime startTime) {","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"meixuanjin"},"content":"        super(description.substring(6, description.indexOf(\"/at\")));","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"meixuanjin"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"meixuanjin"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"meixuanjin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"meixuanjin"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"meixuanjin"},"content":"    public String toString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"meixuanjin"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"meixuanjin"},"content":"                + \" (at: \" + startTime.format(formatted) + \")\";","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"meixuanjin"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"meixuanjin"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"meixuanjin":23}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meixuanjin"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"meixuanjin"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"meixuanjin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"meixuanjin"},"content":"import java.util.List;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"meixuanjin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"meixuanjin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"meixuanjin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"meixuanjin"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"meixuanjin"},"content":" * Represents a list of tasks.","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"meixuanjin"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"meixuanjin"},"content":"public final class TaskList {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"meixuanjin"},"content":"    private final static List\u003cString\u003e taskString \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"meixuanjin"},"content":"    private final static List\u003cTasks\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"meixuanjin"},"content":"    private static int taskNumber \u003d 1;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"meixuanjin"},"content":"    private final static String LINE \u003d \"-----------------------------------------\";","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"meixuanjin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"meixuanjin"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"meixuanjin"},"content":"     * Adds a task to the list and prints the addition.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"meixuanjin"},"content":"     * @param task Task to be added","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"meixuanjin"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"meixuanjin"},"content":"    public static void add(Tasks task) {","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"meixuanjin"},"content":"        taskString.add(taskNumber + \". \");","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"meixuanjin"},"content":"        taskList.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"meixuanjin"},"content":"        taskNumber++;","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"meixuanjin"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"meixuanjin"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \\n\" + task);","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"meixuanjin"},"content":"        System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"meixuanjin"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"meixuanjin"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"meixuanjin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"meixuanjin"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"meixuanjin"},"content":"     * Adds a specific task according to the correct class","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"meixuanjin"},"content":"     * @param task task to be added","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"meixuanjin"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"meixuanjin"},"content":"    public static void addSpecificTask(String task){","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"meixuanjin"},"content":"        if (task.startsWith(\"deadline\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"meixuanjin"},"content":"            String[] input \u003d task.split(\" /by \", 2);","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"meixuanjin"},"content":"            LocalDateTime dueTime \u003d LocalDateTime.parse(input[1], DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"meixuanjin"},"content":"            TaskList.add(new Deadline(task, dueTime));","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"meixuanjin"},"content":"        } else if (task.startsWith(\"event\") \u0026\u0026 task.contains(\"/at \")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"meixuanjin"},"content":"            String[] input \u003d task.split(\" /at \", 2);","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"meixuanjin"},"content":"            LocalDateTime startTime \u003d LocalDateTime.parse(input[1], DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"meixuanjin"},"content":"            TaskList.add(new Event(task, startTime));","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"meixuanjin"},"content":"        } else if (task.startsWith(\"todo\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"meixuanjin"},"content":"            String[] input \u003d task.split(\"todo \", 2);","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"meixuanjin"},"content":"            TaskList.add(new Todo(input[1]));","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"meixuanjin"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"meixuanjin"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"meixuanjin"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"meixuanjin"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"meixuanjin"},"content":"     * Marks a task as completed and prints this change.","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"meixuanjin"},"content":"     * @param task Task to complete","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"meixuanjin"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"meixuanjin"},"content":"    public static void complete(String task) {","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"meixuanjin"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"meixuanjin"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"meixuanjin"},"content":"        String numString \u003d task.replaceAll(\"[^0-9]\", \"\");","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"meixuanjin"},"content":"        int num \u003d Integer.parseInt(numString);","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"meixuanjin"},"content":"        for (int counter \u003d 0; counter \u003c taskString.size(); counter++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"meixuanjin"},"content":"            if (counter \u003d\u003d num - 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"meixuanjin"},"content":"                taskList.get(num - 1).markAsDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"meixuanjin"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"meixuanjin"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"meixuanjin"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"meixuanjin"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"meixuanjin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"meixuanjin"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"meixuanjin"},"content":"     * Prints the current task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"meixuanjin"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"meixuanjin"},"content":"    public static void printList() {","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"meixuanjin"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"meixuanjin"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"meixuanjin"},"content":"        int counter \u003d 0;","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"meixuanjin"},"content":"        for (String str : taskString) {","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"meixuanjin"},"content":"            System.out.println(str + taskList.get(counter).toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"meixuanjin"},"content":"            counter++;","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"meixuanjin"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"meixuanjin"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"meixuanjin"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"meixuanjin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"meixuanjin"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"meixuanjin"},"content":"     * Deletes an item from the taskList and taskString.","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"meixuanjin"},"content":"     * @param i Index of task to be deleted","lastModifiedDate":"2021-08-29"},{"lineNumber":84,"author":{"gitId":"meixuanjin"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"meixuanjin"},"content":"    public static void deleteTask(int i) {","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"meixuanjin"},"content":"        Tasks deletedTasks \u003d taskList.get(i - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"meixuanjin"},"content":"        taskList.remove(i - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"meixuanjin"},"content":"        taskString.remove(i - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"meixuanjin"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task: \\n\" + deletedTasks + \"\\nNow you have \"","lastModifiedDate":"2021-08-29"},{"lineNumber":90,"author":{"gitId":"meixuanjin"},"content":"                + taskString.size() + \" tasks in the list.\");","lastModifiedDate":"2021-08-29"},{"lineNumber":91,"author":{"gitId":"meixuanjin"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"meixuanjin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"meixuanjin"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":94,"author":{"gitId":"meixuanjin"},"content":"     * Rewrites the duke.txt file with the new list of tasks.","lastModifiedDate":"2021-08-29"},{"lineNumber":95,"author":{"gitId":"meixuanjin"},"content":"     * @return a String representation of the task list","lastModifiedDate":"2021-08-29"},{"lineNumber":96,"author":{"gitId":"meixuanjin"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":97,"author":{"gitId":"meixuanjin"},"content":"    public static String overwrite() {","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"meixuanjin"},"content":"        String str \u003d \"\";","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"meixuanjin"},"content":"        for (Tasks task : taskList) {","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"meixuanjin"},"content":"            str \u003d task.toString() + \"\\n\";","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"meixuanjin"},"content":"            System.out.println(task);","lastModifiedDate":"2021-08-29"},{"lineNumber":102,"author":{"gitId":"meixuanjin"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"meixuanjin"},"content":"        return str;","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"meixuanjin"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"meixuanjin"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":106,"author":{"gitId":"meixuanjin"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":107,"author":{"gitId":"meixuanjin"},"content":"     * Gets the most recent task.","lastModifiedDate":"2021-08-29"},{"lineNumber":108,"author":{"gitId":"meixuanjin"},"content":"     * @return most recent Task","lastModifiedDate":"2021-08-29"},{"lineNumber":109,"author":{"gitId":"meixuanjin"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":110,"author":{"gitId":"meixuanjin"},"content":"    public static Tasks getLast() {","lastModifiedDate":"2021-08-26"},{"lineNumber":111,"author":{"gitId":"meixuanjin"},"content":"        return taskList.get(taskList.size() - 1);","lastModifiedDate":"2021-08-26"},{"lineNumber":112,"author":{"gitId":"meixuanjin"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":113,"author":{"gitId":"meixuanjin"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":114,"author":{"gitId":"meixuanjin"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":115,"author":{"gitId":"meixuanjin"},"content":"     * Prints the tasks containing a keyword that the user has searched.","lastModifiedDate":"2021-08-29"},{"lineNumber":116,"author":{"gitId":"meixuanjin"},"content":"     * @param key keyword being searched.","lastModifiedDate":"2021-08-29"},{"lineNumber":117,"author":{"gitId":"meixuanjin"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":118,"author":{"gitId":"meixuanjin"},"content":"    public static void find(String key) {","lastModifiedDate":"2021-08-29"},{"lineNumber":119,"author":{"gitId":"meixuanjin"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-29"},{"lineNumber":120,"author":{"gitId":"meixuanjin"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2021-08-29"},{"lineNumber":121,"author":{"gitId":"meixuanjin"},"content":"        int count \u003d 1;","lastModifiedDate":"2021-08-29"},{"lineNumber":122,"author":{"gitId":"meixuanjin"},"content":"        for (Tasks task : taskList) {","lastModifiedDate":"2021-08-29"},{"lineNumber":123,"author":{"gitId":"meixuanjin"},"content":"            if (task.toString().contains(key)) {","lastModifiedDate":"2021-08-29"},{"lineNumber":124,"author":{"gitId":"meixuanjin"},"content":"                System.out.println(count + \". \" + task.toString());","lastModifiedDate":"2021-08-29"},{"lineNumber":125,"author":{"gitId":"meixuanjin"},"content":"                count++;","lastModifiedDate":"2021-08-29"},{"lineNumber":126,"author":{"gitId":"meixuanjin"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":127,"author":{"gitId":"meixuanjin"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":128,"author":{"gitId":"meixuanjin"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-29"},{"lineNumber":129,"author":{"gitId":"meixuanjin"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":130,"author":{"gitId":"meixuanjin"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"meixuanjin":130}},{"path":"src/main/java/duke/tasks/Tasks.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meixuanjin"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"meixuanjin"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"meixuanjin"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"meixuanjin"},"content":" * Represents a Task item.","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"meixuanjin"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"meixuanjin"},"content":"public class Tasks {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"meixuanjin"},"content":"    protected String description;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"meixuanjin"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"meixuanjin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"meixuanjin"},"content":"    public Tasks(String description) {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"meixuanjin"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"meixuanjin"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"meixuanjin"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"meixuanjin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"meixuanjin"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"meixuanjin"},"content":"     * Returns the status of the task (X if done, blank if not done).","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"meixuanjin"},"content":"     * @return the status of task","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"meixuanjin"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"meixuanjin"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"meixuanjin"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"meixuanjin"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"meixuanjin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"meixuanjin"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"meixuanjin"},"content":"     * Marks a task as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"meixuanjin"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"meixuanjin"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"meixuanjin"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"meixuanjin"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"meixuanjin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"meixuanjin"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"meixuanjin"},"content":"    public String toString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"meixuanjin"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"meixuanjin"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"meixuanjin"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"meixuanjin":34}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meixuanjin"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"meixuanjin"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"meixuanjin"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"meixuanjin"},"content":" * Represents a Todo task.","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"meixuanjin"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"meixuanjin"},"content":"public class Todo extends Tasks {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"meixuanjin"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"meixuanjin"},"content":"        super(description);","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"meixuanjin"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"meixuanjin"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"meixuanjin"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"meixuanjin"},"content":"    public String toString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"meixuanjin"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"meixuanjin"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"meixuanjin"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"meixuanjin":15}},{"path":"src/test/java/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meixuanjin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"meixuanjin"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"meixuanjin"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"meixuanjin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"meixuanjin"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"meixuanjin"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"meixuanjin"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"meixuanjin"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"meixuanjin"},"content":"    public void createTodoTest(){","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"meixuanjin"},"content":"        Todo td \u003d new Todo(\"todo helloworld\");","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"meixuanjin"},"content":"        assertEquals(\"[T][ ] helloworld\", td.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"meixuanjin"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"meixuanjin"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"meixuanjin"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"meixuanjin"},"content":"    public void completeTodoTest() {","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"meixuanjin"},"content":"        Todo td \u003d new Todo(\"todo helloworld\");","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"meixuanjin"},"content":"        td.markAsDone();","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"meixuanjin"},"content":"        assertEquals(\"[T][X] helloworld\", td.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"meixuanjin"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"meixuanjin"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"meixuanjin":20}},{"path":"src/test/java/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meixuanjin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"meixuanjin"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"meixuanjin"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"meixuanjin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"meixuanjin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"meixuanjin"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"meixuanjin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"meixuanjin"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"meixuanjin"},"content":"public class EventTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"meixuanjin"},"content":"    protected static final DateTimeFormatter formatted \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\");","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"meixuanjin"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"meixuanjin"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"meixuanjin"},"content":"    public void createEventTest(){","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"meixuanjin"},"content":"        LocalDateTime startTime \u003d LocalDateTime.parse(\"10-10-1010 1010\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"meixuanjin"},"content":"        Event event \u003d new Event(\"event hello/at 10-10-1010 1010\", startTime);","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"meixuanjin"},"content":"        assertEquals(\"[E][ ] hello (at: Oct 10 1010 1010)\", event.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"meixuanjin"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"meixuanjin"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"meixuanjin"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"meixuanjin"},"content":"    public void completeEventTest() {","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"meixuanjin"},"content":"        LocalDateTime startTime \u003d LocalDateTime.parse(\"10-10-1010 1010\", DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"meixuanjin"},"content":"        Event event \u003d new Event(\"event hello/at 10-10-1010 1010\", startTime);","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"meixuanjin"},"content":"        event.markAsDone();","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"meixuanjin"},"content":"        assertEquals(\"[E][X] hello (at: Oct 10 1010 1010)\", event.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"meixuanjin"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"meixuanjin"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"meixuanjin":26}},{"path":"src/test/java/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"meixuanjin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"meixuanjin"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"meixuanjin"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"meixuanjin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"meixuanjin"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"meixuanjin"},"content":"public class TodoTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"meixuanjin"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"meixuanjin"},"content":"    public void createTodoTest(){","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"meixuanjin"},"content":"        Todo event \u003d new Todo(\"say hi\");","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"meixuanjin"},"content":"        assertEquals(\"[T][ ] say hi\", event.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"meixuanjin"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"meixuanjin"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"meixuanjin"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"meixuanjin"},"content":"    public void completeTodoTest() {","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"meixuanjin"},"content":"        Todo event \u003d new Todo(\"say hi\");","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"meixuanjin"},"content":"        event.markAsDone();","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"meixuanjin"},"content":"        assertEquals(\"[T][X] say hi\", event.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"meixuanjin"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"meixuanjin"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"meixuanjin":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"meixuanjin"},"content":"duke.tasks.Tasks one","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"meixuanjin"},"content":"todo duke.tasks.Tasks two","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"meixuanjin"},"content":"done 2","lastModifiedDate":"2021-08-20"},{"lineNumber":4,"author":{"gitId":"meixuanjin"},"content":"event duke.tasks.Tasks three /at 11pm","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"meixuanjin"},"content":"done 3","lastModifiedDate":"2021-08-20"},{"lineNumber":6,"author":{"gitId":"meixuanjin"},"content":"deadline duke.tasks.Tasks four /by 2359","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"meixuanjin"},"content":"list","lastModifiedDate":"2021-08-20"},{"lineNumber":8,"author":{"gitId":"meixuanjin"},"content":"bye","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"meixuanjin":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"meixuanjin"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"meixuanjin":1,"-":20}}]
