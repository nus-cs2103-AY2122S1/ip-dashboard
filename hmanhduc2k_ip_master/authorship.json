[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"hmanhduc2k"},"content":"# Main project template","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"hmanhduc2k"},"content":"3. After that, locate the `src/main/java/Main.java` file, right-click it, and choose `Run Main.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"hmanhduc2k":2,"-":22}},{"path":"src/main/java/Duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hmanhduc2k"},"content":"package Duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"hmanhduc2k"},"content":"public class Deadline extends Task{","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"hmanhduc2k"},"content":"    private final String taskName;","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"hmanhduc2k"},"content":"    public Deadline(String taskName) {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"hmanhduc2k"},"content":"        super(taskName);","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"hmanhduc2k"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"hmanhduc2k"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"hmanhduc2k"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"hmanhduc2k"},"content":"        if (taskName.contains(\"/by\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"hmanhduc2k"},"content":"            return \"[D]\" + super.toString().","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"hmanhduc2k"},"content":"                    replaceFirst(\"/\", \"(\") + \")\";","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"hmanhduc2k"},"content":"        } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"hmanhduc2k"},"content":"            return \"[D]\" + super.toString() + \" (unknown deadline)\";","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"hmanhduc2k"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"hmanhduc2k"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"hmanhduc2k":20}},{"path":"src/main/java/Duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hmanhduc2k"},"content":"package Duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"hmanhduc2k"},"content":"import java.io.*;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"hmanhduc2k"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"hmanhduc2k"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"hmanhduc2k"},"content":"import java.util.List;","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"hmanhduc2k"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"hmanhduc2k"},"content":"public class Duke {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"hmanhduc2k"},"content":"    private final List\u003cTask\u003e taskList;","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"hmanhduc2k"},"content":"    File file \u003d new File(\"taskFile/taskList.txt\");","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"hmanhduc2k"},"content":"    public Duke() {","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"hmanhduc2k"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"hmanhduc2k"},"content":"        loadData();     // process data in the task list file","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"hmanhduc2k"},"content":"    public boolean isExitCommand(String command) {","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"hmanhduc2k"},"content":"        return (command.equals(\"bye\") || command.equals(\"Bye\") || command.equals(\"BYE\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"hmanhduc2k"},"content":"     * Process incoming command of Duke - one for all method","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"hmanhduc2k"},"content":"     * @param command Command entered by user in Duke","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"hmanhduc2k"},"content":"    public void processCommand(String command) {","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"hmanhduc2k"},"content":"        String[] divide \u003d command.split(\" \", 2);","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"hmanhduc2k"},"content":"        String commandType \u003d divide[0];","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"hmanhduc2k"},"content":"        String description \u003d (divide.length \u003c 2) ? \"\" : divide[1];","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"hmanhduc2k"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"hmanhduc2k"},"content":"            switch (commandType) {","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"hmanhduc2k"},"content":"                case \"help\":","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"hmanhduc2k"},"content":"                    respondHelp();","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"hmanhduc2k"},"content":"                    break;","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"hmanhduc2k"},"content":"                case \"list\":","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"hmanhduc2k"},"content":"                    respondList();","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"hmanhduc2k"},"content":"                    break;","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"hmanhduc2k"},"content":"                case \"done\":","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"hmanhduc2k"},"content":"                    respondDone(description);","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"hmanhduc2k"},"content":"                    break;","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"hmanhduc2k"},"content":"                case \"todo\":","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"hmanhduc2k"},"content":"                    respondTask(description, Task.Type.TODO);","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"hmanhduc2k"},"content":"                    break;","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"hmanhduc2k"},"content":"                case \"deadline\":","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"hmanhduc2k"},"content":"                    respondTask(description, Task.Type.DEADLINE);","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"hmanhduc2k"},"content":"                    break;","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"hmanhduc2k"},"content":"                case \"event\":","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"hmanhduc2k"},"content":"                    respondTask(description, Task.Type.EVENT);","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"hmanhduc2k"},"content":"                    break;","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"hmanhduc2k"},"content":"                case \"delete\":","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"hmanhduc2k"},"content":"                    respondDelete(description);","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"hmanhduc2k"},"content":"                    break;","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"hmanhduc2k"},"content":"                default:","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"hmanhduc2k"},"content":"                    defaultResponse();","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"hmanhduc2k"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"hmanhduc2k"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"hmanhduc2k"},"content":"            respondWith(e.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"hmanhduc2k"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"hmanhduc2k"},"content":"            respondWith(\"☹ OOPS!!! Your description of \u0027\" + commandType + \"\u0027 is incorrect!\\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"hmanhduc2k"},"content":"                    \"To use \u0027\" + commandType + \"\u0027, please enter \u0027help\u0027 for instructions\");","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"hmanhduc2k"},"content":"        } finally {","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"hmanhduc2k"},"content":"            saveData();     // mark any changes to the text file","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"hmanhduc2k"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":65,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":66,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":68,"author":{"gitId":"hmanhduc2k"},"content":"     * Initializing Duke","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":70,"author":{"gitId":"hmanhduc2k"},"content":"    public void gettingStart() {","lastModifiedDate":"2021-08-19"},{"lineNumber":71,"author":{"gitId":"hmanhduc2k"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":72,"author":{"gitId":"hmanhduc2k"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":73,"author":{"gitId":"hmanhduc2k"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":74,"author":{"gitId":"hmanhduc2k"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":75,"author":{"gitId":"hmanhduc2k"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-19"},{"lineNumber":76,"author":{"gitId":"hmanhduc2k"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2021-08-19"},{"lineNumber":77,"author":{"gitId":"hmanhduc2k"},"content":"        respondWith(\"Hello! I\u0027m Duke. \\nType in \u0027help\u0027 if you are new to us.\\nWhat can I do for you?\");","lastModifiedDate":"2021-08-19"},{"lineNumber":78,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":79,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":80,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":81,"author":{"gitId":"hmanhduc2k"},"content":"     * Exiting Duke","lastModifiedDate":"2021-08-19"},{"lineNumber":82,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":83,"author":{"gitId":"hmanhduc2k"},"content":"    public void exitProgram() {","lastModifiedDate":"2021-08-19"},{"lineNumber":84,"author":{"gitId":"hmanhduc2k"},"content":"        System.out.println(\"\\nProgram exiting... \\nBye. Hope to see you again soon!\\n\");","lastModifiedDate":"2021-08-19"},{"lineNumber":85,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":86,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":87,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":88,"author":{"gitId":"hmanhduc2k"},"content":"     * Getting helps with Duke command","lastModifiedDate":"2021-08-19"},{"lineNumber":89,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":90,"author":{"gitId":"hmanhduc2k"},"content":"    private void respondHelp() {","lastModifiedDate":"2021-08-19"},{"lineNumber":91,"author":{"gitId":"hmanhduc2k"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":92,"author":{"gitId":"hmanhduc2k"},"content":"            File file \u003d new File(\"taskFile/instructions.txt\");","lastModifiedDate":"2021-08-22"},{"lineNumber":93,"author":{"gitId":"hmanhduc2k"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2021-08-22"},{"lineNumber":94,"author":{"gitId":"hmanhduc2k"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":95,"author":{"gitId":"hmanhduc2k"},"content":"                System.out.println(sc.nextLine());","lastModifiedDate":"2021-08-22"},{"lineNumber":96,"author":{"gitId":"hmanhduc2k"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"hmanhduc2k"},"content":"            sc.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":98,"author":{"gitId":"hmanhduc2k"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":99,"author":{"gitId":"hmanhduc2k"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-22"},{"lineNumber":100,"author":{"gitId":"hmanhduc2k"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":101,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":102,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":103,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":104,"author":{"gitId":"hmanhduc2k"},"content":"     * Print all currently available tasks in Duke","lastModifiedDate":"2021-08-19"},{"lineNumber":105,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":106,"author":{"gitId":"hmanhduc2k"},"content":"    private void respondList() {","lastModifiedDate":"2021-08-19"},{"lineNumber":107,"author":{"gitId":"hmanhduc2k"},"content":"        StringBuilder output \u003d new StringBuilder(\"Here is the list of all tasks: \\n\");","lastModifiedDate":"2021-08-19"},{"lineNumber":108,"author":{"gitId":"hmanhduc2k"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-17"},{"lineNumber":109,"author":{"gitId":"hmanhduc2k"},"content":"            output.append(i + 1).append(\". \").append(taskList.get(i)).append(\"\\n\");","lastModifiedDate":"2021-08-19"},{"lineNumber":110,"author":{"gitId":"hmanhduc2k"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":111,"author":{"gitId":"hmanhduc2k"},"content":"        respondWith(output.toString());","lastModifiedDate":"2021-08-19"},{"lineNumber":112,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":113,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":114,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":115,"author":{"gitId":"hmanhduc2k"},"content":"     * Mark a task by its index as completed.","lastModifiedDate":"2021-08-19"},{"lineNumber":116,"author":{"gitId":"hmanhduc2k"},"content":"     * All tasks are marked as completed if entered \u0027done all\u0027","lastModifiedDate":"2021-08-19"},{"lineNumber":117,"author":{"gitId":"hmanhduc2k"},"content":"     * @param command Duke.Task command","lastModifiedDate":"2021-08-22"},{"lineNumber":118,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":119,"author":{"gitId":"hmanhduc2k"},"content":"    private void respondDone(String command) throws DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":120,"author":{"gitId":"hmanhduc2k"},"content":"        command \u003d command.replaceAll(\"\\\\s+\", \"\");","lastModifiedDate":"2021-08-22"},{"lineNumber":121,"author":{"gitId":"hmanhduc2k"},"content":"        if (command.equals(\"all\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":122,"author":{"gitId":"hmanhduc2k"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2021-08-19"},{"lineNumber":123,"author":{"gitId":"hmanhduc2k"},"content":"                task.markAsCompleted();","lastModifiedDate":"2021-08-19"},{"lineNumber":124,"author":{"gitId":"hmanhduc2k"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":125,"author":{"gitId":"hmanhduc2k"},"content":"            respondWith(\"Nice! I\u0027ve marked all tasks in your list as done!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":126,"author":{"gitId":"hmanhduc2k"},"content":"        } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":127,"author":{"gitId":"hmanhduc2k"},"content":"            int position \u003d Integer.parseInt(command) - 1;","lastModifiedDate":"2021-08-17"},{"lineNumber":128,"author":{"gitId":"hmanhduc2k"},"content":"            if (position \u003e\u003d taskList.size() || position \u003c 0) {","lastModifiedDate":"2021-08-19"},{"lineNumber":129,"author":{"gitId":"hmanhduc2k"},"content":"                throw new DukeException(\"\", DukeException.TYPE.OUT_OF_BOUND);","lastModifiedDate":"2021-08-19"},{"lineNumber":130,"author":{"gitId":"hmanhduc2k"},"content":"            } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":131,"author":{"gitId":"hmanhduc2k"},"content":"                Task calledTask \u003d taskList.remove(position);","lastModifiedDate":"2021-08-17"},{"lineNumber":132,"author":{"gitId":"hmanhduc2k"},"content":"                calledTask.markAsCompleted();","lastModifiedDate":"2021-08-17"},{"lineNumber":133,"author":{"gitId":"hmanhduc2k"},"content":"                taskList.add(position, calledTask);","lastModifiedDate":"2021-08-17"},{"lineNumber":134,"author":{"gitId":"hmanhduc2k"},"content":"                respondWith(\"Nice! I\u0027ve marked this task as done: \\n\" + calledTask);","lastModifiedDate":"2021-08-17"},{"lineNumber":135,"author":{"gitId":"hmanhduc2k"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":136,"author":{"gitId":"hmanhduc2k"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":137,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":138,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":139,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":140,"author":{"gitId":"hmanhduc2k"},"content":"     * Delete a task inside the list by its index.","lastModifiedDate":"2021-08-19"},{"lineNumber":141,"author":{"gitId":"hmanhduc2k"},"content":"     * All tasks are deleted if entered \u0027delete all\u0027","lastModifiedDate":"2021-08-19"},{"lineNumber":142,"author":{"gitId":"hmanhduc2k"},"content":"     * @param command Duke.Task command","lastModifiedDate":"2021-08-22"},{"lineNumber":143,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":144,"author":{"gitId":"hmanhduc2k"},"content":"    public void respondDelete(String command) {","lastModifiedDate":"2021-08-19"},{"lineNumber":145,"author":{"gitId":"hmanhduc2k"},"content":"        command \u003d command.replaceAll(\"\\\\s+\", \"\");","lastModifiedDate":"2021-08-22"},{"lineNumber":146,"author":{"gitId":"hmanhduc2k"},"content":"        if (command.equals(\"\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":147,"author":{"gitId":"hmanhduc2k"},"content":"            throw new DukeException(\"Error\", DukeException.TYPE.INCOMPLETE);","lastModifiedDate":"2021-08-22"},{"lineNumber":148,"author":{"gitId":"hmanhduc2k"},"content":"        } else if (command.equals(\"all\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":149,"author":{"gitId":"hmanhduc2k"},"content":"            taskList.clear();","lastModifiedDate":"2021-08-19"},{"lineNumber":150,"author":{"gitId":"hmanhduc2k"},"content":"            respondWith(\"Noted. I\u0027ve reset your list and remove all tasks\");","lastModifiedDate":"2021-08-19"},{"lineNumber":151,"author":{"gitId":"hmanhduc2k"},"content":"        } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":152,"author":{"gitId":"hmanhduc2k"},"content":"            int position \u003d Integer.parseInt(command) - 1;","lastModifiedDate":"2021-08-19"},{"lineNumber":153,"author":{"gitId":"hmanhduc2k"},"content":"            if (position \u003e\u003d taskList.size() || position \u003c 0) {","lastModifiedDate":"2021-08-19"},{"lineNumber":154,"author":{"gitId":"hmanhduc2k"},"content":"                throw new DukeException(\"Error\", DukeException.TYPE.OUT_OF_BOUND);","lastModifiedDate":"2021-08-19"},{"lineNumber":155,"author":{"gitId":"hmanhduc2k"},"content":"            } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":156,"author":{"gitId":"hmanhduc2k"},"content":"                Task deletedTask \u003d taskList.remove(position);","lastModifiedDate":"2021-08-19"},{"lineNumber":157,"author":{"gitId":"hmanhduc2k"},"content":"                respondWith(\"Noted. I\u0027ve removed this task:\\n\" + deletedTask + \"\\n Now you have \" +","lastModifiedDate":"2021-08-19"},{"lineNumber":158,"author":{"gitId":"hmanhduc2k"},"content":"                        taskList.size() + \" tasks in the list\");","lastModifiedDate":"2021-08-19"},{"lineNumber":159,"author":{"gitId":"hmanhduc2k"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":160,"author":{"gitId":"hmanhduc2k"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":161,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":162,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":163,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":164,"author":{"gitId":"hmanhduc2k"},"content":"     * Adding a specified task to the list.","lastModifiedDate":"2021-08-19"},{"lineNumber":165,"author":{"gitId":"hmanhduc2k"},"content":"     * There are 3 types of task: TODO, DEADLINE, and EVENT","lastModifiedDate":"2021-08-19"},{"lineNumber":166,"author":{"gitId":"hmanhduc2k"},"content":"     * @param command Duke.Task command","lastModifiedDate":"2021-08-22"},{"lineNumber":167,"author":{"gitId":"hmanhduc2k"},"content":"     * @param type Duke.Task type","lastModifiedDate":"2021-08-22"},{"lineNumber":168,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":169,"author":{"gitId":"hmanhduc2k"},"content":"    private void respondTask(String command, Task.Type type) {","lastModifiedDate":"2021-08-19"},{"lineNumber":170,"author":{"gitId":"hmanhduc2k"},"content":"        command \u003d command.trim();","lastModifiedDate":"2021-08-22"},{"lineNumber":171,"author":{"gitId":"hmanhduc2k"},"content":"        if (command.equals(\"\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":172,"author":{"gitId":"hmanhduc2k"},"content":"            throw new DukeException(\"Error\", DukeException.TYPE.INCOMPLETE);","lastModifiedDate":"2021-08-19"},{"lineNumber":173,"author":{"gitId":"hmanhduc2k"},"content":"        } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":174,"author":{"gitId":"hmanhduc2k"},"content":"            Task newTask \u003d (type \u003d\u003d Task.Type.TODO) ? new Todo(command)","lastModifiedDate":"2021-08-19"},{"lineNumber":175,"author":{"gitId":"hmanhduc2k"},"content":"                            : (type \u003d\u003d Task.Type.DEADLINE) ? new Deadline(command)","lastModifiedDate":"2021-08-19"},{"lineNumber":176,"author":{"gitId":"hmanhduc2k"},"content":"                            : new Event(command);","lastModifiedDate":"2021-08-19"},{"lineNumber":177,"author":{"gitId":"hmanhduc2k"},"content":"            taskList.add(newTask);","lastModifiedDate":"2021-08-17"},{"lineNumber":178,"author":{"gitId":"hmanhduc2k"},"content":"            respondWith(\"Got it! I\u0027ve added this task:\\n\" + newTask +","lastModifiedDate":"2021-08-17"},{"lineNumber":179,"author":{"gitId":"hmanhduc2k"},"content":"                    \"\\nNow you have \" + taskList.size() + \" tasks in the list\");","lastModifiedDate":"2021-08-17"},{"lineNumber":180,"author":{"gitId":"hmanhduc2k"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":181,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":182,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":183,"author":{"gitId":"hmanhduc2k"},"content":"    private void defaultResponse() {","lastModifiedDate":"2021-08-22"},{"lineNumber":184,"author":{"gitId":"hmanhduc2k"},"content":"        throw new DukeException(\"\", DukeException.TYPE.INVALID);","lastModifiedDate":"2021-08-22"},{"lineNumber":185,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":186,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":187,"author":{"gitId":"hmanhduc2k"},"content":"     * Template of respond after each command-reply cycle","lastModifiedDate":"2021-08-19"},{"lineNumber":188,"author":{"gitId":"hmanhduc2k"},"content":"     * @param input: Entered command on terminal","lastModifiedDate":"2021-08-19"},{"lineNumber":189,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":190,"author":{"gitId":"hmanhduc2k"},"content":"    private void respondWith(String input) {","lastModifiedDate":"2021-08-19"},{"lineNumber":191,"author":{"gitId":"hmanhduc2k"},"content":"        System.out.println();","lastModifiedDate":"2021-08-19"},{"lineNumber":192,"author":{"gitId":"hmanhduc2k"},"content":"        for (int i \u003d 0; i \u003c 30; i++) {","lastModifiedDate":"2021-08-17"},{"lineNumber":193,"author":{"gitId":"hmanhduc2k"},"content":"            System.out.print(\"-\");","lastModifiedDate":"2021-08-17"},{"lineNumber":194,"author":{"gitId":"hmanhduc2k"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":195,"author":{"gitId":"hmanhduc2k"},"content":"        System.out.println();","lastModifiedDate":"2021-08-17"},{"lineNumber":196,"author":{"gitId":"hmanhduc2k"},"content":"        System.out.println(input);","lastModifiedDate":"2021-08-17"},{"lineNumber":197,"author":{"gitId":"hmanhduc2k"},"content":"        System.out.println();","lastModifiedDate":"2021-08-19"},{"lineNumber":198,"author":{"gitId":"hmanhduc2k"},"content":"        for (int i \u003d 0; i \u003c 30; i++) {","lastModifiedDate":"2021-08-19"},{"lineNumber":199,"author":{"gitId":"hmanhduc2k"},"content":"            System.out.print(\"-\");","lastModifiedDate":"2021-08-19"},{"lineNumber":200,"author":{"gitId":"hmanhduc2k"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":201,"author":{"gitId":"hmanhduc2k"},"content":"        System.out.println();","lastModifiedDate":"2021-08-19"},{"lineNumber":202,"author":{"gitId":"hmanhduc2k"},"content":"        System.out.print(\"Enter command: \");","lastModifiedDate":"2021-08-17"},{"lineNumber":203,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":204,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":205,"author":{"gitId":"hmanhduc2k"},"content":"    public void saveData() {","lastModifiedDate":"2021-08-22"},{"lineNumber":206,"author":{"gitId":"hmanhduc2k"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":207,"author":{"gitId":"hmanhduc2k"},"content":"            FileWriter writer \u003d new FileWriter(file);","lastModifiedDate":"2021-08-22"},{"lineNumber":208,"author":{"gitId":"hmanhduc2k"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2021-08-22"},{"lineNumber":209,"author":{"gitId":"hmanhduc2k"},"content":"                writer.write(task + \"\\n\");","lastModifiedDate":"2021-08-22"},{"lineNumber":210,"author":{"gitId":"hmanhduc2k"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":211,"author":{"gitId":"hmanhduc2k"},"content":"            writer.flush();","lastModifiedDate":"2021-08-22"},{"lineNumber":212,"author":{"gitId":"hmanhduc2k"},"content":"            writer.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":213,"author":{"gitId":"hmanhduc2k"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":214,"author":{"gitId":"hmanhduc2k"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-22"},{"lineNumber":215,"author":{"gitId":"hmanhduc2k"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":216,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":217,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":218,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":219,"author":{"gitId":"hmanhduc2k"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":220,"author":{"gitId":"hmanhduc2k"},"content":"     * Assuming that data are loaded correctly","lastModifiedDate":"2021-08-22"},{"lineNumber":221,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":222,"author":{"gitId":"hmanhduc2k"},"content":"    public void loadData() {","lastModifiedDate":"2021-08-22"},{"lineNumber":223,"author":{"gitId":"hmanhduc2k"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":224,"author":{"gitId":"hmanhduc2k"},"content":"            FileReader reader \u003d new FileReader(file);","lastModifiedDate":"2021-08-22"},{"lineNumber":225,"author":{"gitId":"hmanhduc2k"},"content":"            Scanner sc \u003d new Scanner(reader);","lastModifiedDate":"2021-08-22"},{"lineNumber":226,"author":{"gitId":"hmanhduc2k"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":227,"author":{"gitId":"hmanhduc2k"},"content":"                String taskString \u003d sc.nextLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":228,"author":{"gitId":"hmanhduc2k"},"content":"                char type \u003d (taskString.length() \u003c 1) ? \u0027 \u0027 : taskString.trim().charAt(1);","lastModifiedDate":"2021-08-22"},{"lineNumber":229,"author":{"gitId":"hmanhduc2k"},"content":"                char status \u003d (taskString.length() \u003c 4) ? \u0027?\u0027 : taskString.trim().charAt(4);","lastModifiedDate":"2021-08-22"},{"lineNumber":230,"author":{"gitId":"hmanhduc2k"},"content":"                String[] taskArray \u003d taskString.split(\"] \", 2);","lastModifiedDate":"2021-08-22"},{"lineNumber":231,"author":{"gitId":"hmanhduc2k"},"content":"                String taskDescription \u003d (taskArray.length \u003c 2) ? \"\" : taskArray[1];","lastModifiedDate":"2021-08-22"},{"lineNumber":232,"author":{"gitId":"hmanhduc2k"},"content":"                Task curr;","lastModifiedDate":"2021-08-22"},{"lineNumber":233,"author":{"gitId":"hmanhduc2k"},"content":"                switch (type) {","lastModifiedDate":"2021-08-22"},{"lineNumber":234,"author":{"gitId":"hmanhduc2k"},"content":"                    case \u0027T\u0027:","lastModifiedDate":"2021-08-22"},{"lineNumber":235,"author":{"gitId":"hmanhduc2k"},"content":"                        taskDescription \u003d taskDescription.trim();","lastModifiedDate":"2021-08-22"},{"lineNumber":236,"author":{"gitId":"hmanhduc2k"},"content":"                        curr \u003d new Todo(taskDescription);","lastModifiedDate":"2021-08-22"},{"lineNumber":237,"author":{"gitId":"hmanhduc2k"},"content":"                        if (status \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2021-08-22"},{"lineNumber":238,"author":{"gitId":"hmanhduc2k"},"content":"                            curr.markAsCompleted();","lastModifiedDate":"2021-08-22"},{"lineNumber":239,"author":{"gitId":"hmanhduc2k"},"content":"                        }","lastModifiedDate":"2021-08-22"},{"lineNumber":240,"author":{"gitId":"hmanhduc2k"},"content":"                        taskList.add(curr);","lastModifiedDate":"2021-08-22"},{"lineNumber":241,"author":{"gitId":"hmanhduc2k"},"content":"                        break;","lastModifiedDate":"2021-08-22"},{"lineNumber":242,"author":{"gitId":"hmanhduc2k"},"content":"                    case \u0027D\u0027:","lastModifiedDate":"2021-08-22"},{"lineNumber":243,"author":{"gitId":"hmanhduc2k"},"content":"                        taskDescription \u003d taskDescription.trim().","lastModifiedDate":"2021-08-22"},{"lineNumber":244,"author":{"gitId":"hmanhduc2k"},"content":"                                replaceAll(\"\\\\(\", \"/\").","lastModifiedDate":"2021-08-22"},{"lineNumber":245,"author":{"gitId":"hmanhduc2k"},"content":"                                replaceAll(\"\\\\)\", \"\");","lastModifiedDate":"2021-08-22"},{"lineNumber":246,"author":{"gitId":"hmanhduc2k"},"content":"                        curr \u003d new Deadline(taskDescription);","lastModifiedDate":"2021-08-22"},{"lineNumber":247,"author":{"gitId":"hmanhduc2k"},"content":"                        if (status \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2021-08-22"},{"lineNumber":248,"author":{"gitId":"hmanhduc2k"},"content":"                            curr.markAsCompleted();","lastModifiedDate":"2021-08-22"},{"lineNumber":249,"author":{"gitId":"hmanhduc2k"},"content":"                        }","lastModifiedDate":"2021-08-22"},{"lineNumber":250,"author":{"gitId":"hmanhduc2k"},"content":"                        taskList.add(curr);","lastModifiedDate":"2021-08-22"},{"lineNumber":251,"author":{"gitId":"hmanhduc2k"},"content":"                        break;","lastModifiedDate":"2021-08-22"},{"lineNumber":252,"author":{"gitId":"hmanhduc2k"},"content":"                    case \u0027E\u0027:","lastModifiedDate":"2021-08-22"},{"lineNumber":253,"author":{"gitId":"hmanhduc2k"},"content":"                        taskDescription \u003d taskDescription.","lastModifiedDate":"2021-08-22"},{"lineNumber":254,"author":{"gitId":"hmanhduc2k"},"content":"                                replaceAll(\"\\\\(\", \"/\").","lastModifiedDate":"2021-08-22"},{"lineNumber":255,"author":{"gitId":"hmanhduc2k"},"content":"                                replaceAll(\"\\\\)\", \"\");","lastModifiedDate":"2021-08-22"},{"lineNumber":256,"author":{"gitId":"hmanhduc2k"},"content":"                        curr \u003d new Event(taskDescription);","lastModifiedDate":"2021-08-22"},{"lineNumber":257,"author":{"gitId":"hmanhduc2k"},"content":"                        if (status \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2021-08-22"},{"lineNumber":258,"author":{"gitId":"hmanhduc2k"},"content":"                            curr.markAsCompleted();","lastModifiedDate":"2021-08-22"},{"lineNumber":259,"author":{"gitId":"hmanhduc2k"},"content":"                        }","lastModifiedDate":"2021-08-22"},{"lineNumber":260,"author":{"gitId":"hmanhduc2k"},"content":"                        taskList.add(curr);","lastModifiedDate":"2021-08-22"},{"lineNumber":261,"author":{"gitId":"hmanhduc2k"},"content":"                        break;","lastModifiedDate":"2021-08-22"},{"lineNumber":262,"author":{"gitId":"hmanhduc2k"},"content":"                    default:","lastModifiedDate":"2021-08-22"},{"lineNumber":263,"author":{"gitId":"hmanhduc2k"},"content":"                        break;","lastModifiedDate":"2021-08-22"},{"lineNumber":264,"author":{"gitId":"hmanhduc2k"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":265,"author":{"gitId":"hmanhduc2k"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":266,"author":{"gitId":"hmanhduc2k"},"content":"            sc.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":267,"author":{"gitId":"hmanhduc2k"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":268,"author":{"gitId":"hmanhduc2k"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-22"},{"lineNumber":269,"author":{"gitId":"hmanhduc2k"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":270,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":271,"author":{"gitId":"hmanhduc2k"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"hmanhduc2k":271}},{"path":"src/main/java/Duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hmanhduc2k"},"content":"package Duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"hmanhduc2k"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"hmanhduc2k"},"content":"    public enum TYPE {INCOMPLETE, OUT_OF_BOUND, INVALID}","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"hmanhduc2k"},"content":"    protected final TYPE type;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"hmanhduc2k"},"content":"    public DukeException(String message, TYPE type) {","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"hmanhduc2k"},"content":"        super(message);","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"hmanhduc2k"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"hmanhduc2k"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"hmanhduc2k"},"content":"    public String getMessage() {","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"hmanhduc2k"},"content":"        switch (type) {","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"hmanhduc2k"},"content":"            case INCOMPLETE:","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"hmanhduc2k"},"content":"                return \"☹ OOPS!!! Your command is incomplete!\\n\" +","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"hmanhduc2k"},"content":"                        \"Please enter \u0027help\u0027 for further instructions!\";","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"hmanhduc2k"},"content":"            case OUT_OF_BOUND:","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"hmanhduc2k"},"content":"                return \"☹ OOPS!!! Your task number is out of bound!\\n\" +","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"hmanhduc2k"},"content":"                        \"Please enter \u0027help\u0027 for further instructions!\";","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"hmanhduc2k"},"content":"            case INVALID:","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"hmanhduc2k"},"content":"                return \"☹ OOPS! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\" +","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"hmanhduc2k"},"content":"                        \"Please enter \u0027help\u0027 for further instructions!\";","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"hmanhduc2k"},"content":"            default:","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"hmanhduc2k"},"content":"                return super.getMessage();","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"hmanhduc2k"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"hmanhduc2k"},"content":"}","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"hmanhduc2k":28}},{"path":"src/main/java/Duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hmanhduc2k"},"content":"package Duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"hmanhduc2k"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"hmanhduc2k"},"content":"    private final String taskName;","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"hmanhduc2k"},"content":"    public Event(String taskName) {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"hmanhduc2k"},"content":"        super(taskName);","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"hmanhduc2k"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"hmanhduc2k"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"hmanhduc2k"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"hmanhduc2k"},"content":"        if (taskName.contains(\"/at\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"hmanhduc2k"},"content":"            return \"[E]\" + super.toString().","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"hmanhduc2k"},"content":"                    replaceFirst(\"/\", \"(\") + \")\";","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"hmanhduc2k"},"content":"        } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"hmanhduc2k"},"content":"            return \"[E]\" + super.toString() + \" (unknown timing)\";","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"hmanhduc2k"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"hmanhduc2k"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"hmanhduc2k":20}},{"path":"src/main/java/Duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hmanhduc2k"},"content":"package Duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"hmanhduc2k"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"hmanhduc2k"},"content":"    private final String taskName;","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"hmanhduc2k"},"content":"    private boolean status;","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"hmanhduc2k"},"content":"    public enum Type {","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"hmanhduc2k"},"content":"        TODO, DEADLINE, EVENT","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"hmanhduc2k"},"content":"    public Task(String taskName) {","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"hmanhduc2k"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"hmanhduc2k"},"content":"        this.status \u003d false;","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"hmanhduc2k"},"content":"    protected void markAsCompleted() {","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"hmanhduc2k"},"content":"        this.status \u003d true;","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"hmanhduc2k"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"hmanhduc2k"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"hmanhduc2k"},"content":"        if (status) {","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"hmanhduc2k"},"content":"            return \"[X] \" + this.taskName;","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"hmanhduc2k"},"content":"        } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"hmanhduc2k"},"content":"            return \"[ ] \" + this.taskName;","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"hmanhduc2k"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"hmanhduc2k"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"hmanhduc2k":28}},{"path":"src/main/java/Duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hmanhduc2k"},"content":"package Duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"hmanhduc2k"},"content":"public class Todo extends Task{","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"hmanhduc2k"},"content":"    public Todo(String taskName) {","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"hmanhduc2k"},"content":"        super(taskName);","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"hmanhduc2k"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"hmanhduc2k"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"hmanhduc2k"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"hmanhduc2k"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"hmanhduc2k":13}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hmanhduc2k"},"content":"import Duke.Duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"hmanhduc2k"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"hmanhduc2k"},"content":"public class Main {","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"hmanhduc2k"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"hmanhduc2k"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"hmanhduc2k"},"content":"        duke.gettingStart();","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"hmanhduc2k"},"content":"        Scanner sc \u003d new Scanner(System.in).useDelimiter(\"\\n\");","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"hmanhduc2k"},"content":"        String command \u003d sc.next().trim();","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"hmanhduc2k"},"content":"        while (!duke.isExitCommand(command)) {","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"hmanhduc2k"},"content":"            duke.processCommand(command);","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"hmanhduc2k"},"content":"            command \u003d sc.next().trim();","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"hmanhduc2k"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"hmanhduc2k"},"content":"        sc.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"hmanhduc2k"},"content":"        duke.exitProgram();","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"hmanhduc2k"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"hmanhduc2k":21}},{"path":"taskFile/instructions.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"hmanhduc2k"},"content":"Welcome to Duke!","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"hmanhduc2k"},"content":"Here is a comprehensive list of commands you can use:","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"hmanhduc2k"},"content":"1. \u0027help\u0027: Help you with how to use the commands","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"hmanhduc2k"},"content":"2. \u0027list\u0027: Display a list of all current tasks you are having","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"hmanhduc2k"},"content":"3. \u0027todo\u0027: Add a to-do task with no specific deadline to list","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"hmanhduc2k"},"content":"    How to use? \u0027todo\u0027 + \u003ctask name\u003e","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"hmanhduc2k"},"content":"4. \u0027deadline\u0027: Add a task with upcoming deadline to your list","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"hmanhduc2k"},"content":"    How to use? \u0027deadline\u0027 + \u003ctask name\u003e + /by + \u003cdeadline\u003e","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"hmanhduc2k"},"content":"5. \u0027event\u0027: Add a task event with occurred time to your list","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"hmanhduc2k"},"content":"    How to use? \u0027event\u0027 + \u003ctask name\u003e + /at + \u003ctime\u003e","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"hmanhduc2k"},"content":"6. \u0027done\u0027: Mark one task (or all tasks) in your list as done","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"hmanhduc2k"},"content":"    How to use? \u0027done\u0027 + \u003ctask index\u003e (or + \u0027all\u0027)","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"hmanhduc2k"},"content":"7. \u0027delete\u0027: Delete one task (or all) in your list","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"hmanhduc2k"},"content":"    How to use? \u0027delete\u0027 + \u003ctask index\u003e (or + \u0027all\u0027)","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"hmanhduc2k"},"content":"8. \u0027bye\u0027: Exit the program","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"hmanhduc2k":16}},{"path":"taskFile/taskList.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"hmanhduc2k"},"content":"[T][ ] walk 10k steps today","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"hmanhduc2k"},"content":"[D][X] individual project (by the end of this week)","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"hmanhduc2k"},"content":"[T][X] play piano","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"hmanhduc2k"},"content":"[T][X] complete cs2100 tutorial","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"hmanhduc2k"},"content":"[E][ ] cs2100 lecture (at tuesday)","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"hmanhduc2k":5}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"hmanhduc2k"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"hmanhduc2k"},"content":"event ACC1703X lecture /at 10AM tomorrow","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"hmanhduc2k"},"content":"deadline ip Project /by 23:59 tomorrow","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"hmanhduc2k"},"content":"todo walk at least 10000 steps","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"hmanhduc2k"},"content":"I hate myself","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"hmanhduc2k"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"hmanhduc2k"},"content":"done 1","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"hmanhduc2k"},"content":"   done  2","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"hmanhduc2k"},"content":"done 3","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"hmanhduc2k"},"content":"  list","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"hmanhduc2k"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"hmanhduc2k":11}}]
