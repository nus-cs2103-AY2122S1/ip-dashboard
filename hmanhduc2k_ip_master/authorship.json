[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"hmanhduc2k"},"content":"# Main project template","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"hmanhduc2k"},"content":"3. After that, locate the `src/main/java/Main.java` file, right-click it, and choose `Run Main.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"hmanhduc2k":2,"-":22}},{"path":"src/main/java/Duke/Command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hmanhduc2k"},"content":"package Duke.Command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"hmanhduc2k"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"hmanhduc2k"},"content":"    public enum Type {","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"hmanhduc2k"},"content":"        LIST, DONE, DELETE, ADD, FIND","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"hmanhduc2k"},"content":"    private String description;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"hmanhduc2k"},"content":"    private Type type;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"hmanhduc2k"},"content":"    public Command(String description, Type type) {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"hmanhduc2k"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"hmanhduc2k"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"hmanhduc2k"},"content":"//    public void execute() {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"hmanhduc2k"},"content":"//        switch (type) {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"hmanhduc2k"},"content":"//            case ADD:","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"hmanhduc2k"},"content":"//            case DELETE:","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"hmanhduc2k"},"content":"//            case DONE:","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"hmanhduc2k"},"content":"//            case FIND:","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"hmanhduc2k"},"content":"//            case LIST:","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"hmanhduc2k"},"content":"//            default:","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"hmanhduc2k"},"content":"//        }","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"hmanhduc2k"},"content":"//    }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"hmanhduc2k"},"content":"    public abstract Command execute();","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"hmanhduc2k"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"hmanhduc2k":26}},{"path":"src/main/java/Duke/DukeException/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hmanhduc2k"},"content":"package Duke.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"hmanhduc2k"},"content":"public abstract class DukeException extends RuntimeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"hmanhduc2k"},"content":"     * INCOMPLETE: Command is incomplete","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"hmanhduc2k"},"content":"     * OUT_OF_BOUND: The index number is not within task list size","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"hmanhduc2k"},"content":"     * SYNTAX_ERROR: Command type is not recognized","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"hmanhduc2k"},"content":"     * INVALID_FORMAT: Date and time format entered are not supported","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"hmanhduc2k"},"content":"    public enum Type {INCOMPLETE, OUT_OF_BOUND, SYNTAX_ERROR, INVALID_FORMAT}","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"hmanhduc2k"},"content":"    protected final Type type;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"hmanhduc2k"},"content":"     * Constructor for Duke Exception class","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"hmanhduc2k"},"content":"     * @param message Error message","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"hmanhduc2k"},"content":"     * @param type Type of Duke Exception indicated","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"hmanhduc2k"},"content":"    public DukeException(String message, Type type) {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"hmanhduc2k"},"content":"        super(message);","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"hmanhduc2k"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"hmanhduc2k"},"content":"     * Indicating the message error for each type of Duke Exception used","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"hmanhduc2k"},"content":"     * @return message error of Duke Exception","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"hmanhduc2k"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"hmanhduc2k"},"content":"    public String getMessage() {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"hmanhduc2k"},"content":"        switch (type) {","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"hmanhduc2k"},"content":"        case INCOMPLETE:","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"hmanhduc2k"},"content":"            return \"☹ OOPS!!! Your command is incomplete!\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"hmanhduc2k"},"content":"                    \"Please enter \u0027help\u0027 for further instructions!\";","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"hmanhduc2k"},"content":"        case OUT_OF_BOUND:","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"hmanhduc2k"},"content":"            return \"☹ OOPS!!! Your task number is out of bound!\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"hmanhduc2k"},"content":"                    \"Please enter \u0027help\u0027 for further instructions!\";","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"hmanhduc2k"},"content":"        case SYNTAX_ERROR:","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"hmanhduc2k"},"content":"            return \"☹ OOPS! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"hmanhduc2k"},"content":"                    \"Please enter \u0027help\u0027 for further instructions!\";","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"hmanhduc2k"},"content":"        case INVALID_FORMAT:","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"hmanhduc2k"},"content":"            return \"OOPS! Please enter the date in the following format:\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"hmanhduc2k"},"content":"                    \"YYYY-MM-DD (optionally, HH:MM)\";","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"hmanhduc2k"},"content":"        default:","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"hmanhduc2k"},"content":"            return super.getMessage();","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"hmanhduc2k"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"hmanhduc2k"},"content":"}","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"hmanhduc2k":50}},{"path":"src/main/java/Duke/DukeException/DukeIncompleteException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hmanhduc2k"},"content":"package Duke.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"hmanhduc2k"},"content":"public class DukeIncompleteException extends DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"hmanhduc2k"},"content":"    public DukeIncompleteException(String message, Type type) {","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"hmanhduc2k"},"content":"        super(message, Type.INCOMPLETE);","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"hmanhduc2k"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"hmanhduc2k":7}},{"path":"src/main/java/Duke/DukeException/DukeInvalidFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hmanhduc2k"},"content":"package Duke.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"hmanhduc2k"},"content":"public class DukeInvalidFormatException extends DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"hmanhduc2k"},"content":"    public DukeInvalidFormatException(String message, Type type) {","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"hmanhduc2k"},"content":"        super(message, Type.INVALID_FORMAT);","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"hmanhduc2k"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"hmanhduc2k":7}},{"path":"src/main/java/Duke/DukeException/DukeOutOfBoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hmanhduc2k"},"content":"package Duke.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"hmanhduc2k"},"content":"public class DukeOutOfBoundException extends DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"hmanhduc2k"},"content":"    public DukeOutOfBoundException(String message, Type type) {","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"hmanhduc2k"},"content":"        super(message, Type.OUT_OF_BOUND);","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"hmanhduc2k"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"hmanhduc2k":7}},{"path":"src/main/java/Duke/DukeException/DukeSyntaxErrorException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hmanhduc2k"},"content":"package Duke.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"hmanhduc2k"},"content":"public class DukeSyntaxErrorException extends DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"hmanhduc2k"},"content":"    public DukeSyntaxErrorException(String message, Type type) {","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"hmanhduc2k"},"content":"        super(message, Type.SYNTAX_ERROR);","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"hmanhduc2k"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"hmanhduc2k":7}},{"path":"src/main/java/Duke/Main/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hmanhduc2k"},"content":"package Duke.Main;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"hmanhduc2k"},"content":"import java.io.File;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"hmanhduc2k"},"content":"public class Duke {","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"hmanhduc2k"},"content":"    private final TaskList taskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"hmanhduc2k"},"content":"    private final Ui ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"hmanhduc2k"},"content":"    private final File file;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"hmanhduc2k"},"content":"     * Constructor for Duke - initializing task list from","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"hmanhduc2k"},"content":"     * preprocessed file and initializing UI component","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"hmanhduc2k"},"content":"    public Duke(String fileName) {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"hmanhduc2k"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"hmanhduc2k"},"content":"        this.file \u003d new File(fileName);","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"hmanhduc2k"},"content":"        Storage.loadData(file, taskList);","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"hmanhduc2k"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"hmanhduc2k"},"content":"     * Run Duke. UI is first started, then any command is processed","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"hmanhduc2k"},"content":"     * through the Parser class to retrieve a reply, with task list","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"hmanhduc2k"},"content":"     * and storage being constantly updated after each cycle","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"hmanhduc2k"},"content":"    public void run() {","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"hmanhduc2k"},"content":"        ui.start();","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"hmanhduc2k"},"content":"        String command \u003d ui.readCommand();","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"hmanhduc2k"},"content":"        while (!Parser.isExit(command)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"hmanhduc2k"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"hmanhduc2k"},"content":"                ui.respondWith(Parser.parse(command, taskList));","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"hmanhduc2k"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"hmanhduc2k"},"content":"                ui.respondWith(e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"hmanhduc2k"},"content":"            } finally {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"hmanhduc2k"},"content":"                Storage.saveData(file, taskList);","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"hmanhduc2k"},"content":"                command \u003d ui.readCommand();","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"hmanhduc2k"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"hmanhduc2k"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"hmanhduc2k"},"content":"        ui.exit();","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"hmanhduc2k"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"hmanhduc2k":42}},{"path":"src/main/java/Duke/Main/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hmanhduc2k"},"content":"package Duke.Main;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"hmanhduc2k"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"hmanhduc2k"},"content":"     * INCOMPLETE: Command is incomplete","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"hmanhduc2k"},"content":"     * OUT_OF_BOUND: The index number is not within task list size","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"hmanhduc2k"},"content":"     * SYNTAX_ERROR: Command type is not recognized","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"hmanhduc2k"},"content":"     * INVALID_FORMAT: Date and time format entered are not supported","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"hmanhduc2k"},"content":"    public enum Type {INCOMPLETE, OUT_OF_BOUND, SYNTAX_ERROR, INVALID_FORMAT}","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"hmanhduc2k"},"content":"    protected final Type type;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"hmanhduc2k"},"content":"     * Constructor for Duke Exception class","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"hmanhduc2k"},"content":"     * @param message Error message","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"hmanhduc2k"},"content":"     * @param type Type of Duke Exception indicated","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"hmanhduc2k"},"content":"    public DukeException(String message, Type type) {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"hmanhduc2k"},"content":"        super(message);","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"hmanhduc2k"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"hmanhduc2k"},"content":"     * Indicating the message error for each type of Duke Exception used","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"hmanhduc2k"},"content":"     * @return message error of Duke Exception","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"hmanhduc2k"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"hmanhduc2k"},"content":"    public String getMessage() {","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"hmanhduc2k"},"content":"        switch (type) {","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"hmanhduc2k"},"content":"        case INCOMPLETE:","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"hmanhduc2k"},"content":"            return \"☹ OOPS!!! Your command is incomplete!\\n\" +","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"hmanhduc2k"},"content":"                    \"Please enter \u0027help\u0027 for further instructions!\";","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"hmanhduc2k"},"content":"        case OUT_OF_BOUND:","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"hmanhduc2k"},"content":"            return \"☹ OOPS!!! Your task number is out of bound!\\n\" +","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"hmanhduc2k"},"content":"                    \"Please enter \u0027help\u0027 for further instructions!\";","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"hmanhduc2k"},"content":"        case SYNTAX_ERROR:","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"hmanhduc2k"},"content":"            return \"☹ OOPS! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\" +","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"hmanhduc2k"},"content":"                    \"Please enter \u0027help\u0027 for further instructions!\";","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"hmanhduc2k"},"content":"        case INVALID_FORMAT:","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"hmanhduc2k"},"content":"            return \"OOPS! Please enter the date in the following format:\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"hmanhduc2k"},"content":"                    \"YYYY-MM-DD (optionally, HH:MM)\";","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"hmanhduc2k"},"content":"        default:","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"hmanhduc2k"},"content":"            return super.getMessage();","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"hmanhduc2k"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"hmanhduc2k"},"content":"}","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"hmanhduc2k":50}},{"path":"src/main/java/Duke/Main/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hmanhduc2k"},"content":"package Duke.Main;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"hmanhduc2k"},"content":"import Duke.Task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"hmanhduc2k"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"hmanhduc2k"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"hmanhduc2k"},"content":"public class Parser {","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"hmanhduc2k"},"content":"     * Convert YYYY-MM-DD format to MMM dd YYY format (for representing time in Duke)","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"hmanhduc2k"},"content":"     * @param date date in (yyyy-mm-dd) format","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"hmanhduc2k"},"content":"     * @return date in MMM dd YYY format","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"hmanhduc2k"},"content":"    public static String convert(LocalDate date) {","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"hmanhduc2k"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"hmanhduc2k"},"content":"     * Convert MMM dd YYY format to YYYY-MM-DD format (for saving time to file)","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"hmanhduc2k"},"content":"     * @param date Date entered in (MMM dd yyyy) format","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"hmanhduc2k"},"content":"     * @return Date in (YYYY-MM-DD) format","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"hmanhduc2k"},"content":"    public static String reverse(String date) {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"hmanhduc2k"},"content":"        return LocalDate.parse(date, DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"hmanhduc2k"},"content":"                .format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"hmanhduc2k"},"content":"     * Process incoming command from user and prompt an appropriate reply with task list","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"hmanhduc2k"},"content":"     * @param command User command entered","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"hmanhduc2k"},"content":"     * @param taskList Task List for interaction and action","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"hmanhduc2k"},"content":"     * @return reply to user command","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"hmanhduc2k"},"content":"     * @throws DukeException if command is not recognizable","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"hmanhduc2k"},"content":"    public static String parse(String command, TaskList taskList) {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"hmanhduc2k"},"content":"        String[] components \u003d command.split(\" \", 2);","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"hmanhduc2k"},"content":"        String type \u003d components[0].toLowerCase().trim();","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"hmanhduc2k"},"content":"        String description \u003d (components.length \u003c 2) ? \"\" : components[1].trim();","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"hmanhduc2k"},"content":"        switch (type) {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"hmanhduc2k"},"content":"        case \"help\":","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"hmanhduc2k"},"content":"            return Storage.processInstructions();","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"hmanhduc2k"},"content":"        case \"list\":","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"hmanhduc2k"},"content":"            return taskList.printList();","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"hmanhduc2k"},"content":"        case \"done\":","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"hmanhduc2k"},"content":"            if (description.trim().equalsIgnoreCase(\"all\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"hmanhduc2k"},"content":"                return taskList.doneAll();","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"hmanhduc2k"},"content":"            } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"hmanhduc2k"},"content":"                return taskList.done(getNum(description));","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"hmanhduc2k"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"hmanhduc2k"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"hmanhduc2k"},"content":"            return taskList.addTask(description, Task.Type.TODO);","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"hmanhduc2k"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"hmanhduc2k"},"content":"            return taskList.addTask(description, Task.Type.DEADLINE);","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"hmanhduc2k"},"content":"        case \"event\":","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"hmanhduc2k"},"content":"            return taskList.addTask(description, Task.Type.EVENT);","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"hmanhduc2k"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"hmanhduc2k"},"content":"            if (description.trim().equalsIgnoreCase(\"all\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"hmanhduc2k"},"content":"                return taskList.deleteAll();","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"hmanhduc2k"},"content":"            } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"hmanhduc2k"},"content":"                return taskList.delete(getNum(description));","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"hmanhduc2k"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"hmanhduc2k"},"content":"        case \"find\":","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"hmanhduc2k"},"content":"            return taskList.find(description);","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"hmanhduc2k"},"content":"        default:","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"hmanhduc2k"},"content":"            throw new DukeException(\"Error: \", DukeException.Type.SYNTAX_ERROR);","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"hmanhduc2k"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"hmanhduc2k"},"content":"     * Check whether a command entered is exit command (\"bye\")","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"hmanhduc2k"},"content":"     * @param command User command entered","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"hmanhduc2k"},"content":"     * @return whether command is equals to bye","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"hmanhduc2k"},"content":"    public static boolean isExit(String command) {","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"hmanhduc2k"},"content":"        return command.equalsIgnoreCase(\"bye\");","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"hmanhduc2k"},"content":"     * Convert Numeric string to int value or throw syntax-error exception","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"hmanhduc2k"},"content":"     * @param val a String that represents the index number in task","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"hmanhduc2k"},"content":"     * @return int value of the String entered","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"hmanhduc2k"},"content":"     * @throws DukeException if command is incomplete or invalid (not a number)","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"hmanhduc2k"},"content":"    public static int getNum(String val) {","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"hmanhduc2k"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"hmanhduc2k"},"content":"            if (val.equalsIgnoreCase(\"\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"hmanhduc2k"},"content":"                throw new DukeException(\"Error\", DukeException.Type.INCOMPLETE);","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"hmanhduc2k"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"hmanhduc2k"},"content":"            return Integer.parseInt(val);","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"hmanhduc2k"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"hmanhduc2k"},"content":"            throw new DukeException(\"Error\", DukeException.Type.SYNTAX_ERROR);","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"hmanhduc2k"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"hmanhduc2k"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"hmanhduc2k":94}},{"path":"src/main/java/Duke/Main/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hmanhduc2k"},"content":"package Duke.Main;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"hmanhduc2k"},"content":"import Duke.Task.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"hmanhduc2k"},"content":"import java.io.*;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"hmanhduc2k"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"hmanhduc2k"},"content":"public class Storage {","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"hmanhduc2k"},"content":"     * Process and convert instructions.txt file to String of instructions","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"hmanhduc2k"},"content":"     * @return string of instructional guidelines","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"hmanhduc2k"},"content":"    public static String processInstructions() {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"hmanhduc2k"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"hmanhduc2k"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"hmanhduc2k"},"content":"            File file \u003d new File(\"taskFile/instructions.txt\");","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"hmanhduc2k"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"hmanhduc2k"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"hmanhduc2k"},"content":"                builder.append(sc.nextLine()).append(\"\\n\");","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"hmanhduc2k"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"hmanhduc2k"},"content":"            sc.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"hmanhduc2k"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"hmanhduc2k"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"hmanhduc2k"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"hmanhduc2k"},"content":"        return builder.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"hmanhduc2k"},"content":"     * Update current task list content to file","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"hmanhduc2k"},"content":"     * @param file a file that saved the task entered and date","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"hmanhduc2k"},"content":"     * @param taskList task list","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"hmanhduc2k"},"content":"    public static void saveData(File file, TaskList taskList) {","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"hmanhduc2k"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"hmanhduc2k"},"content":"            FileWriter writer \u003d new FileWriter(file);","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"hmanhduc2k"},"content":"            for (Task task : taskList.getTaskList()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"hmanhduc2k"},"content":"                writer.write(task.save() + \"\\n\");","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"hmanhduc2k"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"hmanhduc2k"},"content":"            writer.flush();","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"hmanhduc2k"},"content":"            writer.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"hmanhduc2k"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"hmanhduc2k"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"hmanhduc2k"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"hmanhduc2k"},"content":"     * Load and preprocess data to task list from file","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"hmanhduc2k"},"content":"     * @param file a file that contains previously entered tasks and dates","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"hmanhduc2k"},"content":"     * @param taskList task list","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"hmanhduc2k"},"content":"    public static void loadData(File file, TaskList taskList) {","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"hmanhduc2k"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"hmanhduc2k"},"content":"            FileReader reader \u003d new FileReader(file);","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"hmanhduc2k"},"content":"            Scanner sc \u003d new Scanner(reader);","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"hmanhduc2k"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"hmanhduc2k"},"content":"                String taskString \u003d sc.nextLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"hmanhduc2k"},"content":"                char type \u003d (taskString.length() \u003c 1) ? \u0027 \u0027 : taskString.trim().charAt(1);","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"hmanhduc2k"},"content":"                char status \u003d (taskString.length() \u003c 4) ? \u0027?\u0027 : taskString.trim().charAt(4);","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"hmanhduc2k"},"content":"                String[] taskArray \u003d taskString.split(\"] \", 2);","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"hmanhduc2k"},"content":"                String taskDescription \u003d (taskArray.length \u003c 2) ? \"\" : taskArray[1];","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"hmanhduc2k"},"content":"                Task curr;","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"hmanhduc2k"},"content":"                switch (type) {","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"hmanhduc2k"},"content":"                case \u0027T\u0027:","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"hmanhduc2k"},"content":"                    taskDescription \u003d taskDescription.trim();","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"hmanhduc2k"},"content":"                    curr \u003d new Todo(taskDescription);","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"hmanhduc2k"},"content":"                    if (status \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"hmanhduc2k"},"content":"                        curr.markAsCompleted();","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"hmanhduc2k"},"content":"                    }","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"hmanhduc2k"},"content":"                    taskList.addTask(curr);","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"hmanhduc2k"},"content":"                    break;","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"hmanhduc2k"},"content":"                case \u0027D\u0027:","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"hmanhduc2k"},"content":"                    taskDescription \u003d taskDescription.trim().","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"hmanhduc2k"},"content":"                            replaceAll(\"\\\\(\", \"/\").","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"hmanhduc2k"},"content":"                            replaceAll(\"\\\\)\", \"\");","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"hmanhduc2k"},"content":"                    curr \u003d new Deadline(taskDescription);","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"hmanhduc2k"},"content":"                    if (status \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"hmanhduc2k"},"content":"                        curr.markAsCompleted();","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"hmanhduc2k"},"content":"                    }","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"hmanhduc2k"},"content":"                    taskList.addTask(curr);","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"hmanhduc2k"},"content":"                    break;","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"hmanhduc2k"},"content":"                case \u0027E\u0027:","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"hmanhduc2k"},"content":"                    taskDescription \u003d taskDescription.","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"hmanhduc2k"},"content":"                            replaceAll(\"\\\\(\", \"/\").","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"hmanhduc2k"},"content":"                            replaceAll(\"\\\\)\", \"\");","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"hmanhduc2k"},"content":"                    curr \u003d new Event(taskDescription);","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"hmanhduc2k"},"content":"                    if (status \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"hmanhduc2k"},"content":"                        curr.markAsCompleted();","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"hmanhduc2k"},"content":"                    }","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"hmanhduc2k"},"content":"                    taskList.addTask(curr);","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"hmanhduc2k"},"content":"                    break;","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"hmanhduc2k"},"content":"                default:","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"hmanhduc2k"},"content":"                    break;","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"hmanhduc2k"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"hmanhduc2k"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"hmanhduc2k"},"content":"            sc.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"hmanhduc2k"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"hmanhduc2k"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"hmanhduc2k"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"hmanhduc2k"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"hmanhduc2k"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"hmanhduc2k"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"hmanhduc2k":103}},{"path":"src/main/java/Duke/Main/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hmanhduc2k"},"content":"package Duke.Main;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"hmanhduc2k"},"content":"import Duke.Task.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"hmanhduc2k"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"hmanhduc2k"},"content":"import java.util.List;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"hmanhduc2k"},"content":"public class TaskList {","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"hmanhduc2k"},"content":"    private final List\u003cTask\u003e taskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"hmanhduc2k"},"content":"     * Constructor for TaskList","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"hmanhduc2k"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"hmanhduc2k"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"hmanhduc2k"},"content":"     * return the TaskList itself","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"hmanhduc2k"},"content":"     * @return task list","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"hmanhduc2k"},"content":"    public List\u003cTask\u003e getTaskList() {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"hmanhduc2k"},"content":"        return this.taskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"hmanhduc2k"},"content":"     * Retrieve the size of the Task List in form of a String","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"hmanhduc2k"},"content":"     * @return size of task list","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"hmanhduc2k"},"content":"    public String size() {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"hmanhduc2k"},"content":"        int size \u003d taskList.size();","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"hmanhduc2k"},"content":"        if (size \u003c 2) {","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"hmanhduc2k"},"content":"            return \"Now you have \" + size + \" task in your list\";","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"hmanhduc2k"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"hmanhduc2k"},"content":"            return \"Now you have \" + size + \" tasks in your list\";","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"hmanhduc2k"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"hmanhduc2k"},"content":"     * Print all available tasks inside the task list out","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"hmanhduc2k"},"content":"     * @return all tasks printed","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"hmanhduc2k"},"content":"    public String printList() {","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"hmanhduc2k"},"content":"        StringBuilder output \u003d new StringBuilder(\"Here is the list of all tasks: \\n\");","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"hmanhduc2k"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"hmanhduc2k"},"content":"            output.append(i + 1).append(\". \").append(taskList.get(i)).append(\"\\n\");","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"hmanhduc2k"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"hmanhduc2k"},"content":"        return output.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"hmanhduc2k"},"content":"     * Indicate that a task in the list is finished","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"hmanhduc2k"},"content":"     * @param index index number of the queried task","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"hmanhduc2k"},"content":"     * @return confirmation that the task is completed","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"hmanhduc2k"},"content":"     * @throws DukeException if index is not within task size","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"hmanhduc2k"},"content":"    public String done(int index) {","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"hmanhduc2k"},"content":"        if (index \u003e taskList.size() || index \u003c\u003d 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"hmanhduc2k"},"content":"            throw new DukeException(\"\", DukeException.Type.OUT_OF_BOUND);","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"hmanhduc2k"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"hmanhduc2k"},"content":"            index--;","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"hmanhduc2k"},"content":"            Task calledTask \u003d taskList.remove(index);","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"hmanhduc2k"},"content":"            calledTask.markAsCompleted();","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"hmanhduc2k"},"content":"            taskList.add(index, calledTask);","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"hmanhduc2k"},"content":"            return \"Nice! I\u0027ve marked this task as done: \\n\" + calledTask;","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"hmanhduc2k"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"hmanhduc2k"},"content":"     * Indicate that all tasks are completed","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"hmanhduc2k"},"content":"     * @return confirmation that all tasks are completed","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"hmanhduc2k"},"content":"    public String doneAll() {","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"hmanhduc2k"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"hmanhduc2k"},"content":"            task.markAsCompleted();","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"hmanhduc2k"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"hmanhduc2k"},"content":"        return \"Nice! I\u0027ve marked all tasks in your list as done!\";","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"hmanhduc2k"},"content":"     * Delete a specified task on the task list","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"hmanhduc2k"},"content":"     * @param index index of the task queried from the list","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"hmanhduc2k"},"content":"     * @return Confirmation that the specified task is deleted from the list","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"hmanhduc2k"},"content":"     * @throws DukeException if index is not within task size","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"hmanhduc2k"},"content":"    public String delete(int index) {","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"hmanhduc2k"},"content":"        if (index \u003e taskList.size() || index \u003c\u003d 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"hmanhduc2k"},"content":"            throw new DukeException(\"Error\", DukeException.Type.OUT_OF_BOUND);","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"hmanhduc2k"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"hmanhduc2k"},"content":"            index--;","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"hmanhduc2k"},"content":"            Task deletedTask \u003d taskList.remove(index);","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"hmanhduc2k"},"content":"            return \"Noted. I\u0027ve removed this task:\\n\" + deletedTask + \"\\n\" + size();","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"hmanhduc2k"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"hmanhduc2k"},"content":"     * Delete all tasks and reset the Task List to empty","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"hmanhduc2k"},"content":"     * @return Confirmation that the Task List is reset to empty","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"hmanhduc2k"},"content":"    public String deleteAll() {","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"hmanhduc2k"},"content":"        taskList.clear();","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"hmanhduc2k"},"content":"        return \"Noted. I\u0027ve reset your list and remove all tasks\";","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"hmanhduc2k"},"content":"     * Add a particular task into the list","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"hmanhduc2k"},"content":"     * @param task details of the task being added","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"hmanhduc2k"},"content":"     * @param type type of task being added (TODO, DEADLINE, or EVENT)","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"hmanhduc2k"},"content":"     * @return Confirmation that a task is added","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"hmanhduc2k"},"content":"     * @throws DukeException if the task type is not recognizable","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"hmanhduc2k"},"content":"    public String addTask(String task, Task.Type type) {","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"hmanhduc2k"},"content":"        task \u003d task.trim();","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"hmanhduc2k"},"content":"        Task newTask;","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"hmanhduc2k"},"content":"        switch (type) {","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"hmanhduc2k"},"content":"        case TODO:","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"hmanhduc2k"},"content":"            newTask \u003d new Todo(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"hmanhduc2k"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"hmanhduc2k"},"content":"        case DEADLINE:","lastModifiedDate":"2021-08-25"},{"lineNumber":121,"author":{"gitId":"hmanhduc2k"},"content":"            newTask \u003d new Deadline(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"hmanhduc2k"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"hmanhduc2k"},"content":"        case EVENT:","lastModifiedDate":"2021-08-25"},{"lineNumber":124,"author":{"gitId":"hmanhduc2k"},"content":"            newTask \u003d new Event(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":125,"author":{"gitId":"hmanhduc2k"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":126,"author":{"gitId":"hmanhduc2k"},"content":"        default:","lastModifiedDate":"2021-08-25"},{"lineNumber":127,"author":{"gitId":"hmanhduc2k"},"content":"            throw new DukeException(\"Error: \", DukeException.Type.SYNTAX_ERROR);","lastModifiedDate":"2021-08-25"},{"lineNumber":128,"author":{"gitId":"hmanhduc2k"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":129,"author":{"gitId":"hmanhduc2k"},"content":"        this.taskList.add(newTask);","lastModifiedDate":"2021-08-25"},{"lineNumber":130,"author":{"gitId":"hmanhduc2k"},"content":"        return \"Got it! I\u0027ve added this task:\\n\" + newTask +","lastModifiedDate":"2021-08-25"},{"lineNumber":131,"author":{"gitId":"hmanhduc2k"},"content":"                \"\\n\" + size();","lastModifiedDate":"2021-08-25"},{"lineNumber":132,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":133,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":134,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":135,"author":{"gitId":"hmanhduc2k"},"content":"     * Add a Task object to the list (for shortcutting purposes)","lastModifiedDate":"2021-08-25"},{"lineNumber":136,"author":{"gitId":"hmanhduc2k"},"content":"     * @param task the task being added","lastModifiedDate":"2021-08-25"},{"lineNumber":137,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":138,"author":{"gitId":"hmanhduc2k"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-25"},{"lineNumber":139,"author":{"gitId":"hmanhduc2k"},"content":"        this.taskList.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":140,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":141,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":142,"author":{"gitId":"hmanhduc2k"},"content":"    public String find(String query) {","lastModifiedDate":"2021-08-25"},{"lineNumber":143,"author":{"gitId":"hmanhduc2k"},"content":"        StringBuilder output \u003d new StringBuilder(\"The following task(s) matches query \u0027\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":144,"author":{"gitId":"hmanhduc2k"},"content":"                query + \"\u0027:\\n\");","lastModifiedDate":"2021-08-25"},{"lineNumber":145,"author":{"gitId":"hmanhduc2k"},"content":"        int count \u003d 0;","lastModifiedDate":"2021-08-25"},{"lineNumber":146,"author":{"gitId":"hmanhduc2k"},"content":"        for (Task currentTask : taskList) {","lastModifiedDate":"2021-08-25"},{"lineNumber":147,"author":{"gitId":"hmanhduc2k"},"content":"            if (currentTask.getTaskName().contains(query)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":148,"author":{"gitId":"hmanhduc2k"},"content":"                output.append(count + 1).append(\". \").append(currentTask).append(\"\\n\");","lastModifiedDate":"2021-08-25"},{"lineNumber":149,"author":{"gitId":"hmanhduc2k"},"content":"                count++;","lastModifiedDate":"2021-08-25"},{"lineNumber":150,"author":{"gitId":"hmanhduc2k"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":151,"author":{"gitId":"hmanhduc2k"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":152,"author":{"gitId":"hmanhduc2k"},"content":"        if (count \u003d\u003d 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":153,"author":{"gitId":"hmanhduc2k"},"content":"            return \"OOPS! There are no task that matches your query!\";","lastModifiedDate":"2021-08-25"},{"lineNumber":154,"author":{"gitId":"hmanhduc2k"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":155,"author":{"gitId":"hmanhduc2k"},"content":"            return output.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":156,"author":{"gitId":"hmanhduc2k"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":157,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":158,"author":{"gitId":"hmanhduc2k"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"hmanhduc2k":158}},{"path":"src/main/java/Duke/Main/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hmanhduc2k"},"content":"package Duke.Main;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"hmanhduc2k"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"hmanhduc2k"},"content":"public class Ui {","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"hmanhduc2k"},"content":"    private final Scanner sc;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"hmanhduc2k"},"content":"     * Constructor for the UI class, setting up a Scanner object","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"hmanhduc2k"},"content":"    public Ui() {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"hmanhduc2k"},"content":"        this.sc \u003d new Scanner(System.in).useDelimiter(\"\\n\");","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"hmanhduc2k"},"content":"     * Initializing Duke (Animation)","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"hmanhduc2k"},"content":"    public void start() {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"hmanhduc2k"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"hmanhduc2k"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"hmanhduc2k"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"hmanhduc2k"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"hmanhduc2k"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"hmanhduc2k"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"hmanhduc2k"},"content":"        respondWith(\"Hello! I\u0027m Duke. \\nType in \u0027help\u0027 if you are new to us.\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"hmanhduc2k"},"content":"                \"\\nWhat can I do for you?\");","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"hmanhduc2k"},"content":"     * Exiting Duke and stop the program","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"hmanhduc2k"},"content":"    public void exit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"hmanhduc2k"},"content":"        System.out.println(\"\\nProgram exiting... \\nBye. Hope to see you again soon!\\n\");","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"hmanhduc2k"},"content":"     * Reply template for each command-reply cycle","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"hmanhduc2k"},"content":"     * @param input a String that represents the content of reply message","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"hmanhduc2k"},"content":"    public void respondWith(String input) {","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"hmanhduc2k"},"content":"        System.out.println();","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"hmanhduc2k"},"content":"        for (int i \u003d 0; i \u003c 30; i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"hmanhduc2k"},"content":"            System.out.print(\"-\");","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"hmanhduc2k"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"hmanhduc2k"},"content":"        System.out.println();","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"hmanhduc2k"},"content":"        System.out.println(input);","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"hmanhduc2k"},"content":"        System.out.println();","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"hmanhduc2k"},"content":"        for (int i \u003d 0; i \u003c 30; i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"hmanhduc2k"},"content":"            System.out.print(\"-\");","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"hmanhduc2k"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"hmanhduc2k"},"content":"        System.out.println();","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"hmanhduc2k"},"content":"        System.out.print(\"Enter command: \");","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"hmanhduc2k"},"content":"     * Read and scan the command entered by the user","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"hmanhduc2k"},"content":"     * @return the String entered by user","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"hmanhduc2k"},"content":"    public String readCommand() {","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"hmanhduc2k"},"content":"        return sc.next().trim();","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"hmanhduc2k"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"hmanhduc2k":64}},{"path":"src/main/java/Duke/Task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hmanhduc2k"},"content":"package Duke.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"hmanhduc2k"},"content":"import Duke.Main.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"hmanhduc2k"},"content":"import Duke.Main.Parser;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"hmanhduc2k"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"hmanhduc2k"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"hmanhduc2k"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"hmanhduc2k"},"content":"    private String taskDescription;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"hmanhduc2k"},"content":"    private String date;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"hmanhduc2k"},"content":"     * Constructor for a Deadline Task","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"hmanhduc2k"},"content":"     * @param taskName description of the task, to be divided into the","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"hmanhduc2k"},"content":"     *                 name and the time of task","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"hmanhduc2k"},"content":"     * @throws DukeException if there is no timing indicated or if the","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"hmanhduc2k"},"content":"     *                       date format entered is incorrect","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"hmanhduc2k"},"content":"    public Deadline(String taskName) {","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"hmanhduc2k"},"content":"        super(taskName.split(\"/by\")[0].trim());","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"hmanhduc2k"},"content":"        if (!taskName.contains(\"/by\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"hmanhduc2k"},"content":"            throw new DukeException(\"\", DukeException.Type.INCOMPLETE);","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"hmanhduc2k"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"hmanhduc2k"},"content":"        String[] divide \u003d taskName.split(\"/by\");","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"hmanhduc2k"},"content":"        this.taskDescription \u003d divide[0].trim();","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"hmanhduc2k"},"content":"        String taskTime \u003d divide[1].trim();","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"hmanhduc2k"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"hmanhduc2k"},"content":"            this.date \u003d Parser.convert(LocalDate.parse(taskTime));","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"hmanhduc2k"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"hmanhduc2k"},"content":"            throw new DukeException(\"\", DukeException.Type.INVALID_FORMAT);","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"hmanhduc2k"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"hmanhduc2k"},"content":"     * Save task description to file on the initial date format","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"hmanhduc2k"},"content":"     * @return a String that represents user initial input","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"hmanhduc2k"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"hmanhduc2k"},"content":"    public String save() {","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"hmanhduc2k"},"content":"        return this.toString().replaceAll(date, Parser.reverse(date));","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"hmanhduc2k"},"content":"     * String representation of a Task","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"hmanhduc2k"},"content":"     * @return String of Task","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"hmanhduc2k"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":50,"author":{"gitId":"hmanhduc2k"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":51,"author":{"gitId":"hmanhduc2k"},"content":"        return \"[D]\" + super.toString() + \" (by \" + date + \")\";","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"hmanhduc2k"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"hmanhduc2k":54}},{"path":"src/main/java/Duke/Task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hmanhduc2k"},"content":"package Duke.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"hmanhduc2k"},"content":"import Duke.Main.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"hmanhduc2k"},"content":"import Duke.Main.Parser;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"hmanhduc2k"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"hmanhduc2k"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"hmanhduc2k"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"hmanhduc2k"},"content":"    private String taskDescription;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"hmanhduc2k"},"content":"    private String date;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"hmanhduc2k"},"content":"     * Constructor of an Event Task","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"hmanhduc2k"},"content":"     * @param taskName contains the task description and task time that","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"hmanhduc2k"},"content":"     *                 is to be divided","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"hmanhduc2k"},"content":"     * @throws DukeException if there is no timing indicated or if the","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"hmanhduc2k"},"content":"     *                       date entered is in the incorrect format","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"hmanhduc2k"},"content":"    public Event(String taskName) {","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"hmanhduc2k"},"content":"        super(taskName.split(\"/at\")[0].trim());","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"hmanhduc2k"},"content":"        if (!taskName.contains(\"/at\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"hmanhduc2k"},"content":"            throw new DukeException(\"\", DukeException.Type.INCOMPLETE);","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"hmanhduc2k"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"hmanhduc2k"},"content":"        String[] divide \u003d taskName.split(\"/at\");","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"hmanhduc2k"},"content":"        this.taskDescription \u003d divide[0];","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"hmanhduc2k"},"content":"        String taskTime \u003d divide[1].trim();","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"hmanhduc2k"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"hmanhduc2k"},"content":"            this.date \u003d Parser.convert(LocalDate.parse(taskTime));","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"hmanhduc2k"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"hmanhduc2k"},"content":"            throw new DukeException(\"\", DukeException.Type.INVALID_FORMAT);","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"hmanhduc2k"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"hmanhduc2k"},"content":"     * Save task description to file on the initial date format","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"hmanhduc2k"},"content":"     * @return a String that represents user initial input","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"hmanhduc2k"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"hmanhduc2k"},"content":"    public String save() {","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"hmanhduc2k"},"content":"        return this.toString().replaceAll(date, Parser.reverse(date));","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"hmanhduc2k"},"content":"     * String representation of a Task","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"hmanhduc2k"},"content":"     * @return String of Task","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"hmanhduc2k"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":50,"author":{"gitId":"hmanhduc2k"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":51,"author":{"gitId":"hmanhduc2k"},"content":"        return \"[E]\" + super.toString() + \" (at \" + date + \")\";","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"hmanhduc2k"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"hmanhduc2k":54}},{"path":"src/main/java/Duke/Task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hmanhduc2k"},"content":"package Duke.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"hmanhduc2k"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"hmanhduc2k"},"content":"    private final String taskName;","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"hmanhduc2k"},"content":"    private boolean status;","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"hmanhduc2k"},"content":"     * Types of Task availble","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"hmanhduc2k"},"content":"    public enum Type {","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"hmanhduc2k"},"content":"        TODO, DEADLINE, EVENT","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"hmanhduc2k"},"content":"     * Constructor of a Task","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"hmanhduc2k"},"content":"     * @param taskName name of the task","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"hmanhduc2k"},"content":"    public Task(String taskName) {","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"hmanhduc2k"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"hmanhduc2k"},"content":"        this.status \u003d false;","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"hmanhduc2k"},"content":"     * Mark a task status as completed","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"hmanhduc2k"},"content":"    public void markAsCompleted() {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"hmanhduc2k"},"content":"        this.status \u003d true;","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"hmanhduc2k"},"content":"     * String representation of a task - X shows that a task is completed","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"hmanhduc2k"},"content":"     * @return the String value of a Task","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"hmanhduc2k"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"hmanhduc2k"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"hmanhduc2k"},"content":"        if (status) {","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"hmanhduc2k"},"content":"            return \"[X] \" + this.taskName;","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"hmanhduc2k"},"content":"        } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"hmanhduc2k"},"content":"            return \"[ ] \" + this.taskName;","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"hmanhduc2k"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"hmanhduc2k"},"content":"    public abstract String save();","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"hmanhduc2k"},"content":"    public String getTaskName() {","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"hmanhduc2k"},"content":"        return this.taskName;","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"hmanhduc2k"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"hmanhduc2k":48}},{"path":"src/main/java/Duke/Task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hmanhduc2k"},"content":"package Duke.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"hmanhduc2k"},"content":"import Duke.Main.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"hmanhduc2k"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"hmanhduc2k"},"content":"    private String taskDescription;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"hmanhduc2k"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"hmanhduc2k"},"content":"     * Constructor of a TODO task","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"hmanhduc2k"},"content":"     * @param taskName name of the task","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"hmanhduc2k"},"content":"     * @throws DukeException if the description is incompleted","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"hmanhduc2k"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"hmanhduc2k"},"content":"    public Todo(String taskName) {","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"hmanhduc2k"},"content":"        super(taskName);","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"hmanhduc2k"},"content":"        if (taskName.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"hmanhduc2k"},"content":"            throw new DukeException(\"Error: \", DukeException.Type.INCOMPLETE);","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"hmanhduc2k"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"hmanhduc2k"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"hmanhduc2k"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"hmanhduc2k"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"hmanhduc2k"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"hmanhduc2k"},"content":"    public String save() {","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"hmanhduc2k"},"content":"        return this.toString();","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"hmanhduc2k"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"hmanhduc2k":30}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hmanhduc2k"},"content":"import Duke.Main.Duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"hmanhduc2k"},"content":"public class Main {","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"hmanhduc2k"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"hmanhduc2k"},"content":"        Duke duke \u003d new Duke(\"taskFile/taskList.txt\");","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"hmanhduc2k"},"content":"        duke.run();","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"hmanhduc2k"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"hmanhduc2k":8}},{"path":"src/test/java/Duke/Main/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hmanhduc2k"},"content":"package Duke.Main;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"hmanhduc2k"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"hmanhduc2k"},"content":"public class DukeTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"hmanhduc2k"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"hmanhduc2k":6}},{"path":"src/test/java/Duke/Main/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hmanhduc2k"},"content":"package Duke.Main;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"hmanhduc2k"},"content":"import Duke.Task.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"hmanhduc2k"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"hmanhduc2k"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"hmanhduc2k"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"hmanhduc2k"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"hmanhduc2k"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"hmanhduc2k"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"hmanhduc2k"},"content":"    public void testDateConversion() {","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"hmanhduc2k"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"hmanhduc2k"},"content":"        assertEquals(\"Aug 26 2021\", Parser.convert(today));","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"hmanhduc2k"},"content":"        LocalDate day1 \u003d LocalDate.parse(\"2021-07-01\");","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"hmanhduc2k"},"content":"        assertEquals(\"Jul 01 2021\", Parser.convert(day1));","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"hmanhduc2k"},"content":"        LocalDate day2 \u003d LocalDate.parse(\"2021-03-31\");","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"hmanhduc2k"},"content":"        assertEquals(\"Mar 31 2021\", Parser.convert(day2));","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"hmanhduc2k"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"hmanhduc2k"},"content":"                Parser.convert(LocalDate.parse(\"08/10/2021\")));","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"hmanhduc2k"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"hmanhduc2k"},"content":"    public void testDateReversion() {","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"hmanhduc2k"},"content":"        assertEquals(\"2021-08-26\", Parser.reverse(\"Aug 26 2021\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"hmanhduc2k"},"content":"        assertEquals(\"2017-09-13\", Parser.reverse(\"Sep 13 2017\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"hmanhduc2k"},"content":"        assertEquals(\"2020-11-01\", Parser.reverse(\"Nov 01 2020\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"hmanhduc2k"},"content":"        assertEquals(\"1945-09-02\", Parser.reverse(\"Sep 02 1945\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"hmanhduc2k"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"hmanhduc2k"},"content":"    public void testParser() {","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"hmanhduc2k"},"content":"        assertTrue(Parser.parse(\"help\", null).contains(","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"hmanhduc2k"},"content":"                        \"Here is a comprehensive list of commands you can use:\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"hmanhduc2k"},"content":"        assertTrue(Parser.parse(\"help\", null).contains(","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"hmanhduc2k"},"content":"                \"8. \u0027bye\u0027: Exit the program\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"hmanhduc2k"},"content":"        assertEquals(\"1. Item 1\\n2. Item 2\\n3. Item 3\",","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"hmanhduc2k"},"content":"                Parser.parse(\"list\", new TaskListStub()));","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"hmanhduc2k"},"content":"        assertEquals(\"Task of index 3 is done\",","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"hmanhduc2k"},"content":"                Parser.parse(\"done 3\", new TaskListStub()));","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"hmanhduc2k"},"content":"        assertEquals(\"All tasks are done\",","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"hmanhduc2k"},"content":"                Parser.parse(\"done all\", new TaskListStub()));","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"hmanhduc2k"},"content":"        assertEquals(\"Task of index 69 is done\",","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"hmanhduc2k"},"content":"                Parser.parse(\"done 69\", new TaskListStub()));","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"hmanhduc2k"},"content":"        assertEquals(\"Task of index 6 is deleted\",","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"hmanhduc2k"},"content":"                Parser.parse(\"delete 6\", new TaskListStub()));","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"hmanhduc2k"},"content":"        assertEquals(\"Task list is reset to empty\",","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"hmanhduc2k"},"content":"                Parser.parse(\"delete all\", new TaskListStub()));","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"hmanhduc2k"},"content":"        assertEquals(\"Task of index 35 is deleted\",","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"hmanhduc2k"},"content":"                Parser.parse(\"delete 35\", new TaskListStub()));","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"hmanhduc2k"},"content":"        assertThrows(DukeException.class, () -\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"hmanhduc2k"},"content":"                Parser.parse(\"bruh\", new TaskListStub()));","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"hmanhduc2k"},"content":"        assertThrows(DukeException.class, () -\u003e","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"hmanhduc2k"},"content":"                Parser.parse(\"oof\", new TaskListStub()));","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"hmanhduc2k"},"content":"        assertEquals(\"Noted, task coding is added\",","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"hmanhduc2k"},"content":"                Parser.parse(\"todo coding\", new TaskListStub()));","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"hmanhduc2k"},"content":"        assertEquals(\"Noted, task IP project is added\",","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"hmanhduc2k"},"content":"                Parser.parse(\"deadline IP project\", new TaskListStub()));","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"hmanhduc2k"},"content":"    private static class TaskListStub extends TaskList {","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"hmanhduc2k"},"content":"        @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"hmanhduc2k"},"content":"        public String printList() {","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"hmanhduc2k"},"content":"            return \"1. Item 1\\n2. Item 2\\n3. Item 3\";","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"hmanhduc2k"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"hmanhduc2k"},"content":"        @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"hmanhduc2k"},"content":"        public String done(int index) {","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"hmanhduc2k"},"content":"            return \"Task of index \" + index + \" is done\";","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"hmanhduc2k"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"hmanhduc2k"},"content":"        @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"hmanhduc2k"},"content":"        public String doneAll() {","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"hmanhduc2k"},"content":"            return \"All tasks are done\";","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"hmanhduc2k"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"hmanhduc2k"},"content":"        @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"hmanhduc2k"},"content":"        public String delete(int index) {","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"hmanhduc2k"},"content":"            return \"Task of index \" + index + \" is deleted\";","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"hmanhduc2k"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"hmanhduc2k"},"content":"        @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"hmanhduc2k"},"content":"        public String deleteAll() {","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"hmanhduc2k"},"content":"            return \"Task list is reset to empty\";","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"hmanhduc2k"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"hmanhduc2k"},"content":"        @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"hmanhduc2k"},"content":"        public String addTask(String task, Task.Type type) {","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"hmanhduc2k"},"content":"            return \"Noted, task \" + task + \" is added\";","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"hmanhduc2k"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"hmanhduc2k"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"hmanhduc2k":94}},{"path":"src/test/java/Duke/Main/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hmanhduc2k"},"content":"package Duke.Main;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"hmanhduc2k"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"hmanhduc2k"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"hmanhduc2k"},"content":"public class UiTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"hmanhduc2k"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"hmanhduc2k"},"content":"    @BeforeAll","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"hmanhduc2k"},"content":"    public void setup() {","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"hmanhduc2k"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"hmanhduc2k"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"hmanhduc2k":14}},{"path":"src/test/java/MainTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hmanhduc2k"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"hmanhduc2k"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"hmanhduc2k"},"content":"public class MainTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"hmanhduc2k"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"hmanhduc2k"},"content":"    public void test1() {","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"hmanhduc2k"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"hmanhduc2k"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"hmanhduc2k"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"hmanhduc2k":10}},{"path":"taskFile/instructions.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"hmanhduc2k"},"content":"Welcome to Duke!","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"hmanhduc2k"},"content":"Here is a comprehensive list of commands you can use:","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"hmanhduc2k"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"hmanhduc2k"},"content":"1. \u0027help\u0027: Help you with how to use the commands","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"hmanhduc2k"},"content":"2. \u0027list\u0027: Display a list of all current tasks you are having","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"hmanhduc2k"},"content":"3. \u0027todo\u0027: Add a to-do task with no specific deadline to list","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"hmanhduc2k"},"content":"    How to use? \u0027todo\u0027 + \u003ctask name\u003e","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"hmanhduc2k"},"content":"4. \u0027deadline\u0027: Add a task with upcoming deadline to your list","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"hmanhduc2k"},"content":"    How to use? \u0027deadline\u0027 + \u003ctask name\u003e + /by + \u003cdeadline\u003e","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"hmanhduc2k"},"content":"5. \u0027event\u0027: Add a task event with occurred time to your list","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"hmanhduc2k"},"content":"    How to use? \u0027event\u0027 + \u003ctask name\u003e + /at + \u003ctime\u003e","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"hmanhduc2k"},"content":"6. \u0027done\u0027: Mark one task (or all tasks) in your list as done","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"hmanhduc2k"},"content":"    How to use? \u0027done\u0027 + \u003ctask index\u003e (or + \u0027all\u0027)","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"hmanhduc2k"},"content":"7. \u0027delete\u0027: Delete one task (or all) in your list","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"hmanhduc2k"},"content":"    How to use? \u0027delete\u0027 + \u003ctask index\u003e (or + \u0027all\u0027)","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"hmanhduc2k"},"content":"8. \u0027bye\u0027: Exit the program","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"hmanhduc2k":16}},{"path":"taskFile/taskList.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"hmanhduc2k"},"content":"[T][ ] walk 10k steps","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"hmanhduc2k"},"content":"[D][X] cs2100 (by 2021-08-24)","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"hmanhduc2k"},"content":"[E][ ] cs2103t meeting (at 2021-08-26)","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"hmanhduc2k":3}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"hmanhduc2k"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"hmanhduc2k"},"content":"event ACC1703X lecture /at 10AM tomorrow","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"hmanhduc2k"},"content":"deadline ip Project /by 23:59 tomorrow","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"hmanhduc2k"},"content":"todo walk at least 10000 steps","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"hmanhduc2k"},"content":"I hate myself","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"hmanhduc2k"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"hmanhduc2k"},"content":"done 1","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"hmanhduc2k"},"content":"   done  2","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"hmanhduc2k"},"content":"done 3","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"hmanhduc2k"},"content":"  list","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"hmanhduc2k"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"hmanhduc2k":11}}]
