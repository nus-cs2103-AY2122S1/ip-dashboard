[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"michael-lee-sk"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"michael-lee-sk":1,"-":45}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michael-lee-sk"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"michael-lee-sk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"michael-lee-sk"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"michael-lee-sk"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"michael-lee-sk"},"content":" * Deadline class is a task. The input must be in such a format","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"michael-lee-sk"},"content":" * \"deadline \u003cdeadline name\u003e /by \u003cdeadline date\u003e\".","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"michael-lee-sk"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"michael-lee-sk"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"michael-lee-sk"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"michael-lee-sk"},"content":"    final String DEADLINE \u003d \"[D]\";","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"michael-lee-sk"},"content":"    protected String dateAndTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"michael-lee-sk"},"content":"    protected LocalDateTime localDateTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"michael-lee-sk"},"content":"    private DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"michael-lee-sk"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"michael-lee-sk"},"content":"     * Constructs a deadline.","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"michael-lee-sk"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"michael-lee-sk"},"content":"     * @param description Description of the event.","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"michael-lee-sk"},"content":"     * @param dateAndTime Date and time of the event.","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"michael-lee-sk"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"michael-lee-sk"},"content":"    public Deadline(String description, String dateAndTime) {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"michael-lee-sk"},"content":"        super(description);","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"michael-lee-sk"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"michael-lee-sk"},"content":"        this.dateAndTime \u003d dateAndTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"michael-lee-sk"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"michael-lee-sk"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"michael-lee-sk"},"content":"     * Formats the date and time in order to be","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"michael-lee-sk"},"content":"     * parsed into the DateTimeFormatter.","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"michael-lee-sk"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"michael-lee-sk"},"content":"    public void formatLocalDateTime() {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"michael-lee-sk"},"content":"        if (this.dateAndTime.substring(0, 1).matches(\"[0-9]\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"michael-lee-sk"},"content":"            DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"michael-lee-sk"},"content":"            this.localDateTime \u003d LocalDateTime.parse(dateAndTime, dateTimeFormatter);","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"michael-lee-sk"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"michael-lee-sk"},"content":"            this.localDateTime \u003d LocalDateTime.parse(dateAndTime, dtf);","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"michael-lee-sk"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"michael-lee-sk"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"michael-lee-sk"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"michael-lee-sk"},"content":"     * Returns the date and time of the deadline in a string.","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"michael-lee-sk"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"michael-lee-sk"},"content":"     * @return Returns the date and time of the deadline.","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"michael-lee-sk"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"michael-lee-sk"},"content":"    public String getDate() {","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"michael-lee-sk"},"content":"        return this.dateAndTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"michael-lee-sk"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"michael-lee-sk"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"michael-lee-sk"},"content":"     * Returns the string of the deadline","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"michael-lee-sk"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"michael-lee-sk"},"content":"     * @return String of event","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"michael-lee-sk"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"michael-lee-sk"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":57,"author":{"gitId":"michael-lee-sk"},"content":"    public String toString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"michael-lee-sk"},"content":"        formatLocalDateTime();","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"michael-lee-sk"},"content":"        return DEADLINE + this.getStatusIcon() + \" \" + this.getDescription() + \" (by: \" + localDateTime.format(dtf) + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"michael-lee-sk"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":62,"author":{"gitId":"michael-lee-sk"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"michael-lee-sk"},"content":"     * Checks to see if two deadlines are equal in description and status.","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"michael-lee-sk"},"content":"     * Returns false if object is not equal to this deadline.","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"michael-lee-sk"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"michael-lee-sk"},"content":"     * @param object Object compared to.","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"michael-lee-sk"},"content":"     * @return Boolean true if equal, false otherwise.","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"michael-lee-sk"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"michael-lee-sk"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"michael-lee-sk"},"content":"    public boolean equals(Object object) {","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"michael-lee-sk"},"content":"        if (object instanceof Deadline) {","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"michael-lee-sk"},"content":"            Deadline deadline \u003d (Deadline) object;","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"michael-lee-sk"},"content":"            return deadline.isDone \u003d\u003d this.isDone \u0026\u0026 deadline.description.equals(this.description);","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"michael-lee-sk"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"michael-lee-sk"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"michael-lee-sk"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"michael-lee-sk"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"michael-lee-sk":77}},{"path":"src/main/java/duke/DeleteException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michael-lee-sk"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"michael-lee-sk"},"content":"public class DeleteException extends Exception {","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"michael-lee-sk"},"content":"    public DeleteException() {","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"michael-lee-sk"},"content":"        super(\"There is nothing to delete here!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"michael-lee-sk"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"michael-lee-sk"},"content":"    public DeleteException(String message) {","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"michael-lee-sk"},"content":"        super(message);","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"michael-lee-sk"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"michael-lee-sk"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"michael-lee-sk":12}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michael-lee-sk"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"michael-lee-sk"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"michael-lee-sk"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"michael-lee-sk"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"michael-lee-sk"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"michael-lee-sk"},"content":" * Duke class to store a list of tasks, which you can add upon.","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"michael-lee-sk"},"content":" * The 3 different tasks include event, todo, and deadline.","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"michael-lee-sk"},"content":" * Duke supports functions such as done, delete, find, and list too.","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"michael-lee-sk"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"michael-lee-sk"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"michael-lee-sk"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"michael-lee-sk"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"michael-lee-sk"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"michael-lee-sk"},"content":"     * Constructs Duke.","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"michael-lee-sk"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"michael-lee-sk"},"content":"     * @param filePath Filepath to store.","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"michael-lee-sk"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"michael-lee-sk"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"michael-lee-sk"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"michael-lee-sk"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"michael-lee-sk"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"michael-lee-sk"},"content":"            tasks \u003d storage.load();","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"michael-lee-sk"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"michael-lee-sk"},"content":"            ui.showLoadingErrorMessage();","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"michael-lee-sk"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"michael-lee-sk"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"michael-lee-sk"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"michael-lee-sk"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"michael-lee-sk"},"content":"        Duke duke \u003d new Duke(\"data/tasks.txt\");","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"michael-lee-sk"},"content":"        duke.run();","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"michael-lee-sk"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"michael-lee-sk"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"michael-lee-sk"},"content":"     * Runs the Duke program such that a user is able to","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"michael-lee-sk"},"content":"     * input events.","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"michael-lee-sk"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"michael-lee-sk"},"content":"    public void run() {","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"michael-lee-sk"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"michael-lee-sk"},"content":"        ui.showIntroMessage();","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"michael-lee-sk"},"content":"        while (!storage.isExit() \u0026\u0026 sc.hasNextLine()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"michael-lee-sk"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"michael-lee-sk"},"content":"                Parser p \u003d new Parser(sc.nextLine(), ui, storage, tasks);","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"michael-lee-sk"},"content":"                p.parseCommand();","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"michael-lee-sk"},"content":"            } catch (DeleteException | DukeException | IOException | StringIndexOutOfBoundsException | duke.FindException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"michael-lee-sk"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"michael-lee-sk"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"michael-lee-sk"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"michael-lee-sk"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"michael-lee-sk":53,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michael-lee-sk"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"michael-lee-sk"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"michael-lee-sk"},"content":"    DukeException() {","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"michael-lee-sk"},"content":"        super(\"todo/event/delete cannot be empty.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"michael-lee-sk"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"michael-lee-sk"},"content":"    DukeException(String message, String description) {","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"michael-lee-sk"},"content":"        super(\"The description of a \" + message + \" cannot be empty. It has to be in this format: \" + description);","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"michael-lee-sk"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"michael-lee-sk"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"michael-lee-sk":11}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michael-lee-sk"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"michael-lee-sk"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"michael-lee-sk"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"michael-lee-sk"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"michael-lee-sk"},"content":" * Event class is a task. The input must be in such a format","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"michael-lee-sk"},"content":" * \"Event \u003cevent name\u003e /at \u003cevent date\u003e\".","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"michael-lee-sk"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"michael-lee-sk"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"michael-lee-sk"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"michael-lee-sk"},"content":"    private final String EVENT \u003d \"[E]\";","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"michael-lee-sk"},"content":"    protected String dateAndTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"michael-lee-sk"},"content":"    protected LocalDateTime localDateTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"michael-lee-sk"},"content":"    private DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"michael-lee-sk"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"michael-lee-sk"},"content":"     * Constructs an event.","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"michael-lee-sk"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"michael-lee-sk"},"content":"     * @param description Description of the event.","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"michael-lee-sk"},"content":"     * @param dateAndTime Date and time of the event.","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"michael-lee-sk"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"michael-lee-sk"},"content":"    public Event(String description, String dateAndTime) {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"michael-lee-sk"},"content":"        super(description);","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"michael-lee-sk"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"michael-lee-sk"},"content":"        this.dateAndTime \u003d dateAndTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"michael-lee-sk"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"michael-lee-sk"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"michael-lee-sk"},"content":"     * Returns the date and time of the event in a string.","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"michael-lee-sk"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"michael-lee-sk"},"content":"     * @return Returns the date and time of the event.","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"michael-lee-sk"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"michael-lee-sk"},"content":"    public String getDate() {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"michael-lee-sk"},"content":"        return this.dateAndTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"michael-lee-sk"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"michael-lee-sk"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"michael-lee-sk"},"content":"     * Formats the date and time in order to be","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"michael-lee-sk"},"content":"     * parsed into the DateTimeFormatter.","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"michael-lee-sk"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"michael-lee-sk"},"content":"    public void formatLocalDateTime() {","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"michael-lee-sk"},"content":"        if (this.dateAndTime.substring(0, 1).matches(\"[0-9]\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"michael-lee-sk"},"content":"            DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"michael-lee-sk"},"content":"            this.localDateTime \u003d LocalDateTime.parse(dateAndTime, dateTimeFormatter);","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"michael-lee-sk"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"michael-lee-sk"},"content":"            this.localDateTime \u003d LocalDateTime.parse(dateAndTime, dtf);","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"michael-lee-sk"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"michael-lee-sk"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":50,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":51,"author":{"gitId":"michael-lee-sk"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"michael-lee-sk"},"content":"     * Returns the string of the event.","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"michael-lee-sk"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"michael-lee-sk"},"content":"     * @return String of event.","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"michael-lee-sk"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"michael-lee-sk"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":57,"author":{"gitId":"michael-lee-sk"},"content":"    public String toString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"michael-lee-sk"},"content":"        formatLocalDateTime();","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"michael-lee-sk"},"content":"        return EVENT + this.getStatusIcon() + \" \" + this.getDescription() + \" (at: \" + localDateTime.format(dtf) + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"michael-lee-sk"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"michael-lee-sk"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"michael-lee-sk"},"content":"     * Checks to see if two events are equal in description and status.","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"michael-lee-sk"},"content":"     * Returns false if object is not equal to this event.","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"michael-lee-sk"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"michael-lee-sk"},"content":"     * @param object Object compared to.","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"michael-lee-sk"},"content":"     * @return Boolean true if equal, false otherwise.","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"michael-lee-sk"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"michael-lee-sk"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"michael-lee-sk"},"content":"    public boolean equals(Object object) {","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"michael-lee-sk"},"content":"        if (object instanceof Event) {","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"michael-lee-sk"},"content":"            Event event \u003d (Event) object;","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"michael-lee-sk"},"content":"            return (event.getDone() \u003d\u003d this.getDone()) \u0026\u0026 event.description.equals(this.description);","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"michael-lee-sk"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"michael-lee-sk"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"michael-lee-sk"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"michael-lee-sk"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"michael-lee-sk":77}},{"path":"src/main/java/duke/FindException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michael-lee-sk"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"michael-lee-sk"},"content":"public class FindException extends Exception {","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"michael-lee-sk"},"content":"    public FindException() {","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"michael-lee-sk"},"content":"        super(\"Sorry, your find command is incomplete. Please type in a description\");","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"michael-lee-sk"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"michael-lee-sk"},"content":"    public FindException(String message) {","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"michael-lee-sk"},"content":"        super(message);","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"michael-lee-sk"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"michael-lee-sk"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"michael-lee-sk":11}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michael-lee-sk"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"michael-lee-sk"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"michael-lee-sk"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"michael-lee-sk"},"content":" * Parser class to parse the input commands by the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"michael-lee-sk"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"michael-lee-sk"},"content":"public class Parser {","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"michael-lee-sk"},"content":"    private String command;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"michael-lee-sk"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"michael-lee-sk"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"michael-lee-sk"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"michael-lee-sk"},"content":"    enum Activity {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"michael-lee-sk"},"content":"        TODO, DONE, EVENT, DELETE, DEADLINE, BYE, LIST, NORMAL, FIND","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"michael-lee-sk"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"michael-lee-sk"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"michael-lee-sk"},"content":"     * Constructs a Parser.","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"michael-lee-sk"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"michael-lee-sk"},"content":"     * @param command The input command of the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"michael-lee-sk"},"content":"     * @param ui The Ui to return messages to the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"michael-lee-sk"},"content":"     * @param storage To load or save tasks by the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"michael-lee-sk"},"content":"     * @param tasks The list of tasks input by the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"michael-lee-sk"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"michael-lee-sk"},"content":"    public Parser(String command, Ui ui, Storage storage, TaskList tasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"michael-lee-sk"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"michael-lee-sk"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"michael-lee-sk"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"michael-lee-sk"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"michael-lee-sk"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"michael-lee-sk"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"michael-lee-sk"},"content":"     * Returns a boolean, whether a program should end or not.","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"michael-lee-sk"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"michael-lee-sk"},"content":"     * @return True if program should still run, false otherwise.","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"michael-lee-sk"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"michael-lee-sk"},"content":"    public boolean getRun() {","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"michael-lee-sk"},"content":"        return !storage.isExit();","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"michael-lee-sk"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"michael-lee-sk"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"michael-lee-sk"},"content":"     * Parses the user command and inputs the task accordingly.","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"michael-lee-sk"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"michael-lee-sk"},"content":"     * @throws DukeException If task input by user is incomplete.","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"michael-lee-sk"},"content":"     * @throws DeleteException If delete is incomplete.","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"michael-lee-sk"},"content":"     * @throws IOException If an input or output operation is failed or interpreted.","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"michael-lee-sk"},"content":"     * @throws FindException If Find is incomplete.","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"michael-lee-sk"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"michael-lee-sk"},"content":"    public void parseCommand() throws DukeException, DeleteException, IOException, FindException {","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"michael-lee-sk"},"content":"        Activity activity;","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"michael-lee-sk"},"content":"        if (command.equals(\"bye\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"michael-lee-sk"},"content":"            activity \u003d Activity.BYE;","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"michael-lee-sk"},"content":"        } else if (command.equals(\"list\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"michael-lee-sk"},"content":"            activity \u003d Activity.LIST;","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"michael-lee-sk"},"content":"        } else if (command.startsWith(\"done\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"michael-lee-sk"},"content":"            activity \u003d Activity.DONE;","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"michael-lee-sk"},"content":"        } else if (command.startsWith(\"todo\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"michael-lee-sk"},"content":"            activity \u003d Activity.TODO;","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"michael-lee-sk"},"content":"        } else if (command.startsWith(\"event\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"michael-lee-sk"},"content":"            activity \u003d Activity.EVENT;","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"michael-lee-sk"},"content":"        } else if (command.startsWith(\"deadline\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"michael-lee-sk"},"content":"            activity \u003d Activity.DEADLINE;","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"michael-lee-sk"},"content":"        } else if (command.startsWith(\"delete\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"michael-lee-sk"},"content":"            activity \u003d Activity.DELETE;","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"michael-lee-sk"},"content":"        } else if (command.startsWith(\"find\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"michael-lee-sk"},"content":"            activity \u003d Activity.FIND;","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"michael-lee-sk"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"michael-lee-sk"},"content":"            activity \u003d Activity.NORMAL;","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"michael-lee-sk"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"michael-lee-sk"},"content":"        switch (activity) {","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"michael-lee-sk"},"content":"            case BYE: {","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"michael-lee-sk"},"content":"                ui.showGoodbyeMessage();","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"michael-lee-sk"},"content":"                storage.setExit();","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"michael-lee-sk"},"content":"                return;","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"michael-lee-sk"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"michael-lee-sk"},"content":"            case DONE: {","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"michael-lee-sk"},"content":"                int index \u003d Integer.parseInt(command.substring(5)) - 1;","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"michael-lee-sk"},"content":"                Task currentTask \u003d tasks.get(index);","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"michael-lee-sk"},"content":"                currentTask.setDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"michael-lee-sk"},"content":"                ui.showDoneMessage(currentTask);","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"michael-lee-sk"},"content":"                storage.save(tasks);","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"michael-lee-sk"},"content":"                break;","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"michael-lee-sk"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"michael-lee-sk"},"content":"            case LIST: {","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"michael-lee-sk"},"content":"                ui.showListMessage(tasks);","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"michael-lee-sk"},"content":"                break;","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"michael-lee-sk"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"michael-lee-sk"},"content":"            case TODO: {","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"michael-lee-sk"},"content":"                String desc \u003d command.substring(4);","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"michael-lee-sk"},"content":"                if (desc.isEmpty()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"michael-lee-sk"},"content":"                    throw new DukeException(\"todo\", \"\u0027todo borrow book\u0027\");","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"michael-lee-sk"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"michael-lee-sk"},"content":"                ToDo toDo \u003d new ToDo(command.substring(5));","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"michael-lee-sk"},"content":"                tasks.add(toDo);","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"michael-lee-sk"},"content":"                ui.showTaskMessage(toDo, tasks);","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"michael-lee-sk"},"content":"                storage.save(tasks);","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"michael-lee-sk"},"content":"                break;","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"michael-lee-sk"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"michael-lee-sk"},"content":"            case EVENT: {","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"michael-lee-sk"},"content":"                String desc \u003d command.substring(5);","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"michael-lee-sk"},"content":"                if (desc.isEmpty()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"michael-lee-sk"},"content":"                    throw new DukeException(\"event\", \"\u0027event project meeting /at Aug 26 2021 19:15\u0027\");","lastModifiedDate":"2021-08-26"},{"lineNumber":109,"author":{"gitId":"michael-lee-sk"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"michael-lee-sk"},"content":"                int escapeIndex \u003d command.lastIndexOf(\"/\");","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"michael-lee-sk"},"content":"                String dateAndTime \u003d command.substring(escapeIndex + 4);","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"michael-lee-sk"},"content":"                Event event \u003d new Event(command.substring(6, escapeIndex - 1), dateAndTime);","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"michael-lee-sk"},"content":"                tasks.add(event);","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"michael-lee-sk"},"content":"                ui.showTaskMessage(event, tasks);","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"michael-lee-sk"},"content":"                storage.save(tasks);","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"michael-lee-sk"},"content":"                break;","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"michael-lee-sk"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"michael-lee-sk"},"content":"            case DELETE: {","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"michael-lee-sk"},"content":"                int index \u003d Integer.parseInt(command.substring(7)) - 1;","lastModifiedDate":"2021-08-25"},{"lineNumber":121,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"michael-lee-sk"},"content":"                if (index \u003e\u003d tasks.size()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"michael-lee-sk"},"content":"                    throw new DeleteException();","lastModifiedDate":"2021-08-25"},{"lineNumber":124,"author":{"gitId":"michael-lee-sk"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":125,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":126,"author":{"gitId":"michael-lee-sk"},"content":"                Task currentTask \u003d tasks.get(index);","lastModifiedDate":"2021-08-25"},{"lineNumber":127,"author":{"gitId":"michael-lee-sk"},"content":"                tasks.remove(index);","lastModifiedDate":"2021-08-25"},{"lineNumber":128,"author":{"gitId":"michael-lee-sk"},"content":"                ui.showDeleteMessage(currentTask, tasks);","lastModifiedDate":"2021-08-25"},{"lineNumber":129,"author":{"gitId":"michael-lee-sk"},"content":"                storage.save(tasks);","lastModifiedDate":"2021-08-25"},{"lineNumber":130,"author":{"gitId":"michael-lee-sk"},"content":"                break;","lastModifiedDate":"2021-08-25"},{"lineNumber":131,"author":{"gitId":"michael-lee-sk"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":132,"author":{"gitId":"michael-lee-sk"},"content":"            case DEADLINE: {","lastModifiedDate":"2021-08-25"},{"lineNumber":133,"author":{"gitId":"michael-lee-sk"},"content":"                String desc \u003d command.substring(8);","lastModifiedDate":"2021-08-25"},{"lineNumber":134,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":135,"author":{"gitId":"michael-lee-sk"},"content":"                if (desc.isEmpty()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":136,"author":{"gitId":"michael-lee-sk"},"content":"                    throw new DukeException(\"deadline\", \"\u0027deadline return book /by 2021-08-27 14:15\u0027\");","lastModifiedDate":"2021-08-26"},{"lineNumber":137,"author":{"gitId":"michael-lee-sk"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":138,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":139,"author":{"gitId":"michael-lee-sk"},"content":"                int escapeIndex \u003d command.lastIndexOf(\"/\");","lastModifiedDate":"2021-08-25"},{"lineNumber":140,"author":{"gitId":"michael-lee-sk"},"content":"                String dateAndTime \u003d command.substring(escapeIndex + 4);","lastModifiedDate":"2021-08-25"},{"lineNumber":141,"author":{"gitId":"michael-lee-sk"},"content":"                Deadline deadline \u003d new Deadline(command.substring(9, escapeIndex - 1), dateAndTime);","lastModifiedDate":"2021-08-25"},{"lineNumber":142,"author":{"gitId":"michael-lee-sk"},"content":"                tasks.add(deadline);","lastModifiedDate":"2021-08-25"},{"lineNumber":143,"author":{"gitId":"michael-lee-sk"},"content":"                ui.showTaskMessage(deadline, tasks);","lastModifiedDate":"2021-08-25"},{"lineNumber":144,"author":{"gitId":"michael-lee-sk"},"content":"                storage.save(tasks);","lastModifiedDate":"2021-08-25"},{"lineNumber":145,"author":{"gitId":"michael-lee-sk"},"content":"                break;","lastModifiedDate":"2021-08-25"},{"lineNumber":146,"author":{"gitId":"michael-lee-sk"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":147,"author":{"gitId":"michael-lee-sk"},"content":"            case FIND: {","lastModifiedDate":"2021-08-26"},{"lineNumber":148,"author":{"gitId":"michael-lee-sk"},"content":"                TaskList matchingTasks \u003d new TaskList();","lastModifiedDate":"2021-08-26"},{"lineNumber":149,"author":{"gitId":"michael-lee-sk"},"content":"                String desc \u003d command.substring(4);","lastModifiedDate":"2021-08-26"},{"lineNumber":150,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":151,"author":{"gitId":"michael-lee-sk"},"content":"                if (desc.isEmpty()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":152,"author":{"gitId":"michael-lee-sk"},"content":"                    throw new FindException();","lastModifiedDate":"2021-08-26"},{"lineNumber":153,"author":{"gitId":"michael-lee-sk"},"content":"                }","lastModifiedDate":"2021-08-26"},{"lineNumber":154,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":155,"author":{"gitId":"michael-lee-sk"},"content":"                for (Task t : tasks) {","lastModifiedDate":"2021-08-26"},{"lineNumber":156,"author":{"gitId":"michael-lee-sk"},"content":"                    if (t.toString().contains(desc)) {","lastModifiedDate":"2021-08-26"},{"lineNumber":157,"author":{"gitId":"michael-lee-sk"},"content":"                        matchingTasks.add(t);","lastModifiedDate":"2021-08-26"},{"lineNumber":158,"author":{"gitId":"michael-lee-sk"},"content":"                    }","lastModifiedDate":"2021-08-26"},{"lineNumber":159,"author":{"gitId":"michael-lee-sk"},"content":"                }","lastModifiedDate":"2021-08-26"},{"lineNumber":160,"author":{"gitId":"michael-lee-sk"},"content":"                if (matchingTasks.isEmpty()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":161,"author":{"gitId":"michael-lee-sk"},"content":"                    ui.showNothingFoundMessage();","lastModifiedDate":"2021-08-26"},{"lineNumber":162,"author":{"gitId":"michael-lee-sk"},"content":"                } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":163,"author":{"gitId":"michael-lee-sk"},"content":"                    ui.showListMessage(\"matching\", matchingTasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":164,"author":{"gitId":"michael-lee-sk"},"content":"                }","lastModifiedDate":"2021-08-26"},{"lineNumber":165,"author":{"gitId":"michael-lee-sk"},"content":"                break;","lastModifiedDate":"2021-08-26"},{"lineNumber":166,"author":{"gitId":"michael-lee-sk"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":167,"author":{"gitId":"michael-lee-sk"},"content":"            default: {","lastModifiedDate":"2021-08-25"},{"lineNumber":168,"author":{"gitId":"michael-lee-sk"},"content":"                ui.showUnknownMessage();","lastModifiedDate":"2021-08-25"},{"lineNumber":169,"author":{"gitId":"michael-lee-sk"},"content":"                break;","lastModifiedDate":"2021-08-25"},{"lineNumber":170,"author":{"gitId":"michael-lee-sk"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":171,"author":{"gitId":"michael-lee-sk"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":172,"author":{"gitId":"michael-lee-sk"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":173,"author":{"gitId":"michael-lee-sk"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"michael-lee-sk":173}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michael-lee-sk"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"michael-lee-sk"},"content":"import java.io.File;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"michael-lee-sk"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"michael-lee-sk"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"michael-lee-sk"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"michael-lee-sk"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"michael-lee-sk"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"michael-lee-sk"},"content":" * Deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"michael-lee-sk"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"michael-lee-sk"},"content":"public class Storage {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"michael-lee-sk"},"content":"    private static String filePath;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"michael-lee-sk"},"content":"    private boolean shouldExit \u003d false;","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"michael-lee-sk"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"michael-lee-sk"},"content":"     * Constructs Storage.","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"michael-lee-sk"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"michael-lee-sk"},"content":"     * @param filePath The filepath to store tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"michael-lee-sk"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"michael-lee-sk"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"michael-lee-sk"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"michael-lee-sk"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"michael-lee-sk"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"michael-lee-sk"},"content":"     * Saves the list of tasks in a file.","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"michael-lee-sk"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"michael-lee-sk"},"content":"     * @param tasks The list of tasks to be saved.","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"michael-lee-sk"},"content":"     * @throws IOException If an input or output operation is failed or interpreted.","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"michael-lee-sk"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"michael-lee-sk"},"content":"    public void save(TaskList tasks) throws IOException {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"michael-lee-sk"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"michael-lee-sk"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"michael-lee-sk"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"michael-lee-sk"},"content":"            String status \u003d task.isDone ? \"1\" : \"0\";","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"michael-lee-sk"},"content":"            String date \u003d \"\";","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"michael-lee-sk"},"content":"            String activity \u003d \"\";","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"michael-lee-sk"},"content":"            String information \u003d \"\";","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"michael-lee-sk"},"content":"            if (task instanceof Event) {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"michael-lee-sk"},"content":"                activity \u003d \"E\";","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"michael-lee-sk"},"content":"                information \u003d task.getDescription();","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"michael-lee-sk"},"content":"                date \u003d ((Event) task).getDate();","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"michael-lee-sk"},"content":"                String desc \u003d String.format(\"%s | %s | %s | %s\\n\",activity, status, information,date);","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"michael-lee-sk"},"content":"                fw.write(desc);","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"michael-lee-sk"},"content":"            } else if (task instanceof Deadline) {","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"michael-lee-sk"},"content":"                activity \u003d \"D\";","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"michael-lee-sk"},"content":"                information \u003d task.getDescription();","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"michael-lee-sk"},"content":"                date \u003d ((Deadline) task).getDate();","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"michael-lee-sk"},"content":"                String desc \u003d String.format(\"%s | %s | %s | %s\\n\",activity, status, information, date);","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"michael-lee-sk"},"content":"                fw.write(desc);","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"michael-lee-sk"},"content":"            } else if (task instanceof ToDo) {","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"michael-lee-sk"},"content":"                activity \u003d \"T\";","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"michael-lee-sk"},"content":"                information \u003d task.getDescription();","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"michael-lee-sk"},"content":"                String desc \u003d String.format(\"%s | %s | %s\\n\",activity, status, information);","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"michael-lee-sk"},"content":"                fw.write(desc);","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"michael-lee-sk"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"michael-lee-sk"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"michael-lee-sk"},"content":"        fw.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"michael-lee-sk"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"michael-lee-sk"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"michael-lee-sk"},"content":"     * Loads the given file of tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"michael-lee-sk"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"michael-lee-sk"},"content":"     * @return The list of tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"michael-lee-sk"},"content":"     * @throws FileNotFoundException If file cannot be located.","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"michael-lee-sk"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"michael-lee-sk"},"content":"     public TaskList load() throws FileNotFoundException {","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"michael-lee-sk"},"content":"        Scanner s \u003d new Scanner(new File(filePath));","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"michael-lee-sk"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"michael-lee-sk"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"michael-lee-sk"},"content":"            String text \u003d s.nextLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"michael-lee-sk"},"content":"            String activity \u003d text.substring(0, 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"michael-lee-sk"},"content":"            String status \u003d text.substring(4, 5);","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"michael-lee-sk"},"content":"            String desc, date;","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"michael-lee-sk"},"content":"            if (activity.equals(\"T\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"michael-lee-sk"},"content":"                desc \u003d text.substring(8);","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"michael-lee-sk"},"content":"                ToDo todo \u003d new ToDo(desc);","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"michael-lee-sk"},"content":"                if (status.equals(\"1\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"michael-lee-sk"},"content":"                    todo.setDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"michael-lee-sk"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"michael-lee-sk"},"content":"                tasks.add(todo);","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"michael-lee-sk"},"content":"            } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"michael-lee-sk"},"content":"                int thirdBarId \u003d text.indexOf(\u0027|\u0027, 7);","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"michael-lee-sk"},"content":"                desc \u003d text.substring(8, thirdBarId - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"michael-lee-sk"},"content":"                date \u003d text.substring(thirdBarId + 2);","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"michael-lee-sk"},"content":"                if (activity.equals(\"D\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"michael-lee-sk"},"content":"                    Deadline deadline \u003d new Deadline(desc, date);","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"michael-lee-sk"},"content":"                    if (status.equals(\"1\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"michael-lee-sk"},"content":"                        deadline.setDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"michael-lee-sk"},"content":"                    }","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"michael-lee-sk"},"content":"                    tasks.add(deadline);","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"michael-lee-sk"},"content":"                } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"michael-lee-sk"},"content":"                    Event event \u003d new Event(desc, date);","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"michael-lee-sk"},"content":"                    if (status.equals(\"1\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"michael-lee-sk"},"content":"                        event.setDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"michael-lee-sk"},"content":"                    }","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"michael-lee-sk"},"content":"                    tasks.add(event);","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"michael-lee-sk"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"michael-lee-sk"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"michael-lee-sk"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"michael-lee-sk"},"content":"        System.out.println(\"These are your current activities:\");","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"michael-lee-sk"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"michael-lee-sk"},"content":"            System.out.println(tasks.get(i).toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"michael-lee-sk"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"michael-lee-sk"},"content":"        return tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"michael-lee-sk"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"michael-lee-sk"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":111,"author":{"gitId":"michael-lee-sk"},"content":"     * Checks if a program should end.","lastModifiedDate":"2021-08-26"},{"lineNumber":112,"author":{"gitId":"michael-lee-sk"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":113,"author":{"gitId":"michael-lee-sk"},"content":"     * @return True if program should end, false otherwise.","lastModifiedDate":"2021-08-26"},{"lineNumber":114,"author":{"gitId":"michael-lee-sk"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":115,"author":{"gitId":"michael-lee-sk"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"michael-lee-sk"},"content":"        return shouldExit;","lastModifiedDate":"2021-08-31"},{"lineNumber":117,"author":{"gitId":"michael-lee-sk"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"michael-lee-sk"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":120,"author":{"gitId":"michael-lee-sk"},"content":"     * Sets the boolean deciding whether a program should end.","lastModifiedDate":"2021-08-26"},{"lineNumber":121,"author":{"gitId":"michael-lee-sk"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":122,"author":{"gitId":"michael-lee-sk"},"content":"    public void setExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"michael-lee-sk"},"content":"        shouldExit \u003d true;","lastModifiedDate":"2021-08-31"},{"lineNumber":124,"author":{"gitId":"michael-lee-sk"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":125,"author":{"gitId":"michael-lee-sk"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"michael-lee-sk":125}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michael-lee-sk"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"michael-lee-sk"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"michael-lee-sk"},"content":" * A general task that a user can input.","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"michael-lee-sk"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"michael-lee-sk"},"content":"public class Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"michael-lee-sk"},"content":"    protected String description;","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"michael-lee-sk"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"michael-lee-sk"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"michael-lee-sk"},"content":"     * Constructs a task.","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"michael-lee-sk"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"michael-lee-sk"},"content":"     * @param description Description of the event.","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"michael-lee-sk"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"michael-lee-sk"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"michael-lee-sk"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"michael-lee-sk"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"michael-lee-sk"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"michael-lee-sk"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"michael-lee-sk"},"content":"     * Checks if a task is done, or not.","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"michael-lee-sk"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"michael-lee-sk"},"content":"     * @return Particular string if task is done, or not done.","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"michael-lee-sk"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"michael-lee-sk"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"michael-lee-sk"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"michael-lee-sk"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"michael-lee-sk"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"michael-lee-sk"},"content":"     * Sets boolean if task is done, or not.","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"michael-lee-sk"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"michael-lee-sk"},"content":"    public void setDone() {","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"michael-lee-sk"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"michael-lee-sk"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"michael-lee-sk"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"michael-lee-sk"},"content":"     * Checks if a task is done, or not.","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"michael-lee-sk"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"michael-lee-sk"},"content":"     * @return True if task is done, false otherwise.","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"michael-lee-sk"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"michael-lee-sk"},"content":"    public boolean getDone() {","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"michael-lee-sk"},"content":"        return isDone;","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"michael-lee-sk"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"michael-lee-sk"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"michael-lee-sk"},"content":"     * The description of a Task.","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"michael-lee-sk"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"michael-lee-sk"},"content":"     * @return String of task.","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"michael-lee-sk"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"michael-lee-sk"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-16"},{"lineNumber":51,"author":{"gitId":"michael-lee-sk"},"content":"        return this.description;","lastModifiedDate":"2021-08-16"},{"lineNumber":52,"author":{"gitId":"michael-lee-sk"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":53,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"michael-lee-sk"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"michael-lee-sk"},"content":"     * Returns the string of the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"michael-lee-sk"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"michael-lee-sk"},"content":"     * @return String of event.","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"michael-lee-sk"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"michael-lee-sk"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"michael-lee-sk"},"content":"    public String toString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"michael-lee-sk"},"content":"        return this.getStatusIcon() + \" \" + this.getDescription();","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"michael-lee-sk"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"michael-lee-sk"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"michael-lee-sk"},"content":"     * Checks to see if two tasks are equal in description and status.","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"michael-lee-sk"},"content":"     * Returns false if object is not equal to this task.","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"michael-lee-sk"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"michael-lee-sk"},"content":"     * @param object Object compared to.","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"michael-lee-sk"},"content":"     * @return True if equal, false otherwise.","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"michael-lee-sk"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"michael-lee-sk"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"michael-lee-sk"},"content":"    public boolean equals(Object object) {","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"michael-lee-sk"},"content":"        if (object instanceof Task) {","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"michael-lee-sk"},"content":"            Task task \u003d (Task) object;","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"michael-lee-sk"},"content":"            return task.getDone() \u003d\u003d this.getDone() \u0026\u0026 task.description.equals(this.description);","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"michael-lee-sk"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"michael-lee-sk"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"michael-lee-sk"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"michael-lee-sk"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"michael-lee-sk":79}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michael-lee-sk"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"michael-lee-sk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"michael-lee-sk"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"michael-lee-sk"},"content":" * Contains the task list.","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"michael-lee-sk"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"michael-lee-sk"},"content":"public class TaskList extends ArrayList\u003cTask\u003e {","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"michael-lee-sk"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"michael-lee-sk"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"michael-lee-sk"},"content":"     * Initialises an empty Tasklist.","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"michael-lee-sk"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"michael-lee-sk"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"michael-lee-sk"},"content":"        list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"michael-lee-sk"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"michael-lee-sk"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"michael-lee-sk"},"content":"     * Constructs a Tasklist.","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"michael-lee-sk"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"michael-lee-sk"},"content":"     * @param list Arraylist of tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"michael-lee-sk"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"michael-lee-sk"},"content":"    public TaskList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"michael-lee-sk"},"content":"        this.list \u003d list;","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"michael-lee-sk"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"michael-lee-sk"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"michael-lee-sk":26}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michael-lee-sk"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"michael-lee-sk"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"michael-lee-sk"},"content":" * Todo class is a task. The input must be in such a format","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"michael-lee-sk"},"content":" * \"todo \u003ctodo name\u003e\".","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"michael-lee-sk"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"michael-lee-sk"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"michael-lee-sk"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"michael-lee-sk"},"content":"    private final String TODO \u003d \"[T]\";","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"michael-lee-sk"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"michael-lee-sk"},"content":"     * Constructs a todo.","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"michael-lee-sk"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"michael-lee-sk"},"content":"     * @param description Description of the event.","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"michael-lee-sk"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"michael-lee-sk"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"michael-lee-sk"},"content":"        super(description);","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"michael-lee-sk"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"michael-lee-sk"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"michael-lee-sk"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"michael-lee-sk"},"content":"     * Returns the string of the todo.","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"michael-lee-sk"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"michael-lee-sk"},"content":"     * @return String of event.","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"michael-lee-sk"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"michael-lee-sk"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"michael-lee-sk"},"content":"    public String toString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"michael-lee-sk"},"content":"        return TODO + this.getStatusIcon() + \" \" + this.getDescription();","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"michael-lee-sk"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"michael-lee-sk"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"michael-lee-sk"},"content":"     * Checks to see if two todos are equal in description and status.","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"michael-lee-sk"},"content":"     * Returns false if object is not equal to this todo.","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"michael-lee-sk"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"michael-lee-sk"},"content":"     * @param object Object compared to.","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"michael-lee-sk"},"content":"     * @return Boolean true if equal, false otherwise.","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"michael-lee-sk"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"michael-lee-sk"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"michael-lee-sk"},"content":"    public boolean equals(Object object) {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"michael-lee-sk"},"content":"        if (object instanceof ToDo) {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"michael-lee-sk"},"content":"            ToDo toDo \u003d (ToDo) object;","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"michael-lee-sk"},"content":"            return toDo.getDone() \u003d\u003d this.getDone() \u0026\u0026 toDo.description.equals(this.description);","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"michael-lee-sk"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"michael-lee-sk"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"michael-lee-sk"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"michael-lee-sk"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"michael-lee-sk":46}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michael-lee-sk"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"michael-lee-sk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"michael-lee-sk"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"michael-lee-sk"},"content":" * Deals with the interaction of a user.","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"michael-lee-sk"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"michael-lee-sk"},"content":"public class Ui {","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"michael-lee-sk"},"content":"    private final String INTRO \u003d \"Hello! I\u0027m Duke\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"michael-lee-sk"},"content":"            + \"What can I do for you today?\";","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"michael-lee-sk"},"content":"    private final String OUTRO \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"michael-lee-sk"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"michael-lee-sk"},"content":"     * Prints intro message.","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"michael-lee-sk"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"michael-lee-sk"},"content":"    public void showIntroMessage() {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"michael-lee-sk"},"content":"        System.out.println(INTRO);","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"michael-lee-sk"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"michael-lee-sk"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"michael-lee-sk"},"content":"     * Prints outro message.","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"michael-lee-sk"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"michael-lee-sk"},"content":"    public void showGoodbyeMessage() {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"michael-lee-sk"},"content":"        System.out.println(OUTRO);","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"michael-lee-sk"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"michael-lee-sk"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"michael-lee-sk"},"content":"     * Prints done message.","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"michael-lee-sk"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"michael-lee-sk"},"content":"     * @param currentTask Task completed.","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"michael-lee-sk"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"michael-lee-sk"},"content":"    public void showDoneMessage(Task currentTask) {","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"michael-lee-sk"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\" + \"\\n\" + currentTask.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"michael-lee-sk"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"michael-lee-sk"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"michael-lee-sk"},"content":"     * Prints the tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"michael-lee-sk"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"michael-lee-sk"},"content":"     * @param list Tasks provided.","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"michael-lee-sk"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"michael-lee-sk"},"content":"    public void showListMessage(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"michael-lee-sk"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"michael-lee-sk"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"michael-lee-sk"},"content":"            Task currentTask \u003d list.get(i);","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"michael-lee-sk"},"content":"            System.out.println((i + 1) + \".\" + currentTask.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"michael-lee-sk"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"michael-lee-sk"},"content":"        System.out.println(\"You have a total of \" + list.size() + \" tasks\");","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"michael-lee-sk"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"michael-lee-sk"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"michael-lee-sk"},"content":"     * Prints the task added.","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"michael-lee-sk"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"michael-lee-sk"},"content":"     * @param description The task added.","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"michael-lee-sk"},"content":"     * @param list The list of tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"michael-lee-sk"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"michael-lee-sk"},"content":"    public void showListMessage(String description, ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"michael-lee-sk"},"content":"        System.out.format(\"Here are the %s tasks in your list:\\n\", description);","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"michael-lee-sk"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"michael-lee-sk"},"content":"            Task currentTask \u003d list.get(i);","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"michael-lee-sk"},"content":"            System.out.println((i + 1) + \".\" + currentTask.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"michael-lee-sk"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"michael-lee-sk"},"content":"        System.out.format(\"You have a total of \" + list.size() + \" %s tasks.\\n\", description);","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"michael-lee-sk"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"michael-lee-sk"},"content":"    public void showTaskMessage(Task currentTask, ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"michael-lee-sk"},"content":"        System.out.format(\"Got it. I\u0027ve added this task:\\n\" + currentTask.toString() + \"\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"michael-lee-sk"},"content":"                + \"Now you have %d tasks in this list.\\n\", list.size());","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"michael-lee-sk"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"michael-lee-sk"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"michael-lee-sk"},"content":"     * Prints the deleted task.","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"michael-lee-sk"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"michael-lee-sk"},"content":"     * @param currentTask The task deleted.","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"michael-lee-sk"},"content":"     * @param list The list of tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"michael-lee-sk"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"michael-lee-sk"},"content":"    public void showDeleteMessage(Task currentTask, ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"michael-lee-sk"},"content":"        System.out.format(\"Noted. I\u0027ve removed this task:\\n\" + currentTask.toString() + \"\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"michael-lee-sk"},"content":"                + \"Now you have %d tasks in the list\\n\", list.size());","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"michael-lee-sk"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"michael-lee-sk"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"michael-lee-sk"},"content":"     * Prints message if unknown command given.","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"michael-lee-sk"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"michael-lee-sk"},"content":"    public void showUnknownMessage() {","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"michael-lee-sk"},"content":"        System.out.println(\"Sorry, unknown command!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"michael-lee-sk"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"michael-lee-sk"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"michael-lee-sk"},"content":"     * Prints message if there are problems loading the list.","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"michael-lee-sk"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"michael-lee-sk"},"content":"    public void showLoadingErrorMessage() {","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"michael-lee-sk"},"content":"        System.out.println(\"Your file seems to have issues loading.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"michael-lee-sk"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"michael-lee-sk"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"michael-lee-sk"},"content":"     * Prints message if there are no matches in find.","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"michael-lee-sk"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":99,"author":{"gitId":"michael-lee-sk"},"content":"    public void showNothingFoundMessage() {","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"michael-lee-sk"},"content":"        System.out.println(\"Sorry, there are no matching tasks\");","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"michael-lee-sk"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"michael-lee-sk"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"michael-lee-sk":103}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michael-lee-sk"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"michael-lee-sk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"michael-lee-sk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"michael-lee-sk"},"content":"public class DukeTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"michael-lee-sk"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"michael-lee-sk"},"content":"    public void dummyTest(){","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"michael-lee-sk"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"michael-lee-sk"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"michael-lee-sk"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"michael-lee-sk":12}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michael-lee-sk"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"michael-lee-sk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"michael-lee-sk"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"michael-lee-sk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"michael-lee-sk"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"michael-lee-sk"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"michael-lee-sk"},"content":"    public void parserTestForStop() throws IOException, DeleteException, DukeException, FindException {","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"michael-lee-sk"},"content":"        Parser p \u003d new Parser(\"bye\", new Ui(), new Storage(\"./task_list.txt\"), new TaskList());","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"michael-lee-sk"},"content":"        p.parseCommand();","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"michael-lee-sk"},"content":"        assertEquals(false, p.getRun());","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"michael-lee-sk"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"michael-lee-sk"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"michael-lee-sk"},"content":"    public void parserTestForRun() throws DeleteException, DukeException, IOException, FindException {","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"michael-lee-sk"},"content":"        Parser p \u003d new Parser(\"list\", new Ui(), new Storage(\"./task_list.txt\"), new TaskList());","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"michael-lee-sk"},"content":"        p.parseCommand();","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"michael-lee-sk"},"content":"        assertEquals(true, p.getRun());","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"michael-lee-sk"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"michael-lee-sk"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"michael-lee-sk":24}},{"path":"src/test/java/duke/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"michael-lee-sk"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"michael-lee-sk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"michael-lee-sk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"michael-lee-sk"},"content":"public class TaskTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"michael-lee-sk"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"michael-lee-sk"},"content":"    public void eventTest() {","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"michael-lee-sk"},"content":"        Event firstEvent \u003d new Event(\"project meeting\", \"Aug 26 2021 19:15\");","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"michael-lee-sk"},"content":"        Event secondEvent \u003d new Event(\"project meeting\", \"Aug 26 2021 19:15\");","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"michael-lee-sk"},"content":"        secondEvent.setDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"michael-lee-sk"},"content":"        assertEquals(false, firstEvent.equals(secondEvent));","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"michael-lee-sk"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"michael-lee-sk"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"michael-lee-sk"},"content":"    public void deadlineTest() {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"michael-lee-sk"},"content":"        Deadline firstDeadline \u003d new Deadline(\"return book\", \"2021-08-27\");","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"michael-lee-sk"},"content":"        Deadline secondDeadline \u003d new Deadline(\"return book\", \"2021-08-27\");","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"michael-lee-sk"},"content":"        assertEquals(true, firstDeadline.equals(secondDeadline));","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"michael-lee-sk"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"michael-lee-sk"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"michael-lee-sk"},"content":"    public void toDoTest() {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"michael-lee-sk"},"content":"        ToDo firstToDo \u003d new ToDo(\"todo borrow book\");","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"michael-lee-sk"},"content":"        ToDo secondToDo \u003d new ToDo(\"todo borrow book\");","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"michael-lee-sk"},"content":"        assertEquals(true, firstToDo.equals(secondToDo));","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"michael-lee-sk"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"michael-lee-sk"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"michael-lee-sk"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"michael-lee-sk":29}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"michael-lee-sk"},"content":"todo borrow book","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"michael-lee-sk"},"content":"deadline return book /by 2021-08-27 14:15","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"michael-lee-sk"},"content":"event project meeting /at Aug 26 2021 19:15","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"michael-lee-sk"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"michael-lee-sk"},"content":"done 2","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"michael-lee-sk"},"content":"event dinner party /at Aug 25 2021 18:00","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"michael-lee-sk"},"content":"done 3","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"michael-lee-sk"},"content":"delete 2","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"michael-lee-sk"},"content":"event have dinner /at 2021-08-28 14:20","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"michael-lee-sk"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"michael-lee-sk"},"content":"bye","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"michael-lee-sk":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"michael-lee-sk"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"michael-lee-sk"},"content":"java -classpath ..\\bin duke/Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"michael-lee-sk":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"michael-lee-sk"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/java/duke/*.java","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"michael-lee-sk":1,"-":37}}]
