[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chownces"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"chownces"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"chownces"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"chownces"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"chownces"},"content":" * This class encapsulates a deadline task in the Duke Application.","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"chownces"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"chownces"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"chownces"},"content":"    private LocalDate by;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"chownces"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"chownces"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"chownces"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"chownces"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"chownces"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"chownces"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"chownces"},"content":"    public Deadline(String description, LocalDate by, boolean isDone) {","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"chownces"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"chownces"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"chownces"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"chownces"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"chownces"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"chownces"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"chownces"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(),","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"chownces"},"content":"                this.by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"chownces"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"chownces"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"chownces"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"chownces"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"chownces"},"content":"        return String.format(\"D,%s,%s\", super.toSaveFormat(), this.by);","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"chownces"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"chownces"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"chownces":30}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chownces"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"chownces"},"content":"import java.io.File;","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"chownces"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"chownces"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"chownces"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"chownces"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"chownces"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"chownces"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"chownces"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"chownces"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"chownces"},"content":"    private final String LINE \u003d \"-----------------------------------------------------------------------\\n\";","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"chownces"},"content":"    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"chownces"},"content":"    private final String DIRECTORY \u003d \"data\";","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"chownces"},"content":"    private final String FILENAME \u003d \"duke.txt\";","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"chownces"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"chownces"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"chownces"},"content":"     * Starts the Duke application.","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"chownces"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"chownces"},"content":"    private void startApp() {","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"chownces"},"content":"        // Print welcome text","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"chownces"},"content":"        System.out.println(LINE + logo + \"\\nHello! I\u0027m Duke :)\\nWhat can I do for you?\\n\" + LINE);","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"chownces"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"chownces"},"content":"        this.loadFromFile();","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"chownces"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"chownces"},"content":"        // Handle user input","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"chownces"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"chownces"},"content":"        while (true) {","lastModifiedDate":"2021-08-14"},{"lineNumber":34,"author":{"gitId":"chownces"},"content":"            this.handleCommand(sc.nextLine());","lastModifiedDate":"2021-08-14"},{"lineNumber":35,"author":{"gitId":"chownces"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":36,"author":{"gitId":"chownces"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":37,"author":{"gitId":"chownces"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":38,"author":{"gitId":"chownces"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":39,"author":{"gitId":"chownces"},"content":"     * Handles input commands to the Duke application.","lastModifiedDate":"2021-08-15"},{"lineNumber":40,"author":{"gitId":"chownces"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":41,"author":{"gitId":"chownces"},"content":"     * @param command The input command from the user.","lastModifiedDate":"2021-08-15"},{"lineNumber":42,"author":{"gitId":"chownces"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":43,"author":{"gitId":"chownces"},"content":"    private void handleCommand(String command) {","lastModifiedDate":"2021-08-14"},{"lineNumber":44,"author":{"gitId":"chownces"},"content":"        try {","lastModifiedDate":"2021-08-15"},{"lineNumber":45,"author":{"gitId":"chownces"},"content":"            if (command.equals(\"\")) {","lastModifiedDate":"2021-08-14"},{"lineNumber":46,"author":{"gitId":"chownces"},"content":"                // If user inputs empty string, do nothing","lastModifiedDate":"2021-08-14"},{"lineNumber":47,"author":{"gitId":"chownces"},"content":"                return;","lastModifiedDate":"2021-08-14"},{"lineNumber":48,"author":{"gitId":"chownces"},"content":"            } else if (command.equals(\"bye\")) {","lastModifiedDate":"2021-08-14"},{"lineNumber":49,"author":{"gitId":"chownces"},"content":"                this.handleBye();","lastModifiedDate":"2021-08-14"},{"lineNumber":50,"author":{"gitId":"chownces"},"content":"            } else if (command.equals(\"list\")) {","lastModifiedDate":"2021-08-14"},{"lineNumber":51,"author":{"gitId":"chownces"},"content":"                this.handleList();","lastModifiedDate":"2021-08-14"},{"lineNumber":52,"author":{"gitId":"chownces"},"content":"            } else if (command.matches(\"^done -?[0-9]+$\")) {","lastModifiedDate":"2021-08-15"},{"lineNumber":53,"author":{"gitId":"chownces"},"content":"                this.handleDone(command);","lastModifiedDate":"2021-08-14"},{"lineNumber":54,"author":{"gitId":"chownces"},"content":"            } else if (command.matches(\"^todo( .*)?\")) {","lastModifiedDate":"2021-08-15"},{"lineNumber":55,"author":{"gitId":"chownces"},"content":"                this.handleTodo(command);","lastModifiedDate":"2021-08-14"},{"lineNumber":56,"author":{"gitId":"chownces"},"content":"            } else if (command.matches(\"^deadline( .*)?\")) {","lastModifiedDate":"2021-08-15"},{"lineNumber":57,"author":{"gitId":"chownces"},"content":"                this.handleDeadline(command);","lastModifiedDate":"2021-08-14"},{"lineNumber":58,"author":{"gitId":"chownces"},"content":"            } else if (command.matches(\"^event( .*)?\")) {","lastModifiedDate":"2021-08-15"},{"lineNumber":59,"author":{"gitId":"chownces"},"content":"                this.handleEvent(command);","lastModifiedDate":"2021-08-14"},{"lineNumber":60,"author":{"gitId":"chownces"},"content":"            } else if (command.matches(\"^delete -?[0-9]+$\")) {","lastModifiedDate":"2021-08-15"},{"lineNumber":61,"author":{"gitId":"chownces"},"content":"                this.handleDelete(command);","lastModifiedDate":"2021-08-15"},{"lineNumber":62,"author":{"gitId":"chownces"},"content":"            } else {","lastModifiedDate":"2021-08-14"},{"lineNumber":63,"author":{"gitId":"chownces"},"content":"                throw new UnknownCommandException();","lastModifiedDate":"2021-08-15"},{"lineNumber":64,"author":{"gitId":"chownces"},"content":"            }","lastModifiedDate":"2021-08-15"},{"lineNumber":65,"author":{"gitId":"chownces"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-15"},{"lineNumber":66,"author":{"gitId":"chownces"},"content":"            System.out.println(LINE + e.getMessage() + \"\\n\" + LINE);","lastModifiedDate":"2021-08-15"},{"lineNumber":67,"author":{"gitId":"chownces"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":68,"author":{"gitId":"chownces"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":69,"author":{"gitId":"chownces"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":70,"author":{"gitId":"chownces"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":71,"author":{"gitId":"chownces"},"content":"     * Handles the \"bye\" command.","lastModifiedDate":"2021-08-15"},{"lineNumber":72,"author":{"gitId":"chownces"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":73,"author":{"gitId":"chownces"},"content":"    private void handleBye() {","lastModifiedDate":"2021-08-14"},{"lineNumber":74,"author":{"gitId":"chownces"},"content":"        System.out.println(LINE + \"Bye. Hope to see you again soon!\\n\" + LINE);","lastModifiedDate":"2021-08-14"},{"lineNumber":75,"author":{"gitId":"chownces"},"content":"        System.exit(0);","lastModifiedDate":"2021-08-14"},{"lineNumber":76,"author":{"gitId":"chownces"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":77,"author":{"gitId":"chownces"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":78,"author":{"gitId":"chownces"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":79,"author":{"gitId":"chownces"},"content":"     * Handles the \"list\" command.","lastModifiedDate":"2021-08-15"},{"lineNumber":80,"author":{"gitId":"chownces"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":81,"author":{"gitId":"chownces"},"content":"    private void handleList() {","lastModifiedDate":"2021-08-14"},{"lineNumber":82,"author":{"gitId":"chownces"},"content":"        System.out.println(LINE + \"Here are the tasks in your list:\");","lastModifiedDate":"2021-08-14"},{"lineNumber":83,"author":{"gitId":"chownces"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2021-08-14"},{"lineNumber":84,"author":{"gitId":"chownces"},"content":"            System.out.printf(\"%d.%s%n\", i + 1, this.tasks.get(i));","lastModifiedDate":"2021-08-14"},{"lineNumber":85,"author":{"gitId":"chownces"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":86,"author":{"gitId":"chownces"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-14"},{"lineNumber":87,"author":{"gitId":"chownces"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":88,"author":{"gitId":"chownces"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":89,"author":{"gitId":"chownces"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":90,"author":{"gitId":"chownces"},"content":"     * Handles the \"done {taskIndex}\" command.","lastModifiedDate":"2021-08-15"},{"lineNumber":91,"author":{"gitId":"chownces"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":92,"author":{"gitId":"chownces"},"content":"     * @param input The input command from the user.","lastModifiedDate":"2021-08-15"},{"lineNumber":93,"author":{"gitId":"chownces"},"content":"     * @throws InvalidTaskIndexException","lastModifiedDate":"2021-08-15"},{"lineNumber":94,"author":{"gitId":"chownces"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":95,"author":{"gitId":"chownces"},"content":"    private void handleDone(String input) throws InvalidTaskIndexException {","lastModifiedDate":"2021-08-15"},{"lineNumber":96,"author":{"gitId":"chownces"},"content":"        String[] splitInput \u003d input.split(\" \");","lastModifiedDate":"2021-08-14"},{"lineNumber":97,"author":{"gitId":"chownces"},"content":"        int taskIdx \u003d -1;","lastModifiedDate":"2021-08-14"},{"lineNumber":98,"author":{"gitId":"chownces"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":99,"author":{"gitId":"chownces"},"content":"        // We should not have an error here as we have performed regex string matching above","lastModifiedDate":"2021-08-14"},{"lineNumber":100,"author":{"gitId":"chownces"},"content":"        // But just to be safe","lastModifiedDate":"2021-08-14"},{"lineNumber":101,"author":{"gitId":"chownces"},"content":"        try {","lastModifiedDate":"2021-08-14"},{"lineNumber":102,"author":{"gitId":"chownces"},"content":"            taskIdx \u003d Integer.parseInt(splitInput[1]);","lastModifiedDate":"2021-08-14"},{"lineNumber":103,"author":{"gitId":"chownces"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-14"},{"lineNumber":104,"author":{"gitId":"chownces"},"content":"            System.out.println(LINE + \"Invalid input!\\n\" + LINE);","lastModifiedDate":"2021-08-14"},{"lineNumber":105,"author":{"gitId":"chownces"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":106,"author":{"gitId":"chownces"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":107,"author":{"gitId":"chownces"},"content":"        // Handle invalid index","lastModifiedDate":"2021-08-14"},{"lineNumber":108,"author":{"gitId":"chownces"},"content":"        if (taskIdx \u003e\u003d 1 \u0026\u0026 taskIdx \u003c\u003d tasks.size()) {","lastModifiedDate":"2021-08-14"},{"lineNumber":109,"author":{"gitId":"chownces"},"content":"            Task t \u003d tasks.get(taskIdx - 1);","lastModifiedDate":"2021-08-14"},{"lineNumber":110,"author":{"gitId":"chownces"},"content":"            t.markAsDone();","lastModifiedDate":"2021-08-14"},{"lineNumber":111,"author":{"gitId":"chownces"},"content":"            System.out.println(LINE + String.format(\"Nice! I\u0027ve marked this task as done:\\n  %s\\n\", t) + LINE);","lastModifiedDate":"2021-08-14"},{"lineNumber":112,"author":{"gitId":"chownces"},"content":"            this.saveToFile();","lastModifiedDate":"2021-08-22"},{"lineNumber":113,"author":{"gitId":"chownces"},"content":"        } else {","lastModifiedDate":"2021-08-14"},{"lineNumber":114,"author":{"gitId":"chownces"},"content":"            throw new InvalidTaskIndexException();","lastModifiedDate":"2021-08-15"},{"lineNumber":115,"author":{"gitId":"chownces"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":116,"author":{"gitId":"chownces"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":117,"author":{"gitId":"chownces"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":118,"author":{"gitId":"chownces"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":119,"author":{"gitId":"chownces"},"content":"     * Handles the \"todo {description}\" command.","lastModifiedDate":"2021-08-15"},{"lineNumber":120,"author":{"gitId":"chownces"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":121,"author":{"gitId":"chownces"},"content":"     * @param command The input command from the user.","lastModifiedDate":"2021-08-15"},{"lineNumber":122,"author":{"gitId":"chownces"},"content":"     * @throws InvalidFormatException","lastModifiedDate":"2021-08-22"},{"lineNumber":123,"author":{"gitId":"chownces"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":124,"author":{"gitId":"chownces"},"content":"    private void handleTodo(String command) throws InvalidFormatException, EmptyTodoDescriptionException {","lastModifiedDate":"2021-08-22"},{"lineNumber":125,"author":{"gitId":"chownces"},"content":"        this.validateRegex(command, \"^todo .+\", \"todo {description}\");","lastModifiedDate":"2021-08-22"},{"lineNumber":126,"author":{"gitId":"chownces"},"content":"        String description \u003d command.substring(4).trim();","lastModifiedDate":"2021-08-15"},{"lineNumber":127,"author":{"gitId":"chownces"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2021-08-15"},{"lineNumber":128,"author":{"gitId":"chownces"},"content":"            throw new EmptyTodoDescriptionException();","lastModifiedDate":"2021-08-15"},{"lineNumber":129,"author":{"gitId":"chownces"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":130,"author":{"gitId":"chownces"},"content":"        Todo newTodo \u003d new Todo(description);","lastModifiedDate":"2021-08-15"},{"lineNumber":131,"author":{"gitId":"chownces"},"content":"        tasks.add(newTodo);","lastModifiedDate":"2021-08-14"},{"lineNumber":132,"author":{"gitId":"chownces"},"content":"        this.saveToFile();","lastModifiedDate":"2021-08-22"},{"lineNumber":133,"author":{"gitId":"chownces"},"content":"        System.out.println(this.formatAddTaskString(newTodo));","lastModifiedDate":"2021-08-14"},{"lineNumber":134,"author":{"gitId":"chownces"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":135,"author":{"gitId":"chownces"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":136,"author":{"gitId":"chownces"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":137,"author":{"gitId":"chownces"},"content":"     * Handles the \"deadline {description} /by {time}\" command.","lastModifiedDate":"2021-08-15"},{"lineNumber":138,"author":{"gitId":"chownces"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":139,"author":{"gitId":"chownces"},"content":"     * @param command The input command from the user.","lastModifiedDate":"2021-08-15"},{"lineNumber":140,"author":{"gitId":"chownces"},"content":"     * @throws InvalidFormatException","lastModifiedDate":"2021-08-15"},{"lineNumber":141,"author":{"gitId":"chownces"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":142,"author":{"gitId":"chownces"},"content":"    private void handleDeadline(String command) throws InvalidFormatException {","lastModifiedDate":"2021-08-15"},{"lineNumber":143,"author":{"gitId":"chownces"},"content":"        this.validateRegex(command, \"^deadline .+ /by .+\", \"deadline {description} /by {date}\");","lastModifiedDate":"2021-08-22"},{"lineNumber":144,"author":{"gitId":"chownces"},"content":"        String[] info \u003d command.substring(8).split(\"/by\");","lastModifiedDate":"2021-08-14"},{"lineNumber":145,"author":{"gitId":"chownces"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":146,"author":{"gitId":"chownces"},"content":"        LocalDate date;","lastModifiedDate":"2021-08-22"},{"lineNumber":147,"author":{"gitId":"chownces"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":148,"author":{"gitId":"chownces"},"content":"            date \u003d LocalDate.parse(info[1].trim());","lastModifiedDate":"2021-08-22"},{"lineNumber":149,"author":{"gitId":"chownces"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":150,"author":{"gitId":"chownces"},"content":"            throw new InvalidFormatException(\"Please ensure the date is in YYYY-MM-DD format!\");","lastModifiedDate":"2021-08-22"},{"lineNumber":151,"author":{"gitId":"chownces"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":152,"author":{"gitId":"chownces"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":153,"author":{"gitId":"chownces"},"content":"        Deadline newDeadline \u003d new Deadline(info[0].trim(), date);","lastModifiedDate":"2021-08-22"},{"lineNumber":154,"author":{"gitId":"chownces"},"content":"        tasks.add(newDeadline);","lastModifiedDate":"2021-08-14"},{"lineNumber":155,"author":{"gitId":"chownces"},"content":"        this.saveToFile();","lastModifiedDate":"2021-08-22"},{"lineNumber":156,"author":{"gitId":"chownces"},"content":"        System.out.println(formatAddTaskString(newDeadline));","lastModifiedDate":"2021-08-14"},{"lineNumber":157,"author":{"gitId":"chownces"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":158,"author":{"gitId":"chownces"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":159,"author":{"gitId":"chownces"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":160,"author":{"gitId":"chownces"},"content":"     * Handles the \"event {description} /at {time}\" command.","lastModifiedDate":"2021-08-15"},{"lineNumber":161,"author":{"gitId":"chownces"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":162,"author":{"gitId":"chownces"},"content":"     * @param command The input command from the user.","lastModifiedDate":"2021-08-15"},{"lineNumber":163,"author":{"gitId":"chownces"},"content":"     * @throws InvalidFormatException","lastModifiedDate":"2021-08-15"},{"lineNumber":164,"author":{"gitId":"chownces"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":165,"author":{"gitId":"chownces"},"content":"    private void handleEvent(String command) throws InvalidFormatException {","lastModifiedDate":"2021-08-15"},{"lineNumber":166,"author":{"gitId":"chownces"},"content":"        this.validateRegex(command, \"^event .+ /at .+\", \"event {description} /at {time}\");","lastModifiedDate":"2021-08-15"},{"lineNumber":167,"author":{"gitId":"chownces"},"content":"        String[] info \u003d command.substring(5).split(\"/at\");","lastModifiedDate":"2021-08-14"},{"lineNumber":168,"author":{"gitId":"chownces"},"content":"        Event newEvent \u003d new Event(info[0].trim(), info[1].trim());","lastModifiedDate":"2021-08-14"},{"lineNumber":169,"author":{"gitId":"chownces"},"content":"        tasks.add(newEvent);","lastModifiedDate":"2021-08-14"},{"lineNumber":170,"author":{"gitId":"chownces"},"content":"        this.saveToFile();","lastModifiedDate":"2021-08-22"},{"lineNumber":171,"author":{"gitId":"chownces"},"content":"        System.out.println(formatAddTaskString(newEvent));","lastModifiedDate":"2021-08-14"},{"lineNumber":172,"author":{"gitId":"chownces"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":173,"author":{"gitId":"chownces"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":174,"author":{"gitId":"chownces"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":175,"author":{"gitId":"chownces"},"content":"     * Handles the \"delete {taskIndex}\" command.","lastModifiedDate":"2021-08-15"},{"lineNumber":176,"author":{"gitId":"chownces"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":177,"author":{"gitId":"chownces"},"content":"     * @param input","lastModifiedDate":"2021-08-15"},{"lineNumber":178,"author":{"gitId":"chownces"},"content":"     * @throws InvalidTaskIndexException","lastModifiedDate":"2021-08-15"},{"lineNumber":179,"author":{"gitId":"chownces"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":180,"author":{"gitId":"chownces"},"content":"    private void handleDelete(String input) throws InvalidTaskIndexException {","lastModifiedDate":"2021-08-15"},{"lineNumber":181,"author":{"gitId":"chownces"},"content":"        String[] splitInput \u003d input.split(\" \");","lastModifiedDate":"2021-08-15"},{"lineNumber":182,"author":{"gitId":"chownces"},"content":"        int taskIdx \u003d -1;","lastModifiedDate":"2021-08-15"},{"lineNumber":183,"author":{"gitId":"chownces"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":184,"author":{"gitId":"chownces"},"content":"        // We should not have an error here as we have performed regex string matching above","lastModifiedDate":"2021-08-15"},{"lineNumber":185,"author":{"gitId":"chownces"},"content":"        // But just to be safe","lastModifiedDate":"2021-08-15"},{"lineNumber":186,"author":{"gitId":"chownces"},"content":"        try {","lastModifiedDate":"2021-08-15"},{"lineNumber":187,"author":{"gitId":"chownces"},"content":"            taskIdx \u003d Integer.parseInt(splitInput[1]);","lastModifiedDate":"2021-08-15"},{"lineNumber":188,"author":{"gitId":"chownces"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-15"},{"lineNumber":189,"author":{"gitId":"chownces"},"content":"            System.out.println(LINE + \"Invalid input!\\n\" + LINE);","lastModifiedDate":"2021-08-15"},{"lineNumber":190,"author":{"gitId":"chownces"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":191,"author":{"gitId":"chownces"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":192,"author":{"gitId":"chownces"},"content":"        // Handle invalid index","lastModifiedDate":"2021-08-15"},{"lineNumber":193,"author":{"gitId":"chownces"},"content":"        if (taskIdx \u003e\u003d 1 \u0026\u0026 taskIdx \u003c\u003d tasks.size()) {","lastModifiedDate":"2021-08-15"},{"lineNumber":194,"author":{"gitId":"chownces"},"content":"            Task t \u003d tasks.get(taskIdx - 1);","lastModifiedDate":"2021-08-15"},{"lineNumber":195,"author":{"gitId":"chownces"},"content":"            tasks.remove(taskIdx - 1);","lastModifiedDate":"2021-08-15"},{"lineNumber":196,"author":{"gitId":"chownces"},"content":"            this.saveToFile();","lastModifiedDate":"2021-08-22"},{"lineNumber":197,"author":{"gitId":"chownces"},"content":"            System.out.println(LINE +","lastModifiedDate":"2021-08-22"},{"lineNumber":198,"author":{"gitId":"chownces"},"content":"                    String.format(\"Noted. I\u0027ve removed this task:\\n  %s\\n%s\\n\", t, formatNumTaskString()) + LINE);","lastModifiedDate":"2021-08-22"},{"lineNumber":199,"author":{"gitId":"chownces"},"content":"        } else {","lastModifiedDate":"2021-08-15"},{"lineNumber":200,"author":{"gitId":"chownces"},"content":"            throw new InvalidTaskIndexException();","lastModifiedDate":"2021-08-15"},{"lineNumber":201,"author":{"gitId":"chownces"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":202,"author":{"gitId":"chownces"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":203,"author":{"gitId":"chownces"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":204,"author":{"gitId":"chownces"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":205,"author":{"gitId":"chownces"},"content":"     * Formats the inputted task as a string to be displayed back to the user.","lastModifiedDate":"2021-08-15"},{"lineNumber":206,"author":{"gitId":"chownces"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":207,"author":{"gitId":"chownces"},"content":"     * @param task The Task created.","lastModifiedDate":"2021-08-15"},{"lineNumber":208,"author":{"gitId":"chownces"},"content":"     * @return The string to be displayed to the user during addition of a new task.","lastModifiedDate":"2021-08-15"},{"lineNumber":209,"author":{"gitId":"chownces"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":210,"author":{"gitId":"chownces"},"content":"    private String formatAddTaskString(Task task) {","lastModifiedDate":"2021-08-14"},{"lineNumber":211,"author":{"gitId":"chownces"},"content":"        return LINE +","lastModifiedDate":"2021-08-14"},{"lineNumber":212,"author":{"gitId":"chownces"},"content":"                String.format(\"Got it. I\u0027ve added this task:\\n  %s\\n%s\\n\",","lastModifiedDate":"2021-08-15"},{"lineNumber":213,"author":{"gitId":"chownces"},"content":"                        task, formatNumTaskString()) + LINE;","lastModifiedDate":"2021-08-15"},{"lineNumber":214,"author":{"gitId":"chownces"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":215,"author":{"gitId":"chownces"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":216,"author":{"gitId":"chownces"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":217,"author":{"gitId":"chownces"},"content":"     * Formats the number of tasks as a string that is to be displayed to the user.","lastModifiedDate":"2021-08-15"},{"lineNumber":218,"author":{"gitId":"chownces"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":219,"author":{"gitId":"chownces"},"content":"     * @return The formatted string containing number of tasks.","lastModifiedDate":"2021-08-15"},{"lineNumber":220,"author":{"gitId":"chownces"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":221,"author":{"gitId":"chownces"},"content":"    private String formatNumTaskString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":222,"author":{"gitId":"chownces"},"content":"        return String.format(\"Now you have %d task%s in the list.\",","lastModifiedDate":"2021-08-22"},{"lineNumber":223,"author":{"gitId":"chownces"},"content":"                this.tasks.size(), this.tasks.size() \u003d\u003d 1 ? \"\" : \"s\");","lastModifiedDate":"2021-08-22"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":225,"author":{"gitId":"chownces"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":226,"author":{"gitId":"chownces"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":227,"author":{"gitId":"chownces"},"content":"     * Validates the given string against the provided regex. Also validates that the given string","lastModifiedDate":"2021-08-22"},{"lineNumber":228,"author":{"gitId":"chownces"},"content":"     * does not contain commas.","lastModifiedDate":"2021-08-22"},{"lineNumber":229,"author":{"gitId":"chownces"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":230,"author":{"gitId":"chownces"},"content":"     * @param str         The given string.","lastModifiedDate":"2021-08-15"},{"lineNumber":231,"author":{"gitId":"chownces"},"content":"     * @param regex       The given regex.","lastModifiedDate":"2021-08-15"},{"lineNumber":232,"author":{"gitId":"chownces"},"content":"     * @param validFormat The correct input format to be displayed to the user when this regex fails.","lastModifiedDate":"2021-08-15"},{"lineNumber":233,"author":{"gitId":"chownces"},"content":"     * @throws InvalidFormatException","lastModifiedDate":"2021-08-15"},{"lineNumber":234,"author":{"gitId":"chownces"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":235,"author":{"gitId":"chownces"},"content":"    private void validateRegex(String str, String regex, String validFormat) throws InvalidFormatException {","lastModifiedDate":"2021-08-15"},{"lineNumber":236,"author":{"gitId":"chownces"},"content":"        if (str.contains(\",\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":237,"author":{"gitId":"chownces"},"content":"            throw new InvalidFormatException(\"Please do not include commas!\");","lastModifiedDate":"2021-08-22"},{"lineNumber":238,"author":{"gitId":"chownces"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":239,"author":{"gitId":"chownces"},"content":"        if (!str.matches(regex)) {","lastModifiedDate":"2021-08-15"},{"lineNumber":240,"author":{"gitId":"chownces"},"content":"            throw new InvalidFormatException(validFormat);","lastModifiedDate":"2021-08-15"},{"lineNumber":241,"author":{"gitId":"chownces"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":242,"author":{"gitId":"chownces"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":243,"author":{"gitId":"chownces"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":244,"author":{"gitId":"chownces"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":245,"author":{"gitId":"chownces"},"content":"     * Saves the current tasks list to file.","lastModifiedDate":"2021-08-22"},{"lineNumber":246,"author":{"gitId":"chownces"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":247,"author":{"gitId":"chownces"},"content":"    private void saveToFile() {","lastModifiedDate":"2021-08-22"},{"lineNumber":248,"author":{"gitId":"chownces"},"content":"        File directory \u003d new File(DIRECTORY);","lastModifiedDate":"2021-08-22"},{"lineNumber":249,"author":{"gitId":"chownces"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":250,"author":{"gitId":"chownces"},"content":"            directory.mkdir();","lastModifiedDate":"2021-08-22"},{"lineNumber":251,"author":{"gitId":"chownces"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":252,"author":{"gitId":"chownces"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":253,"author":{"gitId":"chownces"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":254,"author":{"gitId":"chownces"},"content":"            FileWriter fw \u003d new FileWriter(DIRECTORY + \"/\" + FILENAME);","lastModifiedDate":"2021-08-22"},{"lineNumber":255,"author":{"gitId":"chownces"},"content":"            StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2021-08-22"},{"lineNumber":256,"author":{"gitId":"chownces"},"content":"            this.tasks.forEach(e -\u003e str.append(e.toSaveFormat() + \"\\n\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":257,"author":{"gitId":"chownces"},"content":"            fw.write(str.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":258,"author":{"gitId":"chownces"},"content":"            fw.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":259,"author":{"gitId":"chownces"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":260,"author":{"gitId":"chownces"},"content":"            System.out.println(\"An error occurred while saving.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":261,"author":{"gitId":"chownces"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":262,"author":{"gitId":"chownces"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":263,"author":{"gitId":"chownces"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":264,"author":{"gitId":"chownces"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":265,"author":{"gitId":"chownces"},"content":"     * Loads the tasks list from file.","lastModifiedDate":"2021-08-22"},{"lineNumber":266,"author":{"gitId":"chownces"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":267,"author":{"gitId":"chownces"},"content":"    private void loadFromFile() {","lastModifiedDate":"2021-08-22"},{"lineNumber":268,"author":{"gitId":"chownces"},"content":"        ArrayList\u003cTask\u003e loadedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":269,"author":{"gitId":"chownces"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":270,"author":{"gitId":"chownces"},"content":"        File file \u003d new File(DIRECTORY + \"/\" + FILENAME);","lastModifiedDate":"2021-08-22"},{"lineNumber":271,"author":{"gitId":"chownces"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":272,"author":{"gitId":"chownces"},"content":"            FileReader fr \u003d new FileReader(file);","lastModifiedDate":"2021-08-22"},{"lineNumber":273,"author":{"gitId":"chownces"},"content":"            BufferedReader br \u003d new BufferedReader(fr);","lastModifiedDate":"2021-08-22"},{"lineNumber":274,"author":{"gitId":"chownces"},"content":"            String line;","lastModifiedDate":"2021-08-22"},{"lineNumber":275,"author":{"gitId":"chownces"},"content":"            while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2021-08-22"},{"lineNumber":276,"author":{"gitId":"chownces"},"content":"                Task newTask;","lastModifiedDate":"2021-08-22"},{"lineNumber":277,"author":{"gitId":"chownces"},"content":"                String[] values \u003d line.split(\",\", -1);","lastModifiedDate":"2021-08-22"},{"lineNumber":278,"author":{"gitId":"chownces"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":279,"author":{"gitId":"chownces"},"content":"                // Checks to ensure correct line format","lastModifiedDate":"2021-08-22"},{"lineNumber":280,"author":{"gitId":"chownces"},"content":"                if (!((line.matches(\"T,[0,1],.*\") \u0026\u0026 values.length \u003d\u003d 3) ||","lastModifiedDate":"2021-08-22"},{"lineNumber":281,"author":{"gitId":"chownces"},"content":"                        (line.matches(\"[D,E],[0,1],.*\") \u0026\u0026 values.length \u003d\u003d 4))) {","lastModifiedDate":"2021-08-22"},{"lineNumber":282,"author":{"gitId":"chownces"},"content":"                    throw new InvalidFileFormatException();","lastModifiedDate":"2021-08-22"},{"lineNumber":283,"author":{"gitId":"chownces"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":284,"author":{"gitId":"chownces"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":285,"author":{"gitId":"chownces"},"content":"                switch (values[0]) {","lastModifiedDate":"2021-08-22"},{"lineNumber":286,"author":{"gitId":"chownces"},"content":"                    case \"T\":","lastModifiedDate":"2021-08-22"},{"lineNumber":287,"author":{"gitId":"chownces"},"content":"                        newTask \u003d new Todo(values[2], values[1].equals(\"1\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":288,"author":{"gitId":"chownces"},"content":"                        break;","lastModifiedDate":"2021-08-22"},{"lineNumber":289,"author":{"gitId":"chownces"},"content":"                    case \"D\":","lastModifiedDate":"2021-08-22"},{"lineNumber":290,"author":{"gitId":"chownces"},"content":"                        LocalDate date;","lastModifiedDate":"2021-08-22"},{"lineNumber":291,"author":{"gitId":"chownces"},"content":"                        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":292,"author":{"gitId":"chownces"},"content":"                            date \u003d LocalDate.parse(values[3]);","lastModifiedDate":"2021-08-22"},{"lineNumber":293,"author":{"gitId":"chownces"},"content":"                        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":294,"author":{"gitId":"chownces"},"content":"                            throw new InvalidFileFormatException();","lastModifiedDate":"2021-08-22"},{"lineNumber":295,"author":{"gitId":"chownces"},"content":"                        }","lastModifiedDate":"2021-08-22"},{"lineNumber":296,"author":{"gitId":"chownces"},"content":"                        newTask \u003d new Deadline(values[2], date, values[1].equals(\"1\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":297,"author":{"gitId":"chownces"},"content":"                        break;","lastModifiedDate":"2021-08-22"},{"lineNumber":298,"author":{"gitId":"chownces"},"content":"                    case \"E\":","lastModifiedDate":"2021-08-22"},{"lineNumber":299,"author":{"gitId":"chownces"},"content":"                        newTask \u003d new Event(values[2], values[3], values[1].equals(\"1\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":300,"author":{"gitId":"chownces"},"content":"                        break;","lastModifiedDate":"2021-08-22"},{"lineNumber":301,"author":{"gitId":"chownces"},"content":"                    default:","lastModifiedDate":"2021-08-22"},{"lineNumber":302,"author":{"gitId":"chownces"},"content":"                        // Should not reach this case due to regex check above","lastModifiedDate":"2021-08-22"},{"lineNumber":303,"author":{"gitId":"chownces"},"content":"                        throw new InvalidFileFormatException();","lastModifiedDate":"2021-08-22"},{"lineNumber":304,"author":{"gitId":"chownces"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":305,"author":{"gitId":"chownces"},"content":"                loadedTasks.add(newTask);","lastModifiedDate":"2021-08-22"},{"lineNumber":306,"author":{"gitId":"chownces"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":307,"author":{"gitId":"chownces"},"content":"            this.tasks \u003d loadedTasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":308,"author":{"gitId":"chownces"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":309,"author":{"gitId":"chownces"},"content":"            System.out.println(\"Seems like you do not have a previous save file. \" +","lastModifiedDate":"2021-08-22"},{"lineNumber":310,"author":{"gitId":"chownces"},"content":"                    \"I will create one for you once you input a task!\\n\");","lastModifiedDate":"2021-08-22"},{"lineNumber":311,"author":{"gitId":"chownces"},"content":"        } catch (InvalidFileFormatException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":312,"author":{"gitId":"chownces"},"content":"            System.out.println(LINE + e.getMessage() + \"\\n\" + LINE);","lastModifiedDate":"2021-08-22"},{"lineNumber":313,"author":{"gitId":"chownces"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":314,"author":{"gitId":"chownces"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":315,"author":{"gitId":"chownces"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":316,"author":{"gitId":"chownces"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-14"},{"lineNumber":317,"author":{"gitId":"chownces"},"content":"        new Duke().startApp();","lastModifiedDate":"2021-08-14"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"chownces":310,"-":9}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chownces"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"chownces"},"content":" * This is the parent class for all Duke exceptions.","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"chownces"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"chownces"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"chownces"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"chownces"},"content":"        super(\"☹ OOPS!!! \" + message);","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"chownces"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"chownces"},"content":"}","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"chownces"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"chownces"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"chownces"},"content":" * Thrown when the user inputs a todo command without a description.","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"chownces"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"chownces"},"content":"class EmptyTodoDescriptionException extends DukeException {","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"chownces"},"content":"    public EmptyTodoDescriptionException() {","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"chownces"},"content":"        super(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"chownces"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"chownces"},"content":"}","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"chownces"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"chownces"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"chownces"},"content":" * Thrown when the user inputs an unknown command.","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"chownces"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"chownces"},"content":"class UnknownCommandException extends DukeException {","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"chownces"},"content":"    public UnknownCommandException() {","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"chownces"},"content":"        super(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"chownces"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"chownces"},"content":"}","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"chownces"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"chownces"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"chownces"},"content":" * Thrown when the user inputs a command in an invalid format.","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"chownces"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"chownces"},"content":"class InvalidFormatException extends DukeException {","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"chownces"},"content":"    public InvalidFormatException(String format) {","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"chownces"},"content":"        super(\"Invalid format: \" + format);","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"chownces"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":35,"author":{"gitId":"chownces"},"content":"}","lastModifiedDate":"2021-08-15"},{"lineNumber":36,"author":{"gitId":"chownces"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":37,"author":{"gitId":"chownces"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":38,"author":{"gitId":"chownces"},"content":" * Thrown when the user tries to access an invalid task index.","lastModifiedDate":"2021-08-15"},{"lineNumber":39,"author":{"gitId":"chownces"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":40,"author":{"gitId":"chownces"},"content":"class InvalidTaskIndexException extends DukeException {","lastModifiedDate":"2021-08-15"},{"lineNumber":41,"author":{"gitId":"chownces"},"content":"    public InvalidTaskIndexException() {","lastModifiedDate":"2021-08-15"},{"lineNumber":42,"author":{"gitId":"chownces"},"content":"        super(\"Invalid task index!\");","lastModifiedDate":"2021-08-15"},{"lineNumber":43,"author":{"gitId":"chownces"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":44,"author":{"gitId":"chownces"},"content":"}","lastModifiedDate":"2021-08-15"},{"lineNumber":45,"author":{"gitId":"chownces"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"chownces"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"chownces"},"content":" * Thrown when reading a file with invalid format.","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"chownces"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"chownces"},"content":"class InvalidFileFormatException extends DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"chownces"},"content":"    public InvalidFileFormatException() { super (\"Invalid file format! File ignored!\"); }","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"chownces"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"chownces":51}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chownces"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"chownces"},"content":" * This class encapsulates an event task in the Duke Application.","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"chownces"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"chownces"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"chownces"},"content":"    private String at;","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"chownces"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"chownces"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"chownces"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"chownces"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"chownces"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"chownces"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"chownces"},"content":"    public Event(String description, String at, boolean isDone) {","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"chownces"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"chownces"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"chownces"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"chownces"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"chownces"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"chownces"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"chownces"},"content":"        return String.format(\"[E]%s (at: %s)\", super.toString(), this.at);","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"chownces"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"chownces"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"chownces"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"chownces"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"chownces"},"content":"        return String.format(\"E,%s,%s\", super.toSaveFormat(), this.at);","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"chownces"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"chownces"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"chownces":26}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chownces"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"chownces"},"content":" * This class encapsulates a task in the Duke application.","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"chownces"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"chownces"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"chownces"},"content":"    private final String description;","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"chownces"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"chownces"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"chownces"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"chownces"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"chownces"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"chownces"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"chownces"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"chownces"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"chownces"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"chownces"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"chownces"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"chownces"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"chownces"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"chownces"},"content":"     * Marks the Task instance as done.","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"chownces"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"chownces"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"chownces"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"chownces"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"chownces"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"chownces"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"chownces"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"chownces"},"content":"        return String.format(\"[%s] %s\", isDone ? \"X\" : \" \", this.description);","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"chownces"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"chownces"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"chownces"},"content":"    public String toSaveFormat() { return String.format(\"%s,%s\", isDone ? \"1\" : \"0\", this.description); };","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"chownces"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"chownces":31}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chownces"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"chownces"},"content":" * This class encapsulates a todo task in the Duke Application.","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"chownces"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"chownces"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"chownces"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"chownces"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"chownces"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"chownces"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"chownces"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"chownces"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"chownces"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"chownces"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"chownces"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"chownces"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"chownces"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"chownces"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"chownces"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"chownces"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"chownces"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"chownces"},"content":"        return String.format(\"T,%s\", super.toSaveFormat());","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"chownces"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"chownces"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"chownces":22}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"chownces"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"chownces"},"content":"todo do homework","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"chownces"},"content":"deadline assignment /by 2021-12-01","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"chownces"},"content":"event dinner /at 6pm","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"chownces"},"content":"deadline submission /by 2021-08-21","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"chownces"},"content":"event @something /at today","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"chownces"},"content":"done 1","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"chownces"},"content":"done 4","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"chownces"},"content":"delete 2","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"chownces"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"chownces"},"content":"invalid command","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"chownces"},"content":"blah","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"chownces"},"content":"todo","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"chownces"},"content":"deadline","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"chownces"},"content":"deadline nowhitespace /by","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"chownces"},"content":"deadline whitespace /by","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"chownces"},"content":"deadline something /by invalidDate","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"chownces"},"content":"deadline  /by 2021-08-21","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"chownces"},"content":"deadline some,comma /by sometime","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"chownces"},"content":"deadline something /at 2021-08-21","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"chownces"},"content":"event","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"chownces"},"content":"event nowhitespace /at","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"chownces"},"content":"event whitespace /at","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"chownces"},"content":"event  /at tonight","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"chownces"},"content":"event some,comma /at today","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"chownces"},"content":"event something /by sometime","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"chownces"},"content":"done 1000","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"chownces"},"content":"done 0","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"chownces"},"content":"done -1","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"chownces"},"content":"delete 1000","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"chownces"},"content":"delete 0","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"chownces"},"content":"delete -1","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"chownces"},"content":"bye","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"chownces":33}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"chownces"},"content":"# delete saved data file from previous test runs","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"chownces"},"content":"if [ -d \"./data\" ]","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"chownces"},"content":"then","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"chownces"},"content":"  rm -rf ./data","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"chownces"},"content":"fi","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"chownces"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"chownces":6,"-":38}}]
