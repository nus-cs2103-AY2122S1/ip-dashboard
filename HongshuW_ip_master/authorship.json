[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongshuW"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"HongshuW"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"HongshuW"},"content":"import duke.data.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"HongshuW"},"content":"import duke.data.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"HongshuW"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"HongshuW"},"content":"import duke.ui.Parser;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"HongshuW"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"HongshuW"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"HongshuW"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"HongshuW"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"HongshuW"},"content":" * Represents the Duke program. Manages tasks based on commands received.","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"HongshuW"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"HongshuW"},"content":"    /** Storage that can write to or retrieve data from a file on hard disk */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"HongshuW"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"HongshuW"},"content":"    /** List of tasks added */","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"HongshuW"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"HongshuW"},"content":"    /** UI of the program */","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"HongshuW"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"HongshuW"},"content":"     * Constructor of the class \u0027Duke\u0027.","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"HongshuW"},"content":"     * @param filePath Path of the file to retrieve data.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"HongshuW"},"content":"    public Duke(Path filePath) {","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"HongshuW"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"HongshuW"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"HongshuW"},"content":"        this.storage \u003d new Storage(filePath, this.tasks);","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"HongshuW"},"content":"     * Runs the duke program.","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"HongshuW"},"content":"    public void run() {","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"HongshuW"},"content":"        // Print welcome message, start running","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"HongshuW"},"content":"        this.ui.showWelcome();","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"HongshuW"},"content":"        boolean isRunning \u003d true;","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"HongshuW"},"content":"        // Read in commands while the program is running","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"HongshuW"},"content":"        while (isRunning) {","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"HongshuW"},"content":"            String commandString \u003d this.ui.getCommand();","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"HongshuW"},"content":"            Command command;","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"HongshuW"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"HongshuW"},"content":"                command \u003d Parser.parse(commandString);","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"HongshuW"},"content":"                command.execute(this.tasks, this.storage);","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"HongshuW"},"content":"                this.ui.showCommandOutput(command);","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"HongshuW"},"content":"                isRunning \u003d command.isRunning();","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"HongshuW"},"content":"            } catch (DukeException dukeException) {","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"HongshuW"},"content":"                this.ui.showError(dukeException);","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"HongshuW"},"content":"                continue;","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"HongshuW"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"HongshuW"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":59,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"HongshuW"},"content":"     * Runs the Duke program, prints out messages based on commands received.","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"HongshuW"},"content":"     * @param args The command line parameters.","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":65,"author":{"gitId":"HongshuW"},"content":"        String filePath \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"HongshuW"},"content":"        new Duke(Paths.get(filePath, \"data\", \"duke.txt\")).run();","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"HongshuW":64,"-":4}},{"path":"src/main/java/duke/command/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongshuW"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"HongshuW"},"content":"import duke.data.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"HongshuW"},"content":"import duke.data.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"HongshuW"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"HongshuW"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"HongshuW"},"content":" * Represents a command that adds a task to the task list. A subclass of the Command class.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"HongshuW"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"HongshuW"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"HongshuW"},"content":"     * Constructor of the class `AddTaskCommand`.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"HongshuW"},"content":"     * @param task Task to be added.","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"HongshuW"},"content":"    public AddTaskCommand(Task task) {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"HongshuW"},"content":"        super(\"add\");","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"HongshuW"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"HongshuW"},"content":"     * Executes the command. Adds a task into the list, stores it and updates the message to be printed.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"HongshuW"},"content":"     * @param tasks A list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"HongshuW"},"content":"     * @param storage An instance of Storage that can read from and write to the hard disk.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"HongshuW"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"HongshuW"},"content":"    public void execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"HongshuW"},"content":"        // Add the task","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"HongshuW"},"content":"        tasks.addTask(this.task);","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"HongshuW"},"content":"        storage.addToFile(this.task);","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"HongshuW"},"content":"        // Update message","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"HongshuW"},"content":"        this.message \u003d String.format(","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"HongshuW"},"content":"                \"Got it. I\u0027ve added this task:\\n  %s\\nNow you have %d tasks in the list.\\n\",","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"HongshuW"},"content":"                this.task, tasks.getNumOfTasks());","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"HongshuW"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"HongshuW":38}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongshuW"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"HongshuW"},"content":"import duke.data.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"HongshuW"},"content":"import duke.data.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"HongshuW"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"HongshuW"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"HongshuW"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"HongshuW"},"content":" * Represents a command that can be executed.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"HongshuW"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"HongshuW"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"HongshuW"},"content":"    /** Content of the command */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"HongshuW"},"content":"    protected String content;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"HongshuW"},"content":"    /** Message generated */","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"HongshuW"},"content":"    protected String message;","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"HongshuW"},"content":"    /** Task involved in the command */","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"HongshuW"},"content":"    protected Task task;","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"HongshuW"},"content":"     * Constructor of the class `Command`.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"HongshuW"},"content":"     * @param content The content of the command received.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"HongshuW"},"content":"    public Command(String content) {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"HongshuW"},"content":"        this.content \u003d content;","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"HongshuW"},"content":"     * Updates the message to be printed.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"HongshuW"},"content":"     * @param tasks A list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"HongshuW"},"content":"     * @param storage An instance of Storage that can read from and write to the hard disk.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"HongshuW"},"content":"     * @throws DukeException If error occurs while executing the command.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"HongshuW"},"content":"    public void execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"HongshuW"},"content":"        this.message \u003d this.content;","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"HongshuW"},"content":"     * Returns whether the program is still running.","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"HongshuW"},"content":"     * @return Whether the program is running.","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"HongshuW"},"content":"    public boolean isRunning() {","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"HongshuW"},"content":"        return true;","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":48,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":49,"author":{"gitId":"HongshuW"},"content":"     * Returns the command\u0027s processed result as a string.","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":51,"author":{"gitId":"HongshuW"},"content":"     * @return String representation of the result of processing a command.","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":53,"author":{"gitId":"HongshuW"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":54,"author":{"gitId":"HongshuW"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":55,"author":{"gitId":"HongshuW"},"content":"        return \"____________________________________________________________\\n\" +","lastModifiedDate":"2021-08-17"},{"lineNumber":56,"author":{"gitId":"HongshuW"},"content":"                this.message +","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"HongshuW"},"content":"                \"____________________________________________________________\\n\";","lastModifiedDate":"2021-08-17"},{"lineNumber":58,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":59,"author":{"gitId":"HongshuW"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"HongshuW":59}},{"path":"src/main/java/duke/command/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongshuW"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"HongshuW"},"content":"import duke.data.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"HongshuW"},"content":"import duke.data.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"HongshuW"},"content":"import duke.exception.InvalidTaskNoException;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"HongshuW"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"HongshuW"},"content":" * Represents a command that deletes a task from the task list. A subclass of the Command class.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"HongshuW"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"HongshuW"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"HongshuW"},"content":"    /** Index of the task to be deleted in the task list */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"HongshuW"},"content":"    int taskIndex;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"HongshuW"},"content":"     * Constructor of the class `DeleteTaskCommand`.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"HongshuW"},"content":"     * @param taskIndex Index of a task.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"HongshuW"},"content":"    public DeleteTaskCommand(int taskIndex) {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"HongshuW"},"content":"        super(\"delete\");","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"HongshuW"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"HongshuW"},"content":"     * Executes the command. Deletes a task from the list, stores changes and updates the message to be","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"HongshuW"},"content":"     * printed.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"HongshuW"},"content":"     * @param tasks A list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"HongshuW"},"content":"     * @param storage An instance of Storage that can read from and write to the hard disk.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"HongshuW"},"content":"     * @throws InvalidTaskNoException If task number is invalid.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"HongshuW"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"HongshuW"},"content":"    public void execute(TaskList tasks, Storage storage) throws InvalidTaskNoException {","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"HongshuW"},"content":"        // Get task from index","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"HongshuW"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"HongshuW"},"content":"            this.task \u003d tasks.get(this.taskIndex);","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"HongshuW"},"content":"        } catch (NumberFormatException | NullPointerException | IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"HongshuW"},"content":"            throw new InvalidTaskNoException();","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"HongshuW"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"HongshuW"},"content":"        // Remove the task","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"HongshuW"},"content":"        tasks.removeFromList(this.task);","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"HongshuW"},"content":"        storage.removeFromFile(tasks.indexOf(this.task));","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"HongshuW"},"content":"        // Update message","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"HongshuW"},"content":"        this.message \u003d String.format(","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"HongshuW"},"content":"                \"Noted. I\u0027ve removed this task:\\n  %s\\nNow you have %d tasks in the list.\\n\",","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"HongshuW"},"content":"                this.task, tasks.getNumOfTasks());","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"HongshuW"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"HongshuW":50}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongshuW"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"HongshuW"},"content":"import duke.data.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"HongshuW"},"content":"import duke.data.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"HongshuW"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"HongshuW"},"content":" * Represents a command that stops the duke program.","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"HongshuW"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"HongshuW"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"HongshuW"},"content":"    /** Message to be printed when the program exits */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"HongshuW"},"content":"    private static final String EXITING_MESSAGE \u003d \"Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"HongshuW"},"content":"     * Constructor of the class `ExitCommand`.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"HongshuW"},"content":"    public ExitCommand() {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"HongshuW"},"content":"        super(\"bye\");","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"HongshuW"},"content":"     * Updates the message to be printed. Returns false because the program stops.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"HongshuW"},"content":"     * @param tasks A list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"HongshuW"},"content":"     * @param storage An instance of Storage that can read from and write to the hard disk.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"HongshuW"},"content":"     * @return Whether the program is still running.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"HongshuW"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"HongshuW"},"content":"    public void execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"HongshuW"},"content":"        this.message \u003d ExitCommand.EXITING_MESSAGE;","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"HongshuW"},"content":"     * Returns false because the duke program stops.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"HongshuW"},"content":"     * @return Whether the program is running.","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"HongshuW"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"HongshuW"},"content":"    public boolean isRunning() {","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"HongshuW"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"HongshuW"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"HongshuW":41}},{"path":"src/main/java/duke/command/FindTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongshuW"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"HongshuW"},"content":"import duke.data.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"HongshuW"},"content":"import duke.data.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"HongshuW"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"HongshuW"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"HongshuW"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"HongshuW"},"content":" * Represents a command that finds a task with keyword. A subclass of Command.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"HongshuW"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"HongshuW"},"content":"public class FindTaskCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"HongshuW"},"content":"    /** The keyword to be found */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"HongshuW"},"content":"    String keyword;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"HongshuW"},"content":"     * Constructor of the class `FindTaskCommand`.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"HongshuW"},"content":"     * @param keyword The keyword to be found.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"HongshuW"},"content":"    public FindTaskCommand(String keyword) {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"HongshuW"},"content":"        super(\"find\");","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"HongshuW"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"HongshuW"},"content":"        this.message \u003d \"Here are the tasks I found:\\n\";","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"HongshuW"},"content":"     * Executes the command. Finds a list of tasks that contain the keyword and updates the message.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"HongshuW"},"content":"     * @param tasks A list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"HongshuW"},"content":"     * @param storage An instance of Storage that can read from and write to the hard disk.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"HongshuW"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"HongshuW"},"content":"    public void execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"HongshuW"},"content":"        ArrayList\u003cTask\u003e filteredTasks \u003d tasks.filter(this.keyword);","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"HongshuW"},"content":"        int len \u003d filteredTasks.size();","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"HongshuW"},"content":"        for (int i \u003d 0; i \u003c len; i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"HongshuW"},"content":"            this.message +\u003d String.format(\"%d.%s\\n\", i + 1, filteredTasks.get(i).toString());","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"HongshuW"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"HongshuW"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"HongshuW":41}},{"path":"src/main/java/duke/command/GetListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongshuW"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"HongshuW"},"content":"import duke.data.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"HongshuW"},"content":"import duke.data.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"HongshuW"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"HongshuW"},"content":" * Represents a command that retrieves the task list. A subclass of the Command class.","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"HongshuW"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"HongshuW"},"content":"public class GetListCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"HongshuW"},"content":"     * Constructor of the class `GetListCommand`.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"HongshuW"},"content":"    public GetListCommand() {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"HongshuW"},"content":"        super(\"list\");","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"HongshuW"},"content":"        this.message \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"HongshuW"},"content":"     * Executes the command. Updates the message to be printed.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"HongshuW"},"content":"     * @param tasks A list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"HongshuW"},"content":"     * @param storage An instance of Storage that can read from and write to the hard disk.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"HongshuW"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"HongshuW"},"content":"    public void execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"HongshuW"},"content":"        int len \u003d tasks.getNumOfTasks();","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"HongshuW"},"content":"        for (int i \u003d 0; i \u003c len; i++) {","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"HongshuW"},"content":"            this.message +\u003d String.format(\"%d.%s\\n\", (i + 1), tasks.get(i).toString());","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"HongshuW"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"HongshuW"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"HongshuW":31}},{"path":"src/main/java/duke/command/TaskDoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongshuW"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"HongshuW"},"content":"import duke.data.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"HongshuW"},"content":"import duke.data.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"HongshuW"},"content":"import duke.exception.InvalidTaskNoException;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"HongshuW"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"HongshuW"},"content":" * Represents a command that marks a task as done. A subclass of the Command class.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"HongshuW"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"HongshuW"},"content":"public class TaskDoneCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"HongshuW"},"content":"    /** Index of the task to be deleted in the task list */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"HongshuW"},"content":"    int taskIndex;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"HongshuW"},"content":"     * Constructor of the class `TaskDoneCommand`.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"HongshuW"},"content":"     * @param taskIndex Index of a task.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"HongshuW"},"content":"    public TaskDoneCommand(int taskIndex) {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"HongshuW"},"content":"        super(\"done\");","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"HongshuW"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"HongshuW"},"content":"        this.message \u003d \"Nice! I\u0027ve marked this task as done:\\n\";","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"HongshuW"},"content":"     * Executes the command. Marks a task as done, stores changes and updates the message to be printed.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"HongshuW"},"content":"     * @param tasks A list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"HongshuW"},"content":"     * @param storage An instance of Storage that can read from and write to the hard disk.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"HongshuW"},"content":"     * @throws InvalidTaskNoException If task number is invalid.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"HongshuW"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"HongshuW"},"content":"    public void execute(TaskList tasks, Storage storage) throws InvalidTaskNoException {","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"HongshuW"},"content":"        // Get task from index","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"HongshuW"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"HongshuW"},"content":"            this.task \u003d tasks.get(this.taskIndex);","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"HongshuW"},"content":"        } catch (NumberFormatException | NullPointerException | IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"HongshuW"},"content":"            throw new InvalidTaskNoException();","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"HongshuW"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"HongshuW"},"content":"        // Mark task as done","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"HongshuW"},"content":"        this.task.setDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"HongshuW"},"content":"        storage.rewriteFile();","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"HongshuW"},"content":"        // Update message","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"HongshuW"},"content":"        this.message +\u003d String.format(\"  %s\\n\", this.task.toString());","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"HongshuW"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"HongshuW":48}},{"path":"src/main/java/duke/data/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongshuW"},"content":"package duke.data;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"HongshuW"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"HongshuW"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"HongshuW"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"HongshuW"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"HongshuW"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"HongshuW"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"HongshuW"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"HongshuW"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"HongshuW"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"HongshuW"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"HongshuW"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"HongshuW"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"HongshuW"},"content":"import java.util.List;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"HongshuW"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"HongshuW"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"HongshuW"},"content":" * Represents storage that can store data into a file and read data from a file.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"HongshuW"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"HongshuW"},"content":"public class Storage {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"HongshuW"},"content":"    /** Path of the current folder as a string */","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"HongshuW"},"content":"    public static final String DIRECTORY_PATH \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"HongshuW"},"content":"    /** Path of file containing data saved */","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"HongshuW"},"content":"    private static File data;","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"HongshuW"},"content":"    /** A temporary list of tasks */","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"HongshuW"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"HongshuW"},"content":"     * Constructor of the `Storage` class.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"HongshuW"},"content":"     * @param filePath Path to the file to be loaded.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"HongshuW"},"content":"     * @param tasks A temporary list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"HongshuW"},"content":"    public Storage(Path filePath, TaskList tasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"HongshuW"},"content":"        Storage.data \u003d filePath.toFile();","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"HongshuW"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"HongshuW"},"content":"        this.readFile();","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"HongshuW"},"content":"     * Reads data in the file. If the directory or file doesn\u0027t exist, create a new file in the correct","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"HongshuW"},"content":"     * location.","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"HongshuW"},"content":"    private void readFile() {","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"HongshuW"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"HongshuW"},"content":"            Scanner fileScanner \u003d new Scanner(Storage.data);","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"HongshuW"},"content":"            while (fileScanner.hasNextLine()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"HongshuW"},"content":"                String task \u003d fileScanner.nextLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"HongshuW"},"content":"                this.readData(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"HongshuW"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"HongshuW"},"content":"            fileScanner.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"HongshuW"},"content":"        } catch (FileNotFoundException fileNotFoundException) { // If file doesn\u0027t exist, create it.","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"HongshuW"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"HongshuW"},"content":"                Storage.data.createNewFile();","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"HongshuW"},"content":"            } catch (IOException ioException) { // If directory doesn\u0027t exist, create it.","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"HongshuW"},"content":"                File directory \u003d Paths.get(Storage.DIRECTORY_PATH, \"data\").toFile();","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"HongshuW"},"content":"                directory.mkdirs();","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"HongshuW"},"content":"                this.readFile(); // Run this method again to create a file.","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"HongshuW"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"HongshuW"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"HongshuW"},"content":"     * Reads a line of data, creates a task and adds it to the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"HongshuW"},"content":"     * @param line A line of data.","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"HongshuW"},"content":"    private void readData(String line) {","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"HongshuW"},"content":"        // Split data into words","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"HongshuW"},"content":"        String[] splitted \u003d line.split(\" / \");","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"HongshuW"},"content":"        // Determine type of the task and create corresponding task instance","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"HongshuW"},"content":"        Task task;","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"HongshuW"},"content":"        if (splitted[0].equals(\"T\")) { // a todo task","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"HongshuW"},"content":"            task \u003d new ToDo(splitted[2]);","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"HongshuW"},"content":"        } else if (splitted[0].equals(\"D\")) { // a task with deadline","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"HongshuW"},"content":"            task \u003d new Deadline(splitted[2], splitted[3]);","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"HongshuW"},"content":"        } else if (splitted[0].equals(\"E\")) { // an event","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"HongshuW"},"content":"            task \u003d new Event(splitted[2], splitted[3]);","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"HongshuW"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"HongshuW"},"content":"            task \u003d new Task(splitted[2]);","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"HongshuW"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"HongshuW"},"content":"        // Check whether task is done","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"HongshuW"},"content":"        if (splitted[1].equals(\"1\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"HongshuW"},"content":"            task.setDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"HongshuW"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"HongshuW"},"content":"        // Add to task list","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"HongshuW"},"content":"        tasks.addTask(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"HongshuW"},"content":"     * Adds a task to the file.","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"HongshuW"},"content":"     * @param task The task to be added.","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"HongshuW"},"content":"    public void addToFile(Task task) {","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"HongshuW"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"HongshuW"},"content":"            FileWriter fileWriter \u003d new FileWriter(Storage.data, true);","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"HongshuW"},"content":"            fileWriter.append(task.toFileFormatString()); // write to file.","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"HongshuW"},"content":"            fileWriter.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"HongshuW"},"content":"        } catch (IOException ioException) {","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"HongshuW"},"content":"            this.readFile();","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"HongshuW"},"content":"            Ui.showFileNotFoundError();","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"HongshuW"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"HongshuW"},"content":"     * Removes a task from the file.","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"HongshuW"},"content":"     * @param index Index of the task in the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"HongshuW"},"content":"    public void removeFromFile(int index) {","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"HongshuW"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"HongshuW"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(Storage.data.toPath());","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"HongshuW"},"content":"            FileWriter fileWriter \u003d new FileWriter(Storage.data);","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"HongshuW"},"content":"            for (int i \u003d 0; i \u003c this.tasks.getNumOfTasks(); i++) { // remove this task from file.","lastModifiedDate":"2021-08-25"},{"lineNumber":121,"author":{"gitId":"HongshuW"},"content":"                if (i !\u003d index) {","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"HongshuW"},"content":"                    fileWriter.append(lines.get(i) + \"\\n\");","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"HongshuW"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":124,"author":{"gitId":"HongshuW"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":125,"author":{"gitId":"HongshuW"},"content":"            fileWriter.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":126,"author":{"gitId":"HongshuW"},"content":"        } catch (IOException ioException) {","lastModifiedDate":"2021-08-25"},{"lineNumber":127,"author":{"gitId":"HongshuW"},"content":"            this.readFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"HongshuW"},"content":"            Ui.showFileNotFoundError();","lastModifiedDate":"2021-08-25"},{"lineNumber":129,"author":{"gitId":"HongshuW"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":130,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":131,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":132,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":133,"author":{"gitId":"HongshuW"},"content":"     * Rewrites data from taskList to the file.","lastModifiedDate":"2021-08-25"},{"lineNumber":134,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":135,"author":{"gitId":"HongshuW"},"content":"    public void rewriteFile() {","lastModifiedDate":"2021-08-25"},{"lineNumber":136,"author":{"gitId":"HongshuW"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":137,"author":{"gitId":"HongshuW"},"content":"            FileWriter fileWriter \u003d new FileWriter(Storage.data);","lastModifiedDate":"2021-08-25"},{"lineNumber":138,"author":{"gitId":"HongshuW"},"content":"            for (int i \u003d 0; i \u003c this.tasks.getNumOfTasks(); i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":139,"author":{"gitId":"HongshuW"},"content":"                fileWriter.append(this.tasks.getFileFormattedTask(i));","lastModifiedDate":"2021-08-25"},{"lineNumber":140,"author":{"gitId":"HongshuW"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":141,"author":{"gitId":"HongshuW"},"content":"            fileWriter.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":142,"author":{"gitId":"HongshuW"},"content":"        } catch (IOException ioException) {","lastModifiedDate":"2021-08-25"},{"lineNumber":143,"author":{"gitId":"HongshuW"},"content":"            this.readFile();","lastModifiedDate":"2021-08-25"},{"lineNumber":144,"author":{"gitId":"HongshuW"},"content":"            Ui.showFileNotFoundError();","lastModifiedDate":"2021-08-25"},{"lineNumber":145,"author":{"gitId":"HongshuW"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":146,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":147,"author":{"gitId":"HongshuW"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"HongshuW":147}},{"path":"src/main/java/duke/data/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongshuW"},"content":"package duke.data;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"HongshuW"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"HongshuW"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"HongshuW"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"HongshuW"},"content":" * Represents a temporary list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"HongshuW"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"HongshuW"},"content":"public class TaskList {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"HongshuW"},"content":"    /** List of tasks */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"HongshuW"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"HongshuW"},"content":"     * Constructor of the class `TaskList`.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"HongshuW"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"HongshuW"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"HongshuW"},"content":"     * Adds task to the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"HongshuW"},"content":"     * @param task The task to be added.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"HongshuW"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"HongshuW"},"content":"        this.tasks.add(task); // add to task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"HongshuW"},"content":"     * Removes a task from the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"HongshuW"},"content":"     * @param task The task to be removed.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"HongshuW"},"content":"    public void removeFromList(Task task) {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"HongshuW"},"content":"        this.tasks.remove(task); // remove from task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"HongshuW"},"content":"     * Returns a task as a string to be stored in the file.","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"HongshuW"},"content":"     * @param index Index of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"HongshuW"},"content":"     * @return String representation of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"HongshuW"},"content":"    public String getFileFormattedTask(int index) {","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"HongshuW"},"content":"        return this.tasks.get(index).toFileFormatString();","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"HongshuW"},"content":"     * Returns the number of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"HongshuW"},"content":"     * @return Number of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"HongshuW"},"content":"    public int getNumOfTasks() {","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"HongshuW"},"content":"        return this.tasks.size();","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"HongshuW"},"content":"     * Returns the task at the given index in the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"HongshuW"},"content":"     * @param index Index of a task.","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"HongshuW"},"content":"     * @return Task at the given index.","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"HongshuW"},"content":"    public Task get(int index) {","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"HongshuW"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"HongshuW"},"content":"     * Returns the index of a task in the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"HongshuW"},"content":"     * @param task Task in the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"HongshuW"},"content":"     * @return Index of the task given.","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"HongshuW"},"content":"    public int indexOf(Task task) {","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"HongshuW"},"content":"        return this.tasks.indexOf(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"HongshuW"},"content":"     * Filters the task list and returns a new list with tasks containing the keyword.","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"HongshuW"},"content":"     * @param keyword The keyword to be checked.","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"HongshuW"},"content":"     * @return A new list with tasks containing the keyword.","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"HongshuW"},"content":"    public ArrayList\u003cTask\u003e filter(String keyword) {","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"HongshuW"},"content":"        int len \u003d this.getNumOfTasks();","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"HongshuW"},"content":"        ArrayList\u003cTask\u003e filteredTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"HongshuW"},"content":"        for (int i \u003d 0; i \u003c len; i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"HongshuW"},"content":"            Task task \u003d this.tasks.get(i);","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"HongshuW"},"content":"            if (task.containsKeyword(keyword)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"HongshuW"},"content":"                filteredTasks.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"HongshuW"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"HongshuW"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"HongshuW"},"content":"        return filteredTasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"HongshuW"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"HongshuW":95}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongshuW"},"content":"package duke.exception;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"HongshuW"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"HongshuW"},"content":" * Represents an exception thrown when commands are invalid.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"HongshuW"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"HongshuW"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"HongshuW"},"content":"     * Constructor of the class `DukeException`.","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"HongshuW"},"content":"     * @param message Error message.","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"HongshuW"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"HongshuW"},"content":"        super(\"____________________________________________________________\\n\" +","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"HongshuW"},"content":"                message +","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"HongshuW"},"content":"                \"\\n____________________________________________________________\\n\");","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"HongshuW"},"content":"     * Returns the error message of the DukeException.","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"HongshuW"},"content":"     * @return String representation of the exception.","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"HongshuW"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"HongshuW"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"HongshuW"},"content":"        return super.getMessage();","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"HongshuW"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"HongshuW":27}},{"path":"src/main/java/duke/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongshuW"},"content":"package duke.exception;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"HongshuW"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"HongshuW"},"content":" * Represents an exception thrown when commands received are unknown. A subclass of DukeException.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"HongshuW"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"HongshuW"},"content":"public class InvalidCommandException extends DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"HongshuW"},"content":"     * Constructor of the class `InvalidCommandException`.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"HongshuW"},"content":"    public InvalidCommandException() {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"HongshuW"},"content":"        super(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"HongshuW"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"HongshuW":13}},{"path":"src/main/java/duke/exception/InvalidTaskNoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongshuW"},"content":"package duke.exception;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"HongshuW"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"HongshuW"},"content":" * Represents an exception thrown when an invalid task number is given. A subclass of DukeException.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"HongshuW"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"HongshuW"},"content":"public class InvalidTaskNoException extends DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"HongshuW"},"content":"     * Constructor of the class `InvalidTaskNoException`.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"HongshuW"},"content":"    public InvalidTaskNoException() {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"HongshuW"},"content":"        super(\"☹ OOPS!!! The task number is invalid.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"HongshuW"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"HongshuW":13}},{"path":"src/main/java/duke/exception/InvalidTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongshuW"},"content":"package duke.exception;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"HongshuW"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"HongshuW"},"content":" * Represents an exception thrown when the given time is in an invalid format. A subclass of DukeException.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"HongshuW"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"HongshuW"},"content":"public class InvalidTimeException extends DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"HongshuW"},"content":"     * Constructor of the class `InvalidTimeException`.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"HongshuW"},"content":"     * @param timeFormat Correct time format.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"HongshuW"},"content":"    public InvalidTimeException(String timeFormat) {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"HongshuW"},"content":"        super(\"☹ OOPS!!! The time is invalid.\\nPlease input time in this form:\\n\" + timeFormat);","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"HongshuW"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"HongshuW":15}},{"path":"src/main/java/duke/exception/MissingCommandDetailException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongshuW"},"content":"package duke.exception;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"HongshuW"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"HongshuW"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"HongshuW"},"content":" * Represents an exception thrown when some details in a command are missing. A subclass of DukeException.","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"HongshuW"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"HongshuW"},"content":"public class MissingCommandDetailException extends DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"HongshuW"},"content":"     * Constructor of the class `MissingCommandDetailException`.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"HongshuW"},"content":"     * @param missingDetails The missing details.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"HongshuW"},"content":"     * @param taskType Type of task involved.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"HongshuW"},"content":"     * @param timeFormat Time format of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"HongshuW"},"content":"    public MissingCommandDetailException(String missingDetails, String taskType, String timeFormat) {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"HongshuW"},"content":"        super(String.format(\"☹ OOPS!!! The %s of %s cannot be empty.\\n\", missingDetails, taskType) +","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"HongshuW"},"content":"                Ui.getCommandFormat(taskType, timeFormat));","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"HongshuW"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"HongshuW":20}},{"path":"src/main/java/duke/exception/MultipleTimeSlotsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongshuW"},"content":"package duke.exception;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"HongshuW"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"HongshuW"},"content":" * Represents an exception thrown when more than one time slots are given. A subclass of DukeException.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"HongshuW"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"HongshuW"},"content":"public class MultipleTimeSlotsException extends DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"HongshuW"},"content":"     * Constructor of the class `MultipleTimeSlotsException`.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"HongshuW"},"content":"     * @param taskType Type of a task.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"HongshuW"},"content":"    public MultipleTimeSlotsException(String taskType) {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"HongshuW"},"content":"        super(String.format(\"☹ OOPS!!! %s cannot occupy multiple time slots.\", taskType));","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"HongshuW"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"HongshuW":15}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongshuW"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"HongshuW"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"HongshuW"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"HongshuW"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"HongshuW"},"content":" * Represents a task with a deadline. A subclass of the Task class.","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"HongshuW"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"HongshuW"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"HongshuW"},"content":"    /** Deadline of this task as an LocalDateTime instance */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"HongshuW"},"content":"    protected LocalDateTime time;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"HongshuW"},"content":"     * Constructor of the class `Deadline`.","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"HongshuW"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"HongshuW"},"content":"     * @param by Deadline of the task.","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"HongshuW"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"HongshuW"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"HongshuW"},"content":"        this.time \u003d LocalDateTime.parse(by.trim(), Task.formatter);","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"HongshuW"},"content":"     * Converts a task with deadline to a string.","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"HongshuW"},"content":"     * @return The string representation of a task with deadline.","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"HongshuW"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"HongshuW"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"HongshuW"},"content":"        return \"[D]\" + super.toString() + \" (by: \" +","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"HongshuW"},"content":"                this.time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy, HH:mm\")) + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"HongshuW"},"content":"     * Converts the task to a string with the format of the file in hard disk.","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"HongshuW"},"content":"     * @return String representation of the task in the file\u0027s format.","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"HongshuW"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"HongshuW"},"content":"    public String toFileFormatString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"HongshuW"},"content":"        return String.format(\"D / %s / %s / %s\\n\", this.isDone ? \"1\" : \"0\", this.description,","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"HongshuW"},"content":"                this.time.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\")));","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"HongshuW"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"HongshuW":45}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongshuW"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"HongshuW"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"HongshuW"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"HongshuW"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"HongshuW"},"content":" * Represents an Event, which is a Task with a starting time and an ending time.","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"HongshuW"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"HongshuW"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"HongshuW"},"content":"    /** Starting time of the event */","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"HongshuW"},"content":"    protected LocalDateTime startingTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"HongshuW"},"content":"    /** Ending time of the event */","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"HongshuW"},"content":"    protected LocalDateTime endingTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"HongshuW"},"content":"     * Constructor of the class `Event`.","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"HongshuW"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"HongshuW"},"content":"     * @param at Time slot of the task.","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"HongshuW"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"HongshuW"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"HongshuW"},"content":"        String[] times \u003d at.split(\"to\", 2);","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"HongshuW"},"content":"        this.startingTime \u003d LocalDateTime.parse(times[0].trim(), Task.formatter);","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"HongshuW"},"content":"        this.endingTime \u003d LocalDateTime.parse(times[1].trim(), Task.formatter);","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"HongshuW"},"content":"        if (this.endingTime.isBefore(this.startingTime)) {","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"HongshuW"},"content":"            this.swapTime(); // swap them if they are in incorrect sequence","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"HongshuW"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"HongshuW"},"content":"     * Swaps the starting time with the ending time.","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"HongshuW"},"content":"    private void swapTime() {","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"HongshuW"},"content":"        LocalDateTime temporaryTime \u003d this.startingTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"HongshuW"},"content":"        this.startingTime \u003d this.endingTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"HongshuW"},"content":"        this.endingTime \u003d temporaryTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"HongshuW"},"content":"     * Converts a task with time range to string.","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"HongshuW"},"content":"     * @return The string representation of a task with time range.","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"HongshuW"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"HongshuW"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"HongshuW"},"content":"        return \"[E]\" + super.toString() + \" (at: \" +","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"HongshuW"},"content":"                this.startingTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy, HH:mm\")) + \" to \" +","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"HongshuW"},"content":"                this.endingTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy, HH:mm\")) + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"HongshuW"},"content":"     * Converts the task to a string with the format of the file in hard disk.","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"HongshuW"},"content":"     * @return String representation of the task in the file\u0027s format.","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"HongshuW"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"HongshuW"},"content":"    public String toFileFormatString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"HongshuW"},"content":"        return String.format(\"E / %s / %s / %s to %s\\n\", this.isDone ? \"1\" : \"0\", this.description,","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"HongshuW"},"content":"                this.startingTime.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\")),","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"HongshuW"},"content":"                this.endingTime.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\")));","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"HongshuW"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"HongshuW":63}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongshuW"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"HongshuW"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"HongshuW"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"HongshuW"},"content":" * Represents a task that can be recorded by the Duke program.","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"HongshuW"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"HongshuW"},"content":"public class Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"HongshuW"},"content":"    /** Formatter of time */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"HongshuW"},"content":"    protected static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"HongshuW"},"content":"    /** Description of the task */","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"HongshuW"},"content":"    protected String description;","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"HongshuW"},"content":"    /** Whether the task is done */","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"HongshuW"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"HongshuW"},"content":"     * Constructor of the class `Task`.","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"HongshuW"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"HongshuW"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"HongshuW"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"HongshuW"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"HongshuW"},"content":"     * Returns the status of the task as a string.","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"HongshuW"},"content":"     * @return The status of the task.","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"HongshuW"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"HongshuW"},"content":"        return (this.isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"HongshuW"},"content":"     * Marks the current task as done.","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"HongshuW"},"content":"    public void setDone() {","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"HongshuW"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"HongshuW"},"content":"     * Converts the task to a string.","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"HongshuW"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"HongshuW"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"HongshuW"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"HongshuW"},"content":"        String status \u003d this.getStatusIcon();","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"HongshuW"},"content":"        return String.format(\"[%s] %s\", status, this.description);","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"HongshuW"},"content":"     * Converts the task to a string with the format of the file in hard disk.","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"HongshuW"},"content":"     * @return String representation of the task in the file\u0027s format.","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"HongshuW"},"content":"    public String toFileFormatString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"HongshuW"},"content":"        return String.format(\"%s / %s\\n\", this.isDone ? \"1\" : \"0\", this.description);","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"HongshuW"},"content":"     * Returns whether the task description contains a keyword.","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"HongshuW"},"content":"     * @param keyword Keyword to be checked.","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"HongshuW"},"content":"     * @return whether the task description contains the keyword.","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"HongshuW"},"content":"    public boolean containsKeyword(String keyword) {","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"HongshuW"},"content":"        return this.description.contains(keyword);","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"HongshuW"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"HongshuW":71}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongshuW"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"HongshuW"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"HongshuW"},"content":" * Represents a task to be completed with unspecified time.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"HongshuW"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"HongshuW"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"HongshuW"},"content":"     * Constructor of the class `ToDo`.","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"HongshuW"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"HongshuW"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"HongshuW"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"HongshuW"},"content":"     * Converts the task to string.","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"HongshuW"},"content":"     * @return String representation of the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"HongshuW"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"HongshuW"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"HongshuW"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"HongshuW"},"content":"     * Converts the task to a string with the format of the file in hard disk.","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"HongshuW"},"content":"     * @return String representation of the task in the file\u0027s format.","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"HongshuW"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"HongshuW"},"content":"    public String toFileFormatString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"HongshuW"},"content":"        return String.format(\"T / %s / %s\\n\", this.isDone ? \"1\" : \"0\", this.description);","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"HongshuW"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"HongshuW":35}},{"path":"src/main/java/duke/ui/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongshuW"},"content":"package duke.ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"HongshuW"},"content":"import duke.command.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"HongshuW"},"content":"import duke.exception.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"HongshuW"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"HongshuW"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"HongshuW"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"HongshuW"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"HongshuW"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"HongshuW"},"content":" * Represents a parser that deals with making sense of the user command.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"HongshuW"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"HongshuW"},"content":"public class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"HongshuW"},"content":"     * Returns parsed command which involves time.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"HongshuW"},"content":"     * ","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"HongshuW"},"content":"     * @param words An array of words in the command.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"HongshuW"},"content":"     * @param isEvent Whether the command is an `event` command.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"HongshuW"},"content":"     * @return Parsed command.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"HongshuW"},"content":"     * @throws DukeException If command is invalid.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"HongshuW"},"content":"    private static Command parseCommandWithTime(String[] words, boolean isEvent) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"HongshuW"},"content":"        // Determine key information based on type of the task","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"HongshuW"},"content":"        String timeFormat \u003d isEvent ? \"yyyy-MM-dd HH:mm to yyyy-MM-dd HH:mm\" : \"yyyy-MM-dd HH:mm\";","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"HongshuW"},"content":"        String regex \u003d isEvent ? \"/at\" : \"/by\";","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"HongshuW"},"content":"        String taskType \u003d isEvent ? \"event\" : \"deadline\";","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"HongshuW"},"content":"        // Parse the command","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"HongshuW"},"content":"        if (words.length \u003e\u003d 2) {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"HongshuW"},"content":"            String[] information \u003d words[1].split(regex);","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"HongshuW"},"content":"            if (information.length \u003d\u003d 2) {","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"HongshuW"},"content":"                try {","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"HongshuW"},"content":"                    if (isEvent) {","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"HongshuW"},"content":"                        return new AddTaskCommand(new Event(information[0], information[1]));","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"HongshuW"},"content":"                    } else {","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"HongshuW"},"content":"                        return new AddTaskCommand(new Deadline(information[0], information[1]));","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"HongshuW"},"content":"                    }","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"HongshuW"},"content":"                } catch (DateTimeParseException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"HongshuW"},"content":"                    throw new InvalidTimeException(timeFormat);","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"HongshuW"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"HongshuW"},"content":"            } else if (information.length \u003c 2) {","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"HongshuW"},"content":"                throw new MissingCommandDetailException(\"time\", taskType, String.format(\"%s %s\", regex, timeFormat));","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"HongshuW"},"content":"            } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"HongshuW"},"content":"                throw new MultipleTimeSlotsException(taskType);","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"HongshuW"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"HongshuW"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"HongshuW"},"content":"            throw new MissingCommandDetailException(\"description\", taskType,","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"HongshuW"},"content":"                    String.format(\"%s %s\", regex, timeFormat));","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"HongshuW"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"HongshuW"},"content":"     * Returns parsed command which involves a task number.","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"HongshuW"},"content":"     * @param words An array of words in the command.","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"HongshuW"},"content":"     * @param isDoneCommand Whether the command is a `done` command.","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"HongshuW"},"content":"     * @return Parsed command.","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"HongshuW"},"content":"     * @throws InvalidTaskNoException If task number is invalid.","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"HongshuW"},"content":"    private static Command parseCommandWithTaskNo(","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"HongshuW"},"content":"            String[] words, boolean isDoneCommand) throws InvalidTaskNoException {","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"HongshuW"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"HongshuW"},"content":"            int index \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"HongshuW"},"content":"            return isDoneCommand ? new TaskDoneCommand(index) : new DeleteTaskCommand(index);","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"HongshuW"},"content":"        } catch (ArrayIndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"HongshuW"},"content":"            throw new InvalidTaskNoException();","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"HongshuW"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"HongshuW"},"content":"     * Parses and returns a command from a string to a Command object.","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"HongshuW"},"content":"     * @param command Command received from keyboard.","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"HongshuW"},"content":"     * @return Parsed command.","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"HongshuW"},"content":"     * @throws DukeException If command is invalid.","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"HongshuW"},"content":"    public static Command parse(String command) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"HongshuW"},"content":"        // Split the command into two phrases","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"HongshuW"},"content":"        String[] words \u003d command.split(\" \", 2);","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"HongshuW"},"content":"        // Determine type of the command and return corresponding command instance","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"HongshuW"},"content":"        if (command.equals(\"bye\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"HongshuW"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"HongshuW"},"content":"        } else if (command.equals(\"list\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"HongshuW"},"content":"            return new GetListCommand();","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"HongshuW"},"content":"        } else if (words[0].equals(\"done\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"HongshuW"},"content":"            return parseCommandWithTaskNo(words, true);","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"HongshuW"},"content":"        } else if (words[0].equals(\"delete\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"HongshuW"},"content":"            return parseCommandWithTaskNo(words, false);","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"HongshuW"},"content":"        } else if (words[0].equals(\"todo\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"HongshuW"},"content":"            if (words.length \u003e\u003d 2) {","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"HongshuW"},"content":"                return new AddTaskCommand(new ToDo(words[1]));","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"HongshuW"},"content":"            } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"HongshuW"},"content":"                throw new MissingCommandDetailException(\"description\",\"todo\", \"\");","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"HongshuW"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"HongshuW"},"content":"        } else if (words[0].equals(\"deadline\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"HongshuW"},"content":"            return Parser.parseCommandWithTime(words, false);","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"HongshuW"},"content":"        } else if (words[0].equals(\"event\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"HongshuW"},"content":"            return Parser.parseCommandWithTime(words, true);","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"HongshuW"},"content":"        } else if (words[0].equals(\"find\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"HongshuW"},"content":"            if (words.length \u003e\u003d 2) {","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"HongshuW"},"content":"                return new FindTaskCommand(words[1].trim());","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"HongshuW"},"content":"            } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"HongshuW"},"content":"                throw new MissingCommandDetailException(\"keyword\",\"find\", \"\");","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"HongshuW"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"HongshuW"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"HongshuW"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"HongshuW"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"HongshuW"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"HongshuW":112}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongshuW"},"content":"package duke.ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"HongshuW"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"HongshuW"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"HongshuW"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"HongshuW"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"HongshuW"},"content":" * Represents UI of the Duke program.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"HongshuW"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"HongshuW"},"content":"public class Ui {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"HongshuW"},"content":"    /** Greeting message to be printed when the program starts */","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"HongshuW"},"content":"    private static final String GREETING_MESSAGE \u003d","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"HongshuW"},"content":"            \"____________________________________________________________\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"HongshuW"},"content":"                    \"Hello! I\u0027m Duke\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"HongshuW"},"content":"                    \"What can I do for you?\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"HongshuW"},"content":"                    \"____________________________________________________________\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"HongshuW"},"content":"    /** Scanner used to read commands */","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"HongshuW"},"content":"    private Scanner input;","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"HongshuW"},"content":"     * Constructor for the class `Ui`.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"HongshuW"},"content":"    public Ui() {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"HongshuW"},"content":"        this.input \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"HongshuW"},"content":"     * Prints welcome message.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"HongshuW"},"content":"    public void showWelcome() {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"HongshuW"},"content":"        System.out.println(Ui.GREETING_MESSAGE);","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"HongshuW"},"content":"     * Returns command received from keyboard.","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"HongshuW"},"content":"     * @return Command received.","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"HongshuW"},"content":"    public String getCommand() {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"HongshuW"},"content":"        return this.input.nextLine().trim();","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"HongshuW"},"content":"     * Prints the output of a command.","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"HongshuW"},"content":"     * @param command Processed command.","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"HongshuW"},"content":"    public void showCommandOutput(Command command) {","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"HongshuW"},"content":"        System.out.println(command);","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"HongshuW"},"content":"     * Returns the format of a task.","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"HongshuW"},"content":"     * @param taskType Type of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"HongshuW"},"content":"     * @param timeFormat Time format of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"HongshuW"},"content":"     * @return Command format of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"HongshuW"},"content":"    public static String getCommandFormat(String taskType, String timeFormat) {","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"HongshuW"},"content":"        return String.format(\"Please follow the format:\\n%s \u003ctask description\u003e %s\", taskType, timeFormat);","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"HongshuW"},"content":"     * Prints the given exception.","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"HongshuW"},"content":"     * @param dukeException The given exception.","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"HongshuW"},"content":"    public void showError(DukeException dukeException) {","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"HongshuW"},"content":"        System.out.println(dukeException);","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"HongshuW"},"content":"     * Prints out error message indicating that file containing data is not found.","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"HongshuW"},"content":"    public static void showFileNotFoundError() {","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"HongshuW"},"content":"        DukeException dukeException \u003d new DukeException(","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"HongshuW"},"content":"                \"☹ OOPS!!! The file cannot be found. A new file has been created, please try again!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"HongshuW"},"content":"        System.out.println(dukeException);","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"HongshuW"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"HongshuW":81}},{"path":"src/test/java/duke/command/AddTaskCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongshuW"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"HongshuW"},"content":"import duke.data.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"HongshuW"},"content":"import duke.data.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"HongshuW"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"HongshuW"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"HongshuW"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"HongshuW"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"HongshuW"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"HongshuW"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"HongshuW"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"HongshuW"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"HongshuW"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"HongshuW"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"HongshuW"},"content":"public class AddTaskCommandTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"HongshuW"},"content":"    private TaskList taskList1 \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"HongshuW"},"content":"    private TaskList taskList2 \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"HongshuW"},"content":"    private ToDo task1 \u003d new ToDo(\"task1\");","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"HongshuW"},"content":"    private Deadline task2 \u003d new Deadline(\"task2\", \"2021-09-10 18:00\");","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"HongshuW"},"content":"    private Event task3 \u003d new Event(\"task3\", \"2021-09-10 18:00 to 2021-09-10 18:50\");","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"HongshuW"},"content":"    private Path path \u003d Paths.get(System.getProperty(\"user.dir\"), \"data\", \"duke.txt\");","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"HongshuW"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"HongshuW"},"content":"    public void execute_emptyTaskList_success() {","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"HongshuW"},"content":"        Storage storage \u003d new Storage(path, taskList1);","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"HongshuW"},"content":"        taskList2.addTask(task1);","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"HongshuW"},"content":"        AddTaskCommand command \u003d new AddTaskCommand(task1);","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"HongshuW"},"content":"        command.execute(taskList1, storage);","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"HongshuW"},"content":"        assertEquals(taskList2.get(0).toString(), taskList1.get(0).toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"HongshuW"},"content":"        path.toFile().delete();","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"HongshuW"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"HongshuW"},"content":"    public void execute_TaskList_success() {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"HongshuW"},"content":"        Task[] tasks \u003d new Task[] {task1, task2, task3};","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"HongshuW"},"content":"        Storage storage \u003d new Storage(path, taskList1);","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"HongshuW"},"content":"        for (int i \u003d 0; i \u003c 3; i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"HongshuW"},"content":"            taskList2.addTask(tasks[i]);","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"HongshuW"},"content":"            AddTaskCommand command \u003d new AddTaskCommand(tasks[i]);","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"HongshuW"},"content":"            command.execute(taskList1, storage);","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"HongshuW"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"HongshuW"},"content":"        for (int i \u003d 0; i \u003c 3; i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"HongshuW"},"content":"            assertEquals(taskList2.get(i).toString(), taskList1.get(i).toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"HongshuW"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"HongshuW"},"content":"        path.toFile().delete();","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"HongshuW"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"HongshuW"},"content":"    public void execute_File_success() {","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"HongshuW"},"content":"        Storage storage \u003d new Storage(path, taskList1);","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"HongshuW"},"content":"        AddTaskCommand command \u003d new AddTaskCommand(task1);","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"HongshuW"},"content":"        command.execute(taskList1, storage);","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"HongshuW"},"content":"        Scanner fileScanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"HongshuW"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"HongshuW"},"content":"            fileScanner \u003d new Scanner(path.toFile());","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"HongshuW"},"content":"            assertEquals(\"T / 0 / task1\", fileScanner.nextLine());","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"HongshuW"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"HongshuW"},"content":"            System.out.println(e);","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"HongshuW"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"HongshuW"},"content":"        path.toFile().delete();","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"HongshuW"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"HongshuW":67}},{"path":"src/test/java/duke/ui/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongshuW"},"content":"package duke.ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"HongshuW"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"HongshuW"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"HongshuW"},"content":"public class UiTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"HongshuW"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"HongshuW"},"content":"    public void getCommandFormat_randomString_success() {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"HongshuW"},"content":"        assertEquals(\"Please follow the format:\\nrandom task \u003ctask description\u003e time\",","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"HongshuW"},"content":"                Ui.getCommandFormat(\"random task\", \"time\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"HongshuW"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"HongshuW"},"content":"    public void getCommandFormat_emptyString_success() {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"HongshuW"},"content":"        assertEquals(\"Please follow the format:\\n \u003ctask description\u003e \",","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"HongshuW"},"content":"                Ui.getCommandFormat(\"\", \"\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"HongshuW"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"HongshuW"},"content":"    public void getCommandFormat_edgeCase_success() {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"HongshuW"},"content":"        assertEquals(\"Please follow the format:\\n\\n \u003ctask description\u003e time\",","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"HongshuW"},"content":"                Ui.getCommandFormat(\"\\n\", \"time\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"HongshuW"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"HongshuW":25}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"HongshuW"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"HongshuW"},"content":"todo borrow book","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"HongshuW"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"HongshuW"},"content":"done 1","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"HongshuW"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"HongshuW"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"HongshuW"},"content":"done 4","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"HongshuW"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"HongshuW"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"HongshuW":9}},{"path":"text-ui-test/input1.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"HongshuW"},"content":"todo task1","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"HongshuW"},"content":"event task2 /at random time","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"HongshuW"},"content":"deadline task3 /by today","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"HongshuW"},"content":"todo task4 task5 task6","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"HongshuW"},"content":"done 2","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"HongshuW"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"HongshuW"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"HongshuW":7}},{"path":"text-ui-test/input2.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"HongshuW"},"content":"hello","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"HongshuW"},"content":"todo","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"HongshuW"},"content":"deadline","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"HongshuW"},"content":"event","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"HongshuW"},"content":"deadline task1","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"HongshuW"},"content":"event task2","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"HongshuW"},"content":"deadline task3 /by today /by tomorrow","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"HongshuW"},"content":"event task4 /at random time /at 8-9pm /at ???","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"HongshuW"},"content":"done -1","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"HongshuW"},"content":"done 100","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"HongshuW"},"content":"done 1","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"HongshuW"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"HongshuW":12}},{"path":"text-ui-test/input3.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"HongshuW"},"content":"delete 1","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"HongshuW"},"content":"todo task1","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"HongshuW"},"content":"todo task2","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"HongshuW"},"content":"todo task3","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"HongshuW"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"HongshuW"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"HongshuW"},"content":"delete 2","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"HongshuW"},"content":"delete 2","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"HongshuW"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"HongshuW"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"HongshuW":10}}]
