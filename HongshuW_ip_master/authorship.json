[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"HongshuW"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"HongshuW"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"HongshuW"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"HongshuW"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"HongshuW"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"HongshuW"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"HongshuW"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"HongshuW"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"HongshuW"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"HongshuW"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"HongshuW"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"HongshuW"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"HongshuW"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"HongshuW"},"content":"    mainClassName \u003d \"workdone.Launcher\"","lastModifiedDate":"2021-09-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"HongshuW"},"content":"    archiveBaseName \u003d \"WorkDone\"","lastModifiedDate":"2021-09-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"HongshuW"},"content":"    archiveVersion \u003d \u00271.0\u0027","lastModifiedDate":"2021-09-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"HongshuW":18,"-":44}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"HongshuW"},"content":"# WorkDone","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"HongshuW"},"content":"### Feature1: Manage tasks and events","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"HongshuW"},"content":"WorkDone allows you to add, view, find, delete a task or event. You can also mark it as done.","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"HongshuW"},"content":"### Feature2: Store task list locally","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":13,"author":{"gitId":"HongshuW"},"content":"WorkDone will store your tasks automatically after each action, and you will be able to access and modify ","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"HongshuW"},"content":"them later easily through WorkDone.","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":16,"author":{"gitId":"HongshuW"},"content":"### Feature3: Undo an action","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":18,"author":{"gitId":"HongshuW"},"content":"WorkDone enables you to undo an action if it is one of the following:","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"HongshuW"},"content":"* add a task","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"HongshuW"},"content":"* done/undone a task","lastModifiedDate":"2021-09-13"},{"lineNumber":21,"author":{"gitId":"HongshuW"},"content":"* delete a task","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":23,"author":{"gitId":"HongshuW"},"content":"Note that if you exit the program, you will not be able to undo the actions in this session anymore.","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"HongshuW"},"content":"### `todo` - Add a task to be completed","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"HongshuW"},"content":"`todo {task description}`","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"HongshuW"},"content":"Add a `todo` task with description to the end of the task list.","lastModifiedDate":"2021-09-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2021-09-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":34,"author":{"gitId":"HongshuW"},"content":"`todo study for midterms`","lastModifiedDate":"2021-09-13"},{"lineNumber":35,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":36,"author":{"gitId":"HongshuW"},"content":"Expected outcome:","lastModifiedDate":"2021-09-13"},{"lineNumber":37,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":38,"author":{"gitId":"HongshuW"},"content":"The task \u0027study for midterms\u0027 will be added to the end of the task list.","lastModifiedDate":"2021-09-13"},{"lineNumber":39,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":40,"author":{"gitId":"HongshuW"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":41,"author":{"gitId":"HongshuW"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-13"},{"lineNumber":42,"author":{"gitId":"HongshuW"},"content":" [T][] study for midterms","lastModifiedDate":"2021-09-13"},{"lineNumber":43,"author":{"gitId":"HongshuW"},"content":"Now you have xx tasks in the list.","lastModifiedDate":"2021-09-13"},{"lineNumber":44,"author":{"gitId":"HongshuW"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":45,"author":{"gitId":"HongshuW"},"content":"### `deadline` - Add a task with a deadline","lastModifiedDate":"2021-09-13"},{"lineNumber":46,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":47,"author":{"gitId":"HongshuW"},"content":"`deadline {task description} /by yyyy-MM-dd HH:mm`","lastModifiedDate":"2021-09-13"},{"lineNumber":48,"author":{"gitId":"HongshuW"},"content":"Add a `deadline` task with description and deadline to the end of the task list.","lastModifiedDate":"2021-09-13"},{"lineNumber":49,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":50,"author":{"gitId":"HongshuW"},"content":"Example of usage:","lastModifiedDate":"2021-09-13"},{"lineNumber":51,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":52,"author":{"gitId":"HongshuW"},"content":"`deadline CSxxxx assignment 1 /by 2021-10-20 23:59`","lastModifiedDate":"2021-09-13"},{"lineNumber":53,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":54,"author":{"gitId":"HongshuW"},"content":"Expected outcome:","lastModifiedDate":"2021-09-13"},{"lineNumber":55,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":56,"author":{"gitId":"HongshuW"},"content":"The task \u0027CSxxxx assignment 1\u0027 will be added to the end of the task list.","lastModifiedDate":"2021-09-13"},{"lineNumber":57,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":58,"author":{"gitId":"HongshuW"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":59,"author":{"gitId":"HongshuW"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-13"},{"lineNumber":60,"author":{"gitId":"HongshuW"},"content":" [D][] CSxxxx assignment 1 (by: Oct. 20 2021, 23:59)","lastModifiedDate":"2021-09-13"},{"lineNumber":61,"author":{"gitId":"HongshuW"},"content":"Now you have xx tasks in the list.","lastModifiedDate":"2021-09-13"},{"lineNumber":62,"author":{"gitId":"HongshuW"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":63,"author":{"gitId":"HongshuW"},"content":"### `event` - Add an event","lastModifiedDate":"2021-09-13"},{"lineNumber":64,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":65,"author":{"gitId":"HongshuW"},"content":"`event {event description} /at yyyy-MM-dd HH:mm to yyyy-MM-dd HH:mm`","lastModifiedDate":"2021-09-13"},{"lineNumber":66,"author":{"gitId":"HongshuW"},"content":"Add a `event` task with description, starting time and ending time to the end of the task list.","lastModifiedDate":"2021-09-13"},{"lineNumber":67,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":68,"author":{"gitId":"HongshuW"},"content":"Example of usage:","lastModifiedDate":"2021-09-13"},{"lineNumber":69,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":70,"author":{"gitId":"HongshuW"},"content":"`event dinner with friends /at 2021-09-18 18:00 to 2021-09-18 20:00`","lastModifiedDate":"2021-09-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2021-09-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":74,"author":{"gitId":"HongshuW"},"content":"The task \u0027dinner with friends\u0027 will be added to the end of the task list.","lastModifiedDate":"2021-09-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":77,"author":{"gitId":"HongshuW"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-13"},{"lineNumber":78,"author":{"gitId":"HongshuW"},"content":" [E][] dinner with friends (at: Sep. 18 2021, 18:00 to Sep. 18 2021, 20:00)","lastModifiedDate":"2021-09-13"},{"lineNumber":79,"author":{"gitId":"HongshuW"},"content":"Now you have xx tasks in the list.","lastModifiedDate":"2021-09-13"},{"lineNumber":80,"author":{"gitId":"HongshuW"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":81,"author":{"gitId":"HongshuW"},"content":"### `done` - Mark a task as done","lastModifiedDate":"2021-09-13"},{"lineNumber":82,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":83,"author":{"gitId":"HongshuW"},"content":"`done {task no.}`","lastModifiedDate":"2021-09-13"},{"lineNumber":84,"author":{"gitId":"HongshuW"},"content":"Mark the task with \u0027task no.\u0027 as done.","lastModifiedDate":"2021-09-13"},{"lineNumber":85,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":86,"author":{"gitId":"HongshuW"},"content":"Example of usage:","lastModifiedDate":"2021-09-13"},{"lineNumber":87,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":88,"author":{"gitId":"HongshuW"},"content":"`done 1`","lastModifiedDate":"2021-09-13"},{"lineNumber":89,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":90,"author":{"gitId":"HongshuW"},"content":"Expected outcome:","lastModifiedDate":"2021-09-13"},{"lineNumber":91,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":92,"author":{"gitId":"HongshuW"},"content":"The first task in the list will be marked as done.","lastModifiedDate":"2021-09-13"},{"lineNumber":93,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":94,"author":{"gitId":"HongshuW"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":95,"author":{"gitId":"HongshuW"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2021-09-13"},{"lineNumber":96,"author":{"gitId":"HongshuW"},"content":" [T][X] study for midterms","lastModifiedDate":"2021-09-13"},{"lineNumber":97,"author":{"gitId":"HongshuW"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":98,"author":{"gitId":"HongshuW"},"content":"### `undone` - Mark a task as undone","lastModifiedDate":"2021-09-13"},{"lineNumber":99,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":100,"author":{"gitId":"HongshuW"},"content":"`undone {task no.}`","lastModifiedDate":"2021-09-13"},{"lineNumber":101,"author":{"gitId":"HongshuW"},"content":"Mark the task with \u0027task no.\u0027 as undone.","lastModifiedDate":"2021-09-13"},{"lineNumber":102,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":103,"author":{"gitId":"HongshuW"},"content":"Example of usage:","lastModifiedDate":"2021-09-13"},{"lineNumber":104,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":105,"author":{"gitId":"HongshuW"},"content":"`undone 1`","lastModifiedDate":"2021-09-13"},{"lineNumber":106,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":107,"author":{"gitId":"HongshuW"},"content":"Expected outcome:","lastModifiedDate":"2021-09-13"},{"lineNumber":108,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":109,"author":{"gitId":"HongshuW"},"content":"The first task in the list will be marked as undone.","lastModifiedDate":"2021-09-13"},{"lineNumber":110,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":111,"author":{"gitId":"HongshuW"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":112,"author":{"gitId":"HongshuW"},"content":"Got it! I\u0027ve marked this task as undone:","lastModifiedDate":"2021-09-13"},{"lineNumber":113,"author":{"gitId":"HongshuW"},"content":" [T][] study for midterms","lastModifiedDate":"2021-09-13"},{"lineNumber":114,"author":{"gitId":"HongshuW"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":115,"author":{"gitId":"HongshuW"},"content":"### `delete` - Delete a task","lastModifiedDate":"2021-09-13"},{"lineNumber":116,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":117,"author":{"gitId":"HongshuW"},"content":"`delete {task no.}`","lastModifiedDate":"2021-09-13"},{"lineNumber":118,"author":{"gitId":"HongshuW"},"content":"Delete the task with \u0027task no.\u0027 from the task list.","lastModifiedDate":"2021-09-13"},{"lineNumber":119,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":120,"author":{"gitId":"HongshuW"},"content":"Example of usage:","lastModifiedDate":"2021-09-13"},{"lineNumber":121,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":122,"author":{"gitId":"HongshuW"},"content":"`delete 1`","lastModifiedDate":"2021-09-13"},{"lineNumber":123,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":124,"author":{"gitId":"HongshuW"},"content":"Expected outcome:","lastModifiedDate":"2021-09-13"},{"lineNumber":125,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":126,"author":{"gitId":"HongshuW"},"content":"The first task in the list will be deleted.","lastModifiedDate":"2021-09-13"},{"lineNumber":127,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":128,"author":{"gitId":"HongshuW"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":129,"author":{"gitId":"HongshuW"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2021-09-13"},{"lineNumber":130,"author":{"gitId":"HongshuW"},"content":" [T][] study for midterms","lastModifiedDate":"2021-09-13"},{"lineNumber":131,"author":{"gitId":"HongshuW"},"content":"Now you have xx tasks in the list.","lastModifiedDate":"2021-09-13"},{"lineNumber":132,"author":{"gitId":"HongshuW"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":133,"author":{"gitId":"HongshuW"},"content":"### `clear` - Delete all tasks","lastModifiedDate":"2021-09-13"},{"lineNumber":134,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":135,"author":{"gitId":"HongshuW"},"content":"`clear`","lastModifiedDate":"2021-09-13"},{"lineNumber":136,"author":{"gitId":"HongshuW"},"content":"Delete all tasks from the task list.","lastModifiedDate":"2021-09-13"},{"lineNumber":137,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":138,"author":{"gitId":"HongshuW"},"content":"Example of usage:","lastModifiedDate":"2021-09-13"},{"lineNumber":139,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":140,"author":{"gitId":"HongshuW"},"content":"`clear`","lastModifiedDate":"2021-09-13"},{"lineNumber":141,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":142,"author":{"gitId":"HongshuW"},"content":"Expected outcome:","lastModifiedDate":"2021-09-13"},{"lineNumber":143,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":144,"author":{"gitId":"HongshuW"},"content":"All the tasks in the list will be deleted.","lastModifiedDate":"2021-09-13"},{"lineNumber":145,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":146,"author":{"gitId":"HongshuW"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":147,"author":{"gitId":"HongshuW"},"content":"Noted. I\u0027ve removed all the tasks.","lastModifiedDate":"2021-09-13"},{"lineNumber":148,"author":{"gitId":"HongshuW"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":149,"author":{"gitId":"HongshuW"},"content":"### `list` - List all tasks","lastModifiedDate":"2021-09-13"},{"lineNumber":150,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":151,"author":{"gitId":"HongshuW"},"content":"`list`","lastModifiedDate":"2021-09-13"},{"lineNumber":152,"author":{"gitId":"HongshuW"},"content":"List all tasks from the task list.","lastModifiedDate":"2021-09-13"},{"lineNumber":153,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":154,"author":{"gitId":"HongshuW"},"content":"Example of usage:","lastModifiedDate":"2021-09-13"},{"lineNumber":155,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":156,"author":{"gitId":"HongshuW"},"content":"`list`","lastModifiedDate":"2021-09-13"},{"lineNumber":157,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":158,"author":{"gitId":"HongshuW"},"content":"Expected outcome:","lastModifiedDate":"2021-09-13"},{"lineNumber":159,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":160,"author":{"gitId":"HongshuW"},"content":"All the tasks in the list will be shown.","lastModifiedDate":"2021-09-13"},{"lineNumber":161,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":162,"author":{"gitId":"HongshuW"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":163,"author":{"gitId":"HongshuW"},"content":"Here are the tasks in your list:","lastModifiedDate":"2021-09-13"},{"lineNumber":164,"author":{"gitId":"HongshuW"},"content":"1.[T][] study for midterms","lastModifiedDate":"2021-09-13"},{"lineNumber":165,"author":{"gitId":"HongshuW"},"content":"2.[D][] CSxxxx assignment 1 (by: Oct. 20 2021, 23:59)","lastModifiedDate":"2021-09-13"},{"lineNumber":166,"author":{"gitId":"HongshuW"},"content":"3.[E][] dinner with friends (at: Sep. 18 2021, 18:00 to Sep. 18 2021, 20:00)","lastModifiedDate":"2021-09-13"},{"lineNumber":167,"author":{"gitId":"HongshuW"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":168,"author":{"gitId":"HongshuW"},"content":"### `find` - Find tasks","lastModifiedDate":"2021-09-13"},{"lineNumber":169,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":170,"author":{"gitId":"HongshuW"},"content":"`find {keyword}`","lastModifiedDate":"2021-09-13"},{"lineNumber":171,"author":{"gitId":"HongshuW"},"content":"Find and show tasks containing \u0027keyword\u0027.","lastModifiedDate":"2021-09-13"},{"lineNumber":172,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":173,"author":{"gitId":"HongshuW"},"content":"Example of usage:","lastModifiedDate":"2021-09-13"},{"lineNumber":174,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":175,"author":{"gitId":"HongshuW"},"content":"`find assignment`","lastModifiedDate":"2021-09-13"},{"lineNumber":176,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":177,"author":{"gitId":"HongshuW"},"content":"Expected outcome:","lastModifiedDate":"2021-09-13"},{"lineNumber":178,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":179,"author":{"gitId":"HongshuW"},"content":"All the tasks with keyword \u0027assignment\u0027 will be shown.","lastModifiedDate":"2021-09-13"},{"lineNumber":180,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":181,"author":{"gitId":"HongshuW"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":182,"author":{"gitId":"HongshuW"},"content":"Here are the tasks I found:","lastModifiedDate":"2021-09-13"},{"lineNumber":183,"author":{"gitId":"HongshuW"},"content":"2.[D][] CSxxxx assignment 1 (by: Oct. 20 2021, 23:59)","lastModifiedDate":"2021-09-13"},{"lineNumber":184,"author":{"gitId":"HongshuW"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":185,"author":{"gitId":"HongshuW"},"content":"### `undo` - Undo a command","lastModifiedDate":"2021-09-13"},{"lineNumber":186,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":187,"author":{"gitId":"HongshuW"},"content":"`undo`","lastModifiedDate":"2021-09-13"},{"lineNumber":188,"author":{"gitId":"HongshuW"},"content":"Undo the last command in the stack if it is one of the following:","lastModifiedDate":"2021-09-13"},{"lineNumber":189,"author":{"gitId":"HongshuW"},"content":"* todo","lastModifiedDate":"2021-09-13"},{"lineNumber":190,"author":{"gitId":"HongshuW"},"content":"* deadline","lastModifiedDate":"2021-09-13"},{"lineNumber":191,"author":{"gitId":"HongshuW"},"content":"* event","lastModifiedDate":"2021-09-13"},{"lineNumber":192,"author":{"gitId":"HongshuW"},"content":"* done","lastModifiedDate":"2021-09-13"},{"lineNumber":193,"author":{"gitId":"HongshuW"},"content":"* undone","lastModifiedDate":"2021-09-13"},{"lineNumber":194,"author":{"gitId":"HongshuW"},"content":"* delete","lastModifiedDate":"2021-09-13"},{"lineNumber":195,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":196,"author":{"gitId":"HongshuW"},"content":"Example of usage:","lastModifiedDate":"2021-09-13"},{"lineNumber":197,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":198,"author":{"gitId":"HongshuW"},"content":"`undo`","lastModifiedDate":"2021-09-13"},{"lineNumber":199,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":200,"author":{"gitId":"HongshuW"},"content":"Expected outcome:","lastModifiedDate":"2021-09-13"},{"lineNumber":201,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":202,"author":{"gitId":"HongshuW"},"content":"Undo the previous command.","lastModifiedDate":"2021-09-13"},{"lineNumber":203,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":204,"author":{"gitId":"HongshuW"},"content":"Assume the last command is `todo study for midterms`, then the outcome will be:","lastModifiedDate":"2021-09-13"},{"lineNumber":205,"author":{"gitId":"HongshuW"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":206,"author":{"gitId":"HongshuW"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2021-09-13"},{"lineNumber":207,"author":{"gitId":"HongshuW"},"content":" [T][] study for midterms","lastModifiedDate":"2021-09-13"},{"lineNumber":208,"author":{"gitId":"HongshuW"},"content":"Now you have xx tasks in the list.","lastModifiedDate":"2021-09-13"},{"lineNumber":209,"author":{"gitId":"HongshuW"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":210,"author":{"gitId":"HongshuW"},"content":"### `bye` - Exit","lastModifiedDate":"2021-09-13"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":212,"author":{"gitId":"HongshuW"},"content":"`bye`","lastModifiedDate":"2021-09-13"},{"lineNumber":213,"author":{"gitId":"HongshuW"},"content":"Exit the program.","lastModifiedDate":"2021-09-13"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":217,"author":{"gitId":"HongshuW"},"content":"`bye`","lastModifiedDate":"2021-09-13"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":221,"author":{"gitId":"HongshuW"},"content":"A window will pop up with the following message:","lastModifiedDate":"2021-09-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":223,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":224,"author":{"gitId":"HongshuW"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2021-09-13"},{"lineNumber":225,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"HongshuW":195,"-":30}},{"path":"src/main/java/workdone/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongshuW"},"content":"package workdone;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"HongshuW"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"HongshuW"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"HongshuW"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"HongshuW"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"HongshuW"},"content":"public class Launcher {","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"HongshuW"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"HongshuW"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"HongshuW"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"HongshuW":12}},{"path":"src/main/java/workdone/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongshuW"},"content":"package workdone;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"HongshuW"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"HongshuW"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"HongshuW"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"HongshuW"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"HongshuW"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"HongshuW"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"HongshuW"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"HongshuW"},"content":"import workdone.ui.MainWindow;","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"HongshuW"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"HongshuW"},"content":" * A GUI for WorkDone using FXML.","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"HongshuW"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"HongshuW"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"HongshuW"},"content":"    private final String filePath \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"HongshuW"},"content":"    private final WorkDone workDone \u003d new WorkDone(Paths.get(filePath, \"data\", \"tasks.txt\"));","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"HongshuW"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"HongshuW"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"HongshuW"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"HongshuW"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"HongshuW"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"HongshuW"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"HongshuW"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"HongshuW"},"content":"            stage.setTitle(\"WorkDone\");","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"HongshuW"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setWorkDone(workDone);","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"HongshuW"},"content":"            stage.show();","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"HongshuW"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().greetTheUser();","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"HongshuW"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"HongshuW"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"HongshuW"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"HongshuW"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"HongshuW":36}},{"path":"src/main/java/workdone/WorkDone.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongshuW"},"content":"package workdone;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"HongshuW"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"HongshuW"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"HongshuW"},"content":"import workdone.command.Command;","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"HongshuW"},"content":"import workdone.data.Storage;","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"HongshuW"},"content":"import workdone.data.TaskList;","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"HongshuW"},"content":"import workdone.exception.WorkDoneException;","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"HongshuW"},"content":"import workdone.ui.Parser;","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"HongshuW"},"content":"import workdone.ui.Ui;","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"HongshuW"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"HongshuW"},"content":" * Represents the WorkDone program. Manages tasks based on commands received.","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"HongshuW"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"HongshuW"},"content":"public class WorkDone {","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"HongshuW"},"content":"    /** Storage that can write to or retrieve data from a file on hard disk */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"HongshuW"},"content":"    private final Storage storage;","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"HongshuW"},"content":"    /** List of tasks added */","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"HongshuW"},"content":"    private final TaskList tasks;","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"HongshuW"},"content":"    /** UI of the program */","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"HongshuW"},"content":"    private final Ui ui;","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"HongshuW"},"content":"     * Constructor of the class \u0027WorkDone\u0027.","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"HongshuW"},"content":"     * @param filePath Path of the file to retrieve data.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"HongshuW"},"content":"    public WorkDone(Path filePath) {","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"HongshuW"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"HongshuW"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"HongshuW"},"content":"        this.storage \u003d new Storage(filePath, this.tasks);","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"HongshuW"},"content":"     * Runs the WorkDone program.","lastModifiedDate":"2021-09-13"},{"lineNumber":37,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"HongshuW"},"content":"    public void run() {","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"HongshuW"},"content":"        // Print welcome message, start running","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"HongshuW"},"content":"        this.ui.showWelcome();","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"HongshuW"},"content":"        boolean isRunning \u003d true;","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"HongshuW"},"content":"        // Read in commands while the program is running","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"HongshuW"},"content":"        while (isRunning) {","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"HongshuW"},"content":"            String commandString \u003d this.ui.getCommand();","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"HongshuW"},"content":"            Command command;","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"HongshuW"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"HongshuW"},"content":"                command \u003d Parser.parse(commandString.strip());","lastModifiedDate":"2021-09-13"},{"lineNumber":49,"author":{"gitId":"HongshuW"},"content":"                command.execute(this.tasks, this.storage);","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"HongshuW"},"content":"                this.ui.showCommandOutput(command);","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"HongshuW"},"content":"                isRunning \u003d command.isRunning();","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"HongshuW"},"content":"            } catch (WorkDoneException workDoneException) {","lastModifiedDate":"2021-09-13"},{"lineNumber":53,"author":{"gitId":"HongshuW"},"content":"                this.ui.showError(workDoneException);","lastModifiedDate":"2021-09-13"},{"lineNumber":54,"author":{"gitId":"HongshuW"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"HongshuW"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":58,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"HongshuW"},"content":"     * Runs the WorkDone program, prints out messages based on commands received.","lastModifiedDate":"2021-09-13"},{"lineNumber":60,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"HongshuW"},"content":"     * @param args The command line parameters.","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":64,"author":{"gitId":"HongshuW"},"content":"        String filePath \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"HongshuW"},"content":"        new WorkDone(Paths.get(filePath, \"data\", \"tasks.txt\")).run();","lastModifiedDate":"2021-09-13"},{"lineNumber":66,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"HongshuW"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-09-01"},{"lineNumber":69,"author":{"gitId":"HongshuW"},"content":"        Command command;","lastModifiedDate":"2021-09-01"},{"lineNumber":70,"author":{"gitId":"HongshuW"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":71,"author":{"gitId":"HongshuW"},"content":"            command \u003d Parser.parse(input.strip());","lastModifiedDate":"2021-09-13"},{"lineNumber":72,"author":{"gitId":"HongshuW"},"content":"            command.execute(this.tasks, this.storage);","lastModifiedDate":"2021-09-01"},{"lineNumber":73,"author":{"gitId":"HongshuW"},"content":"            return command.toString();","lastModifiedDate":"2021-09-01"},{"lineNumber":74,"author":{"gitId":"HongshuW"},"content":"        } catch (WorkDoneException workDoneException) {","lastModifiedDate":"2021-09-13"},{"lineNumber":75,"author":{"gitId":"HongshuW"},"content":"            return workDoneException.toString();","lastModifiedDate":"2021-09-13"},{"lineNumber":76,"author":{"gitId":"HongshuW"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":77,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":78,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":79,"author":{"gitId":"HongshuW"},"content":"    public String getGreetingMessage() {","lastModifiedDate":"2021-09-01"},{"lineNumber":80,"author":{"gitId":"HongshuW"},"content":"        return this.ui.getGreetingMessage();","lastModifiedDate":"2021-09-01"},{"lineNumber":81,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"HongshuW":80,"-":2}},{"path":"src/main/java/workdone/command/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongshuW"},"content":"package workdone.command;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"HongshuW"},"content":"import workdone.data.Storage;","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"HongshuW"},"content":"import workdone.data.TaskList;","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"HongshuW"},"content":"import workdone.task.Task;","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"HongshuW"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"HongshuW"},"content":" * Represents a command that adds a task to the task list. A subclass of the Command class.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"HongshuW"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"HongshuW"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"HongshuW"},"content":"     * Constructor of the class `AddTaskCommand`.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"HongshuW"},"content":"     * @param task Task to be added.","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"HongshuW"},"content":"    public AddTaskCommand(Task task) {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"HongshuW"},"content":"        super(\"add\");","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"HongshuW"},"content":"        assert task !\u003d null : \"task shouldn\u0027t be null\";","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"HongshuW"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"HongshuW"},"content":"     * Executes the command. Adds a task into the list, stores it and updates the message to be printed.","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"HongshuW"},"content":"     * @param tasks A list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"HongshuW"},"content":"     * @param storage An instance of Storage that can read from and write to the hard disk.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"HongshuW"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"HongshuW"},"content":"    public void execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"HongshuW"},"content":"        // Add the task","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"HongshuW"},"content":"        tasks.addTask(this.task);","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"HongshuW"},"content":"        storage.addToFile(this.task);","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"HongshuW"},"content":"        // Update message","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"HongshuW"},"content":"        this.message \u003d String.format(","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"HongshuW"},"content":"                \"Got it. I\u0027ve added this task:\\n  %s\\nNow you have %d tasks in the list.\\n\",","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"HongshuW"},"content":"                this.task, tasks.getNumOfTasks());","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"HongshuW"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"HongshuW":39}},{"path":"src/main/java/workdone/command/ClearCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongshuW"},"content":"package workdone.command;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":3,"author":{"gitId":"HongshuW"},"content":"import workdone.data.Storage;","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"HongshuW"},"content":"import workdone.data.TaskList;","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"HongshuW"},"content":"/**","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"HongshuW"},"content":" * Represents a command that deletes all task from the task list. A subclass of the Command class.","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"HongshuW"},"content":" */","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"HongshuW"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"HongshuW"},"content":"     * Constructor of the class `ClearCommand`.","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":13,"author":{"gitId":"HongshuW"},"content":"    public ClearCommand() {","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"HongshuW"},"content":"        super(\"clear\");","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"HongshuW"},"content":"     * Executes the command. Deletes all tasks from the list, stores changes and updates the message to be","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"HongshuW"},"content":"     * printed.","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-09-13"},{"lineNumber":21,"author":{"gitId":"HongshuW"},"content":"     * @param tasks A list of tasks.","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"HongshuW"},"content":"     * @param storage An instance of Storage that can read from and write to the hard disk.","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"HongshuW"},"content":"    @Override","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"HongshuW"},"content":"    public void execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"HongshuW"},"content":"        int len \u003d tasks.getNumOfTasks();","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"HongshuW"},"content":"        for (int i \u003d 0; i \u003c len; i++) {","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"HongshuW"},"content":"            this.task \u003d tasks.get(0);","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"HongshuW"},"content":"            // Remove the task","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"HongshuW"},"content":"            assert this.task !\u003d null : \"task shouldn\u0027t be null\";","lastModifiedDate":"2021-09-13"},{"lineNumber":31,"author":{"gitId":"HongshuW"},"content":"            storage.removeFromFile(0);","lastModifiedDate":"2021-09-13"},{"lineNumber":32,"author":{"gitId":"HongshuW"},"content":"            tasks.removeFromList(this.task);","lastModifiedDate":"2021-09-13"},{"lineNumber":33,"author":{"gitId":"HongshuW"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":34,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":35,"author":{"gitId":"HongshuW"},"content":"        // Update message","lastModifiedDate":"2021-09-13"},{"lineNumber":36,"author":{"gitId":"HongshuW"},"content":"        this.message \u003d \"Noted. I\u0027ve removed all the tasks.\\n\";","lastModifiedDate":"2021-09-13"},{"lineNumber":37,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":38,"author":{"gitId":"HongshuW"},"content":"}","lastModifiedDate":"2021-09-13"}],"authorContributionMap":{"HongshuW":38}},{"path":"src/main/java/workdone/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongshuW"},"content":"package workdone.command;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"HongshuW"},"content":"import workdone.data.Storage;","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"HongshuW"},"content":"import workdone.data.TaskList;","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"HongshuW"},"content":"import workdone.exception.WorkDoneException;","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"HongshuW"},"content":"import workdone.task.Task;","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"HongshuW"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"HongshuW"},"content":" * Represents a command that can be executed.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"HongshuW"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"HongshuW"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"HongshuW"},"content":"    /** Content of the command */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"HongshuW"},"content":"    protected String content;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"HongshuW"},"content":"    /** Message generated */","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"HongshuW"},"content":"    protected String message;","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"HongshuW"},"content":"    /** Task involved in the command */","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"HongshuW"},"content":"    protected Task task;","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"HongshuW"},"content":"     * Constructor of the class `Command`.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"HongshuW"},"content":"     * @param content The content of the command received.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"HongshuW"},"content":"    public Command(String content) {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"HongshuW"},"content":"        this.content \u003d content;","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"HongshuW"},"content":"     * Updates the message to be printed.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"HongshuW"},"content":"     * @param tasks A list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"HongshuW"},"content":"     * @param storage An instance of Storage that can read from and write to the hard disk.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"HongshuW"},"content":"     * @throws WorkDoneException If error occurs while executing the command.","lastModifiedDate":"2021-09-13"},{"lineNumber":34,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"HongshuW"},"content":"    public void execute(TaskList tasks, Storage storage) throws WorkDoneException {","lastModifiedDate":"2021-09-13"},{"lineNumber":36,"author":{"gitId":"HongshuW"},"content":"        this.message \u003d this.content;","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"HongshuW"},"content":"     * Returns whether the program is still running.","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"HongshuW"},"content":"     * @return Whether the program is running.","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"HongshuW"},"content":"    public boolean isRunning() {","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"HongshuW"},"content":"        return true;","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":48,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":49,"author":{"gitId":"HongshuW"},"content":"     * Returns the command\u0027s processed result as a string.","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":51,"author":{"gitId":"HongshuW"},"content":"     * @return String representation of the result of processing a command.","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":53,"author":{"gitId":"HongshuW"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":54,"author":{"gitId":"HongshuW"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":55,"author":{"gitId":"HongshuW"},"content":"        return this.message;","lastModifiedDate":"2021-09-13"},{"lineNumber":56,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":57,"author":{"gitId":"HongshuW"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"HongshuW":57}},{"path":"src/main/java/workdone/command/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongshuW"},"content":"package workdone.command;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"HongshuW"},"content":"import workdone.data.Storage;","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"HongshuW"},"content":"import workdone.data.TaskList;","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"HongshuW"},"content":"import workdone.exception.InvalidTaskNoException;","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"HongshuW"},"content":"import workdone.ui.Parser;","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"HongshuW"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"HongshuW"},"content":" * Represents a command that deletes a task from the task list. A subclass of the Command class.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"HongshuW"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"HongshuW"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"HongshuW"},"content":"    /** Index of the task to be deleted in the task list */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"HongshuW"},"content":"    private final int taskIndex;","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"HongshuW"},"content":"     * Constructor of the class `DeleteTaskCommand`.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"HongshuW"},"content":"     * @param taskIndex Index of a task.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"HongshuW"},"content":"    public DeleteTaskCommand(int taskIndex) {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"HongshuW"},"content":"        super(\"delete\");","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"HongshuW"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"HongshuW"},"content":"     * Executes the command. Deletes a task from the list, stores changes and updates the message to be","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"HongshuW"},"content":"     * printed.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"HongshuW"},"content":"     * @param tasks A list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"HongshuW"},"content":"     * @param storage An instance of Storage that can read from and write to the hard disk.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"HongshuW"},"content":"     * @throws InvalidTaskNoException If task number is invalid.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"HongshuW"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"HongshuW"},"content":"    public void execute(TaskList tasks, Storage storage) throws InvalidTaskNoException {","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"HongshuW"},"content":"        // Get task from index","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"HongshuW"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"HongshuW"},"content":"            this.task \u003d tasks.get(this.taskIndex);","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"HongshuW"},"content":"        } catch (NumberFormatException | NullPointerException | IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"HongshuW"},"content":"            Parser.popInvalidCommand();","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"HongshuW"},"content":"            throw new InvalidTaskNoException();","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"HongshuW"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"HongshuW"},"content":"        // Remove the task","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"HongshuW"},"content":"        assert this.task !\u003d null : \"task shouldn\u0027t be null\";","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"HongshuW"},"content":"        storage.removeFromFile(tasks.indexOf(this.task));","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"HongshuW"},"content":"        tasks.removeFromList(this.task);","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"HongshuW"},"content":"        // Update message","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"HongshuW"},"content":"        this.message \u003d String.format(","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"HongshuW"},"content":"                \"Noted. I\u0027ve removed this task:\\n  %s\\nNow you have %d tasks in the list.\\n\",","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"HongshuW"},"content":"                this.task, tasks.getNumOfTasks());","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"HongshuW"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"HongshuW":53}},{"path":"src/main/java/workdone/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongshuW"},"content":"package workdone.command;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"HongshuW"},"content":"import workdone.data.Storage;","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"HongshuW"},"content":"import workdone.data.TaskList;","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"HongshuW"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"HongshuW"},"content":" * Represents a command that stops the WorkDone program.","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"HongshuW"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"HongshuW"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"HongshuW"},"content":"    /** Message to be printed when the program exits */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"HongshuW"},"content":"    private static final String EXITING_MESSAGE \u003d \"Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"HongshuW"},"content":"     * Constructor of the class `ExitCommand`.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"HongshuW"},"content":"    public ExitCommand() {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"HongshuW"},"content":"        super(\"bye\");","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"HongshuW"},"content":"     * Updates the message to be printed. Returns false because the program stops.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"HongshuW"},"content":"     * @param tasks A list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"HongshuW"},"content":"     * @param storage An instance of Storage that can read from and write to the hard disk.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"HongshuW"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"HongshuW"},"content":"    public void execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"HongshuW"},"content":"        this.message \u003d ExitCommand.EXITING_MESSAGE;","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"HongshuW"},"content":"     * Returns false because the WorkDone program stops.","lastModifiedDate":"2021-09-13"},{"lineNumber":33,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"HongshuW"},"content":"     * @return Whether the program is running.","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"HongshuW"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"HongshuW"},"content":"    public boolean isRunning() {","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"HongshuW"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"HongshuW"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"HongshuW":40}},{"path":"src/main/java/workdone/command/FindTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongshuW"},"content":"package workdone.command;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"HongshuW"},"content":"import workdone.data.Storage;","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"HongshuW"},"content":"import workdone.data.TaskList;","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"HongshuW"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"HongshuW"},"content":" * Represents a command that finds a task with keyword. A subclass of Command.","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"HongshuW"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"HongshuW"},"content":"public class FindTaskCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"HongshuW"},"content":"    /** The keyword to be found */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"HongshuW"},"content":"    private final String keyword;","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"HongshuW"},"content":"     * Constructor of the class `FindTaskCommand`.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"HongshuW"},"content":"     * @param keyword The keyword to be found.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"HongshuW"},"content":"    public FindTaskCommand(String keyword) {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"HongshuW"},"content":"        super(\"find\");","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"HongshuW"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"HongshuW"},"content":"        this.message \u003d \"Here are the tasks I found:\\n\";","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"HongshuW"},"content":"     * Executes the command. Finds a list of tasks that contain the keyword and updates the message.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"HongshuW"},"content":"     * @param tasks A list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"HongshuW"},"content":"     * @param storage An instance of Storage that can read from and write to the hard disk.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"HongshuW"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"HongshuW"},"content":"    public void execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"HongshuW"},"content":"        this.message +\u003d tasks.getFilteredListAsString(task -\u003e task.containsKeyword(this.keyword));","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"HongshuW"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"HongshuW":34}},{"path":"src/main/java/workdone/command/GetListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongshuW"},"content":"package workdone.command;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"HongshuW"},"content":"import workdone.data.Storage;","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"HongshuW"},"content":"import workdone.data.TaskList;","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"HongshuW"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"HongshuW"},"content":" * Represents a command that retrieves the task list. A subclass of the Command class.","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"HongshuW"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"HongshuW"},"content":"public class GetListCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"HongshuW"},"content":"     * Constructor of the class `GetListCommand`.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"HongshuW"},"content":"    public GetListCommand() {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"HongshuW"},"content":"        super(\"list\");","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"HongshuW"},"content":"        this.message \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"HongshuW"},"content":"     * Executes the command. Updates the message to be printed.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"HongshuW"},"content":"     * @param tasks A list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"HongshuW"},"content":"     * @param storage An instance of Storage that can read from and write to the hard disk.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"HongshuW"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"HongshuW"},"content":"    public void execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"HongshuW"},"content":"        this.message +\u003d tasks.getFilteredListAsString(x -\u003e true);","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"HongshuW"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"HongshuW":28}},{"path":"src/main/java/workdone/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongshuW"},"content":"package workdone.command;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":3,"author":{"gitId":"HongshuW"},"content":"import workdone.data.Storage;","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"HongshuW"},"content":"import workdone.data.TaskList;","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"HongshuW"},"content":"/**","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"HongshuW"},"content":" * Represents a command that asks for help. A subclass of the Command class.","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"HongshuW"},"content":" */","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"HongshuW"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"HongshuW"},"content":"     * Constructor of the class `HelpCommand`.","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":13,"author":{"gitId":"HongshuW"},"content":"    public HelpCommand() {","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"HongshuW"},"content":"        super(\"help\");","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"HongshuW"},"content":"     * Executes the command. Updates help message.","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"HongshuW"},"content":"     * @param tasks A list of tasks.","lastModifiedDate":"2021-09-13"},{"lineNumber":21,"author":{"gitId":"HongshuW"},"content":"     * @param storage An instance of Storage that can read from and write to the hard disk.","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"HongshuW"},"content":"    @Override","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"HongshuW"},"content":"    public void execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"HongshuW"},"content":"        // Update message","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"HongshuW"},"content":"        this.message \u003d \"All Commands:\\n\"","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"HongshuW"},"content":"                + \"Add a task:\\n\"","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"HongshuW"},"content":"                + \"todo {task description} - add a task to be completed\\n\"","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"HongshuW"},"content":"                + \"deadline {task description} /by yyyy-MM-dd HH:mm - add a task with a deadline\\n\"","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"HongshuW"},"content":"                + \"event {event description} /at yyyy-MM-dd HH:mm to yyyy-MM-dd HH:mm - add an event\\n\"","lastModifiedDate":"2021-09-13"},{"lineNumber":31,"author":{"gitId":"HongshuW"},"content":"                + \"Finish a task:\\n\"","lastModifiedDate":"2021-09-13"},{"lineNumber":32,"author":{"gitId":"HongshuW"},"content":"                + \"done {task no.} - mark a task as done\\n\"","lastModifiedDate":"2021-09-13"},{"lineNumber":33,"author":{"gitId":"HongshuW"},"content":"                + \"undone {task no.} - mark a task as undone\\n\"","lastModifiedDate":"2021-09-13"},{"lineNumber":34,"author":{"gitId":"HongshuW"},"content":"                + \"Delete tasks:\\n\"","lastModifiedDate":"2021-09-13"},{"lineNumber":35,"author":{"gitId":"HongshuW"},"content":"                + \"delete {task no.} - delete a task by specifying its task number\\n\"","lastModifiedDate":"2021-09-13"},{"lineNumber":36,"author":{"gitId":"HongshuW"},"content":"                + \"clear - delete all tasks from the task list\\n\"","lastModifiedDate":"2021-09-13"},{"lineNumber":37,"author":{"gitId":"HongshuW"},"content":"                + \"View all tasks:\\n\"","lastModifiedDate":"2021-09-13"},{"lineNumber":38,"author":{"gitId":"HongshuW"},"content":"                + \"list - list all tasks added\\n\"","lastModifiedDate":"2021-09-13"},{"lineNumber":39,"author":{"gitId":"HongshuW"},"content":"                + \"Find a task:\\n\"","lastModifiedDate":"2021-09-13"},{"lineNumber":40,"author":{"gitId":"HongshuW"},"content":"                + \"find {keyword} - find tasks containing `keyword`\\n\"","lastModifiedDate":"2021-09-13"},{"lineNumber":41,"author":{"gitId":"HongshuW"},"content":"                + \"Undo:\\n\"","lastModifiedDate":"2021-09-13"},{"lineNumber":42,"author":{"gitId":"HongshuW"},"content":"                + \"undo - undo the last command\\n\"","lastModifiedDate":"2021-09-13"},{"lineNumber":43,"author":{"gitId":"HongshuW"},"content":"                + \"Exit:\\n\"","lastModifiedDate":"2021-09-13"},{"lineNumber":44,"author":{"gitId":"HongshuW"},"content":"                + \"bye - exit the program\\n\";","lastModifiedDate":"2021-09-13"},{"lineNumber":45,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":46,"author":{"gitId":"HongshuW"},"content":"}","lastModifiedDate":"2021-09-13"}],"authorContributionMap":{"HongshuW":46}},{"path":"src/main/java/workdone/command/TaskDoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongshuW"},"content":"package workdone.command;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"HongshuW"},"content":"import workdone.data.Storage;","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"HongshuW"},"content":"import workdone.data.TaskList;","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"HongshuW"},"content":"import workdone.exception.InvalidTaskNoException;","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"HongshuW"},"content":"import workdone.ui.Parser;","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"HongshuW"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"HongshuW"},"content":" * Represents a command that marks a task as done. A subclass of the Command class.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"HongshuW"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"HongshuW"},"content":"public class TaskDoneCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"HongshuW"},"content":"    /** Index of the task to be deleted in the task list */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"HongshuW"},"content":"    private final int taskIndex;","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"HongshuW"},"content":"     * Constructor of the class `TaskDoneCommand`.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"HongshuW"},"content":"     * @param taskIndex Index of a task.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"HongshuW"},"content":"    public TaskDoneCommand(int taskIndex) {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"HongshuW"},"content":"        super(\"done\");","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"HongshuW"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"HongshuW"},"content":"        this.message \u003d \"Nice! I\u0027ve marked this task as done:\\n\";","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"HongshuW"},"content":"     * Returns the index of the task.","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"HongshuW"},"content":"     * @return Index of the task.","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"HongshuW"},"content":"    public int getTaskIndex() {","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"HongshuW"},"content":"        return taskIndex;","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"HongshuW"},"content":"     * Executes the command. Marks a task as done, stores changes and updates the message to be printed.","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"HongshuW"},"content":"     * @param tasks A list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"HongshuW"},"content":"     * @param storage An instance of Storage that can read from and write to the hard disk.","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"HongshuW"},"content":"     * @throws InvalidTaskNoException If task number is invalid.","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"HongshuW"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"HongshuW"},"content":"    public void execute(TaskList tasks, Storage storage) throws InvalidTaskNoException {","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"HongshuW"},"content":"        // Get task from index","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"HongshuW"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"HongshuW"},"content":"            this.task \u003d tasks.get(this.taskIndex);","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"HongshuW"},"content":"        } catch (NumberFormatException | NullPointerException | IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"HongshuW"},"content":"            Parser.popInvalidCommand();","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"HongshuW"},"content":"            throw new InvalidTaskNoException();","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"HongshuW"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"HongshuW"},"content":"        // Mark task as done","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"HongshuW"},"content":"        assert this.task !\u003d null : \"task shouldn\u0027t be null\";","lastModifiedDate":"2021-09-08"},{"lineNumber":54,"author":{"gitId":"HongshuW"},"content":"        this.task.setDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"HongshuW"},"content":"        storage.rewriteFile();","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"HongshuW"},"content":"        // Update message","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"HongshuW"},"content":"        this.message +\u003d String.format(\"  %s\\n\", this.task.toString());","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"HongshuW"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"HongshuW":60}},{"path":"src/main/java/workdone/command/TaskUndoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongshuW"},"content":"package workdone.command;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"HongshuW"},"content":"import workdone.data.Storage;","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"HongshuW"},"content":"import workdone.data.TaskList;","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"HongshuW"},"content":"import workdone.exception.InvalidTaskNoException;","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"HongshuW"},"content":"import workdone.ui.Parser;","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"HongshuW"},"content":"/**","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"HongshuW"},"content":" * Represents a command that marks a task as undone. A subclass of the Command class.","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"HongshuW"},"content":" */","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"HongshuW"},"content":"public class TaskUndoneCommand extends Command {","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"HongshuW"},"content":"    /** Index of the task to be deleted in the task list */","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"HongshuW"},"content":"    private final int taskIndex;","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"HongshuW"},"content":"     * Constructor of the class `TaskUndoneCommand`.","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"HongshuW"},"content":"     * @param taskIndex Index of a task.","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"HongshuW"},"content":"    public TaskUndoneCommand(int taskIndex) {","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"HongshuW"},"content":"        super(\"undone\");","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"HongshuW"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"HongshuW"},"content":"        this.message \u003d \"Got it! I\u0027ve marked this task as undone:\\n\";","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"HongshuW"},"content":"     * Returns the index of the task.","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"HongshuW"},"content":"     * @return Index of the task.","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"HongshuW"},"content":"    public int getTaskIndex() {","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"HongshuW"},"content":"        return taskIndex;","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"HongshuW"},"content":"     * Executes the command. Marks a task as undone, stores changes and updates the message to be printed.","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"HongshuW"},"content":"     * @param tasks A list of tasks.","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"HongshuW"},"content":"     * @param storage An instance of Storage that can read from and write to the hard disk.","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"HongshuW"},"content":"     * @throws InvalidTaskNoException If task number is invalid.","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"HongshuW"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"HongshuW"},"content":"    public void execute(TaskList tasks, Storage storage) throws InvalidTaskNoException {","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"HongshuW"},"content":"        // Get task from index","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"HongshuW"},"content":"        try {","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"HongshuW"},"content":"            this.task \u003d tasks.get(this.taskIndex);","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"HongshuW"},"content":"        } catch (NumberFormatException | NullPointerException | IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"HongshuW"},"content":"            Parser.popInvalidCommand();","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"HongshuW"},"content":"            throw new InvalidTaskNoException();","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"HongshuW"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":52,"author":{"gitId":"HongshuW"},"content":"        // Mark task as undone","lastModifiedDate":"2021-09-08"},{"lineNumber":53,"author":{"gitId":"HongshuW"},"content":"        assert this.task !\u003d null : \"task shouldn\u0027t be null\";","lastModifiedDate":"2021-09-08"},{"lineNumber":54,"author":{"gitId":"HongshuW"},"content":"        this.task.setUndone();","lastModifiedDate":"2021-09-08"},{"lineNumber":55,"author":{"gitId":"HongshuW"},"content":"        storage.rewriteFile();","lastModifiedDate":"2021-09-08"},{"lineNumber":56,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":57,"author":{"gitId":"HongshuW"},"content":"        // Update message","lastModifiedDate":"2021-09-08"},{"lineNumber":58,"author":{"gitId":"HongshuW"},"content":"        this.message +\u003d String.format(\"  %s\\n\", this.task.toString());","lastModifiedDate":"2021-09-08"},{"lineNumber":59,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":60,"author":{"gitId":"HongshuW"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"HongshuW":60}},{"path":"src/main/java/workdone/command/UndoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongshuW"},"content":"package workdone.command;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"HongshuW"},"content":"import workdone.data.Storage;","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"HongshuW"},"content":"import workdone.data.TaskList;","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"HongshuW"},"content":"import workdone.exception.InvalidTaskNoException;","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"HongshuW"},"content":"import workdone.exception.UnableToUndoException;","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"HongshuW"},"content":"import workdone.exception.WorkDoneException;","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"HongshuW"},"content":"/**","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"HongshuW"},"content":" * Represents a command that undoes the previous command if possible. A subclass of the Command class.","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"HongshuW"},"content":" */","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"HongshuW"},"content":"public class UndoCommand extends Command {","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"HongshuW"},"content":"    /** Last command in the stack */","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"HongshuW"},"content":"    private Command lastCommand;","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"HongshuW"},"content":"     * Constructor of the class `UndoCommand`.","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"HongshuW"},"content":"     * @param lastCommand Last command in the stack.","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":21,"author":{"gitId":"HongshuW"},"content":"    public UndoCommand(Command lastCommand) {","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"HongshuW"},"content":"        super(\"undo\");","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"HongshuW"},"content":"        this.lastCommand \u003d lastCommand;","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"HongshuW"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"HongshuW"},"content":"    public void execute(TaskList tasks, Storage storage) throws WorkDoneException {","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"HongshuW"},"content":"        if (this.lastCommand instanceof AddTaskCommand) {","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"HongshuW"},"content":"            // delete the last task","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"HongshuW"},"content":"            int index \u003d tasks.getNumOfTasks() - 1;","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"HongshuW"},"content":"            DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(index);","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"HongshuW"},"content":"            try {","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"HongshuW"},"content":"                deleteTaskCommand.execute(tasks, storage);","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"HongshuW"},"content":"                this.message \u003d deleteTaskCommand.message;","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"HongshuW"},"content":"            } catch (InvalidTaskNoException e) {","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"HongshuW"},"content":"                throw e;","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"HongshuW"},"content":"            }","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"HongshuW"},"content":"        } else if (this.lastCommand instanceof DeleteTaskCommand) {","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"HongshuW"},"content":"            // add the task back","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"HongshuW"},"content":"            AddTaskCommand addTaskCommand \u003d new AddTaskCommand(this.lastCommand.task);","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"HongshuW"},"content":"            addTaskCommand.execute(tasks, storage);","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"HongshuW"},"content":"            this.message \u003d addTaskCommand.message;","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"HongshuW"},"content":"        } else if (this.lastCommand instanceof TaskDoneCommand) {","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"HongshuW"},"content":"            // undone the task","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"HongshuW"},"content":"            int index \u003d ((TaskDoneCommand) this.lastCommand).getTaskIndex();","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"HongshuW"},"content":"            TaskUndoneCommand taskUndoneCommand \u003d new TaskUndoneCommand(index);","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"HongshuW"},"content":"            taskUndoneCommand.execute(tasks, storage);","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"HongshuW"},"content":"            this.message \u003d taskUndoneCommand.message;","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"HongshuW"},"content":"        } else if (this.lastCommand instanceof TaskUndoneCommand) {","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"HongshuW"},"content":"            // mark the task as done","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"HongshuW"},"content":"            int index \u003d ((TaskUndoneCommand) this.lastCommand).getTaskIndex();","lastModifiedDate":"2021-09-08"},{"lineNumber":52,"author":{"gitId":"HongshuW"},"content":"            TaskDoneCommand taskDoneCommand \u003d new TaskDoneCommand(index);","lastModifiedDate":"2021-09-08"},{"lineNumber":53,"author":{"gitId":"HongshuW"},"content":"            taskDoneCommand.execute(tasks, storage);","lastModifiedDate":"2021-09-08"},{"lineNumber":54,"author":{"gitId":"HongshuW"},"content":"            this.message \u003d taskDoneCommand.message;","lastModifiedDate":"2021-09-08"},{"lineNumber":55,"author":{"gitId":"HongshuW"},"content":"        } else {","lastModifiedDate":"2021-09-08"},{"lineNumber":56,"author":{"gitId":"HongshuW"},"content":"            // throw an error","lastModifiedDate":"2021-09-08"},{"lineNumber":57,"author":{"gitId":"HongshuW"},"content":"            throw new UnableToUndoException(this.lastCommand);","lastModifiedDate":"2021-09-08"},{"lineNumber":58,"author":{"gitId":"HongshuW"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":59,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":60,"author":{"gitId":"HongshuW"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"HongshuW":60}},{"path":"src/main/java/workdone/data/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongshuW"},"content":"package workdone.data;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"HongshuW"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"HongshuW"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"HongshuW"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"HongshuW"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"HongshuW"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"HongshuW"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"HongshuW"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"HongshuW"},"content":"import java.util.List;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"HongshuW"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"HongshuW"},"content":"import workdone.task.Deadline;","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"HongshuW"},"content":"import workdone.task.Event;","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"HongshuW"},"content":"import workdone.task.Task;","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"HongshuW"},"content":"import workdone.task.ToDo;","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"HongshuW"},"content":"import workdone.ui.Ui;","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"HongshuW"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"HongshuW"},"content":" * Represents storage that can store data into a file and read data from a file.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"HongshuW"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"HongshuW"},"content":"public class Storage {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"HongshuW"},"content":"    /** Path of the current folder as a string */","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"HongshuW"},"content":"    private static final String DIRECTORY_PATH \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"HongshuW"},"content":"    /** Path of file containing data saved */","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"HongshuW"},"content":"    private static File data;","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"HongshuW"},"content":"    /** A temporary list of tasks */","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"HongshuW"},"content":"    private final TaskList tasks;","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"HongshuW"},"content":"     * Constructor of the `Storage` class.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"HongshuW"},"content":"     * @param filePath Path to the file to be loaded.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"HongshuW"},"content":"     * @param tasks A temporary list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"HongshuW"},"content":"    public Storage(Path filePath, TaskList tasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"HongshuW"},"content":"        Storage.data \u003d filePath.toFile();","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"HongshuW"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"HongshuW"},"content":"        this.readFile();","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"HongshuW"},"content":"     * Reads data in the file. If the directory or file doesn\u0027t exist, create a new file in the correct","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"HongshuW"},"content":"     * location.","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"HongshuW"},"content":"    private void readFile() {","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"HongshuW"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"HongshuW"},"content":"            Scanner fileScanner \u003d new Scanner(Storage.data);","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"HongshuW"},"content":"            while (fileScanner.hasNextLine()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"HongshuW"},"content":"                String task \u003d fileScanner.nextLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"HongshuW"},"content":"                this.readData(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"HongshuW"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"HongshuW"},"content":"            fileScanner.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"HongshuW"},"content":"        } catch (FileNotFoundException fileNotFoundException) {","lastModifiedDate":"2021-09-08"},{"lineNumber":55,"author":{"gitId":"HongshuW"},"content":"            // If file doesn\u0027t exist, create it.","lastModifiedDate":"2021-09-08"},{"lineNumber":56,"author":{"gitId":"HongshuW"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"HongshuW"},"content":"                Storage.data.createNewFile();","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"HongshuW"},"content":"            } catch (IOException ioException) {","lastModifiedDate":"2021-09-08"},{"lineNumber":59,"author":{"gitId":"HongshuW"},"content":"                // If directory doesn\u0027t exist, create it.","lastModifiedDate":"2021-09-08"},{"lineNumber":60,"author":{"gitId":"HongshuW"},"content":"                File directory \u003d Paths.get(Storage.DIRECTORY_PATH, \"data\").toFile();","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"HongshuW"},"content":"                directory.mkdirs();","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"HongshuW"},"content":"                // Run this method again to create a file.","lastModifiedDate":"2021-09-08"},{"lineNumber":63,"author":{"gitId":"HongshuW"},"content":"                this.readFile();","lastModifiedDate":"2021-09-08"},{"lineNumber":64,"author":{"gitId":"HongshuW"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"HongshuW"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"HongshuW"},"content":"     * Reads a line of data, creates a task and adds it to the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"HongshuW"},"content":"     * @param line A line of data.","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"HongshuW"},"content":"    private void readData(String line) {","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"HongshuW"},"content":"        String[] splitted \u003d line.split(\" / \");","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"HongshuW"},"content":"        // Determine type of the task and create corresponding task instance","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"HongshuW"},"content":"        Task task;","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"HongshuW"},"content":"        if (splitted[0].equals(\"T\")) {","lastModifiedDate":"2021-09-08"},{"lineNumber":79,"author":{"gitId":"HongshuW"},"content":"            // a todo task","lastModifiedDate":"2021-09-08"},{"lineNumber":80,"author":{"gitId":"HongshuW"},"content":"            task \u003d new ToDo(splitted[2]);","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"HongshuW"},"content":"        } else if (splitted[0].equals(\"D\")) {","lastModifiedDate":"2021-09-08"},{"lineNumber":82,"author":{"gitId":"HongshuW"},"content":"            // a task with deadline","lastModifiedDate":"2021-09-08"},{"lineNumber":83,"author":{"gitId":"HongshuW"},"content":"            task \u003d new Deadline(splitted[2], splitted[3]);","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"HongshuW"},"content":"        } else if (splitted[0].equals(\"E\")) {","lastModifiedDate":"2021-09-08"},{"lineNumber":85,"author":{"gitId":"HongshuW"},"content":"            // an event","lastModifiedDate":"2021-09-08"},{"lineNumber":86,"author":{"gitId":"HongshuW"},"content":"            task \u003d new Event(splitted[2], splitted[3]);","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"HongshuW"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"HongshuW"},"content":"            task \u003d new Task(splitted[2]);","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"HongshuW"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"HongshuW"},"content":"        assert task !\u003d null : \"task shouldn\u0027t be null\";","lastModifiedDate":"2021-09-08"},{"lineNumber":92,"author":{"gitId":"HongshuW"},"content":"        // Check whether task is done","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"HongshuW"},"content":"        if (splitted[1].equals(\"1\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"HongshuW"},"content":"            task.setDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"HongshuW"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"HongshuW"},"content":"        // Add to task list","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"HongshuW"},"content":"        tasks.addTask(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"HongshuW"},"content":"     * Adds a task to the file.","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"HongshuW"},"content":"     * @param task The task to be added.","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"HongshuW"},"content":"    public void addToFile(Task task) {","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"HongshuW"},"content":"        assert task !\u003d null : \"task shouldn\u0027t be null\";","lastModifiedDate":"2021-09-08"},{"lineNumber":108,"author":{"gitId":"HongshuW"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"HongshuW"},"content":"            FileWriter fileWriter \u003d new FileWriter(Storage.data, true);","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"HongshuW"},"content":"            fileWriter.append(task.toFileFormatString()); // write to file.","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"HongshuW"},"content":"            fileWriter.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"HongshuW"},"content":"        } catch (IOException ioException) {","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"HongshuW"},"content":"            this.readFile();","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"HongshuW"},"content":"            Ui.showFileNotFoundError();","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"HongshuW"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"HongshuW"},"content":"     * Removes a task from the file.","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":121,"author":{"gitId":"HongshuW"},"content":"     * @param index Index of the task in the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"HongshuW"},"content":"    public void removeFromFile(int index) {","lastModifiedDate":"2021-08-25"},{"lineNumber":124,"author":{"gitId":"HongshuW"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":125,"author":{"gitId":"HongshuW"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(Storage.data.toPath());","lastModifiedDate":"2021-08-25"},{"lineNumber":126,"author":{"gitId":"HongshuW"},"content":"            FileWriter fileWriter \u003d new FileWriter(Storage.data);","lastModifiedDate":"2021-08-25"},{"lineNumber":127,"author":{"gitId":"HongshuW"},"content":"            for (int i \u003d 0; i \u003c this.tasks.getNumOfTasks(); i++) { // remove this task from file.","lastModifiedDate":"2021-08-25"},{"lineNumber":128,"author":{"gitId":"HongshuW"},"content":"                if (i !\u003d index) {","lastModifiedDate":"2021-08-25"},{"lineNumber":129,"author":{"gitId":"HongshuW"},"content":"                    fileWriter.append(lines.get(i) + \"\\n\");","lastModifiedDate":"2021-08-25"},{"lineNumber":130,"author":{"gitId":"HongshuW"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":131,"author":{"gitId":"HongshuW"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":132,"author":{"gitId":"HongshuW"},"content":"            fileWriter.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":133,"author":{"gitId":"HongshuW"},"content":"        } catch (IOException ioException) {","lastModifiedDate":"2021-08-25"},{"lineNumber":134,"author":{"gitId":"HongshuW"},"content":"            this.readFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":135,"author":{"gitId":"HongshuW"},"content":"            Ui.showFileNotFoundError();","lastModifiedDate":"2021-08-25"},{"lineNumber":136,"author":{"gitId":"HongshuW"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":137,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":138,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":139,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":140,"author":{"gitId":"HongshuW"},"content":"     * Rewrites data from taskList to the file.","lastModifiedDate":"2021-08-25"},{"lineNumber":141,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":142,"author":{"gitId":"HongshuW"},"content":"    public void rewriteFile() {","lastModifiedDate":"2021-08-25"},{"lineNumber":143,"author":{"gitId":"HongshuW"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":144,"author":{"gitId":"HongshuW"},"content":"            FileWriter fileWriter \u003d new FileWriter(Storage.data);","lastModifiedDate":"2021-08-25"},{"lineNumber":145,"author":{"gitId":"HongshuW"},"content":"            for (int i \u003d 0; i \u003c this.tasks.getNumOfTasks(); i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":146,"author":{"gitId":"HongshuW"},"content":"                fileWriter.append(this.tasks.getFileFormattedTask(i));","lastModifiedDate":"2021-08-25"},{"lineNumber":147,"author":{"gitId":"HongshuW"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":148,"author":{"gitId":"HongshuW"},"content":"            fileWriter.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":149,"author":{"gitId":"HongshuW"},"content":"        } catch (IOException ioException) {","lastModifiedDate":"2021-08-25"},{"lineNumber":150,"author":{"gitId":"HongshuW"},"content":"            this.readFile();","lastModifiedDate":"2021-08-25"},{"lineNumber":151,"author":{"gitId":"HongshuW"},"content":"            Ui.showFileNotFoundError();","lastModifiedDate":"2021-08-25"},{"lineNumber":152,"author":{"gitId":"HongshuW"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":153,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":154,"author":{"gitId":"HongshuW"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"HongshuW":154}},{"path":"src/main/java/workdone/data/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongshuW"},"content":"package workdone.data;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"HongshuW"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"HongshuW"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"HongshuW"},"content":"import workdone.task.Task;","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"HongshuW"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"HongshuW"},"content":" * Represents a temporary list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"HongshuW"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"HongshuW"},"content":"public class TaskList {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"HongshuW"},"content":"    /** List of tasks */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"HongshuW"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"HongshuW"},"content":"     * Constructor of the class `TaskList`.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"HongshuW"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"HongshuW"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"HongshuW"},"content":"     * Adds task to the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"HongshuW"},"content":"     * @param task The task to be added.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"HongshuW"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"HongshuW"},"content":"        assert task !\u003d null : \"task shouldn\u0027t be null\";","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"HongshuW"},"content":"        this.tasks.add(task);","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"HongshuW"},"content":"     * Removes a task from the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"HongshuW"},"content":"     * @param task The task to be removed.","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"HongshuW"},"content":"    public void removeFromList(Task task) {","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"HongshuW"},"content":"        assert task !\u003d null : \"task shouldn\u0027t be null\";","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"HongshuW"},"content":"        this.tasks.remove(task);","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"HongshuW"},"content":"     * Returns a task as a string to be stored in the file.","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"HongshuW"},"content":"     * @param index Index of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"HongshuW"},"content":"     * @return String representation of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"HongshuW"},"content":"    public String getFileFormattedTask(int index) {","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"HongshuW"},"content":"        return this.tasks.get(index).toFileFormatString();","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"HongshuW"},"content":"     * Returns the number of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"HongshuW"},"content":"     * @return Number of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"HongshuW"},"content":"    public int getNumOfTasks() {","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"HongshuW"},"content":"        return this.tasks.size();","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"HongshuW"},"content":"     * Returns the task at the given index in the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"HongshuW"},"content":"     * @param index Index of a task.","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"HongshuW"},"content":"     * @return Task at the given index.","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"HongshuW"},"content":"    public Task get(int index) {","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"HongshuW"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"HongshuW"},"content":"     * Returns the index of a task in the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"HongshuW"},"content":"     * @param task Task in the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"HongshuW"},"content":"     * @return Index of the task given.","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"HongshuW"},"content":"    public int indexOf(Task task) {","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"HongshuW"},"content":"        return this.tasks.indexOf(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"HongshuW"},"content":"     * Filters the task list using the given predicate, returns the result as a string.","lastModifiedDate":"2021-09-08"},{"lineNumber":83,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"HongshuW"},"content":"     * @param predicate The predicate to filter the list.","lastModifiedDate":"2021-09-08"},{"lineNumber":85,"author":{"gitId":"HongshuW"},"content":"     * @return The string representation of the filtered tasks.","lastModifiedDate":"2021-09-08"},{"lineNumber":86,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"HongshuW"},"content":"    public String getFilteredListAsString(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2021-09-08"},{"lineNumber":88,"author":{"gitId":"HongshuW"},"content":"        return this.tasks.stream()","lastModifiedDate":"2021-09-08"},{"lineNumber":89,"author":{"gitId":"HongshuW"},"content":"                .filter(predicate)","lastModifiedDate":"2021-09-08"},{"lineNumber":90,"author":{"gitId":"HongshuW"},"content":"                .map(task -\u003e String.format(\"%d.%s\\n\", this.indexOf(task) + 1, task.toString()))","lastModifiedDate":"2021-09-08"},{"lineNumber":91,"author":{"gitId":"HongshuW"},"content":"                .reduce(\"\", (result, taskString) -\u003e result + taskString);","lastModifiedDate":"2021-09-08"},{"lineNumber":92,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"HongshuW"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"HongshuW":93}},{"path":"src/main/java/workdone/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongshuW"},"content":"package workdone.exception;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"HongshuW"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"HongshuW"},"content":" * Represents an exception thrown when commands received are unknown. A subclass of WorkDoneException.","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"HongshuW"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"HongshuW"},"content":"public class InvalidCommandException extends WorkDoneException {","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"HongshuW"},"content":"     * Constructor of the class `InvalidCommandException`.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"HongshuW"},"content":"    public InvalidCommandException() {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"HongshuW"},"content":"        super(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"HongshuW"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"HongshuW":13}},{"path":"src/main/java/workdone/exception/InvalidTaskNoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongshuW"},"content":"package workdone.exception;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"HongshuW"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"HongshuW"},"content":" * Represents an exception thrown when an invalid task number is given. A subclass of WorkDoneException.","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"HongshuW"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"HongshuW"},"content":"public class InvalidTaskNoException extends WorkDoneException {","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"HongshuW"},"content":"     * Constructor of the class `InvalidTaskNoException`.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"HongshuW"},"content":"    public InvalidTaskNoException() {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"HongshuW"},"content":"        super(\"☹ OOPS!!! The task number is invalid.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"HongshuW"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"HongshuW":13}},{"path":"src/main/java/workdone/exception/InvalidTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongshuW"},"content":"package workdone.exception;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"HongshuW"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"HongshuW"},"content":" * Represents an exception thrown when the given time is in an invalid format. A subclass of WorkDoneException.","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"HongshuW"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"HongshuW"},"content":"public class InvalidTimeException extends WorkDoneException {","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"HongshuW"},"content":"     * Constructor of the class `InvalidTimeException`.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"HongshuW"},"content":"     * @param timeFormat Correct time format.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"HongshuW"},"content":"    public InvalidTimeException(String timeFormat) {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"HongshuW"},"content":"        super(\"☹ OOPS!!! The time is invalid.\\nPlease input time in this form:\\n\" + timeFormat);","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"HongshuW"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"HongshuW":15}},{"path":"src/main/java/workdone/exception/MissingCommandDetailException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongshuW"},"content":"package workdone.exception;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"HongshuW"},"content":"import workdone.ui.Ui;","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"HongshuW"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"HongshuW"},"content":" * Represents an exception thrown when some details in a command are missing. A subclass of WorkDoneException.","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"HongshuW"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"HongshuW"},"content":"public class MissingCommandDetailException extends WorkDoneException {","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"HongshuW"},"content":"     * Constructor of the class `MissingCommandDetailException`.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"HongshuW"},"content":"     * @param missingDetails The missing details.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"HongshuW"},"content":"     * @param taskType Type of task involved.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"HongshuW"},"content":"     * @param timeFormat Time format of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"HongshuW"},"content":"    public MissingCommandDetailException(String missingDetails, String taskType, String timeFormat) {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"HongshuW"},"content":"        super(String.format(\"☹ OOPS!!! The %s of %s cannot be empty.\\n\", missingDetails, taskType)","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"HongshuW"},"content":"                + Ui.getCommandFormat(taskType, timeFormat));","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"HongshuW"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"HongshuW":20}},{"path":"src/main/java/workdone/exception/MultipleTimeSlotsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongshuW"},"content":"package workdone.exception;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"HongshuW"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"HongshuW"},"content":" * Represents an exception thrown when more than one time slots are given. A subclass of WorkDoneException.","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"HongshuW"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"HongshuW"},"content":"public class MultipleTimeSlotsException extends WorkDoneException {","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"HongshuW"},"content":"     * Constructor of the class `MultipleTimeSlotsException`.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"HongshuW"},"content":"     * @param taskType Type of a task.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"HongshuW"},"content":"    public MultipleTimeSlotsException(String taskType) {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"HongshuW"},"content":"        super(String.format(\"☹ OOPS!!! %s cannot occupy multiple time slots.\", taskType));","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"HongshuW"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"HongshuW":15}},{"path":"src/main/java/workdone/exception/UnableToUndoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongshuW"},"content":"package workdone.exception;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"HongshuW"},"content":"import workdone.command.Command;","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"HongshuW"},"content":"/**","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"HongshuW"},"content":" * Represents an exception thrown when there are no more commands to undo. A subclass of WorkDoneException.","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"HongshuW"},"content":" */","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"HongshuW"},"content":"public class UnableToUndoException extends WorkDoneException {","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"HongshuW"},"content":"     * Constructor of the class `UnableToUndoException`.","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"HongshuW"},"content":"    public UnableToUndoException(Command command) {","lastModifiedDate":"2021-09-13"},{"lineNumber":13,"author":{"gitId":"HongshuW"},"content":"        super(String.format(\"☹ OOPS!!! I cannot undo this command: %s\", command.toString()));","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"HongshuW"},"content":"    public UnableToUndoException() {","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"HongshuW"},"content":"        super(\"☹ OOPS!!! No more previous commands in the stack.\");","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"HongshuW"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"HongshuW":19}},{"path":"src/main/java/workdone/exception/WorkDoneException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongshuW"},"content":"package workdone.exception;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"HongshuW"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"HongshuW"},"content":" * Represents an exception thrown when commands are invalid.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"HongshuW"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"HongshuW"},"content":"public class WorkDoneException extends Exception {","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"HongshuW"},"content":"     * Constructor of the class `WorkDoneException`.","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"HongshuW"},"content":"     * @param message Error message.","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"HongshuW"},"content":"    public WorkDoneException(String message) {","lastModifiedDate":"2021-09-13"},{"lineNumber":13,"author":{"gitId":"HongshuW"},"content":"        super(message);","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"HongshuW"},"content":"     * Returns the error message of the WorkDoneException.","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"HongshuW"},"content":"     * @return String representation of the exception.","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"HongshuW"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"HongshuW"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"HongshuW"},"content":"        return super.getMessage();","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"HongshuW"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"HongshuW":25}},{"path":"src/main/java/workdone/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongshuW"},"content":"package workdone.task;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"HongshuW"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"HongshuW"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"HongshuW"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"HongshuW"},"content":" * Represents a task with a deadline. A subclass of the Task class.","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"HongshuW"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"HongshuW"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"HongshuW"},"content":"    /** Deadline of this task as an LocalDateTime instance */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"HongshuW"},"content":"    protected LocalDateTime time;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"HongshuW"},"content":"     * Constructor of the class `Deadline`.","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"HongshuW"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"HongshuW"},"content":"     * @param by Deadline of the task.","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"HongshuW"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"HongshuW"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"HongshuW"},"content":"        this.time \u003d LocalDateTime.parse(by.trim(), Task.FORMATTER);","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"HongshuW"},"content":"     * Converts a task with deadline to a string.","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"HongshuW"},"content":"     * @return The string representation of a task with deadline.","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"HongshuW"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"HongshuW"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"HongshuW"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"HongshuW"},"content":"                + this.time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy, HH:mm\")) + \")\";","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"HongshuW"},"content":"     * Converts the task to a string with the format of the file in hard disk.","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"HongshuW"},"content":"     * @return String representation of the task in the file\u0027s format.","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"HongshuW"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"HongshuW"},"content":"    public String toFileFormatString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"HongshuW"},"content":"        return String.format(\"D / %s / %s / %s\\n\", this.isDone ? \"1\" : \"0\", this.description,","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"HongshuW"},"content":"                this.time.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\")));","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"HongshuW"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"HongshuW":45}},{"path":"src/main/java/workdone/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongshuW"},"content":"package workdone.task;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"HongshuW"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"HongshuW"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"HongshuW"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"HongshuW"},"content":" * Represents an Event, which is a Task with a starting time and an ending time.","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"HongshuW"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"HongshuW"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"HongshuW"},"content":"    /** Starting time of the event */","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"HongshuW"},"content":"    protected LocalDateTime startingTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"HongshuW"},"content":"    /** Ending time of the event */","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"HongshuW"},"content":"    protected LocalDateTime endingTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"HongshuW"},"content":"     * Constructor of the class `Event`.","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"HongshuW"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"HongshuW"},"content":"     * @param at Time slot of the task.","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"HongshuW"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"HongshuW"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"HongshuW"},"content":"        String[] times \u003d at.split(\"to\", 2);","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"HongshuW"},"content":"        this.startingTime \u003d LocalDateTime.parse(times[0].trim(), Task.FORMATTER);","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"HongshuW"},"content":"        this.endingTime \u003d LocalDateTime.parse(times[1].trim(), Task.FORMATTER);","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"HongshuW"},"content":"        if (this.endingTime.isBefore(this.startingTime)) {","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"HongshuW"},"content":"            this.swapTime(); // swap them if they are in incorrect sequence","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"HongshuW"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"HongshuW"},"content":"     * Swaps the starting time with the ending time.","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"HongshuW"},"content":"    private void swapTime() {","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"HongshuW"},"content":"        LocalDateTime temporaryTime \u003d this.startingTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"HongshuW"},"content":"        this.startingTime \u003d this.endingTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"HongshuW"},"content":"        this.endingTime \u003d temporaryTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"HongshuW"},"content":"     * Converts a task with time range to string.","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"HongshuW"},"content":"     * @return The string representation of a task with time range.","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"HongshuW"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"HongshuW"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"HongshuW"},"content":"        return \"[E]\" + super.toString() + \" (at: \"","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"HongshuW"},"content":"                + this.startingTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy, HH:mm\")) + \" to \"","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"HongshuW"},"content":"                + this.endingTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy, HH:mm\")) + \")\";","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"HongshuW"},"content":"     * Converts the task to a string with the format of the file in hard disk.","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"HongshuW"},"content":"     * @return String representation of the task in the file\u0027s format.","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"HongshuW"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"HongshuW"},"content":"    public String toFileFormatString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"HongshuW"},"content":"        return String.format(\"E / %s / %s / %s to %s\\n\", this.isDone ? \"1\" : \"0\", this.description,","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"HongshuW"},"content":"                this.startingTime.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\")),","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"HongshuW"},"content":"                this.endingTime.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\")));","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"HongshuW"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"HongshuW":63}},{"path":"src/main/java/workdone/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongshuW"},"content":"package workdone.task;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"HongshuW"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"HongshuW"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"HongshuW"},"content":" * Represents a task that can be recorded by the Duke program.","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"HongshuW"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"HongshuW"},"content":"public class Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"HongshuW"},"content":"    /** Formatter of time */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"HongshuW"},"content":"    protected static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"HongshuW"},"content":"    /** Description of the task */","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"HongshuW"},"content":"    protected String description;","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"HongshuW"},"content":"    /** Whether the task is done */","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"HongshuW"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"HongshuW"},"content":"     * Constructor of the class `Task`.","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"HongshuW"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"HongshuW"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"HongshuW"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"HongshuW"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"HongshuW"},"content":"     * Returns the status of the task as a string.","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"HongshuW"},"content":"     * @return The status of the task.","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"HongshuW"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"HongshuW"},"content":"        return (this.isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"HongshuW"},"content":"     * Marks the current task as done.","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"HongshuW"},"content":"    public void setDone() {","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"HongshuW"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"HongshuW"},"content":"     * Marks the current task as undone.","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"HongshuW"},"content":"    public void setUndone() {","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"HongshuW"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"HongshuW"},"content":"     * Converts the task to a string.","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"HongshuW"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"HongshuW"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"HongshuW"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"HongshuW"},"content":"        String status \u003d this.getStatusIcon();","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"HongshuW"},"content":"        return String.format(\"[%s] %s\", status, this.description);","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"HongshuW"},"content":"     * Converts the task to a string with the format of the file in hard disk.","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"HongshuW"},"content":"     * @return String representation of the task in the file\u0027s format.","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"HongshuW"},"content":"    public String toFileFormatString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"HongshuW"},"content":"        return String.format(\"%s / %s\\n\", this.isDone ? \"1\" : \"0\", this.description);","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"HongshuW"},"content":"     * Returns whether the task description contains a keyword.","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"HongshuW"},"content":"     * @param keyword Keyword to be checked.","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"HongshuW"},"content":"     * @return whether the task description contains the keyword.","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"HongshuW"},"content":"    public boolean containsKeyword(String keyword) {","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"HongshuW"},"content":"        return this.description.contains(keyword);","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"HongshuW"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"HongshuW":78}},{"path":"src/main/java/workdone/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongshuW"},"content":"package workdone.task;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"HongshuW"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"HongshuW"},"content":" * Represents a task to be completed with unspecified time.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"HongshuW"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"HongshuW"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"HongshuW"},"content":"     * Constructor of the class `ToDo`.","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"HongshuW"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"HongshuW"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"HongshuW"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"HongshuW"},"content":"     * Converts the task to string.","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"HongshuW"},"content":"     * @return String representation of the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"HongshuW"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"HongshuW"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"HongshuW"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"HongshuW"},"content":"     * Converts the task to a string with the format of the file in hard disk.","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"HongshuW"},"content":"     * @return String representation of the task in the file\u0027s format.","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"HongshuW"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"HongshuW"},"content":"    public String toFileFormatString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"HongshuW"},"content":"        return String.format(\"T / %s / %s\\n\", this.isDone ? \"1\" : \"0\", this.description);","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"HongshuW"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"HongshuW":35}},{"path":"src/main/java/workdone/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongshuW"},"content":"package workdone.ui;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"HongshuW"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"HongshuW"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"HongshuW"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"HongshuW"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"HongshuW"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"HongshuW"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"HongshuW"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"HongshuW"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"HongshuW"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"HongshuW"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"HongshuW"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"HongshuW"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"HongshuW"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"HongshuW"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"HongshuW"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"HongshuW"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"HongshuW"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2021-09-13"},{"lineNumber":21,"author":{"gitId":"HongshuW"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"HongshuW"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"HongshuW"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"HongshuW"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"HongshuW"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"HongshuW"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"HongshuW"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"HongshuW"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"HongshuW"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"HongshuW"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"HongshuW"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"HongshuW"},"content":"     * Constructor of the class `DialogBox`.","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"HongshuW"},"content":"     * @param text Text to be displayed.","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"HongshuW"},"content":"     * @param img Avatar of WorkDone or the user.","lastModifiedDate":"2021-09-13"},{"lineNumber":39,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"HongshuW"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"HongshuW"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"HongshuW"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"HongshuW"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"HongshuW"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"HongshuW"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"HongshuW"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"HongshuW"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"HongshuW"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"HongshuW"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"HongshuW"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"HongshuW"},"content":"        Circle clip \u003d new Circle(40, 40, 40);","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"HongshuW"},"content":"        displayPicture.setClip(clip);","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"HongshuW"},"content":"    private DialogBox(String text, Image img, Color color, Background background) {","lastModifiedDate":"2021-09-13"},{"lineNumber":57,"author":{"gitId":"HongshuW"},"content":"        try {","lastModifiedDate":"2021-09-13"},{"lineNumber":58,"author":{"gitId":"HongshuW"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-13"},{"lineNumber":59,"author":{"gitId":"HongshuW"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-13"},{"lineNumber":60,"author":{"gitId":"HongshuW"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-13"},{"lineNumber":61,"author":{"gitId":"HongshuW"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-13"},{"lineNumber":62,"author":{"gitId":"HongshuW"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-13"},{"lineNumber":63,"author":{"gitId":"HongshuW"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-13"},{"lineNumber":64,"author":{"gitId":"HongshuW"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":65,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":66,"author":{"gitId":"HongshuW"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-13"},{"lineNumber":67,"author":{"gitId":"HongshuW"},"content":"        if (color !\u003d null) {","lastModifiedDate":"2021-09-13"},{"lineNumber":68,"author":{"gitId":"HongshuW"},"content":"            dialog.setTextFill(color);","lastModifiedDate":"2021-09-13"},{"lineNumber":69,"author":{"gitId":"HongshuW"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":70,"author":{"gitId":"HongshuW"},"content":"        dialog.setBackground(background);","lastModifiedDate":"2021-09-13"},{"lineNumber":71,"author":{"gitId":"HongshuW"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-13"},{"lineNumber":72,"author":{"gitId":"HongshuW"},"content":"        Circle clip \u003d new Circle(40, 40, 40);","lastModifiedDate":"2021-09-13"},{"lineNumber":73,"author":{"gitId":"HongshuW"},"content":"        displayPicture.setClip(clip);","lastModifiedDate":"2021-09-13"},{"lineNumber":74,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":75,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":76,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":77,"author":{"gitId":"HongshuW"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-01"},{"lineNumber":78,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":79,"author":{"gitId":"HongshuW"},"content":"    private void flip() {","lastModifiedDate":"2021-09-01"},{"lineNumber":80,"author":{"gitId":"HongshuW"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-01"},{"lineNumber":81,"author":{"gitId":"HongshuW"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-01"},{"lineNumber":82,"author":{"gitId":"HongshuW"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-01"},{"lineNumber":83,"author":{"gitId":"HongshuW"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-01"},{"lineNumber":84,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":85,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":86,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":87,"author":{"gitId":"HongshuW"},"content":"     * Creates and returns a user dialog.","lastModifiedDate":"2021-09-01"},{"lineNumber":88,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":89,"author":{"gitId":"HongshuW"},"content":"     * @param text Command received.","lastModifiedDate":"2021-09-01"},{"lineNumber":90,"author":{"gitId":"HongshuW"},"content":"     * @param img Avatar of the user.","lastModifiedDate":"2021-09-01"},{"lineNumber":91,"author":{"gitId":"HongshuW"},"content":"     * @return DialogBox of the user.","lastModifiedDate":"2021-09-01"},{"lineNumber":92,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":93,"author":{"gitId":"HongshuW"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":94,"author":{"gitId":"HongshuW"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-09-01"},{"lineNumber":95,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":96,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":97,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":98,"author":{"gitId":"HongshuW"},"content":"     * Creates and returns a WorkDone dialog.","lastModifiedDate":"2021-09-13"},{"lineNumber":99,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":100,"author":{"gitId":"HongshuW"},"content":"     * @param text Response generated from a command.","lastModifiedDate":"2021-09-01"},{"lineNumber":101,"author":{"gitId":"HongshuW"},"content":"     * @param img Avatar of WorkDone.","lastModifiedDate":"2021-09-13"},{"lineNumber":102,"author":{"gitId":"HongshuW"},"content":"     * @return DialogBox of WorkDone.","lastModifiedDate":"2021-09-13"},{"lineNumber":103,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":104,"author":{"gitId":"HongshuW"},"content":"    public static DialogBox getWorkDoneDialog(String text, Image img) {","lastModifiedDate":"2021-09-13"},{"lineNumber":105,"author":{"gitId":"HongshuW"},"content":"        Color backgroundColor \u003d new Color(0.125490196, 0.870588235, 0.82745098, 0.1);","lastModifiedDate":"2021-09-13"},{"lineNumber":106,"author":{"gitId":"HongshuW"},"content":"        Background background \u003d new Background(new BackgroundFill(","lastModifiedDate":"2021-09-13"},{"lineNumber":107,"author":{"gitId":"HongshuW"},"content":"                backgroundColor, new CornerRadii(10), new Insets(0, 10, 0, 10)));","lastModifiedDate":"2021-09-13"},{"lineNumber":108,"author":{"gitId":"HongshuW"},"content":"        var db \u003d new DialogBox(text, img, null, background);","lastModifiedDate":"2021-09-13"},{"lineNumber":109,"author":{"gitId":"HongshuW"},"content":"        db.flip();","lastModifiedDate":"2021-09-13"},{"lineNumber":110,"author":{"gitId":"HongshuW"},"content":"        return db;","lastModifiedDate":"2021-09-13"},{"lineNumber":111,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":112,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":113,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":114,"author":{"gitId":"HongshuW"},"content":"     * Creates and returns a dialog with error message.","lastModifiedDate":"2021-09-13"},{"lineNumber":115,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-09-13"},{"lineNumber":116,"author":{"gitId":"HongshuW"},"content":"     * @param text Error message generated from a command.","lastModifiedDate":"2021-09-13"},{"lineNumber":117,"author":{"gitId":"HongshuW"},"content":"     * @param img Avatar of WorkDone.","lastModifiedDate":"2021-09-13"},{"lineNumber":118,"author":{"gitId":"HongshuW"},"content":"     * @return DialogBox showing Error.","lastModifiedDate":"2021-09-13"},{"lineNumber":119,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":120,"author":{"gitId":"HongshuW"},"content":"    public static DialogBox getErrorDialog(String text, Image img) {","lastModifiedDate":"2021-09-13"},{"lineNumber":121,"author":{"gitId":"HongshuW"},"content":"        Color textColor \u003d new Color(0.74117647, 0.309803921, 0.423529411, 1);","lastModifiedDate":"2021-09-13"},{"lineNumber":122,"author":{"gitId":"HongshuW"},"content":"        Color backgroundColor \u003d new Color(1, 0.572549019, 0.545098039, 0.2);","lastModifiedDate":"2021-09-13"},{"lineNumber":123,"author":{"gitId":"HongshuW"},"content":"        Background background \u003d new Background(new BackgroundFill(","lastModifiedDate":"2021-09-13"},{"lineNumber":124,"author":{"gitId":"HongshuW"},"content":"                backgroundColor, new CornerRadii(10), new Insets(0, 10, 0, 10)));","lastModifiedDate":"2021-09-13"},{"lineNumber":125,"author":{"gitId":"HongshuW"},"content":"        var db \u003d new DialogBox(text, img, textColor, background);","lastModifiedDate":"2021-09-13"},{"lineNumber":126,"author":{"gitId":"HongshuW"},"content":"        db.flip();","lastModifiedDate":"2021-09-01"},{"lineNumber":127,"author":{"gitId":"HongshuW"},"content":"        return db;","lastModifiedDate":"2021-09-01"},{"lineNumber":128,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":129,"author":{"gitId":"HongshuW"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"HongshuW":129}},{"path":"src/main/java/workdone/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongshuW"},"content":"package workdone.ui;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"HongshuW"},"content":"import java.util.Timer;","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"HongshuW"},"content":"import java.util.TimerTask;","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"HongshuW"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"HongshuW"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"HongshuW"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"HongshuW"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"HongshuW"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"HongshuW"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"HongshuW"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"HongshuW"},"content":"import workdone.WorkDone;","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"HongshuW"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"HongshuW"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"HongshuW"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"HongshuW"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"HongshuW"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"HongshuW"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"HongshuW"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"HongshuW"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"HongshuW"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"HongshuW"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"HongshuW"},"content":"    private WorkDone workDone;","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"HongshuW"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"HongshuW"},"content":"    private final Image workDoneImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"HongshuW"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"HongshuW"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"HongshuW"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"HongshuW"},"content":"    public void setWorkDone(WorkDone d) {","lastModifiedDate":"2021-09-13"},{"lineNumber":37,"author":{"gitId":"HongshuW"},"content":"        workDone \u003d d;","lastModifiedDate":"2021-09-13"},{"lineNumber":38,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"HongshuW"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing WorkDone\u0027s reply and then","lastModifiedDate":"2021-09-13"},{"lineNumber":42,"author":{"gitId":"HongshuW"},"content":"     * appends them to the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-13"},{"lineNumber":43,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"HongshuW"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"HongshuW"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"HongshuW"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"HongshuW"},"content":"        String response \u003d workDone.getResponse(input);","lastModifiedDate":"2021-09-13"},{"lineNumber":48,"author":{"gitId":"HongshuW"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"HongshuW"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"HongshuW"},"content":"                response.contains(\"☹\")","lastModifiedDate":"2021-09-13"},{"lineNumber":51,"author":{"gitId":"HongshuW"},"content":"                        ? DialogBox.getErrorDialog(response, workDoneImage)","lastModifiedDate":"2021-09-13"},{"lineNumber":52,"author":{"gitId":"HongshuW"},"content":"                        : DialogBox.getWorkDoneDialog(response, workDoneImage)","lastModifiedDate":"2021-09-13"},{"lineNumber":53,"author":{"gitId":"HongshuW"},"content":"        );","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"HongshuW"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"HongshuW"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"HongshuW"},"content":"            // exit the program after 1s","lastModifiedDate":"2021-09-13"},{"lineNumber":57,"author":{"gitId":"HongshuW"},"content":"            Timer timer \u003d new Timer();","lastModifiedDate":"2021-09-13"},{"lineNumber":58,"author":{"gitId":"HongshuW"},"content":"            TimerTask task \u003d new TimerTask() {","lastModifiedDate":"2021-09-13"},{"lineNumber":59,"author":{"gitId":"HongshuW"},"content":"                @Override","lastModifiedDate":"2021-09-13"},{"lineNumber":60,"author":{"gitId":"HongshuW"},"content":"                public void run() {","lastModifiedDate":"2021-09-13"},{"lineNumber":61,"author":{"gitId":"HongshuW"},"content":"                    Platform.exit();","lastModifiedDate":"2021-09-13"},{"lineNumber":62,"author":{"gitId":"HongshuW"},"content":"                    timer.cancel();","lastModifiedDate":"2021-09-13"},{"lineNumber":63,"author":{"gitId":"HongshuW"},"content":"                }","lastModifiedDate":"2021-09-13"},{"lineNumber":64,"author":{"gitId":"HongshuW"},"content":"            };","lastModifiedDate":"2021-09-13"},{"lineNumber":65,"author":{"gitId":"HongshuW"},"content":"            timer.schedule(task, 1000);","lastModifiedDate":"2021-09-13"},{"lineNumber":66,"author":{"gitId":"HongshuW"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":69,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":70,"author":{"gitId":"HongshuW"},"content":"     * Greets the user by displaying the greeting message when the gui starts running.","lastModifiedDate":"2021-09-01"},{"lineNumber":71,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":72,"author":{"gitId":"HongshuW"},"content":"    public void greetTheUser() {","lastModifiedDate":"2021-09-01"},{"lineNumber":73,"author":{"gitId":"HongshuW"},"content":"        String greetingMessage \u003d workDone.getGreetingMessage();","lastModifiedDate":"2021-09-13"},{"lineNumber":74,"author":{"gitId":"HongshuW"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2021-09-01"},{"lineNumber":75,"author":{"gitId":"HongshuW"},"content":"                DialogBox.getWorkDoneDialog(greetingMessage, workDoneImage)","lastModifiedDate":"2021-09-13"},{"lineNumber":76,"author":{"gitId":"HongshuW"},"content":"        );","lastModifiedDate":"2021-09-01"},{"lineNumber":77,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":78,"author":{"gitId":"HongshuW"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"HongshuW":78}},{"path":"src/main/java/workdone/ui/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongshuW"},"content":"package workdone.ui;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"HongshuW"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"HongshuW"},"content":"import java.util.Stack;","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"HongshuW"},"content":"import workdone.command.AddTaskCommand;","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"HongshuW"},"content":"import workdone.command.ClearCommand;","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"HongshuW"},"content":"import workdone.command.Command;","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"HongshuW"},"content":"import workdone.command.DeleteTaskCommand;","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"HongshuW"},"content":"import workdone.command.ExitCommand;","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"HongshuW"},"content":"import workdone.command.FindTaskCommand;","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"HongshuW"},"content":"import workdone.command.GetListCommand;","lastModifiedDate":"2021-09-13"},{"lineNumber":13,"author":{"gitId":"HongshuW"},"content":"import workdone.command.HelpCommand;","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"HongshuW"},"content":"import workdone.command.TaskDoneCommand;","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"HongshuW"},"content":"import workdone.command.TaskUndoneCommand;","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"HongshuW"},"content":"import workdone.command.UndoCommand;","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"HongshuW"},"content":"import workdone.exception.InvalidCommandException;","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"HongshuW"},"content":"import workdone.exception.InvalidTaskNoException;","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"HongshuW"},"content":"import workdone.exception.InvalidTimeException;","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"HongshuW"},"content":"import workdone.exception.MissingCommandDetailException;","lastModifiedDate":"2021-09-13"},{"lineNumber":21,"author":{"gitId":"HongshuW"},"content":"import workdone.exception.MultipleTimeSlotsException;","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"HongshuW"},"content":"import workdone.exception.UnableToUndoException;","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"HongshuW"},"content":"import workdone.exception.WorkDoneException;","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"HongshuW"},"content":"import workdone.task.Deadline;","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"HongshuW"},"content":"import workdone.task.Event;","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"HongshuW"},"content":"import workdone.task.Task;","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"HongshuW"},"content":"import workdone.task.ToDo;","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"HongshuW"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"HongshuW"},"content":" * Represents a parser that deals with making sense of the user command.","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"HongshuW"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"HongshuW"},"content":"public class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"HongshuW"},"content":"    private static Stack\u003cCommand\u003e commands \u003d new Stack\u003c\u003e();","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"HongshuW"},"content":"     * Returns parsed command which involves time.","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"HongshuW"},"content":"     * @param words An array of words in the command.","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"HongshuW"},"content":"     * @param isEvent Whether the command is an `event` command.","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"HongshuW"},"content":"     * @return Parsed command.","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"HongshuW"},"content":"     * @throws WorkDoneException If command is invalid.","lastModifiedDate":"2021-09-13"},{"lineNumber":43,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"HongshuW"},"content":"    private static Command parseCommandWithTime(String[] words, boolean isEvent) throws WorkDoneException {","lastModifiedDate":"2021-09-13"},{"lineNumber":45,"author":{"gitId":"HongshuW"},"content":"        // Determine key information based on type of the task","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"HongshuW"},"content":"        String timeFormat \u003d isEvent ? \"yyyy-MM-dd HH:mm to yyyy-MM-dd HH:mm\" : \"yyyy-MM-dd HH:mm\";","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"HongshuW"},"content":"        String regex \u003d isEvent ? \"/at\" : \"/by\";","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"HongshuW"},"content":"        String taskType \u003d isEvent ? \"event\" : \"deadline\";","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"HongshuW"},"content":"        if (words.length \u003c 2) {","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"HongshuW"},"content":"            // If there is only one word in the command, the description is missing.","lastModifiedDate":"2021-09-08"},{"lineNumber":52,"author":{"gitId":"HongshuW"},"content":"            throw new MissingCommandDetailException(\"description\", taskType,","lastModifiedDate":"2021-09-08"},{"lineNumber":53,"author":{"gitId":"HongshuW"},"content":"                    String.format(\"%s %s\", regex, timeFormat));","lastModifiedDate":"2021-09-08"},{"lineNumber":54,"author":{"gitId":"HongshuW"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":55,"author":{"gitId":"HongshuW"},"content":"        String[] information \u003d words[1].split(regex);","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"HongshuW"},"content":"        if (information.length \u003c 2) {","lastModifiedDate":"2021-09-08"},{"lineNumber":57,"author":{"gitId":"HongshuW"},"content":"            // time is missing","lastModifiedDate":"2021-09-08"},{"lineNumber":58,"author":{"gitId":"HongshuW"},"content":"            throw new MissingCommandDetailException(\"time\", taskType, String.format(\"%s %s\", regex, timeFormat));","lastModifiedDate":"2021-09-08"},{"lineNumber":59,"author":{"gitId":"HongshuW"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":60,"author":{"gitId":"HongshuW"},"content":"        if (information.length \u003e 2) {","lastModifiedDate":"2021-09-08"},{"lineNumber":61,"author":{"gitId":"HongshuW"},"content":"            // more than one time slots are given","lastModifiedDate":"2021-09-08"},{"lineNumber":62,"author":{"gitId":"HongshuW"},"content":"            throw new MultipleTimeSlotsException(taskType);","lastModifiedDate":"2021-09-08"},{"lineNumber":63,"author":{"gitId":"HongshuW"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":64,"author":{"gitId":"HongshuW"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"HongshuW"},"content":"            Task task \u003d isEvent","lastModifiedDate":"2021-09-08"},{"lineNumber":66,"author":{"gitId":"HongshuW"},"content":"                    ? new Event(information[0], information[1])","lastModifiedDate":"2021-09-08"},{"lineNumber":67,"author":{"gitId":"HongshuW"},"content":"                    : new Deadline(information[0], information[1]);","lastModifiedDate":"2021-09-08"},{"lineNumber":68,"author":{"gitId":"HongshuW"},"content":"            AddTaskCommand addTaskCommand \u003d new AddTaskCommand(task);","lastModifiedDate":"2021-09-08"},{"lineNumber":69,"author":{"gitId":"HongshuW"},"content":"            Parser.commands.push(addTaskCommand);","lastModifiedDate":"2021-09-08"},{"lineNumber":70,"author":{"gitId":"HongshuW"},"content":"            return addTaskCommand;","lastModifiedDate":"2021-09-08"},{"lineNumber":71,"author":{"gitId":"HongshuW"},"content":"        } catch (DateTimeParseException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"HongshuW"},"content":"            throw new InvalidTimeException(timeFormat);","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"HongshuW"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"HongshuW"},"content":"     * Returns parsed command which involves a task number.","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"HongshuW"},"content":"     * @param words An array of words in the command.","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"HongshuW"},"content":"     * @return Parsed command.","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"HongshuW"},"content":"     * @throws InvalidTaskNoException If task number is invalid.","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"HongshuW"},"content":"    private static Command parseCommandWithTaskNo(","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"HongshuW"},"content":"            String[] words) throws InvalidTaskNoException {","lastModifiedDate":"2021-09-08"},{"lineNumber":85,"author":{"gitId":"HongshuW"},"content":"        String leadingWord \u003d words[0];","lastModifiedDate":"2021-09-08"},{"lineNumber":86,"author":{"gitId":"HongshuW"},"content":"        int index;","lastModifiedDate":"2021-09-08"},{"lineNumber":87,"author":{"gitId":"HongshuW"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"HongshuW"},"content":"            index \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2021-09-08"},{"lineNumber":89,"author":{"gitId":"HongshuW"},"content":"        } catch (ArrayIndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2021-09-08"},{"lineNumber":90,"author":{"gitId":"HongshuW"},"content":"            throw new InvalidTaskNoException();","lastModifiedDate":"2021-09-08"},{"lineNumber":91,"author":{"gitId":"HongshuW"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":92,"author":{"gitId":"HongshuW"},"content":"        Command command \u003d leadingWord.equals(\"done\")","lastModifiedDate":"2021-09-08"},{"lineNumber":93,"author":{"gitId":"HongshuW"},"content":"                ? new TaskDoneCommand(index)","lastModifiedDate":"2021-09-08"},{"lineNumber":94,"author":{"gitId":"HongshuW"},"content":"                : leadingWord.equals(\"undone\")","lastModifiedDate":"2021-09-08"},{"lineNumber":95,"author":{"gitId":"HongshuW"},"content":"                ? new TaskUndoneCommand(index)","lastModifiedDate":"2021-09-08"},{"lineNumber":96,"author":{"gitId":"HongshuW"},"content":"                : new DeleteTaskCommand(index);","lastModifiedDate":"2021-09-08"},{"lineNumber":97,"author":{"gitId":"HongshuW"},"content":"        Parser.commands.push(command);","lastModifiedDate":"2021-09-08"},{"lineNumber":98,"author":{"gitId":"HongshuW"},"content":"        return command;","lastModifiedDate":"2021-09-08"},{"lineNumber":99,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"HongshuW"},"content":"    private static AddTaskCommand parseTodo(String[] words) throws MissingCommandDetailException {","lastModifiedDate":"2021-09-08"},{"lineNumber":102,"author":{"gitId":"HongshuW"},"content":"        if (words.length \u003c 2) {","lastModifiedDate":"2021-09-08"},{"lineNumber":103,"author":{"gitId":"HongshuW"},"content":"            throw new MissingCommandDetailException(\"description\", \"todo\", \"\");","lastModifiedDate":"2021-09-08"},{"lineNumber":104,"author":{"gitId":"HongshuW"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":105,"author":{"gitId":"HongshuW"},"content":"        AddTaskCommand addTaskCommand \u003d new AddTaskCommand(new ToDo(words[1]));","lastModifiedDate":"2021-09-08"},{"lineNumber":106,"author":{"gitId":"HongshuW"},"content":"        Parser.commands.push(addTaskCommand);","lastModifiedDate":"2021-09-08"},{"lineNumber":107,"author":{"gitId":"HongshuW"},"content":"        return addTaskCommand;","lastModifiedDate":"2021-09-08"},{"lineNumber":108,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":109,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":110,"author":{"gitId":"HongshuW"},"content":"    private static FindTaskCommand parseFind(String[] words) throws MissingCommandDetailException {","lastModifiedDate":"2021-09-08"},{"lineNumber":111,"author":{"gitId":"HongshuW"},"content":"        if (words.length \u003c 2) {","lastModifiedDate":"2021-09-08"},{"lineNumber":112,"author":{"gitId":"HongshuW"},"content":"            throw new MissingCommandDetailException(\"keyword\", \"find\", \"\");","lastModifiedDate":"2021-09-08"},{"lineNumber":113,"author":{"gitId":"HongshuW"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":114,"author":{"gitId":"HongshuW"},"content":"        // Cannot undo a find command","lastModifiedDate":"2021-09-08"},{"lineNumber":115,"author":{"gitId":"HongshuW"},"content":"        return new FindTaskCommand(words[1].trim());","lastModifiedDate":"2021-09-08"},{"lineNumber":116,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":117,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":118,"author":{"gitId":"HongshuW"},"content":"    private static UndoCommand parseUndo() throws UnableToUndoException {","lastModifiedDate":"2021-09-08"},{"lineNumber":119,"author":{"gitId":"HongshuW"},"content":"        if (Parser.commands.empty()) {","lastModifiedDate":"2021-09-08"},{"lineNumber":120,"author":{"gitId":"HongshuW"},"content":"            throw new UnableToUndoException();","lastModifiedDate":"2021-09-08"},{"lineNumber":121,"author":{"gitId":"HongshuW"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":122,"author":{"gitId":"HongshuW"},"content":"        // Cannot undo an undo command","lastModifiedDate":"2021-09-08"},{"lineNumber":123,"author":{"gitId":"HongshuW"},"content":"        return new UndoCommand(Parser.commands.pop());","lastModifiedDate":"2021-09-08"},{"lineNumber":124,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":125,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":126,"author":{"gitId":"HongshuW"},"content":"    private static Command parseCommandWithTwoOrMoreWords(String[] words) throws WorkDoneException {","lastModifiedDate":"2021-09-13"},{"lineNumber":127,"author":{"gitId":"HongshuW"},"content":"        String leadingWord \u003d words[0];","lastModifiedDate":"2021-09-08"},{"lineNumber":128,"author":{"gitId":"HongshuW"},"content":"        if (leadingWord.equals(\"done\")) {","lastModifiedDate":"2021-09-08"},{"lineNumber":129,"author":{"gitId":"HongshuW"},"content":"            return Parser.parseCommandWithTaskNo(words);","lastModifiedDate":"2021-09-08"},{"lineNumber":130,"author":{"gitId":"HongshuW"},"content":"        } else if (leadingWord.equals(\"undone\")) {","lastModifiedDate":"2021-09-08"},{"lineNumber":131,"author":{"gitId":"HongshuW"},"content":"            return Parser.parseCommandWithTaskNo(words);","lastModifiedDate":"2021-09-08"},{"lineNumber":132,"author":{"gitId":"HongshuW"},"content":"        } else if (leadingWord.equals(\"delete\")) {","lastModifiedDate":"2021-09-08"},{"lineNumber":133,"author":{"gitId":"HongshuW"},"content":"            return Parser.parseCommandWithTaskNo(words);","lastModifiedDate":"2021-09-08"},{"lineNumber":134,"author":{"gitId":"HongshuW"},"content":"        } else if (leadingWord.equals(\"todo\")) {","lastModifiedDate":"2021-09-08"},{"lineNumber":135,"author":{"gitId":"HongshuW"},"content":"            return Parser.parseTodo(words);","lastModifiedDate":"2021-09-08"},{"lineNumber":136,"author":{"gitId":"HongshuW"},"content":"        } else if (leadingWord.equals(\"deadline\")) {","lastModifiedDate":"2021-09-08"},{"lineNumber":137,"author":{"gitId":"HongshuW"},"content":"            return Parser.parseCommandWithTime(words, false);","lastModifiedDate":"2021-09-08"},{"lineNumber":138,"author":{"gitId":"HongshuW"},"content":"        } else if (leadingWord.equals(\"event\")) {","lastModifiedDate":"2021-09-08"},{"lineNumber":139,"author":{"gitId":"HongshuW"},"content":"            return Parser.parseCommandWithTime(words, true);","lastModifiedDate":"2021-09-08"},{"lineNumber":140,"author":{"gitId":"HongshuW"},"content":"        } else if (leadingWord.equals(\"find\")) {","lastModifiedDate":"2021-09-08"},{"lineNumber":141,"author":{"gitId":"HongshuW"},"content":"            return Parser.parseFind(words);","lastModifiedDate":"2021-09-08"},{"lineNumber":142,"author":{"gitId":"HongshuW"},"content":"        } else {","lastModifiedDate":"2021-09-08"},{"lineNumber":143,"author":{"gitId":"HongshuW"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2021-09-08"},{"lineNumber":144,"author":{"gitId":"HongshuW"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":145,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":146,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":147,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":148,"author":{"gitId":"HongshuW"},"content":"     * Parses and returns a command from a string to a Command object.","lastModifiedDate":"2021-08-25"},{"lineNumber":149,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":150,"author":{"gitId":"HongshuW"},"content":"     * @param command Command received from keyboard.","lastModifiedDate":"2021-08-25"},{"lineNumber":151,"author":{"gitId":"HongshuW"},"content":"     * @return Parsed command.","lastModifiedDate":"2021-08-25"},{"lineNumber":152,"author":{"gitId":"HongshuW"},"content":"     * @throws WorkDoneException If command is invalid.","lastModifiedDate":"2021-09-13"},{"lineNumber":153,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":154,"author":{"gitId":"HongshuW"},"content":"    public static Command parse(String command) throws WorkDoneException {","lastModifiedDate":"2021-09-13"},{"lineNumber":155,"author":{"gitId":"HongshuW"},"content":"        // Determine type of the command and return corresponding command instance","lastModifiedDate":"2021-08-25"},{"lineNumber":156,"author":{"gitId":"HongshuW"},"content":"        if (command.equals(\"bye\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":157,"author":{"gitId":"HongshuW"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-08-25"},{"lineNumber":158,"author":{"gitId":"HongshuW"},"content":"        } else if (command.equals(\"list\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":159,"author":{"gitId":"HongshuW"},"content":"            return new GetListCommand();","lastModifiedDate":"2021-08-25"},{"lineNumber":160,"author":{"gitId":"HongshuW"},"content":"        } else if (command.equals(\"undo\")) {","lastModifiedDate":"2021-09-08"},{"lineNumber":161,"author":{"gitId":"HongshuW"},"content":"            return Parser.parseUndo();","lastModifiedDate":"2021-09-08"},{"lineNumber":162,"author":{"gitId":"HongshuW"},"content":"        } else if (command.equals(\"help\")) {","lastModifiedDate":"2021-09-13"},{"lineNumber":163,"author":{"gitId":"HongshuW"},"content":"            return new HelpCommand();","lastModifiedDate":"2021-09-13"},{"lineNumber":164,"author":{"gitId":"HongshuW"},"content":"        } else if (command.equals(\"clear\")) {","lastModifiedDate":"2021-09-13"},{"lineNumber":165,"author":{"gitId":"HongshuW"},"content":"            return new ClearCommand();","lastModifiedDate":"2021-09-13"},{"lineNumber":166,"author":{"gitId":"HongshuW"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":167,"author":{"gitId":"HongshuW"},"content":"            // Split the command into two phrases","lastModifiedDate":"2021-09-08"},{"lineNumber":168,"author":{"gitId":"HongshuW"},"content":"            String[] words \u003d command.split(\" \", 2);","lastModifiedDate":"2021-09-08"},{"lineNumber":169,"author":{"gitId":"HongshuW"},"content":"            return Parser.parseCommandWithTwoOrMoreWords(words);","lastModifiedDate":"2021-09-08"},{"lineNumber":170,"author":{"gitId":"HongshuW"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":171,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":172,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":173,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":174,"author":{"gitId":"HongshuW"},"content":"     * Assumes the last command in the history is invalid and pops it.","lastModifiedDate":"2021-09-08"},{"lineNumber":175,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":176,"author":{"gitId":"HongshuW"},"content":"    public static void popInvalidCommand() {","lastModifiedDate":"2021-09-08"},{"lineNumber":177,"author":{"gitId":"HongshuW"},"content":"        Parser.commands.pop();","lastModifiedDate":"2021-09-08"},{"lineNumber":178,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":179,"author":{"gitId":"HongshuW"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"HongshuW":179}},{"path":"src/main/java/workdone/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongshuW"},"content":"package workdone.ui;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"HongshuW"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"HongshuW"},"content":"import workdone.command.Command;","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"HongshuW"},"content":"import workdone.exception.WorkDoneException;","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"HongshuW"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"HongshuW"},"content":" * Represents UI of the WorkDone program.","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"HongshuW"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"HongshuW"},"content":"public class Ui {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"HongshuW"},"content":"    /** Greeting message to be printed when the program starts */","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"HongshuW"},"content":"    private static final String GREETING_MESSAGE \u003d \"Hello! I\u0027m WorkDone\\nWhat can I do for you?\";","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"HongshuW"},"content":"    /** Scanner used to read commands */","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"HongshuW"},"content":"    private final Scanner input;","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"HongshuW"},"content":"     * Constructor for the class `Ui`.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"HongshuW"},"content":"    public Ui() {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"HongshuW"},"content":"        this.input \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"HongshuW"},"content":"     * Prints welcome message.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"HongshuW"},"content":"    public void showWelcome() {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"HongshuW"},"content":"        System.out.println(Ui.GREETING_MESSAGE);","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"HongshuW"},"content":"    public String getGreetingMessage() {","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"HongshuW"},"content":"        return Ui.GREETING_MESSAGE;","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"HongshuW"},"content":"     * Returns command received from keyboard.","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"HongshuW"},"content":"     * @return Command received.","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"HongshuW"},"content":"    public String getCommand() {","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"HongshuW"},"content":"        return this.input.nextLine().trim();","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"HongshuW"},"content":"     * Prints the output of a command.","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"HongshuW"},"content":"     * @param command Processed command.","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"HongshuW"},"content":"    public void showCommandOutput(Command command) {","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"HongshuW"},"content":"        System.out.println(command);","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"HongshuW"},"content":"     * Returns the format of a task.","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"HongshuW"},"content":"     * @param taskType Type of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"HongshuW"},"content":"     * @param timeFormat Time format of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"HongshuW"},"content":"     * @return Command format of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"HongshuW"},"content":"    public static String getCommandFormat(String taskType, String timeFormat) {","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"HongshuW"},"content":"        return String.format(\"Please follow the format:\\n%s \u003ctask description\u003e %s\", taskType, timeFormat);","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"HongshuW"},"content":"     * Prints the given exception.","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"HongshuW"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"HongshuW"},"content":"     * @param workDoneException The given exception.","lastModifiedDate":"2021-09-13"},{"lineNumber":69,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"HongshuW"},"content":"    public void showError(WorkDoneException workDoneException) {","lastModifiedDate":"2021-09-13"},{"lineNumber":71,"author":{"gitId":"HongshuW"},"content":"        System.out.println(workDoneException);","lastModifiedDate":"2021-09-13"},{"lineNumber":72,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"HongshuW"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"HongshuW"},"content":"     * Prints out error message indicating that file containing data is not found.","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"HongshuW"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"HongshuW"},"content":"    public static void showFileNotFoundError() {","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"HongshuW"},"content":"        WorkDoneException workDoneException \u003d new WorkDoneException(","lastModifiedDate":"2021-09-13"},{"lineNumber":79,"author":{"gitId":"HongshuW"},"content":"                \"☹ OOPS!!! The file cannot be found. A new file has been created, please try again!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"HongshuW"},"content":"        System.out.println(workDoneException);","lastModifiedDate":"2021-09-13"},{"lineNumber":81,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"HongshuW"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"HongshuW":82}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"HongshuW"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"HongshuW"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"HongshuW"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"HongshuW"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"HongshuW"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"HongshuW"},"content":"\u003c?import javafx.scene.paint.Color?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"HongshuW"},"content":"\u003c?import javafx.scene.paint.LinearGradient?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"HongshuW"},"content":"\u003c?import javafx.scene.paint.Stop?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"HongshuW"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"HongshuW"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"HongshuW"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"HongshuW"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\" maxHeight\u003d\"Infinity\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"HongshuW"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"HongshuW"},"content":"                \u003cInsets left\u003d\"30\" right\u003d\"30\" top\u003d\"10\" bottom\u003d\"10\" /\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"HongshuW"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"HongshuW"},"content":"         \u003cfont\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"HongshuW"},"content":"            \u003cFont name\u003d\"Avenir Book\" size\u003d\"14.0\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"HongshuW"},"content":"         \u003c/font\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"HongshuW"},"content":"         \u003ctextFill\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"HongshuW"},"content":"            \u003cLinearGradient endX\u003d\"1.0\" endY\u003d\"1.0\" startX\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"HongshuW"},"content":"               \u003cstops\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"HongshuW"},"content":"                  \u003cStop\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"HongshuW"},"content":"                     \u003ccolor\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"HongshuW"},"content":"                        \u003cColor red\u003d\"0.0784313753247261\" green\u003d\"0.3333333432674408\" blue\u003d\"0.48235294222831726\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"HongshuW"},"content":"                     \u003c/color\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"HongshuW"},"content":"                  \u003c/Stop\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"HongshuW"},"content":"                  \u003cStop offset\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"HongshuW"},"content":"                     \u003ccolor\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"HongshuW"},"content":"                        \u003cColor red\u003d\"0.49803921580314636\" green\u003d\"0.8078431487083435\" blue\u003d\"0.772549033164978\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"HongshuW"},"content":"                     \u003c/color\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"HongshuW"},"content":"                  \u003c/Stop\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"HongshuW"},"content":"               \u003c/stops\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"HongshuW"},"content":"            \u003c/LinearGradient\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"HongshuW"},"content":"         \u003c/textFill\u003e\u003c/Label\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"HongshuW"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"80.0\" fitWidth\u003d\"80.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"HongshuW"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"HongshuW"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"HongshuW"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"HongshuW"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"HongshuW"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"HongshuW":42}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"HongshuW"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"HongshuW"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"HongshuW"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"HongshuW"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"HongshuW"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"HongshuW"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"HongshuW"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"HongshuW"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"800.0\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"workdone.ui.MainWindow\"\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"HongshuW"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"HongshuW"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutX\u003d\"20.0\" layoutY\u003d\"560.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"30.0\" prefWidth\u003d\"650.0\"\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":13,"author":{"gitId":"HongshuW"},"content":"         \u003cfont\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"HongshuW"},"content":"            \u003cFont name\u003d\"Avenir Book\" size\u003d\"14.0\" /\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"HongshuW"},"content":"         \u003c/font\u003e\u003c/TextField\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"HongshuW"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"690.0\" layoutY\u003d\"560.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"30.0\" prefWidth\u003d\"80.0\" text\u003d\"Send\"\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"HongshuW"},"content":"         \u003cfont\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"HongshuW"},"content":"            \u003cFont name\u003d\"Avenir Book\" size\u003d\"14.0\" /\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"HongshuW"},"content":"         \u003c/font\u003e\u003c/Button\u003e","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"HongshuW"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"800.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"HongshuW"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"HongshuW"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"550.0\" prefWidth\u003d\"780.0\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"HongshuW"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"HongshuW"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"HongshuW"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"HongshuW"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"HongshuW":26}},{"path":"src/test/java/workdone/command/AddTaskCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongshuW"},"content":"package workdone.command;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"HongshuW"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"HongshuW"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"HongshuW"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"HongshuW"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"HongshuW"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"HongshuW"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"HongshuW"},"content":"import workdone.data.Storage;","lastModifiedDate":"2021-09-13"},{"lineNumber":13,"author":{"gitId":"HongshuW"},"content":"import workdone.data.TaskList;","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"HongshuW"},"content":"import workdone.task.Deadline;","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"HongshuW"},"content":"import workdone.task.Event;","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"HongshuW"},"content":"import workdone.task.Task;","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"HongshuW"},"content":"import workdone.task.ToDo;","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"HongshuW"},"content":"public class AddTaskCommandTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"HongshuW"},"content":"    private TaskList taskList1 \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"HongshuW"},"content":"    private TaskList taskList2 \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"HongshuW"},"content":"    private ToDo task1 \u003d new ToDo(\"task1\");","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"HongshuW"},"content":"    private Deadline task2 \u003d new Deadline(\"task2\", \"2021-09-10 18:00\");","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"HongshuW"},"content":"    private Event task3 \u003d new Event(\"task3\", \"2021-09-10 18:00 to 2021-09-10 18:50\");","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"HongshuW"},"content":"    private Path path \u003d Paths.get(System.getProperty(\"user.dir\"), \"data\", \"duke.txt\");","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"HongshuW"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"HongshuW"},"content":"    public void execute_emptyTaskList_success() {","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"HongshuW"},"content":"        Storage storage \u003d new Storage(path, taskList1);","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"HongshuW"},"content":"        taskList2.addTask(task1);","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"HongshuW"},"content":"        AddTaskCommand command \u003d new AddTaskCommand(task1);","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"HongshuW"},"content":"        command.execute(taskList1, storage);","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"HongshuW"},"content":"        assertEquals(taskList2.get(0).toString(), taskList1.get(0).toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"HongshuW"},"content":"        path.toFile().delete();","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"HongshuW"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"HongshuW"},"content":"    public void execute_taskList_success() {","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"HongshuW"},"content":"        Task[] tasks \u003d new Task[] {task1, task2, task3};","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"HongshuW"},"content":"        Storage storage \u003d new Storage(path, taskList1);","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"HongshuW"},"content":"        for (int i \u003d 0; i \u003c 3; i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"HongshuW"},"content":"            taskList2.addTask(tasks[i]);","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"HongshuW"},"content":"            AddTaskCommand command \u003d new AddTaskCommand(tasks[i]);","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"HongshuW"},"content":"            command.execute(taskList1, storage);","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"HongshuW"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"HongshuW"},"content":"        for (int i \u003d 0; i \u003c 3; i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"HongshuW"},"content":"            assertEquals(taskList2.get(i).toString(), taskList1.get(i).toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"HongshuW"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"HongshuW"},"content":"        path.toFile().delete();","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"HongshuW"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"HongshuW"},"content":"    public void execute_file_success() {","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"HongshuW"},"content":"        Storage storage \u003d new Storage(path, taskList1);","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"HongshuW"},"content":"        AddTaskCommand command \u003d new AddTaskCommand(task1);","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"HongshuW"},"content":"        command.execute(taskList1, storage);","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"HongshuW"},"content":"        Scanner fileScanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"HongshuW"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"HongshuW"},"content":"            fileScanner \u003d new Scanner(path.toFile());","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"HongshuW"},"content":"            assertEquals(\"T / 0 / task1\", fileScanner.nextLine());","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"HongshuW"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"HongshuW"},"content":"            System.out.println(e);","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"HongshuW"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"HongshuW"},"content":"        path.toFile().delete();","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"HongshuW"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"HongshuW":68}},{"path":"src/test/java/workdone/ui/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HongshuW"},"content":"package workdone.ui;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"HongshuW"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"HongshuW"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"HongshuW"},"content":"public class UiTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"HongshuW"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"HongshuW"},"content":"    public void getCommandFormat_randomString_success() {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"HongshuW"},"content":"        assertEquals(\"Please follow the format:\\nrandom task \u003ctask description\u003e time\",","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"HongshuW"},"content":"                Ui.getCommandFormat(\"random task\", \"time\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"HongshuW"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"HongshuW"},"content":"    public void getCommandFormat_emptyString_success() {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"HongshuW"},"content":"        assertEquals(\"Please follow the format:\\n \u003ctask description\u003e \",","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"HongshuW"},"content":"                Ui.getCommandFormat(\"\", \"\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"HongshuW"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"HongshuW"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"HongshuW"},"content":"    public void getCommandFormat_edgeCase_success() {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"HongshuW"},"content":"        assertEquals(\"Please follow the format:\\n\\n \u003ctask description\u003e time\",","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"HongshuW"},"content":"                Ui.getCommandFormat(\"\\n\", \"time\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"HongshuW"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"HongshuW"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"HongshuW":25}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"HongshuW"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"HongshuW"},"content":"todo borrow book","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"HongshuW"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"HongshuW"},"content":"done 1","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"HongshuW"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"HongshuW"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"HongshuW"},"content":"done 4","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"HongshuW"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"HongshuW"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"HongshuW":9}},{"path":"text-ui-test/input1.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"HongshuW"},"content":"todo task1","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"HongshuW"},"content":"event task2 /at random time","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"HongshuW"},"content":"deadline task3 /by today","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"HongshuW"},"content":"todo task4 task5 task6","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"HongshuW"},"content":"done 2","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"HongshuW"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"HongshuW"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"HongshuW":7}},{"path":"text-ui-test/input2.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"HongshuW"},"content":"hello","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"HongshuW"},"content":"todo","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"HongshuW"},"content":"deadline","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"HongshuW"},"content":"event","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"HongshuW"},"content":"deadline task1","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"HongshuW"},"content":"event task2","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"HongshuW"},"content":"deadline task3 /by today /by tomorrow","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"HongshuW"},"content":"event task4 /at random time /at 8-9pm /at ???","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"HongshuW"},"content":"done -1","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"HongshuW"},"content":"done 100","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"HongshuW"},"content":"done 1","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"HongshuW"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"HongshuW":12}},{"path":"text-ui-test/input3.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"HongshuW"},"content":"delete 1","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"HongshuW"},"content":"todo task1","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"HongshuW"},"content":"todo task2","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"HongshuW"},"content":"todo task3","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"HongshuW"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"HongshuW"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"HongshuW"},"content":"delete 2","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"HongshuW"},"content":"delete 2","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"HongshuW"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"HongshuW"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"HongshuW":10}}]
