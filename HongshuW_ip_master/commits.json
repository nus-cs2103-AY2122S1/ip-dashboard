{"authorDailyContributionsMap":{"HongshuW":[{"date":"2021-08-17","commitResults":[{"hash":"025698966efa188ebf28f931d90e0d7aed1729eb","messageTitle":"Add Processor.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":0}}},{"hash":"0d3d52dffa5d2cedddac70516587a42c3dc57ae0","messageTitle":"Duke class: change greeting message","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":6}}},{"hash":"5a4d6b7425f6458d3d9d667ed9d1dea2fdd6a9f8","messageTitle":"Processor class: add  method","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":0}}},{"hash":"341a3e27a10c1fce05d9d189133b7bbb3962898a","messageTitle":"Duke class: add exiting message","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":1}}},{"hash":"a7d0101e6599a3f9bc8e1aea129b8d6ae7512237","messageTitle":"Duke class: run processor in a while loop","messageBody":"Duke class processes only one command and exits.\n\nThe program shouldn\u0027t exit after processing one command,\nit should continue to run unless the \u0027bye\u0027 command is received.\n\nAdding a while loop in `main` allows the program to keep running.\nThe return type of method `process` in class `Processor` is\nchanged from void to boolean, the method returns false only if\nthe command is \u0027bye\u0027.\n\nChanging the return type from void to boolean enables the while\nloop to stop when \u0027bye\u0027 command is received.\n","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":3}}}]},{"date":"2021-08-18","commitResults":[{"hash":"896213120080227c591eafa9d294aef8b235807b","messageTitle":"Rename Processor.java to Event.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":5}}},{"hash":"aa2e5e8c26ae2a8c5d27826cf02f6cb24c6e7e12","messageTitle":"Extract scanner from Event.java","messageBody":"Each event contains a scanner to read command.\n\nThis shouldn\u0027t be the case because an event should be triggered\nafter a command is received.\n\nScanner is removed from the Event class. A method called `readCommand`\nis introduced in the Duke class, which will read the command and\ndecide the Duke program\u0027s next action.\n\nMoving the reading command process into the Duke class enables\nthe program to decide which event to trigger based on the command.\n","fileTypesAndContributionMap":{"java":{"insertions":43,"deletions":30}}},{"hash":"cb0a83b810fe695d3ad9b0c08f7c28f1fe5a8de0","messageTitle":"Rename Event.java to be Processor.java","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":9}}},{"hash":"2195b01ca620a448de1f70cc71930ff6b8cbd567","messageTitle":"Add AddATaskProcessor.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":5}}},{"hash":"bb074c5f4f263a5fd503e79679ad8d64dca2836c","messageTitle":"Duke class: add  list","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":1}}},{"hash":"1dda7110ff813c951e3d3527cc858ed5faf85d5c","messageTitle":"Add GetListProcessor.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":0}}},{"hash":"bdd1506f2c66f55fbfef0a638bae57a0120550a1","messageTitle":"GetListProcessor class: implement process method","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":3}}},{"hash":"ad2eaf28e8e3273696ba02510349fcb4cc297353","messageTitle":"Duke class: add getTasks method","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":1}}},{"hash":"2a7792740ee1ee1ec3ed5bccdbc4b9db7b730611","messageTitle":"Add Task.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":0}}},{"hash":"23467a549044bc0f8f498ef822dccf511c767717","messageTitle":"Duke class: change  into a list of s","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":11}}},{"hash":"da3ebc7c1d5fff3a7d8dd4f52639fecd48be8b1d","messageTitle":"Task class: implement toString method","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":0}}},{"hash":"a7e0632f5ed0b960d0e677ae4518f6574f8dd500","messageTitle":"Add TaskDoneProcessor.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":21,"deletions":0}}},{"hash":"488e310b481f3d24f06bf6d5bd8cd01995a5c100","messageTitle":"Duke class: add done command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":27,"deletions":4}}},{"hash":"83ef0f57ace80f0ce8e732769cf19cf1076bfa02","messageTitle":"Duke class: extract processCommand method","messageBody":"The steps of calling the process method of a processor and print\nthe result are repeated for each command.\n\nThese lines of code are repeated, which should be avoided.\n\nIn the Duke class, a method called processCommand is defined to\ncontain the repeated lines of code. Then the common lines in the\nreadCommand method are replaced by calling processCommand.\n\nThis makes it easier to debug and change the behavior later.\n","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":13}}},{"hash":"c3d0d5e26989f84939de7875b502cf7264691759","messageTitle":"Add Deadline.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":28,"deletions":0}}},{"hash":"00786ac636584737691caf973cb8a14af1ee6293","messageTitle":"Add ToDo.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":1}}},{"hash":"bf73f982c020a0fd67cee2a98ef2948e25cd1e3c","messageTitle":"Add Event.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":2}}},{"hash":"db9bf6dc6551d1b7f04e1f0ee9251841a85569a2","messageTitle":"Duke class: add three commands","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":30,"deletions":12}}},{"hash":"d9516a67c05e430f10d3d3c4b962b8b14e85d54a","messageTitle":"TextUiTesting: normal cases","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":16,"deletions":0},"java":{"insertions":4,"deletions":3},"sh":{"insertions":4,"deletions":4}}},{"hash":"551610817699a9452953d15618bc59ed3fbf9f06","messageTitle":"Add DukeException.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":0}}},{"hash":"53a880e5cacd4f8978064b6f895075a73a70fb17","messageTitle":"DukeException class: implement toString","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":1}}}]},{"date":"2021-08-19","commitResults":[{"hash":"a20dff433f8b40d802ea4e0d8ca677bc56f5dbba","messageTitle":"Duke class: handle exceptions","messageBody":"Invalid commands such as \u0027todo\u0027 and \u0027blah\u0027 are allowed, and these\nwill be treated as a todo task.\n\nAllowing invalid commands may lead to problems such as recording a\ntypo as a todo task.\n\nThe following exceptions are handled using DukeException class:\n- Invalid commands (commands other than bye, list, done, todo,\n  deadline, event)\n- Invalid task number in a done command\n- Empty description in todo, deadline, event commands\n- Empty time in deadline and event commands\n- multiple time slots in deadline and event commands\n\nBy creating a new class, the error message can be changed into\nthe same format as other messages. Handling errors also provide\nthe users with a guideline on how to use the program.\n","fileTypesAndContributionMap":{"java":{"insertions":48,"deletions":26}}},{"hash":"fa2ee63a82b092caf9da1ef97b4942c57e8f5c4a","messageTitle":"TextUiTesting: error handling test cases","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{"txt":{"insertions":12,"deletions":0},"sh":{"insertions":4,"deletions":4}}},{"hash":"64789bae82154a42c7f3b39d4e5b6a00e0459823","messageTitle":"Add DeleteATaskProcessor.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":21,"deletions":0}}},{"hash":"2155decce87bca7b2d112411077bb0b95837d961","messageTitle":"Duke class: change tasks to ArrayList","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":28,"deletions":28},"sh":{"insertions":4,"deletions":4}}},{"hash":"45920187fc52b821ec8251af2ec2edf65e83c8ba","messageTitle":"Duke class: add delete command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":17,"deletions":2}}},{"hash":"c935e3b018c40edf5cadfc61ff1a787ba918e866","messageTitle":"TextUiTesting: test delete","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"txt":{"insertions":10,"deletions":0}}}]},{"date":"2021-08-22","commitResults":[{"hash":"c0724019f49e7e9bd1ef56032ebf33341da25879","messageTitle":"Add javadoc","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":75,"deletions":15}}}]}]},"authorFileTypeContributionMap":{"HongshuW":{"java":452,"md":0,"fxml":0,"sh":0,"bat":0,"gradle":0,"txt":38}},"authorContributionVariance":{"HongshuW":17916.49},"authorDisplayNameMap":{"HongshuW":"WANG..GSHU"}}
