[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"# duke.Duke project template","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"instructions on how to use it.","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"   first)","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"   in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"   code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"   like the below as the output:","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"chrus-chong":10,"-":19}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"chrus-chong":1,"-":45}},{"path":"config/travis/check-eof-newline.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"#!/bin/sh","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"# Checks that all text files end with a newline.","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"ret\u003d0","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"# Preserve filename with spaces by only splitting on newlines.","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"IFS\u003d\u0027","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"\u0027","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"for filename in $(git grep --cached -I -l -e \u0027\u0027 -- \u0027:/\u0027); do","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"    if [ \"$(tail -c 1 \"./$filename\")\" !\u003d \u0027\u0027 ]; then","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"        line\u003d\"$(wc -l \"./$filename\" | cut -d\u0027 \u0027 -f1)\"","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"        echo \"ERROR:$filename:$line: no newline at EOF.\"","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"        ret\u003d1","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"    fi","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"done","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"exit $ret","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"chrus-chong":18}},{"path":"config/travis/check-line-endings.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"#!/bin/sh","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"# Checks for prohibited line endings.","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"# Prohibited line endings: \\r\\n","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"git grep --cached -I -n --no-color -P \u0027\\r$\u0027 -- \u0027:/\u0027 |","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"awk \u0027","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"    BEGIN {","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"        FS \u003d \":\"","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"        OFS \u003d \":\"","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"        ret \u003d 0","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"    {","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"        ret \u003d 1","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"        print \"ERROR\", $1, $2, \" prohibited \\\\r\\\\n line ending, use \\\\n instead.\"","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"    END {","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"        exit ret","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"\u0027","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"chrus-chong":19}},{"path":"config/travis/check-trailing-whitespace.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"#!/bin/sh","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"# Checks for trailing whitespace","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"git grep --cached -I -n --no-color -P \u0027[ \\t]+$\u0027 -- \u0027:/\u0027 |","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"awk \u0027","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"    BEGIN {","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"        FS \u003d \":\"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"        OFS \u003d \":\"","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"        ret \u003d 0","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"    {","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"        # Only warn for markdown files (*.md) to accomodate text editors","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"        # which do not properly handle trailing whitespace.","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"        # (e.g. GitHub web editor)","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"        if ($1 ~ /\\.md$/) {","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"            severity \u003d \"WARN\"","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"        } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"            severity \u003d \"ERROR\"","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"            ret \u003d 1","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"        print severity, $1, $2, \" trailing whitespace.\"","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"    END {","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"        exit ret","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"\u0027","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"chrus-chong":26}},{"path":"config/travis/run-checks.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"#!/bin/sh","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"# Runs all check-* scripts, and returns a non-zero exit code if any of them fail.","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"dir\u003d$(CDPATH\u003d cd -- \"$(dirname -- \"$0\")\" \u0026\u0026 pwd) \u0026\u0026","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"ret\u003d0 \u0026\u0026","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"for checkscript in \"$dir\"/check-*; do","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"    if ! \"$checkscript\"; then","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"        ret\u003d1","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"    fi","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"done","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"exit $ret","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"chrus-chong":11}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":" * Duke class used to run the duke.Duke chat-bot.","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":" * Contains methods that","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":" * (i)    initialises the Ui class and runs the chat-bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"     * Initialises the chatBot and runs the Duke chatBot.","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"     * @param args arguments for main method.","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"        Ui chatBot \u003d new Ui();","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"        chatBot.run();","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"chrus-chong":17,"-":3}},{"path":"src/main/java/duke/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"package duke.commands;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":" * ByeCommand class used to represent a Bye Command.","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":" * Contains methods that","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":" * (i)    executes the ByeCommand","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"    public ByeCommand() {","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"        super(\"bye\");","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"     * execute() method in ByeCommand to print leaving message.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"     * @param des   the user input into the Duke chat-box.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"     * @param tList the TaskList object used to keep track of all tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"    public void execute(String des, TaskList tList) {","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"chrus-chong":25}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"package duke.commands;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":" * Abstract Command class used represent command inputs for Duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":" * Contains methods that","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":" * (i)    executes the Command","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":" * (ii)   print out the number of tasks in a given TaskList","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":" * (iii)  counts the number of blank spaces in a string of text.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"    private final String keyword;","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"    Command(String keyword) {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"     * Abstract execute() method in Command for specific commands to execute their responsibilities.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"     * @param des   the user input into the Duke chat-box.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"     * @param tList the TaskList object used to keep track of all tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":"     * @throws DukeException on task-specific errors.","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"    public abstract void execute(String des, TaskList tList) throws DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"chrus-chong"},"content":"     * The numberOfTasks() method informs the user of the total number of tasks.","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"chrus-chong"},"content":"     * @param tList the TaskList object used to keep track of all tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"chrus-chong"},"content":"    public void numberOfTasks(TaskList tList) {","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"chrus-chong"},"content":"        ArrayList\u003cTask\u003e tasks \u003d tList.getTaskList();","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"chrus-chong"},"content":"        if (tasks.size() \u003d\u003d 1) {","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"chrus-chong"},"content":"            System.out.println(\"You now have \" + tasks.size() + \" task in the list\");","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"chrus-chong"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"chrus-chong"},"content":"            System.out.println(\"You now have \" + tasks.size() + \" tasks in the list\");","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"chrus-chong"},"content":"     * The countSpaces method counts the number of blank spaces in a given String.","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"chrus-chong"},"content":"     * @param des the user input into the Duke chat-box.","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"chrus-chong"},"content":"     * @return Integer type object that represents the number of blank spaces in","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"chrus-chong"},"content":"     * the user input.","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"chrus-chong"},"content":"    public int countSpaces(String des) {","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"chrus-chong"},"content":"        int count \u003d 0;","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"chrus-chong"},"content":"        for (int i \u003d 0; i \u003c des.length(); i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"chrus-chong"},"content":"            if (des.charAt(i) \u003d\u003d \u0027 \u0027) {","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"chrus-chong"},"content":"                count++;","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"chrus-chong"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"chrus-chong"},"content":"        return count;","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"chrus-chong"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"chrus-chong":63}},{"path":"src/main/java/duke/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"package duke.commands;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":" * DeadlineCommand class used to represent a Deadline Command.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":" * Contains methods that","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":" * (i)    executes the DeadlineCommand","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"    public DeadlineCommand() {","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"        super(\"deadline\");","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"     * execute() method in DeadlineCommand to add a Deadline task to the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"     * @param des   the user input into the Duke chat-box.","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"     * @param tList the TaskList object used to keep track of all tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"     * @throws DukeException if input for deadline command is not properly formatted.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":"    public void execute(String des, TaskList tList) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"        if (des.equals(\"deadline\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"            throw new DukeException(\"\\\"deadline\\\" command not correctly formatted \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"                    + \"Please insert task and due date arguments\");","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"chrus-chong"},"content":"        if (!des.contains(\"/by\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"chrus-chong"},"content":"            throw new DukeException(\"\\\"deadline\\\" command not correctly formatted \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"chrus-chong"},"content":"                    + \"Please do not forget to include \\\"by\\\" and insert due date argument\");","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"chrus-chong"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"chrus-chong"},"content":"            if (des.chars().filter(c -\u003e c \u003d\u003d \u0027/\u0027).count() \u003e 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"chrus-chong"},"content":"                throw new DukeException(\"Format Error. \"","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"chrus-chong"},"content":"                        + \"Do not use the special character \\\"/\\\" within your task description.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"chrus-chong"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"chrus-chong"},"content":"            String description \u003d des.substring(9, des.indexOf(\u0027/\u0027) - 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"chrus-chong"},"content":"            LocalDate date \u003d Storage.extractDate(des);","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"chrus-chong"},"content":"            LocalTime time \u003d Storage.extractTimeDeadline(des);","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"chrus-chong"},"content":"            Deadline atHand \u003d new Deadline(description, date, time);","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"chrus-chong"},"content":"            tList.add(atHand);","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"chrus-chong"},"content":"            System.out.println(\"Sure. The following task has been added: \");","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"chrus-chong"},"content":"            System.out.println(atHand.formatString());","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"chrus-chong"},"content":"            this.numberOfTasks(tList);","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"chrus-chong"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"chrus-chong"},"content":"            throw new DukeException(\"\\\"deadline\\\" command not correctly formatted\");","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"chrus-chong"},"content":"        Storage.createFile();","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"chrus-chong"},"content":"        Storage.writeToFile(tList);","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"chrus-chong"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"chrus-chong":57}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"package duke.commands;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":" * DeleteCommand class used to represent a Delete Command.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":" * Contains methods that","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":" * (i)    executes the DeleteCommand","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"    public DeleteCommand() {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"        super(\"delete\");","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"     * execute() method in DeleteCommand to Delete a task from the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"     * @param des   the user input into the Duke chat-box.","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"     * @param tList the TaskList object used to keep track of all tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"     * @throws DukeException if input for Delete command is not properly formatted.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"    public void execute(String des, TaskList tList) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":"        ArrayList\u003cTask\u003e tasks \u003d tList.getTaskList();","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"        String sNum \u003d des.substring(des.lastIndexOf(\u0027 \u0027) + 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"        int num \u003d Integer.parseInt(sNum);","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"        if (num \u003c\u003d 0 || num \u003e tasks.size()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"chrus-chong"},"content":"            throw new DukeException(\"The input number is not a valid task number \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"chrus-chong"},"content":"                    + \"Please refer to the task list using the \\\"list\\\" command\");","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"chrus-chong"},"content":"        } else if (this.countSpaces(des) \u003e 1) {","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"chrus-chong"},"content":"            throw new DukeException(\"Too many arguments being provided to \\\"delete\\\" \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"chrus-chong"},"content":"                    + \"Please refer to proper usage of duke.commands with \\\"allCmd\\\"\");","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"chrus-chong"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"chrus-chong"},"content":"            tList.remove(num);","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"chrus-chong"},"content":"            System.out.println(\"Successfully removed task \" + num);","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"chrus-chong"},"content":"        Storage.createFile();","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"chrus-chong"},"content":"        Storage.writeToFile(tList);","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"chrus-chong"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"chrus-chong":45}},{"path":"src/main/java/duke/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"package duke.commands;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":" * DoneCommand class used to represent a Done Command.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":" * Contains methods that","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":" * (i)    executes the DoneCommand","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"    public DoneCommand() {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"        super(\"done\");","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"     * execute() method in DoneCommand to mark a task as done in the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"     * @param des   the user input into the Duke chat-box.","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"     * @param tList the TaskList object used to keep track of all tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"     * @throws DukeException if input for Delete command is not properly formatted.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"    public void execute(String des, TaskList tList) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"        ArrayList\u003cTask\u003e tasks \u003d tList.getTaskList();","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":"        String sNum \u003d des.substring(des.lastIndexOf(\u0027 \u0027) + 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"        int num \u003d Integer.parseInt(sNum);","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"        if (num \u003c\u003d 0 || num \u003e tasks.size()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"            throw new DukeException(\"The input number is not a valid task number \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"chrus-chong"},"content":"                    + \"Please refer to the task list using the \\\"list\\\" command\");","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"chrus-chong"},"content":"        } else if (this.countSpaces(des) \u003e 1) {","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"chrus-chong"},"content":"            throw new DukeException(\"Too many arguments being provided to \\\"done\\\" \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"chrus-chong"},"content":"                    + \"Please refer to proper usage of commands with \\\"allCmd\\\"\");","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"chrus-chong"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"chrus-chong"},"content":"            Task atHand \u003d tasks.get(num - 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"chrus-chong"},"content":"            if (atHand.getIsDone()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"chrus-chong"},"content":"                throw new DukeException(\"You have already completed this task.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"chrus-chong"},"content":"            } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"chrus-chong"},"content":"                atHand.markAsDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"chrus-chong"},"content":"                System.out.println(\"I see that you have completed a task. Keep up the good work!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"chrus-chong"},"content":"                System.out.println();","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"chrus-chong"},"content":"                System.out.println(\"This task has now been marked as completed\");","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"chrus-chong"},"content":"                System.out.println(atHand.getStatusIcon() + \" \" + atHand.getDescription());","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"chrus-chong"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"chrus-chong"},"content":"        Storage.createFile();","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"chrus-chong"},"content":"        Storage.writeToFile(tList);","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"chrus-chong"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"chrus-chong":52}},{"path":"src/main/java/duke/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"package duke.commands;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":" * EventCommand class used to represent an Event Command.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":" * Contains methods that","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":" * (i)    executes the EventCommand","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"    public EventCommand() {","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"        super(\"event\");","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"     * execute() method in EventCommand to add an Event task into the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"     * @param des   the user input into the Duke chat-box.","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"     * @param tList the TaskList object used to keep track of all tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"     * @throws DukeException if input for Delete command is not properly formatted.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"    public void execute(String des, TaskList tList) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"        if (des.equals(\"event\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"            throw new DukeException(\"\\\"event\\\" command not correctly formatted \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"chrus-chong"},"content":"                    + \"Please insert task and timeframe arguments\");","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"chrus-chong"},"content":"        if (!des.contains(\"/at\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"chrus-chong"},"content":"            throw new DukeException(\"\\\"event\\\" command not correctly formatted \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"chrus-chong"},"content":"                    + \"Please do not forget to include \\\"at\\\" and insert timeframe argument\");","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"chrus-chong"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"chrus-chong"},"content":"            if (des.chars().filter(c -\u003e c \u003d\u003d \u0027/\u0027).count() \u003e 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"chrus-chong"},"content":"                throw new DukeException(\"Format Error. \"","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"chrus-chong"},"content":"                        + \"Do not use the special character \\\"/\\\" within your task description.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"chrus-chong"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"chrus-chong"},"content":"            String description \u003d des.substring(6, des.indexOf(\u0027/\u0027) - 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"chrus-chong"},"content":"            LocalDate date \u003d Storage.extractDate(des);","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"chrus-chong"},"content":"            ArrayList\u003cLocalTime\u003e startEnd \u003d Storage.extractTimeEvent(des);","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"chrus-chong"},"content":"            Event atHand \u003d new Event(description, date, startEnd.get(0), startEnd.get(1));","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"chrus-chong"},"content":"            tList.add(atHand);","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"chrus-chong"},"content":"            System.out.println(\"Sure. The following task has been added: \");","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"chrus-chong"},"content":"            System.out.println(atHand.formatString());","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"chrus-chong"},"content":"            this.numberOfTasks(tList);","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"chrus-chong"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"chrus-chong"},"content":"            throw new DukeException(\"\\\"event\\\" command not correctly formatted\");","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"chrus-chong"},"content":"        Storage.createFile();","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"chrus-chong"},"content":"        Storage.writeToFile(tList);","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"chrus-chong"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"chrus-chong":58}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"package duke.commands;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"    public FindCommand() {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"        super(\"find\");","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"     * The execute() method in findCommand filters out the relevant tasks from the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"     * @param des the user input into the Duke chat-box.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"     * @throws DukeException if done command is not formatted properly","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"     *                       or if task has already been completed.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"    public void execute(String des, TaskList tList) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"        if (des.equals(\"find\") || des.equals(\"find \")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"            throw new DukeException(\"The \\\"find\\\" command accepts at least one search input.\\nPlease add a keyword to search for.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"        String searchInput \u003d des.substring(des.indexOf(\u0027 \u0027) + 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"        System.out.println(\"Here are your tasks that contain \\\"\" + searchInput + \"\\\"\");","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"        ArrayList\u003cTask\u003e tasks \u003d tList.getTaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"        int count \u003d 1;","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"            String description \u003d t.formatString();","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"            if (description.contains(searchInput)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"chrus-chong"},"content":"                System.out.print(count + \". \");","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"chrus-chong"},"content":"                System.out.println(t.formatString());","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"chrus-chong"},"content":"                count++;","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"chrus-chong"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"chrus-chong"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"chrus-chong":39}},{"path":"src/main/java/duke/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"package duke.commands;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":" * HelpCommand class serves as an in-built user-guide that","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":" * furnishes the user with information on how to use and format all","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":" * the commands available.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":" * * Contains methods that","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":" * * (i)    executes the HelpCommand","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"    public HelpCommand() {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"        super(\"help\");","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"     * execute() method in HelpCommand to add a Help task into the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"     * @param des   the user input into the Duke chat-box.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"     * @param tList the TaskList object used to keep track of all tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"    public void execute(String des, TaskList tList) {","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"        System.out.println(\"The possible commands are as follows:\");","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"        System.out.println();","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"        System.out.println(\"1. bye  -------- exit the Duke chat-bot\");","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"        System.out.println();","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"chrus-chong"},"content":"        System.out.println(\"2. list -------- list all tasks\");","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"chrus-chong"},"content":"        System.out.println();","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"chrus-chong"},"content":"        System.out.println(\"3. done -------- Usage --\u003e done x, where x is an integer.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"chrus-chong"},"content":"        System.out.println(\"               - Marks the corresponding task as completed\");","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"chrus-chong"},"content":"        System.out.println();","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"chrus-chong"},"content":"        System.out.println(\"4. todo -------- Usage --\u003e \\\"todo borrow book\\\"\");","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"chrus-chong"},"content":"        System.out.println(\"               - Inputs the a ToDo task into the task list\");","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"chrus-chong"},"content":"        System.out.println();","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"chrus-chong"},"content":"        System.out.println(\"5. deadline ---- Usage --\u003e \\\"deadline submit essay /by Sunday \\\", \"","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"chrus-chong"},"content":"                + \"remember not to miss the \\\"/by\\\" symbol!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"chrus-chong"},"content":"        System.out.println(\"               - Inputs the an Deadline task into the task list\");","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"chrus-chong"},"content":"        System.out.println();","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"chrus-chong"},"content":"        System.out.println(\"6. event ------- Usage --\u003e \\\"event project meeting /at Mon 2-4pm \\\", \"","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"chrus-chong"},"content":"                + \"remember not to miss the \\\"/at\\\" symbol!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"chrus-chong"},"content":"        System.out.println(\"               - Inputs the an Event task into the task list\");","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"chrus-chong"},"content":"        System.out.println(\"7. delete ------ Usage --\u003e delete x, where x is an integer.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"chrus-chong"},"content":"        System.out.println(\"               - Deletes the corresponding task\");","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"chrus-chong"},"content":"        System.out.println();","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"chrus-chong"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"chrus-chong":57}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"package duke.commands;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":" * ListCommand class used to represent a List Command.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":" * Contains methods that","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":" * (i)    executes the ListCommand","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"    public ListCommand() {","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"        super(\"list\");","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"     * execute() method in ListCommand to list all tasks in the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"     * @param des   the user input into the Duke chat-box.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"     * @param tList the TaskList object used to keep track of all tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"    public void execute(String des, TaskList tList) {","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"        ArrayList\u003cTask\u003e tasks \u003d tList.getTaskList();","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"        int count \u003d 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"            System.out.print(count + \". \");","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"            System.out.println(t.formatString());","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"            count++;","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"chrus-chong"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"chrus-chong":35}},{"path":"src/main/java/duke/commands/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"package duke.commands;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":" * ToDoCommand class used to represent a ToDo Command.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":" * Contains methods that","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":" * (i)    executes the ToDoCommand","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"public class ToDoCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"    public ToDoCommand() {","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"        super(\"todo\");","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"     * execute() method in ToDoCommand to add a ToDo task into the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"     * @param des   the user input into the Duke chat-box.","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"     * @param tList the TaskList object used to keep track of all tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"     * @throws DukeException if input for ToDo command is not properly formatted.","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"    public void execute(String des, TaskList tList) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"        if (des.equals(\"todo\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"            throw new DukeException(\"\\\"todo\\\" command not correctly formatted \\nPlease insert task argument\");","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":"        String description \u003d des.substring(5);","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"        ToDo atHand \u003d new ToDo(description);","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"        tList.add(atHand);","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"        System.out.println(\"Sure. The following task has been added: \");","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"chrus-chong"},"content":"        System.out.println(atHand);","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"chrus-chong"},"content":"        this.numberOfTasks(tList);","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"chrus-chong"},"content":"        Storage.createFile();","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"chrus-chong"},"content":"        Storage.writeToFile(tList);","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"chrus-chong"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"chrus-chong":39}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":" * Custom DukeException class created to catch exceptions unique to the Duke chat-box.","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"    public DukeException(String err) {","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"        super(err);","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"chrus-chong":10}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"package duke.parser;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":" * Parser class used parse user input.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":" * Contains methods that","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":" * (i)    checks for keywords present in user input and returns the keyword found.","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"public class Parser {","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"     * The checkForKeyword() method in Parser checks user input for keywords and responds","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"     * accordingly by calling the respective commands.","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"     * @param des the user input into the Duke chat-box.","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"     * @return String type object that informs the run() method which","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"     * command should be called.","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"    public String checkForKeyword(String des) {","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"        if (des.equals(\"help\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"            return \"help\";","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"        } else if (des.equals(\"bye\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"            return \"bye\";","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"        } else if (des.equals(\"list\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"            return \"list\";","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"        } else if (des.contains(\"done\") \u0026\u0026 des.startsWith(\"done\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"            try {","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"                String sNum \u003d des.substring(des.indexOf(\u0027 \u0027) + 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"                Integer.parseInt(sNum);","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"                return \"done\";","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"                return null;","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"        } else if (des.contains(\"delete\") \u0026\u0026 des.startsWith(\"delete\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"chrus-chong"},"content":"            try {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"chrus-chong"},"content":"                String sNum \u003d des.substring(des.indexOf(\u0027 \u0027) + 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"chrus-chong"},"content":"                Integer.parseInt(sNum);","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"chrus-chong"},"content":"                return \"delete\";","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"chrus-chong"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"chrus-chong"},"content":"                return null;","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"chrus-chong"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"chrus-chong"},"content":"        } else if (des.contains(\"deadline\") \u0026\u0026 des.startsWith(\"deadline\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"chrus-chong"},"content":"            return \"deadline\";","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"chrus-chong"},"content":"        } else if (des.contains(\"event\") \u0026\u0026 des.startsWith(\"event\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"chrus-chong"},"content":"            return \"event\";","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"chrus-chong"},"content":"        } else if (des.contains(\"todo\") \u0026\u0026 des.startsWith(\"todo\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"chrus-chong"},"content":"            return \"todo\";","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"chrus-chong"},"content":"        } else if (des.contains(\"find\") \u0026\u0026 des.startsWith(\"find\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"chrus-chong"},"content":"            return \"find\";","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"chrus-chong"},"content":"        return null;","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"chrus-chong"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"chrus-chong":51}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"package duke.storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import java.io.File;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":" * Storage class used to handle reading and writing to file.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":" * Contains methods that","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":" * (i)    creates data folder and tasks file.","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":" * (ii)   writes to tasks file.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":" * (iii)  reads from tasks file.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":" * (iv)   extracts date from string of text.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":" * (v)    extracts time from string of text for Deadline task.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":" * (vi)   extracts time from string of text for Event task.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"public class Storage {","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"     * The createFile() method creates a folder data and a file, tasks.txt, if file is not found in the directory.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"chrus-chong"},"content":"    public static void createFile() {","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"chrus-chong"},"content":"        File dir \u003d new File(\"data/\");","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"chrus-chong"},"content":"        File tasks \u003d new File(\"data/tasks.txt\");","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"chrus-chong"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"chrus-chong"},"content":"            dir.mkdir();","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"chrus-chong"},"content":"            if (tasks.createNewFile()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"chrus-chong"},"content":"                System.out.println(tasks.getName() + \" created\");","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"chrus-chong"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"chrus-chong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"chrus-chong"},"content":"            System.out.println(e);","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"chrus-chong"},"content":"     * The writeToFile() method writes all tasks and their respective statuses to the tasks.txt file.","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"chrus-chong"},"content":"     * @param tList the TaskList object used to keep track of all tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"chrus-chong"},"content":"    public static void writeToFile(TaskList tList) {","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"chrus-chong"},"content":"        ArrayList\u003cTask\u003e tasks \u003d tList.getTaskList();","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"chrus-chong"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"chrus-chong"},"content":"            FileWriter writer \u003d new FileWriter(\"data/tasks.txt\");","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"chrus-chong"},"content":"            for (Task t : tasks) {","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"chrus-chong"},"content":"                writer.write(t.toString() + System.lineSeparator());","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"chrus-chong"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"chrus-chong"},"content":"            writer.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"chrus-chong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"chrus-chong"},"content":"            System.out.println(e);","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"chrus-chong"},"content":"     * The readFromFile() method reads all previously entered tasks from tasks.txt and stores them in the Duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"chrus-chong"},"content":"     * @param tList tList the TaskList object used to keep track of all tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"chrus-chong"},"content":"    public static void readFromFile(TaskList tList) {","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"chrus-chong"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"chrus-chong"},"content":"            File tasks \u003d new File(\"data/tasks.txt\");","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"chrus-chong"},"content":"            Scanner sc \u003d new Scanner(tasks);","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"chrus-chong"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"chrus-chong"},"content":"                String atHand \u003d sc.nextLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"chrus-chong"},"content":"                String taskType \u003d atHand.substring(1, 2);","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"chrus-chong"},"content":"                String done \u003d (atHand.charAt(4) \u003d\u003d \u0027 \u0027) ? \" \" : \"X\";","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"chrus-chong"},"content":"                String des;","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"chrus-chong"},"content":"                Task t;","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"chrus-chong"},"content":"                if (taskType.equals(\"T\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"chrus-chong"},"content":"                    des \u003d atHand.substring(7);","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"chrus-chong"},"content":"                    t \u003d new ToDo(done, des);","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"chrus-chong"},"content":"                } else if (taskType.equals(\"E\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"chrus-chong"},"content":"                    int openBracket \u003d atHand.indexOf(\u0027(\u0027);","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"chrus-chong"},"content":"                    des \u003d atHand.substring(7, openBracket - 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"chrus-chong"},"content":"                    LocalDate date \u003d LocalDate.parse(atHand.substring(openBracket + 5, openBracket + 15));","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"chrus-chong"},"content":"                    ArrayList\u003cLocalTime\u003e startEnd \u003d extractTimeEvent(atHand);","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"chrus-chong"},"content":"                    t \u003d new Event(done, des, date, startEnd.get(0), startEnd.get(1));","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"chrus-chong"},"content":"                } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"chrus-chong"},"content":"                    int openBracket \u003d atHand.indexOf(\u0027(\u0027);","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"chrus-chong"},"content":"                    des \u003d atHand.substring(7, openBracket - 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"chrus-chong"},"content":"                    LocalDate date \u003d LocalDate.parse(atHand.substring(openBracket + 5, openBracket + 15));","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"chrus-chong"},"content":"                    LocalTime time \u003d extractTimeDeadline(atHand);","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"chrus-chong"},"content":"                    t \u003d new Deadline(done, des, date, time);","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"chrus-chong"},"content":"                } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"chrus-chong"},"content":"                    throw new DukeException(\"Task Type not recognised. Task not loaded into Duke chat-bot\");","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"chrus-chong"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"chrus-chong"},"content":"                tList.add(t);","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"chrus-chong"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"chrus-chong"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"chrus-chong"},"content":"            return;","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"chrus-chong"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"chrus-chong"},"content":"            System.out.println(e);","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":107,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":109,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"chrus-chong"},"content":"     * The extractDate() method extracts the date of a task from a string of text.","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"chrus-chong"},"content":"     * @param des the user input into the Duke chat-box.","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"chrus-chong"},"content":"     * @return LocalDate object to represent the date that accompanies a task.","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"chrus-chong"},"content":"     * @throws DukeException when date is not properly formatted.","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"chrus-chong"},"content":"    public static LocalDate extractDate(String des) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":117,"author":{"gitId":"chrus-chong"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":118,"author":{"gitId":"chrus-chong"},"content":"            int startIndex \u003d des.indexOf(\u0027/\u0027) + 4;","lastModifiedDate":"2021-08-23"},{"lineNumber":119,"author":{"gitId":"chrus-chong"},"content":"            int endIndex \u003d startIndex + 10;","lastModifiedDate":"2021-08-23"},{"lineNumber":120,"author":{"gitId":"chrus-chong"},"content":"            return LocalDate.parse(des.substring(startIndex, endIndex));","lastModifiedDate":"2021-08-23"},{"lineNumber":121,"author":{"gitId":"chrus-chong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":122,"author":{"gitId":"chrus-chong"},"content":"            throw new DukeException(\"Date not properly formatted\");","lastModifiedDate":"2021-08-23"},{"lineNumber":123,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":124,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":125,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":126,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":127,"author":{"gitId":"chrus-chong"},"content":"     * The extractTimeDeadline() method extracts the time of a Deadline task from a string of text.","lastModifiedDate":"2021-08-25"},{"lineNumber":128,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":129,"author":{"gitId":"chrus-chong"},"content":"     * @param des the user input into the Duke chat-box.","lastModifiedDate":"2021-08-25"},{"lineNumber":130,"author":{"gitId":"chrus-chong"},"content":"     * @return LocalTime object to represent the time that accompanies a Deadline task.","lastModifiedDate":"2021-08-25"},{"lineNumber":131,"author":{"gitId":"chrus-chong"},"content":"     * @throws DukeException when date is not properly formatted.","lastModifiedDate":"2021-08-25"},{"lineNumber":132,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":133,"author":{"gitId":"chrus-chong"},"content":"    public static LocalTime extractTimeDeadline(String des) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":134,"author":{"gitId":"chrus-chong"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":135,"author":{"gitId":"chrus-chong"},"content":"            String time \u003d des.substring(des.lastIndexOf(\u0027-\u0027) + 4, des.lastIndexOf(\u0027-\u0027) + 9);","lastModifiedDate":"2021-08-23"},{"lineNumber":136,"author":{"gitId":"chrus-chong"},"content":"            return LocalTime.parse(time);","lastModifiedDate":"2021-08-23"},{"lineNumber":137,"author":{"gitId":"chrus-chong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":138,"author":{"gitId":"chrus-chong"},"content":"            throw new DukeException(\"Time not properly formatted\");","lastModifiedDate":"2021-08-23"},{"lineNumber":139,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":140,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":141,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":142,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":143,"author":{"gitId":"chrus-chong"},"content":"     * The extractTimeEvent() method extracts the timings of an Event task from a string of text.","lastModifiedDate":"2021-08-25"},{"lineNumber":144,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":145,"author":{"gitId":"chrus-chong"},"content":"     * @param des the user input into the Duke chat-box.","lastModifiedDate":"2021-08-25"},{"lineNumber":146,"author":{"gitId":"chrus-chong"},"content":"     * @return ArrayList of LocalTime objects to represent the timings that accompany an Event task.","lastModifiedDate":"2021-08-25"},{"lineNumber":147,"author":{"gitId":"chrus-chong"},"content":"     * The start time is stored at index 0 while the end time is stored at index 1.","lastModifiedDate":"2021-08-25"},{"lineNumber":148,"author":{"gitId":"chrus-chong"},"content":"     * @throws DukeException when date is not properly formatted.","lastModifiedDate":"2021-08-25"},{"lineNumber":149,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":150,"author":{"gitId":"chrus-chong"},"content":"    public static ArrayList\u003cLocalTime\u003e extractTimeEvent(String des) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":151,"author":{"gitId":"chrus-chong"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":152,"author":{"gitId":"chrus-chong"},"content":"            String time \u003d des.substring(des.lastIndexOf(\u0027-\u0027) + 4, des.lastIndexOf(\u0027-\u0027) + 15);","lastModifiedDate":"2021-08-23"},{"lineNumber":153,"author":{"gitId":"chrus-chong"},"content":"            String firstTime \u003d time.substring(0, 5);","lastModifiedDate":"2021-08-23"},{"lineNumber":154,"author":{"gitId":"chrus-chong"},"content":"            String secondTime \u003d time.substring(6);","lastModifiedDate":"2021-08-23"},{"lineNumber":155,"author":{"gitId":"chrus-chong"},"content":"            ArrayList\u003cLocalTime\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":156,"author":{"gitId":"chrus-chong"},"content":"            result.add(LocalTime.parse(firstTime));","lastModifiedDate":"2021-08-23"},{"lineNumber":157,"author":{"gitId":"chrus-chong"},"content":"            result.add(LocalTime.parse(secondTime));","lastModifiedDate":"2021-08-23"},{"lineNumber":158,"author":{"gitId":"chrus-chong"},"content":"            return result;","lastModifiedDate":"2021-08-23"},{"lineNumber":159,"author":{"gitId":"chrus-chong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":160,"author":{"gitId":"chrus-chong"},"content":"            throw new DukeException(\"Time not properly formatted\");","lastModifiedDate":"2021-08-23"},{"lineNumber":161,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":162,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":163,"author":{"gitId":"chrus-chong"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"chrus-chong":163}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":" * Deadline class used to represent a task that has an end date.","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":" * Contains method that","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":" * (i) formats the toString() output such that the result facilitates ease of reading.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":" * (ii) overrides the Parent toString method to display the task type,","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":" * as well as status and description.","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"    private LocalDate date;","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"    private LocalTime time;","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"     * Default constructor for Deadline.","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"     * @param description String object representing the task being input into Duke.","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"     * @param date LocalDate object representing the date the Deadline task is due by.","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"     * @param time LocalTime object representing the time that the Deadline task is due by.","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"    public Deadline(String description, LocalDate date, LocalTime time) {","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"     * Overloaded constructor for Deadline.","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"     * @param done String object representing whether the task is completed.","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"chrus-chong"},"content":"     * @param description String object representing the task being input into Duke.","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"chrus-chong"},"content":"     * @param date LocalDate object representing the date the Deadline task is due by.","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"chrus-chong"},"content":"     * @param time LocalTime object representing the time that the Deadline task is due by.","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"chrus-chong"},"content":"    public Deadline(String done, String description, LocalDate date, LocalTime time) {","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"chrus-chong"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"chrus-chong"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"chrus-chong"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"chrus-chong"},"content":"        if ((done.equals(\"X\"))) {","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"chrus-chong"},"content":"            this.setIsDone(true);","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"chrus-chong"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"chrus-chong"},"content":"            this.setIsDone(false);","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"chrus-chong"},"content":"     * The formatString() method formats the String representation of a Deadline task to facilitate ease of reading.","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"chrus-chong"},"content":"     * @return String object to represent Deadline task in a more readable manner.","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"chrus-chong"},"content":"    public String formatString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"chrus-chong"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" \"","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"chrus-chong"},"content":"                + this.time.format(DateTimeFormatter.ofPattern(\"h:mma\")) + \")\";","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":59,"author":{"gitId":"chrus-chong"},"content":"     * Overriding toString method to display the relevant information","lastModifiedDate":"2021-08-15"},{"lineNumber":60,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":61,"author":{"gitId":"chrus-chong"},"content":"     * @return String type object that includes the task type, parent","lastModifiedDate":"2021-08-15"},{"lineNumber":62,"author":{"gitId":"chrus-chong"},"content":"     * toString method(), and due date.","lastModifiedDate":"2021-08-15"},{"lineNumber":63,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":64,"author":{"gitId":"chrus-chong"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":65,"author":{"gitId":"chrus-chong"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":66,"author":{"gitId":"chrus-chong"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.date + \" \" + this.time + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":68,"author":{"gitId":"chrus-chong"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"chrus-chong":68}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":" * Event class used to represent a task that has a start and end date.","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":" * Contains method that","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":" * (i) formats the toString() output such that the result facilitates ease of reading.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":" * (ii) overrides the Parent toString method to display the task type,","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":" * as well as status and description.","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"    private final LocalDate date;","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"    private final LocalTime start;","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"    private final LocalTime end;","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"     * Default constructor for Event.","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"     * @param description String object representing the task being input into Duke.","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"     * @param date LocalDate object representing the date the Event task is on.","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"     * @param start LocalTime object representing the start time of the Event task.","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"     * @param end LocalTime object representing the end time of the Event task.","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"    public Event(String description, LocalDate date, LocalTime start, LocalTime end) {","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":"        this.start \u003d start;","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"        this.end \u003d end;","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"chrus-chong"},"content":"     * Overloaded constructor for Event.","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"chrus-chong"},"content":"     * @param done String object representing whether the task is completed.","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"chrus-chong"},"content":"     * @param description String object representing the task being input into Duke.","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"chrus-chong"},"content":"     * @param date LocalDate object representing the date the Event task is on.","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"chrus-chong"},"content":"     * @param start LocalTime object representing the start time of the Event task.","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"chrus-chong"},"content":"     * @param end LocalTime object representing the end time of the Event task.","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"chrus-chong"},"content":"    public Event(String done, String description, LocalDate date, LocalTime start, LocalTime end) {","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"chrus-chong"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"chrus-chong"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"chrus-chong"},"content":"        this.start \u003d start;","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"chrus-chong"},"content":"        this.end \u003d end;","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"chrus-chong"},"content":"        if ((done.equals(\"X\"))) {","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"chrus-chong"},"content":"            this.setIsDone(true);","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"chrus-chong"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"chrus-chong"},"content":"            this.setIsDone(false);","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"chrus-chong"},"content":"     * The formatString() method formats the String representation of an Event task to facilitate ease of reading.","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"chrus-chong"},"content":"     * @return String object to represent Event task in a more readable manner.","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"chrus-chong"},"content":"    public String formatString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"chrus-chong"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"chrus-chong"},"content":"                + \" (at: \" + this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"chrus-chong"},"content":"                + \" \" + this.start.format(DateTimeFormatter.ofPattern(\"h:mma\")) + \" to \"","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"chrus-chong"},"content":"                + this.end.format(DateTimeFormatter.ofPattern(\"h:mma\")) + \")\";","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":66,"author":{"gitId":"chrus-chong"},"content":"     * Overriding toString method to display the relevant information","lastModifiedDate":"2021-08-15"},{"lineNumber":67,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":68,"author":{"gitId":"chrus-chong"},"content":"     * @return String type object that includes the task type, parent","lastModifiedDate":"2021-08-15"},{"lineNumber":69,"author":{"gitId":"chrus-chong"},"content":"     * toString method(), and timeframe.","lastModifiedDate":"2021-08-15"},{"lineNumber":70,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":71,"author":{"gitId":"chrus-chong"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":72,"author":{"gitId":"chrus-chong"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":73,"author":{"gitId":"chrus-chong"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.date + \" \" + this.start + \" \" + this.end + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":75,"author":{"gitId":"chrus-chong"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"chrus-chong":75}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":" * Task class used as Parent class for Deadline, ToDo, and Event.","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":" * Contains methods that","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":" * (i) gets the corresponding status icon of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":" * (ii) marks the existing instance of Task as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":" * (iii) gets task description attribute.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":" * (iv) gets task isDone attribute.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":" * (v) sets task isDone attribute to given value.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":" * (vi) overrides the default toString method to display the status and description.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"    private String description;","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"     * Constructor for Task","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"     * @param description the overview of the task for a particular instance.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"     * The getStatusIcon() method returns the string representation of whether the task isDone.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"     * @return String type object that displays an \"[X]\" if the task is done, else \"[ ]\" is displayed.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"chrus-chong"},"content":"        return (this.isDone ? \"[X]\" : \"[ ]\"); //mark done task with an X","lastModifiedDate":"2021-08-14"},{"lineNumber":34,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":35,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":36,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"chrus-chong"},"content":"     * The markAsDone() method marks the task as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"chrus-chong"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-14"},{"lineNumber":40,"author":{"gitId":"chrus-chong"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-14"},{"lineNumber":41,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":42,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":43,"author":{"gitId":"chrus-chong"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-14"},{"lineNumber":44,"author":{"gitId":"chrus-chong"},"content":"        return this.description;","lastModifiedDate":"2021-08-14"},{"lineNumber":45,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":46,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":47,"author":{"gitId":"chrus-chong"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2021-08-14"},{"lineNumber":48,"author":{"gitId":"chrus-chong"},"content":"        return this.isDone;","lastModifiedDate":"2021-08-14"},{"lineNumber":49,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":50,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":51,"author":{"gitId":"chrus-chong"},"content":"    protected void setIsDone(boolean done) {","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"chrus-chong"},"content":"        this.isDone \u003d done;","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"chrus-chong"},"content":"        return;","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"chrus-chong"},"content":"     * Formats the String returned by toString() in a more readable manner.","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"chrus-chong"},"content":"     * @return String object that represents formatted toString() output for ease of reading.","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"chrus-chong"},"content":"    public abstract String formatString();","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":63,"author":{"gitId":"chrus-chong"},"content":"     * Overriding toString method to display the relevant information.","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":65,"author":{"gitId":"chrus-chong"},"content":"     * @return String type object that includes the status icon and task description.","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":67,"author":{"gitId":"chrus-chong"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":68,"author":{"gitId":"chrus-chong"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":69,"author":{"gitId":"chrus-chong"},"content":"        return this.getStatusIcon() + \" \" + this.description;","lastModifiedDate":"2021-08-14"},{"lineNumber":70,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":71,"author":{"gitId":"chrus-chong"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"chrus-chong":71}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":" * TaskList class used to represent the list of tasks in Duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":" * Contains methods that","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":" * (i) adds a task.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":" * (ii) removes a task.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":" * (iii) gets the taskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"public class TaskList {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"    private final ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"     * The add() method adds a task into the list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"     * @param t the Task object that is to be added.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"    public void add(Task t) {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"        taskList.add(t);","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"        return;","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"     * The remove() method removes a task from the list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"     * @param num the int object that represents index of the task in the taskList that is to be removed.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"    public void remove(int num) {","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"        taskList.remove(num - 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"        return;","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"chrus-chong"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"chrus-chong"},"content":"        return taskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"chrus-chong"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"chrus-chong":38}},{"path":"src/main/java/duke/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":" * ToDo class used to represent a task that has no fixed date.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":" * Contains method that","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":" * (i) overrides the Parent toString method to display the task type,","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":" * as well as status and description.","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"     * Default constructor for ToDo.","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"     * @param description String object representing the task being input into ToDo.","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"     * Default constructor for ToDo.","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"     * @param done String object representing whether the task is completed.","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"     * @param description String object representing the task being input into ToDo.","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"    public ToDo(String done, String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"        if ((done.equals(\"X\"))) {","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"            this.setIsDone(true);","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"            this.setIsDone(false);","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"chrus-chong"},"content":"    public String formatString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"chrus-chong"},"content":"        return toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":38,"author":{"gitId":"chrus-chong"},"content":"     * Overriding toString method to display the relevant information.","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":40,"author":{"gitId":"chrus-chong"},"content":"     * @return String type object that includes the task type and parent toString() method.","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":42,"author":{"gitId":"chrus-chong"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":43,"author":{"gitId":"chrus-chong"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":44,"author":{"gitId":"chrus-chong"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-14"},{"lineNumber":45,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":46,"author":{"gitId":"chrus-chong"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"chrus-chong":46}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"package duke.ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"import duke.commands.ByeCommand;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"import duke.commands.Command;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"import duke.commands.DeadlineCommand;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"import duke.commands.DeleteCommand;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"import duke.commands.DoneCommand;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"import duke.commands.EventCommand;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"import duke.commands.FindCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"import duke.commands.HelpCommand;","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"import duke.commands.ListCommand;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"import duke.commands.ToDoCommand;","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":" * Ui class used as handle interactions with the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":" * Contains methods that","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":" * (i) runs the Duke chat-bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"public class Ui {","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"     * The run method runs the Duke chat-bot.","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":"     * By taking in user keyboard input, it checks the input for keywords","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"     * and responds accordingly. Invalid input is caught and the custom","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"     * DukeException is thrown to inform the user that the command is invalid","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"     * or not properly formatted.","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"chrus-chong"},"content":"    public void run() {","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"chrus-chong"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"chrus-chong"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"chrus-chong"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"chrus-chong"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"chrus-chong"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"chrus-chong"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"chrus-chong"},"content":"        System.out.println(\"What can I do for you today?\");","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"chrus-chong"},"content":"        TaskList tList \u003d new TaskList();","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"chrus-chong"},"content":"        Storage.readFromFile(tList);","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"chrus-chong"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"chrus-chong"},"content":"        Parser p \u003d new Parser();","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"chrus-chong"},"content":"        while (true) {","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"chrus-chong"},"content":"            String des \u003d sc.nextLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"chrus-chong"},"content":"            String command \u003d p.checkForKeyword(des);","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"chrus-chong"},"content":"            try {","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"chrus-chong"},"content":"                this.printLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"chrus-chong"},"content":"                if (command \u003d\u003d null) {","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"chrus-chong"},"content":"                    throw new DukeException(des + \" is not a recognised command\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"chrus-chong"},"content":"                            + \"Please refer to the available commands using the \\\"allCmd\\\" command\");","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"chrus-chong"},"content":"                } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"chrus-chong"},"content":"                    Command c \u003d null;","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"chrus-chong"},"content":"                    if (command.equals(\"bye\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"chrus-chong"},"content":"                        c \u003d new ByeCommand();","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"chrus-chong"},"content":"                        c.execute(des, tList);","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"chrus-chong"},"content":"                        printLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"chrus-chong"},"content":"                        break;","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"chrus-chong"},"content":"                    }","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"chrus-chong"},"content":"                    if (command.equals(\"help\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"chrus-chong"},"content":"                        c \u003d new HelpCommand();","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"chrus-chong"},"content":"                    }","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"chrus-chong"},"content":"                    if (command.equals(\"list\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"chrus-chong"},"content":"                        c \u003d new ListCommand();","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"chrus-chong"},"content":"                    }","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"chrus-chong"},"content":"                    if (command.equals(\"done\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"chrus-chong"},"content":"                        c \u003d new DoneCommand();","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"chrus-chong"},"content":"                    }","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"chrus-chong"},"content":"                    if (command.equals(\"deadline\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"chrus-chong"},"content":"                        c \u003d new DeadlineCommand();","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"chrus-chong"},"content":"                    }","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"chrus-chong"},"content":"                    if (command.equals(\"event\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"chrus-chong"},"content":"                        c \u003d new EventCommand();","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"chrus-chong"},"content":"                    }","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"chrus-chong"},"content":"                    if (command.equals(\"todo\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"chrus-chong"},"content":"                        c \u003d new ToDoCommand();","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"chrus-chong"},"content":"                    }","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"chrus-chong"},"content":"                    if (command.equals(\"delete\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"chrus-chong"},"content":"                        c \u003d new DeleteCommand();","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"chrus-chong"},"content":"                    }","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"chrus-chong"},"content":"                    if (command.equals(\"find\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"chrus-chong"},"content":"                        c \u003d new FindCommand();","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"chrus-chong"},"content":"                    }","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"chrus-chong"},"content":"                    c.execute(des, tList);","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"chrus-chong"},"content":"                    this.printLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"chrus-chong"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"chrus-chong"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"chrus-chong"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"chrus-chong"},"content":"                this.printLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"chrus-chong"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":107,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":109,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":110,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":111,"author":{"gitId":"chrus-chong"},"content":"     * Prints a line for separation purposes.","lastModifiedDate":"2021-08-27"},{"lineNumber":112,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":113,"author":{"gitId":"chrus-chong"},"content":"    public static void printLine() {","lastModifiedDate":"2021-08-23"},{"lineNumber":114,"author":{"gitId":"chrus-chong"},"content":"        System.out.println(\"____________________________________________________\"","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"chrus-chong"},"content":"                + \"_________________________________________________________\");","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":117,"author":{"gitId":"chrus-chong"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"chrus-chong":117}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"package duke.parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"    public void checkForKeyword_noCommand_nullReturned() {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"        String result \u003d parser.checkForKeyword(\"\");","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(null, result);","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"    public void checkForKeyword_invalidCommand_nullReturned() {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"        String result \u003d parser.checkForKeyword(\"hello\");","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(null, result);","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"        result \u003d parser.checkForKeyword(\"goodbye\");","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(null, result);","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"        result \u003d parser.checkForKeyword(\" deadline\");","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(null, result);","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"        result \u003d parser.checkForKeyword(\"byebye\");","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(null, result);","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"        result \u003d parser.checkForKeyword(\"to\");","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(null, result);","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"chrus-chong"},"content":"        result \u003d parser.checkForKeyword(\"deleted\");","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(null, result);","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"chrus-chong"},"content":"        result \u003d parser.checkForKeyword(\"remove\");","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(null, result);","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"chrus-chong"},"content":"        result \u003d parser.checkForKeyword(\"logout\");","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(null, result);","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"chrus-chong"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"chrus-chong"},"content":"    public void checkForKeyword_byeCommand_stringReturned() {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"chrus-chong"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"chrus-chong"},"content":"        String result \u003d parser.checkForKeyword(\"bye\");","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(\"bye\", result);","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"chrus-chong"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"chrus-chong"},"content":"    public void checkForKeyword_deadlineCommand_stringReturned() {","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"chrus-chong"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"chrus-chong"},"content":"        String result \u003d parser.checkForKeyword(\"deadline\");","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(\"deadline\", result);","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"chrus-chong"},"content":"        result \u003d parser.checkForKeyword(\"deadline /by 2359\");","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(\"deadline\", result);","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"chrus-chong"},"content":"        result \u003d parser.checkForKeyword(\"deadline help prof /at 2012-03-14 23:59\");","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(\"deadline\", result);","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"chrus-chong"},"content":"        result \u003d parser.checkForKeyword(\"deadline finish lab /by 2014-03-12 01:11\");","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(\"deadline\", result);","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"chrus-chong"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"chrus-chong"},"content":"    public void checkForKeyword_eventCommand_stringReturned() {","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"chrus-chong"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"chrus-chong"},"content":"        String result \u003d parser.checkForKeyword(\"event\");","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(\"event\", result);","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"chrus-chong"},"content":"        result \u003d parser.checkForKeyword(\"event /at 2359-0000\");","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(\"event\", result);","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"chrus-chong"},"content":"        result \u003d parser.checkForKeyword(\"event finish lab /by 2014-03-12 01:11\");","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(\"event\", result);","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"chrus-chong"},"content":"        result \u003d parser.checkForKeyword(\"event zoom prof /at 2012-03-14 23:59 00:00\");","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(\"event\", result);","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"chrus-chong"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"chrus-chong"},"content":"    public void checkForKeyword_todoCommand_stringReturned() {","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"chrus-chong"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"chrus-chong"},"content":"        String result \u003d parser.checkForKeyword(\"todo\");","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(\"todo\", result);","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"chrus-chong"},"content":"        result \u003d parser.checkForKeyword(\"todo /at 2359-0000\");","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(\"todo\", result);","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"chrus-chong"},"content":"        result \u003d parser.checkForKeyword(\"todo finish lab /by 2014-03-12 01:11\");","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(\"todo\", result);","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"chrus-chong"},"content":"        result \u003d parser.checkForKeyword(\"todo zoom prof and take minutes\");","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(\"todo\", result);","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"chrus-chong"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"chrus-chong"},"content":"    public void checkForKeyword_deleteCommand_stringReturned() {","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"chrus-chong"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"chrus-chong"},"content":"        String result;","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"chrus-chong"},"content":"        result \u003d parser.checkForKeyword(\"delete -1\");","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(\"delete\", result);","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"chrus-chong"},"content":"        result \u003d parser.checkForKeyword(\"delete 2\");","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(\"delete\", result);","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"chrus-chong"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"chrus-chong"},"content":"    public void checkForKeyword_doneCommand_stringReturned() {","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"chrus-chong"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"chrus-chong"},"content":"        String result;","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"chrus-chong"},"content":"        result \u003d parser.checkForKeyword(\"done -1\");","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(\"done\", result);","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"chrus-chong"},"content":"        result \u003d parser.checkForKeyword(\"done 2\");","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(\"done\", result);","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"chrus-chong"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":125,"author":{"gitId":"chrus-chong"},"content":"    public void checkForKeyword_helpCommand_stringReturned() {","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"chrus-chong"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"chrus-chong"},"content":"        String result \u003d parser.checkForKeyword(\"help\");","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(\"help\", result);","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":132,"author":{"gitId":"chrus-chong"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":133,"author":{"gitId":"chrus-chong"},"content":"    public void checkForKeyword_listCommand_stringReturned() {","lastModifiedDate":"2021-08-24"},{"lineNumber":134,"author":{"gitId":"chrus-chong"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-24"},{"lineNumber":135,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":136,"author":{"gitId":"chrus-chong"},"content":"        String result \u003d parser.checkForKeyword(\"list\");","lastModifiedDate":"2021-08-24"},{"lineNumber":137,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(\"list\", result);","lastModifiedDate":"2021-08-24"},{"lineNumber":138,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":139,"author":{"gitId":"chrus-chong"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"chrus-chong":139}},{"path":"src/test/java/duke/tasks/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"    public void toString_stringReturned() {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"        String des \u003d \"deadline submit assignment\";","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"        LocalTime time \u003d LocalTime.parse(\"20:00\");","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"        LocalDate date \u003d LocalDate.parse(\"2012-03-12\");","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"        Deadline task \u003d new Deadline(des, date, time);","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(\"[D][ ] deadline submit assignment (by: 2012-03-12 20:00)\", task.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"    public void formatString_stringReturned() {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"        String des \u003d \"deadline submit assignment\";","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"        LocalTime time \u003d LocalTime.parse(\"20:00\");","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"        LocalDate date \u003d LocalDate.parse(\"2012-03-12\");","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"        Deadline task \u003d new Deadline(des, date, time);","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(\"[D][ ] deadline submit assignment (by: Mar 12 2012 8:00pm)\", task.formatString());","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"chrus-chong":28}},{"path":"src/test/java/duke/tasks/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"public class EventTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"    public void toString_stringReturned() {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"        String des \u003d \"event zoom meeting\";","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"        LocalTime start \u003d LocalTime.parse(\"08:00\");","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"        LocalTime end \u003d LocalTime.parse(\"23:00\");","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"        LocalDate date \u003d LocalDate.parse(\"2012-03-12\");","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"        Event task \u003d new Event(des, date, start, end);","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(\"[E][ ] event zoom meeting (at: 2012-03-12 08:00 23:00)\", task.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"    public void formatString_stringReturned() {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"        String des \u003d \"event zoom meeting\";","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"        LocalTime start \u003d LocalTime.parse(\"08:00\");","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"        LocalTime end \u003d LocalTime.parse(\"23:00\");","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"        LocalDate date \u003d LocalDate.parse(\"2012-03-12\");","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"        Event task \u003d new Event(des, date, start, end);","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(\"[E][ ] event zoom meeting (at: Mar 12 2012 8:00am to 11:00pm)\", task.formatString());","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"}","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"chrus-chong":31}},{"path":"src/test/java/duke/tasks/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"public class ToDoTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"    public void toString_stringReturned() {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"        String des \u003d \"start working on portfolio website\";","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"        ToDo task \u003d new ToDo(des);","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(\"[T][ ] start working on portfolio website\", task.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"chrus-chong":14}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"event go clubbing /at 23rd January 2am-4am","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"hello","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"todo brush teeth everyday","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"event zoom meeting with profs /at 3rd August 9pm-10pm","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"done 3","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"done 2","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"done 3","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"deadline complete Math Homework /by 23/04/21","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"event Sentosa outing /at 25/07/21 8am-4pm","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"event","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"event zoom meeting with Teo","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"event zoom meeting with Teo /at","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"event complete CS Project /by 2359HRs","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"event /at 2300-0000HRs","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"event zoom meeting with Teo /at 2pm-3pm","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"deadline","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"deadline complete CS Project","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"deadline complete CS Project /by","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"deadline complete CS Project /at 2359HRs","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"deadline /by 2359HRs","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"deadline complete CS Project /by 2359HRs","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"todo","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"done 7, 3","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"done 7","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":"delete 1, 2","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"delete 1","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"delete 3","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"delete 300","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"chrus-chong"},"content":"bye bye","lastModifiedDate":"2021-08-14"},{"lineNumber":34,"author":{"gitId":"chrus-chong"},"content":"bye","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"chrus-chong":34}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"javac  -cp ..\\src\\main\\java\\duke\\tasks -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\tasks\\*.java","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"javac  -cp ..\\src\\main\\java\\duke\\ui -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\ui\\*.java","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"javac  -cp ..\\src\\main\\java\\duke\\commands -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\commands\\*.java","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"javac  -cp ..\\src\\main\\java\\duke\\exceptions -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\exceptions\\*.java","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"javac  -cp ..\\src\\main\\java\\duke\\parser -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\parser\\*.java","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"javac  -cp ..\\src\\main\\java\\duke\\storage -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\storage\\*.java","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"javac  -cp ..\\src\\main\\java\\duke -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"REM run the program, feed duke.commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"chrus-chong":10,"-":18}}]
