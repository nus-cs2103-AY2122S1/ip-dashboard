[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":" * Deadline class used to represent a task that has an end date.","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":" * Contains method that","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":" * (i) overrides the Parent toString method to display the task type,","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":" * as well as status and description.","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"    protected String date;","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"    public Deadline(String description, String date) {","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"    public Deadline(String done, String description, String date) {","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"        this.isDone \u003d (done.equals(\"X\")) ? true : false;","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"     * Overriding toString method to display the relevant information","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"     * @return String type object that includes the task type, parent","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"     * toString method(), and due date.","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.date + \")\";","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"chrus-chong":31}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"import java.io.File;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":" * Duke class used to run the Duke chat-bot.","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":" * Contains methods that","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":" * (i)    runs the chat-bot","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":" * (ii)   exits the chat-bot","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":" * (iii)  lists all tasks","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":" * (iv)   marks a given task as done","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":" * (v)    deletes a given task","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":" * (vi)   inputs a deadline task","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":" * (vii)  inputs an event task","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":" * (viii) inputs a todo task","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":" * (ix)   check user input for keywords","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":" * (x)    display separator line","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":" * (xi)   displays total number of tasks","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":" * (xii)  counts number of spaces in user input","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":" * (xiii) provide a user guide","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"    private final ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":"        Duke chatBot \u003d new Duke();","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"        chatBot.run();","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":35,"author":{"gitId":"chrus-chong"},"content":"     * The run method runs the Duke chat-bot.","lastModifiedDate":"2021-08-15"},{"lineNumber":36,"author":{"gitId":"chrus-chong"},"content":"     * By taking in user keyboard input, it checks the input for keywords","lastModifiedDate":"2021-08-15"},{"lineNumber":37,"author":{"gitId":"chrus-chong"},"content":"     * and responds accordingly. Invalid input is caught and the custom","lastModifiedDate":"2021-08-15"},{"lineNumber":38,"author":{"gitId":"chrus-chong"},"content":"     * DukeException is thrown to inform the user that the command is invalid","lastModifiedDate":"2021-08-15"},{"lineNumber":39,"author":{"gitId":"chrus-chong"},"content":"     * or not properly formatted.","lastModifiedDate":"2021-08-15"},{"lineNumber":40,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":41,"author":{"gitId":"chrus-chong"},"content":"    private void run() {","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":48,"author":{"gitId":"chrus-chong"},"content":"        System.out.println(\"What can I do for you today?\");","lastModifiedDate":"2021-08-14"},{"lineNumber":49,"author":{"gitId":"chrus-chong"},"content":"        readFromFile();","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"chrus-chong"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-14"},{"lineNumber":51,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":52,"author":{"gitId":"chrus-chong"},"content":"        while (true) {","lastModifiedDate":"2021-08-14"},{"lineNumber":53,"author":{"gitId":"chrus-chong"},"content":"            String des \u003d sc.nextLine();","lastModifiedDate":"2021-08-14"},{"lineNumber":54,"author":{"gitId":"chrus-chong"},"content":"            String command \u003d checkForKeyword(des);","lastModifiedDate":"2021-08-14"},{"lineNumber":55,"author":{"gitId":"chrus-chong"},"content":"            try {","lastModifiedDate":"2021-08-14"},{"lineNumber":56,"author":{"gitId":"chrus-chong"},"content":"                this.printLine();","lastModifiedDate":"2021-08-16"},{"lineNumber":57,"author":{"gitId":"chrus-chong"},"content":"                if (command \u003d\u003d null) {","lastModifiedDate":"2021-08-14"},{"lineNumber":58,"author":{"gitId":"chrus-chong"},"content":"                    throw new DukeException(des + \" is not a recognised command\\nPlease refer to the available commands using the \\\"allCmd\\\" command\");","lastModifiedDate":"2021-08-14"},{"lineNumber":59,"author":{"gitId":"chrus-chong"},"content":"                } else {","lastModifiedDate":"2021-08-14"},{"lineNumber":60,"author":{"gitId":"chrus-chong"},"content":"                    if (command.equals(\"bye\")) {","lastModifiedDate":"2021-08-14"},{"lineNumber":61,"author":{"gitId":"chrus-chong"},"content":"                        this.byeCommand();","lastModifiedDate":"2021-08-16"},{"lineNumber":62,"author":{"gitId":"chrus-chong"},"content":"                        this.printLine();","lastModifiedDate":"2021-08-16"},{"lineNumber":63,"author":{"gitId":"chrus-chong"},"content":"                        break;","lastModifiedDate":"2021-08-14"},{"lineNumber":64,"author":{"gitId":"chrus-chong"},"content":"                    }","lastModifiedDate":"2021-08-14"},{"lineNumber":65,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":66,"author":{"gitId":"chrus-chong"},"content":"                    if (command.equals(\"allCmd\")) {","lastModifiedDate":"2021-08-14"},{"lineNumber":67,"author":{"gitId":"chrus-chong"},"content":"                        this.possibleCommands();","lastModifiedDate":"2021-08-16"},{"lineNumber":68,"author":{"gitId":"chrus-chong"},"content":"                    }","lastModifiedDate":"2021-08-14"},{"lineNumber":69,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":70,"author":{"gitId":"chrus-chong"},"content":"                    if (command.equals(\"list\")) {","lastModifiedDate":"2021-08-14"},{"lineNumber":71,"author":{"gitId":"chrus-chong"},"content":"                        this.listCommand();","lastModifiedDate":"2021-08-16"},{"lineNumber":72,"author":{"gitId":"chrus-chong"},"content":"                    }","lastModifiedDate":"2021-08-14"},{"lineNumber":73,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":74,"author":{"gitId":"chrus-chong"},"content":"                    if (command.equals(\"done\")) {","lastModifiedDate":"2021-08-14"},{"lineNumber":75,"author":{"gitId":"chrus-chong"},"content":"                        this.doneCommand(des);","lastModifiedDate":"2021-08-16"},{"lineNumber":76,"author":{"gitId":"chrus-chong"},"content":"                    }","lastModifiedDate":"2021-08-14"},{"lineNumber":77,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":78,"author":{"gitId":"chrus-chong"},"content":"                    if (command.equals(\"deadline\")) {","lastModifiedDate":"2021-08-14"},{"lineNumber":79,"author":{"gitId":"chrus-chong"},"content":"                        this.deadlineCommand(des);","lastModifiedDate":"2021-08-16"},{"lineNumber":80,"author":{"gitId":"chrus-chong"},"content":"                    }","lastModifiedDate":"2021-08-14"},{"lineNumber":81,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":82,"author":{"gitId":"chrus-chong"},"content":"                    if (command.equals(\"event\")) {","lastModifiedDate":"2021-08-14"},{"lineNumber":83,"author":{"gitId":"chrus-chong"},"content":"                        this.eventCommand(des);","lastModifiedDate":"2021-08-16"},{"lineNumber":84,"author":{"gitId":"chrus-chong"},"content":"                    }","lastModifiedDate":"2021-08-14"},{"lineNumber":85,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":86,"author":{"gitId":"chrus-chong"},"content":"                    if (command.equals(\"todo\")) {","lastModifiedDate":"2021-08-14"},{"lineNumber":87,"author":{"gitId":"chrus-chong"},"content":"                        this.toDoCommand(des);","lastModifiedDate":"2021-08-16"},{"lineNumber":88,"author":{"gitId":"chrus-chong"},"content":"                    }","lastModifiedDate":"2021-08-14"},{"lineNumber":89,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":90,"author":{"gitId":"chrus-chong"},"content":"                    if (command.equals(\"delete\")) {","lastModifiedDate":"2021-08-14"},{"lineNumber":91,"author":{"gitId":"chrus-chong"},"content":"                        this.deleteCommand(des);","lastModifiedDate":"2021-08-16"},{"lineNumber":92,"author":{"gitId":"chrus-chong"},"content":"                    }","lastModifiedDate":"2021-08-14"},{"lineNumber":93,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":94,"author":{"gitId":"chrus-chong"},"content":"                    this.printLine();","lastModifiedDate":"2021-08-16"},{"lineNumber":95,"author":{"gitId":"chrus-chong"},"content":"                }","lastModifiedDate":"2021-08-14"},{"lineNumber":96,"author":{"gitId":"chrus-chong"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-14"},{"lineNumber":97,"author":{"gitId":"chrus-chong"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2021-08-14"},{"lineNumber":98,"author":{"gitId":"chrus-chong"},"content":"                this.printLine();","lastModifiedDate":"2021-08-16"},{"lineNumber":99,"author":{"gitId":"chrus-chong"},"content":"            }","lastModifiedDate":"2021-08-14"},{"lineNumber":100,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":101,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":102,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":103,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":104,"author":{"gitId":"chrus-chong"},"content":"    private void byeCommand() {","lastModifiedDate":"2021-08-16"},{"lineNumber":105,"author":{"gitId":"chrus-chong"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-14"},{"lineNumber":106,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":107,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":108,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":109,"author":{"gitId":"chrus-chong"},"content":"     * The listCommand() method lists all tasks.","lastModifiedDate":"2021-08-15"},{"lineNumber":110,"author":{"gitId":"chrus-chong"},"content":"     * Individual tasks are typecast into their respective classes in order for","lastModifiedDate":"2021-08-15"},{"lineNumber":111,"author":{"gitId":"chrus-chong"},"content":"     * the toString() methods to work as intended.","lastModifiedDate":"2021-08-15"},{"lineNumber":112,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":113,"author":{"gitId":"chrus-chong"},"content":"    private void listCommand() {","lastModifiedDate":"2021-08-16"},{"lineNumber":114,"author":{"gitId":"chrus-chong"},"content":"        int count \u003d 1;","lastModifiedDate":"2021-08-14"},{"lineNumber":115,"author":{"gitId":"chrus-chong"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-08-14"},{"lineNumber":116,"author":{"gitId":"chrus-chong"},"content":"        for (Task t : taskList) {","lastModifiedDate":"2021-08-14"},{"lineNumber":117,"author":{"gitId":"chrus-chong"},"content":"            System.out.print(count + \". \");","lastModifiedDate":"2021-08-14"},{"lineNumber":118,"author":{"gitId":"chrus-chong"},"content":"            if (t instanceof Deadline) {","lastModifiedDate":"2021-08-14"},{"lineNumber":119,"author":{"gitId":"chrus-chong"},"content":"                Deadline d \u003d (Deadline) t;","lastModifiedDate":"2021-08-14"},{"lineNumber":120,"author":{"gitId":"chrus-chong"},"content":"                System.out.println(d);","lastModifiedDate":"2021-08-14"},{"lineNumber":121,"author":{"gitId":"chrus-chong"},"content":"            } else if (t instanceof Event) {","lastModifiedDate":"2021-08-14"},{"lineNumber":122,"author":{"gitId":"chrus-chong"},"content":"                Event e \u003d (Event) t;","lastModifiedDate":"2021-08-14"},{"lineNumber":123,"author":{"gitId":"chrus-chong"},"content":"                System.out.println(e);","lastModifiedDate":"2021-08-14"},{"lineNumber":124,"author":{"gitId":"chrus-chong"},"content":"            } else if (t instanceof ToDo) {","lastModifiedDate":"2021-08-14"},{"lineNumber":125,"author":{"gitId":"chrus-chong"},"content":"                ToDo td \u003d (ToDo) t;","lastModifiedDate":"2021-08-14"},{"lineNumber":126,"author":{"gitId":"chrus-chong"},"content":"                System.out.println(td);","lastModifiedDate":"2021-08-14"},{"lineNumber":127,"author":{"gitId":"chrus-chong"},"content":"            } else {","lastModifiedDate":"2021-08-14"},{"lineNumber":128,"author":{"gitId":"chrus-chong"},"content":"                System.out.println(t.toString());","lastModifiedDate":"2021-08-14"},{"lineNumber":129,"author":{"gitId":"chrus-chong"},"content":"            }","lastModifiedDate":"2021-08-14"},{"lineNumber":130,"author":{"gitId":"chrus-chong"},"content":"            count++;","lastModifiedDate":"2021-08-14"},{"lineNumber":131,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":132,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":133,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":134,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":135,"author":{"gitId":"chrus-chong"},"content":"     * The doneCommand() method marks a given Task as completed.","lastModifiedDate":"2021-08-15"},{"lineNumber":136,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":137,"author":{"gitId":"chrus-chong"},"content":"     * @param des the user input into the Duke chat-box.","lastModifiedDate":"2021-08-15"},{"lineNumber":138,"author":{"gitId":"chrus-chong"},"content":"     * @throws DukeException if done command is not formatted properly","lastModifiedDate":"2021-08-15"},{"lineNumber":139,"author":{"gitId":"chrus-chong"},"content":"     *                       or if task has already been completed.","lastModifiedDate":"2021-08-15"},{"lineNumber":140,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":141,"author":{"gitId":"chrus-chong"},"content":"    private void doneCommand(String des) throws DukeException {","lastModifiedDate":"2021-08-16"},{"lineNumber":142,"author":{"gitId":"chrus-chong"},"content":"        String sNum \u003d des.substring(des.lastIndexOf(\u0027 \u0027) + 1);","lastModifiedDate":"2021-08-14"},{"lineNumber":143,"author":{"gitId":"chrus-chong"},"content":"        int num \u003d Integer.parseInt(sNum);","lastModifiedDate":"2021-08-14"},{"lineNumber":144,"author":{"gitId":"chrus-chong"},"content":"        if (num \u003c\u003d 0 || num \u003e taskList.size()) {","lastModifiedDate":"2021-08-14"},{"lineNumber":145,"author":{"gitId":"chrus-chong"},"content":"            throw new DukeException(\"The input number is not a valid task number \\nPlease refer to the task list using the \\\"list\\\" command\");","lastModifiedDate":"2021-08-14"},{"lineNumber":146,"author":{"gitId":"chrus-chong"},"content":"        } else if (this.countSpaces(des) \u003e 1) {","lastModifiedDate":"2021-08-16"},{"lineNumber":147,"author":{"gitId":"chrus-chong"},"content":"            throw new DukeException(\"Too many arguments being provided to \\\"done\\\" \\nPlease refer to proper usage of commands with \\\"allCmd\\\"\");","lastModifiedDate":"2021-08-14"},{"lineNumber":148,"author":{"gitId":"chrus-chong"},"content":"        } else {","lastModifiedDate":"2021-08-14"},{"lineNumber":149,"author":{"gitId":"chrus-chong"},"content":"            Task atHand \u003d taskList.get(num - 1);","lastModifiedDate":"2021-08-14"},{"lineNumber":150,"author":{"gitId":"chrus-chong"},"content":"            if (atHand.getIsDone()) {","lastModifiedDate":"2021-08-14"},{"lineNumber":151,"author":{"gitId":"chrus-chong"},"content":"                throw new DukeException(\"You have already completed this task.\");","lastModifiedDate":"2021-08-14"},{"lineNumber":152,"author":{"gitId":"chrus-chong"},"content":"            } else {","lastModifiedDate":"2021-08-14"},{"lineNumber":153,"author":{"gitId":"chrus-chong"},"content":"                atHand.markAsDone();","lastModifiedDate":"2021-08-14"},{"lineNumber":154,"author":{"gitId":"chrus-chong"},"content":"                System.out.println(\"I see that you have completed a task. Keep up the good work!\");","lastModifiedDate":"2021-08-14"},{"lineNumber":155,"author":{"gitId":"chrus-chong"},"content":"                System.out.println();","lastModifiedDate":"2021-08-14"},{"lineNumber":156,"author":{"gitId":"chrus-chong"},"content":"                System.out.println(\"This task has now been marked as completed\");","lastModifiedDate":"2021-08-14"},{"lineNumber":157,"author":{"gitId":"chrus-chong"},"content":"                System.out.println(atHand.getStatusIcon() + \" \" + atHand.getDescription());","lastModifiedDate":"2021-08-14"},{"lineNumber":158,"author":{"gitId":"chrus-chong"},"content":"            }","lastModifiedDate":"2021-08-14"},{"lineNumber":159,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":160,"author":{"gitId":"chrus-chong"},"content":"        createFile();","lastModifiedDate":"2021-08-18"},{"lineNumber":161,"author":{"gitId":"chrus-chong"},"content":"        writeToFile();","lastModifiedDate":"2021-08-18"},{"lineNumber":162,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":163,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":164,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":165,"author":{"gitId":"chrus-chong"},"content":"     * The deleteCommand() method deletes a given command.","lastModifiedDate":"2021-08-15"},{"lineNumber":166,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":167,"author":{"gitId":"chrus-chong"},"content":"     * @param des the user input into the Duke chat-box.","lastModifiedDate":"2021-08-15"},{"lineNumber":168,"author":{"gitId":"chrus-chong"},"content":"     * @throws DukeException if input number is not valid or if too many arguments","lastModifiedDate":"2021-08-15"},{"lineNumber":169,"author":{"gitId":"chrus-chong"},"content":"     *                       are provided to deleteCommand().","lastModifiedDate":"2021-08-15"},{"lineNumber":170,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":171,"author":{"gitId":"chrus-chong"},"content":"    private void deleteCommand(String des) throws DukeException {","lastModifiedDate":"2021-08-16"},{"lineNumber":172,"author":{"gitId":"chrus-chong"},"content":"        String sNum \u003d des.substring(des.lastIndexOf(\u0027 \u0027) + 1);","lastModifiedDate":"2021-08-14"},{"lineNumber":173,"author":{"gitId":"chrus-chong"},"content":"        int num \u003d Integer.parseInt(sNum);","lastModifiedDate":"2021-08-14"},{"lineNumber":174,"author":{"gitId":"chrus-chong"},"content":"        if (num \u003c\u003d 0 || num \u003e taskList.size()) {","lastModifiedDate":"2021-08-14"},{"lineNumber":175,"author":{"gitId":"chrus-chong"},"content":"            throw new DukeException(\"The input number is not a valid task number \\nPlease refer to the task list using the \\\"list\\\" command\");","lastModifiedDate":"2021-08-14"},{"lineNumber":176,"author":{"gitId":"chrus-chong"},"content":"        } else if (this.countSpaces(des) \u003e 1) {","lastModifiedDate":"2021-08-16"},{"lineNumber":177,"author":{"gitId":"chrus-chong"},"content":"            throw new DukeException(\"Too many arguments being provided to \\\"delete\\\" \\nPlease refer to proper usage of commands with \\\"allCmd\\\"\");","lastModifiedDate":"2021-08-18"},{"lineNumber":178,"author":{"gitId":"chrus-chong"},"content":"        } else {","lastModifiedDate":"2021-08-14"},{"lineNumber":179,"author":{"gitId":"chrus-chong"},"content":"            taskList.remove(num - 1);","lastModifiedDate":"2021-08-14"},{"lineNumber":180,"author":{"gitId":"chrus-chong"},"content":"            System.out.println(\"Successfully removed task \" + num);","lastModifiedDate":"2021-08-14"},{"lineNumber":181,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":182,"author":{"gitId":"chrus-chong"},"content":"        createFile();","lastModifiedDate":"2021-08-18"},{"lineNumber":183,"author":{"gitId":"chrus-chong"},"content":"        writeToFile();","lastModifiedDate":"2021-08-18"},{"lineNumber":184,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":185,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":186,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":187,"author":{"gitId":"chrus-chong"},"content":"     * The deadlineCommand() method inputs a Deadline task into the Duke chat-bot.","lastModifiedDate":"2021-08-15"},{"lineNumber":188,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":189,"author":{"gitId":"chrus-chong"},"content":"     * @param des the user input into the Duke chat-box.","lastModifiedDate":"2021-08-15"},{"lineNumber":190,"author":{"gitId":"chrus-chong"},"content":"     * @throws DukeException if input is not correctly formatted with task and due","lastModifiedDate":"2021-08-15"},{"lineNumber":191,"author":{"gitId":"chrus-chong"},"content":"     *                       date arguments.","lastModifiedDate":"2021-08-15"},{"lineNumber":192,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":193,"author":{"gitId":"chrus-chong"},"content":"    private void deadlineCommand(String des) throws DukeException {","lastModifiedDate":"2021-08-16"},{"lineNumber":194,"author":{"gitId":"chrus-chong"},"content":"        if (des.equals(\"deadline\")) {","lastModifiedDate":"2021-08-14"},{"lineNumber":195,"author":{"gitId":"chrus-chong"},"content":"            throw new DukeException(\"\\\"deadline\\\" command not correctly formatted \\nPlease insert task and due date arguments\");","lastModifiedDate":"2021-08-14"},{"lineNumber":196,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":197,"author":{"gitId":"chrus-chong"},"content":"        if (!des.contains(\"/by\")) {","lastModifiedDate":"2021-08-15"},{"lineNumber":198,"author":{"gitId":"chrus-chong"},"content":"            throw new DukeException(\"\\\"deadline\\\" command not correctly formatted \\nPlease do not forget to include \\\"by\\\" and insert due date argument\");","lastModifiedDate":"2021-08-14"},{"lineNumber":199,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":200,"author":{"gitId":"chrus-chong"},"content":"        try {","lastModifiedDate":"2021-08-14"},{"lineNumber":201,"author":{"gitId":"chrus-chong"},"content":"            String description \u003d des.substring(9, des.indexOf(\u0027/\u0027) - 1);","lastModifiedDate":"2021-08-15"},{"lineNumber":202,"author":{"gitId":"chrus-chong"},"content":"            String date \u003d des.substring(des.indexOf(\u0027/\u0027) + 4); //+4 as we do not want to include the \"/by \" in our output","lastModifiedDate":"2021-08-14"},{"lineNumber":203,"author":{"gitId":"chrus-chong"},"content":"            Deadline atHand \u003d new Deadline(description, date);","lastModifiedDate":"2021-08-17"},{"lineNumber":204,"author":{"gitId":"chrus-chong"},"content":"            taskList.add(atHand);","lastModifiedDate":"2021-08-14"},{"lineNumber":205,"author":{"gitId":"chrus-chong"},"content":"            System.out.println(\"Sure. The following task has been added: \");","lastModifiedDate":"2021-08-14"},{"lineNumber":206,"author":{"gitId":"chrus-chong"},"content":"            System.out.println(atHand);","lastModifiedDate":"2021-08-17"},{"lineNumber":207,"author":{"gitId":"chrus-chong"},"content":"            this.numberOfTasks();","lastModifiedDate":"2021-08-16"},{"lineNumber":208,"author":{"gitId":"chrus-chong"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-14"},{"lineNumber":209,"author":{"gitId":"chrus-chong"},"content":"            throw new DukeException(\"\\\"deadline\\\" command not correctly formatted\");","lastModifiedDate":"2021-08-15"},{"lineNumber":210,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":211,"author":{"gitId":"chrus-chong"},"content":"        createFile();","lastModifiedDate":"2021-08-18"},{"lineNumber":212,"author":{"gitId":"chrus-chong"},"content":"        writeToFile();","lastModifiedDate":"2021-08-18"},{"lineNumber":213,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":214,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":215,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":216,"author":{"gitId":"chrus-chong"},"content":"     * The eventCommand() method inputs an Event task into the Duke chat-bot.","lastModifiedDate":"2021-08-16"},{"lineNumber":217,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":218,"author":{"gitId":"chrus-chong"},"content":"     * @param des the user input into the Duke chat-box.","lastModifiedDate":"2021-08-15"},{"lineNumber":219,"author":{"gitId":"chrus-chong"},"content":"     * @throws DukeException if input is not correctly formatted with task and","lastModifiedDate":"2021-08-15"},{"lineNumber":220,"author":{"gitId":"chrus-chong"},"content":"     *                       timeframe arguments.","lastModifiedDate":"2021-08-15"},{"lineNumber":221,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":222,"author":{"gitId":"chrus-chong"},"content":"    private void eventCommand(String des) throws DukeException {","lastModifiedDate":"2021-08-16"},{"lineNumber":223,"author":{"gitId":"chrus-chong"},"content":"        if (des.equals(\"event\")) {","lastModifiedDate":"2021-08-14"},{"lineNumber":224,"author":{"gitId":"chrus-chong"},"content":"            throw new DukeException(\"\\\"event\\\" command not correctly formatted \\nPlease insert task and timeframe arguments\");","lastModifiedDate":"2021-08-14"},{"lineNumber":225,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":226,"author":{"gitId":"chrus-chong"},"content":"        if (!des.contains(\"/at\")) {","lastModifiedDate":"2021-08-15"},{"lineNumber":227,"author":{"gitId":"chrus-chong"},"content":"            throw new DukeException(\"\\\"event\\\" command not correctly formatted \\nPlease do not forget to include \\\"at\\\" and insert timeframe argument\");","lastModifiedDate":"2021-08-15"},{"lineNumber":228,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":229,"author":{"gitId":"chrus-chong"},"content":"        try {","lastModifiedDate":"2021-08-14"},{"lineNumber":230,"author":{"gitId":"chrus-chong"},"content":"            String description \u003d des.substring(6, des.indexOf(\u0027/\u0027) - 1);","lastModifiedDate":"2021-08-15"},{"lineNumber":231,"author":{"gitId":"chrus-chong"},"content":"            String timeframe \u003d des.substring(des.indexOf(\u0027/\u0027) + 4); //+4 as we do not want to include the \"/by \" in our output","lastModifiedDate":"2021-08-14"},{"lineNumber":232,"author":{"gitId":"chrus-chong"},"content":"            Event atHand \u003d new Event(description, timeframe);","lastModifiedDate":"2021-08-17"},{"lineNumber":233,"author":{"gitId":"chrus-chong"},"content":"            taskList.add(atHand);","lastModifiedDate":"2021-08-14"},{"lineNumber":234,"author":{"gitId":"chrus-chong"},"content":"            System.out.println(\"Sure. The following task has been added: \");","lastModifiedDate":"2021-08-14"},{"lineNumber":235,"author":{"gitId":"chrus-chong"},"content":"            System.out.println(atHand);","lastModifiedDate":"2021-08-17"},{"lineNumber":236,"author":{"gitId":"chrus-chong"},"content":"            this.numberOfTasks();","lastModifiedDate":"2021-08-16"},{"lineNumber":237,"author":{"gitId":"chrus-chong"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-14"},{"lineNumber":238,"author":{"gitId":"chrus-chong"},"content":"            throw new DukeException(\"\\\"event\\\" command not correctly formatted\");","lastModifiedDate":"2021-08-15"},{"lineNumber":239,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":240,"author":{"gitId":"chrus-chong"},"content":"        createFile();","lastModifiedDate":"2021-08-18"},{"lineNumber":241,"author":{"gitId":"chrus-chong"},"content":"        writeToFile();","lastModifiedDate":"2021-08-18"},{"lineNumber":242,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":243,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":244,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":245,"author":{"gitId":"chrus-chong"},"content":"     * The toDoCommand() method inputs a ToDo task into the Duke chat-bot.","lastModifiedDate":"2021-08-15"},{"lineNumber":246,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":247,"author":{"gitId":"chrus-chong"},"content":"     * @param des the user input into the Duke chat-box.","lastModifiedDate":"2021-08-15"},{"lineNumber":248,"author":{"gitId":"chrus-chong"},"content":"     * @throws DukeException if input is not correctly formatted with task argument.","lastModifiedDate":"2021-08-15"},{"lineNumber":249,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":250,"author":{"gitId":"chrus-chong"},"content":"    private void toDoCommand(String des) throws DukeException {","lastModifiedDate":"2021-08-16"},{"lineNumber":251,"author":{"gitId":"chrus-chong"},"content":"        if (des.equals(\"todo\")) {","lastModifiedDate":"2021-08-14"},{"lineNumber":252,"author":{"gitId":"chrus-chong"},"content":"            throw new DukeException(\"\\\"todo\\\" command not correctly formatted \\nPlease insert task argument\");","lastModifiedDate":"2021-08-14"},{"lineNumber":253,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":254,"author":{"gitId":"chrus-chong"},"content":"        String description \u003d des.substring(5);","lastModifiedDate":"2021-08-14"},{"lineNumber":255,"author":{"gitId":"chrus-chong"},"content":"        ToDo atHand \u003d new ToDo(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":256,"author":{"gitId":"chrus-chong"},"content":"        taskList.add(atHand);","lastModifiedDate":"2021-08-14"},{"lineNumber":257,"author":{"gitId":"chrus-chong"},"content":"        System.out.println(\"Sure. The following task has been added: \");","lastModifiedDate":"2021-08-14"},{"lineNumber":258,"author":{"gitId":"chrus-chong"},"content":"        System.out.println(atHand);","lastModifiedDate":"2021-08-17"},{"lineNumber":259,"author":{"gitId":"chrus-chong"},"content":"        this.numberOfTasks();","lastModifiedDate":"2021-08-16"},{"lineNumber":260,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":261,"author":{"gitId":"chrus-chong"},"content":"        createFile();","lastModifiedDate":"2021-08-18"},{"lineNumber":262,"author":{"gitId":"chrus-chong"},"content":"        writeToFile();","lastModifiedDate":"2021-08-18"},{"lineNumber":263,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":264,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":265,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":266,"author":{"gitId":"chrus-chong"},"content":"     * The checkForKeyword() method checks user input for keywords and responds","lastModifiedDate":"2021-08-15"},{"lineNumber":267,"author":{"gitId":"chrus-chong"},"content":"     * accordingly by calling the respective commands.","lastModifiedDate":"2021-08-15"},{"lineNumber":268,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":269,"author":{"gitId":"chrus-chong"},"content":"     * @param des the user input into the Duke chat-box.","lastModifiedDate":"2021-08-15"},{"lineNumber":270,"author":{"gitId":"chrus-chong"},"content":"     * @return String type object that informs the run() method which","lastModifiedDate":"2021-08-16"},{"lineNumber":271,"author":{"gitId":"chrus-chong"},"content":"     * command should be called.","lastModifiedDate":"2021-08-15"},{"lineNumber":272,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":273,"author":{"gitId":"chrus-chong"},"content":"    private String checkForKeyword(String des) {","lastModifiedDate":"2021-08-16"},{"lineNumber":274,"author":{"gitId":"chrus-chong"},"content":"        if (des.equals(\"allCmd\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":275,"author":{"gitId":"chrus-chong"},"content":"            return \"allCmd\";","lastModifiedDate":"2021-08-14"},{"lineNumber":276,"author":{"gitId":"chrus-chong"},"content":"        } else if (des.equals(\"bye\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":277,"author":{"gitId":"chrus-chong"},"content":"            return \"bye\";","lastModifiedDate":"2021-08-14"},{"lineNumber":278,"author":{"gitId":"chrus-chong"},"content":"        } else if (des.equals(\"list\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":279,"author":{"gitId":"chrus-chong"},"content":"            return \"list\";","lastModifiedDate":"2021-08-14"},{"lineNumber":280,"author":{"gitId":"chrus-chong"},"content":"        } else if (des.contains(\"done\") \u0026\u0026 des.startsWith(\"done\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":281,"author":{"gitId":"chrus-chong"},"content":"            try {","lastModifiedDate":"2021-08-14"},{"lineNumber":282,"author":{"gitId":"chrus-chong"},"content":"                String sNum \u003d des.substring(des.indexOf(\u0027 \u0027) + 1);","lastModifiedDate":"2021-08-18"},{"lineNumber":283,"author":{"gitId":"chrus-chong"},"content":"                Integer.parseInt(sNum);","lastModifiedDate":"2021-08-17"},{"lineNumber":284,"author":{"gitId":"chrus-chong"},"content":"                return \"done\";","lastModifiedDate":"2021-08-14"},{"lineNumber":285,"author":{"gitId":"chrus-chong"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-14"},{"lineNumber":286,"author":{"gitId":"chrus-chong"},"content":"                return null;","lastModifiedDate":"2021-08-14"},{"lineNumber":287,"author":{"gitId":"chrus-chong"},"content":"            }","lastModifiedDate":"2021-08-14"},{"lineNumber":288,"author":{"gitId":"chrus-chong"},"content":"        } else if (des.contains(\"delete\") \u0026\u0026 des.startsWith(\"delete\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":289,"author":{"gitId":"chrus-chong"},"content":"            try {","lastModifiedDate":"2021-08-18"},{"lineNumber":290,"author":{"gitId":"chrus-chong"},"content":"                String sNum \u003d des.substring(des.indexOf(\u0027 \u0027) + 1);","lastModifiedDate":"2021-08-18"},{"lineNumber":291,"author":{"gitId":"chrus-chong"},"content":"                Integer.parseInt(sNum);","lastModifiedDate":"2021-08-18"},{"lineNumber":292,"author":{"gitId":"chrus-chong"},"content":"                return \"delete\";","lastModifiedDate":"2021-08-14"},{"lineNumber":293,"author":{"gitId":"chrus-chong"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":294,"author":{"gitId":"chrus-chong"},"content":"                return null;","lastModifiedDate":"2021-08-18"},{"lineNumber":295,"author":{"gitId":"chrus-chong"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":296,"author":{"gitId":"chrus-chong"},"content":"        } else if (des.contains(\"deadline\") \u0026\u0026 des.startsWith(\"deadline\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":297,"author":{"gitId":"chrus-chong"},"content":"            return \"deadline\";","lastModifiedDate":"2021-08-14"},{"lineNumber":298,"author":{"gitId":"chrus-chong"},"content":"        } else if (des.contains(\"event\") \u0026\u0026 des.startsWith(\"event\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":299,"author":{"gitId":"chrus-chong"},"content":"            return \"event\";","lastModifiedDate":"2021-08-14"},{"lineNumber":300,"author":{"gitId":"chrus-chong"},"content":"        } else if (des.contains(\"todo\") \u0026\u0026 des.startsWith(\"todo\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":301,"author":{"gitId":"chrus-chong"},"content":"            return \"todo\";","lastModifiedDate":"2021-08-14"},{"lineNumber":302,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":303,"author":{"gitId":"chrus-chong"},"content":"        return null;","lastModifiedDate":"2021-08-14"},{"lineNumber":304,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":305,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":306,"author":{"gitId":"chrus-chong"},"content":"    private void printLine() {","lastModifiedDate":"2021-08-16"},{"lineNumber":307,"author":{"gitId":"chrus-chong"},"content":"        System.out.println(\"_____________________________________________________________________________________________________________\");","lastModifiedDate":"2021-08-14"},{"lineNumber":308,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":309,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":310,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":311,"author":{"gitId":"chrus-chong"},"content":"     * The numberOfTasks() method informs the user of the total number of tasks.","lastModifiedDate":"2021-08-15"},{"lineNumber":312,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":313,"author":{"gitId":"chrus-chong"},"content":"    private void numberOfTasks() {","lastModifiedDate":"2021-08-16"},{"lineNumber":314,"author":{"gitId":"chrus-chong"},"content":"        if (taskList.size() \u003d\u003d 1) {","lastModifiedDate":"2021-08-14"},{"lineNumber":315,"author":{"gitId":"chrus-chong"},"content":"            System.out.println(\"You now have \" + taskList.size() + \" task in the list\");","lastModifiedDate":"2021-08-14"},{"lineNumber":316,"author":{"gitId":"chrus-chong"},"content":"        } else {","lastModifiedDate":"2021-08-14"},{"lineNumber":317,"author":{"gitId":"chrus-chong"},"content":"            System.out.println(\"You now have \" + taskList.size() + \" tasks in the list\");","lastModifiedDate":"2021-08-14"},{"lineNumber":318,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":319,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":320,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":321,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":322,"author":{"gitId":"chrus-chong"},"content":"     * The countSpaces method counts the number of blank spaces in a given String.","lastModifiedDate":"2021-08-15"},{"lineNumber":323,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":324,"author":{"gitId":"chrus-chong"},"content":"     * @param des the user input into the Duke chat-box.","lastModifiedDate":"2021-08-15"},{"lineNumber":325,"author":{"gitId":"chrus-chong"},"content":"     * @return Integer type object that represents the number of blank spaces in","lastModifiedDate":"2021-08-15"},{"lineNumber":326,"author":{"gitId":"chrus-chong"},"content":"     * the user input.","lastModifiedDate":"2021-08-15"},{"lineNumber":327,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":328,"author":{"gitId":"chrus-chong"},"content":"    private int countSpaces(String des) {","lastModifiedDate":"2021-08-16"},{"lineNumber":329,"author":{"gitId":"chrus-chong"},"content":"        int count \u003d 0;","lastModifiedDate":"2021-08-14"},{"lineNumber":330,"author":{"gitId":"chrus-chong"},"content":"        for (int i \u003d 0; i \u003c des.length(); i++) {","lastModifiedDate":"2021-08-14"},{"lineNumber":331,"author":{"gitId":"chrus-chong"},"content":"            if (des.charAt(i) \u003d\u003d \u0027 \u0027) {","lastModifiedDate":"2021-08-14"},{"lineNumber":332,"author":{"gitId":"chrus-chong"},"content":"                count++;","lastModifiedDate":"2021-08-14"},{"lineNumber":333,"author":{"gitId":"chrus-chong"},"content":"            }","lastModifiedDate":"2021-08-14"},{"lineNumber":334,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":335,"author":{"gitId":"chrus-chong"},"content":"        return count;","lastModifiedDate":"2021-08-14"},{"lineNumber":336,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":337,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":338,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":339,"author":{"gitId":"chrus-chong"},"content":"     * The possibleCommands() method serves as an in-built user-guide that","lastModifiedDate":"2021-08-15"},{"lineNumber":340,"author":{"gitId":"chrus-chong"},"content":"     * furnishes the user with information on how to use and format all","lastModifiedDate":"2021-08-15"},{"lineNumber":341,"author":{"gitId":"chrus-chong"},"content":"     * the commands available.","lastModifiedDate":"2021-08-15"},{"lineNumber":342,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":343,"author":{"gitId":"chrus-chong"},"content":"    private void possibleCommands() {","lastModifiedDate":"2021-08-16"},{"lineNumber":344,"author":{"gitId":"chrus-chong"},"content":"        System.out.println(\"The possible commands are as follows:\");","lastModifiedDate":"2021-08-14"},{"lineNumber":345,"author":{"gitId":"chrus-chong"},"content":"        System.out.println();","lastModifiedDate":"2021-08-14"},{"lineNumber":346,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":347,"author":{"gitId":"chrus-chong"},"content":"        System.out.println(\"1. bye  -------- exit the Duke chat-bot\");","lastModifiedDate":"2021-08-17"},{"lineNumber":348,"author":{"gitId":"chrus-chong"},"content":"        System.out.println();","lastModifiedDate":"2021-08-14"},{"lineNumber":349,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":350,"author":{"gitId":"chrus-chong"},"content":"        System.out.println(\"2. list -------- list all tasks\");","lastModifiedDate":"2021-08-14"},{"lineNumber":351,"author":{"gitId":"chrus-chong"},"content":"        System.out.println();","lastModifiedDate":"2021-08-14"},{"lineNumber":352,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":353,"author":{"gitId":"chrus-chong"},"content":"        System.out.println(\"3. done -------- Usage --\u003e done x, where x is an integer.\");","lastModifiedDate":"2021-08-14"},{"lineNumber":354,"author":{"gitId":"chrus-chong"},"content":"        System.out.println(\"               - Marks the corresponding task as completed\");","lastModifiedDate":"2021-08-14"},{"lineNumber":355,"author":{"gitId":"chrus-chong"},"content":"        System.out.println();","lastModifiedDate":"2021-08-14"},{"lineNumber":356,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":357,"author":{"gitId":"chrus-chong"},"content":"        System.out.println(\"4. todo -------- Usage --\u003e \\\"todo borrow book\\\"\");","lastModifiedDate":"2021-08-14"},{"lineNumber":358,"author":{"gitId":"chrus-chong"},"content":"        System.out.println(\"               - Inputs the a ToDo task into the task list\");","lastModifiedDate":"2021-08-14"},{"lineNumber":359,"author":{"gitId":"chrus-chong"},"content":"        System.out.println();","lastModifiedDate":"2021-08-14"},{"lineNumber":360,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":361,"author":{"gitId":"chrus-chong"},"content":"        System.out.println(\"5. deadline ---- Usage --\u003e \\\"deadline submit essay /by Sunday \\\", remember not to miss the \\\"/by\\\" symbol!\");","lastModifiedDate":"2021-08-14"},{"lineNumber":362,"author":{"gitId":"chrus-chong"},"content":"        System.out.println(\"               - Inputs the an Deadline task into the task list\");","lastModifiedDate":"2021-08-14"},{"lineNumber":363,"author":{"gitId":"chrus-chong"},"content":"        System.out.println();","lastModifiedDate":"2021-08-14"},{"lineNumber":364,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":365,"author":{"gitId":"chrus-chong"},"content":"        System.out.println(\"6. event ------- Usage --\u003e \\\"event project meeting /at Mon 2-4pm \\\", remember not to miss the \\\"/at\\\" symbol!\");","lastModifiedDate":"2021-08-14"},{"lineNumber":366,"author":{"gitId":"chrus-chong"},"content":"        System.out.println(\"               - Inputs the an Event task into the task list\");","lastModifiedDate":"2021-08-14"},{"lineNumber":367,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":368,"author":{"gitId":"chrus-chong"},"content":"        System.out.println(\"7. delete ------ Usage --\u003e delete x, where x is an integer.\");","lastModifiedDate":"2021-08-15"},{"lineNumber":369,"author":{"gitId":"chrus-chong"},"content":"        System.out.println(\"               - Deletes the corresponding task\");","lastModifiedDate":"2021-08-15"},{"lineNumber":370,"author":{"gitId":"chrus-chong"},"content":"        System.out.println();","lastModifiedDate":"2021-08-15"},{"lineNumber":371,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":372,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":373,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":374,"author":{"gitId":"chrus-chong"},"content":"    private void createFile() {","lastModifiedDate":"2021-08-18"},{"lineNumber":375,"author":{"gitId":"chrus-chong"},"content":"        File dir \u003d new File(\"data/\");","lastModifiedDate":"2021-08-18"},{"lineNumber":376,"author":{"gitId":"chrus-chong"},"content":"        File tasks \u003d new File(\"data/tasks.txt\");","lastModifiedDate":"2021-08-18"},{"lineNumber":377,"author":{"gitId":"chrus-chong"},"content":"        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":378,"author":{"gitId":"chrus-chong"},"content":"            dir.mkdir();","lastModifiedDate":"2021-08-18"},{"lineNumber":379,"author":{"gitId":"chrus-chong"},"content":"            if (tasks.createNewFile()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":380,"author":{"gitId":"chrus-chong"},"content":"                System.out.println(tasks.getName() + \" created\");","lastModifiedDate":"2021-08-18"},{"lineNumber":381,"author":{"gitId":"chrus-chong"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":382,"author":{"gitId":"chrus-chong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":383,"author":{"gitId":"chrus-chong"},"content":"            System.out.println(e);","lastModifiedDate":"2021-08-18"},{"lineNumber":384,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":385,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":386,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":387,"author":{"gitId":"chrus-chong"},"content":"    private void writeToFile() {","lastModifiedDate":"2021-08-18"},{"lineNumber":388,"author":{"gitId":"chrus-chong"},"content":"        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":389,"author":{"gitId":"chrus-chong"},"content":"            FileWriter writer \u003d new FileWriter(\"data/tasks.txt\");","lastModifiedDate":"2021-08-18"},{"lineNumber":390,"author":{"gitId":"chrus-chong"},"content":"            for (Task t : taskList) {","lastModifiedDate":"2021-08-18"},{"lineNumber":391,"author":{"gitId":"chrus-chong"},"content":"                writer.write(t.toString() + System.lineSeparator());","lastModifiedDate":"2021-08-18"},{"lineNumber":392,"author":{"gitId":"chrus-chong"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":393,"author":{"gitId":"chrus-chong"},"content":"            writer.close();","lastModifiedDate":"2021-08-18"},{"lineNumber":394,"author":{"gitId":"chrus-chong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":395,"author":{"gitId":"chrus-chong"},"content":"            System.out.println(e);","lastModifiedDate":"2021-08-18"},{"lineNumber":396,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":397,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":398,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":399,"author":{"gitId":"chrus-chong"},"content":"    private void readFromFile() {","lastModifiedDate":"2021-08-18"},{"lineNumber":400,"author":{"gitId":"chrus-chong"},"content":"        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":401,"author":{"gitId":"chrus-chong"},"content":"            File tasks \u003d new File(\"data/tasks.txt\");","lastModifiedDate":"2021-08-18"},{"lineNumber":402,"author":{"gitId":"chrus-chong"},"content":"            Scanner sc \u003d new Scanner(tasks);","lastModifiedDate":"2021-08-18"},{"lineNumber":403,"author":{"gitId":"chrus-chong"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":404,"author":{"gitId":"chrus-chong"},"content":"                String atHand \u003d sc.nextLine();","lastModifiedDate":"2021-08-18"},{"lineNumber":405,"author":{"gitId":"chrus-chong"},"content":"                String taskType \u003d atHand.substring(1, 2);","lastModifiedDate":"2021-08-18"},{"lineNumber":406,"author":{"gitId":"chrus-chong"},"content":"                String done \u003d (atHand.charAt(4) \u003d\u003d \u0027 \u0027) ? \" \" : \"X\";","lastModifiedDate":"2021-08-19"},{"lineNumber":407,"author":{"gitId":"chrus-chong"},"content":"                String des;","lastModifiedDate":"2021-08-18"},{"lineNumber":408,"author":{"gitId":"chrus-chong"},"content":"                String time;","lastModifiedDate":"2021-08-21"},{"lineNumber":409,"author":{"gitId":"chrus-chong"},"content":"                Task t;","lastModifiedDate":"2021-08-18"},{"lineNumber":410,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":411,"author":{"gitId":"chrus-chong"},"content":"                if (taskType.equals(\"T\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":412,"author":{"gitId":"chrus-chong"},"content":"                    des \u003d atHand.substring(7);","lastModifiedDate":"2021-08-18"},{"lineNumber":413,"author":{"gitId":"chrus-chong"},"content":"                    t \u003d new ToDo(done, des);","lastModifiedDate":"2021-08-18"},{"lineNumber":414,"author":{"gitId":"chrus-chong"},"content":"                } else if (taskType.equals(\"E\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":415,"author":{"gitId":"chrus-chong"},"content":"                    int openBracket \u003d atHand.indexOf(\u0027(\u0027);","lastModifiedDate":"2021-08-18"},{"lineNumber":416,"author":{"gitId":"chrus-chong"},"content":"                    int closeBracket \u003d atHand.indexOf(\u0027)\u0027);","lastModifiedDate":"2021-08-18"},{"lineNumber":417,"author":{"gitId":"chrus-chong"},"content":"                    des \u003d atHand.substring(7, openBracket - 1);","lastModifiedDate":"2021-08-18"},{"lineNumber":418,"author":{"gitId":"chrus-chong"},"content":"                    time \u003d atHand.substring(openBracket + 5, closeBracket);","lastModifiedDate":"2021-08-18"},{"lineNumber":419,"author":{"gitId":"chrus-chong"},"content":"                    t \u003d new Event(done, des, time);","lastModifiedDate":"2021-08-18"},{"lineNumber":420,"author":{"gitId":"chrus-chong"},"content":"                } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":421,"author":{"gitId":"chrus-chong"},"content":"                    int openBracket \u003d atHand.indexOf(\u0027(\u0027);","lastModifiedDate":"2021-08-18"},{"lineNumber":422,"author":{"gitId":"chrus-chong"},"content":"                    int closeBracket \u003d atHand.indexOf(\u0027)\u0027);","lastModifiedDate":"2021-08-18"},{"lineNumber":423,"author":{"gitId":"chrus-chong"},"content":"                    des \u003d atHand.substring(7, openBracket - 1);","lastModifiedDate":"2021-08-18"},{"lineNumber":424,"author":{"gitId":"chrus-chong"},"content":"                    time \u003d atHand.substring(openBracket + 5, closeBracket);","lastModifiedDate":"2021-08-18"},{"lineNumber":425,"author":{"gitId":"chrus-chong"},"content":"                    t \u003d new Deadline(done, des, time);","lastModifiedDate":"2021-08-18"},{"lineNumber":426,"author":{"gitId":"chrus-chong"},"content":"                } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":427,"author":{"gitId":"chrus-chong"},"content":"                    throw new DukeException(\"Task Type not recognised. Task not loaded into Duke chat-bot\");","lastModifiedDate":"2021-08-18"},{"lineNumber":428,"author":{"gitId":"chrus-chong"},"content":"                }","lastModifiedDate":"2021-08-18"},{"lineNumber":429,"author":{"gitId":"chrus-chong"},"content":"                taskList.add(t);","lastModifiedDate":"2021-08-18"},{"lineNumber":430,"author":{"gitId":"chrus-chong"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":431,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":432,"author":{"gitId":"chrus-chong"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":433,"author":{"gitId":"chrus-chong"},"content":"            return;","lastModifiedDate":"2021-08-18"},{"lineNumber":434,"author":{"gitId":"chrus-chong"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":435,"author":{"gitId":"chrus-chong"},"content":"            System.out.println(e);","lastModifiedDate":"2021-08-18"},{"lineNumber":436,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":437,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":438,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"chrus-chong":427,"-":11}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":" * Custom DukeException class created to catch exceptions unique to the Duke chat-box.","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"    public DukeException(String err) {","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"        super(err);","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"chrus-chong":8}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":" * Event class used to represent a task that has a start and end date.","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":" * Contains method that","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":" * (i) overrides the Parent toString method to display the task type,","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":" * as well as status and description.","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"    protected String timeframe;","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"    public Event(String description, String timeframe) {","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"        this.timeframe \u003d timeframe;","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"    public Event(String done, String description, String timeframe) {","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"        this.timeframe \u003d timeframe;","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"        this.isDone \u003d (done.equals(\"X\")) ? true : false;","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"     * Overriding toString method to display the relevant information","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"     * @return String type object that includes the task type, parent","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"     * toString method(), and timeframe.","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.timeframe + \")\";","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"chrus-chong":31}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":" * Task class used as Parent class for Deadline, ToDo, and Event.","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":" * Contains methods that","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":" * (i) gets the corresponding status icon of the task","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":" * (ii) marks the existing instance of Task as done","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":" * (iii) gets task description attribute","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":" * (iv) gets task isDone attribute","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":" * (v) overrides the default toString method to display the status and description","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"public class Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"    protected String description;","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"     * Constructor for Task","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"     * @param description the overview of the task for a particular instance","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"     * The getStatusIcon() method returns the string representation of whether","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"     * the task isDone.","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"     * @return String type object that displays an \"[X]\" if the task is done, else","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":"     * \"[ ]\" is displayed.","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"        return (this.isDone ? \"[X]\" : \"[ ]\"); //mark done task with an X","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":34,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":35,"author":{"gitId":"chrus-chong"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-14"},{"lineNumber":36,"author":{"gitId":"chrus-chong"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-14"},{"lineNumber":37,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":38,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":39,"author":{"gitId":"chrus-chong"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-14"},{"lineNumber":40,"author":{"gitId":"chrus-chong"},"content":"        return this.description;","lastModifiedDate":"2021-08-14"},{"lineNumber":41,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":42,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":43,"author":{"gitId":"chrus-chong"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2021-08-14"},{"lineNumber":44,"author":{"gitId":"chrus-chong"},"content":"        return this.isDone;","lastModifiedDate":"2021-08-14"},{"lineNumber":45,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":46,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":47,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":48,"author":{"gitId":"chrus-chong"},"content":"     * Overriding toString method to display the relevant information","lastModifiedDate":"2021-08-15"},{"lineNumber":49,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":50,"author":{"gitId":"chrus-chong"},"content":"     * @return String type object that includes the status icon and","lastModifiedDate":"2021-08-15"},{"lineNumber":51,"author":{"gitId":"chrus-chong"},"content":"     * task description","lastModifiedDate":"2021-08-15"},{"lineNumber":52,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":53,"author":{"gitId":"chrus-chong"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":54,"author":{"gitId":"chrus-chong"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":55,"author":{"gitId":"chrus-chong"},"content":"        return this.getStatusIcon() + \" \" + this.description;","lastModifiedDate":"2021-08-14"},{"lineNumber":56,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":57,"author":{"gitId":"chrus-chong"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"chrus-chong":57}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":" * ToDo class used to represent a task that has neither a start nor end date.","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":" * Contains method that","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":" * (i) overrides the Parent toString method to display the task type,","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":" * as well as status and description.","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"    public ToDo(String done, String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"        this.isDone \u003d (done.equals(\"X\")) ? true : false;","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"     * Overriding toString method to display the relevant information","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"     * @return String type object that includes the task type and parent","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"     * toString() method.","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"chrus-chong":27}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"event go clubbing /at 23rd January 2am-4am","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"hello","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"todo brush teeth everyday","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"event zoom meeting with profs /at 3rd August 9pm-10pm","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"done 3","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"done 2","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"done 3","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"deadline complete Math Homework /by 23/04/21","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"event Sentosa outing /at 25/07/21 8am-4pm","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"event","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"event zoom meeting with Teo","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"event zoom meeting with Teo /at","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"event complete CS Project /by 2359HRs","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"event /at 2300-0000HRs","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"event zoom meeting with Teo /at 2pm-3pm","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"deadline","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"deadline complete CS Project","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"deadline complete CS Project /by","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"deadline complete CS Project /at 2359HRs","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"deadline /by 2359HRs","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"deadline complete CS Project /by 2359HRs","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"todo","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"done 7, 3","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"done 7","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":"delete 1, 2","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"delete 1","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"delete 3","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"delete 300","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"chrus-chong"},"content":"bye bye","lastModifiedDate":"2021-08-14"},{"lineNumber":34,"author":{"gitId":"chrus-chong"},"content":"bye","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"chrus-chong":34}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"chrus-chong":1,"-":21}}]
