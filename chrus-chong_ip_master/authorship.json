[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"# duke.Duke project template","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"instructions on how to use it.","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"   first)","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"   in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"   code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"   like the below as the output:","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"chrus-chong":10,"-":19}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"chrus-chong"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-09-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"chrus-chong"},"content":"    archiveBaseName \u003d \"Duke Productivity Tool\"","lastModifiedDate":"2021-09-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"chrus-chong"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-09-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"chrus-chong":17,"-":44}},{"path":"config/travis/check-eof-newline.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"#!/bin/sh","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"# Checks that all text files end with a newline.","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"ret\u003d0","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"# Preserve filename with spaces by only splitting on newlines.","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"IFS\u003d\u0027","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"\u0027","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"for filename in $(git grep --cached -I -l -e \u0027\u0027 -- \u0027:/\u0027); do","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"    if [ \"$(tail -c 1 \"./$filename\")\" !\u003d \u0027\u0027 ]; then","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"        line\u003d\"$(wc -l \"./$filename\" | cut -d\u0027 \u0027 -f1)\"","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"        echo \"ERROR:$filename:$line: no newline at EOF.\"","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"        ret\u003d1","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"    fi","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"done","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"exit $ret","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"chrus-chong":18}},{"path":"config/travis/check-line-endings.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"#!/bin/sh","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"# Checks for prohibited line endings.","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"# Prohibited line endings: \\r\\n","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"git grep --cached -I -n --no-color -P \u0027\\r$\u0027 -- \u0027:/\u0027 |","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"awk \u0027","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"    BEGIN {","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"        FS \u003d \":\"","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"        OFS \u003d \":\"","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"        ret \u003d 0","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"    {","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"        ret \u003d 1","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"        print \"ERROR\", $1, $2, \" prohibited \\\\r\\\\n line ending, use \\\\n instead.\"","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"    END {","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"        exit ret","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"\u0027","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"chrus-chong":19}},{"path":"config/travis/check-trailing-whitespace.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"#!/bin/sh","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"# Checks for trailing whitespace","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"git grep --cached -I -n --no-color -P \u0027[ \\t]+$\u0027 -- \u0027:/\u0027 |","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"awk \u0027","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"    BEGIN {","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"        FS \u003d \":\"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"        OFS \u003d \":\"","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"        ret \u003d 0","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"    {","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"        # Only warn for markdown files (*.md) to accomodate text editors","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"        # which do not properly handle trailing whitespace.","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"        # (e.g. GitHub web editor)","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"        if ($1 ~ /\\.md$/) {","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"            severity \u003d \"WARN\"","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"        } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"            severity \u003d \"ERROR\"","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"            ret \u003d 1","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"        print severity, $1, $2, \" trailing whitespace.\"","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"    END {","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"        exit ret","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"\u0027","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"chrus-chong":26}},{"path":"config/travis/run-checks.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"#!/bin/sh","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"# Runs all check-* scripts, and returns a non-zero exit code if any of them fail.","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"dir\u003d$(CDPATH\u003d cd -- \"$(dirname -- \"$0\")\" \u0026\u0026 pwd) \u0026\u0026","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"ret\u003d0 \u0026\u0026","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"for checkscript in \"$dir\"/check-*; do","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"    if ! \"$checkscript\"; then","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"        ret\u003d1","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"    fi","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"done","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"exit $ret","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"chrus-chong":11}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"##Using the Duke Productivity Tool","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"1. Check that you have Java 11 or higher installed on your device.","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"2. Download the latest version of \"Duke Productivity Tool.jar\" ","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"[here](https://github.com/chrus-chong/ip/releases).","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"3. Try out the application for yourself!","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"To familiarise yourself with the application, it is recommended that you","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"* Browse through this user guide to understand the commands","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"* Type the `help` command into Duke","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"## Key Features ","lastModifiedDate":"2021-09-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"### Task Handling","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"The Duke Productivity Tool supports the handling of various types of tasks.","lastModifiedDate":"2021-09-14"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"Multiple task types have been implemented to facilitate tasks that end by a certain time or occur between ","lastModifiedDate":"2021-09-14"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"a range of timings. The application keeps track of ToDo, Deadline, Event, and DoAfter tasks.","lastModifiedDate":"2021-09-14"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"You can choose to save or delete the aforementioned tasks as they see fit.","lastModifiedDate":"2021-09-14"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"### Task List","lastModifiedDate":"2021-09-14"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"The Duke Productivity Tool allows for easy access to all the tasks that you have input into the application.","lastModifiedDate":"2021-09-14"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"You can view all tasks along with the status of completion and start or end times if applicable.","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"### Remembering Tasks","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"Tasks that are input or removed from the task list will have the respective changes applied to the data file.","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"Even after closing Duke and loading into it again, the most updated task list will show up.","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"### 1. `bye` - Exits Duke Productivity Tool","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":34,"author":{"gitId":"chrus-chong"},"content":"Exits the program.","lastModifiedDate":"2021-09-14"},{"lineNumber":35,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":36,"author":{"gitId":"chrus-chong"},"content":"Format:","lastModifiedDate":"2021-09-14"},{"lineNumber":37,"author":{"gitId":"chrus-chong"},"content":"`bye`","lastModifiedDate":"2021-09-14"},{"lineNumber":38,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":39,"author":{"gitId":"chrus-chong"},"content":"### 2. `help` - Displays all possible commands","lastModifiedDate":"2021-09-14"},{"lineNumber":40,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":41,"author":{"gitId":"chrus-chong"},"content":"Displays message that lists all possible commands,","lastModifiedDate":"2021-09-14"},{"lineNumber":42,"author":{"gitId":"chrus-chong"},"content":"as well as instructions on how to format these commands.","lastModifiedDate":"2021-09-14"},{"lineNumber":43,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":44,"author":{"gitId":"chrus-chong"},"content":"Format:","lastModifiedDate":"2021-09-14"},{"lineNumber":45,"author":{"gitId":"chrus-chong"},"content":"`help`","lastModifiedDate":"2021-09-14"},{"lineNumber":46,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":47,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":48,"author":{"gitId":"chrus-chong"},"content":"### 3. `todo` - Stores ToDo task in task list","lastModifiedDate":"2021-09-14"},{"lineNumber":49,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":50,"author":{"gitId":"chrus-chong"},"content":"Creates a ToDo task based on your description and stores it into the Duke task list.","lastModifiedDate":"2021-09-14"},{"lineNumber":51,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":52,"author":{"gitId":"chrus-chong"},"content":"Format:","lastModifiedDate":"2021-09-14"},{"lineNumber":53,"author":{"gitId":"chrus-chong"},"content":"`todo \u003cdescription\u003e`","lastModifiedDate":"2021-09-14"},{"lineNumber":54,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":55,"author":{"gitId":"chrus-chong"},"content":"Example of usage:","lastModifiedDate":"2021-09-14"},{"lineNumber":56,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":57,"author":{"gitId":"chrus-chong"},"content":"`todo Plan schedule for recess week`","lastModifiedDate":"2021-09-14"},{"lineNumber":58,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":59,"author":{"gitId":"chrus-chong"},"content":"Expected outcome: A ToDo task with description \"Plan schedule for recess week\" is stored in Duke.","lastModifiedDate":"2021-09-14"},{"lineNumber":60,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":61,"author":{"gitId":"chrus-chong"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":62,"author":{"gitId":"chrus-chong"},"content":"Sure. The following task has been added:","lastModifiedDate":"2021-09-14"},{"lineNumber":63,"author":{"gitId":"chrus-chong"},"content":"[T][] Plan schedule for recess week","lastModifiedDate":"2021-09-14"},{"lineNumber":64,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":65,"author":{"gitId":"chrus-chong"},"content":"You now have 1 task in the list","lastModifiedDate":"2021-09-14"},{"lineNumber":66,"author":{"gitId":"chrus-chong"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":67,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":68,"author":{"gitId":"chrus-chong"},"content":"### 4. `deadline` - Stores Deadline task in task list","lastModifiedDate":"2021-09-14"},{"lineNumber":69,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":70,"author":{"gitId":"chrus-chong"},"content":"Creates a Deadline task based on your input and stores it into the Duke task list.","lastModifiedDate":"2021-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":72,"author":{"gitId":"chrus-chong"},"content":"Format:","lastModifiedDate":"2021-09-14"},{"lineNumber":73,"author":{"gitId":"chrus-chong"},"content":"`deadline \u003cdescription\u003e /by \u003cdate\u003e \u003ctime\u003e`","lastModifiedDate":"2021-09-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":77,"author":{"gitId":"chrus-chong"},"content":"`deadline Complete assignmnet 2 /by 2021-09-16 23:59`","lastModifiedDate":"2021-09-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":79,"author":{"gitId":"chrus-chong"},"content":"Expected outcome: A Deadline task with description \"Complete assignment 2\" is stored in Duke.","lastModifiedDate":"2021-09-14"},{"lineNumber":80,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":81,"author":{"gitId":"chrus-chong"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":82,"author":{"gitId":"chrus-chong"},"content":"Sure. The following task has been added:","lastModifiedDate":"2021-09-14"},{"lineNumber":83,"author":{"gitId":"chrus-chong"},"content":"[D][] Complete assignment 2 (by: Sep 16 2021 11:59pm)","lastModifiedDate":"2021-09-14"},{"lineNumber":84,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":85,"author":{"gitId":"chrus-chong"},"content":"You now have 1 task in the list","lastModifiedDate":"2021-09-14"},{"lineNumber":86,"author":{"gitId":"chrus-chong"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":87,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":88,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":89,"author":{"gitId":"chrus-chong"},"content":"### 5. `event` - Stores Event task in task list","lastModifiedDate":"2021-09-14"},{"lineNumber":90,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":91,"author":{"gitId":"chrus-chong"},"content":"Creates a Event task based on your input and stores it into the Duke task list.","lastModifiedDate":"2021-09-14"},{"lineNumber":92,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":93,"author":{"gitId":"chrus-chong"},"content":"Format:","lastModifiedDate":"2021-09-14"},{"lineNumber":94,"author":{"gitId":"chrus-chong"},"content":"`event \u003cdescription\u003e /at \u003cdate\u003e \u003cstartTime\u003e \u003cendTime\u003e`","lastModifiedDate":"2021-09-14"},{"lineNumber":95,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":96,"author":{"gitId":"chrus-chong"},"content":"Example of usage:","lastModifiedDate":"2021-09-14"},{"lineNumber":97,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":98,"author":{"gitId":"chrus-chong"},"content":"`event Zoom meeting with Prof /at 2021-09-15 09:00 12:00`","lastModifiedDate":"2021-09-14"},{"lineNumber":99,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":100,"author":{"gitId":"chrus-chong"},"content":"Expected outcome: An Event task with description \"Zoom meeting with Prof\" is stored in Duke.","lastModifiedDate":"2021-09-14"},{"lineNumber":101,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":102,"author":{"gitId":"chrus-chong"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":103,"author":{"gitId":"chrus-chong"},"content":"Sure. The following task has been added:","lastModifiedDate":"2021-09-14"},{"lineNumber":104,"author":{"gitId":"chrus-chong"},"content":"[E][] Zoom meeting with Prof (at: Sep 15 2021 9:00am to 12:00pm)","lastModifiedDate":"2021-09-14"},{"lineNumber":105,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":106,"author":{"gitId":"chrus-chong"},"content":"You now have 1 task in the list","lastModifiedDate":"2021-09-14"},{"lineNumber":107,"author":{"gitId":"chrus-chong"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":108,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":109,"author":{"gitId":"chrus-chong"},"content":"### 6. `doafter` - Stores DoAfter task in task list","lastModifiedDate":"2021-09-14"},{"lineNumber":110,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":111,"author":{"gitId":"chrus-chong"},"content":"Creates a DoAfter task based on your input and stores it into the Duke task list.","lastModifiedDate":"2021-09-14"},{"lineNumber":112,"author":{"gitId":"chrus-chong"},"content":"Input an integer after the `doafter` command to indicate when this task should be done after.","lastModifiedDate":"2021-09-14"},{"lineNumber":113,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":114,"author":{"gitId":"chrus-chong"},"content":"Format:","lastModifiedDate":"2021-09-14"},{"lineNumber":115,"author":{"gitId":"chrus-chong"},"content":"`doafter \u003cdescription\u003e /aft \u003cnumber\u003e`","lastModifiedDate":"2021-09-14"},{"lineNumber":116,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":117,"author":{"gitId":"chrus-chong"},"content":"Example of usage:","lastModifiedDate":"2021-09-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":119,"author":{"gitId":"chrus-chong"},"content":"`doafter Consolidate notes /aft 1`","lastModifiedDate":"2021-09-14"},{"lineNumber":120,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":121,"author":{"gitId":"chrus-chong"},"content":"Expected outcome: A DoAfter task with description \"Consolidate notes\" is stored in Duke.","lastModifiedDate":"2021-09-14"},{"lineNumber":122,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":123,"author":{"gitId":"chrus-chong"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":124,"author":{"gitId":"chrus-chong"},"content":"Sure. The following task has been added:","lastModifiedDate":"2021-09-14"},{"lineNumber":125,"author":{"gitId":"chrus-chong"},"content":"[A][] Consolidate notes (to be done after: Zoom meeting with Prof)","lastModifiedDate":"2021-09-14"},{"lineNumber":126,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":127,"author":{"gitId":"chrus-chong"},"content":"You now have 2 tasks in the list","lastModifiedDate":"2021-09-14"},{"lineNumber":128,"author":{"gitId":"chrus-chong"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":131,"author":{"gitId":"chrus-chong"},"content":"### 7. `list` - List all tasks in Duke","lastModifiedDate":"2021-09-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":133,"author":{"gitId":"chrus-chong"},"content":"Displays message containing all task all tasks","lastModifiedDate":"2021-09-14"},{"lineNumber":134,"author":{"gitId":"chrus-chong"},"content":"along with the status of completion and start or end times if applicable.","lastModifiedDate":"2021-09-14"},{"lineNumber":135,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":136,"author":{"gitId":"chrus-chong"},"content":"Format: `list`","lastModifiedDate":"2021-09-14"},{"lineNumber":137,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":138,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":139,"author":{"gitId":"chrus-chong"},"content":"### 8. `done` - Marks task as done","lastModifiedDate":"2021-09-14"},{"lineNumber":140,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":141,"author":{"gitId":"chrus-chong"},"content":"Marks a specific task as done in the Duke task list.","lastModifiedDate":"2021-09-14"},{"lineNumber":142,"author":{"gitId":"chrus-chong"},"content":"Called with an integer to indicate the index of the task in the task list to mark as done.","lastModifiedDate":"2021-09-14"},{"lineNumber":143,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":144,"author":{"gitId":"chrus-chong"},"content":"Format: `done \u003cindex\u003e`","lastModifiedDate":"2021-09-14"},{"lineNumber":145,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":146,"author":{"gitId":"chrus-chong"},"content":"Example of usage:","lastModifiedDate":"2021-09-14"},{"lineNumber":147,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":148,"author":{"gitId":"chrus-chong"},"content":"`done 1`","lastModifiedDate":"2021-09-14"},{"lineNumber":149,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":150,"author":{"gitId":"chrus-chong"},"content":"Expected outcome: Task is marked as done.","lastModifiedDate":"2021-09-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"Description of the outcome.","lastModifiedDate":"2021-07-17"},{"lineNumber":153,"author":{"gitId":"chrus-chong"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":154,"author":{"gitId":"chrus-chong"},"content":"I see that you have completed a task! Keep up the good work!","lastModifiedDate":"2021-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":156,"author":{"gitId":"chrus-chong"},"content":"This task has now been marked as completed","lastModifiedDate":"2021-09-14"},{"lineNumber":157,"author":{"gitId":"chrus-chong"},"content":"[X] Zoom meeting with Prof","lastModifiedDate":"2021-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":160,"author":{"gitId":"chrus-chong"},"content":"### 9. `delete` - Removes task from Duke","lastModifiedDate":"2021-09-14"},{"lineNumber":161,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":162,"author":{"gitId":"chrus-chong"},"content":"Removes a specific task from the Duke task list.","lastModifiedDate":"2021-09-14"},{"lineNumber":163,"author":{"gitId":"chrus-chong"},"content":"Called with an integer to indicate the index of the task in the task list to remove.","lastModifiedDate":"2021-09-14"},{"lineNumber":164,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":165,"author":{"gitId":"chrus-chong"},"content":"Format: `delete \u003cindex\u003e`","lastModifiedDate":"2021-09-14"},{"lineNumber":166,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":167,"author":{"gitId":"chrus-chong"},"content":"Example of usage:","lastModifiedDate":"2021-09-14"},{"lineNumber":168,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":169,"author":{"gitId":"chrus-chong"},"content":"`delete 1`","lastModifiedDate":"2021-09-14"},{"lineNumber":170,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":171,"author":{"gitId":"chrus-chong"},"content":"Expected outcome: Task removed.","lastModifiedDate":"2021-09-14"},{"lineNumber":172,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":173,"author":{"gitId":"chrus-chong"},"content":"Description of the outcome.","lastModifiedDate":"2021-09-14"},{"lineNumber":174,"author":{"gitId":"chrus-chong"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":175,"author":{"gitId":"chrus-chong"},"content":"Successfully removed task 1","lastModifiedDate":"2021-09-14"},{"lineNumber":176,"author":{"gitId":"chrus-chong"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":177,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":178,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":179,"author":{"gitId":"chrus-chong"},"content":"### 10. `find` - Find tasks in Duke based on keywords","lastModifiedDate":"2021-09-14"},{"lineNumber":180,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":181,"author":{"gitId":"chrus-chong"},"content":"Finds task in the Duke task list that matches the input keywords","lastModifiedDate":"2021-09-14"},{"lineNumber":182,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":183,"author":{"gitId":"chrus-chong"},"content":"Format: `find \u003ckeywords\u003e`","lastModifiedDate":"2021-09-14"},{"lineNumber":184,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":185,"author":{"gitId":"chrus-chong"},"content":"Example of usage:","lastModifiedDate":"2021-09-14"},{"lineNumber":186,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":187,"author":{"gitId":"chrus-chong"},"content":"`find sch`","lastModifiedDate":"2021-09-14"},{"lineNumber":188,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":189,"author":{"gitId":"chrus-chong"},"content":"Expected outcome: Filters out all tasks that contain \"sch\".","lastModifiedDate":"2021-09-14"},{"lineNumber":190,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":191,"author":{"gitId":"chrus-chong"},"content":"Description of the outcome.","lastModifiedDate":"2021-09-14"},{"lineNumber":192,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":193,"author":{"gitId":"chrus-chong"},"content":"Here are your tasks that contain \"sch\"","lastModifiedDate":"2021-09-14"},{"lineNumber":194,"author":{"gitId":"chrus-chong"},"content":"1. [T][] Plan schedule for recess week","lastModifiedDate":"2021-09-14"},{"lineNumber":195,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"chrus-chong":170,"-":25}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"package duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"    private Label dialog;","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"            Circle userCir \u003d new Circle(47, 47, 43);","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"            this.displayPicture.setClip(userCir);","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"chrus-chong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"chrus-chong"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"chrus-chong"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"chrus-chong"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"chrus-chong"},"content":"    private void flip() {","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"chrus-chong"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"chrus-chong"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"chrus-chong"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"chrus-chong"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"chrus-chong"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"chrus-chong"},"content":"        DialogBox userDialog \u003d new DialogBox(text, img);","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"chrus-chong"},"content":"        userDialog.setAlignment(Pos.CENTER_RIGHT);","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"chrus-chong"},"content":"        userDialog.setStyle(\"-fx-background-color: #C2D2BD;\");","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"chrus-chong"},"content":"        return userDialog;","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"chrus-chong"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"chrus-chong"},"content":"        DialogBox dukeDialog \u003d new DialogBox(text, img);","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"chrus-chong"},"content":"        dukeDialog.flip();","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"chrus-chong"},"content":"        dukeDialog.setAlignment(Pos.CENTER_LEFT);","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"chrus-chong"},"content":"        dukeDialog.setStyle(\"-fx-background-color: #C8D8E4;\");","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"chrus-chong"},"content":"        dukeDialog.setFillHeight(true);","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"chrus-chong"},"content":"        return dukeDialog;","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"chrus-chong"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"chrus-chong":65}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"import duke.ui.GraphicUi;","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":" * Duke class used to run the duke.Duke chat-bot.","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":" * Contains methods that","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":" * (i)    initialises the Ui class and runs the chat-bot.","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"public class Duke {","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"     * Returns response from Duke chat-bot for a given input.","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"     * @param input User input into Duke chat-bot.","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"     * @return String object representing response from Duke chat-bot.","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"        GraphicUi guiParser \u003d new GraphicUi();","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"        return guiParser.run(input);","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"chrus-chong":19,"-":1}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"package duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"public class Launcher {","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"chrus-chong":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"package duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"public class Main extends Application {","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"            stage.setTitle(\"Duke Productivity Tool\");","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"            stage.show();","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"chrus-chong":32}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"package duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"    private Button sendButton;","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"    private Duke duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/chatbot.png\"));","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"     * Initialises the mainWindow to display welcome message and handle userInput.","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"chrus-chong"},"content":"    public void initialize() {","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"chrus-chong"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"chrus-chong"},"content":"        String logo \u003d \"Hello from \\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"chrus-chong"},"content":"                + \" ____           _        \\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"chrus-chong"},"content":"                + \"|   _  \\\\ __   _| |  _____ \\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"chrus-chong"},"content":"                + \"|  |  |  |  | |  |  |/  / _ \\\\\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"chrus-chong"},"content":"                + \"|  |_|  |  |_|  |    \u003c  __/\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"chrus-chong"},"content":"                + \"|____/ \\\\__,_ |_|\\\\_\\\\___|\\n\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"chrus-chong"},"content":"                + \"What can I do for you today?\\n\";","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"chrus-chong"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"chrus-chong"},"content":"                DialogBox.getDukeDialog(logo, dukeImage)","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"chrus-chong"},"content":"        );","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"chrus-chong"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"chrus-chong"},"content":"        duke \u003d d;","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"chrus-chong"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"chrus-chong"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"chrus-chong"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"chrus-chong"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"chrus-chong"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"chrus-chong"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"chrus-chong"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"chrus-chong"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"chrus-chong"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"chrus-chong"},"content":"        );","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"chrus-chong"},"content":"        userInput.clear();","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"chrus-chong"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"chrus-chong":65}},{"path":"src/main/java/duke/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"package duke.commands;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":" * ByeCommand class used to represent a Bye Command.","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":" * Contains methods that","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":" * (i)    executes the ByeCommand","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"    public ByeCommand() {","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"        super(\"bye\");","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"     * Returns goodbye message.","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"     * @param des   User input into the Duke chat-box.","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"     * @param tList TaskList object used to keep track of all tasks.","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"     * @return String object to describe execution of ByeCommand.","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"    public String execute(String des, TaskList tList) {","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"        checkValidDes(des);","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"        return \"Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"chrus-chong":27}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"package duke.commands;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":" * Abstract Command class used represent command inputs for Duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":" * Contains methods that","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":" * (i)    executes the Command","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":" * (ii)   print out the number of tasks in a given TaskList","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":" * (iii)  counts the number of blank spaces in a string of text.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"    private final String keyword;","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"    Command(String keyword) {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"     * Returns String representing specific commands executing their responsibilities.","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"     * @param des   User input into the Duke chat-box.","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"     * @param tList TaskList object used to keep track of all tasks.","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":"     * @return String representation of Command.","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"     * @throws DukeException on task-specific errors.","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"    public abstract String execute(String des, TaskList tList) throws DukeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"chrus-chong"},"content":"     * Returns string representing total number of tasks.","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"chrus-chong"},"content":"     * @param tList TaskList object used to keep track of all tasks.","lastModifiedDate":"2021-09-04"},{"lineNumber":38,"author":{"gitId":"chrus-chong"},"content":"     * @return Total number of tasks.","lastModifiedDate":"2021-09-03"},{"lineNumber":39,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"chrus-chong"},"content":"    public String numberOfTasks(TaskList tList) {","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"chrus-chong"},"content":"        ArrayList\u003cTask\u003e tasks \u003d tList.getTaskList();","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"chrus-chong"},"content":"        if (tasks.size() \u003d\u003d 1) {","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"chrus-chong"},"content":"            return \"You now have \" + tasks.size() + \" task in the list\";","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"chrus-chong"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"chrus-chong"},"content":"            return \"You now have \" + tasks.size() + \" tasks in the list\";","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"chrus-chong"},"content":"     * Returns Integer type object that represents the number of blank spaces in the user input.","lastModifiedDate":"2021-09-03"},{"lineNumber":51,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"chrus-chong"},"content":"     * @param des User input into the Duke chat-box.","lastModifiedDate":"2021-09-04"},{"lineNumber":53,"author":{"gitId":"chrus-chong"},"content":"     * @return Number of blank spaces.","lastModifiedDate":"2021-09-03"},{"lineNumber":54,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"chrus-chong"},"content":"    public int countSpaces(String des) {","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"chrus-chong"},"content":"        int count \u003d 0;","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"chrus-chong"},"content":"        for (int i \u003d 0; i \u003c des.length(); i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"chrus-chong"},"content":"            if (des.charAt(i) \u003d\u003d \u0027 \u0027) {","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"chrus-chong"},"content":"                count++;","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"chrus-chong"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"chrus-chong"},"content":"        return count;","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":65,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":66,"author":{"gitId":"chrus-chong"},"content":"     * Checks for valid description using Java assert.","lastModifiedDate":"2021-09-04"},{"lineNumber":67,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":68,"author":{"gitId":"chrus-chong"},"content":"     * @param des the user input into the Duke chat-box.","lastModifiedDate":"2021-09-04"},{"lineNumber":69,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":70,"author":{"gitId":"chrus-chong"},"content":"    public void checkValidDes(String des) {","lastModifiedDate":"2021-09-04"},{"lineNumber":71,"author":{"gitId":"chrus-chong"},"content":"        assert des !\u003d \"\";","lastModifiedDate":"2021-09-04"},{"lineNumber":72,"author":{"gitId":"chrus-chong"},"content":"        assert des !\u003d null;","lastModifiedDate":"2021-09-04"},{"lineNumber":73,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":74,"author":{"gitId":"chrus-chong"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"chrus-chong":74}},{"path":"src/main/java/duke/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"package duke.commands;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":" * DeadlineCommand class used to represent a Deadline Command.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":" * Contains methods that","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":" * (i)    executes the DeadlineCommand","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"    public DeadlineCommand() {","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"        super(\"deadline\");","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"     * Returns String object to describe execution of DeadlineCommand.","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"     * @param des User input into the Duke chat-box.","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"     * @param tList TaskList object used to keep track of all tasks.","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"     * @return String representation of DeadlineCommand.","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"     * @throws DukeException If input for deadline command is not properly formatted.","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"    public String execute(String des, TaskList tList) throws DukeException {","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"        checkValidDes(des);","lastModifiedDate":"2021-09-04"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"        if (des.equals(\"deadline\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"chrus-chong"},"content":"            throw new DukeException(\"\\\"deadline\\\" command not correctly formatted \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"chrus-chong"},"content":"                    + \"Please insert task and due date arguments\");","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"chrus-chong"},"content":"        if (!des.contains(\"/by\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"chrus-chong"},"content":"            throw new DukeException(\"\\\"deadline\\\" command not correctly formatted \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"chrus-chong"},"content":"                    + \"Please do not forget to include \\\"by\\\" and insert due date argument\");","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"chrus-chong"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"chrus-chong"},"content":"            if (des.chars().filter(c -\u003e c \u003d\u003d \u0027/\u0027).count() \u003e 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"chrus-chong"},"content":"                throw new DukeException(\"Format Error. \"","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"chrus-chong"},"content":"                        + \"Do not use the special character \\\"/\\\" within your task description.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"chrus-chong"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"chrus-chong"},"content":"            Deadline atHand \u003d addDeadlineFromDescriptionToTaskList(des, tList);","lastModifiedDate":"2021-09-11"},{"lineNumber":46,"author":{"gitId":"chrus-chong"},"content":"            Storage.createFile();","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"chrus-chong"},"content":"            Storage.writeToFile(tList);","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"chrus-chong"},"content":"            return \"Sure. The following task has been added: \\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"chrus-chong"},"content":"                    + atHand.formatString()","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"chrus-chong"},"content":"                    + \"\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"chrus-chong"},"content":"                    + \"\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"chrus-chong"},"content":"                    + numberOfTasks(tList)","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"chrus-chong"},"content":"                    + \"\\n\";","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"chrus-chong"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"chrus-chong"},"content":"            throw new DukeException(\"\\\"deadline\\\" command not correctly formatted\");","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":60,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":61,"author":{"gitId":"chrus-chong"},"content":"     * Returns Deadline object after adding it into the given task list.","lastModifiedDate":"2021-09-11"},{"lineNumber":62,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":63,"author":{"gitId":"chrus-chong"},"content":"     * @param des User input into the Duke chat-box.","lastModifiedDate":"2021-09-11"},{"lineNumber":64,"author":{"gitId":"chrus-chong"},"content":"     * @param tList TaskList object used to keep track of all tasks.","lastModifiedDate":"2021-09-11"},{"lineNumber":65,"author":{"gitId":"chrus-chong"},"content":"     * @return Deadline task that is the most recent addition to tList.","lastModifiedDate":"2021-09-11"},{"lineNumber":66,"author":{"gitId":"chrus-chong"},"content":"     * @throws DukeException If user input, des, is not properly formatted for extractDate() or extractTimeDeadline().","lastModifiedDate":"2021-09-11"},{"lineNumber":67,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":68,"author":{"gitId":"chrus-chong"},"content":"    private Deadline addDeadlineFromDescriptionToTaskList(String des, TaskList tList) throws DukeException {","lastModifiedDate":"2021-09-11"},{"lineNumber":69,"author":{"gitId":"chrus-chong"},"content":"        String description \u003d des.substring(9, des.indexOf(\u0027/\u0027) - 1);","lastModifiedDate":"2021-09-11"},{"lineNumber":70,"author":{"gitId":"chrus-chong"},"content":"        LocalDate date \u003d Storage.extractDate(des);","lastModifiedDate":"2021-09-11"},{"lineNumber":71,"author":{"gitId":"chrus-chong"},"content":"        LocalTime time \u003d Storage.extractTimeDeadline(des);","lastModifiedDate":"2021-09-11"},{"lineNumber":72,"author":{"gitId":"chrus-chong"},"content":"        Deadline atHand \u003d new Deadline(description, date, time);","lastModifiedDate":"2021-09-11"},{"lineNumber":73,"author":{"gitId":"chrus-chong"},"content":"        tList.add(atHand);","lastModifiedDate":"2021-09-11"},{"lineNumber":74,"author":{"gitId":"chrus-chong"},"content":"        return atHand;","lastModifiedDate":"2021-09-11"},{"lineNumber":75,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":76,"author":{"gitId":"chrus-chong"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"chrus-chong":76}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"package duke.commands;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":" * DeleteCommand class used to represent a Delete Command.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":" * Contains methods that","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":" * (i)    executes the DeleteCommand","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"    public DeleteCommand() {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"        super(\"delete\");","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"     * Returns String object to describe deletion of a task from the TaskList.","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"     * @param des   User input into the Duke chat-box.","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"     * @param tList TaskList object used to keep track of all tasks.","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"     * @return String representation of DeleteCommand.","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"     * @throws DukeException If input for Delete command is not properly formatted.","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":"    public String execute(String des, TaskList tList) throws DukeException {","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"        if (this.countSpaces(des) \u003e 1) {","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"            throw new DukeException(\"Too many arguments being provided to \\\"delete\\\" \\n\"","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"                    + \"Please refer to proper usage of duke.commands with \\\"allCmd\\\"\");","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"chrus-chong"},"content":"        checkValidDes(des);","lastModifiedDate":"2021-09-04"},{"lineNumber":35,"author":{"gitId":"chrus-chong"},"content":"        int taskRemoved \u003d removeCommandByDescriptionFromTaskList(des, tList);","lastModifiedDate":"2021-09-11"},{"lineNumber":36,"author":{"gitId":"chrus-chong"},"content":"        Storage.createFile();","lastModifiedDate":"2021-09-11"},{"lineNumber":37,"author":{"gitId":"chrus-chong"},"content":"        Storage.writeToFile(tList);","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"chrus-chong"},"content":"        return \"Successfully removed task \" + taskRemoved + \"\\n\";","lastModifiedDate":"2021-09-11"},{"lineNumber":39,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":40,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":41,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":42,"author":{"gitId":"chrus-chong"},"content":"     * Returns int object to represent index of the command being deleted from a given task list.","lastModifiedDate":"2021-09-11"},{"lineNumber":43,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":44,"author":{"gitId":"chrus-chong"},"content":"     * @param des User input into the Duke chat-box.","lastModifiedDate":"2021-09-11"},{"lineNumber":45,"author":{"gitId":"chrus-chong"},"content":"     * @param tList TaskList object used to keep track of all tasks.","lastModifiedDate":"2021-09-11"},{"lineNumber":46,"author":{"gitId":"chrus-chong"},"content":"     * @return Integer object representing index of command being deleted.","lastModifiedDate":"2021-09-11"},{"lineNumber":47,"author":{"gitId":"chrus-chong"},"content":"     * @throws DukeException If input number is not valid.","lastModifiedDate":"2021-09-11"},{"lineNumber":48,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":49,"author":{"gitId":"chrus-chong"},"content":"    private int removeCommandByDescriptionFromTaskList(String des, TaskList tList) throws DukeException {","lastModifiedDate":"2021-09-11"},{"lineNumber":50,"author":{"gitId":"chrus-chong"},"content":"        ArrayList\u003cTask\u003e tasks \u003d tList.getTaskList();","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"chrus-chong"},"content":"        String sNum \u003d des.substring(des.lastIndexOf(\u0027 \u0027) + 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"chrus-chong"},"content":"        int num \u003d Integer.parseInt(sNum);","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"chrus-chong"},"content":"        if (num \u003c\u003d 0 || num \u003e tasks.size()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"chrus-chong"},"content":"            throw new DukeException(\"The input number is not a valid task number \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"chrus-chong"},"content":"                    + \"Please refer to the task list using the \\\"list\\\" command\");","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":57,"author":{"gitId":"chrus-chong"},"content":"        tList.remove(num);","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"chrus-chong"},"content":"        return num;","lastModifiedDate":"2021-09-11"},{"lineNumber":59,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"chrus-chong"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"chrus-chong":60}},{"path":"src/main/java/duke/commands/DoAfterCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"package duke.commands;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"import duke.tasks.DoAfter;","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"public class DoAfterCommand extends Command {","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"    public DoAfterCommand() {","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"        super(\"doafter\");","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"     * Returns String object to describe execution of DoAfterCommand.","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"     * @param des User input into the Duke chat-box.","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"     * @param tList TaskList object used to keep track of all tasks.","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"     * @return String representation of DoAfterCommand.","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"     * @throws DukeException If input for doafter command is not properly formatted.","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"    @Override","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"    public String execute(String des, TaskList tList) throws DukeException {","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"        checkValidDes(des);","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"        if (des.equals(\"doafter\")) {","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"            throw new DukeException(\"\\\"doafter\\\" command not correctly formatted \\n\"","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":"                    + \"Please insert task description and previous task number\");","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"        if (des.chars().filter(c -\u003e c \u003d\u003d \u0027/\u0027).count() \u003e 1) {","lastModifiedDate":"2021-09-04"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"            throw new DukeException(\"Format Error. \"","lastModifiedDate":"2021-09-04"},{"lineNumber":33,"author":{"gitId":"chrus-chong"},"content":"                    + \"Do not use the special character \\\"/\\\" within your task description.\");","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":35,"author":{"gitId":"chrus-chong"},"content":"        try {","lastModifiedDate":"2021-09-04"},{"lineNumber":36,"author":{"gitId":"chrus-chong"},"content":"            DoAfter atHand \u003d addDoAfterFromDescriptionToTaskList(des, tList);","lastModifiedDate":"2021-09-11"},{"lineNumber":37,"author":{"gitId":"chrus-chong"},"content":"            Storage.createFile();","lastModifiedDate":"2021-09-04"},{"lineNumber":38,"author":{"gitId":"chrus-chong"},"content":"            Storage.writeToFile(tList);","lastModifiedDate":"2021-09-04"},{"lineNumber":39,"author":{"gitId":"chrus-chong"},"content":"            return \"Sure. The following task has been added: \\n\"","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"chrus-chong"},"content":"                    + atHand.formatString()","lastModifiedDate":"2021-09-04"},{"lineNumber":41,"author":{"gitId":"chrus-chong"},"content":"                    + \"\\n\"","lastModifiedDate":"2021-09-04"},{"lineNumber":42,"author":{"gitId":"chrus-chong"},"content":"                    + \"\\n\"","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"chrus-chong"},"content":"                    + numberOfTasks(tList)","lastModifiedDate":"2021-09-04"},{"lineNumber":44,"author":{"gitId":"chrus-chong"},"content":"                    + \"\\n\";","lastModifiedDate":"2021-09-04"},{"lineNumber":45,"author":{"gitId":"chrus-chong"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":46,"author":{"gitId":"chrus-chong"},"content":"            throw new DukeException(\"\\\"doafter\\\" command not correctly formatted\");","lastModifiedDate":"2021-09-04"},{"lineNumber":47,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":48,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":49,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":50,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":51,"author":{"gitId":"chrus-chong"},"content":"     * Returns description of previous task based on its String representation.","lastModifiedDate":"2021-09-11"},{"lineNumber":52,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":53,"author":{"gitId":"chrus-chong"},"content":"     * @param previousTask String representation of previous task.","lastModifiedDate":"2021-09-11"},{"lineNumber":54,"author":{"gitId":"chrus-chong"},"content":"     * @return String representing description of previous task.","lastModifiedDate":"2021-09-11"},{"lineNumber":55,"author":{"gitId":"chrus-chong"},"content":"     * @throws DukeException If the taskType belongs to none of the cases.","lastModifiedDate":"2021-09-11"},{"lineNumber":56,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":57,"author":{"gitId":"chrus-chong"},"content":"    private String extractPrevTaskDescription(String previousTask) throws DukeException {","lastModifiedDate":"2021-09-04"},{"lineNumber":58,"author":{"gitId":"chrus-chong"},"content":"        String taskType \u003d previousTask.substring(1, 2);","lastModifiedDate":"2021-09-04"},{"lineNumber":59,"author":{"gitId":"chrus-chong"},"content":"        String des;","lastModifiedDate":"2021-09-04"},{"lineNumber":60,"author":{"gitId":"chrus-chong"},"content":"        int openBracket;","lastModifiedDate":"2021-09-04"},{"lineNumber":61,"author":{"gitId":"chrus-chong"},"content":"        switch (taskType) {","lastModifiedDate":"2021-09-04"},{"lineNumber":62,"author":{"gitId":"chrus-chong"},"content":"        case \"T\":","lastModifiedDate":"2021-09-04"},{"lineNumber":63,"author":{"gitId":"chrus-chong"},"content":"            des \u003d previousTask.substring(7);","lastModifiedDate":"2021-09-04"},{"lineNumber":64,"author":{"gitId":"chrus-chong"},"content":"            break;","lastModifiedDate":"2021-09-04"},{"lineNumber":65,"author":{"gitId":"chrus-chong"},"content":"        case \"E\": //Fallthrough","lastModifiedDate":"2021-09-11"},{"lineNumber":66,"author":{"gitId":"chrus-chong"},"content":"        case \"D\": //Fallthrough","lastModifiedDate":"2021-09-11"},{"lineNumber":67,"author":{"gitId":"chrus-chong"},"content":"        case \"A\":","lastModifiedDate":"2021-09-04"},{"lineNumber":68,"author":{"gitId":"chrus-chong"},"content":"            openBracket \u003d previousTask.indexOf(\u0027(\u0027);","lastModifiedDate":"2021-09-04"},{"lineNumber":69,"author":{"gitId":"chrus-chong"},"content":"            des \u003d previousTask.substring(7, openBracket - 1);","lastModifiedDate":"2021-09-04"},{"lineNumber":70,"author":{"gitId":"chrus-chong"},"content":"            break;","lastModifiedDate":"2021-09-04"},{"lineNumber":71,"author":{"gitId":"chrus-chong"},"content":"        default:","lastModifiedDate":"2021-09-04"},{"lineNumber":72,"author":{"gitId":"chrus-chong"},"content":"            throw new DukeException(\"Unable to load DoAfter task into Duke as type of previous task cannot be read\");","lastModifiedDate":"2021-09-04"},{"lineNumber":73,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":74,"author":{"gitId":"chrus-chong"},"content":"        return des;","lastModifiedDate":"2021-09-04"},{"lineNumber":75,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":76,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":77,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":78,"author":{"gitId":"chrus-chong"},"content":"     * Returns DoAfter object after adding it into the given task list.","lastModifiedDate":"2021-09-11"},{"lineNumber":79,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":80,"author":{"gitId":"chrus-chong"},"content":"     * @param des User input into the Duke chat-box.","lastModifiedDate":"2021-09-11"},{"lineNumber":81,"author":{"gitId":"chrus-chong"},"content":"     * @param tList TaskList object used to keep track of all tasks.","lastModifiedDate":"2021-09-11"},{"lineNumber":82,"author":{"gitId":"chrus-chong"},"content":"     * @return DoAfter task that is the most recent addition to tList.","lastModifiedDate":"2021-09-11"},{"lineNumber":83,"author":{"gitId":"chrus-chong"},"content":"     * @throws DukeException If input number is not valid.","lastModifiedDate":"2021-09-11"},{"lineNumber":84,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":85,"author":{"gitId":"chrus-chong"},"content":"    private DoAfter addDoAfterFromDescriptionToTaskList(String des, TaskList tList) throws DukeException {","lastModifiedDate":"2021-09-11"},{"lineNumber":86,"author":{"gitId":"chrus-chong"},"content":"        String description \u003d des.substring(8, des.indexOf(\u0027/\u0027) - 1);","lastModifiedDate":"2021-09-11"},{"lineNumber":87,"author":{"gitId":"chrus-chong"},"content":"        String stringNumber \u003d des.substring(des.lastIndexOf(\u0027 \u0027) + 1);","lastModifiedDate":"2021-09-11"},{"lineNumber":88,"author":{"gitId":"chrus-chong"},"content":"        int num \u003d Integer.parseInt(stringNumber);","lastModifiedDate":"2021-09-11"},{"lineNumber":89,"author":{"gitId":"chrus-chong"},"content":"        if (num \u003c\u003d 0 || num \u003e tList.getTaskList().size()) {","lastModifiedDate":"2021-09-11"},{"lineNumber":90,"author":{"gitId":"chrus-chong"},"content":"            throw new DukeException(\"The input number is not a valid task number \\n\"","lastModifiedDate":"2021-09-11"},{"lineNumber":91,"author":{"gitId":"chrus-chong"},"content":"                    + \"Please refer to the task list using the \\\"list\\\" command\");","lastModifiedDate":"2021-09-11"},{"lineNumber":92,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":93,"author":{"gitId":"chrus-chong"},"content":"        ArrayList\u003cTask\u003e tasks \u003d tList.getTaskList();","lastModifiedDate":"2021-09-11"},{"lineNumber":94,"author":{"gitId":"chrus-chong"},"content":"        String previousTask \u003d tasks.get(num - 1).toString();","lastModifiedDate":"2021-09-11"},{"lineNumber":95,"author":{"gitId":"chrus-chong"},"content":"        DoAfter atHand \u003d new DoAfter(description, extractPrevTaskDescription(previousTask));","lastModifiedDate":"2021-09-11"},{"lineNumber":96,"author":{"gitId":"chrus-chong"},"content":"        tList.add(atHand);","lastModifiedDate":"2021-09-11"},{"lineNumber":97,"author":{"gitId":"chrus-chong"},"content":"        return atHand;","lastModifiedDate":"2021-09-11"},{"lineNumber":98,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":99,"author":{"gitId":"chrus-chong"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"chrus-chong":99}},{"path":"src/main/java/duke/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"package duke.commands;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":" * DoneCommand class used to represent a Done Command.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":" * Contains methods that","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":" * (i)    executes the DoneCommand","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"    public DoneCommand() {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"        super(\"done\");","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"     * Returns String object to describe a specific task being marked as done.","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"     * @param des   User input into the Duke chat-box.","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"     * @param tList TaskList object used to keep track of all tasks.","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"     * @return String representation of DoneCommand.","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"     * @throws DukeException If input for Delete command is not properly formatted.","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"    @Override","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":"    public String execute(String des, TaskList tList) throws DukeException {","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"        checkValidDes(des);","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"        Task atHand \u003d markTaskAsDone(des, tList);","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"        Storage.createFile();","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"chrus-chong"},"content":"        Storage.writeToFile(tList);","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"chrus-chong"},"content":"        return \"I see that you have completed a task. Keep up the good work!\\n\"","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"chrus-chong"},"content":"                + \"\\n\"","lastModifiedDate":"2021-09-11"},{"lineNumber":36,"author":{"gitId":"chrus-chong"},"content":"                + \"This task has now been marked as completed\\n\"","lastModifiedDate":"2021-09-11"},{"lineNumber":37,"author":{"gitId":"chrus-chong"},"content":"                + atHand.getStatusIcon()","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"chrus-chong"},"content":"                + \" \" + atHand.getDescription()","lastModifiedDate":"2021-09-11"},{"lineNumber":39,"author":{"gitId":"chrus-chong"},"content":"                + \"\\n\";","lastModifiedDate":"2021-09-11"},{"lineNumber":40,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":41,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":42,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":43,"author":{"gitId":"chrus-chong"},"content":"     * Returns Task object that is marked as done.","lastModifiedDate":"2021-09-11"},{"lineNumber":44,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":45,"author":{"gitId":"chrus-chong"},"content":"     * @param des User input into the Duke chat-box.","lastModifiedDate":"2021-09-11"},{"lineNumber":46,"author":{"gitId":"chrus-chong"},"content":"     * @param tList TaskList object used to keep track of all tasks.","lastModifiedDate":"2021-09-11"},{"lineNumber":47,"author":{"gitId":"chrus-chong"},"content":"     * @return Task object marked as done.","lastModifiedDate":"2021-09-11"},{"lineNumber":48,"author":{"gitId":"chrus-chong"},"content":"     * @throws DukeException If task has been completed, too many arguments are provided,","lastModifiedDate":"2021-09-11"},{"lineNumber":49,"author":{"gitId":"chrus-chong"},"content":"     * or if input number is not valid.","lastModifiedDate":"2021-09-11"},{"lineNumber":50,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":51,"author":{"gitId":"chrus-chong"},"content":"    private Task markTaskAsDone(String des, TaskList tList) throws DukeException {","lastModifiedDate":"2021-09-11"},{"lineNumber":52,"author":{"gitId":"chrus-chong"},"content":"        ArrayList\u003cTask\u003e tasks \u003d tList.getTaskList();","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"chrus-chong"},"content":"        String stringNumber \u003d des.substring(des.lastIndexOf(\u0027 \u0027) + 1);","lastModifiedDate":"2021-09-04"},{"lineNumber":54,"author":{"gitId":"chrus-chong"},"content":"        int num \u003d Integer.parseInt(stringNumber);","lastModifiedDate":"2021-09-04"},{"lineNumber":55,"author":{"gitId":"chrus-chong"},"content":"        if (num \u003c\u003d 0 || num \u003e tasks.size()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"chrus-chong"},"content":"            throw new DukeException(\"The input number is not a valid task number \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"chrus-chong"},"content":"                    + \"Please refer to the task list using the \\\"list\\\" command\");","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":59,"author":{"gitId":"chrus-chong"},"content":"        if (this.countSpaces(des) \u003e 1) {","lastModifiedDate":"2021-09-04"},{"lineNumber":60,"author":{"gitId":"chrus-chong"},"content":"            throw new DukeException(\"Too many arguments being provided to \\\"done\\\" \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"chrus-chong"},"content":"                    + \"Please refer to proper usage of commands with \\\"allCmd\\\"\");","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":63,"author":{"gitId":"chrus-chong"},"content":"        Task atHand \u003d tasks.get(num - 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"chrus-chong"},"content":"        if (atHand.getIsDone()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"chrus-chong"},"content":"            throw new DukeException(\"You have already completed this task.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":67,"author":{"gitId":"chrus-chong"},"content":"        atHand.markAsDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"chrus-chong"},"content":"        return atHand;","lastModifiedDate":"2021-09-11"},{"lineNumber":69,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"chrus-chong"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"chrus-chong":70}},{"path":"src/main/java/duke/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"package duke.commands;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":" * EventCommand class used to represent an Event Command.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":" * Contains methods that","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":" * (i)    executes the EventCommand","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"    public EventCommand() {","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"        super(\"event\");","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"     * Returns String object to describe execution of EventCommand.","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"     * @param des   User input into the Duke chat-box.","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"     * @param tList TaskList object used to keep track of all tasks.","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"     * @return String representation of EventCommand.","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"     * @throws DukeException If input for Delete command is not properly formatted.","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"    public String execute(String des, TaskList tList) throws DukeException {","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"        checkValidDes(des);","lastModifiedDate":"2021-09-04"},{"lineNumber":33,"author":{"gitId":"chrus-chong"},"content":"        if (des.equals(\"event\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"chrus-chong"},"content":"            throw new DukeException(\"\\\"event\\\" command not correctly formatted \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"chrus-chong"},"content":"                    + \"Please insert task and timeframe arguments\");","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"chrus-chong"},"content":"        if (!des.contains(\"/at\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"chrus-chong"},"content":"            throw new DukeException(\"\\\"event\\\" command not correctly formatted \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"chrus-chong"},"content":"                    + \"Please do not forget to include \\\"at\\\" and insert timeframe argument\");","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"chrus-chong"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"chrus-chong"},"content":"            if (des.chars().filter(c -\u003e c \u003d\u003d \u0027/\u0027).count() \u003e 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"chrus-chong"},"content":"                throw new DukeException(\"Format Error. \"","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"chrus-chong"},"content":"                        + \"Do not use the special character \\\"/\\\" within your task description.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"chrus-chong"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"chrus-chong"},"content":"            Event atHand \u003d addEventFromDescriptionToTaskList(des, tList);","lastModifiedDate":"2021-09-11"},{"lineNumber":47,"author":{"gitId":"chrus-chong"},"content":"            Storage.createFile();","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"chrus-chong"},"content":"            Storage.writeToFile(tList);","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"chrus-chong"},"content":"            return \"Sure. The following task has been added: \\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"chrus-chong"},"content":"                    + atHand.formatString()","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"chrus-chong"},"content":"                    + \"\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"chrus-chong"},"content":"                    + \"\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"chrus-chong"},"content":"                    + numberOfTasks(tList)","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"chrus-chong"},"content":"                    + \"\\n\";","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"chrus-chong"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"chrus-chong"},"content":"            throw new DukeException(\"\\\"event\\\" command not correctly formatted\");","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":60,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":61,"author":{"gitId":"chrus-chong"},"content":"     * Returns Event object after adding it into the given task list.","lastModifiedDate":"2021-09-11"},{"lineNumber":62,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":63,"author":{"gitId":"chrus-chong"},"content":"     * @param des User input into the Duke chat-box.","lastModifiedDate":"2021-09-11"},{"lineNumber":64,"author":{"gitId":"chrus-chong"},"content":"     * @param tList TaskList object used to keep track of all tasks.","lastModifiedDate":"2021-09-11"},{"lineNumber":65,"author":{"gitId":"chrus-chong"},"content":"     * @return Event task that is the most recent addition to tList.","lastModifiedDate":"2021-09-11"},{"lineNumber":66,"author":{"gitId":"chrus-chong"},"content":"     * @throws DukeException If user input, des, is not properly formatted for extractDate() or extractTimeEvent().","lastModifiedDate":"2021-09-11"},{"lineNumber":67,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":68,"author":{"gitId":"chrus-chong"},"content":"    private Event addEventFromDescriptionToTaskList(String des, TaskList tList) throws DukeException {","lastModifiedDate":"2021-09-11"},{"lineNumber":69,"author":{"gitId":"chrus-chong"},"content":"        String description \u003d des.substring(6, des.indexOf(\u0027/\u0027) - 1);","lastModifiedDate":"2021-09-11"},{"lineNumber":70,"author":{"gitId":"chrus-chong"},"content":"        LocalDate date \u003d Storage.extractDate(des);","lastModifiedDate":"2021-09-11"},{"lineNumber":71,"author":{"gitId":"chrus-chong"},"content":"        ArrayList\u003cLocalTime\u003e startEnd \u003d Storage.extractTimeEvent(des);","lastModifiedDate":"2021-09-11"},{"lineNumber":72,"author":{"gitId":"chrus-chong"},"content":"        Event atHand \u003d new Event(description, date, startEnd.get(0), startEnd.get(1));","lastModifiedDate":"2021-09-11"},{"lineNumber":73,"author":{"gitId":"chrus-chong"},"content":"        tList.add(atHand);","lastModifiedDate":"2021-09-11"},{"lineNumber":74,"author":{"gitId":"chrus-chong"},"content":"        return atHand;","lastModifiedDate":"2021-09-11"},{"lineNumber":75,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":76,"author":{"gitId":"chrus-chong"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"chrus-chong":76}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"package duke.commands;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"    public FindCommand() {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"        super(\"find\");","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"     * Returns String object to describe the relevant tasks from the given TaskList.","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"     * @param des User input into the Duke chat-box.","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"     * @return String representation of FindCommand.","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"     * @throws DukeException If done command is not formatted properly","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"     *                       or if task has already been completed.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"    public String execute(String des, TaskList tList) throws DukeException {","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"        checkValidDes(des);","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"        if (des.equals(\"find\") || des.equals(\"find \")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"            throw new DukeException(\"The \\\"find\\\" command accepts at least one search input.\\nPlease add a keyword to search for.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"        String result \u003d getRelevantTasks(des, tList);","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"        return result;","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"     * Returns String representation of relevant tasks that match the keywords being searched.","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"chrus-chong"},"content":"     * @param des User input into the Duke chat-box.","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"chrus-chong"},"content":"     * @param tList TaskList object used to keep track of all tasks.","lastModifiedDate":"2021-09-11"},{"lineNumber":36,"author":{"gitId":"chrus-chong"},"content":"     * @return String object representing tasks that match keywords.","lastModifiedDate":"2021-09-11"},{"lineNumber":37,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"chrus-chong"},"content":"    private String getRelevantTasks(String des, TaskList tList) {","lastModifiedDate":"2021-09-11"},{"lineNumber":39,"author":{"gitId":"chrus-chong"},"content":"        String searchInput \u003d des.substring(des.indexOf(\u0027 \u0027) + 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"chrus-chong"},"content":"        String result \u003d \"\";","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"chrus-chong"},"content":"        result \u003d result + \"Here are your tasks that contain \\\"\" + searchInput + \"\\\"\\n\";","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"chrus-chong"},"content":"        ArrayList\u003cTask\u003e tasks \u003d tList.getTaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"chrus-chong"},"content":"        int count \u003d 1;","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"chrus-chong"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"chrus-chong"},"content":"            String description \u003d t.formatString();","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"chrus-chong"},"content":"            if (description.contains(searchInput)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"chrus-chong"},"content":"                result \u003d result + count + \". \" + t.formatString() + \"\\n\";","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"chrus-chong"},"content":"                count++;","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"chrus-chong"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"chrus-chong"},"content":"        return result;","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"chrus-chong"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"chrus-chong":53}},{"path":"src/main/java/duke/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"package duke.commands;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":" * HelpCommand class serves as an in-built user-guide that","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":" * furnishes the user with information on how to use and format all","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":" * the commands available.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":" * * Contains methods that","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":" * * (i)    executes the HelpCommand","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"    public HelpCommand() {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"        super(\"help\");","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"     * Returns String object to inform user of all possible commands on Duke.","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"     * @param des   User input into the Duke chat-box.","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"     * @param tList TaskList object used to keep track of all tasks.","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"     * @return String representation of HelpCommand.","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"    public String execute(String des, TaskList tList) {","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"        checkValidDes(des);","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"        String result \u003d \"The possible commands are as follows:\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"                + \"\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":"                + \"1. bye  -------- exit the Duke chat-bot\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"                + \"\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"                + \"2. list -------- list all tasks\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"                + \"\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"chrus-chong"},"content":"                + \"3. done -------- Usage --\u003e done x, where x is an integer.\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"chrus-chong"},"content":"                + \"               - Marks the corresponding task as completed\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"chrus-chong"},"content":"                + \"\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"chrus-chong"},"content":"                + \"4. todo -------- Usage --\u003e \\\"todo borrow book\\\"\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"chrus-chong"},"content":"                + \"               - Inputs a ToDo task into the task list\\n\"","lastModifiedDate":"2021-09-04"},{"lineNumber":38,"author":{"gitId":"chrus-chong"},"content":"                + \"\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"chrus-chong"},"content":"                + \"5. deadline ---- Usage --\u003e \\\"deadline submit essay /by 2021-06-03 23:59 \\\"\\n\"","lastModifiedDate":"2021-09-03"},{"lineNumber":40,"author":{"gitId":"chrus-chong"},"content":"                + \"               - Remember not to miss the \\\"/by\\\" symbol!\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"chrus-chong"},"content":"                + \"               - Date should be input in YYYY-MM-DD format\\n\"","lastModifiedDate":"2021-09-03"},{"lineNumber":42,"author":{"gitId":"chrus-chong"},"content":"                + \"               - Time that deadline is due by should be input in HH:MM format\\n\"","lastModifiedDate":"2021-09-03"},{"lineNumber":43,"author":{"gitId":"chrus-chong"},"content":"                + \"               - Inputs a Deadline task into the task list\\n\"","lastModifiedDate":"2021-09-04"},{"lineNumber":44,"author":{"gitId":"chrus-chong"},"content":"                + \"\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"chrus-chong"},"content":"                + \"6. event ------- Usage --\u003e \\\"event project meeting /at 2021-06-03 09:00 13:00\\\"\\n\"","lastModifiedDate":"2021-09-03"},{"lineNumber":46,"author":{"gitId":"chrus-chong"},"content":"                + \"               - Remember not to miss the \\\"/at\\\" symbol!\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"chrus-chong"},"content":"                + \"               - Date should be input in YYYY-MM-DD format\\n\"","lastModifiedDate":"2021-09-03"},{"lineNumber":48,"author":{"gitId":"chrus-chong"},"content":"                + \"               - Start time and End time of event should be input in HH:MM format\\n\"","lastModifiedDate":"2021-09-03"},{"lineNumber":49,"author":{"gitId":"chrus-chong"},"content":"                + \"               - Inputs an Event task into the task list\\n\"","lastModifiedDate":"2021-09-04"},{"lineNumber":50,"author":{"gitId":"chrus-chong"},"content":"                + \"\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"chrus-chong"},"content":"                + \"7. doafter ----- Usage --\u003e \\\"doafter complete homework /aft x\\\", where x is an integer.\\n\"","lastModifiedDate":"2021-09-04"},{"lineNumber":52,"author":{"gitId":"chrus-chong"},"content":"                + \"               - Remember not to miss the \\\"/aft\\\" symbol!\\n\"","lastModifiedDate":"2021-09-04"},{"lineNumber":53,"author":{"gitId":"chrus-chong"},"content":"                + \"               - Inputs a DoAfter task into the task list\\n\"","lastModifiedDate":"2021-09-04"},{"lineNumber":54,"author":{"gitId":"chrus-chong"},"content":"                + \"\\n\"","lastModifiedDate":"2021-09-04"},{"lineNumber":55,"author":{"gitId":"chrus-chong"},"content":"                + \"8. delete ------ Usage --\u003e delete x, where x is an integer.\\n\"","lastModifiedDate":"2021-09-04"},{"lineNumber":56,"author":{"gitId":"chrus-chong"},"content":"                + \"               - Deletes the corresponding task\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"chrus-chong"},"content":"                + \"\\n\"","lastModifiedDate":"2021-09-03"},{"lineNumber":58,"author":{"gitId":"chrus-chong"},"content":"                + \"9. find -------- Usage --\u003e find xxxxx\\n\"","lastModifiedDate":"2021-09-04"},{"lineNumber":59,"author":{"gitId":"chrus-chong"},"content":"                + \"               \"","lastModifiedDate":"2021-09-03"},{"lineNumber":60,"author":{"gitId":"chrus-chong"},"content":"                + \"- Find a specific keyword, or a string of text and extract the relevant tasks from the TaskList\\n\"","lastModifiedDate":"2021-09-03"},{"lineNumber":61,"author":{"gitId":"chrus-chong"},"content":"                + \"\\n\"","lastModifiedDate":"2021-09-03"},{"lineNumber":62,"author":{"gitId":"chrus-chong"},"content":"                + \"10. help -------- list all possible commands available in Duke\";","lastModifiedDate":"2021-09-04"},{"lineNumber":63,"author":{"gitId":"chrus-chong"},"content":"        return result;","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"chrus-chong"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"chrus-chong":65}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"package duke.commands;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":" * ListCommand class used to represent a List Command.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":" * Contains methods that","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":" * (i)    executes the ListCommand","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"    public ListCommand() {","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"        super(\"list\");","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"     * Returns String object to list all tasks in TaskList.","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"     * @param des   User input into the Duke chat-box.","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"     * @param tList TaskList object used to keep track of all tasks.","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"     * @return String representation of ListCommand.","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"    public String execute(String des, TaskList tList) {","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"        checkValidDes(des);","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"        String result \u003d getListOfTasks(des, tList);","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":"        return result;","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"    private String getListOfTasks(String des, TaskList tList) {","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"chrus-chong"},"content":"        String result \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2021-09-14"},{"lineNumber":34,"author":{"gitId":"chrus-chong"},"content":"        ArrayList\u003cTask\u003e tasks \u003d tList.getTaskList();","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"chrus-chong"},"content":"        int count \u003d 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"chrus-chong"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"chrus-chong"},"content":"            result \u003d result + count + \". \" + t.formatString() + \"\\n\";","lastModifiedDate":"2021-09-14"},{"lineNumber":38,"author":{"gitId":"chrus-chong"},"content":"            count++;","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"chrus-chong"},"content":"        return result + \"\\n\";","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"chrus-chong"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"chrus-chong":42}},{"path":"src/main/java/duke/commands/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"package duke.commands;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":" * ToDoCommand class used to represent a ToDo Command.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":" * Contains methods that","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":" * (i)    executes the ToDoCommand","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"public class ToDoCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"    public ToDoCommand() {","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"        super(\"todo\");","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"     * Returns String object to describe execution of ToDoCommand.","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"     * @param des   User input into the Duke chat-box.","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"     * @param tList TaskList object used to keep track of all tasks.","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"     * @return String representation of ToDoCommand.","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"     * @throws DukeException If input for ToDo command is not properly formatted.","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"    public String execute(String des, TaskList tList) throws DukeException {","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"        checkValidDes(des);","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"        if (des.equals(\"todo\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":"            throw new DukeException(\"\\\"todo\\\" command not correctly formatted \\nPlease insert task argument\");","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"        ToDo atHand \u003d addToDoFromDescriptionToTaskList(des, tList);","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"        Storage.createFile();","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"chrus-chong"},"content":"        Storage.writeToFile(tList);","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"chrus-chong"},"content":"        return \"Sure. The following task has been added: \\n\"","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"chrus-chong"},"content":"                + atHand","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"chrus-chong"},"content":"                + \"\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"chrus-chong"},"content":"                + \"\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"chrus-chong"},"content":"                + numberOfTasks(tList)","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"chrus-chong"},"content":"                + \"\\n\";","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":41,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":43,"author":{"gitId":"chrus-chong"},"content":"     * Returns ToDo object after adding it into the given task list.","lastModifiedDate":"2021-09-11"},{"lineNumber":44,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":45,"author":{"gitId":"chrus-chong"},"content":"     * @param des User input into the Duke chat-box.","lastModifiedDate":"2021-09-11"},{"lineNumber":46,"author":{"gitId":"chrus-chong"},"content":"     * @param tList TaskList object used to keep track of all tasks.","lastModifiedDate":"2021-09-11"},{"lineNumber":47,"author":{"gitId":"chrus-chong"},"content":"     * @return ToDo task that is the most recent addition to tList.","lastModifiedDate":"2021-09-11"},{"lineNumber":48,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":49,"author":{"gitId":"chrus-chong"},"content":"    private ToDo addToDoFromDescriptionToTaskList(String des, TaskList tList) {","lastModifiedDate":"2021-09-11"},{"lineNumber":50,"author":{"gitId":"chrus-chong"},"content":"        String description \u003d des.substring(5);","lastModifiedDate":"2021-09-11"},{"lineNumber":51,"author":{"gitId":"chrus-chong"},"content":"        ToDo atHand \u003d new ToDo(description);","lastModifiedDate":"2021-09-11"},{"lineNumber":52,"author":{"gitId":"chrus-chong"},"content":"        tList.add(atHand);","lastModifiedDate":"2021-09-11"},{"lineNumber":53,"author":{"gitId":"chrus-chong"},"content":"        return atHand;","lastModifiedDate":"2021-09-11"},{"lineNumber":54,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"chrus-chong"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"chrus-chong":55}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"package duke.exceptions;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":" * Custom DukeException class created to catch exceptions unique to the Duke chat-box.","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"    public DukeException(String err) {","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"        super(err);","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"chrus-chong":10}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"package duke.parser;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":" * Parser class used parse user input.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":" * Contains method that","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":" * (i)    checks for keywords present in user input and returns the keyword found.","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"public class Parser {","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"     * Returns String type object that informs the run() method which command should be called.","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"     * If no keyword is found, null is returned.","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"     * @param des User input into the Duke chat-box.","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"     * @return keyword present in user input","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"    public String checkForKeyword(String des) {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"        if (des.equals(\"help\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"            return \"help\";","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"        } else if (des.equals(\"bye\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"            return \"bye\";","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"        } else if (des.equals(\"list\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"            return \"list\";","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"        } else if (des.contains(\"done\") \u0026\u0026 des.startsWith(\"done\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"            return checkDoneDescription(des);","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"        } else if (des.contains(\"delete\") \u0026\u0026 des.startsWith(\"delete\")) {","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"            return checkDeleteDescription(des);","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"        } else if (des.contains(\"deadline\") \u0026\u0026 des.startsWith(\"deadline\")) {","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"            return \"deadline\";","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":"        } else if (des.contains(\"event\") \u0026\u0026 des.startsWith(\"event\")) {","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"            return \"event\";","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"        } else if (des.contains(\"todo\") \u0026\u0026 des.startsWith(\"todo\")) {","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"            return \"todo\";","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"chrus-chong"},"content":"        } else if (des.contains(\"doafter\") \u0026\u0026 des.startsWith(\"doafter\")) {","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"chrus-chong"},"content":"            return checkDoAfterDescription(des);","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"chrus-chong"},"content":"        } else if (des.contains(\"find\") \u0026\u0026 des.startsWith(\"find\")) {","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"chrus-chong"},"content":"            return \"find\";","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"chrus-chong"},"content":"        } else {","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"chrus-chong"},"content":"            return null;","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"chrus-chong"},"content":"     * Returns \"done\" keyword if user input is valid.","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"chrus-chong"},"content":"     * If user input not valid, null is returned.","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"chrus-chong"},"content":"     * @param des User input into the Duke chat-box.","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"chrus-chong"},"content":"     * @return String object representing done keyword.","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"chrus-chong"},"content":"    private String checkDoneDescription(String des) {","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"chrus-chong"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"chrus-chong"},"content":"            String stringNumber \u003d des.substring(des.indexOf(\u0027 \u0027) + 1);","lastModifiedDate":"2021-09-04"},{"lineNumber":52,"author":{"gitId":"chrus-chong"},"content":"            Integer.parseInt(stringNumber);","lastModifiedDate":"2021-09-04"},{"lineNumber":53,"author":{"gitId":"chrus-chong"},"content":"            return \"done\";","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"chrus-chong"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"chrus-chong"},"content":"            return null;","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"chrus-chong"},"content":"     * Returns \"delete\" keyword if user input is valid.","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"chrus-chong"},"content":"     * If user input not valid, null is returned.","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"chrus-chong"},"content":"     * @param des User input into the Duke chat-box.","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"chrus-chong"},"content":"     * @return String object representing delete keyword.","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"chrus-chong"},"content":"    private String checkDeleteDescription(String des) {","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"chrus-chong"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"chrus-chong"},"content":"            String stringNumber \u003d des.substring(des.indexOf(\u0027 \u0027) + 1);","lastModifiedDate":"2021-09-04"},{"lineNumber":69,"author":{"gitId":"chrus-chong"},"content":"            Integer.parseInt(stringNumber);","lastModifiedDate":"2021-09-04"},{"lineNumber":70,"author":{"gitId":"chrus-chong"},"content":"            return \"delete\";","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"chrus-chong"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"chrus-chong"},"content":"            return null;","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":75,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"chrus-chong"},"content":"     * Returns \"doafter\" keyword if user input is valid.","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"chrus-chong"},"content":"     * If user input not valid, null is returned.","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":80,"author":{"gitId":"chrus-chong"},"content":"     * @param des User input into the Duke chat-box.","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"chrus-chong"},"content":"     * @return String object representing doafter keyword.","lastModifiedDate":"2021-09-17"},{"lineNumber":82,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":83,"author":{"gitId":"chrus-chong"},"content":"    private String checkDoAfterDescription(String des) {","lastModifiedDate":"2021-09-17"},{"lineNumber":84,"author":{"gitId":"chrus-chong"},"content":"        try {","lastModifiedDate":"2021-09-04"},{"lineNumber":85,"author":{"gitId":"chrus-chong"},"content":"            String stringNumber \u003d des.substring(des.lastIndexOf(\u0027 \u0027) + 1);","lastModifiedDate":"2021-09-21"},{"lineNumber":86,"author":{"gitId":"chrus-chong"},"content":"            Integer.parseInt(stringNumber);","lastModifiedDate":"2021-09-11"},{"lineNumber":87,"author":{"gitId":"chrus-chong"},"content":"            return \"doafter\";","lastModifiedDate":"2021-09-04"},{"lineNumber":88,"author":{"gitId":"chrus-chong"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":89,"author":{"gitId":"chrus-chong"},"content":"            return null;","lastModifiedDate":"2021-09-04"},{"lineNumber":90,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":91,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"chrus-chong"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"chrus-chong":92}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"package duke.storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import java.io.File;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"import duke.tasks.DoAfter;","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":" * Storage class used to handle reading and writing to file.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":" * Contains methods that","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":" * (i)    creates data folder and tasks file.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":" * (ii)   writes to tasks file.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":" * (iii)  reads from tasks file.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":" * (iv)   extracts date from string of text.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":" * (v)    extracts time from string of text for Deadline task.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":" * (vi)   extracts time from string of text for Event task.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"public class Storage {","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"chrus-chong"},"content":"     * Creates a folder data and a file, tasks.txt, if file is not found in the directory.","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"chrus-chong"},"content":"    public static void createFile() {","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"chrus-chong"},"content":"        File dir \u003d new File(\"data/\");","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"chrus-chong"},"content":"        File tasks \u003d new File(\"data/tasks.txt\");","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"chrus-chong"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"chrus-chong"},"content":"            dir.mkdir();","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"chrus-chong"},"content":"            if (tasks.createNewFile()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"chrus-chong"},"content":"                System.out.println(tasks.getName() + \" created\");","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"chrus-chong"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"chrus-chong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"chrus-chong"},"content":"            System.out.println(e);","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"chrus-chong"},"content":"     * Writes all tasks and their respective statuses to the tasks.txt file.","lastModifiedDate":"2021-09-03"},{"lineNumber":50,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"chrus-chong"},"content":"     * @param tList TaskList object used to keep track of all tasks.","lastModifiedDate":"2021-09-04"},{"lineNumber":52,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"chrus-chong"},"content":"    public static void writeToFile(TaskList tList) {","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"chrus-chong"},"content":"        ArrayList\u003cTask\u003e tasks \u003d tList.getTaskList();","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"chrus-chong"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"chrus-chong"},"content":"            FileWriter writer \u003d new FileWriter(\"data/tasks.txt\");","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"chrus-chong"},"content":"            for (Task t : tasks) {","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"chrus-chong"},"content":"                writer.write(t.toString() + System.lineSeparator());","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"chrus-chong"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"chrus-chong"},"content":"            writer.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"chrus-chong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"chrus-chong"},"content":"            System.out.println(e);","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"chrus-chong"},"content":"     * Reads all previously entered tasks from tasks.txt and stores them in the Duke.","lastModifiedDate":"2021-09-03"},{"lineNumber":68,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"chrus-chong"},"content":"     * @param tList TaskList object used to keep track of all tasks.","lastModifiedDate":"2021-09-04"},{"lineNumber":70,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"chrus-chong"},"content":"    public static void readFromFile(TaskList tList) {","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"chrus-chong"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"chrus-chong"},"content":"            File tasks \u003d new File(\"data/tasks.txt\");","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"chrus-chong"},"content":"            Scanner sc \u003d new Scanner(tasks);","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"chrus-chong"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"chrus-chong"},"content":"                String atHand \u003d sc.nextLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"chrus-chong"},"content":"                String taskType \u003d atHand.substring(1, 2);","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"chrus-chong"},"content":"                String done \u003d (atHand.charAt(4) \u003d\u003d \u0027 \u0027) ? \" \" : \"X\";","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"chrus-chong"},"content":"                String des;","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"chrus-chong"},"content":"                Task t;","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"chrus-chong"},"content":"                int openBracket;","lastModifiedDate":"2021-09-04"},{"lineNumber":82,"author":{"gitId":"chrus-chong"},"content":"                LocalDate date;","lastModifiedDate":"2021-09-04"},{"lineNumber":83,"author":{"gitId":"chrus-chong"},"content":"                switch (taskType) {","lastModifiedDate":"2021-09-04"},{"lineNumber":84,"author":{"gitId":"chrus-chong"},"content":"                case \"T\":","lastModifiedDate":"2021-09-04"},{"lineNumber":85,"author":{"gitId":"chrus-chong"},"content":"                    t \u003d readToDoFromFile(atHand);","lastModifiedDate":"2021-09-11"},{"lineNumber":86,"author":{"gitId":"chrus-chong"},"content":"                    break;","lastModifiedDate":"2021-09-04"},{"lineNumber":87,"author":{"gitId":"chrus-chong"},"content":"                case \"E\":","lastModifiedDate":"2021-09-04"},{"lineNumber":88,"author":{"gitId":"chrus-chong"},"content":"                    t \u003d readEventFromFile(atHand);","lastModifiedDate":"2021-09-11"},{"lineNumber":89,"author":{"gitId":"chrus-chong"},"content":"                    break;","lastModifiedDate":"2021-09-04"},{"lineNumber":90,"author":{"gitId":"chrus-chong"},"content":"                case \"D\":","lastModifiedDate":"2021-09-04"},{"lineNumber":91,"author":{"gitId":"chrus-chong"},"content":"                    t \u003d readDeadlineFromFile(atHand);","lastModifiedDate":"2021-09-11"},{"lineNumber":92,"author":{"gitId":"chrus-chong"},"content":"                    break;","lastModifiedDate":"2021-09-04"},{"lineNumber":93,"author":{"gitId":"chrus-chong"},"content":"                case \"A\":","lastModifiedDate":"2021-09-04"},{"lineNumber":94,"author":{"gitId":"chrus-chong"},"content":"                    t \u003d readDoAfterFromFile(atHand);","lastModifiedDate":"2021-09-11"},{"lineNumber":95,"author":{"gitId":"chrus-chong"},"content":"                    break;","lastModifiedDate":"2021-09-04"},{"lineNumber":96,"author":{"gitId":"chrus-chong"},"content":"                default:","lastModifiedDate":"2021-09-04"},{"lineNumber":97,"author":{"gitId":"chrus-chong"},"content":"                    throw new DukeException(\"Task Type not recognised. Task not loaded into Duke chat-bot\");","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"chrus-chong"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"chrus-chong"},"content":"                tList.add(t);","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"chrus-chong"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"chrus-chong"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"chrus-chong"},"content":"            return;","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"chrus-chong"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"chrus-chong"},"content":"            System.out.println(e);","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":107,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":109,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"chrus-chong"},"content":"     * Returns LocalDate object to represent the date that accompanies a task.","lastModifiedDate":"2021-09-03"},{"lineNumber":111,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"chrus-chong"},"content":"     * @param des User input into the Duke chat-box.","lastModifiedDate":"2021-09-04"},{"lineNumber":113,"author":{"gitId":"chrus-chong"},"content":"     * @return Date of a task.","lastModifiedDate":"2021-09-03"},{"lineNumber":114,"author":{"gitId":"chrus-chong"},"content":"     * @throws DukeException When date is not properly formatted.","lastModifiedDate":"2021-09-04"},{"lineNumber":115,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"chrus-chong"},"content":"    public static LocalDate extractDate(String des) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":117,"author":{"gitId":"chrus-chong"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":118,"author":{"gitId":"chrus-chong"},"content":"            int startIndex \u003d des.indexOf(\u0027/\u0027) + 4;","lastModifiedDate":"2021-08-23"},{"lineNumber":119,"author":{"gitId":"chrus-chong"},"content":"            int endIndex \u003d startIndex + 10;","lastModifiedDate":"2021-08-23"},{"lineNumber":120,"author":{"gitId":"chrus-chong"},"content":"            return LocalDate.parse(des.substring(startIndex, endIndex));","lastModifiedDate":"2021-08-23"},{"lineNumber":121,"author":{"gitId":"chrus-chong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":122,"author":{"gitId":"chrus-chong"},"content":"            throw new DukeException(\"Date not properly formatted\");","lastModifiedDate":"2021-08-23"},{"lineNumber":123,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":124,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":125,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":126,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":127,"author":{"gitId":"chrus-chong"},"content":"     * Returns LocalTime object to represent the time that accompanies a Deadline task.","lastModifiedDate":"2021-09-03"},{"lineNumber":128,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":129,"author":{"gitId":"chrus-chong"},"content":"     * @param des User input into the Duke chat-box.","lastModifiedDate":"2021-09-04"},{"lineNumber":130,"author":{"gitId":"chrus-chong"},"content":"     * @return Time that deadline is due by.","lastModifiedDate":"2021-09-03"},{"lineNumber":131,"author":{"gitId":"chrus-chong"},"content":"     * @throws DukeException When date is not properly formatted.","lastModifiedDate":"2021-09-04"},{"lineNumber":132,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":133,"author":{"gitId":"chrus-chong"},"content":"    public static LocalTime extractTimeDeadline(String des) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":134,"author":{"gitId":"chrus-chong"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":135,"author":{"gitId":"chrus-chong"},"content":"            String time \u003d des.substring(des.lastIndexOf(\u0027-\u0027) + 4, des.lastIndexOf(\u0027-\u0027) + 9);","lastModifiedDate":"2021-08-23"},{"lineNumber":136,"author":{"gitId":"chrus-chong"},"content":"            return LocalTime.parse(time);","lastModifiedDate":"2021-08-23"},{"lineNumber":137,"author":{"gitId":"chrus-chong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":138,"author":{"gitId":"chrus-chong"},"content":"            throw new DukeException(\"Time not properly formatted\");","lastModifiedDate":"2021-08-23"},{"lineNumber":139,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":140,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":141,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":142,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":143,"author":{"gitId":"chrus-chong"},"content":"     * Returns ArrayList of LocalTime objects to represent the timings that accompany an Event task.","lastModifiedDate":"2021-09-03"},{"lineNumber":144,"author":{"gitId":"chrus-chong"},"content":"     * The start time is stored at index 0 while the end time is stored at index 1.","lastModifiedDate":"2021-09-03"},{"lineNumber":145,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":146,"author":{"gitId":"chrus-chong"},"content":"     * @param des User input into the Duke chat-box.","lastModifiedDate":"2021-09-04"},{"lineNumber":147,"author":{"gitId":"chrus-chong"},"content":"     * @return ArrayList of LocalTime objects containing start and end time of an event.","lastModifiedDate":"2021-09-03"},{"lineNumber":148,"author":{"gitId":"chrus-chong"},"content":"     * @throws DukeException When date is not properly formatted.","lastModifiedDate":"2021-09-04"},{"lineNumber":149,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":150,"author":{"gitId":"chrus-chong"},"content":"    public static ArrayList\u003cLocalTime\u003e extractTimeEvent(String des) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":151,"author":{"gitId":"chrus-chong"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":152,"author":{"gitId":"chrus-chong"},"content":"            String time \u003d des.substring(des.lastIndexOf(\u0027-\u0027) + 4, des.lastIndexOf(\u0027-\u0027) + 15);","lastModifiedDate":"2021-08-23"},{"lineNumber":153,"author":{"gitId":"chrus-chong"},"content":"            String firstTime \u003d time.substring(0, 5);","lastModifiedDate":"2021-08-23"},{"lineNumber":154,"author":{"gitId":"chrus-chong"},"content":"            String secondTime \u003d time.substring(6);","lastModifiedDate":"2021-08-23"},{"lineNumber":155,"author":{"gitId":"chrus-chong"},"content":"            ArrayList\u003cLocalTime\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":156,"author":{"gitId":"chrus-chong"},"content":"            result.add(LocalTime.parse(firstTime));","lastModifiedDate":"2021-08-23"},{"lineNumber":157,"author":{"gitId":"chrus-chong"},"content":"            result.add(LocalTime.parse(secondTime));","lastModifiedDate":"2021-08-23"},{"lineNumber":158,"author":{"gitId":"chrus-chong"},"content":"            return result;","lastModifiedDate":"2021-08-23"},{"lineNumber":159,"author":{"gitId":"chrus-chong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":160,"author":{"gitId":"chrus-chong"},"content":"            throw new DukeException(\"Time not properly formatted\");","lastModifiedDate":"2021-08-23"},{"lineNumber":161,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":162,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":163,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":164,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":165,"author":{"gitId":"chrus-chong"},"content":"     * Returns ToDo object read from String representation of a task.","lastModifiedDate":"2021-09-11"},{"lineNumber":166,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":167,"author":{"gitId":"chrus-chong"},"content":"     * @param atHand String object representing a task.","lastModifiedDate":"2021-09-11"},{"lineNumber":168,"author":{"gitId":"chrus-chong"},"content":"     * @return ToDo object read from string.","lastModifiedDate":"2021-09-11"},{"lineNumber":169,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":170,"author":{"gitId":"chrus-chong"},"content":"    private static ToDo readToDoFromFile(String atHand) {","lastModifiedDate":"2021-09-11"},{"lineNumber":171,"author":{"gitId":"chrus-chong"},"content":"        String des \u003d atHand.substring(7);","lastModifiedDate":"2021-09-11"},{"lineNumber":172,"author":{"gitId":"chrus-chong"},"content":"        String done \u003d (atHand.charAt(4) \u003d\u003d \u0027 \u0027) ? \" \" : \"X\";","lastModifiedDate":"2021-09-11"},{"lineNumber":173,"author":{"gitId":"chrus-chong"},"content":"        return new ToDo(done, des);","lastModifiedDate":"2021-09-11"},{"lineNumber":174,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":175,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":176,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":177,"author":{"gitId":"chrus-chong"},"content":"     * Returns Event object read from String representation of a task.","lastModifiedDate":"2021-09-11"},{"lineNumber":178,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":179,"author":{"gitId":"chrus-chong"},"content":"     * @param atHand String object representing a task.","lastModifiedDate":"2021-09-11"},{"lineNumber":180,"author":{"gitId":"chrus-chong"},"content":"     * @return Event object read from string.","lastModifiedDate":"2021-09-11"},{"lineNumber":181,"author":{"gitId":"chrus-chong"},"content":"     * @throws DukeException If String representation of task is not properly formatted for extractTimeEvent() method.","lastModifiedDate":"2021-09-11"},{"lineNumber":182,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":183,"author":{"gitId":"chrus-chong"},"content":"    private static Event readEventFromFile(String atHand) throws DukeException {","lastModifiedDate":"2021-09-11"},{"lineNumber":184,"author":{"gitId":"chrus-chong"},"content":"        int openBracket \u003d atHand.indexOf(\u0027(\u0027);","lastModifiedDate":"2021-09-11"},{"lineNumber":185,"author":{"gitId":"chrus-chong"},"content":"        String done \u003d (atHand.charAt(4) \u003d\u003d \u0027 \u0027) ? \" \" : \"X\";","lastModifiedDate":"2021-09-11"},{"lineNumber":186,"author":{"gitId":"chrus-chong"},"content":"        String des \u003d atHand.substring(7, openBracket - 1);","lastModifiedDate":"2021-09-11"},{"lineNumber":187,"author":{"gitId":"chrus-chong"},"content":"        LocalDate date \u003d LocalDate.parse(atHand.substring(openBracket + 5, openBracket + 15));","lastModifiedDate":"2021-09-11"},{"lineNumber":188,"author":{"gitId":"chrus-chong"},"content":"        ArrayList\u003cLocalTime\u003e startEnd \u003d extractTimeEvent(atHand);","lastModifiedDate":"2021-09-11"},{"lineNumber":189,"author":{"gitId":"chrus-chong"},"content":"        return new Event(done, des, date, startEnd.get(0), startEnd.get(1));","lastModifiedDate":"2021-09-11"},{"lineNumber":190,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":191,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":192,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":193,"author":{"gitId":"chrus-chong"},"content":"     * Returns Deadline object read from String representation of a task.","lastModifiedDate":"2021-09-11"},{"lineNumber":194,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":195,"author":{"gitId":"chrus-chong"},"content":"     * @param atHand String object representing a task.","lastModifiedDate":"2021-09-11"},{"lineNumber":196,"author":{"gitId":"chrus-chong"},"content":"     * @return Deadline object read from string.","lastModifiedDate":"2021-09-11"},{"lineNumber":197,"author":{"gitId":"chrus-chong"},"content":"     * @throws DukeException If String representation of task is not properly formatted for extractTimeEvent() method.","lastModifiedDate":"2021-09-11"},{"lineNumber":198,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":199,"author":{"gitId":"chrus-chong"},"content":"    private static Deadline readDeadlineFromFile(String atHand) throws DukeException {","lastModifiedDate":"2021-09-11"},{"lineNumber":200,"author":{"gitId":"chrus-chong"},"content":"        int openBracket \u003d atHand.indexOf(\u0027(\u0027);","lastModifiedDate":"2021-09-11"},{"lineNumber":201,"author":{"gitId":"chrus-chong"},"content":"        String done \u003d (atHand.charAt(4) \u003d\u003d \u0027 \u0027) ? \" \" : \"X\";","lastModifiedDate":"2021-09-11"},{"lineNumber":202,"author":{"gitId":"chrus-chong"},"content":"        String des \u003d atHand.substring(7, openBracket - 1);","lastModifiedDate":"2021-09-11"},{"lineNumber":203,"author":{"gitId":"chrus-chong"},"content":"        LocalDate date \u003d LocalDate.parse(atHand.substring(openBracket + 5, openBracket + 15));","lastModifiedDate":"2021-09-11"},{"lineNumber":204,"author":{"gitId":"chrus-chong"},"content":"        LocalTime time \u003d extractTimeDeadline(atHand);","lastModifiedDate":"2021-09-11"},{"lineNumber":205,"author":{"gitId":"chrus-chong"},"content":"        return new Deadline(done, des, date, time);","lastModifiedDate":"2021-09-11"},{"lineNumber":206,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":207,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":208,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":209,"author":{"gitId":"chrus-chong"},"content":"     * Returns DoAfter object read from String representation of a task.","lastModifiedDate":"2021-09-11"},{"lineNumber":210,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":211,"author":{"gitId":"chrus-chong"},"content":"     * @param atHand String object representing a task.","lastModifiedDate":"2021-09-11"},{"lineNumber":212,"author":{"gitId":"chrus-chong"},"content":"     * @return DoAfter object read from string.","lastModifiedDate":"2021-09-11"},{"lineNumber":213,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":214,"author":{"gitId":"chrus-chong"},"content":"    private static DoAfter readDoAfterFromFile(String atHand) {","lastModifiedDate":"2021-09-11"},{"lineNumber":215,"author":{"gitId":"chrus-chong"},"content":"        int openBracket \u003d atHand.indexOf(\u0027(\u0027);","lastModifiedDate":"2021-09-11"},{"lineNumber":216,"author":{"gitId":"chrus-chong"},"content":"        String des \u003d atHand.substring(7, openBracket - 1);","lastModifiedDate":"2021-09-11"},{"lineNumber":217,"author":{"gitId":"chrus-chong"},"content":"        String done \u003d (atHand.charAt(4) \u003d\u003d \u0027 \u0027) ? \" \" : \"X\";","lastModifiedDate":"2021-09-11"},{"lineNumber":218,"author":{"gitId":"chrus-chong"},"content":"        int closeBracket \u003d atHand.lastIndexOf(\u0027)\u0027);","lastModifiedDate":"2021-09-11"},{"lineNumber":219,"author":{"gitId":"chrus-chong"},"content":"        String prevTaskDescription \u003d atHand.substring(openBracket + 18, closeBracket);","lastModifiedDate":"2021-09-11"},{"lineNumber":220,"author":{"gitId":"chrus-chong"},"content":"        return new DoAfter(done, des, prevTaskDescription);","lastModifiedDate":"2021-09-11"},{"lineNumber":221,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":222,"author":{"gitId":"chrus-chong"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"chrus-chong":222}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":" * Deadline class used to represent a task that has an end date.","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":" * Contains method that","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":" * (i) formats the toString() output such that the result facilitates ease of reading.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":" * (ii) overrides the Parent toString method to display the task type,","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":" * as well as status and description.","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"    private LocalDate date;","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"    private LocalTime time;","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"     * Creates new Deadline object.","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"     * @param description String object representing the task being input into Duke.","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"     * @param date LocalDate object representing the date the Deadline task is due by.","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"     * @param time LocalTime object representing the time that the Deadline task is due by.","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"    public Deadline(String description, LocalDate date, LocalTime time) {","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"     * Creates new Deadline object (Overloaded constructor).","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"chrus-chong"},"content":"     * @param done String object representing whether the task is completed.","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"chrus-chong"},"content":"     * @param description String object representing the task being input into Duke.","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"chrus-chong"},"content":"     * @param date LocalDate object representing the date the Deadline task is due by.","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"chrus-chong"},"content":"     * @param time LocalTime object representing the time that the Deadline task is due by.","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"chrus-chong"},"content":"    public Deadline(String done, String description, LocalDate date, LocalTime time) {","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"chrus-chong"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"chrus-chong"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"chrus-chong"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"chrus-chong"},"content":"        if ((done.equals(\"X\"))) {","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"chrus-chong"},"content":"            this.setIsDone(true);","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"chrus-chong"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"chrus-chong"},"content":"            this.setIsDone(false);","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"chrus-chong"},"content":"     * Returns formatted String representation of a Deadline task to facilitate ease of reading.","lastModifiedDate":"2021-09-03"},{"lineNumber":52,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"chrus-chong"},"content":"     * @return String object to represent Deadline task in a more readable manner.","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"chrus-chong"},"content":"    public String formatString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"chrus-chong"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" \"","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"chrus-chong"},"content":"                + this.time.format(DateTimeFormatter.ofPattern(\"h:mma\")) + \")\";","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":61,"author":{"gitId":"chrus-chong"},"content":"     * Returns String representation of Deadline task.","lastModifiedDate":"2021-09-03"},{"lineNumber":62,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":63,"author":{"gitId":"chrus-chong"},"content":"     * @return String type object that includes the task type, parent","lastModifiedDate":"2021-08-15"},{"lineNumber":64,"author":{"gitId":"chrus-chong"},"content":"     * toString method(), and due date.","lastModifiedDate":"2021-08-15"},{"lineNumber":65,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":66,"author":{"gitId":"chrus-chong"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":67,"author":{"gitId":"chrus-chong"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":68,"author":{"gitId":"chrus-chong"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.date + \" \" + this.time + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":70,"author":{"gitId":"chrus-chong"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"chrus-chong":70}},{"path":"src/main/java/duke/tasks/DoAfter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"package duke.tasks;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"public class DoAfter extends Task {","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"    private String prevTaskDescription;","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"     * Creates new DoAfter object.","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"     * @param description String object representing the task being input into Duke.","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"     * @param prevTaskDescription String object representing the task that has to be done before itself.","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"    public DoAfter(String description, String prevTaskDescription) {","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"        super(description);","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"        this.prevTaskDescription \u003d prevTaskDescription;","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"     * Creates new DoAfter object (overloaded constructor).","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"     * @param done String object representing whether the task is completed.","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"     * @param description String object representing the task being input into Duke.","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"     * @param prevTaskDescription String object representing the task that has to be done before itself.","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"    public DoAfter(String done, String description, String prevTaskDescription) {","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"        super(description);","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"        this.prevTaskDescription \u003d prevTaskDescription;","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"        if ((done.equals(\"X\"))) {","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"            this.setIsDone(true);","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":"        } else {","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"            this.setIsDone(false);","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":33,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"chrus-chong"},"content":"    public String getPrevTaskDescription() {","lastModifiedDate":"2021-09-04"},{"lineNumber":35,"author":{"gitId":"chrus-chong"},"content":"        return prevTaskDescription;","lastModifiedDate":"2021-09-04"},{"lineNumber":36,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":37,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":38,"author":{"gitId":"chrus-chong"},"content":"    public String setPrevTaskDescription(String prevTaskDescription) {","lastModifiedDate":"2021-09-04"},{"lineNumber":39,"author":{"gitId":"chrus-chong"},"content":"        this.prevTaskDescription \u003d prevTaskDescription;","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"chrus-chong"},"content":"        return this.prevTaskDescription;","lastModifiedDate":"2021-09-04"},{"lineNumber":41,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":42,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":44,"author":{"gitId":"chrus-chong"},"content":"     * Returns formatted String representation of a DoAfter task to facilitate ease of reading.","lastModifiedDate":"2021-09-04"},{"lineNumber":45,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":46,"author":{"gitId":"chrus-chong"},"content":"     * @return String object to represent DoAfter task in a more readable manner.","lastModifiedDate":"2021-09-04"},{"lineNumber":47,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":48,"author":{"gitId":"chrus-chong"},"content":"    @Override","lastModifiedDate":"2021-09-04"},{"lineNumber":49,"author":{"gitId":"chrus-chong"},"content":"    public String formatString() {","lastModifiedDate":"2021-09-04"},{"lineNumber":50,"author":{"gitId":"chrus-chong"},"content":"        return toString();","lastModifiedDate":"2021-09-04"},{"lineNumber":51,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":52,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":53,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":54,"author":{"gitId":"chrus-chong"},"content":"     * Returns String representation of DoAfter task.","lastModifiedDate":"2021-09-04"},{"lineNumber":55,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":56,"author":{"gitId":"chrus-chong"},"content":"     * @return String type object that includes the task type, parent","lastModifiedDate":"2021-09-04"},{"lineNumber":57,"author":{"gitId":"chrus-chong"},"content":"     * toString method(), and start and end time.","lastModifiedDate":"2021-09-04"},{"lineNumber":58,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":59,"author":{"gitId":"chrus-chong"},"content":"    @Override","lastModifiedDate":"2021-09-04"},{"lineNumber":60,"author":{"gitId":"chrus-chong"},"content":"    public String toString() {","lastModifiedDate":"2021-09-04"},{"lineNumber":61,"author":{"gitId":"chrus-chong"},"content":"        return \"[A]\" + super.toString() + \" (to be done after: \" + this.prevTaskDescription + \")\";","lastModifiedDate":"2021-09-04"},{"lineNumber":62,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":63,"author":{"gitId":"chrus-chong"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"chrus-chong":63}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":" * Event class used to represent a task that has a start and end date.","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":" * Contains method that","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":" * (i) formats the toString() output such that the result facilitates ease of reading.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":" * (ii) overrides the Parent toString method to display the task type,","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":" * as well as status and description.","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"    private final LocalDate date;","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"    private final LocalTime start;","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"    private final LocalTime end;","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"     * Creates new Event object.","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"     * @param description String object representing the task being input into Duke.","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"     * @param date LocalDate object representing the date the Event task is on.","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"     * @param start LocalTime object representing the start time of the Event task.","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"     * @param end LocalTime object representing the end time of the Event task.","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"    public Event(String description, LocalDate date, LocalTime start, LocalTime end) {","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"        this.start \u003d start;","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"        this.end \u003d end;","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"chrus-chong"},"content":"     * Creates new Event object (Overloaded constructor).","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"chrus-chong"},"content":"     * @param done String object representing whether the task is completed.","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"chrus-chong"},"content":"     * @param description String object representing the task being input into Duke.","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"chrus-chong"},"content":"     * @param date LocalDate object representing the date the Event task is on.","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"chrus-chong"},"content":"     * @param start LocalTime object representing the start time of the Event task.","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"chrus-chong"},"content":"     * @param end LocalTime object representing the end time of the Event task.","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"chrus-chong"},"content":"    public Event(String done, String description, LocalDate date, LocalTime start, LocalTime end) {","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"chrus-chong"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"chrus-chong"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"chrus-chong"},"content":"        this.start \u003d start;","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"chrus-chong"},"content":"        this.end \u003d end;","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"chrus-chong"},"content":"        if ((done.equals(\"X\"))) {","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"chrus-chong"},"content":"            this.setIsDone(true);","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"chrus-chong"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"chrus-chong"},"content":"            this.setIsDone(false);","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"chrus-chong"},"content":"     * Returns formatted String representation of a Event task to facilitate ease of reading.","lastModifiedDate":"2021-09-03"},{"lineNumber":57,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"chrus-chong"},"content":"     * @return String object to represent Event task in a more readable manner.","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"chrus-chong"},"content":"    public String formatString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"chrus-chong"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"chrus-chong"},"content":"                + \" (at: \" + this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"chrus-chong"},"content":"                + \" \" + this.start.format(DateTimeFormatter.ofPattern(\"h:mma\")) + \" to \"","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"chrus-chong"},"content":"                + this.end.format(DateTimeFormatter.ofPattern(\"h:mma\")) + \")\";","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":68,"author":{"gitId":"chrus-chong"},"content":"     * Returns String representation of Event task.","lastModifiedDate":"2021-09-03"},{"lineNumber":69,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":70,"author":{"gitId":"chrus-chong"},"content":"     * @return String type object that includes the task type, parent","lastModifiedDate":"2021-08-15"},{"lineNumber":71,"author":{"gitId":"chrus-chong"},"content":"     * toString method(), and start and end time.","lastModifiedDate":"2021-09-03"},{"lineNumber":72,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":73,"author":{"gitId":"chrus-chong"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":74,"author":{"gitId":"chrus-chong"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":75,"author":{"gitId":"chrus-chong"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.date + \" \" + this.start + \" \" + this.end + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":77,"author":{"gitId":"chrus-chong"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"chrus-chong":77}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":" * Task class used as Parent class for Deadline, ToDo, and Event.","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":" * Contains methods that","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":" * (i) gets the corresponding status icon of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":" * (ii) marks the existing instance of Task as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":" * (iii) gets task description attribute.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":" * (iv) gets task isDone attribute.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":" * (v) sets task isDone attribute to given value.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":" * (vi) overrides the default toString method to display the status and description.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"    private String description;","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"     * Constructor for Task","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"     * @param description Overview of the task for a particular instance.","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"     * Returns the string representation of whether the task isDone.","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"     * @return String type object that displays an \"[X]\" if the task is done, else \"[ ]\" is displayed.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"chrus-chong"},"content":"        return (this.isDone ? \"[X]\" : \"[ ]\"); //mark done task with an X","lastModifiedDate":"2021-08-14"},{"lineNumber":34,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":35,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":36,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"chrus-chong"},"content":"     * Marks the task as done.","lastModifiedDate":"2021-09-03"},{"lineNumber":38,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"chrus-chong"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-14"},{"lineNumber":40,"author":{"gitId":"chrus-chong"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-14"},{"lineNumber":41,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":42,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":43,"author":{"gitId":"chrus-chong"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-14"},{"lineNumber":44,"author":{"gitId":"chrus-chong"},"content":"        return this.description;","lastModifiedDate":"2021-08-14"},{"lineNumber":45,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":46,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":47,"author":{"gitId":"chrus-chong"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2021-08-14"},{"lineNumber":48,"author":{"gitId":"chrus-chong"},"content":"        return this.isDone;","lastModifiedDate":"2021-08-14"},{"lineNumber":49,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":50,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":51,"author":{"gitId":"chrus-chong"},"content":"    protected void setIsDone(boolean done) {","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"chrus-chong"},"content":"        this.isDone \u003d done;","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"chrus-chong"},"content":"        return;","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"chrus-chong"},"content":"     * Formats the String returned by toString() in a more readable manner.","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"chrus-chong"},"content":"     * @return String object that represents formatted toString() output for ease of reading.","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"chrus-chong"},"content":"    public abstract String formatString();","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":63,"author":{"gitId":"chrus-chong"},"content":"     * Returns String representation of specific tasks.","lastModifiedDate":"2021-09-03"},{"lineNumber":64,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":65,"author":{"gitId":"chrus-chong"},"content":"     * @return String type object that includes the status icon and task description.","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":67,"author":{"gitId":"chrus-chong"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":68,"author":{"gitId":"chrus-chong"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":69,"author":{"gitId":"chrus-chong"},"content":"        return this.getStatusIcon() + \" \" + this.description;","lastModifiedDate":"2021-08-14"},{"lineNumber":70,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":71,"author":{"gitId":"chrus-chong"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"chrus-chong":71}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":" * TaskList class used to represent the list of tasks in Duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":" * Contains methods that","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":" * (i) adds a task.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":" * (ii) removes a task.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":" * (iii) gets the taskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"public class TaskList {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"    private final ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"     * Adds a task into the list of tasks.","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"     * @param t Task object that is to be added.","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"    public void add(Task t) {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"        taskList.add(t);","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"        return;","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"     * Removes a task from the list of tasks.","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"     * @param num int object that represents index of the task in the taskList that is to be removed.","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"    public void remove(int num) {","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"        taskList.remove(num - 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"        return;","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"chrus-chong"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"chrus-chong"},"content":"        return taskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"chrus-chong"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"chrus-chong":38}},{"path":"src/main/java/duke/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":" * ToDo class used to represent a task that has no fixed date.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":" * Contains method that","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":" * (i) overrides the Parent toString method to display the task type,","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":" * as well as status and description.","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"     * Creates a new ToDo object.","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"     * @param description String object representing the task being input into ToDo.","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"     * Creates a new ToDo object. (Overloaded constructor)","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"     * @param done String object representing whether the task is completed.","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"     * @param description String object representing the task being input into ToDo.","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"    public ToDo(String done, String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"        if ((done.equals(\"X\"))) {","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"            this.setIsDone(true);","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"            this.setIsDone(false);","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"chrus-chong"},"content":"     * Returns formatted String representation of a ToDo task.","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"chrus-chong"},"content":"     * @return String object to represent ToDo task.","lastModifiedDate":"2021-09-03"},{"lineNumber":38,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":39,"author":{"gitId":"chrus-chong"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"chrus-chong"},"content":"    public String formatString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"chrus-chong"},"content":"        return toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":45,"author":{"gitId":"chrus-chong"},"content":"     * Returns String representation of ToDo task.","lastModifiedDate":"2021-09-03"},{"lineNumber":46,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":47,"author":{"gitId":"chrus-chong"},"content":"     * @return String type object that includes the task type and parent toString() method.","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":49,"author":{"gitId":"chrus-chong"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":50,"author":{"gitId":"chrus-chong"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":51,"author":{"gitId":"chrus-chong"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-14"},{"lineNumber":52,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":53,"author":{"gitId":"chrus-chong"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"chrus-chong":53}},{"path":"src/main/java/duke/ui/GraphicUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"package duke.ui;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import duke.commands.ByeCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"import duke.commands.Command;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"import duke.commands.DeadlineCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"import duke.commands.DeleteCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"import duke.commands.DoAfterCommand;","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"import duke.commands.DoneCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"import duke.commands.EventCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"import duke.commands.FindCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"import duke.commands.HelpCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"import duke.commands.ListCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"import duke.commands.ToDoCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":" * GraphicUi class used to handle interactions with the user.","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":" * Contains methods that","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":" * (i) feeds the chat-bot input and returns corresponding output.","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"public class GraphicUi {","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"     * Returns String representation of response from Duke. Runs the Duke chat-bot for the GUI. Takes in a String of user input and outputs the corresponding","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"     * Duke response.","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"     * @param des User input into the Duke chat-box.","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"     * @return String object representing the corresponding response from Duke.","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"chrus-chong"},"content":"    public String run(String des) {","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"chrus-chong"},"content":"        TaskList tList \u003d new TaskList();","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"chrus-chong"},"content":"        Storage.readFromFile(tList);","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"chrus-chong"},"content":"        Parser p \u003d new Parser();","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"chrus-chong"},"content":"        String keyword \u003d p.checkForKeyword(des);","lastModifiedDate":"2021-09-04"},{"lineNumber":41,"author":{"gitId":"chrus-chong"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"chrus-chong"},"content":"            if (keyword \u003d\u003d null) {","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"chrus-chong"},"content":"                throw new DukeException(des + \" is not a recognised command\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"chrus-chong"},"content":"                        + \"Please refer to the available commands using the \\\"help\\\" command\");","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"chrus-chong"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"chrus-chong"},"content":"            Command c;","lastModifiedDate":"2021-09-04"},{"lineNumber":47,"author":{"gitId":"chrus-chong"},"content":"            switch (keyword) {","lastModifiedDate":"2021-09-04"},{"lineNumber":48,"author":{"gitId":"chrus-chong"},"content":"            case \"bye\":","lastModifiedDate":"2021-09-04"},{"lineNumber":49,"author":{"gitId":"chrus-chong"},"content":"                c \u003d new ByeCommand();","lastModifiedDate":"2021-09-04"},{"lineNumber":50,"author":{"gitId":"chrus-chong"},"content":"                System.out.print(c.execute(des, tList));","lastModifiedDate":"2021-09-04"},{"lineNumber":51,"author":{"gitId":"chrus-chong"},"content":"                System.exit(0);","lastModifiedDate":"2021-09-04"},{"lineNumber":52,"author":{"gitId":"chrus-chong"},"content":"                break;","lastModifiedDate":"2021-09-04"},{"lineNumber":53,"author":{"gitId":"chrus-chong"},"content":"            case \"help\":","lastModifiedDate":"2021-09-04"},{"lineNumber":54,"author":{"gitId":"chrus-chong"},"content":"                c \u003d new HelpCommand();","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"chrus-chong"},"content":"                break;","lastModifiedDate":"2021-09-04"},{"lineNumber":56,"author":{"gitId":"chrus-chong"},"content":"            case \"list\":","lastModifiedDate":"2021-09-04"},{"lineNumber":57,"author":{"gitId":"chrus-chong"},"content":"                c \u003d new ListCommand();","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"chrus-chong"},"content":"                break;","lastModifiedDate":"2021-09-04"},{"lineNumber":59,"author":{"gitId":"chrus-chong"},"content":"            case \"done\":","lastModifiedDate":"2021-09-04"},{"lineNumber":60,"author":{"gitId":"chrus-chong"},"content":"                c \u003d new DoneCommand();","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"chrus-chong"},"content":"                break;","lastModifiedDate":"2021-09-04"},{"lineNumber":62,"author":{"gitId":"chrus-chong"},"content":"            case \"delete\":","lastModifiedDate":"2021-09-04"},{"lineNumber":63,"author":{"gitId":"chrus-chong"},"content":"                c \u003d new DeleteCommand();","lastModifiedDate":"2021-09-04"},{"lineNumber":64,"author":{"gitId":"chrus-chong"},"content":"                break;","lastModifiedDate":"2021-09-04"},{"lineNumber":65,"author":{"gitId":"chrus-chong"},"content":"            case \"deadline\":","lastModifiedDate":"2021-09-04"},{"lineNumber":66,"author":{"gitId":"chrus-chong"},"content":"                c \u003d new DeadlineCommand();","lastModifiedDate":"2021-08-28"},{"lineNumber":67,"author":{"gitId":"chrus-chong"},"content":"                break;","lastModifiedDate":"2021-09-04"},{"lineNumber":68,"author":{"gitId":"chrus-chong"},"content":"            case \"event\":","lastModifiedDate":"2021-09-04"},{"lineNumber":69,"author":{"gitId":"chrus-chong"},"content":"                c \u003d new EventCommand();","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"chrus-chong"},"content":"                break;","lastModifiedDate":"2021-09-04"},{"lineNumber":71,"author":{"gitId":"chrus-chong"},"content":"            case \"todo\":","lastModifiedDate":"2021-09-04"},{"lineNumber":72,"author":{"gitId":"chrus-chong"},"content":"                c \u003d new ToDoCommand();","lastModifiedDate":"2021-08-28"},{"lineNumber":73,"author":{"gitId":"chrus-chong"},"content":"                break;","lastModifiedDate":"2021-09-04"},{"lineNumber":74,"author":{"gitId":"chrus-chong"},"content":"            case \"doafter\":","lastModifiedDate":"2021-09-04"},{"lineNumber":75,"author":{"gitId":"chrus-chong"},"content":"                c \u003d new DoAfterCommand();","lastModifiedDate":"2021-09-04"},{"lineNumber":76,"author":{"gitId":"chrus-chong"},"content":"                break;","lastModifiedDate":"2021-09-04"},{"lineNumber":77,"author":{"gitId":"chrus-chong"},"content":"            case \"find\":","lastModifiedDate":"2021-09-04"},{"lineNumber":78,"author":{"gitId":"chrus-chong"},"content":"                c \u003d new FindCommand();","lastModifiedDate":"2021-08-28"},{"lineNumber":79,"author":{"gitId":"chrus-chong"},"content":"                break;","lastModifiedDate":"2021-09-04"},{"lineNumber":80,"author":{"gitId":"chrus-chong"},"content":"            default:","lastModifiedDate":"2021-09-04"},{"lineNumber":81,"author":{"gitId":"chrus-chong"},"content":"                throw new DukeException(\"Error in parser. Ouput of parser not recognised.\");","lastModifiedDate":"2021-09-04"},{"lineNumber":82,"author":{"gitId":"chrus-chong"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":83,"author":{"gitId":"chrus-chong"},"content":"            return c.execute(des, tList);","lastModifiedDate":"2021-08-28"},{"lineNumber":84,"author":{"gitId":"chrus-chong"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":85,"author":{"gitId":"chrus-chong"},"content":"            return e.getMessage();","lastModifiedDate":"2021-08-28"},{"lineNumber":86,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":87,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":88,"author":{"gitId":"chrus-chong"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":89,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"chrus-chong":89}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefWidth\u003d\"700.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"        \u003cLabel fx:id\u003d\"dialog\" lineSpacing\u003d\"4.0\" maxHeight\u003d\"1.7976931348623157E308\" minWidth\u003d\"-Infinity\" prefWidth\u003d\"500.0\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"         \u003cfont\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"            \u003cFont name\u003d\"Segoe UI Semibold\" size\u003d\"14.0\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"         \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"93.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"         \u003c/HBox.margin\u003e\u003c/ImageView\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"        \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"   \u003copaqueInsets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"      \u003cInsets /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"   \u003c/opaqueInsets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"chrus-chong":26}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"800.0\" style\u003d\"-fx-background-color: #F6E9D7;\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"42.0\" prefWidth\u003d\"694.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"710.0\" layoutY\u003d\"557.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-background-color: #52AB98;\" text\u003d\"Send\" textFill\u003d\"WHITE\"\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"            \u003cfont\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"                \u003cFont name\u003d\"Segoe UI Semibold\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"            \u003c/font\u003e\u003c/Button\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"800.0\" style\u003d\"-fx-background-color: #F6E9D7;\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" alignment\u003d\"TOP_CENTER\" fillWidth\u003d\"false\" prefHeight\u003d\"560.0\" prefWidth\u003d\"800.0\" spacing\u003d\"20.0\" style\u003d\"-fx-background-color: #F6E9D7; -fx-border-color: #F6E9D7;\"\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"                        \u003cInsets bottom\u003d\"20.0\" left\u003d\"20.0\" top\u003d\"20.0\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"                    \u003c/padding\u003e\u003c/VBox\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"chrus-chong":27}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"package duke.parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"    public void checkForKeyword_noCommand_nullReturned() {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"        String result \u003d parser.checkForKeyword(\"\");","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(null, result);","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"    public void checkForKeyword_invalidCommand_nullReturned() {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"        String result \u003d parser.checkForKeyword(\"hello\");","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(null, result);","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"        result \u003d parser.checkForKeyword(\"goodbye\");","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(null, result);","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"        result \u003d parser.checkForKeyword(\" deadline\");","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(null, result);","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"        result \u003d parser.checkForKeyword(\"byebye\");","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(null, result);","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"        result \u003d parser.checkForKeyword(\"to\");","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(null, result);","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"chrus-chong"},"content":"        result \u003d parser.checkForKeyword(\"deleted\");","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(null, result);","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"chrus-chong"},"content":"        result \u003d parser.checkForKeyword(\"remove\");","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(null, result);","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"chrus-chong"},"content":"        result \u003d parser.checkForKeyword(\"logout\");","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(null, result);","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"chrus-chong"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"chrus-chong"},"content":"    public void checkForKeyword_byeCommand_stringReturned() {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"chrus-chong"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"chrus-chong"},"content":"        String result \u003d parser.checkForKeyword(\"bye\");","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(\"bye\", result);","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"chrus-chong"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"chrus-chong"},"content":"    public void checkForKeyword_deadlineCommand_stringReturned() {","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"chrus-chong"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"chrus-chong"},"content":"        String result \u003d parser.checkForKeyword(\"deadline\");","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(\"deadline\", result);","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"chrus-chong"},"content":"        result \u003d parser.checkForKeyword(\"deadline /by 2359\");","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(\"deadline\", result);","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"chrus-chong"},"content":"        result \u003d parser.checkForKeyword(\"deadline help prof /at 2012-03-14 23:59\");","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(\"deadline\", result);","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"chrus-chong"},"content":"        result \u003d parser.checkForKeyword(\"deadline finish lab /by 2014-03-12 01:11\");","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(\"deadline\", result);","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"chrus-chong"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"chrus-chong"},"content":"    public void checkForKeyword_eventCommand_stringReturned() {","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"chrus-chong"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"chrus-chong"},"content":"        String result \u003d parser.checkForKeyword(\"event\");","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(\"event\", result);","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"chrus-chong"},"content":"        result \u003d parser.checkForKeyword(\"event /at 2359-0000\");","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(\"event\", result);","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"chrus-chong"},"content":"        result \u003d parser.checkForKeyword(\"event finish lab /by 2014-03-12 01:11\");","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(\"event\", result);","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"chrus-chong"},"content":"        result \u003d parser.checkForKeyword(\"event zoom prof /at 2012-03-14 23:59 00:00\");","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(\"event\", result);","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"chrus-chong"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"chrus-chong"},"content":"    public void checkForKeyword_todoCommand_stringReturned() {","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"chrus-chong"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"chrus-chong"},"content":"        String result \u003d parser.checkForKeyword(\"todo\");","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(\"todo\", result);","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"chrus-chong"},"content":"        result \u003d parser.checkForKeyword(\"todo /at 2359-0000\");","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(\"todo\", result);","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"chrus-chong"},"content":"        result \u003d parser.checkForKeyword(\"todo finish lab /by 2014-03-12 01:11\");","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(\"todo\", result);","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"chrus-chong"},"content":"        result \u003d parser.checkForKeyword(\"todo zoom prof and take minutes\");","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(\"todo\", result);","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"chrus-chong"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"chrus-chong"},"content":"    public void checkForKeyword_deleteCommand_stringReturned() {","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"chrus-chong"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"chrus-chong"},"content":"        String result;","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"chrus-chong"},"content":"        result \u003d parser.checkForKeyword(\"delete -1\");","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(\"delete\", result);","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"chrus-chong"},"content":"        result \u003d parser.checkForKeyword(\"delete 2\");","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(\"delete\", result);","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"chrus-chong"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"chrus-chong"},"content":"    public void checkForKeyword_doneCommand_stringReturned() {","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"chrus-chong"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"chrus-chong"},"content":"        String result;","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"chrus-chong"},"content":"        result \u003d parser.checkForKeyword(\"done -1\");","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(\"done\", result);","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"chrus-chong"},"content":"        result \u003d parser.checkForKeyword(\"done 2\");","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(\"done\", result);","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"chrus-chong"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":125,"author":{"gitId":"chrus-chong"},"content":"    public void checkForKeyword_helpCommand_stringReturned() {","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"chrus-chong"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"chrus-chong"},"content":"        String result \u003d parser.checkForKeyword(\"help\");","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(\"help\", result);","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":132,"author":{"gitId":"chrus-chong"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":133,"author":{"gitId":"chrus-chong"},"content":"    public void checkForKeyword_listCommand_stringReturned() {","lastModifiedDate":"2021-08-24"},{"lineNumber":134,"author":{"gitId":"chrus-chong"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-24"},{"lineNumber":135,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":136,"author":{"gitId":"chrus-chong"},"content":"        String result \u003d parser.checkForKeyword(\"list\");","lastModifiedDate":"2021-08-24"},{"lineNumber":137,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(\"list\", result);","lastModifiedDate":"2021-08-24"},{"lineNumber":138,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":139,"author":{"gitId":"chrus-chong"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"chrus-chong":139}},{"path":"src/test/java/duke/tasks/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"    public void toString_stringReturned() {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"        String des \u003d \"deadline submit assignment\";","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"        LocalTime time \u003d LocalTime.parse(\"20:00\");","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"        LocalDate date \u003d LocalDate.parse(\"2012-03-12\");","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"        Deadline task \u003d new Deadline(des, date, time);","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(\"[D][ ] deadline submit assignment (by: 2012-03-12 20:00)\", task.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"    public void formatString_stringReturned() {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"        String des \u003d \"deadline submit assignment\";","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"        LocalTime time \u003d LocalTime.parse(\"20:00\");","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"        LocalDate date \u003d LocalDate.parse(\"2012-03-12\");","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"        Deadline task \u003d new Deadline(des, date, time);","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(\"[D][ ] deadline submit assignment (by: Mar 12 2012 8:00PM)\", task.formatString());","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"chrus-chong":28}},{"path":"src/test/java/duke/tasks/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"public class EventTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"    public void toString_stringReturned() {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"        String des \u003d \"event zoom meeting\";","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"        LocalTime start \u003d LocalTime.parse(\"08:00\");","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"        LocalTime end \u003d LocalTime.parse(\"23:00\");","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"        LocalDate date \u003d LocalDate.parse(\"2012-03-12\");","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"        Event task \u003d new Event(des, date, start, end);","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(\"[E][ ] event zoom meeting (at: 2012-03-12 08:00 23:00)\", task.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"    public void formatString_stringReturned() {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"        String des \u003d \"event zoom meeting\";","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"        LocalTime start \u003d LocalTime.parse(\"08:00\");","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"        LocalTime end \u003d LocalTime.parse(\"23:00\");","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"        LocalDate date \u003d LocalDate.parse(\"2012-03-12\");","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"        Event task \u003d new Event(des, date, start, end);","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(\"[E][ ] event zoom meeting (at: Mar 12 2012 8:00AM to 11:00PM)\", task.formatString());","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"}","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"chrus-chong":31}},{"path":"src/test/java/duke/tasks/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"public class ToDoTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"    public void toString_stringReturned() {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"        String des \u003d \"start working on portfolio website\";","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"        ToDo task \u003d new ToDo(des);","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(\"[T][ ] start working on portfolio website\", task.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"chrus-chong":14}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"event go clubbing /at 23rd January 2am-4am","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"hello","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"todo brush teeth everyday","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"event zoom meeting with profs /at 3rd August 9pm-10pm","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"done 3","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"done 2","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"done 3","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"deadline complete Math Homework /by 23/04/21","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"event Sentosa outing /at 25/07/21 8am-4pm","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"event","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"event zoom meeting with Teo","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"event zoom meeting with Teo /at","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"event complete CS Project /by 2359HRs","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"event /at 2300-0000HRs","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"event zoom meeting with Teo /at 2pm-3pm","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"deadline","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"deadline complete CS Project","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"deadline complete CS Project /by","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"deadline complete CS Project /at 2359HRs","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"deadline /by 2359HRs","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"deadline complete CS Project /by 2359HRs","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"todo","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"done 7, 3","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"done 7","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":"delete 1, 2","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"delete 1","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"delete 3","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"delete 300","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"chrus-chong"},"content":"bye bye","lastModifiedDate":"2021-08-14"},{"lineNumber":34,"author":{"gitId":"chrus-chong"},"content":"bye","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"chrus-chong":34}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"javac  -cp ..\\src\\main\\java\\duke\\tasks -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\tasks\\*.java","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"javac  -cp ..\\src\\main\\java\\duke\\ui -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\ui\\*.java","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"javac  -cp ..\\src\\main\\java\\duke\\commands -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\commands\\*.java","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"javac  -cp ..\\src\\main\\java\\duke\\exceptions -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\exceptions\\*.java","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"javac  -cp ..\\src\\main\\java\\duke\\parser -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\parser\\*.java","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"javac  -cp ..\\src\\main\\java\\duke\\storage -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\storage\\*.java","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"javac  -cp ..\\src\\main\\java\\duke -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"REM run the program, feed duke.commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"chrus-chong":10,"-":18}}]
