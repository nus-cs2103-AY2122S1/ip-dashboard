[{"path":"archive.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"T|0|smth","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"T|0|heheh","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"T|0|sdfsaf","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"T|0|lol","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":"T|0|lolllllll","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"Shruthi0310":5}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.9\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"Shruthi0310"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"Shruthi0310"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"Shruthi0310"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"Shruthi0310"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"Shruthi0310"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"Shruthi0310"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"Shruthi0310"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"Shruthi0310"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"Shruthi0310"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"Shruthi0310"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"Shruthi0310"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"Shruthi0310"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"Shruthi0310"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"Shruthi0310"},"content":"    mainClassName \u003d \"duke.main.Launcher\"","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"Shruthi0310"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Shruthi0310":18,"-":45}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":"### Manage Tasks","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"Keep track of your various tasks that need to be completed.","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":8,"author":{"gitId":"Shruthi0310"},"content":"* Add deadlines/event/todos","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"Shruthi0310"},"content":"* Mark completed tasks as done","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"Shruthi0310"},"content":"* Delete unwanted tasks from list","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":12,"author":{"gitId":"Shruthi0310"},"content":"### Find Tasks","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"Shruthi0310"},"content":"Find all tasks that match a keyword for easier tracking of tasks.","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"Shruthi0310"},"content":"### Save Tasks","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"Shruthi0310"},"content":"All your tasks will be saved to your computer and will be reloaded","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"Shruthi0310"},"content":"the next time you open the app.","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"Shruthi0310"},"content":"### Archive Tasks","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"Shruthi0310"},"content":"Start with a clean slate if you no longer need the previous list.","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"Shruthi0310"},"content":"### `todo` - Add a todo task","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"Shruthi0310"},"content":"Adds a todo task to the list.","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"Shruthi0310"},"content":"Format: todo [description]","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"Shruthi0310"},"content":"`todo walk my dog`","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"Shruthi0310"},"content":"Expected outcome:","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"Shruthi0310"},"content":"Shows message of todo task added to the list","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"Shruthi0310"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"Shruthi0310"},"content":"added: [T][] walk my dog","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"Shruthi0310"},"content":"Now you have 1 tasks in your list","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"Shruthi0310"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"Shruthi0310"},"content":"___","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"Shruthi0310"},"content":"### `event` - Add an event task","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"Shruthi0310"},"content":"Adds an event task with the date (dd MMM yyyy) to list.","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"Shruthi0310"},"content":"Format: event [description] /at [date]","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"Shruthi0310"},"content":"Example of usage: `event funfair /at 22 Jun 2021`","lastModifiedDate":"2021-09-15"},{"lineNumber":50,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":51,"author":{"gitId":"Shruthi0310"},"content":"Expected outcome:","lastModifiedDate":"2021-09-15"},{"lineNumber":52,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":53,"author":{"gitId":"Shruthi0310"},"content":"Shows message of event task added to the list with","lastModifiedDate":"2021-09-15"},{"lineNumber":54,"author":{"gitId":"Shruthi0310"},"content":"the date stored in the form yyyy-MM-dd","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"Shruthi0310"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":57,"author":{"gitId":"Shruthi0310"},"content":"added: [E][] funfair (at: 2021-06-22)","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"Shruthi0310"},"content":"Now you have 2 tasks in your list","lastModifiedDate":"2021-09-15"},{"lineNumber":59,"author":{"gitId":"Shruthi0310"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":60,"author":{"gitId":"Shruthi0310"},"content":"___","lastModifiedDate":"2021-09-15"},{"lineNumber":61,"author":{"gitId":"Shruthi0310"},"content":"### `deadline` - Add a deadline task","lastModifiedDate":"2021-09-15"},{"lineNumber":62,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":63,"author":{"gitId":"Shruthi0310"},"content":"Adds a deadline task with the date (dd MMM yyyy) to list.","lastModifiedDate":"2021-09-15"},{"lineNumber":64,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":65,"author":{"gitId":"Shruthi0310"},"content":"Format: deadline [description] /by [date]","lastModifiedDate":"2021-09-15"},{"lineNumber":66,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":67,"author":{"gitId":"Shruthi0310"},"content":"Example of usage: `deadline quiz /by 22 Jun 2021`","lastModifiedDate":"2021-09-15"},{"lineNumber":68,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":69,"author":{"gitId":"Shruthi0310"},"content":"Expected outcome:","lastModifiedDate":"2021-09-15"},{"lineNumber":70,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":71,"author":{"gitId":"Shruthi0310"},"content":"Shows message of event task added to the list with","lastModifiedDate":"2021-09-15"},{"lineNumber":72,"author":{"gitId":"Shruthi0310"},"content":"the date stored in the form yyyy-MM-dd","lastModifiedDate":"2021-09-15"},{"lineNumber":73,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":74,"author":{"gitId":"Shruthi0310"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":75,"author":{"gitId":"Shruthi0310"},"content":"added: [D][] quiz (at: 2021-06-22)","lastModifiedDate":"2021-09-15"},{"lineNumber":76,"author":{"gitId":"Shruthi0310"},"content":"Now you have 3 tasks in your list","lastModifiedDate":"2021-09-15"},{"lineNumber":77,"author":{"gitId":"Shruthi0310"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":78,"author":{"gitId":"Shruthi0310"},"content":"___","lastModifiedDate":"2021-09-15"},{"lineNumber":79,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":80,"author":{"gitId":"Shruthi0310"},"content":"### `Done` - Set task as done","lastModifiedDate":"2021-09-15"},{"lineNumber":81,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":82,"author":{"gitId":"Shruthi0310"},"content":"Sets a task at a particular index in list as done.","lastModifiedDate":"2021-09-15"},{"lineNumber":83,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":84,"author":{"gitId":"Shruthi0310"},"content":"Format: done [index]","lastModifiedDate":"2021-09-15"},{"lineNumber":85,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":86,"author":{"gitId":"Shruthi0310"},"content":"Example of usage: `done 1`","lastModifiedDate":"2021-09-15"},{"lineNumber":87,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":88,"author":{"gitId":"Shruthi0310"},"content":"Expected outcome:","lastModifiedDate":"2021-09-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":90,"author":{"gitId":"Shruthi0310"},"content":"Shows message of task at index 1 in list set as done.","lastModifiedDate":"2021-09-15"},{"lineNumber":91,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":92,"author":{"gitId":"Shruthi0310"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":93,"author":{"gitId":"Shruthi0310"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2021-09-15"},{"lineNumber":94,"author":{"gitId":"Shruthi0310"},"content":"[T][X] walk my dog","lastModifiedDate":"2021-09-15"},{"lineNumber":95,"author":{"gitId":"Shruthi0310"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":96,"author":{"gitId":"Shruthi0310"},"content":"___","lastModifiedDate":"2021-09-15"},{"lineNumber":97,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":98,"author":{"gitId":"Shruthi0310"},"content":"### `delete` - Deletes a task","lastModifiedDate":"2021-09-15"},{"lineNumber":99,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":100,"author":{"gitId":"Shruthi0310"},"content":"Deletes a task at a particular index in list.","lastModifiedDate":"2021-09-15"},{"lineNumber":101,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":102,"author":{"gitId":"Shruthi0310"},"content":"Format: delete [index]","lastModifiedDate":"2021-09-15"},{"lineNumber":103,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":104,"author":{"gitId":"Shruthi0310"},"content":"Example of usage: `delete 2`","lastModifiedDate":"2021-09-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2021-09-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":108,"author":{"gitId":"Shruthi0310"},"content":"Shows message of task at index 2 deleted.","lastModifiedDate":"2021-09-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":111,"author":{"gitId":"Shruthi0310"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2021-09-15"},{"lineNumber":112,"author":{"gitId":"Shruthi0310"},"content":"[E][] funfair (at: 2021-06-22)","lastModifiedDate":"2021-09-15"},{"lineNumber":113,"author":{"gitId":"Shruthi0310"},"content":"Now you have 2 tasks in your list","lastModifiedDate":"2021-09-15"},{"lineNumber":114,"author":{"gitId":"Shruthi0310"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":115,"author":{"gitId":"Shruthi0310"},"content":"___","lastModifiedDate":"2021-09-15"},{"lineNumber":116,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":117,"author":{"gitId":"Shruthi0310"},"content":"### `list` - Shows all tasks in list","lastModifiedDate":"2021-09-15"},{"lineNumber":118,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":119,"author":{"gitId":"Shruthi0310"},"content":"Displays all the tasks in list.","lastModifiedDate":"2021-09-15"},{"lineNumber":120,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":121,"author":{"gitId":"Shruthi0310"},"content":"Example of usage: `list`","lastModifiedDate":"2021-09-15"},{"lineNumber":122,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":123,"author":{"gitId":"Shruthi0310"},"content":"Expected outcome:","lastModifiedDate":"2021-09-15"},{"lineNumber":124,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":125,"author":{"gitId":"Shruthi0310"},"content":"Shows list.","lastModifiedDate":"2021-09-15"},{"lineNumber":126,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":127,"author":{"gitId":"Shruthi0310"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":128,"author":{"gitId":"Shruthi0310"},"content":"Here are the tasks in your list:","lastModifiedDate":"2021-09-15"},{"lineNumber":129,"author":{"gitId":"Shruthi0310"},"content":"    1. [T][X] walk my dog","lastModifiedDate":"2021-09-15"},{"lineNumber":130,"author":{"gitId":"Shruthi0310"},"content":"    2. [D][] quiz (at: 2021-06-22)","lastModifiedDate":"2021-09-15"},{"lineNumber":131,"author":{"gitId":"Shruthi0310"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":132,"author":{"gitId":"Shruthi0310"},"content":"___","lastModifiedDate":"2021-09-15"},{"lineNumber":133,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":134,"author":{"gitId":"Shruthi0310"},"content":"### `find` - Find tasks in list","lastModifiedDate":"2021-09-15"},{"lineNumber":135,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":136,"author":{"gitId":"Shruthi0310"},"content":"Finds tasks in list that matches keyword.","lastModifiedDate":"2021-09-15"},{"lineNumber":137,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":138,"author":{"gitId":"Shruthi0310"},"content":"Format: find [keyword]","lastModifiedDate":"2021-09-15"},{"lineNumber":139,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":140,"author":{"gitId":"Shruthi0310"},"content":"Example of usage: `find quiz`","lastModifiedDate":"2021-09-15"},{"lineNumber":141,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":142,"author":{"gitId":"Shruthi0310"},"content":"Expected outcome:","lastModifiedDate":"2021-09-15"},{"lineNumber":143,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":144,"author":{"gitId":"Shruthi0310"},"content":"Shows list of all tasks that matches the word quiz.","lastModifiedDate":"2021-09-15"},{"lineNumber":145,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":146,"author":{"gitId":"Shruthi0310"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":147,"author":{"gitId":"Shruthi0310"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2021-09-15"},{"lineNumber":148,"author":{"gitId":"Shruthi0310"},"content":"    1. [D][] quiz (at: 2021-06-22)","lastModifiedDate":"2021-09-15"},{"lineNumber":149,"author":{"gitId":"Shruthi0310"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":150,"author":{"gitId":"Shruthi0310"},"content":"___","lastModifiedDate":"2021-09-15"},{"lineNumber":151,"author":{"gitId":"Shruthi0310"},"content":"### `archive` - Archives all tasks in list","lastModifiedDate":"2021-09-15"},{"lineNumber":152,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":153,"author":{"gitId":"Shruthi0310"},"content":"Saves all tasks to a file and removes them from current","lastModifiedDate":"2021-09-15"},{"lineNumber":154,"author":{"gitId":"Shruthi0310"},"content":"list shown.","lastModifiedDate":"2021-09-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":156,"author":{"gitId":"Shruthi0310"},"content":"Example of usage: `archive`","lastModifiedDate":"2021-09-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":160,"author":{"gitId":"Shruthi0310"},"content":"Shows an empty list when list command is entered.","lastModifiedDate":"2021-09-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":162,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":163,"author":{"gitId":"Shruthi0310"},"content":"Here are the tasks in your list:","lastModifiedDate":"2021-09-15"},{"lineNumber":164,"author":{"gitId":"Shruthi0310"},"content":"no tasks in list yet...","lastModifiedDate":"2021-09-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"Shruthi0310":139,"-":26}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package duke.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":"        super(message);","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Shruthi0310":7}},{"path":"src/main/java/duke/exception/InvalidDateTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package duke.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"public class InvalidDateTimeException extends DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"    public InvalidDateTimeException() {","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":"        super(\"Please enter a date of format dd MMM yyyy (e.g 02 Jun 2021)!\");","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Shruthi0310":7}},{"path":"src/main/java/duke/exception/InvalidTaskDeletionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package duke.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"public class InvalidTaskDeletionException extends DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"    public InvalidTaskDeletionException() {","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":"        super(\"OOPS! You are trying to delete a non-existent task!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Shruthi0310":7}},{"path":"src/main/java/duke/exception/InvalidTaskDoneException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package duke.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"public class InvalidTaskDoneException extends DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"    public InvalidTaskDoneException() {","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":"        super(\"OOPS! You are setting a non-existent task as done!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Shruthi0310":7}},{"path":"src/main/java/duke/exception/NoCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package duke.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"public class NoCommandException extends DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"    public NoCommandException() {","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":"        super(\"OOPS! I\u0027m sorry, but I don\u0027t know what that means :(\");","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Shruthi0310":7}},{"path":"src/main/java/duke/exception/NoDescriptionAndTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package duke.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"public class NoDescriptionAndTimeException extends DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"    public NoDescriptionAndTimeException(String string){","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":"        super(\"OOPS! The description \u0026 time of \" + string +\" cannot be empty.\");","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Shruthi0310":7}},{"path":"src/main/java/duke/exception/NoDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package duke.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"public class NoDescriptionException extends DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"    public NoDescriptionException(String string){","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":"        super(\"OOPS! The description of \" + string","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"                + \" cannot be empty.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Shruthi0310":8}},{"path":"src/main/java/duke/exception/NoTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package duke.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"public class NoTimeException extends DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"    public NoTimeException(String string){","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":"        super(\"OOPS! The time of \" + string +\" cannot be empty.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Shruthi0310":7}},{"path":"src/main/java/duke/main/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package duke.main;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"Shruthi0310"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"Shruthi0310"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"Shruthi0310"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"Shruthi0310"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"Shruthi0310"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"Shruthi0310"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"Shruthi0310"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"Shruthi0310"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"Shruthi0310"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"Shruthi0310"},"content":"    //@@author Shruthi0310 -reused","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"Shruthi0310"},"content":"    //Reused from https://se-education.org/guides/tutorials/javaFx.html","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"Shruthi0310"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"Shruthi0310"},"content":"    private Text dialog;","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"Shruthi0310"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"Shruthi0310"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"Shruthi0310"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"Shruthi0310"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"Shruthi0310"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"Shruthi0310"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"Shruthi0310"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"Shruthi0310"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"Shruthi0310"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"Shruthi0310"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"Shruthi0310"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"Shruthi0310"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"Shruthi0310"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"Shruthi0310"},"content":"     * Flips the dialog box so ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-16"},{"lineNumber":44,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"Shruthi0310"},"content":"    private void flip() {","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"Shruthi0310"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"Shruthi0310"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"Shruthi0310"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"Shruthi0310"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"Shruthi0310"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"Shruthi0310"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"Shruthi0310"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"Shruthi0310"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"Shruthi0310"},"content":"        db.flip();","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"Shruthi0310"},"content":"        return db;","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"Shruthi0310":61}},{"path":"src/main/java/duke/main/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package duke.main;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":"import duke.util.Command;","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"Shruthi0310"},"content":"import duke.util.Parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Shruthi0310"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Shruthi0310"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"Shruthi0310"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"Shruthi0310"},"content":" * Encapsulates duke program","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"Shruthi0310"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"Shruthi0310"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"Shruthi0310"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"Shruthi0310"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"Shruthi0310"},"content":"     * Constructor for duke","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"Shruthi0310"},"content":"     * @param filePath path in which data is stored","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"Shruthi0310"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"Shruthi0310"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"Shruthi0310"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"Shruthi0310"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"Shruthi0310"},"content":"            taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"Shruthi0310"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"Shruthi0310"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"Shruthi0310"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"Shruthi0310"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"Shruthi0310"},"content":"     * Returns response by duke after user input.","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"Shruthi0310"},"content":"     * @param input","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"Shruthi0310"},"content":"     * @return String representation of duke response to user","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"Shruthi0310"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"Shruthi0310"},"content":"        try {","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"Shruthi0310"},"content":"            Command c \u003d Parser.parseCommand(input);","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"Shruthi0310"},"content":"            return c.execute(taskList, ui, storage);","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"Shruthi0310"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"Shruthi0310"},"content":"            return ui.showError(e.getMessage());","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"Shruthi0310"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":49,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":50,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":52,"author":{"gitId":"Shruthi0310"},"content":"     * Saves current taskList to file.","lastModifiedDate":"2021-09-15"},{"lineNumber":53,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":54,"author":{"gitId":"Shruthi0310"},"content":"     * @throws DukeException If there is error storing tasks.","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"Shruthi0310"},"content":"    public void save() throws DukeException {","lastModifiedDate":"2021-09-08"},{"lineNumber":57,"author":{"gitId":"Shruthi0310"},"content":"        storage.save(taskList, \"update\");","lastModifiedDate":"2021-09-08"},{"lineNumber":58,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":59,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":60,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"Shruthi0310":59,"-":1}},{"path":"src/main/java/duke/main/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package duke.main;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":"public class Launcher {","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"Shruthi0310":9}},{"path":"src/main/java/duke/main/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package duke.main;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"Shruthi0310"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"Shruthi0310"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"Shruthi0310"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"Shruthi0310"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"Shruthi0310"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"Shruthi0310"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"Shruthi0310"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"Shruthi0310"},"content":"    //@@author Shruthi0310 -reused","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"Shruthi0310"},"content":"    //Reused from https://se-education.org/guides/tutorials/javaFx.html","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"Shruthi0310"},"content":"    private Duke duke \u003d new Duke(\"duke.txt\");","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"Shruthi0310"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"Shruthi0310"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"Shruthi0310"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"Shruthi0310"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"Shruthi0310"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"Shruthi0310"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"Shruthi0310"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"Shruthi0310"},"content":"            stage.setTitle(\"Duke\");","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"Shruthi0310"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"Shruthi0310"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setStage(stage);","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"Shruthi0310"},"content":"            stage.show();","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"Shruthi0310"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"Shruthi0310"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"Shruthi0310"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"Shruthi0310":37}},{"path":"src/main/java/duke/main/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package duke.main;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"Shruthi0310"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"Shruthi0310"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"Shruthi0310"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"Shruthi0310"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"Shruthi0310"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"Shruthi0310"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"Shruthi0310"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"Shruthi0310"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"Shruthi0310"},"content":"import javafx.util.Duration;","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"Shruthi0310"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"Shruthi0310"},"content":" * Encapsulates the controller for MainWindow.","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"Shruthi0310"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"Shruthi0310"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"Shruthi0310"},"content":"    //@@author Shruthi0310 -reused","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"Shruthi0310"},"content":"    //Reused from https://se-education.org/guides/tutorials/javaFx.html","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"Shruthi0310"},"content":"    //with minor modifications","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"Shruthi0310"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"Shruthi0310"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"Shruthi0310"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"Shruthi0310"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"Shruthi0310"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"Shruthi0310"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"Shruthi0310"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"Shruthi0310"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"Shruthi0310"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"Shruthi0310"},"content":"    private Stage stage;","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"Shruthi0310"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"Shruthi0310"},"content":"    private static boolean hasShownMenu \u003d false;","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"Shruthi0310"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Picture1.png\"));","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"Shruthi0310"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Picture2.png\"));","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"Shruthi0310"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"Shruthi0310"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"Shruthi0310"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"Shruthi0310"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"Shruthi0310"},"content":"        duke \u003d d;","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"Shruthi0310"},"content":"    public void setStage(Stage stage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"Shruthi0310"},"content":"        this.stage \u003d stage;","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"Shruthi0310"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"Shruthi0310"},"content":"    private void getInitialDialog() {","lastModifiedDate":"2021-09-16"},{"lineNumber":60,"author":{"gitId":"Shruthi0310"},"content":"        if (!hasShownMenu) {","lastModifiedDate":"2021-09-08"},{"lineNumber":61,"author":{"gitId":"Shruthi0310"},"content":"            String response \u003d ui.showWelcome();","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"Shruthi0310"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"Shruthi0310"},"content":"                    DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"Shruthi0310"},"content":"            );","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"Shruthi0310"},"content":"            hasShownMenu \u003d true;","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"Shruthi0310"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":69,"author":{"gitId":"Shruthi0310"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":70,"author":{"gitId":"Shruthi0310"},"content":"    private void handleUserInput() throws DukeException {","lastModifiedDate":"2021-09-08"},{"lineNumber":71,"author":{"gitId":"Shruthi0310"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-01"},{"lineNumber":72,"author":{"gitId":"Shruthi0310"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":73,"author":{"gitId":"Shruthi0310"},"content":"        duke.save();","lastModifiedDate":"2021-09-08"},{"lineNumber":74,"author":{"gitId":"Shruthi0310"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-01"},{"lineNumber":75,"author":{"gitId":"Shruthi0310"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-01"},{"lineNumber":76,"author":{"gitId":"Shruthi0310"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-09-01"},{"lineNumber":77,"author":{"gitId":"Shruthi0310"},"content":"        );","lastModifiedDate":"2021-09-01"},{"lineNumber":78,"author":{"gitId":"Shruthi0310"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-01"},{"lineNumber":79,"author":{"gitId":"Shruthi0310"},"content":"        handleBye(response);","lastModifiedDate":"2021-09-15"},{"lineNumber":80,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":81,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":82,"author":{"gitId":"Shruthi0310"},"content":"    @FXML","lastModifiedDate":"2021-09-15"},{"lineNumber":83,"author":{"gitId":"Shruthi0310"},"content":"    private void handleBye(String response) {","lastModifiedDate":"2021-09-15"},{"lineNumber":84,"author":{"gitId":"Shruthi0310"},"content":"        String byeMessage \u003d \"Bye! Hope to see you again soon!\";","lastModifiedDate":"2021-09-08"},{"lineNumber":85,"author":{"gitId":"Shruthi0310"},"content":"        if(response.equals(byeMessage)) {","lastModifiedDate":"2021-09-08"},{"lineNumber":86,"author":{"gitId":"Shruthi0310"},"content":"            PauseTransition transition \u003d new PauseTransition(Duration.seconds(1));","lastModifiedDate":"2021-09-01"},{"lineNumber":87,"author":{"gitId":"Shruthi0310"},"content":"            transition.setOnFinished(e -\u003e stage.close());","lastModifiedDate":"2021-09-01"},{"lineNumber":88,"author":{"gitId":"Shruthi0310"},"content":"            transition.play();","lastModifiedDate":"2021-09-01"},{"lineNumber":89,"author":{"gitId":"Shruthi0310"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":90,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":91,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"Shruthi0310":91}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":" * Encapsulates a deadline task.","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"Shruthi0310"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"Shruthi0310"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"Shruthi0310"},"content":"    private LocalDateTime by;","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"Shruthi0310"},"content":"     * Constructor for deadline.","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"Shruthi0310"},"content":"     * @param description Details of deadline.","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"Shruthi0310"},"content":"     * @param by Date of completion of deadline.","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"Shruthi0310"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"Shruthi0310"},"content":"        super(description);","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"Shruthi0310"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"Shruthi0310"},"content":"     * Returns string of deadline in the format to be saved.","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"Shruthi0310"},"content":"     * @return String representation of deadline to be saved.","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"Shruthi0310"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"Shruthi0310"},"content":"    public String saveTaskFormat(){","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"Shruthi0310"},"content":"        return \"D\" + super.saveTaskFormat() + String.format(\"|%s\", by);","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"Shruthi0310"},"content":"     * Returns string of deadline in list.","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"Shruthi0310"},"content":"     * @return String representation of deadline.","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"Shruthi0310"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":40,"author":{"gitId":"Shruthi0310"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":41,"author":{"gitId":"Shruthi0310"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy h:mm a\");","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"Shruthi0310"},"content":"        String formattedBy \u003d by.format(formatter);","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"Shruthi0310"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formattedBy + \")\";","lastModifiedDate":"2021-09-16"},{"lineNumber":44,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":45,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"Shruthi0310":45}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":" * Encapsulates an event task.","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"Shruthi0310"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"Shruthi0310"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"Shruthi0310"},"content":"    private LocalDateTime at;","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"Shruthi0310"},"content":"     * Constructor for this event.","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"Shruthi0310"},"content":"     * @param description Details of event.","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"Shruthi0310"},"content":"     * @param at Date of event.","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"Shruthi0310"},"content":"    public Event(String description, LocalDateTime at) {","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"Shruthi0310"},"content":"        super(description);","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"Shruthi0310"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"Shruthi0310"},"content":"     * Returns string of event in the format to be saved.","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"Shruthi0310"},"content":"     * @return String representation of event to be saved.","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"Shruthi0310"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"Shruthi0310"},"content":"    public String saveTaskFormat(){","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"Shruthi0310"},"content":"        return \"E\" + super.saveTaskFormat() + String.format(\"|%s\", at);","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"Shruthi0310"},"content":"     * Returns string of event in list.","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"Shruthi0310"},"content":"     * @return String representation of event.","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"Shruthi0310"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":39,"author":{"gitId":"Shruthi0310"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":40,"author":{"gitId":"Shruthi0310"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy h:mm a\");","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"Shruthi0310"},"content":"        String formattedAt \u003d at.format(formatter);","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"Shruthi0310"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + formattedAt + \")\";","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":44,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"Shruthi0310":44}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":" * Encapsulates a task object.","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"public class Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":"    private String description;","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"Shruthi0310"},"content":"    private boolean isDone;","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"Shruthi0310"},"content":"     * Constructor for this task.","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"Shruthi0310"},"content":"     * @param description Details of the task.","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"Shruthi0310"},"content":"    public Task(String description) {","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"Shruthi0310"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"Shruthi0310"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"Shruthi0310"},"content":"     * Checks whether this task contains the keyword.","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"Shruthi0310"},"content":"     * @param keyword Word to match in task list.","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"Shruthi0310"},"content":"     * @return Boolean value whether the task contains keyword.","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"Shruthi0310"},"content":"    public boolean hasKeyword(String keyword) {","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"Shruthi0310"},"content":"        return description.contains(keyword);","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"Shruthi0310"},"content":"     * Returns task as string in the format to be saved.","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"Shruthi0310"},"content":"     * @return String representation of task to be saved.","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"Shruthi0310"},"content":"    public String saveTaskFormat() {","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"Shruthi0310"},"content":"        return String.format(\"|%s|%s\", isDone? 1 : 0, description);","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"Shruthi0310"},"content":"     * Returns the status icon of task.","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"Shruthi0310"},"content":"     * @return String representation of status icon of task.","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"Shruthi0310"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-14"},{"lineNumber":45,"author":{"gitId":"Shruthi0310"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-08-14"},{"lineNumber":46,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":47,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":48,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"Shruthi0310"},"content":"     * Sets status of task to true.","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"Shruthi0310"},"content":"    public void setDone() {","lastModifiedDate":"2021-08-14"},{"lineNumber":52,"author":{"gitId":"Shruthi0310"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-14"},{"lineNumber":53,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":54,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":55,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"Shruthi0310"},"content":"     * Returns task status and description.","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"Shruthi0310"},"content":"     * @return String representation of task.","lastModifiedDate":"2021-09-15"},{"lineNumber":59,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"Shruthi0310"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":61,"author":{"gitId":"Shruthi0310"},"content":"    public String toString(){","lastModifiedDate":"2021-08-14"},{"lineNumber":62,"author":{"gitId":"Shruthi0310"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2021-08-14"},{"lineNumber":63,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":64,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"Shruthi0310":64}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"Shruthi0310"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Shruthi0310"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"Shruthi0310"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"Shruthi0310"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"Shruthi0310"},"content":" * Encapsulates task list and its operations.","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"Shruthi0310"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"Shruthi0310"},"content":"public class TaskList {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"Shruthi0310"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"Shruthi0310"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"Shruthi0310"},"content":"     * Constructor for loading old task list.","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"Shruthi0310"},"content":"     * @param tasks List of tasks entered previously.","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"Shruthi0310"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"Shruthi0310"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"Shruthi0310"},"content":"     * Constructor for new task list.","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"Shruthi0310"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"Shruthi0310"},"content":"        this(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"Shruthi0310"},"content":"     * Returns number of tasks in list.","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"Shruthi0310"},"content":"     * @return Length of list.","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"Shruthi0310"},"content":"    public int getListLength() {","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"Shruthi0310"},"content":"        return tasks.size();","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"Shruthi0310"},"content":"     * Returns string showing task added.","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"Shruthi0310"},"content":"     * @param task Task to be added to list.","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"Shruthi0310"},"content":"     * @return String representation of task added.","lastModifiedDate":"2021-09-15"},{"lineNumber":50,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"Shruthi0310"},"content":"    public String addTaskToList(Task task) {","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"Shruthi0310"},"content":"        tasks.add(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"Shruthi0310"},"content":"        return ui.showTaskAdded(task, tasks.size());","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"Shruthi0310"},"content":"     * Returns string of tasks in list.","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"Shruthi0310"},"content":"     * @return String representation of list.","lastModifiedDate":"2021-09-15"},{"lineNumber":60,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"Shruthi0310"},"content":"    public String printTasksInList() {","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"Shruthi0310"},"content":"        return ui.showTasks(tasks);","lastModifiedDate":"2021-09-15"},{"lineNumber":63,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":64,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":65,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":66,"author":{"gitId":"Shruthi0310"},"content":"     * Returns tasks in list that match keyword.","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":68,"author":{"gitId":"Shruthi0310"},"content":"     * @param keyword Keyword to match in task list.","lastModifiedDate":"2021-09-15"},{"lineNumber":69,"author":{"gitId":"Shruthi0310"},"content":"     * @return String representation of matching tasks.","lastModifiedDate":"2021-09-15"},{"lineNumber":70,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":71,"author":{"gitId":"Shruthi0310"},"content":"    public String findMatchingTasks(String keyword) {","lastModifiedDate":"2021-09-01"},{"lineNumber":72,"author":{"gitId":"Shruthi0310"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-09-01"},{"lineNumber":73,"author":{"gitId":"Shruthi0310"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2021-08-27"},{"lineNumber":74,"author":{"gitId":"Shruthi0310"},"content":"            if (task.hasKeyword(keyword)) {","lastModifiedDate":"2021-08-27"},{"lineNumber":75,"author":{"gitId":"Shruthi0310"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2021-09-01"},{"lineNumber":76,"author":{"gitId":"Shruthi0310"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":77,"author":{"gitId":"Shruthi0310"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":79,"author":{"gitId":"Shruthi0310"},"content":"        TaskList matchingList \u003d new TaskList(matchingTasks);","lastModifiedDate":"2021-09-01"},{"lineNumber":80,"author":{"gitId":"Shruthi0310"},"content":"        return ui.showMatchingListMessage() + matchingList.printTasksInList();","lastModifiedDate":"2021-09-15"},{"lineNumber":81,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":84,"author":{"gitId":"Shruthi0310"},"content":"     * Returns string showing task deleted.","lastModifiedDate":"2021-08-27"},{"lineNumber":85,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":86,"author":{"gitId":"Shruthi0310"},"content":"     * @param deleteNumber Index of task in list.","lastModifiedDate":"2021-09-15"},{"lineNumber":87,"author":{"gitId":"Shruthi0310"},"content":"     * @return String representation of task deleted.","lastModifiedDate":"2021-09-15"},{"lineNumber":88,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":89,"author":{"gitId":"Shruthi0310"},"content":"    public String deleteFromList(int deleteNumber) {","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"Shruthi0310"},"content":"        assert deleteNumber \u003e\u003d 0 \u0026\u0026 deleteNumber \u003c tasks.size();","lastModifiedDate":"2021-09-06"},{"lineNumber":91,"author":{"gitId":"Shruthi0310"},"content":"        Task task \u003d tasks.get(deleteNumber);","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"Shruthi0310"},"content":"        tasks.remove(deleteNumber);","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"Shruthi0310"},"content":"        return ui.showTaskDeleted(task, tasks.size());","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":97,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":98,"author":{"gitId":"Shruthi0310"},"content":"     * Returns string of task set as done.","lastModifiedDate":"2021-08-27"},{"lineNumber":99,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":100,"author":{"gitId":"Shruthi0310"},"content":"     * @param doneNumber Index of task in list.","lastModifiedDate":"2021-09-15"},{"lineNumber":101,"author":{"gitId":"Shruthi0310"},"content":"     * @return String representation of task set as done.","lastModifiedDate":"2021-09-15"},{"lineNumber":102,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":103,"author":{"gitId":"Shruthi0310"},"content":"    public String setTaskAsDone(int doneNumber) {","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"Shruthi0310"},"content":"        assert doneNumber \u003e\u003d 0 \u0026\u0026 doneNumber \u003c tasks.size();","lastModifiedDate":"2021-09-06"},{"lineNumber":105,"author":{"gitId":"Shruthi0310"},"content":"        Task task \u003d tasks.get(doneNumber);","lastModifiedDate":"2021-08-26"},{"lineNumber":106,"author":{"gitId":"Shruthi0310"},"content":"        task.setDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"Shruthi0310"},"content":"        return ui.showTaskDone(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"Shruthi0310"},"content":"    public void archiveAllTasks() throws DukeException {","lastModifiedDate":"2021-09-08"},{"lineNumber":111,"author":{"gitId":"Shruthi0310"},"content":"        String ARCHIVE_FILE_PATH \u003d \"archive.txt\";","lastModifiedDate":"2021-09-15"},{"lineNumber":112,"author":{"gitId":"Shruthi0310"},"content":"        Storage archiveStorage \u003d new Storage(ARCHIVE_FILE_PATH);","lastModifiedDate":"2021-09-08"},{"lineNumber":113,"author":{"gitId":"Shruthi0310"},"content":"        archiveStorage.save(this, \"archive\");","lastModifiedDate":"2021-09-08"},{"lineNumber":114,"author":{"gitId":"Shruthi0310"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-08"},{"lineNumber":115,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":116,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":117,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":118,"author":{"gitId":"Shruthi0310"},"content":"     * Saves tasks in list to hard disk.","lastModifiedDate":"2021-08-27"},{"lineNumber":119,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":120,"author":{"gitId":"Shruthi0310"},"content":"     * @param writer FileWriter that write tasks to hard disk.","lastModifiedDate":"2021-09-15"},{"lineNumber":121,"author":{"gitId":"Shruthi0310"},"content":"     * @throws IOException If file is not found.","lastModifiedDate":"2021-09-15"},{"lineNumber":122,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":123,"author":{"gitId":"Shruthi0310"},"content":"    public void saveTasksInStorage(FileWriter writer) throws IOException {","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"Shruthi0310"},"content":"        for (Task tasks : tasks) {","lastModifiedDate":"2021-08-26"},{"lineNumber":125,"author":{"gitId":"Shruthi0310"},"content":"            writer.write(tasks.saveTaskFormat() + System.lineSeparator());","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"Shruthi0310"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Shruthi0310":129}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":" * Encapsulates the todo task.","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"Shruthi0310"},"content":"     * Constructor for todo object.","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"Shruthi0310"},"content":"     * @param description Details of todo.","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"Shruthi0310"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"Shruthi0310"},"content":"        super(description);","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"Shruthi0310"},"content":"     * Returns string of todo to be saved.","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"Shruthi0310"},"content":"     * @return String representation of todo to be saved.","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"Shruthi0310"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"Shruthi0310"},"content":"    public String saveTaskFormat(){","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"Shruthi0310"},"content":"        return \"T\" + super.saveTaskFormat();","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"Shruthi0310"},"content":"     * Returns string of task.","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"Shruthi0310"},"content":"     * @return String representation of task.","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"Shruthi0310"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"Shruthi0310"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"Shruthi0310"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-15"},{"lineNumber":35,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":36,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"Shruthi0310":36}},{"path":"src/main/java/duke/util/ArchiveCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package duke.util;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"/**","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":" * Encapsulates the archive command class.","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"Shruthi0310"},"content":" */","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"Shruthi0310"},"content":"public class ArchiveCommand implements Command {","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"Shruthi0310"},"content":"     * Returns string response when user enters a archive command.","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"Shruthi0310"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"Shruthi0310"},"content":"     * @param ui Ui that prints message to users.","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"Shruthi0310"},"content":"     * @param storage Storage to save and load data.","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"Shruthi0310"},"content":"     * @return String representation of duke\u0027s response for archive command.","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"Shruthi0310"},"content":"     * @throws DukeException If there is error saving the data.","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"Shruthi0310"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"Shruthi0310"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"Shruthi0310"},"content":"        tasks.archiveAllTasks();","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"Shruthi0310"},"content":"        storage.save(tasks, \"update\");","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"Shruthi0310"},"content":"        return ui.showArchiveMessage();","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"Shruthi0310":26}},{"path":"src/main/java/duke/util/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package duke.util;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"public class ByeCommand implements Command {","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"Shruthi0310"},"content":"     * Returns string response when user enters a bye command.","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"Shruthi0310"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"Shruthi0310"},"content":"     * @param ui Ui that prints message to users.","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"Shruthi0310"},"content":"     * @param storage Storage to save and load data.","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"Shruthi0310"},"content":"     * @return String representation of duke\u0027s response for bye command.","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"Shruthi0310"},"content":"     * @throws DukeException If there is error saving the data.","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"Shruthi0310"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"Shruthi0310"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"Shruthi0310"},"content":"        storage.save(tasks, \"update\");","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"Shruthi0310"},"content":"        return ui.showBye();","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"Shruthi0310":22}},{"path":"src/main/java/duke/util/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package duke.util;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"/**","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":" * Encapsulates the command interface.","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"Shruthi0310"},"content":" */","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"Shruthi0310"},"content":"public interface Command {","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"Shruthi0310"},"content":"     * Returns string response when user enters a command.","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"Shruthi0310"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"Shruthi0310"},"content":"     * @param ui Ui that prints message to users.","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"Shruthi0310"},"content":"     * @param storage Storage to save and load data.","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"Shruthi0310"},"content":"     * @return String representation of duke\u0027s response for a command.","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"Shruthi0310"},"content":"     * @throws DukeException If there are errors executing the command.","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"Shruthi0310"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"Shruthi0310":21}},{"path":"src/main/java/duke/util/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package duke.util;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"import duke.exception.NoDescriptionAndTimeException;","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"Shruthi0310"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"Shruthi0310"},"content":"/**","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"Shruthi0310"},"content":" * Encapsulates the deadline command class.","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"Shruthi0310"},"content":" */","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"Shruthi0310"},"content":"public class DeadlineCommand implements Command{","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"Shruthi0310"},"content":"    private String[] userInput;","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"Shruthi0310"},"content":"     * Constructor for DeadlineCommand.","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"Shruthi0310"},"content":"     * @param userInput Array of user input for deadline command.","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"Shruthi0310"},"content":"    public DeadlineCommand(String[] userInput) {","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"Shruthi0310"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"Shruthi0310"},"content":"     * Returns string response when user enters a deadline command.","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"Shruthi0310"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"Shruthi0310"},"content":"     * @param ui Ui that prints message to users.","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"Shruthi0310"},"content":"     * @param storage Storage to save and load data.","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"Shruthi0310"},"content":"     * @return String representation of duke\u0027s response for deadline command.","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"Shruthi0310"},"content":"     * @throws DukeException If there\u0027s no description or time for deadline.","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"Shruthi0310"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"Shruthi0310"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"Shruthi0310"},"content":"        if (userInput.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"Shruthi0310"},"content":"            throw new NoDescriptionAndTimeException(\"deadline\");","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"Shruthi0310"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"Shruthi0310"},"content":"        String[] deadlineDetail \u003d Parser.parseDescriptionAndTime(userInput, \"/by\", \"deadline\");","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"Shruthi0310"},"content":"        assert deadlineDetail.length \u003d\u003d 2 : \"deadlineDetail should be length of 2\";","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":45,"author":{"gitId":"Shruthi0310"},"content":"        LocalDateTime localDateTime \u003d Parser.parseDateTime(deadlineDetail[1].trim());","lastModifiedDate":"2021-09-16"},{"lineNumber":46,"author":{"gitId":"Shruthi0310"},"content":"        String description \u003d deadlineDetail[0].trim();","lastModifiedDate":"2021-09-16"},{"lineNumber":47,"author":{"gitId":"Shruthi0310"},"content":"        Deadline deadline \u003d new Deadline(description, localDateTime);","lastModifiedDate":"2021-09-16"},{"lineNumber":48,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":49,"author":{"gitId":"Shruthi0310"},"content":"        return tasks.addTaskToList(deadline);","lastModifiedDate":"2021-09-16"},{"lineNumber":50,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":51,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":52,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":53,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"Shruthi0310":53}},{"path":"src/main/java/duke/util/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package duke.util;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"import duke.exception.InvalidTaskDeletionException;","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":"/**","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"Shruthi0310"},"content":" * Encapsulates a delete command class.","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"Shruthi0310"},"content":" */","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"Shruthi0310"},"content":"public class DeleteCommand implements Command {","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"Shruthi0310"},"content":"    private String[] userInput;","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"Shruthi0310"},"content":"     * Constructor for DeleteCommand.","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"Shruthi0310"},"content":"     * @param userInput Array of user input for delete command.","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"Shruthi0310"},"content":"    public DeleteCommand(String[] userInput) {","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"Shruthi0310"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"Shruthi0310"},"content":"     * Returns string response when user enters a delete command.","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"Shruthi0310"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"Shruthi0310"},"content":"     * @param ui Ui that prints message to users.","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"Shruthi0310"},"content":"     * @param storage Storage to save and load data.","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"Shruthi0310"},"content":"     * @return String representation of duke\u0027s response for delete command.","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"Shruthi0310"},"content":"     * @throws DukeException If no task number or invalid task number entered.","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"Shruthi0310"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"Shruthi0310"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"Shruthi0310"},"content":"        if (userInput.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"Shruthi0310"},"content":"            throw new DukeException(\"No task number entered!\");","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"Shruthi0310"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"Shruthi0310"},"content":"        assert userInput.length \u003d\u003d 2;","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"Shruthi0310"},"content":"        int deleteNumber \u003d Integer.parseInt(userInput[1].trim()) - 1;","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"Shruthi0310"},"content":"        boolean isBelowValidIndex \u003d deleteNumber \u003c 0;","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"Shruthi0310"},"content":"        boolean isAboveValidIndex \u003d deleteNumber \u003e tasks.getListLength()-1;","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"Shruthi0310"},"content":"        if (isBelowValidIndex || isAboveValidIndex) {","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"Shruthi0310"},"content":"            throw new InvalidTaskDeletionException();","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"Shruthi0310"},"content":"        } else {","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"Shruthi0310"},"content":"            return tasks.deleteFromList(deleteNumber);","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"Shruthi0310"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"Shruthi0310":49}},{"path":"src/main/java/duke/util/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package duke.util;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"import duke.exception.InvalidTaskDoneException;","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"Shruthi0310"},"content":"/**","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"Shruthi0310"},"content":" * Encapsulates the done command class.","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"Shruthi0310"},"content":" */","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"Shruthi0310"},"content":"public class DoneCommand implements Command{","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"Shruthi0310"},"content":"    private String[] userInput;","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"Shruthi0310"},"content":"     * Constructor for DoneCommand.","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"Shruthi0310"},"content":"     * @param userInput Array of user input for done command.","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"Shruthi0310"},"content":"    public DoneCommand(String[] userInput) {","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"Shruthi0310"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"Shruthi0310"},"content":"     * Returns string response when user enters a done command.","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"Shruthi0310"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"Shruthi0310"},"content":"     * @param ui Ui that prints message to users.","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"Shruthi0310"},"content":"     * @param storage Storage to save and load data.","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"Shruthi0310"},"content":"     * @return String representation of duke\u0027s response for done command.","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"Shruthi0310"},"content":"     * @throws DukeException If no task number or invalid task number entered.","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"Shruthi0310"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"Shruthi0310"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"Shruthi0310"},"content":"        if (userInput.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"Shruthi0310"},"content":"            throw new DukeException(\"No task number entered!\");","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"Shruthi0310"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"Shruthi0310"},"content":"        assert userInput.length \u003d\u003d 2;","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"Shruthi0310"},"content":"        int doneNumber \u003d Integer.parseInt(userInput[1].trim()) - 1;","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"Shruthi0310"},"content":"        boolean isBelowValidIndex \u003d doneNumber \u003c 0;","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"Shruthi0310"},"content":"        boolean isAboveValidIndex \u003d doneNumber \u003e tasks.getListLength()-1;","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"Shruthi0310"},"content":"        if (isBelowValidIndex || isAboveValidIndex) {","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"Shruthi0310"},"content":"            throw new InvalidTaskDoneException();","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"Shruthi0310"},"content":"        } else {","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"Shruthi0310"},"content":"            return tasks.setTaskAsDone(doneNumber);","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"Shruthi0310"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":50,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"Shruthi0310":50}},{"path":"src/main/java/duke/util/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package duke.util;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"import duke.exception.NoDescriptionAndTimeException;","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"Shruthi0310"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"Shruthi0310"},"content":"/**","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"Shruthi0310"},"content":" * Encapsulates the event command class.","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"Shruthi0310"},"content":" */","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"Shruthi0310"},"content":"public class EventCommand implements Command{","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"Shruthi0310"},"content":"    private String[] userInput;","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"Shruthi0310"},"content":"     * Constructor for EventCommand.","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"Shruthi0310"},"content":"     * @param userInput Array of user input for event command.","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"Shruthi0310"},"content":"    public EventCommand(String[] userInput) {","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"Shruthi0310"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"Shruthi0310"},"content":"     * Returns string response when user enters an event command.","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"Shruthi0310"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"Shruthi0310"},"content":"     * @param ui Ui that prints message to users.","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"Shruthi0310"},"content":"     * @param storage Storage to save and load data.","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"Shruthi0310"},"content":"     * @return String representation of duke\u0027s response for event command.","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"Shruthi0310"},"content":"     * @throws DukeException If no description/time entered for event command.","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"Shruthi0310"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"Shruthi0310"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"Shruthi0310"},"content":"        if (userInput.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"Shruthi0310"},"content":"            throw new NoDescriptionAndTimeException(\"event\");","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"Shruthi0310"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"Shruthi0310"},"content":"        String[] eventDetail \u003d Parser.parseDescriptionAndTime(userInput, \"/at\", \"event\");","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"Shruthi0310"},"content":"        assert eventDetail.length \u003d\u003d 2 : \"eventDetail should have length of 2\";","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"Shruthi0310"},"content":"        LocalDateTime localDateTime \u003d Parser.parseDateTime(eventDetail[1].trim());","lastModifiedDate":"2021-09-16"},{"lineNumber":46,"author":{"gitId":"Shruthi0310"},"content":"        String description \u003d eventDetail[0].trim();","lastModifiedDate":"2021-09-16"},{"lineNumber":47,"author":{"gitId":"Shruthi0310"},"content":"        Event event \u003d new Event(description, localDateTime);","lastModifiedDate":"2021-09-16"},{"lineNumber":48,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":49,"author":{"gitId":"Shruthi0310"},"content":"        return tasks.addTaskToList(event);","lastModifiedDate":"2021-09-16"},{"lineNumber":50,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":51,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"Shruthi0310":51}},{"path":"src/main/java/duke/util/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package duke.util;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"/**","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":" * Encapsulates the find command class.","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"Shruthi0310"},"content":" */","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"Shruthi0310"},"content":"public class FindCommand implements Command {","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"Shruthi0310"},"content":"    private String[] userInput;","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"Shruthi0310"},"content":"     * Constructor for FindCommand.","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"Shruthi0310"},"content":"     * @param userInput Array of user input for find command.","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"Shruthi0310"},"content":"    public FindCommand(String[] userInput) {","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"Shruthi0310"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"Shruthi0310"},"content":"     * Returns string response when user enters a find command.","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"Shruthi0310"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"Shruthi0310"},"content":"     * @param ui Ui that prints message to users.","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"Shruthi0310"},"content":"     * @param storage Storage to save and load data.","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"Shruthi0310"},"content":"     * @return String representation of response for find command.","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"Shruthi0310"},"content":"     * @throws DukeException If no keyword for find command entered.","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"Shruthi0310"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"Shruthi0310"},"content":"        if (userInput.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"Shruthi0310"},"content":"            throw new DukeException(\"Please enter a keyword to find matching tasks...\");","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"Shruthi0310"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"Shruthi0310"},"content":"        String keyword \u003d userInput[1].trim();","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"Shruthi0310"},"content":"        return tasks.findMatchingTasks(keyword);","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"Shruthi0310":38}},{"path":"src/main/java/duke/util/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package duke.util;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":"/**","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":" * Encapsulates the list command class.","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":" */","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"Shruthi0310"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"Shruthi0310"},"content":"     * Returns string response when user enters a list command.","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"Shruthi0310"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"Shruthi0310"},"content":"     * @param ui Ui that prints message to users.","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"Shruthi0310"},"content":"     * @param storage Storage to save and load data.","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"Shruthi0310"},"content":"     * @return String representation of response for list command.","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"Shruthi0310"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"Shruthi0310"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"Shruthi0310"},"content":"        return ui.showListMessage() + tasks.printTasksInList();","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"Shruthi0310":22}},{"path":"src/main/java/duke/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package duke.util;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"import duke.exception.NoCommandException;","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":"import duke.exception.NoDescriptionAndTimeException;","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"import duke.exception.NoDescriptionException;","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":"import duke.exception.NoTimeException;","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"Shruthi0310"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Shruthi0310"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"Shruthi0310"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"Shruthi0310"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"Shruthi0310"},"content":" * Encapsulates the parsing of user inputs.","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"Shruthi0310"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"Shruthi0310"},"content":"public class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"Shruthi0310"},"content":"     * Returns string response for each user input.","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"Shruthi0310"},"content":"     * @param fullCommand Command entered by user.","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"Shruthi0310"},"content":"     * @return String representation of duke\u0027s response.","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"Shruthi0310"},"content":"     * @throws DukeException If user input does not match any command words.","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"Shruthi0310"},"content":"    public static Command parseCommand(String fullCommand) throws DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"Shruthi0310"},"content":"        String[] command \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"Shruthi0310"},"content":"        String commandWord \u003d command[0].trim();","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"Shruthi0310"},"content":"        switch (commandWord) {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"Shruthi0310"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"Shruthi0310"},"content":"            return new TodoCommand(command);","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"Shruthi0310"},"content":"        case \"event\":","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"Shruthi0310"},"content":"            return new EventCommand(command);","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"Shruthi0310"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"Shruthi0310"},"content":"            return new DeadlineCommand(command);","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"Shruthi0310"},"content":"        case \"bye\":","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"Shruthi0310"},"content":"            return new ByeCommand();","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"Shruthi0310"},"content":"        case \"list\":","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"Shruthi0310"},"content":"            return new ListCommand();","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"Shruthi0310"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"Shruthi0310"},"content":"            return new DeleteCommand(command);","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"Shruthi0310"},"content":"        case \"done\":","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"Shruthi0310"},"content":"            return new DoneCommand(command);","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"Shruthi0310"},"content":"        case \"find\":","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"Shruthi0310"},"content":"            return new FindCommand(command);","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"Shruthi0310"},"content":"        case \"archive\":","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"Shruthi0310"},"content":"            return new ArchiveCommand();","lastModifiedDate":"2021-09-15"},{"lineNumber":50,"author":{"gitId":"Shruthi0310"},"content":"        default:","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"Shruthi0310"},"content":"            throw new NoCommandException();","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"Shruthi0310"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"Shruthi0310"},"content":"     * Returns array of string that stores description and date of task.","lastModifiedDate":"2021-09-15"},{"lineNumber":57,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"Shruthi0310"},"content":"     * @param userInput Array that stores task type and details of task.","lastModifiedDate":"2021-09-15"},{"lineNumber":59,"author":{"gitId":"Shruthi0310"},"content":"     * @param regex Regex to split the task details into description and date.","lastModifiedDate":"2021-09-16"},{"lineNumber":60,"author":{"gitId":"Shruthi0310"},"content":"     * @param taskType Type of task.","lastModifiedDate":"2021-09-15"},{"lineNumber":61,"author":{"gitId":"Shruthi0310"},"content":"     * @return Array of string containing description and date respectively.","lastModifiedDate":"2021-09-15"},{"lineNumber":62,"author":{"gitId":"Shruthi0310"},"content":"     * @throws DukeException If userInput doesn\u0027t contain description or date.","lastModifiedDate":"2021-09-15"},{"lineNumber":63,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":64,"author":{"gitId":"Shruthi0310"},"content":"    public static String[] parseDescriptionAndTime(String[] userInput,String regex,","lastModifiedDate":"2021-09-15"},{"lineNumber":65,"author":{"gitId":"Shruthi0310"},"content":"                                                    String taskType) throws DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":66,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":67,"author":{"gitId":"Shruthi0310"},"content":"        String[] descriptionTime \u003d userInput[1].trim().split(regex);","lastModifiedDate":"2021-09-16"},{"lineNumber":68,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"Shruthi0310"},"content":"        if(descriptionTime.length \u003d\u003d 0) {","lastModifiedDate":"2021-09-16"},{"lineNumber":70,"author":{"gitId":"Shruthi0310"},"content":"            throw new NoDescriptionAndTimeException(taskType);","lastModifiedDate":"2021-09-15"},{"lineNumber":71,"author":{"gitId":"Shruthi0310"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":72,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":73,"author":{"gitId":"Shruthi0310"},"content":"        if (descriptionTime[0].trim().length() \u003d\u003d 0) {","lastModifiedDate":"2021-09-16"},{"lineNumber":74,"author":{"gitId":"Shruthi0310"},"content":"            throw new NoDescriptionException(taskType);","lastModifiedDate":"2021-09-15"},{"lineNumber":75,"author":{"gitId":"Shruthi0310"},"content":"        } else if (descriptionTime.length \u003c 2) {","lastModifiedDate":"2021-09-16"},{"lineNumber":76,"author":{"gitId":"Shruthi0310"},"content":"            throw new NoTimeException(taskType);","lastModifiedDate":"2021-09-15"},{"lineNumber":77,"author":{"gitId":"Shruthi0310"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":79,"author":{"gitId":"Shruthi0310"},"content":"        assert descriptionTime.length \u003d\u003d 2;","lastModifiedDate":"2021-09-16"},{"lineNumber":80,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":81,"author":{"gitId":"Shruthi0310"},"content":"        return descriptionTime;","lastModifiedDate":"2021-09-16"},{"lineNumber":82,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":83,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":84,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":85,"author":{"gitId":"Shruthi0310"},"content":"     * Returns date and time formatted as LocalDateTime.","lastModifiedDate":"2021-09-16"},{"lineNumber":86,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":87,"author":{"gitId":"Shruthi0310"},"content":"     * @param userInput Date and time entered by user.","lastModifiedDate":"2021-09-16"},{"lineNumber":88,"author":{"gitId":"Shruthi0310"},"content":"     * @return Date and time of the LocalDateTime format.","lastModifiedDate":"2021-09-16"},{"lineNumber":89,"author":{"gitId":"Shruthi0310"},"content":"     * @throws DukeException If dateTime is not of required format.","lastModifiedDate":"2021-09-16"},{"lineNumber":90,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":91,"author":{"gitId":"Shruthi0310"},"content":"    public static LocalDateTime parseDateTime(String userInput) throws DukeException {","lastModifiedDate":"2021-09-16"},{"lineNumber":92,"author":{"gitId":"Shruthi0310"},"content":"        String[] dateTime \u003d userInput.split(\",\", 2);","lastModifiedDate":"2021-09-16"},{"lineNumber":93,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":94,"author":{"gitId":"Shruthi0310"},"content":"        if (dateTime.length \u003c 2) {","lastModifiedDate":"2021-09-16"},{"lineNumber":95,"author":{"gitId":"Shruthi0310"},"content":"            throw new DukeException(\"Please enter date and time of format yyyy-MM-dd, HH:mm!\");","lastModifiedDate":"2021-09-16"},{"lineNumber":96,"author":{"gitId":"Shruthi0310"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":97,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":98,"author":{"gitId":"Shruthi0310"},"content":"        LocalDate localDate \u003d LocalDate.parse(dateTime[0].trim());","lastModifiedDate":"2021-09-16"},{"lineNumber":99,"author":{"gitId":"Shruthi0310"},"content":"        LocalTime localTime \u003d LocalTime.parse(dateTime[1].trim());","lastModifiedDate":"2021-09-16"},{"lineNumber":100,"author":{"gitId":"Shruthi0310"},"content":"        return LocalDateTime.of(localDate, localTime);","lastModifiedDate":"2021-09-16"},{"lineNumber":101,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Shruthi0310":103}},{"path":"src/main/java/duke/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package duke.util;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"Shruthi0310"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"Shruthi0310"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"Shruthi0310"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"Shruthi0310"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"Shruthi0310"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"Shruthi0310"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"Shruthi0310"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"Shruthi0310"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"Shruthi0310"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"Shruthi0310"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"Shruthi0310"},"content":"/**","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"Shruthi0310"},"content":" * Encapsulates the storage class.","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"Shruthi0310"},"content":" */","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"Shruthi0310"},"content":"public class Storage {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"Shruthi0310"},"content":"    private String filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"Shruthi0310"},"content":"     * Constructor for Storage.","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"Shruthi0310"},"content":"     * @param filePath Filepath to/from which date is stored/loaded.","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"Shruthi0310"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"Shruthi0310"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"Shruthi0310"},"content":"     * Loads previously saved data into array list.","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"Shruthi0310"},"content":"     * @return Array list of tasks saved previously.","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"Shruthi0310"},"content":"     * @throws DukeException If there is error loading file.","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"Shruthi0310"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"Shruthi0310"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"Shruthi0310"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"Shruthi0310"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"Shruthi0310"},"content":"            if (!file.exists()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"Shruthi0310"},"content":"                return tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"Shruthi0310"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":52,"author":{"gitId":"Shruthi0310"},"content":"            BufferedReader br \u003d new BufferedReader(new FileReader(filePath));","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"Shruthi0310"},"content":"            String line \u003d br.readLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"Shruthi0310"},"content":"            while (line !\u003d null) {","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"Shruthi0310"},"content":"                String[] input \u003d line.split(\"\\\\|\");","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"Shruthi0310"},"content":"                assert input.length \u003e\u003d 3 : \"loaded input should have at least 3 details\";","lastModifiedDate":"2021-09-08"},{"lineNumber":57,"author":{"gitId":"Shruthi0310"},"content":"                loadTask(input, tasks);","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"Shruthi0310"},"content":"                line \u003d br.readLine();","lastModifiedDate":"2021-09-08"},{"lineNumber":59,"author":{"gitId":"Shruthi0310"},"content":"            }","lastModifiedDate":"2021-09-08"},{"lineNumber":60,"author":{"gitId":"Shruthi0310"},"content":"        } catch (IOException| DateTimeParseException e) {","lastModifiedDate":"2021-09-16"},{"lineNumber":61,"author":{"gitId":"Shruthi0310"},"content":"            throw new DukeException(\"Error loading tasks...\");","lastModifiedDate":"2021-09-08"},{"lineNumber":62,"author":{"gitId":"Shruthi0310"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":63,"author":{"gitId":"Shruthi0310"},"content":"        return tasks;","lastModifiedDate":"2021-09-08"},{"lineNumber":64,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":65,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":66,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":67,"author":{"gitId":"Shruthi0310"},"content":"     * Loads a single task into list based on type of task.","lastModifiedDate":"2021-09-15"},{"lineNumber":68,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":69,"author":{"gitId":"Shruthi0310"},"content":"     * @param input Array of task details in one line of file read.","lastModifiedDate":"2021-09-15"},{"lineNumber":70,"author":{"gitId":"Shruthi0310"},"content":"     * @param tasks ArrayList to which task is loaded into.","lastModifiedDate":"2021-09-15"},{"lineNumber":71,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":72,"author":{"gitId":"Shruthi0310"},"content":"    private void loadTask(String[] input, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-15"},{"lineNumber":73,"author":{"gitId":"Shruthi0310"},"content":"        String taskType \u003d input[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"Shruthi0310"},"content":"        String description \u003d input[2];","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"Shruthi0310"},"content":"        boolean isTaskDone \u003d input[1].equals(\"1\");","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":77,"author":{"gitId":"Shruthi0310"},"content":"        switch (taskType) {","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"Shruthi0310"},"content":"        case \"T\":","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"Shruthi0310"},"content":"            Todo todo \u003d new Todo(description);","lastModifiedDate":"2021-09-08"},{"lineNumber":80,"author":{"gitId":"Shruthi0310"},"content":"            setDoneAndAddToList(tasks, todo, isTaskDone);","lastModifiedDate":"2021-09-08"},{"lineNumber":81,"author":{"gitId":"Shruthi0310"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"Shruthi0310"},"content":"        case \"E\":","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"Shruthi0310"},"content":"            LocalDateTime at \u003d LocalDateTime.parse(input[3]);","lastModifiedDate":"2021-09-16"},{"lineNumber":84,"author":{"gitId":"Shruthi0310"},"content":"            Event event \u003d new Event(description, at);","lastModifiedDate":"2021-09-08"},{"lineNumber":85,"author":{"gitId":"Shruthi0310"},"content":"            setDoneAndAddToList(tasks, event, isTaskDone);","lastModifiedDate":"2021-09-08"},{"lineNumber":86,"author":{"gitId":"Shruthi0310"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"Shruthi0310"},"content":"        case \"D\":","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"Shruthi0310"},"content":"            LocalDateTime by \u003d LocalDateTime.parse(input[3]);","lastModifiedDate":"2021-09-16"},{"lineNumber":89,"author":{"gitId":"Shruthi0310"},"content":"            Deadline deadline \u003d new Deadline(description, by);","lastModifiedDate":"2021-09-08"},{"lineNumber":90,"author":{"gitId":"Shruthi0310"},"content":"            setDoneAndAddToList(tasks, deadline, isTaskDone);","lastModifiedDate":"2021-09-08"},{"lineNumber":91,"author":{"gitId":"Shruthi0310"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"Shruthi0310"},"content":"        default:","lastModifiedDate":"2021-09-08"},{"lineNumber":93,"author":{"gitId":"Shruthi0310"},"content":"            assert false : taskType;","lastModifiedDate":"2021-09-08"},{"lineNumber":94,"author":{"gitId":"Shruthi0310"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":98,"author":{"gitId":"Shruthi0310"},"content":"     * Sets task to done if they were saved as done previously.","lastModifiedDate":"2021-09-15"},{"lineNumber":99,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":100,"author":{"gitId":"Shruthi0310"},"content":"     * @param tasks Array list into which task is added","lastModifiedDate":"2021-09-15"},{"lineNumber":101,"author":{"gitId":"Shruthi0310"},"content":"     * @param task Task to be set as done or not and loaded.","lastModifiedDate":"2021-09-16"},{"lineNumber":102,"author":{"gitId":"Shruthi0310"},"content":"     * @param isTaskDone Boolean of whether task has been done.","lastModifiedDate":"2021-09-15"},{"lineNumber":103,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":104,"author":{"gitId":"Shruthi0310"},"content":"    private void setDoneAndAddToList(ArrayList\u003cTask\u003e tasks, Task task, boolean isTaskDone) {","lastModifiedDate":"2021-09-08"},{"lineNumber":105,"author":{"gitId":"Shruthi0310"},"content":"        if (isTaskDone) {","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"Shruthi0310"},"content":"            task.setDone();","lastModifiedDate":"2021-09-08"},{"lineNumber":107,"author":{"gitId":"Shruthi0310"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"Shruthi0310"},"content":"        tasks.add(task);","lastModifiedDate":"2021-09-08"},{"lineNumber":109,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":112,"author":{"gitId":"Shruthi0310"},"content":"     * Saves tasks into a file.","lastModifiedDate":"2021-09-15"},{"lineNumber":113,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":114,"author":{"gitId":"Shruthi0310"},"content":"     * @param taskList TaskList which contains tasks to be saved.","lastModifiedDate":"2021-09-15"},{"lineNumber":115,"author":{"gitId":"Shruthi0310"},"content":"     * @param commandType Command that called the save method.","lastModifiedDate":"2021-09-15"},{"lineNumber":116,"author":{"gitId":"Shruthi0310"},"content":"     * @throws DukeException If there is error saving tasks to file.","lastModifiedDate":"2021-09-15"},{"lineNumber":117,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":118,"author":{"gitId":"Shruthi0310"},"content":"    public void save(TaskList taskList, String commandType) throws DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":119,"author":{"gitId":"Shruthi0310"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"Shruthi0310"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"Shruthi0310"},"content":"            FileWriter writer;","lastModifiedDate":"2021-09-08"},{"lineNumber":122,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":123,"author":{"gitId":"Shruthi0310"},"content":"            if (commandType.equals(\"archive\")) {","lastModifiedDate":"2021-09-15"},{"lineNumber":124,"author":{"gitId":"Shruthi0310"},"content":"                writer \u003d new FileWriter(file, true);","lastModifiedDate":"2021-09-08"},{"lineNumber":125,"author":{"gitId":"Shruthi0310"},"content":"            } else {","lastModifiedDate":"2021-09-08"},{"lineNumber":126,"author":{"gitId":"Shruthi0310"},"content":"                writer \u003d new FileWriter(file);","lastModifiedDate":"2021-09-08"},{"lineNumber":127,"author":{"gitId":"Shruthi0310"},"content":"            }","lastModifiedDate":"2021-09-08"},{"lineNumber":128,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":129,"author":{"gitId":"Shruthi0310"},"content":"            taskList.saveTasksInStorage(writer);","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"Shruthi0310"},"content":"            writer.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"Shruthi0310"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":132,"author":{"gitId":"Shruthi0310"},"content":"           throw new DukeException(\"Error writing file\");","lastModifiedDate":"2021-08-24"},{"lineNumber":133,"author":{"gitId":"Shruthi0310"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":134,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":135,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":136,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Shruthi0310":136}},{"path":"src/main/java/duke/util/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package duke.util;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"import duke.exception.NoDescriptionException;","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"Shruthi0310"},"content":"/**","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"Shruthi0310"},"content":" * Encapsulates the todo command class.","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"Shruthi0310"},"content":" */","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"Shruthi0310"},"content":"public class TodoCommand implements Command {","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"Shruthi0310"},"content":"    private String[] userInput;","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"Shruthi0310"},"content":"     * Constructor for TodoCommand.","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"Shruthi0310"},"content":"     * @param userInput Array of user input for todo command.","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"Shruthi0310"},"content":"    public TodoCommand(String[] userInput) {","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"Shruthi0310"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"Shruthi0310"},"content":"     * Returns string response when user enters a todo command.","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"Shruthi0310"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"Shruthi0310"},"content":"     * @param ui Ui that prints message to users.","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"Shruthi0310"},"content":"     * @param storage Storage to save and load data.","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"Shruthi0310"},"content":"     * @return String representation of duke\u0027s response for todo command.","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"Shruthi0310"},"content":"     * @throws DukeException If no description entered for todo command.","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"Shruthi0310"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"Shruthi0310"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"Shruthi0310"},"content":"        if (userInput.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"Shruthi0310"},"content":"            throw new NoDescriptionException(\"todo\");","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"Shruthi0310"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"Shruthi0310"},"content":"        assert userInput.length \u003d\u003d 2;","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"Shruthi0310"},"content":"        String description \u003d userInput[1].trim();","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"Shruthi0310"},"content":"        Todo todo \u003d new Todo(description);","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":44,"author":{"gitId":"Shruthi0310"},"content":"        return tasks.addTaskToList(todo);","lastModifiedDate":"2021-09-16"},{"lineNumber":45,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"Shruthi0310":46}},{"path":"src/main/java/duke/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package duke.util;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"Shruthi0310"},"content":" * Encapsulates user interaction.","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"Shruthi0310"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"Shruthi0310"},"content":"public class Ui {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Shruthi0310"},"content":"    private static final String WELCOME_MESSAGE\u003d \"Hello! I\u0027m Duke \"","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"Shruthi0310"},"content":"            + \"What can I do for you?\\n\\n\"","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"Shruthi0310"},"content":"            + \"Please enter one of the following commands:\\n\"","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"Shruthi0310"},"content":"            + \"- todo \u003cdescription\u003e \\n\"","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"Shruthi0310"},"content":"            + \"- deadline \u003cdescription\u003e /by \u003cdate\u003e \\n  of format yyyy-mm-dd, HH:mm\\n\"","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"Shruthi0310"},"content":"            + \"- event \u003cdescription\u003e /at \u003cdate\u003e\\n  of format yyyy-mm-dd, HH:mm\\n\"","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"Shruthi0310"},"content":"            + \"- list: see task list\\n\"","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"Shruthi0310"},"content":"            + \"- find \u003ckeyword\u003e : find tasks with\\n  keyword\\n\"","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"Shruthi0310"},"content":"            + \"- delete \u003ctask no.\u003e\\n\"","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"Shruthi0310"},"content":"            + \"- done \u003ctask no.\u003e\\n\"","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"Shruthi0310"},"content":"            + \"- archive: archive all tasks\\n\"","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"Shruthi0310"},"content":"            + \"- bye: exit duke\\n\";","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"Shruthi0310"},"content":"     * Returns welcome message.","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"Shruthi0310"},"content":"    public String showWelcome() {","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"Shruthi0310"},"content":"        return WELCOME_MESSAGE;","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"Shruthi0310"},"content":"     * Returns string of task added.","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"Shruthi0310"},"content":"     * @param task Task added.","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"Shruthi0310"},"content":"     * @param listLength Length of task list.","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"Shruthi0310"},"content":"     * @return String representation of task list.","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"Shruthi0310"},"content":"    public String showTaskAdded(Task task, int listLength) {","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"Shruthi0310"},"content":"        String taskAdded \u003d String.format(\"added: \" + task.toString()","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"Shruthi0310"},"content":"                + \"\\nNow you have %s tasks in your list\" , listLength);","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"Shruthi0310"},"content":"        return taskAdded;","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"Shruthi0310"},"content":"     * Returns string of task deleted.","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"Shruthi0310"},"content":"     * @param task Task deleted.","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"Shruthi0310"},"content":"     * @param listLength Length of task list.","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"Shruthi0310"},"content":"     * @return String representation of task deleted.","lastModifiedDate":"2021-09-15"},{"lineNumber":50,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"Shruthi0310"},"content":"    public String showTaskDeleted(Task task, int listLength) {","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"Shruthi0310"},"content":"        String taskDeleted \u003d String.format(\"Noted. I\u0027ve removed this task:\\n\" + task.toString()","lastModifiedDate":"2021-09-15"},{"lineNumber":53,"author":{"gitId":"Shruthi0310"},"content":"                + \"\\nNow you have %s tasks in your list\\n\" , listLength);","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"Shruthi0310"},"content":"        return taskDeleted;","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"Shruthi0310"},"content":"     * Returns string of task done.","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"Shruthi0310"},"content":"     * @param task Task set as done.","lastModifiedDate":"2021-09-15"},{"lineNumber":61,"author":{"gitId":"Shruthi0310"},"content":"     * @return String representation of task set as done.","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"Shruthi0310"},"content":"    public String showTaskDone(Task task) {","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"Shruthi0310"},"content":"        String taskDone \u003d \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2021-09-15"},{"lineNumber":65,"author":{"gitId":"Shruthi0310"},"content":"                + task.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"Shruthi0310"},"content":"        return taskDone;","lastModifiedDate":"2021-09-15"},{"lineNumber":67,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":70,"author":{"gitId":"Shruthi0310"},"content":"     * Returns string message for bye.","lastModifiedDate":"2021-09-01"},{"lineNumber":71,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":72,"author":{"gitId":"Shruthi0310"},"content":"     * @return String representation for bye.","lastModifiedDate":"2021-09-15"},{"lineNumber":73,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":74,"author":{"gitId":"Shruthi0310"},"content":"    public String showBye() {","lastModifiedDate":"2021-09-01"},{"lineNumber":75,"author":{"gitId":"Shruthi0310"},"content":"        String byeMessage \u003d \"Bye! Hope to see you again soon!\";","lastModifiedDate":"2021-09-15"},{"lineNumber":76,"author":{"gitId":"Shruthi0310"},"content":"        return byeMessage;","lastModifiedDate":"2021-09-15"},{"lineNumber":77,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":78,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":79,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":80,"author":{"gitId":"Shruthi0310"},"content":"     * Returns head message for list.","lastModifiedDate":"2021-09-15"},{"lineNumber":81,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":82,"author":{"gitId":"Shruthi0310"},"content":"     * @return String representation for list head message.","lastModifiedDate":"2021-09-15"},{"lineNumber":83,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":84,"author":{"gitId":"Shruthi0310"},"content":"    public String showListMessage() {","lastModifiedDate":"2021-09-15"},{"lineNumber":85,"author":{"gitId":"Shruthi0310"},"content":"        String listMessage \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2021-09-15"},{"lineNumber":86,"author":{"gitId":"Shruthi0310"},"content":"        return listMessage;","lastModifiedDate":"2021-09-15"},{"lineNumber":87,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":88,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":89,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":90,"author":{"gitId":"Shruthi0310"},"content":"     * Returns head message for matching list.","lastModifiedDate":"2021-09-15"},{"lineNumber":91,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":92,"author":{"gitId":"Shruthi0310"},"content":"     * @return String representation for matching list head message.","lastModifiedDate":"2021-09-15"},{"lineNumber":93,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":94,"author":{"gitId":"Shruthi0310"},"content":"    public String showMatchingListMessage() {","lastModifiedDate":"2021-09-15"},{"lineNumber":95,"author":{"gitId":"Shruthi0310"},"content":"        String matchingListMessage \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2021-09-15"},{"lineNumber":96,"author":{"gitId":"Shruthi0310"},"content":"        return matchingListMessage;","lastModifiedDate":"2021-09-15"},{"lineNumber":97,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":98,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":99,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":100,"author":{"gitId":"Shruthi0310"},"content":"     * Returns string of tasks in list.","lastModifiedDate":"2021-09-01"},{"lineNumber":101,"author":{"gitId":"Shruthi0310"},"content":"     * @param tasks Array list of task to be printed.","lastModifiedDate":"2021-09-16"},{"lineNumber":102,"author":{"gitId":"Shruthi0310"},"content":"     * @return String representation of tasks in list.","lastModifiedDate":"2021-09-15"},{"lineNumber":103,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":104,"author":{"gitId":"Shruthi0310"},"content":"    public String showTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-15"},{"lineNumber":105,"author":{"gitId":"Shruthi0310"},"content":"        String list \u003d \"\";","lastModifiedDate":"2021-09-15"},{"lineNumber":106,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":107,"author":{"gitId":"Shruthi0310"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-09-08"},{"lineNumber":108,"author":{"gitId":"Shruthi0310"},"content":"            list +\u003d \"no tasks in list yet...\";","lastModifiedDate":"2021-09-08"},{"lineNumber":109,"author":{"gitId":"Shruthi0310"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":110,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":111,"author":{"gitId":"Shruthi0310"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-09-01"},{"lineNumber":112,"author":{"gitId":"Shruthi0310"},"content":"            list +\u003d String.format(\"%s.%s\\n\", i + 1, tasks.get(i).toString());","lastModifiedDate":"2021-09-16"},{"lineNumber":113,"author":{"gitId":"Shruthi0310"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":114,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":115,"author":{"gitId":"Shruthi0310"},"content":"        return list;","lastModifiedDate":"2021-09-01"},{"lineNumber":116,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":119,"author":{"gitId":"Shruthi0310"},"content":"     * Returns string message for archive.","lastModifiedDate":"2021-09-15"},{"lineNumber":120,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":121,"author":{"gitId":"Shruthi0310"},"content":"     * @return String representation of archive message.","lastModifiedDate":"2021-09-15"},{"lineNumber":122,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":123,"author":{"gitId":"Shruthi0310"},"content":"    public String showArchiveMessage() {","lastModifiedDate":"2021-09-08"},{"lineNumber":124,"author":{"gitId":"Shruthi0310"},"content":"        String message \u003d \"All tasks have been archived!\";","lastModifiedDate":"2021-09-08"},{"lineNumber":125,"author":{"gitId":"Shruthi0310"},"content":"        return message;","lastModifiedDate":"2021-09-08"},{"lineNumber":126,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":127,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":128,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":129,"author":{"gitId":"Shruthi0310"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":130,"author":{"gitId":"Shruthi0310"},"content":"     * Returns string of error message.","lastModifiedDate":"2021-08-27"},{"lineNumber":131,"author":{"gitId":"Shruthi0310"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":132,"author":{"gitId":"Shruthi0310"},"content":"     * @param message Error message.","lastModifiedDate":"2021-09-15"},{"lineNumber":133,"author":{"gitId":"Shruthi0310"},"content":"     * @return String representation of error.","lastModifiedDate":"2021-09-15"},{"lineNumber":134,"author":{"gitId":"Shruthi0310"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":135,"author":{"gitId":"Shruthi0310"},"content":"    public String showError(String message) {","lastModifiedDate":"2021-09-01"},{"lineNumber":136,"author":{"gitId":"Shruthi0310"},"content":"        return message;","lastModifiedDate":"2021-09-01"},{"lineNumber":137,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":138,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":139,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Shruthi0310":139}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"Shruthi0310"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"Shruthi0310"},"content":"         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"Shruthi0310"},"content":"    \u003cVBox styleClass\u003d\"dialogBox\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"Shruthi0310"},"content":"        \u003cText fx:id\u003d\"dialog\" styleClass\u003d\"box\" text\u003d\"Label\" boundsType\u003d\"LOGICAL_VERTICAL_CENTER\" wrappingWidth\u003d\"272\" textAlignment\u003d\"LEFT\"/\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"Shruthi0310"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"Shruthi0310"},"content":"            \u003cInsets bottom\u003d\"10\" top\u003d\"10\" left\u003d\"10\" right\u003d\"10\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"Shruthi0310"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"Shruthi0310"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"Shruthi0310"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"90.0\" fitWidth\u003d\"90.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"Shruthi0310"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"Shruthi0310"},"content":"        \u003cInsets bottom\u003d\"10\" top\u003d\"10\"/\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"Shruthi0310"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"Shruthi0310"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"Shruthi0310":21}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"Shruthi0310"},"content":"\u003cAnchorPane onMouseEntered\u003d\"#getInitialDialog\" onKeyTyped\u003d\"#getInitialDialog\" stylesheets\u003d\"@styles.css\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\"","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"Shruthi0310"},"content":"            minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"Shruthi0310"},"content":"            xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.main.MainWindow\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"Shruthi0310"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"Shruthi0310"},"content":"        \u003cTextField fx:id\u003d\"userInput\" styleClass\u003d\"text\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"Shruthi0310"},"content":"        \u003cButton fx:id\u003d\"sendButton\" styleClass\u003d\"button\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\"/\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"Shruthi0310"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"Shruthi0310"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"Shruthi0310"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" styleClass\u003d\"root\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"Shruthi0310"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"Shruthi0310"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"Shruthi0310"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"Shruthi0310"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"Shruthi0310":22}},{"path":"src/test/java/duke/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"Shruthi0310"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Shruthi0310"},"content":"public class TaskListTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Shruthi0310"},"content":"    public void addTaskToList_success() {","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"Shruthi0310"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"Shruthi0310"},"content":"        String output \u003d taskList.addTaskToList(new Todo(\"run\"));","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"Shruthi0310"},"content":"        assertEquals(\"added: [T][ ] run\\nNow you have 1 tasks in your list\", output);","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"Shruthi0310"},"content":"        output \u003d taskList.addTaskToList(new Todo(\"do smth\"));","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"Shruthi0310"},"content":"        assertEquals(\"added: [T][ ] do smth\\nNow you have 2 tasks in your list\", output);","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"Shruthi0310"},"content":"        output \u003d taskList.addTaskToList(new Deadline(\"testing 1\",","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"Shruthi0310"},"content":"                LocalDateTime.parse(\"2020-10-10T13:30\")));","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"Shruthi0310"},"content":"        assertEquals(\"added: [D][ ] testing 1 (by: 10 Oct 2020 1:30 PM)\"","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"Shruthi0310"},"content":"                + \"\\nNow you have 3 tasks in your list\", output);","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"Shruthi0310"},"content":"        output \u003d taskList.addTaskToList(new Event(\"testing 2\",","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"Shruthi0310"},"content":"                LocalDateTime.parse(\"2020-10-10T13:30\")));","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"Shruthi0310"},"content":"        assertEquals(\"added: [E][ ] testing 2 (at: 10 Oct 2020 1:30 PM)\"","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"Shruthi0310"},"content":"                + \"\\nNow you have 4 tasks in your list\", output);","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"Shruthi0310"},"content":"    public void deleteTaskFromList_success() {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"Shruthi0310"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"Shruthi0310"},"content":"        list.add(new Todo(\"paint\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"Shruthi0310"},"content":"        list.add(new Event(\"funfair\", LocalDateTime.parse(\"2020-10-10T23:59\")));","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"Shruthi0310"},"content":"        list.add(new Deadline(\"submit quiz\", LocalDateTime.parse(\"2021-08-10T23:59\")));","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"Shruthi0310"},"content":"        TaskList taskList \u003d new TaskList(list);","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"Shruthi0310"},"content":"        assertEquals(\"Noted. I\u0027ve removed this task:\\n[E][ ] funfair (at: 10 Oct 2020 11:59 PM)\"","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"Shruthi0310"},"content":"                + \"\\nNow you have 2 tasks in your list\\n\", taskList.deleteFromList(1));","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"Shruthi0310"},"content":"        assertEquals(\"Noted. I\u0027ve removed this task:\\n[T][ ] paint\"","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"Shruthi0310"},"content":"                + \"\\nNow you have 1 tasks in your list\\n\", taskList.deleteFromList(0));","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"Shruthi0310"},"content":"    public void setTaskAsDone_success() {","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"Shruthi0310"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"Shruthi0310"},"content":"        list.add(new Todo(\"paint\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"Shruthi0310"},"content":"        list.add(new Event(\"funfair\", LocalDateTime.parse(\"2020-10-10T23:59\")));","lastModifiedDate":"2021-09-16"},{"lineNumber":53,"author":{"gitId":"Shruthi0310"},"content":"        list.add(new Deadline(\"submit quiz\", LocalDateTime.parse(\"2021-08-10T23:59\")));","lastModifiedDate":"2021-09-16"},{"lineNumber":54,"author":{"gitId":"Shruthi0310"},"content":"        TaskList taskList \u003d new TaskList(list);","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"Shruthi0310"},"content":"        assertEquals(\"Nice! I\u0027ve marked this task as done:\\n[T][X] paint\",","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"Shruthi0310"},"content":"                taskList.setTaskAsDone(0));","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"Shruthi0310"},"content":"        assertEquals(\"Nice! I\u0027ve marked this task as done:\\n[E][X] funfair (at: 10 Oct 2020 11:59 PM)\",","lastModifiedDate":"2021-09-16"},{"lineNumber":59,"author":{"gitId":"Shruthi0310"},"content":"                taskList.setTaskAsDone(1));","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"Shruthi0310"},"content":"        assertEquals(\"Nice! I\u0027ve marked this task as done:\\n[D][X] submit \"","lastModifiedDate":"2021-09-16"},{"lineNumber":61,"author":{"gitId":"Shruthi0310"},"content":"                        + \"quiz (by: 10 Aug 2021 11:59 PM)\", taskList.setTaskAsDone(2));","lastModifiedDate":"2021-09-16"},{"lineNumber":62,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"Shruthi0310":64}},{"path":"src/test/java/duke/util/DeleteCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package duke.util;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":"import duke.exception.InvalidTaskDeletionException;","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"Shruthi0310"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"Shruthi0310"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"Shruthi0310"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"Shruthi0310"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"Shruthi0310"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"Shruthi0310"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"Shruthi0310"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"Shruthi0310"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"Shruthi0310"},"content":"class DeleteCommandTest {","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"Shruthi0310"},"content":"    public void execute_validDeleteNumber_success() throws DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"Shruthi0310"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"Shruthi0310"},"content":"        list.add(new Todo(\"run\"));","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"Shruthi0310"},"content":"        list.add(new Event(\"funfair\", LocalDateTime.parse(\"2021-10-01T23:59\")));","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"Shruthi0310"},"content":"        list.add(new Deadline(\"quiz\", LocalDateTime.parse(\"2021-10-01T23:59\")));","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"Shruthi0310"},"content":"        TaskList taskList \u003d new TaskList(list);","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"Shruthi0310"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"Shruthi0310"},"content":"        Storage storage \u003d new Storage(\"duke.txt\");","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"Shruthi0310"},"content":"        String input \u003d \"delete 1\";","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"Shruthi0310"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(input.split(\" \"));","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"Shruthi0310"},"content":"        assertEquals(\"Noted. I\u0027ve removed this task:\\n\" + \"[T][ ] run\\n\"","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"Shruthi0310"},"content":"                + \"Now you have 2 tasks in your list\\n\", deleteCommand.execute(taskList, ui, storage));","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"Shruthi0310"},"content":"        input \u003d \"delete 2\";","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"Shruthi0310"},"content":"        deleteCommand \u003d new DeleteCommand(input.split(\" \"));","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"Shruthi0310"},"content":"        assertEquals(\"Noted. I\u0027ve removed this task:\\n\" + \"[D][ ] quiz (by: 01 Oct 2021 11:59 PM)\\n\"","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"Shruthi0310"},"content":"                + \"Now you have 1 tasks in your list\\n\", deleteCommand.execute(taskList, ui, storage));","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"Shruthi0310"},"content":"    public void execute_invalidOrNoDeleteNumber_exceptionThrown() {","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"Shruthi0310"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"Shruthi0310"},"content":"        list.add(new Todo(\"run\"));","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"Shruthi0310"},"content":"        list.add(new Event(\"funfair\", LocalDateTime.parse(\"2021-10-01T23:59\")));","lastModifiedDate":"2021-09-16"},{"lineNumber":50,"author":{"gitId":"Shruthi0310"},"content":"        list.add(new Deadline(\"quiz\", LocalDateTime.parse(\"2021-10-01T23:59\")));","lastModifiedDate":"2021-09-16"},{"lineNumber":51,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":52,"author":{"gitId":"Shruthi0310"},"content":"        TaskList taskList \u003d new TaskList(list);","lastModifiedDate":"2021-09-15"},{"lineNumber":53,"author":{"gitId":"Shruthi0310"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-09-15"},{"lineNumber":54,"author":{"gitId":"Shruthi0310"},"content":"        Storage storage \u003d new Storage(\"duke.txt\");","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"Shruthi0310"},"content":"        Throwable exception;","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":57,"author":{"gitId":"Shruthi0310"},"content":"        String input \u003d \"delete 0\";","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"Shruthi0310"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(input.split(\" \"));","lastModifiedDate":"2021-09-15"},{"lineNumber":59,"author":{"gitId":"Shruthi0310"},"content":"        exception \u003d assertThrows(InvalidTaskDeletionException.class,","lastModifiedDate":"2021-09-15"},{"lineNumber":60,"author":{"gitId":"Shruthi0310"},"content":"                () -\u003e deleteCommand.execute(taskList, ui, storage));","lastModifiedDate":"2021-09-15"},{"lineNumber":61,"author":{"gitId":"Shruthi0310"},"content":"        assertEquals(\"OOPS! You are trying to delete a non-existent task!\",","lastModifiedDate":"2021-09-15"},{"lineNumber":62,"author":{"gitId":"Shruthi0310"},"content":"                exception.getMessage());","lastModifiedDate":"2021-09-15"},{"lineNumber":63,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":64,"author":{"gitId":"Shruthi0310"},"content":"        input \u003d \"delete\";","lastModifiedDate":"2021-09-15"},{"lineNumber":65,"author":{"gitId":"Shruthi0310"},"content":"        DeleteCommand deleteCommand1 \u003d new DeleteCommand(input.split(\" \"));","lastModifiedDate":"2021-09-15"},{"lineNumber":66,"author":{"gitId":"Shruthi0310"},"content":"        exception \u003d assertThrows(DukeException.class,","lastModifiedDate":"2021-09-15"},{"lineNumber":67,"author":{"gitId":"Shruthi0310"},"content":"                () -\u003e deleteCommand1.execute(taskList, ui, storage));","lastModifiedDate":"2021-09-15"},{"lineNumber":68,"author":{"gitId":"Shruthi0310"},"content":"        assertEquals(\"No task number entered!\",","lastModifiedDate":"2021-09-15"},{"lineNumber":69,"author":{"gitId":"Shruthi0310"},"content":"                exception.getMessage());","lastModifiedDate":"2021-09-15"},{"lineNumber":70,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":71,"author":{"gitId":"Shruthi0310"},"content":"        input \u003d \"delete 10\";","lastModifiedDate":"2021-09-15"},{"lineNumber":72,"author":{"gitId":"Shruthi0310"},"content":"        DeleteCommand deleteCommand2 \u003d new DeleteCommand(input.split(\" \"));","lastModifiedDate":"2021-09-15"},{"lineNumber":73,"author":{"gitId":"Shruthi0310"},"content":"        exception \u003d assertThrows(InvalidTaskDeletionException.class,","lastModifiedDate":"2021-09-15"},{"lineNumber":74,"author":{"gitId":"Shruthi0310"},"content":"                () -\u003e deleteCommand2.execute(taskList, ui, storage));","lastModifiedDate":"2021-09-15"},{"lineNumber":75,"author":{"gitId":"Shruthi0310"},"content":"        assertEquals(\"OOPS! You are trying to delete a non-existent task!\",","lastModifiedDate":"2021-09-15"},{"lineNumber":76,"author":{"gitId":"Shruthi0310"},"content":"                exception.getMessage());","lastModifiedDate":"2021-09-15"},{"lineNumber":77,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":78,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":79,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"Shruthi0310":79}},{"path":"src/test/java/duke/util/FindCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package duke.util;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"Shruthi0310"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"Shruthi0310"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"Shruthi0310"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"Shruthi0310"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"Shruthi0310"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"Shruthi0310"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"Shruthi0310"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"Shruthi0310"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"Shruthi0310"},"content":"class FindCommandTest {","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"Shruthi0310"},"content":"    public void execute_success() throws DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"Shruthi0310"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"Shruthi0310"},"content":"        list.add(new Todo(\"run\"));","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"Shruthi0310"},"content":"        list.add(new Event(\"cs quiz\", LocalDateTime.parse(\"2021-10-01T23:59\")));","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"Shruthi0310"},"content":"        list.add(new Deadline(\"finish quiz 4\", LocalDateTime.parse(\"2021-10-01T23:59\")));","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"Shruthi0310"},"content":"        list.add(new Todo(\"sleep\"));","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"Shruthi0310"},"content":"        list.add(new Todo(\"prepare for quiz\"));","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"Shruthi0310"},"content":"        TaskList taskList \u003d new TaskList(list);","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"Shruthi0310"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"Shruthi0310"},"content":"        Storage storage \u003d new Storage(\"duke.txt\");","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"Shruthi0310"},"content":"        String input \u003d \"find quiz\";","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"Shruthi0310"},"content":"        FindCommand findCommand \u003d new FindCommand(input.split(\" \"));","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"Shruthi0310"},"content":"        assertEquals(\"Here are the matching tasks in your list:\\n\"","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"Shruthi0310"},"content":"                + \"1.[E][ ] cs quiz (at: 01 Oct 2021 11:59 PM)\\n\"","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"Shruthi0310"},"content":"                + \"2.[D][ ] finish quiz 4 (by: 01 Oct 2021 11:59 PM)\\n\"","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"Shruthi0310"},"content":"                + \"3.[T][ ] prepare for quiz\\n\", findCommand.execute(taskList, ui, storage));","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"Shruthi0310"},"content":"        input \u003d \"find sleep\";","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"Shruthi0310"},"content":"        findCommand \u003d new FindCommand(input.split(\" \"));","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"Shruthi0310"},"content":"        assertEquals(\"Here are the matching tasks in your list:\\n\"","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"Shruthi0310"},"content":"                + \"1.[T][ ] sleep\\n\", findCommand.execute(taskList, ui, storage));","lastModifiedDate":"2021-09-16"},{"lineNumber":48,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"Shruthi0310"},"content":"        input \u003d \"find random\";","lastModifiedDate":"2021-09-15"},{"lineNumber":50,"author":{"gitId":"Shruthi0310"},"content":"        findCommand \u003d new FindCommand(input.split(\" \"));","lastModifiedDate":"2021-09-15"},{"lineNumber":51,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":52,"author":{"gitId":"Shruthi0310"},"content":"        assertEquals(\"Here are the matching tasks in your list:\\n\"","lastModifiedDate":"2021-09-15"},{"lineNumber":53,"author":{"gitId":"Shruthi0310"},"content":"                + \"no tasks in list yet...\", findCommand.execute(taskList, ui, storage));","lastModifiedDate":"2021-09-15"},{"lineNumber":54,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":57,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"Shruthi0310"},"content":"    public void execute_noKeyword_exceptionThrown() {","lastModifiedDate":"2021-09-15"},{"lineNumber":59,"author":{"gitId":"Shruthi0310"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-15"},{"lineNumber":60,"author":{"gitId":"Shruthi0310"},"content":"        list.add(new Todo(\"run\"));","lastModifiedDate":"2021-09-15"},{"lineNumber":61,"author":{"gitId":"Shruthi0310"},"content":"        list.add(new Event(\"cs quiz\", LocalDateTime.parse(\"2021-10-01T23:59\")));","lastModifiedDate":"2021-09-16"},{"lineNumber":62,"author":{"gitId":"Shruthi0310"},"content":"        list.add(new Deadline(\"finish quiz 4\", LocalDateTime.parse(\"2021-10-01T23:59\")));","lastModifiedDate":"2021-09-16"},{"lineNumber":63,"author":{"gitId":"Shruthi0310"},"content":"        list.add(new Todo(\"sleep\"));","lastModifiedDate":"2021-09-15"},{"lineNumber":64,"author":{"gitId":"Shruthi0310"},"content":"        list.add(new Todo(\"prepare for quiz\"));","lastModifiedDate":"2021-09-15"},{"lineNumber":65,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":66,"author":{"gitId":"Shruthi0310"},"content":"        TaskList taskList \u003d new TaskList(list);","lastModifiedDate":"2021-09-15"},{"lineNumber":67,"author":{"gitId":"Shruthi0310"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-09-15"},{"lineNumber":68,"author":{"gitId":"Shruthi0310"},"content":"        Storage storage \u003d new Storage(\"duke.txt\");","lastModifiedDate":"2021-09-15"},{"lineNumber":69,"author":{"gitId":"Shruthi0310"},"content":"        Throwable exception;","lastModifiedDate":"2021-09-15"},{"lineNumber":70,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":71,"author":{"gitId":"Shruthi0310"},"content":"        String input \u003d \"find\";","lastModifiedDate":"2021-09-15"},{"lineNumber":72,"author":{"gitId":"Shruthi0310"},"content":"        FindCommand findCommand \u003d new FindCommand(input.split(\" \"));","lastModifiedDate":"2021-09-15"},{"lineNumber":73,"author":{"gitId":"Shruthi0310"},"content":"        exception \u003d assertThrows(DukeException.class,","lastModifiedDate":"2021-09-15"},{"lineNumber":74,"author":{"gitId":"Shruthi0310"},"content":"                () -\u003e findCommand.execute(taskList, ui, storage));","lastModifiedDate":"2021-09-15"},{"lineNumber":75,"author":{"gitId":"Shruthi0310"},"content":"        assertEquals(\"Please enter a keyword to find matching tasks...\",","lastModifiedDate":"2021-09-15"},{"lineNumber":76,"author":{"gitId":"Shruthi0310"},"content":"                exception.getMessage());","lastModifiedDate":"2021-09-15"},{"lineNumber":77,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":78,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":79,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":80,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"Shruthi0310":80}},{"path":"src/test/java/duke/util/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"package duke.util;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":"import duke.exception.NoDescriptionAndTimeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Shruthi0310"},"content":"import duke.exception.NoDescriptionException;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"Shruthi0310"},"content":"import duke.exception.NoTimeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"Shruthi0310"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Shruthi0310"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"Shruthi0310"},"content":"    public void parseDescriptionAndTime_success() throws DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"Shruthi0310"},"content":"        String[] inputs \u003d {\"deadline test /by 22 Jun 2021\", \"deadline       test /by 22 Jun 2021\",","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"Shruthi0310"},"content":"                \"deadline test /by           22 Jun 2021\", \"deadline   test    /by       22 Jun 2021\"};","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"Shruthi0310"},"content":"        for (int i \u003d 0; i \u003c inputs.length; i++) {","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"Shruthi0310"},"content":"            String[] userInput \u003d inputs[i].split(\" \", 2);","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"Shruthi0310"},"content":"            String[] parseInput \u003d Parser.parseDescriptionAndTime(userInput, \"/by\", \"deadline\");","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"Shruthi0310"},"content":"            assertEquals(\"test\", parseInput[0].trim());","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"Shruthi0310"},"content":"            assertEquals(\"22 Jun 2021\", parseInput[1].trim());","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"Shruthi0310"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"Shruthi0310"},"content":"        String[] inputs2 \u003d {\"event test /at 22 Jun 2021\", \"event       test /at 22 Jun 2021\",","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"Shruthi0310"},"content":"                \"event test /at           22 Jun 2021\", \"event   test    /at       22 Jun 2021\"};","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"Shruthi0310"},"content":"        for (int i \u003d 0; i \u003c inputs2.length; i++) {","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"Shruthi0310"},"content":"            String[] userInput \u003d inputs2[i].split(\" \", 2);","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"Shruthi0310"},"content":"            String[] parseInput \u003d Parser.parseDescriptionAndTime(userInput, \"/at\", \"event\");","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"Shruthi0310"},"content":"            assertEquals(\"test\", parseInput[0].trim());","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"Shruthi0310"},"content":"            assertEquals(\"22 Jun 2021\", parseInput[1].trim());","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"Shruthi0310"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"Shruthi0310"},"content":"    public void parseDescriptionAndTime_noTime_exceptionThrown() {","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"Shruthi0310"},"content":"        Throwable exception;","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"Shruthi0310"},"content":"        String input \u003d \"deadline test\";","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"Shruthi0310"},"content":"        String[] userInput \u003d input.split(\" \", 2);","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"Shruthi0310"},"content":"        exception \u003d assertThrows(NoTimeException.class,","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"Shruthi0310"},"content":"                () -\u003e Parser.parseDescriptionAndTime(userInput, \"/by\", \"deadline\"));","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"Shruthi0310"},"content":"        assertEquals(\"OOPS! The time of deadline cannot be empty.\", exception.getMessage());","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"Shruthi0310"},"content":"        input \u003d \"deadline test /by\";","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"Shruthi0310"},"content":"        String[] userInput1 \u003d input.split(\" \", 2);","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"Shruthi0310"},"content":"        exception \u003d assertThrows(NoTimeException.class,","lastModifiedDate":"2021-09-15"},{"lineNumber":50,"author":{"gitId":"Shruthi0310"},"content":"                () -\u003e Parser.parseDescriptionAndTime(userInput1, \"/by\", \"deadline\"));","lastModifiedDate":"2021-09-15"},{"lineNumber":51,"author":{"gitId":"Shruthi0310"},"content":"        assertEquals(\"OOPS! The time of deadline cannot be empty.\", exception.getMessage());","lastModifiedDate":"2021-09-15"},{"lineNumber":52,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":53,"author":{"gitId":"Shruthi0310"},"content":"        input \u003d \"event test\";","lastModifiedDate":"2021-09-15"},{"lineNumber":54,"author":{"gitId":"Shruthi0310"},"content":"        String[] userInput2 \u003d input.split(\" \", 2);","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"Shruthi0310"},"content":"        exception \u003d assertThrows(NoTimeException.class,","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"Shruthi0310"},"content":"                () -\u003e Parser.parseDescriptionAndTime(userInput2, \"/at\", \"event\"));","lastModifiedDate":"2021-09-15"},{"lineNumber":57,"author":{"gitId":"Shruthi0310"},"content":"        assertEquals(\"OOPS! The time of event cannot be empty.\", exception.getMessage());","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":59,"author":{"gitId":"Shruthi0310"},"content":"        input \u003d \"event test /at\";","lastModifiedDate":"2021-09-15"},{"lineNumber":60,"author":{"gitId":"Shruthi0310"},"content":"        String[] userInput3 \u003d input.split(\" \", 2);","lastModifiedDate":"2021-09-15"},{"lineNumber":61,"author":{"gitId":"Shruthi0310"},"content":"        exception \u003d assertThrows(NoTimeException.class,","lastModifiedDate":"2021-09-15"},{"lineNumber":62,"author":{"gitId":"Shruthi0310"},"content":"                () -\u003e Parser.parseDescriptionAndTime(userInput3, \"/at\", \"event\"));","lastModifiedDate":"2021-09-15"},{"lineNumber":63,"author":{"gitId":"Shruthi0310"},"content":"        assertEquals(\"OOPS! The time of event cannot be empty.\", exception.getMessage());","lastModifiedDate":"2021-09-15"},{"lineNumber":64,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":65,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":66,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-09-15"},{"lineNumber":67,"author":{"gitId":"Shruthi0310"},"content":"    public void parseDescriptionAndTime_noDescription_exceptionThrown() {","lastModifiedDate":"2021-09-15"},{"lineNumber":68,"author":{"gitId":"Shruthi0310"},"content":"        Throwable exception;","lastModifiedDate":"2021-09-15"},{"lineNumber":69,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":70,"author":{"gitId":"Shruthi0310"},"content":"        String input \u003d \"deadline /by 20 Nov 2021\";","lastModifiedDate":"2021-09-15"},{"lineNumber":71,"author":{"gitId":"Shruthi0310"},"content":"        String[] userInput \u003d input.split(\" \", 2);","lastModifiedDate":"2021-09-15"},{"lineNumber":72,"author":{"gitId":"Shruthi0310"},"content":"        exception \u003d assertThrows(NoDescriptionException.class,","lastModifiedDate":"2021-09-15"},{"lineNumber":73,"author":{"gitId":"Shruthi0310"},"content":"                () -\u003e Parser.parseDescriptionAndTime(userInput, \"/by\", \"deadline\"));","lastModifiedDate":"2021-09-15"},{"lineNumber":74,"author":{"gitId":"Shruthi0310"},"content":"        assertEquals(\"OOPS! The description of deadline cannot be empty.\", exception.getMessage());","lastModifiedDate":"2021-09-15"},{"lineNumber":75,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":76,"author":{"gitId":"Shruthi0310"},"content":"        input \u003d \"event /at 20 Nov 2021\";","lastModifiedDate":"2021-09-15"},{"lineNumber":77,"author":{"gitId":"Shruthi0310"},"content":"        String[] userInput1 \u003d input.split(\" \", 2);","lastModifiedDate":"2021-09-15"},{"lineNumber":78,"author":{"gitId":"Shruthi0310"},"content":"        exception \u003d assertThrows(NoDescriptionException.class,","lastModifiedDate":"2021-09-15"},{"lineNumber":79,"author":{"gitId":"Shruthi0310"},"content":"                () -\u003e Parser.parseDescriptionAndTime(userInput1, \"/at\", \"event\"));","lastModifiedDate":"2021-09-15"},{"lineNumber":80,"author":{"gitId":"Shruthi0310"},"content":"        assertEquals(\"OOPS! The description of event cannot be empty.\", exception.getMessage());","lastModifiedDate":"2021-09-15"},{"lineNumber":81,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":82,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"Shruthi0310"},"content":"    @Test","lastModifiedDate":"2021-09-15"},{"lineNumber":84,"author":{"gitId":"Shruthi0310"},"content":"    public void parseDescriptionAndTime_noDescriptionAndTime_exceptionThrown() {","lastModifiedDate":"2021-09-15"},{"lineNumber":85,"author":{"gitId":"Shruthi0310"},"content":"        Throwable exception;","lastModifiedDate":"2021-09-15"},{"lineNumber":86,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":87,"author":{"gitId":"Shruthi0310"},"content":"        String input \u003d \"deadline /by\";","lastModifiedDate":"2021-09-15"},{"lineNumber":88,"author":{"gitId":"Shruthi0310"},"content":"        String[] userInput \u003d input.split(\" \", 2);","lastModifiedDate":"2021-09-15"},{"lineNumber":89,"author":{"gitId":"Shruthi0310"},"content":"        exception \u003d assertThrows(NoDescriptionAndTimeException.class,","lastModifiedDate":"2021-09-15"},{"lineNumber":90,"author":{"gitId":"Shruthi0310"},"content":"                () -\u003e Parser.parseDescriptionAndTime(userInput, \"/by\", \"deadline\"));","lastModifiedDate":"2021-09-15"},{"lineNumber":91,"author":{"gitId":"Shruthi0310"},"content":"        assertEquals(\"OOPS! The description \u0026 time of deadline cannot be empty.\", exception.getMessage());","lastModifiedDate":"2021-09-15"},{"lineNumber":92,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":93,"author":{"gitId":"Shruthi0310"},"content":"        input \u003d \"event /at\";","lastModifiedDate":"2021-09-15"},{"lineNumber":94,"author":{"gitId":"Shruthi0310"},"content":"        String[] userInput1 \u003d input.split(\" \", 2);","lastModifiedDate":"2021-09-15"},{"lineNumber":95,"author":{"gitId":"Shruthi0310"},"content":"        exception \u003d assertThrows(NoDescriptionAndTimeException.class,","lastModifiedDate":"2021-09-15"},{"lineNumber":96,"author":{"gitId":"Shruthi0310"},"content":"                () -\u003e Parser.parseDescriptionAndTime(userInput1, \"/at\", \"event\"));","lastModifiedDate":"2021-09-15"},{"lineNumber":97,"author":{"gitId":"Shruthi0310"},"content":"        assertEquals(\"OOPS! The description \u0026 time of event cannot be empty.\", exception.getMessage());","lastModifiedDate":"2021-09-15"},{"lineNumber":98,"author":{"gitId":"Shruthi0310"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":99,"author":{"gitId":"Shruthi0310"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":100,"author":{"gitId":"Shruthi0310"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"Shruthi0310":100}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Shruthi0310"},"content":"todo borrow book","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"Shruthi0310"},"content":"event Funfair /at Monday 6pm","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"Shruthi0310"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"Shruthi0310"},"content":"deadline CS quiz /by Fri","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"Shruthi0310"},"content":"todo run","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"Shruthi0310"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"Shruthi0310"},"content":"done 2","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"Shruthi0310"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"Shruthi0310"},"content":"deadline","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"Shruthi0310"},"content":"deadline task","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"Shruthi0310"},"content":"deadline /by tmr","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"Shruthi0310"},"content":"todo","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"Shruthi0310"},"content":"event","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"Shruthi0310"},"content":"event task","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"Shruthi0310"},"content":"event /at tmr","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"Shruthi0310"},"content":"delete 2","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"Shruthi0310"},"content":"delete 4","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"Shruthi0310"},"content":"bye","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"Shruthi0310":18}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"Shruthi0310"},"content":"javac  -cp ..\\src\\main\\java  -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\exception\\*.java ..\\src\\main\\java\\duke\\task\\*.java ..\\src\\main\\java\\duke\\util\\*.java ..\\src\\main\\java\\duke\\main\\*.java","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Shruthi0310":1,"-":20}}]
