[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rohit0718"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"rohit0718"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"rohit0718"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"rohit0718"},"content":"    private final LocalDateTime dueDate;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"rohit0718"},"content":"    Deadline(String name, String dueDate) throws DateTimeParseException {","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"rohit0718"},"content":"        super(name);","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"rohit0718"},"content":"        this.dueDate \u003d Utility.parseDate(dueDate);","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"rohit0718"},"content":"    Deadline(String name, String dueDate, boolean isComplete) {","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"rohit0718"},"content":"        super(name, isComplete);","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"rohit0718"},"content":"        this.dueDate \u003d Utility.parseDate(dueDate);","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"rohit0718"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"rohit0718"},"content":"    public String toFile() {","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"rohit0718"},"content":"        return String.format(\"D | %s | %s\", super.toFile(), Utility.dateToFile(dueDate));","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"rohit0718"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"rohit0718"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"rohit0718"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), Utility.dateToString(dueDate));","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"rohit0718"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"rohit0718":26}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rohit0718"},"content":"import java.util.Map;","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"rohit0718"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-13"},{"lineNumber":3,"author":{"gitId":"rohit0718"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"rohit0718"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"rohit0718"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"rohit0718"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"rohit0718"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":9,"author":{"gitId":"rohit0718"},"content":"public class Duke implements Runnable {","lastModifiedDate":"2021-08-13"},{"lineNumber":10,"author":{"gitId":"rohit0718"},"content":"    private static final String ERR_CREATE_FILE \u003d \"Could not create empty file.\";","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"rohit0718"},"content":"    private static final String ERR_UNEXPECTED \u003d \"Unexpected error occured.\";","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"rohit0718"},"content":"    private final String BORDER \u003d \"---------------------------------------------------\";","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"rohit0718"},"content":"    private final String GREETING \u003d \"Hello! I\u0027m Duke, what can I do for you?\";","lastModifiedDate":"2021-08-13"},{"lineNumber":14,"author":{"gitId":"rohit0718"},"content":"    private final String FAREWELL \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-08-13"},{"lineNumber":15,"author":{"gitId":"rohit0718"},"content":"    private final String MSG_LISTS \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"rohit0718"},"content":"    private final String MSG_TASK_COMPLETE \u003d \"Nice! I\u0027ve marked this task as done:\\n%s\";","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"rohit0718"},"content":"    private final String MSG_TASK_ADDED \u003d \"Got it. I\u0027ve added this task:\";","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"rohit0718"},"content":"    private final String MSG_TASK_DELETED \u003d \"Noted. I\u0027ve removed this task:\";","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"rohit0718"},"content":"    private final String MSG_TASK_COUNT \u003d \"Now you have %d tasks in the list.\";","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"rohit0718"},"content":"    private final String ERR_OUT_OF_BOUNDS \u003d \"Please enter a number between 1 and %d!\";","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"rohit0718"},"content":"    private final String ERR_TASK_COMPLETE \u003d \"Task %s is already complete!\";","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"rohit0718"},"content":"    private final String ERR_NOT_FOUND \u003d \"Sorry, I do not recognize that command.\";","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"rohit0718"},"content":"    private final String ERR_NO_TASKS \u003d \"No tasks available!\";","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"rohit0718"},"content":"    private final String ERR_TODO_FORMAT \u003d \"Error in command usage. Usage: todo \u003cname\u003e\";","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"rohit0718"},"content":"    private final String ERR_DEADLINE_FORMAT \u003d \"Error in command usage. Usage: deadline \u003cname\u003e /by dd/MM/yyyy HHmm\";","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"rohit0718"},"content":"    private final String ERR_EVENT_FORMAT \u003d \"Error in command usage. Usage: event \u003cname\u003e /at dd/MM/yyyy HHmm\";","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"rohit0718"},"content":"    private final String ERR_DONE_FORMAT \u003d \"Please provide a valid number! Usage: done \u003cnum\u003e\";","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"rohit0718"},"content":"    private final String ERR_DELETE_FORMAT \u003d \"Please provide a valid number! Usage: delete \u003cnum\u003e\";","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"rohit0718"},"content":"    private final String ERR_MAX_TASKS \u003d \"Sorry! You have reached maximum Task capacity.\";","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"rohit0718"},"content":"    private final int MAX_TASKS \u003d 100;","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"rohit0718"},"content":"    private final Map\u003cString, Consumer\u003cString\u003e\u003e commandsMap \u003d Map.of(","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"rohit0718"},"content":"        \"list\", (args) -\u003e listTasks(),","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"rohit0718"},"content":"        \"done\", (args) -\u003e completeTask(args),","lastModifiedDate":"2021-08-14"},{"lineNumber":34,"author":{"gitId":"rohit0718"},"content":"        \"todo\", (args) -\u003e addTodo(args),","lastModifiedDate":"2021-08-14"},{"lineNumber":35,"author":{"gitId":"rohit0718"},"content":"        \"deadline\", (args) -\u003e addDeadline(args),","lastModifiedDate":"2021-08-14"},{"lineNumber":36,"author":{"gitId":"rohit0718"},"content":"        \"event\", (args) -\u003e addEvent(args),","lastModifiedDate":"2021-08-15"},{"lineNumber":37,"author":{"gitId":"rohit0718"},"content":"        \"delete\", (args) -\u003e deleteTask(args)","lastModifiedDate":"2021-08-15"},{"lineNumber":38,"author":{"gitId":"rohit0718"},"content":"    );","lastModifiedDate":"2021-08-14"},{"lineNumber":39,"author":{"gitId":"rohit0718"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"rohit0718"},"content":"    public Duke() throws FileNotFoundException, IOException {","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"rohit0718"},"content":"        this.tasks \u003d TaskList.init();","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":45,"author":{"gitId":"rohit0718"},"content":"    private void printLatestTask() {","lastModifiedDate":"2021-08-14"},{"lineNumber":46,"author":{"gitId":"rohit0718"},"content":"        printDuke(","lastModifiedDate":"2021-08-14"},{"lineNumber":47,"author":{"gitId":"rohit0718"},"content":"            MSG_TASK_ADDED + \"\\n\"","lastModifiedDate":"2021-08-14"},{"lineNumber":48,"author":{"gitId":"rohit0718"},"content":"            + \"   \" + tasks.get(tasks.size() - 1).toString() + \"\\n\"","lastModifiedDate":"2021-08-14"},{"lineNumber":49,"author":{"gitId":"rohit0718"},"content":"            + String.format(MSG_TASK_COUNT, tasks.size())","lastModifiedDate":"2021-08-14"},{"lineNumber":50,"author":{"gitId":"rohit0718"},"content":"        );","lastModifiedDate":"2021-08-14"},{"lineNumber":51,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":52,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":53,"author":{"gitId":"rohit0718"},"content":"    private void addTodo(String args) {","lastModifiedDate":"2021-08-14"},{"lineNumber":54,"author":{"gitId":"rohit0718"},"content":"        if (tasks.size() \u003e MAX_TASKS) {","lastModifiedDate":"2021-08-14"},{"lineNumber":55,"author":{"gitId":"rohit0718"},"content":"            printDuke(ERR_MAX_TASKS);","lastModifiedDate":"2021-08-14"},{"lineNumber":56,"author":{"gitId":"rohit0718"},"content":"            return;","lastModifiedDate":"2021-08-14"},{"lineNumber":57,"author":{"gitId":"rohit0718"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":58,"author":{"gitId":"rohit0718"},"content":"        if (args.equals(\"\")) {","lastModifiedDate":"2021-08-14"},{"lineNumber":59,"author":{"gitId":"rohit0718"},"content":"            printDuke(ERR_TODO_FORMAT);","lastModifiedDate":"2021-08-14"},{"lineNumber":60,"author":{"gitId":"rohit0718"},"content":"            return;","lastModifiedDate":"2021-08-14"},{"lineNumber":61,"author":{"gitId":"rohit0718"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":62,"author":{"gitId":"rohit0718"},"content":"        tasks.add(new Todo(args));","lastModifiedDate":"2021-08-14"},{"lineNumber":63,"author":{"gitId":"rohit0718"},"content":"        printLatestTask();","lastModifiedDate":"2021-08-14"},{"lineNumber":64,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":65,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":66,"author":{"gitId":"rohit0718"},"content":"    private void addDeadline(String args) {","lastModifiedDate":"2021-08-14"},{"lineNumber":67,"author":{"gitId":"rohit0718"},"content":"        if (!args.contains(\" /by \")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"rohit0718"},"content":"            printDuke(ERR_DEADLINE_FORMAT);","lastModifiedDate":"2021-08-14"},{"lineNumber":69,"author":{"gitId":"rohit0718"},"content":"            return;","lastModifiedDate":"2021-08-14"},{"lineNumber":70,"author":{"gitId":"rohit0718"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":71,"author":{"gitId":"rohit0718"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"rohit0718"},"content":"            String[] tmp \u003d args.split(\" /by \", 2);","lastModifiedDate":"2021-08-14"},{"lineNumber":73,"author":{"gitId":"rohit0718"},"content":"            tasks.add(new Deadline(tmp[0], tmp[1]));","lastModifiedDate":"2021-08-14"},{"lineNumber":74,"author":{"gitId":"rohit0718"},"content":"            printLatestTask();","lastModifiedDate":"2021-08-14"},{"lineNumber":75,"author":{"gitId":"rohit0718"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":76,"author":{"gitId":"rohit0718"},"content":"            printDuke(ERR_DEADLINE_FORMAT);","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"rohit0718"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":78,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":79,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":80,"author":{"gitId":"rohit0718"},"content":"    private void addEvent(String args) {","lastModifiedDate":"2021-08-14"},{"lineNumber":81,"author":{"gitId":"rohit0718"},"content":"        if (!args.contains(\" /at \")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":82,"author":{"gitId":"rohit0718"},"content":"            printDuke(ERR_EVENT_FORMAT);","lastModifiedDate":"2021-08-14"},{"lineNumber":83,"author":{"gitId":"rohit0718"},"content":"            return;","lastModifiedDate":"2021-08-14"},{"lineNumber":84,"author":{"gitId":"rohit0718"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":85,"author":{"gitId":"rohit0718"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":86,"author":{"gitId":"rohit0718"},"content":"            String[] tmp \u003d args.split(\" /at \", 2);","lastModifiedDate":"2021-08-14"},{"lineNumber":87,"author":{"gitId":"rohit0718"},"content":"            tasks.add(new Event(tmp[0], tmp[1]));","lastModifiedDate":"2021-08-14"},{"lineNumber":88,"author":{"gitId":"rohit0718"},"content":"            printLatestTask();","lastModifiedDate":"2021-08-14"},{"lineNumber":89,"author":{"gitId":"rohit0718"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":90,"author":{"gitId":"rohit0718"},"content":"            printDuke(ERR_EVENT_FORMAT);","lastModifiedDate":"2021-08-21"},{"lineNumber":91,"author":{"gitId":"rohit0718"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":92,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":93,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":94,"author":{"gitId":"rohit0718"},"content":"    private void listTasks() {","lastModifiedDate":"2021-08-14"},{"lineNumber":95,"author":{"gitId":"rohit0718"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-15"},{"lineNumber":96,"author":{"gitId":"rohit0718"},"content":"            printDuke(ERR_NO_TASKS);","lastModifiedDate":"2021-08-15"},{"lineNumber":97,"author":{"gitId":"rohit0718"},"content":"            return;","lastModifiedDate":"2021-08-15"},{"lineNumber":98,"author":{"gitId":"rohit0718"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":99,"author":{"gitId":"rohit0718"},"content":"        printDuke(MSG_LISTS + \"\\n\"","lastModifiedDate":"2021-08-14"},{"lineNumber":100,"author":{"gitId":"rohit0718"},"content":"            + String.join(\"\\n\", IntStream.range(0, tasks.size())","lastModifiedDate":"2021-08-14"},{"lineNumber":101,"author":{"gitId":"rohit0718"},"content":"                .mapToObj(i -\u003e String.format(\"%d.%s\", i + 1, tasks.get(i)))","lastModifiedDate":"2021-08-14"},{"lineNumber":102,"author":{"gitId":"rohit0718"},"content":"                .toArray(String[]::new)));","lastModifiedDate":"2021-08-14"},{"lineNumber":103,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":104,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":105,"author":{"gitId":"rohit0718"},"content":"    private void completeTask(String args) {","lastModifiedDate":"2021-08-14"},{"lineNumber":106,"author":{"gitId":"rohit0718"},"content":"        try {","lastModifiedDate":"2021-08-14"},{"lineNumber":107,"author":{"gitId":"rohit0718"},"content":"            int idx \u003d Integer.parseInt(args);","lastModifiedDate":"2021-08-14"},{"lineNumber":108,"author":{"gitId":"rohit0718"},"content":"            if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-14"},{"lineNumber":109,"author":{"gitId":"rohit0718"},"content":"                printDuke(ERR_NO_TASKS);","lastModifiedDate":"2021-08-14"},{"lineNumber":110,"author":{"gitId":"rohit0718"},"content":"                return;","lastModifiedDate":"2021-08-14"},{"lineNumber":111,"author":{"gitId":"rohit0718"},"content":"            }","lastModifiedDate":"2021-08-14"},{"lineNumber":112,"author":{"gitId":"rohit0718"},"content":"            if (idx \u003c 1 || idx \u003e tasks.size()) {","lastModifiedDate":"2021-08-14"},{"lineNumber":113,"author":{"gitId":"rohit0718"},"content":"                printDuke(String.format(ERR_OUT_OF_BOUNDS, tasks.size()));","lastModifiedDate":"2021-08-14"},{"lineNumber":114,"author":{"gitId":"rohit0718"},"content":"                return;","lastModifiedDate":"2021-08-14"},{"lineNumber":115,"author":{"gitId":"rohit0718"},"content":"            }","lastModifiedDate":"2021-08-14"},{"lineNumber":116,"author":{"gitId":"rohit0718"},"content":"            if (tasks.get(idx - 1).isComplete()) {","lastModifiedDate":"2021-08-14"},{"lineNumber":117,"author":{"gitId":"rohit0718"},"content":"                printDuke(String.format(ERR_TASK_COMPLETE, tasks.get(idx - 1).getName()));","lastModifiedDate":"2021-08-14"},{"lineNumber":118,"author":{"gitId":"rohit0718"},"content":"                return;","lastModifiedDate":"2021-08-14"},{"lineNumber":119,"author":{"gitId":"rohit0718"},"content":"            }","lastModifiedDate":"2021-08-14"},{"lineNumber":120,"author":{"gitId":"rohit0718"},"content":"            tasks.markComplete(idx);","lastModifiedDate":"2021-08-21"},{"lineNumber":121,"author":{"gitId":"rohit0718"},"content":"            printDuke(String.format(","lastModifiedDate":"2021-08-14"},{"lineNumber":122,"author":{"gitId":"rohit0718"},"content":"                MSG_TASK_COMPLETE,","lastModifiedDate":"2021-08-14"},{"lineNumber":123,"author":{"gitId":"rohit0718"},"content":"                String.format(\"   %s\", tasks.get(idx - 1))));","lastModifiedDate":"2021-08-14"},{"lineNumber":124,"author":{"gitId":"rohit0718"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-14"},{"lineNumber":125,"author":{"gitId":"rohit0718"},"content":"            printDuke(ERR_DONE_FORMAT);","lastModifiedDate":"2021-08-15"},{"lineNumber":126,"author":{"gitId":"rohit0718"},"content":"            return;","lastModifiedDate":"2021-08-15"},{"lineNumber":127,"author":{"gitId":"rohit0718"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":128,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":129,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":130,"author":{"gitId":"rohit0718"},"content":"    private void deleteTask(String args) {","lastModifiedDate":"2021-08-15"},{"lineNumber":131,"author":{"gitId":"rohit0718"},"content":"        try {","lastModifiedDate":"2021-08-15"},{"lineNumber":132,"author":{"gitId":"rohit0718"},"content":"            int idx \u003d Integer.parseInt(args);","lastModifiedDate":"2021-08-15"},{"lineNumber":133,"author":{"gitId":"rohit0718"},"content":"            if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-15"},{"lineNumber":134,"author":{"gitId":"rohit0718"},"content":"                printDuke(ERR_NO_TASKS);","lastModifiedDate":"2021-08-15"},{"lineNumber":135,"author":{"gitId":"rohit0718"},"content":"                return;","lastModifiedDate":"2021-08-15"},{"lineNumber":136,"author":{"gitId":"rohit0718"},"content":"            }","lastModifiedDate":"2021-08-15"},{"lineNumber":137,"author":{"gitId":"rohit0718"},"content":"            if (idx \u003c 1 || idx \u003e tasks.size()) {","lastModifiedDate":"2021-08-15"},{"lineNumber":138,"author":{"gitId":"rohit0718"},"content":"                printDuke(String.format(ERR_OUT_OF_BOUNDS, tasks.size()));","lastModifiedDate":"2021-08-15"},{"lineNumber":139,"author":{"gitId":"rohit0718"},"content":"                return;","lastModifiedDate":"2021-08-15"},{"lineNumber":140,"author":{"gitId":"rohit0718"},"content":"            }","lastModifiedDate":"2021-08-15"},{"lineNumber":141,"author":{"gitId":"rohit0718"},"content":"            Task deletedTask \u003d tasks.get(idx - 1);","lastModifiedDate":"2021-08-15"},{"lineNumber":142,"author":{"gitId":"rohit0718"},"content":"            tasks.remove(idx - 1);","lastModifiedDate":"2021-08-15"},{"lineNumber":143,"author":{"gitId":"rohit0718"},"content":"            printDuke(","lastModifiedDate":"2021-08-15"},{"lineNumber":144,"author":{"gitId":"rohit0718"},"content":"                MSG_TASK_DELETED + \"\\n\"","lastModifiedDate":"2021-08-15"},{"lineNumber":145,"author":{"gitId":"rohit0718"},"content":"                + \"   \" + deletedTask.toString() + \"\\n\"","lastModifiedDate":"2021-08-15"},{"lineNumber":146,"author":{"gitId":"rohit0718"},"content":"                + String.format(MSG_TASK_COUNT, tasks.size())","lastModifiedDate":"2021-08-15"},{"lineNumber":147,"author":{"gitId":"rohit0718"},"content":"            );","lastModifiedDate":"2021-08-15"},{"lineNumber":148,"author":{"gitId":"rohit0718"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-15"},{"lineNumber":149,"author":{"gitId":"rohit0718"},"content":"            printDuke(ERR_DELETE_FORMAT);","lastModifiedDate":"2021-08-15"},{"lineNumber":150,"author":{"gitId":"rohit0718"},"content":"            return;","lastModifiedDate":"2021-08-14"},{"lineNumber":151,"author":{"gitId":"rohit0718"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":152,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":153,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":154,"author":{"gitId":"rohit0718"},"content":"    private void notFound() {","lastModifiedDate":"2021-08-14"},{"lineNumber":155,"author":{"gitId":"rohit0718"},"content":"        printDuke(ERR_NOT_FOUND);","lastModifiedDate":"2021-08-14"},{"lineNumber":156,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":157,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":158,"author":{"gitId":"rohit0718"},"content":"    private void printDuke(String str) {","lastModifiedDate":"2021-08-13"},{"lineNumber":159,"author":{"gitId":"rohit0718"},"content":"        System.out.printf(String.format(\"%s\\n%s\\n%s\\n\", BORDER, str, BORDER)","lastModifiedDate":"2021-08-14"},{"lineNumber":160,"author":{"gitId":"rohit0718"},"content":"            .replaceAll(\"(?m)^\", \"\\t\"));","lastModifiedDate":"2021-08-14"},{"lineNumber":161,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":162,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":163,"author":{"gitId":"rohit0718"},"content":"    private void execute(String input) {","lastModifiedDate":"2021-08-13"},{"lineNumber":164,"author":{"gitId":"rohit0718"},"content":"        String[] tmp \u003d  input.split(\" \", 2);","lastModifiedDate":"2021-08-14"},{"lineNumber":165,"author":{"gitId":"rohit0718"},"content":"        String command \u003d tmp[0];","lastModifiedDate":"2021-08-14"},{"lineNumber":166,"author":{"gitId":"rohit0718"},"content":"        String args \u003d tmp.length \u003e 1 ? tmp[1] : \"\";","lastModifiedDate":"2021-08-14"},{"lineNumber":167,"author":{"gitId":"rohit0718"},"content":"        commandsMap.getOrDefault(command, (str) -\u003e notFound()).accept(args);","lastModifiedDate":"2021-08-14"},{"lineNumber":168,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":169,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":170,"author":{"gitId":"rohit0718"},"content":"    public void run() {","lastModifiedDate":"2021-08-13"},{"lineNumber":171,"author":{"gitId":"rohit0718"},"content":"        printDuke(GREETING);","lastModifiedDate":"2021-08-13"},{"lineNumber":172,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":173,"author":{"gitId":"rohit0718"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-13"},{"lineNumber":174,"author":{"gitId":"rohit0718"},"content":"        String input \u003d \"\";","lastModifiedDate":"2021-08-13"},{"lineNumber":175,"author":{"gitId":"rohit0718"},"content":"        while (!(input \u003d sc.nextLine().trim()).equals(\"bye\")) {","lastModifiedDate":"2021-08-13"},{"lineNumber":176,"author":{"gitId":"rohit0718"},"content":"            execute(input);","lastModifiedDate":"2021-08-13"},{"lineNumber":177,"author":{"gitId":"rohit0718"},"content":"        }","lastModifiedDate":"2021-08-13"},{"lineNumber":178,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":179,"author":{"gitId":"rohit0718"},"content":"        printDuke(FAREWELL);","lastModifiedDate":"2021-08-13"},{"lineNumber":180,"author":{"gitId":"rohit0718"},"content":"        sc.close();","lastModifiedDate":"2021-08-13"},{"lineNumber":181,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":182,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":184,"author":{"gitId":"rohit0718"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":185,"author":{"gitId":"rohit0718"},"content":"            new Duke().run();","lastModifiedDate":"2021-08-13"},{"lineNumber":186,"author":{"gitId":"rohit0718"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":187,"author":{"gitId":"rohit0718"},"content":"            System.out.println(ERR_CREATE_FILE);","lastModifiedDate":"2021-08-21"},{"lineNumber":188,"author":{"gitId":"rohit0718"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":189,"author":{"gitId":"rohit0718"},"content":"            System.out.println(ERR_UNEXPECTED);","lastModifiedDate":"2021-08-21"},{"lineNumber":190,"author":{"gitId":"rohit0718"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":3,"rohit0718":189}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rohit0718"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"rohit0718"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"rohit0718"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"rohit0718"},"content":"    private final LocalDateTime startDate;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"rohit0718"},"content":"    Event(String name, String startDate) throws DateTimeParseException {","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"rohit0718"},"content":"        super(name);","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"rohit0718"},"content":"        this.startDate \u003d Utility.parseDate(startDate);","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"rohit0718"},"content":"    Event(String name, String startDate, boolean isComplete) {","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"rohit0718"},"content":"        super(name, isComplete);","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"rohit0718"},"content":"        this.startDate \u003d Utility.parseDate(startDate);","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"rohit0718"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"rohit0718"},"content":"    public String toFile() {","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"rohit0718"},"content":"        return String.format(\"E | %s | %s\", super.toFile(), Utility.dateToFile(startDate));","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"rohit0718"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"rohit0718"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"rohit0718"},"content":"        return String.format(\"[E]%s (at: %s)\", super.toString(), Utility.dateToString(startDate));","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"rohit0718"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"rohit0718":26}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rohit0718"},"content":"abstract public class Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"rohit0718"},"content":"    private final String name;","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"rohit0718"},"content":"    private boolean isComplete;","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"rohit0718"},"content":"    Task(String name) {","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"rohit0718"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"rohit0718"},"content":"        this.isComplete \u003d false;","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"rohit0718"},"content":"    Task(String name, boolean isComplete) {","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"rohit0718"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"rohit0718"},"content":"        this.isComplete \u003d isComplete;","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"rohit0718"},"content":"    public String getName() {","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"rohit0718"},"content":"        return name;","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"rohit0718"},"content":"    public boolean isComplete() {","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"rohit0718"},"content":"        return this.isComplete;","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"rohit0718"},"content":"    public void markComplete() {","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"rohit0718"},"content":"        this.isComplete \u003d true;","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"rohit0718"},"content":"    public static Task strToObj(String s) throws IllegalArgumentException {","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"rohit0718"},"content":"        if (!s.matches(\"[T] [|] [10] [|] [\\\\w\\\\s]+$\")","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"rohit0718"},"content":"                \u0026\u0026 !s.matches(\"[DE] [|] [10] [|] [\\\\w\\\\s]+ [|] [0-9]{2}/[0-9]{2}/[0-9]{4} [0-9]{4}\")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"rohit0718"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"rohit0718"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"rohit0718"},"content":"        String[] tmp \u003d  s.split(\" [|] \");","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"rohit0718"},"content":"        boolean isComplete \u003d tmp[1].equals(\"1\") ? true : false;","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"rohit0718"},"content":"        switch (tmp[0]) {","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"rohit0718"},"content":"        case \"T\":","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"rohit0718"},"content":"            return new Todo(tmp[2], isComplete);","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"rohit0718"},"content":"        case \"D\":","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"rohit0718"},"content":"            return new Deadline(tmp[2], tmp[3], isComplete);","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"rohit0718"},"content":"        default:","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"rohit0718"},"content":"            return new Event(tmp[2], tmp[3], isComplete);","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"rohit0718"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"rohit0718"},"content":"    public String toFile() {","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"rohit0718"},"content":"        return String.format(\"%d | %s\", isComplete ? 1 : 0, name);","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"rohit0718"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":49,"author":{"gitId":"rohit0718"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":50,"author":{"gitId":"rohit0718"},"content":"        return String.format(\"[%s] %s\", isComplete ? \"X\" : \" \", name);","lastModifiedDate":"2021-08-14"},{"lineNumber":51,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":52,"author":{"gitId":"rohit0718"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"rohit0718":52}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rohit0718"},"content":"import java.io.File;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"rohit0718"},"content":"import java.util.List;","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"rohit0718"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"rohit0718"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"rohit0718"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"rohit0718"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"rohit0718"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"rohit0718"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"rohit0718"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"rohit0718"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"rohit0718"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"rohit0718"},"content":"public class TaskList {","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"rohit0718"},"content":"    private final static String FILE_PATH \u003d \"duke.txt\";","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"rohit0718"},"content":"    private final String ERR_SAVE \u003d \"Unexpected error occured. Could not save Tasks to file.\";","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"rohit0718"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"rohit0718"},"content":"    private TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"rohit0718"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"rohit0718"},"content":"    private void appendToFile(Task task) {","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"rohit0718"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"rohit0718"},"content":"            File file \u003d new File(FILE_PATH);","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"rohit0718"},"content":"            PrintWriter pw \u003d new PrintWriter(new FileOutputStream(file, true));","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"rohit0718"},"content":"            pw.append(task.toFile());","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"rohit0718"},"content":"            pw.close();","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"rohit0718"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"rohit0718"},"content":"            System.out.println(ERR_SAVE);","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"rohit0718"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"rohit0718"},"content":"    private void saveToFile() {","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"rohit0718"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"rohit0718"},"content":"            File file \u003d new File(FILE_PATH);","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"rohit0718"},"content":"            PrintWriter pw \u003d new PrintWriter(new FileOutputStream(file));","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"rohit0718"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"rohit0718"},"content":"                pw.println(task.toFile());","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"rohit0718"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"rohit0718"},"content":"            pw.close();","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"rohit0718"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"rohit0718"},"content":"            System.out.println(ERR_SAVE);","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"rohit0718"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"rohit0718"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"rohit0718"},"content":"     * Returns a TaskList initialized from local file (if any).","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"rohit0718"},"content":"     * If local file not provided, this function creates one.","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"rohit0718"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"rohit0718"},"content":"     * @return new list with tasks obtained from local file (if any).","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"rohit0718"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"rohit0718"},"content":"    public static TaskList init() throws FileNotFoundException, IOException {","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"rohit0718"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"rohit0718"},"content":"        file.createNewFile();","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"rohit0718"},"content":"        FileInputStream fstream \u003d new FileInputStream(file);","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"rohit0718"},"content":"        BufferedReader br \u003d new BufferedReader(new InputStreamReader(fstream));","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"rohit0718"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"rohit0718"},"content":"        String line;","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"rohit0718"},"content":"        while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"rohit0718"},"content":"            try {","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"rohit0718"},"content":"                tasks.add(Task.strToObj(line));","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"rohit0718"},"content":"            } catch (IllegalArgumentException | DateTimeException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"rohit0718"},"content":"                continue;","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"rohit0718"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"rohit0718"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"rohit0718"},"content":"        br.close();","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"rohit0718"},"content":"        return new TaskList(tasks);","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"rohit0718"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"rohit0718"},"content":"     * Marks task at postition idx - 1 as complete.","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"rohit0718"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"rohit0718"},"content":"     * @param idx 1-based index of the task to mark as complete","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"rohit0718"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"rohit0718"},"content":"    public void markComplete(int idx) {","lastModifiedDate":"2021-08-21"},{"lineNumber":76,"author":{"gitId":"rohit0718"},"content":"        tasks.get(idx - 1).markComplete();","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"rohit0718"},"content":"        saveToFile();","lastModifiedDate":"2021-08-21"},{"lineNumber":78,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":79,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":80,"author":{"gitId":"rohit0718"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":81,"author":{"gitId":"rohit0718"},"content":"     * Returns the size of the list.","lastModifiedDate":"2021-08-21"},{"lineNumber":82,"author":{"gitId":"rohit0718"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":83,"author":{"gitId":"rohit0718"},"content":"     * @return the size of the list","lastModifiedDate":"2021-08-21"},{"lineNumber":84,"author":{"gitId":"rohit0718"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":85,"author":{"gitId":"rohit0718"},"content":"    public int size() {","lastModifiedDate":"2021-08-21"},{"lineNumber":86,"author":{"gitId":"rohit0718"},"content":"        return tasks.size();","lastModifiedDate":"2021-08-21"},{"lineNumber":87,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":88,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":89,"author":{"gitId":"rohit0718"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":90,"author":{"gitId":"rohit0718"},"content":"     * Inserts the specified task at the end of the list.","lastModifiedDate":"2021-08-21"},{"lineNumber":91,"author":{"gitId":"rohit0718"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":92,"author":{"gitId":"rohit0718"},"content":"     * @param task task to be inserted","lastModifiedDate":"2021-08-21"},{"lineNumber":93,"author":{"gitId":"rohit0718"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":94,"author":{"gitId":"rohit0718"},"content":"    public void add(Task task) {","lastModifiedDate":"2021-08-21"},{"lineNumber":95,"author":{"gitId":"rohit0718"},"content":"        tasks.add(task);","lastModifiedDate":"2021-08-21"},{"lineNumber":96,"author":{"gitId":"rohit0718"},"content":"        appendToFile(task);","lastModifiedDate":"2021-08-21"},{"lineNumber":97,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":98,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":99,"author":{"gitId":"rohit0718"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":100,"author":{"gitId":"rohit0718"},"content":"     * Returns the task at the specified position in this list.","lastModifiedDate":"2021-08-21"},{"lineNumber":101,"author":{"gitId":"rohit0718"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":102,"author":{"gitId":"rohit0718"},"content":"     * @param idx index of the task to return","lastModifiedDate":"2021-08-21"},{"lineNumber":103,"author":{"gitId":"rohit0718"},"content":"     * @return the task at the specified position in this list","lastModifiedDate":"2021-08-21"},{"lineNumber":104,"author":{"gitId":"rohit0718"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":105,"author":{"gitId":"rohit0718"},"content":"    public Task get(int idx) {","lastModifiedDate":"2021-08-21"},{"lineNumber":106,"author":{"gitId":"rohit0718"},"content":"        return tasks.get(idx);","lastModifiedDate":"2021-08-21"},{"lineNumber":107,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":108,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":109,"author":{"gitId":"rohit0718"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":110,"author":{"gitId":"rohit0718"},"content":"     * Removes the task at the specified position in this list.","lastModifiedDate":"2021-08-21"},{"lineNumber":111,"author":{"gitId":"rohit0718"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":112,"author":{"gitId":"rohit0718"},"content":"     * @param idx index of the task to remove","lastModifiedDate":"2021-08-21"},{"lineNumber":113,"author":{"gitId":"rohit0718"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":114,"author":{"gitId":"rohit0718"},"content":"    public void remove(int idx) {","lastModifiedDate":"2021-08-21"},{"lineNumber":115,"author":{"gitId":"rohit0718"},"content":"        tasks.remove(idx);","lastModifiedDate":"2021-08-21"},{"lineNumber":116,"author":{"gitId":"rohit0718"},"content":"        saveToFile();","lastModifiedDate":"2021-08-21"},{"lineNumber":117,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":118,"author":{"gitId":"rohit0718"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"rohit0718":118}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rohit0718"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"rohit0718"},"content":"    Todo(String name) {","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"rohit0718"},"content":"        super(name);","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"rohit0718"},"content":"    Todo(String name, boolean isComplete) {","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"rohit0718"},"content":"        super(name, isComplete);","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"rohit0718"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"rohit0718"},"content":"    public String toFile() {","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"rohit0718"},"content":"        return String.format(\"T | %s\", super.toFile());","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"rohit0718"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"rohit0718"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"rohit0718"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"rohit0718"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"rohit0718":19}},{"path":"src/main/java/Utility.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rohit0718"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"rohit0718"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"rohit0718"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"rohit0718"},"content":"public class Utility {","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"rohit0718"},"content":"    private final static DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"rohit0718"},"content":"    private final static DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, HH:mm\");","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"rohit0718"},"content":"    public static LocalDateTime parseDate(String date) throws DateTimeParseException {","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"rohit0718"},"content":"        return LocalDateTime.parse(date, inputFormatter);","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"rohit0718"},"content":"    public static String dateToString(LocalDateTime date) {","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"rohit0718"},"content":"        return date.format(outputFormatter);","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"rohit0718"},"content":"    public static String dateToFile(LocalDateTime date) {","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"rohit0718"},"content":"        return date.format(inputFormatter);","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"rohit0718"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"rohit0718":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rohit0718"},"content":"todo borrow book","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"rohit0718"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"rohit0718"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"rohit0718"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"rohit0718"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"rohit0718"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"rohit0718"},"content":"todo","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"rohit0718"},"content":"deadline try/by Tmr","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"rohit0718"},"content":"event meeting /atSunday","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"rohit0718"},"content":"done 1","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"rohit0718"},"content":"done 4","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"rohit0718"},"content":"bye","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"rohit0718":12}}]
