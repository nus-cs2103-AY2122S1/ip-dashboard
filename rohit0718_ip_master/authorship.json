[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"rohit0718"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.9\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"rohit0718"},"content":"javafx {","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"rohit0718"},"content":"    version \u003d \"16\"","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"rohit0718"},"content":"    modules \u003d [ \u0027javafx.base\u0027, \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"rohit0718"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"rohit0718"},"content":"    mainClassName \u003d \"Launcher\"","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":45,"rohit0718":9}},{"path":"src/main/java/Duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rohit0718"},"content":"package duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"rohit0718"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"rohit0718"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"rohit0718"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"rohit0718"},"content":"    private final LocalDateTime dueDate;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"rohit0718"},"content":"    Deadline(String name, String dueDate) throws DateTimeParseException {","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"rohit0718"},"content":"        super(name);","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"rohit0718"},"content":"        this.dueDate \u003d Utility.parseDate(dueDate);","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"rohit0718"},"content":"    Deadline(String name, String dueDate, boolean isComplete) {","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"rohit0718"},"content":"        super(name, isComplete);","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"rohit0718"},"content":"        this.dueDate \u003d Utility.parseDate(dueDate);","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"rohit0718"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"rohit0718"},"content":"    public String toFile() {","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"rohit0718"},"content":"        return String.format(\"D | %s | %s\", super.toFile(), Utility.dateToFile(dueDate));","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"rohit0718"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"rohit0718"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"rohit0718"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), Utility.dateToString(dueDate));","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"rohit0718"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"rohit0718":28}},{"path":"src/main/java/Duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rohit0718"},"content":"package duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"rohit0718"},"content":"public class Duke {","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"rohit0718"},"content":"    private static final String FILE_PATH \u003d \"duke.txt\";","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"rohit0718"},"content":"    private Parser parser;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"rohit0718"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"rohit0718"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"rohit0718"},"content":"     * Returns a Duke object. IOException is thrown if file does not","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"rohit0718"},"content":"     * exist and is unable to be created.","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"rohit0718"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"rohit0718"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"rohit0718"},"content":"    public Duke() {","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"rohit0718"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"rohit0718"},"content":"        this.tasks \u003d new TaskList(new Storage(FILE_PATH));","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"rohit0718"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"rohit0718"},"content":"        return parser.execute(input, tasks);","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"rohit0718"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"rohit0718":21}},{"path":"src/main/java/Duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rohit0718"},"content":"package duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"rohit0718"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"rohit0718"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"rohit0718"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"rohit0718"},"content":"    private final LocalDateTime startDate;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"rohit0718"},"content":"    Event(String name, String startDate) throws DateTimeParseException {","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"rohit0718"},"content":"        super(name);","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"rohit0718"},"content":"        this.startDate \u003d Utility.parseDate(startDate);","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"rohit0718"},"content":"    Event(String name, String startDate, boolean isComplete) {","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"rohit0718"},"content":"        super(name, isComplete);","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"rohit0718"},"content":"        this.startDate \u003d Utility.parseDate(startDate);","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"rohit0718"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"rohit0718"},"content":"    public String toFile() {","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"rohit0718"},"content":"        return String.format(\"E | %s | %s\", super.toFile(), Utility.dateToFile(startDate));","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"rohit0718"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"rohit0718"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"rohit0718"},"content":"        return String.format(\"[E]%s (at: %s)\", super.toString(), Utility.dateToString(startDate));","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"rohit0718"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"rohit0718":28}},{"path":"src/main/java/Duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rohit0718"},"content":"package duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"rohit0718"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"rohit0718"},"content":"import java.util.Map;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"rohit0718"},"content":"import java.util.function.BiFunction;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"rohit0718"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"rohit0718"},"content":"public class Parser {","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"rohit0718"},"content":"    private static final String MSG_LISTS \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"rohit0718"},"content":"    private static final String MSG_TASK_COMPLETE \u003d \"Nice! I\u0027ve marked this task as done:\\n%s\";","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"rohit0718"},"content":"    private static final String MSG_TASK_ADDED \u003d \"Got it. I\u0027ve added this task:\";","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"rohit0718"},"content":"    private static final String MSG_TASK_DELETED \u003d \"Noted. I\u0027ve removed this task:\";","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"rohit0718"},"content":"    private static final String MSG_TASK_COUNT \u003d \"Now you have %d tasks in the list.\";","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"rohit0718"},"content":"    private static final String ERR_OUT_OF_BOUNDS \u003d \"Please enter a number between 1 and %d!\";","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"rohit0718"},"content":"    private static final String ERR_TASK_COMPLETE \u003d \"Task %s is already complete!\";","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"rohit0718"},"content":"    private static final String ERR_NOT_FOUND \u003d \"Sorry, I do not recognize that command.\";","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"rohit0718"},"content":"    private static final String ERR_NO_TASKS \u003d \"No tasks available!\";","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"rohit0718"},"content":"    private static final String ERR_TODO_FORMAT \u003d \"Error in command usage. Usage: todo \u003cname\u003e\";","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"rohit0718"},"content":"    private static final String ERR_DEADLINE_FORMAT \u003d \"Error in command usage. \"","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"rohit0718"},"content":"            + \"Usage: deadline \u003cname\u003e /by dd/MM/yyyy HHmm\";","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"rohit0718"},"content":"    private static final String ERR_EVENT_FORMAT \u003d \"Error in command usage. Usage: event \u003cname\u003e /at dd/MM/yyyy HHmm\";","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"rohit0718"},"content":"    private static final String ERR_DONE_FORMAT \u003d \"Please provide a valid number! Usage: done \u003cnum\u003e\";","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"rohit0718"},"content":"    private static final String ERR_DELETE_FORMAT \u003d \"Please provide a valid number! Usage: delete \u003cnum\u003e\";","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"rohit0718"},"content":"    private static final String ERR_FIND_FORMAT \u003d \"Please provide a query! Usage: find \u003cquery\u003e\";","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"rohit0718"},"content":"    private static final String ERR_MAX_TASKS \u003d \"Sorry! You have reached maximum Task capacity.\";","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"rohit0718"},"content":"    private static final String ERR_NO_MATCHES \u003d \"No tasks match given query.\";","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"rohit0718"},"content":"    private static final int MAX_TASKS \u003d 100;","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"rohit0718"},"content":"    private final Map\u003cString, BiFunction\u003cString, TaskList, String\u003e\u003e commandsMap \u003d Map.of(","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"rohit0718"},"content":"        \"list\", (args, tasks) -\u003e listTasks(tasks),","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"rohit0718"},"content":"        \"done\", this::completeTask,","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"rohit0718"},"content":"        \"todo\", this::addTodo,","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"rohit0718"},"content":"        \"deadline\", this::addDeadline,","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"rohit0718"},"content":"        \"event\", this::addEvent,","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"rohit0718"},"content":"        \"delete\", this::deleteTask,","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"rohit0718"},"content":"        \"find\", this::findTasks","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"rohit0718"},"content":"    );","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"rohit0718"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"rohit0718"},"content":"     * Executes a command represented by input string and updates provided tasklist.","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"rohit0718"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"rohit0718"},"content":"     * @param input command to execute","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"rohit0718"},"content":"     * @param tasks TaskList to update","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"rohit0718"},"content":"     * @return message to present to the user","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"rohit0718"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"rohit0718"},"content":"    public String execute(String input, TaskList tasks) {","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"rohit0718"},"content":"        String[] tmp \u003d input.split(\" \", 2);","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"rohit0718"},"content":"        String command \u003d tmp[0];","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"rohit0718"},"content":"        String args \u003d tmp.length \u003e 1 ? tmp[1] : \"\";","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"rohit0718"},"content":"        return commandsMap.getOrDefault(command, (str, tasklist) -\u003e notFound())","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"rohit0718"},"content":"                .apply(args, tasks);","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"rohit0718"},"content":"    private String latestTask(TaskList tasks) {","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"rohit0718"},"content":"        return MSG_TASK_ADDED + \"\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"rohit0718"},"content":"                + \"   \" + tasks.get(tasks.size() - 1).toString() + \"\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"rohit0718"},"content":"                + String.format(MSG_TASK_COUNT, tasks.size());","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"rohit0718"},"content":"    private String findTasks(String args, TaskList tasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"rohit0718"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"rohit0718"},"content":"            return ERR_NO_TASKS;","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"rohit0718"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"rohit0718"},"content":"        if (args.equals(\"\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"rohit0718"},"content":"            return ERR_FIND_FORMAT;","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"rohit0718"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"rohit0718"},"content":"        String matchingTasks \u003d tasks.getMatches(args);","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"rohit0718"},"content":"        if (matchingTasks.equals(\"\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"rohit0718"},"content":"            return ERR_NO_MATCHES;","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"rohit0718"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"rohit0718"},"content":"        return matchingTasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"rohit0718"},"content":"    private String addTodo(String args, TaskList tasks) {","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"rohit0718"},"content":"        if (tasks.size() \u003e MAX_TASKS) {","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"rohit0718"},"content":"            return ERR_MAX_TASKS;","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"rohit0718"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"rohit0718"},"content":"        if (args.equals(\"\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"rohit0718"},"content":"            return ERR_TODO_FORMAT;","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"rohit0718"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"rohit0718"},"content":"        tasks.add(new Todo(args));","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"rohit0718"},"content":"        return latestTask(tasks);","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"rohit0718"},"content":"    private String addDeadline(String args, TaskList tasks) {","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"rohit0718"},"content":"        if (!args.contains(\" /by \")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"rohit0718"},"content":"            return ERR_DEADLINE_FORMAT;","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"rohit0718"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"rohit0718"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"rohit0718"},"content":"            String[] tmp \u003d args.split(\" /by \", 2);","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"rohit0718"},"content":"            tasks.add(new Deadline(tmp[0], tmp[1]));","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"rohit0718"},"content":"            return latestTask(tasks);","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"rohit0718"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"rohit0718"},"content":"            return ERR_DEADLINE_FORMAT;","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"rohit0718"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"rohit0718"},"content":"    private String addEvent(String args, TaskList tasks) {","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"rohit0718"},"content":"        if (!args.contains(\" /at \")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"rohit0718"},"content":"            return ERR_EVENT_FORMAT;","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"rohit0718"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"rohit0718"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"rohit0718"},"content":"            String[] tmp \u003d args.split(\" /at \", 2);","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"rohit0718"},"content":"            tasks.add(new Event(tmp[0], tmp[1]));","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"rohit0718"},"content":"            return latestTask(tasks);","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"rohit0718"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":107,"author":{"gitId":"rohit0718"},"content":"            return ERR_EVENT_FORMAT;","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"rohit0718"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":109,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":110,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":111,"author":{"gitId":"rohit0718"},"content":"    private String listTasks(TaskList tasks) {","lastModifiedDate":"2021-08-23"},{"lineNumber":112,"author":{"gitId":"rohit0718"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-23"},{"lineNumber":113,"author":{"gitId":"rohit0718"},"content":"            return ERR_NO_TASKS;","lastModifiedDate":"2021-08-23"},{"lineNumber":114,"author":{"gitId":"rohit0718"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":115,"author":{"gitId":"rohit0718"},"content":"        return MSG_LISTS + \"\\n\" + String.join(\"\\n\", IntStream.range(0, tasks.size())","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"rohit0718"},"content":"                .mapToObj(i -\u003e String.format(\"%d.%s\", i + 1, tasks.get(i)))","lastModifiedDate":"2021-08-23"},{"lineNumber":117,"author":{"gitId":"rohit0718"},"content":"                .toArray(String[]::new));","lastModifiedDate":"2021-08-23"},{"lineNumber":118,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":119,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":120,"author":{"gitId":"rohit0718"},"content":"    private String completeTask(String args, TaskList tasks) {","lastModifiedDate":"2021-08-23"},{"lineNumber":121,"author":{"gitId":"rohit0718"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":122,"author":{"gitId":"rohit0718"},"content":"            int idx \u003d Integer.parseInt(args);","lastModifiedDate":"2021-08-23"},{"lineNumber":123,"author":{"gitId":"rohit0718"},"content":"            if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-23"},{"lineNumber":124,"author":{"gitId":"rohit0718"},"content":"                return ERR_NO_TASKS;","lastModifiedDate":"2021-08-23"},{"lineNumber":125,"author":{"gitId":"rohit0718"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":126,"author":{"gitId":"rohit0718"},"content":"            if (idx \u003c 1 || idx \u003e tasks.size()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":127,"author":{"gitId":"rohit0718"},"content":"                return String.format(ERR_OUT_OF_BOUNDS, tasks.size());","lastModifiedDate":"2021-08-23"},{"lineNumber":128,"author":{"gitId":"rohit0718"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":129,"author":{"gitId":"rohit0718"},"content":"            if (tasks.get(idx - 1).isComplete()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":130,"author":{"gitId":"rohit0718"},"content":"                return String.format(ERR_TASK_COMPLETE, tasks.get(idx - 1).getName());","lastModifiedDate":"2021-08-23"},{"lineNumber":131,"author":{"gitId":"rohit0718"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":132,"author":{"gitId":"rohit0718"},"content":"            tasks.markComplete(idx);","lastModifiedDate":"2021-08-23"},{"lineNumber":133,"author":{"gitId":"rohit0718"},"content":"            return String.format(MSG_TASK_COMPLETE, String.format(\"   %s\", tasks.get(idx - 1)));","lastModifiedDate":"2021-08-23"},{"lineNumber":134,"author":{"gitId":"rohit0718"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":135,"author":{"gitId":"rohit0718"},"content":"            return ERR_DONE_FORMAT;","lastModifiedDate":"2021-08-23"},{"lineNumber":136,"author":{"gitId":"rohit0718"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":137,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":138,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":139,"author":{"gitId":"rohit0718"},"content":"    private String deleteTask(String args, TaskList tasks) {","lastModifiedDate":"2021-08-23"},{"lineNumber":140,"author":{"gitId":"rohit0718"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":141,"author":{"gitId":"rohit0718"},"content":"            int idx \u003d Integer.parseInt(args);","lastModifiedDate":"2021-08-23"},{"lineNumber":142,"author":{"gitId":"rohit0718"},"content":"            if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-23"},{"lineNumber":143,"author":{"gitId":"rohit0718"},"content":"                return ERR_NO_TASKS;","lastModifiedDate":"2021-08-23"},{"lineNumber":144,"author":{"gitId":"rohit0718"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":145,"author":{"gitId":"rohit0718"},"content":"            if (idx \u003c 1 || idx \u003e tasks.size()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":146,"author":{"gitId":"rohit0718"},"content":"                return String.format(ERR_OUT_OF_BOUNDS, tasks.size());","lastModifiedDate":"2021-08-23"},{"lineNumber":147,"author":{"gitId":"rohit0718"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":148,"author":{"gitId":"rohit0718"},"content":"            Task deletedTask \u003d tasks.get(idx - 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":149,"author":{"gitId":"rohit0718"},"content":"            tasks.remove(idx - 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":150,"author":{"gitId":"rohit0718"},"content":"            return MSG_TASK_DELETED + \"\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":151,"author":{"gitId":"rohit0718"},"content":"                    + \"   \" + deletedTask.toString() + \"\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":152,"author":{"gitId":"rohit0718"},"content":"                    + String.format(MSG_TASK_COUNT, tasks.size());","lastModifiedDate":"2021-08-23"},{"lineNumber":153,"author":{"gitId":"rohit0718"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":154,"author":{"gitId":"rohit0718"},"content":"            return ERR_DELETE_FORMAT;","lastModifiedDate":"2021-08-23"},{"lineNumber":155,"author":{"gitId":"rohit0718"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":156,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":157,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":158,"author":{"gitId":"rohit0718"},"content":"    private String notFound() {","lastModifiedDate":"2021-08-23"},{"lineNumber":159,"author":{"gitId":"rohit0718"},"content":"        return ERR_NOT_FOUND;","lastModifiedDate":"2021-08-23"},{"lineNumber":160,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":161,"author":{"gitId":"rohit0718"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"rohit0718":161}},{"path":"src/main/java/Duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rohit0718"},"content":"package duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"rohit0718"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"rohit0718"},"content":"import java.io.File;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"rohit0718"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"rohit0718"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"rohit0718"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"rohit0718"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"rohit0718"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"rohit0718"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"rohit0718"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"rohit0718"},"content":"import java.util.List;","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"rohit0718"},"content":"public class Storage {","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"rohit0718"},"content":"    private static final String ERR_SAVE \u003d \"Unexpected error occured. Could not save Tasks to file.\";","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"rohit0718"},"content":"    private final String filePath;","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"rohit0718"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"rohit0718"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"rohit0718"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"rohit0718"},"content":"     * Returns a List of Tasks initialized from local file (if any).","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"rohit0718"},"content":"     * If local file not provided, this function creates one.","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"rohit0718"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"rohit0718"},"content":"     * @return new list of tasks obtained from local file (if any).","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"rohit0718"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"rohit0718"},"content":"    public List\u003cTask\u003e load() {","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"rohit0718"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"rohit0718"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"rohit0718"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"rohit0718"},"content":"            file.createNewFile();","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"rohit0718"},"content":"            FileInputStream fstream \u003d new FileInputStream(file);","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"rohit0718"},"content":"            BufferedReader br \u003d new BufferedReader(new InputStreamReader(fstream));","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"rohit0718"},"content":"            String line;","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"rohit0718"},"content":"            while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"rohit0718"},"content":"                tasks.add(Task.strToObj(line));","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"rohit0718"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"rohit0718"},"content":"            br.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"rohit0718"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"rohit0718"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"rohit0718"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"rohit0718"},"content":"        return tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"rohit0718"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"rohit0718"},"content":"     * Adds a new task to the end of the file.","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"rohit0718"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"rohit0718"},"content":"     * @param task task to be added to the end of the file","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"rohit0718"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"rohit0718"},"content":"    public void appendToFile(Task task) {","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"rohit0718"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"rohit0718"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"rohit0718"},"content":"            PrintWriter pw \u003d new PrintWriter(new FileOutputStream(file, true));","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"rohit0718"},"content":"            pw.append(task.toFile());","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"rohit0718"},"content":"            pw.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"rohit0718"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"rohit0718"},"content":"            System.out.println(ERR_SAVE);","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"rohit0718"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"rohit0718"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"rohit0718"},"content":"     * Rewrites the contents of the file with all tasks.","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"rohit0718"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"rohit0718"},"content":"     * @param tasks tasks to be written to the file","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"rohit0718"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"rohit0718"},"content":"    public void saveToFile(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"rohit0718"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"rohit0718"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"rohit0718"},"content":"            PrintWriter pw \u003d new PrintWriter(new FileOutputStream(file));","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"rohit0718"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"rohit0718"},"content":"                pw.println(task.toFile());","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"rohit0718"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"rohit0718"},"content":"            pw.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"rohit0718"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"rohit0718"},"content":"            System.out.println(ERR_SAVE);","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"rohit0718"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"rohit0718"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"rohit0718":79}},{"path":"src/main/java/Duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rohit0718"},"content":"package duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"rohit0718"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"rohit0718"},"content":"    private final String name;","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"rohit0718"},"content":"    private boolean isComplete;","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"rohit0718"},"content":"    Task(String name) {","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"rohit0718"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"rohit0718"},"content":"        this.isComplete \u003d false;","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"rohit0718"},"content":"    Task(String name, boolean isComplete) {","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"rohit0718"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"rohit0718"},"content":"        this.isComplete \u003d isComplete;","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"rohit0718"},"content":"    public String getName() {","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"rohit0718"},"content":"        return name;","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"rohit0718"},"content":"    public boolean isComplete() {","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"rohit0718"},"content":"        return this.isComplete;","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"rohit0718"},"content":"    public void markComplete() {","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"rohit0718"},"content":"        this.isComplete \u003d true;","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"rohit0718"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"rohit0718"},"content":"     * Returns a Task that is represented by the input string s.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"rohit0718"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"rohit0718"},"content":"     * @param s input string that represents task","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"rohit0718"},"content":"     * @return new Task that corresponds to its string format","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"rohit0718"},"content":"     * @throws IllegalArgumentException if string does not follow format","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"rohit0718"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"rohit0718"},"content":"    public static Task strToObj(String s) throws IllegalArgumentException {","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"rohit0718"},"content":"        if (!s.matches(\"[T] [|] [10] [|] [\\\\w\\\\s]+$\")","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"rohit0718"},"content":"                \u0026\u0026 !s.matches(\"[DE] [|] [10] [|] [\\\\w\\\\s]+ [|] [0-9]{2}/[0-9]{2}/[0-9]{4} [0-9]{4}\")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"rohit0718"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"rohit0718"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"rohit0718"},"content":"        String[] tmp \u003d s.split(\" [|] \");","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"rohit0718"},"content":"        boolean isComplete \u003d tmp[1].equals(\"1\");","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"rohit0718"},"content":"        switch (tmp[0]) {","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"rohit0718"},"content":"        case \"T\":","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"rohit0718"},"content":"            return new Todo(tmp[2], isComplete);","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"rohit0718"},"content":"        case \"D\":","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"rohit0718"},"content":"            return new Deadline(tmp[2], tmp[3], isComplete);","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"rohit0718"},"content":"        default:","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"rohit0718"},"content":"            return new Event(tmp[2], tmp[3], isComplete);","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"rohit0718"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"rohit0718"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"rohit0718"},"content":"     * Returns a string representation of Task conforming to file format.","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"rohit0718"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"rohit0718"},"content":"     * @return string representation of Task","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"rohit0718"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"rohit0718"},"content":"    public String toFile() {","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"rohit0718"},"content":"        return String.format(\"%d | %s\", isComplete ? 1 : 0, name);","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"rohit0718"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":63,"author":{"gitId":"rohit0718"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":64,"author":{"gitId":"rohit0718"},"content":"        return String.format(\"[%s] %s\", isComplete ? \"X\" : \" \", name);","lastModifiedDate":"2021-08-14"},{"lineNumber":65,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":66,"author":{"gitId":"rohit0718"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"rohit0718":66}},{"path":"src/main/java/Duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rohit0718"},"content":"package duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"rohit0718"},"content":"import java.util.List;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"rohit0718"},"content":"public class TaskList {","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"rohit0718"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"rohit0718"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"rohit0718"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"rohit0718"},"content":"     * Returns a TaskList object. IOException is thrown if file does not","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"rohit0718"},"content":"     * exist and is unable to be created.","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"rohit0718"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"rohit0718"},"content":"     * @param storage Storage object used to read and write tasks from file","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"rohit0718"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"rohit0718"},"content":"    public TaskList(Storage storage) {","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"rohit0718"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"rohit0718"},"content":"        this.tasks \u003d storage.load();","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"rohit0718"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"rohit0718"},"content":"     * Marks task at postition idx - 1 as complete.","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"rohit0718"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"rohit0718"},"content":"     * @param idx 1-based index of the task to mark as complete","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"rohit0718"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"rohit0718"},"content":"    public void markComplete(int idx) {","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"rohit0718"},"content":"        tasks.get(idx - 1).markComplete();","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"rohit0718"},"content":"        storage.saveToFile(tasks);","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"rohit0718"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"rohit0718"},"content":"     * Returns the size of the list.","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"rohit0718"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"rohit0718"},"content":"     * @return the size of the list","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"rohit0718"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"rohit0718"},"content":"    public int size() {","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"rohit0718"},"content":"        return tasks.size();","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"rohit0718"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"rohit0718"},"content":"     * Inserts the specified task at the end of the list.","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"rohit0718"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"rohit0718"},"content":"     * @param task task to be inserted","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"rohit0718"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"rohit0718"},"content":"    public void add(Task task) {","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"rohit0718"},"content":"        tasks.add(task);","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"rohit0718"},"content":"        storage.appendToFile(task);","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"rohit0718"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"rohit0718"},"content":"     * Returns the task at the specified position in this list.","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"rohit0718"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"rohit0718"},"content":"     * @param idx index of the task to return","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"rohit0718"},"content":"     * @return the task at the specified position in this list","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"rohit0718"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"rohit0718"},"content":"    public Task get(int idx) {","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"rohit0718"},"content":"        return tasks.get(idx);","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"rohit0718"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"rohit0718"},"content":"     * Removes the task at the specified position in this list.","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"rohit0718"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"rohit0718"},"content":"     * @param idx index of the task to remove","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"rohit0718"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"rohit0718"},"content":"    public void remove(int idx) {","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"rohit0718"},"content":"        tasks.remove(idx);","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"rohit0718"},"content":"        storage.saveToFile(tasks);","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"rohit0718"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"rohit0718"},"content":"     * Returns string form of all tasks whose name contains the given query.","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"rohit0718"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"rohit0718"},"content":"     * @param query string to match upon","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"rohit0718"},"content":"     * @return string representation of all tasks whose names contain the given query","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"rohit0718"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"rohit0718"},"content":"    public String getMatches(String query) {","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"rohit0718"},"content":"        return String.join(\"\\n\", tasks.stream().filter(task -\u003e task.getName().contains(query))","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"rohit0718"},"content":"                .map(Task::toString).toArray(String[]::new));","lastModifiedDate":"2021-08-28"},{"lineNumber":78,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"rohit0718"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"rohit0718":79}},{"path":"src/main/java/Duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rohit0718"},"content":"package duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"rohit0718"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"rohit0718"},"content":"    Todo(String name) {","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"rohit0718"},"content":"        super(name);","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"rohit0718"},"content":"    Todo(String name, boolean isComplete) {","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"rohit0718"},"content":"        super(name, isComplete);","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"rohit0718"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"rohit0718"},"content":"    public String toFile() {","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"rohit0718"},"content":"        return String.format(\"T | %s\", super.toFile());","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"rohit0718"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"rohit0718"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"rohit0718"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"rohit0718"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"rohit0718":21}},{"path":"src/main/java/Duke/Utility.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rohit0718"},"content":"package duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"rohit0718"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"rohit0718"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"rohit0718"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"rohit0718"},"content":"public class Utility {","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"rohit0718"},"content":"    private static final DateTimeFormatter INPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"rohit0718"},"content":"    private static final DateTimeFormatter OUTPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, HH:mm\");","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"rohit0718"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"rohit0718"},"content":"     * Parses given input string of format \u0027dd/MM/yyyy HHmm\u0027 and converts it","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"rohit0718"},"content":"     * to a LocalDateTimeObject","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"rohit0718"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"rohit0718"},"content":"     * @param date input string that represents date time in \u0027dd/MM/yyyy HHmm\u0027 format","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"rohit0718"},"content":"     * @return new LocalDateTime object that corresponds to input string","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"rohit0718"},"content":"     * @throws DateTimeParseException if string does not follow format","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"rohit0718"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"rohit0718"},"content":"    public static LocalDateTime parseDate(String date) throws DateTimeParseException {","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"rohit0718"},"content":"        return LocalDateTime.parse(date, INPUT_FORMATTER);","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"rohit0718"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"rohit0718"},"content":"     * Converts a LocalDateTime object to its string representation in","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"rohit0718"},"content":"     * \u0027MMM dd yyyy. HH:mm\u0027 format","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"rohit0718"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"rohit0718"},"content":"     * @param date LocalDateTime object to convert to its ouput string representation","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"rohit0718"},"content":"     * @return new String that corresponds to input LocalDateTime object","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"rohit0718"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"rohit0718"},"content":"    public static String dateToString(LocalDateTime date) {","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"rohit0718"},"content":"        return date.format(OUTPUT_FORMATTER);","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"rohit0718"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"rohit0718"},"content":"     * Converts a LocalDateTime object to its file string representation in","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"rohit0718"},"content":"     * \u0027dd/MM/yyyy HHmm\u0027 format","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"rohit0718"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"rohit0718"},"content":"     * @param date LocalDateTime object to convert to its file string representation","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"rohit0718"},"content":"     * @return new String that corresponds to input LocalDateTime object","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"rohit0718"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"rohit0718"},"content":"    public static String dateToFile(LocalDateTime date) {","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"rohit0718"},"content":"        return date.format(INPUT_FORMATTER);","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"rohit0718"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"rohit0718":45}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rohit0718"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"rohit0718"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"rohit0718"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"rohit0718"},"content":" * Taken from https://se-education.org/guides/tutorials/javaFxPart1.html","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"rohit0718"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"rohit0718"},"content":"public class Launcher {","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"rohit0718"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"rohit0718"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"rohit0718"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"rohit0718":11}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rohit0718"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"rohit0718"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"rohit0718"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"rohit0718"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"rohit0718"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"rohit0718"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"rohit0718"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"rohit0718"},"content":"import ui.MainWindow;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"rohit0718"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"rohit0718"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"rohit0718"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"rohit0718"},"content":"public class Main extends Application {","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"rohit0718"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"rohit0718"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"rohit0718"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"rohit0718"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"rohit0718"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"rohit0718"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"rohit0718"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"rohit0718"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"rohit0718"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"rohit0718"},"content":"            stage.show();","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"rohit0718"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"rohit0718"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"rohit0718"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"rohit0718"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"rohit0718":30}},{"path":"src/main/java/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rohit0718"},"content":"package ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"rohit0718"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"rohit0718"},"content":"import java.util.Collections;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"rohit0718"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"rohit0718"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"rohit0718"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"rohit0718"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"rohit0718"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"rohit0718"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"rohit0718"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"rohit0718"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"rohit0718"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"rohit0718"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"rohit0718"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"rohit0718"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"rohit0718"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"rohit0718"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"rohit0718"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"rohit0718"},"content":" * Referenced from https://se-education.org/guides/tutorials/javaFx.html","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"rohit0718"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"rohit0718"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"rohit0718"},"content":"    private final Circle clip \u003d new Circle(48, 50, 50);","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"rohit0718"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"rohit0718"},"content":"    private Label dialog;","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"rohit0718"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"rohit0718"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"rohit0718"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"rohit0718"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"rohit0718"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"rohit0718"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"rohit0718"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"rohit0718"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"rohit0718"},"content":"            displayPicture.setClip(clip);","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"rohit0718"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"rohit0718"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"rohit0718"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"rohit0718"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"rohit0718"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"rohit0718"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"rohit0718"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"rohit0718"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"rohit0718"},"content":"    private void flip() {","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"rohit0718"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"rohit0718"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"rohit0718"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"rohit0718"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"rohit0718"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"rohit0718"},"content":"        DialogBox db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"rohit0718"},"content":"        db.setStyle(\"-fx-background-color: #00FFFF\");","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"rohit0718"},"content":"        db.setAlignment(Pos.CENTER_RIGHT);","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"rohit0718"},"content":"        return db;","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"rohit0718"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"rohit0718"},"content":"        DialogBox db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"rohit0718"},"content":"        db.flip();","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"rohit0718"},"content":"        db.setStyle(\"-fx-background-color: #7FFFD4\");","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"rohit0718"},"content":"        db.setAlignment(Pos.CENTER_LEFT);","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"rohit0718"},"content":"        return db;","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"rohit0718"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"rohit0718":71}},{"path":"src/main/java/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rohit0718"},"content":"package ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"rohit0718"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"rohit0718"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"rohit0718"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"rohit0718"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"rohit0718"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"rohit0718"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"rohit0718"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"rohit0718"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"rohit0718"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"rohit0718"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"rohit0718"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"rohit0718"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"rohit0718"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"rohit0718"},"content":"    private static final String GREETING \u003d \"Hello! I\u0027m Duke, what can I do for you?\";","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"rohit0718"},"content":"    private static final String FAREWELL \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"rohit0718"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"rohit0718"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"rohit0718"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"rohit0718"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"rohit0718"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"rohit0718"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"rohit0718"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"rohit0718"},"content":"    private Button sendButton;","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"rohit0718"},"content":"    private Duke duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"rohit0718"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/MudkipHead.png\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"rohit0718"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/RayquazaHead.png\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"rohit0718"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"rohit0718"},"content":"     * Initialize the MainWindow and print greeting to user.","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"rohit0718"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"rohit0718"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"rohit0718"},"content":"    public void initialize() {","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"rohit0718"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"rohit0718"},"content":"        showWelcome();","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"rohit0718"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"rohit0718"},"content":"        duke \u003d d;","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"rohit0718"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"rohit0718"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"rohit0718"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"rohit0718"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"rohit0718"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"rohit0718"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"rohit0718"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"rohit0718"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"rohit0718"},"content":"        if (input.trim().equals(\"bye\")) {","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"rohit0718"},"content":"            showFarewell();","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"rohit0718"},"content":"            Platform.exit();","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"rohit0718"},"content":"            System.exit(0);","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"rohit0718"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"rohit0718"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"rohit0718"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"rohit0718"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"rohit0718"},"content":"        );","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"rohit0718"},"content":"        userInput.clear();","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"rohit0718"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"rohit0718"},"content":"    private void showWelcome() {","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"rohit0718"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(GREETING, dukeImage));","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"rohit0718"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"rohit0718"},"content":"    private void showFarewell() {","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"rohit0718"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(FAREWELL, dukeImage));","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"rohit0718"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"rohit0718":73}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"rohit0718"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"rohit0718"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"rohit0718"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"rohit0718"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"rohit0718"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"rohit0718"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"rohit0718"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"rohit0718"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" \u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"rohit0718"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"rohit0718"},"content":"                \u003cInsets left\u003d\"15.0\" right\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"rohit0718"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"rohit0718"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"rohit0718"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"rohit0718"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"rohit0718"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"rohit0718"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"rohit0718"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"rohit0718"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"rohit0718":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"rohit0718"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"rohit0718"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"rohit0718"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"rohit0718"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"rohit0718"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"rohit0718"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"rohit0718"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"ui.MainWindow\"\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"rohit0718"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"rohit0718"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"rohit0718"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"313.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"87.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"rohit0718"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"rohit0718"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"rohit0718"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"rohit0718"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"rohit0718"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"rohit0718"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"rohit0718"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"rohit0718":19}},{"path":"src/test/java/Duke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rohit0718"},"content":"package duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"rohit0718"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"rohit0718"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"rohit0718"},"content":"public class TodoTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"rohit0718"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"rohit0718"},"content":"    public void toFileTest() {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"rohit0718"},"content":"        assertEquals(\"T | 0 | sample name\", new Todo(\"sample name\").toFile());","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"rohit0718"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"rohit0718"},"content":"    public void toStringTest() {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"rohit0718"},"content":"        assertEquals(\"[T][X] sample name\", new Todo(\"sample name\", true).toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"rohit0718"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"rohit0718":17}},{"path":"src/test/java/Duke/UtilityTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rohit0718"},"content":"package duke;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"rohit0718"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"rohit0718"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"rohit0718"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"rohit0718"},"content":"public class UtilityTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"rohit0718"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"rohit0718"},"content":"    public void parseDateTest() {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"rohit0718"},"content":"        assertEquals(LocalDateTime.of(2021, 8, 25, 12, 0), Utility.parseDate(\"25/08/2021 1200\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"rohit0718"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"rohit0718"},"content":"    public void dateToStringTest() {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"rohit0718"},"content":"        assertEquals(\"Aug 25 2021, 12:00\", Utility.dateToString(LocalDateTime.of(2021, 8, 25, 12, 0)));","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"rohit0718"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"rohit0718"},"content":"    void dateToFileTest() {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"rohit0718"},"content":"        assertEquals(\"25/08/2021 1200\", Utility.dateToFile(LocalDateTime.of(2021, 8, 25, 12, 0)));","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"rohit0718"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"rohit0718":24}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rohit0718"},"content":"todo borrow book","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"rohit0718"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"rohit0718"},"content":"deadline return book /by 20/08/2021 0900","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"rohit0718"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"rohit0718"},"content":"event project meeting /at 21/08/2021 1800","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"rohit0718"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"rohit0718"},"content":"todo","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"rohit0718"},"content":"deadline try/by Tmr","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"rohit0718"},"content":"event meeting /atSunday","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"rohit0718"},"content":"done 1","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"rohit0718"},"content":"done 4","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"rohit0718"},"content":"bye","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"rohit0718":12}}]
