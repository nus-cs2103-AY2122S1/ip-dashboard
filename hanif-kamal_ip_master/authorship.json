[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"hanif-kamal"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"hanif-kamal"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"hanif-kamal"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"hanif-kamal"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"hanif-kamal"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"hanif-kamal"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"hanif-kamal"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"hanif-kamal"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"hanif-kamal"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"hanif-kamal"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"hanif-kamal"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"hanif-kamal"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"hanif-kamal"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"hanif-kamal"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"hanif-kamal":16,"-":45}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"hanif-kamal"},"content":"# Duke User Guide","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"hanif-kamal"},"content":"Duke is a text-based reminder chatbot that helps you keep track of your ","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"hanif-kamal"},"content":"tasks. In memory of Prince Philip, Duke of Edinburgh ðŸ˜­ðŸ˜­ðŸ˜­","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"hanif-kamal"},"content":"## Quick Start","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"hanif-kamal"},"content":"1. Ensure that you have Java 11 installed on your machine.","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"hanif-kamal"},"content":"2. Download `Duke.jar` from the latest release [here](https://www.github.com/hanif-kamal/ip)","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"hanif-kamal"},"content":"3. Double-click to start Duke. It might take a few seconds to start.","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"hanif-kamal"},"content":"4. Get started with managing your tasks!","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"hanif-kamal"},"content":"### Task management","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"hanif-kamal"},"content":"There are 3 types of tasks.","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"hanif-kamal"},"content":"1. Todos: General tasks that need to be done.","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"hanif-kamal"},"content":"2. Deadlines: Tasks that need to be finished by the specified date.","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"hanif-kamal"},"content":"3. Events: Tasks that will occur at the specified date and time.","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"hanif-kamal"},"content":"#### What you can do with Tasks:","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"hanif-kamal"},"content":"1. Create them","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"hanif-kamal"},"content":"2. View them","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"hanif-kamal"},"content":"3. Delete them","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"hanif-kamal"},"content":"4. Search for them with keywords","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"hanif-kamal"},"content":"5. Mark them as done","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"hanif-kamal"},"content":"### Adding Notes","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"hanif-kamal"},"content":"You can also take notes about anything under the sun. The date and time of when you created the note is saved, so you can take down whatever you like and Duke will remember!","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"hanif-kamal"},"content":"Note commands are quite similar to Task commands.","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"hanif-kamal"},"content":"## Commands","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"hanif-kamal"},"content":"### `todo` - Create a Todo","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"hanif-kamal"},"content":"Creates a Todo with the specified description.","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"hanif-kamal"},"content":"Format: `todo TODO_DESCRIPTION`","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":41,"author":{"gitId":"hanif-kamal"},"content":"Example: `todo Wash the dishes`","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":43,"author":{"gitId":"hanif-kamal"},"content":"Expected outcome: Creates an incomplete Todo.","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":45,"author":{"gitId":"hanif-kamal"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"hanif-kamal"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"hanif-kamal"},"content":" [T][] Wash the dishes","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"hanif-kamal"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"hanif-kamal"},"content":"### `deadline` - Create a Deadline","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"hanif-kamal"},"content":"Creates a Deadline with the specified description and deadline date.","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":53,"author":{"gitId":"hanif-kamal"},"content":"Format: `deadline DEADLINE_DESCRIPTION /by DEADLINE_DATE` (Date as DD/MM/YY)","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":55,"author":{"gitId":"hanif-kamal"},"content":"Example: `deadline Finish Maths assignment /by 24/09/21`","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":57,"author":{"gitId":"hanif-kamal"},"content":"Expected outcome: Creates an incomplete Deadline.","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"hanif-kamal"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"hanif-kamal"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"hanif-kamal"},"content":" [D][] Finish Maths assignment (by: 24 Sep 2021)","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"hanif-kamal"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"hanif-kamal"},"content":"### `event` - Create an Event","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":65,"author":{"gitId":"hanif-kamal"},"content":"Creates a Event with the specified description, event date and time.","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":67,"author":{"gitId":"hanif-kamal"},"content":"Format: `event EVENT_DESCRIPTION /at EVENT_DATE EVENT_TIME` (Date as DD/MM/YY, time as HHMM)","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":69,"author":{"gitId":"hanif-kamal"},"content":"Example: `event Attend group meeting /at 01/10/21 1000`","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":71,"author":{"gitId":"hanif-kamal"},"content":"Expected outcome: Creates an incomplete Deadline.","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":74,"author":{"gitId":"hanif-kamal"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-17"},{"lineNumber":75,"author":{"gitId":"hanif-kamal"},"content":" [E] Attend group meeting (at: 01 Oct 2021 10:00 AM)","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":77,"author":{"gitId":"hanif-kamal"},"content":"### `list` - List out all tasks","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"hanif-kamal"},"content":"Lists out all tasks.","lastModifiedDate":"2021-09-17"},{"lineNumber":80,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"hanif-kamal"},"content":"Format: `list`","lastModifiedDate":"2021-09-17"},{"lineNumber":82,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":83,"author":{"gitId":"hanif-kamal"},"content":"Example: `list`","lastModifiedDate":"2021-09-17"},{"lineNumber":84,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":85,"author":{"gitId":"hanif-kamal"},"content":"Expected outcome: Displays all tasks.","lastModifiedDate":"2021-09-17"},{"lineNumber":86,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":87,"author":{"gitId":"hanif-kamal"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":88,"author":{"gitId":"hanif-kamal"},"content":"Here are the tasks in your list:","lastModifiedDate":"2021-09-17"},{"lineNumber":89,"author":{"gitId":"hanif-kamal"},"content":"1. [T][] Shop for clothes","lastModifiedDate":"2021-09-17"},{"lineNumber":90,"author":{"gitId":"hanif-kamal"},"content":"2. [T][] Get Adblock to make the Shopee ads go away","lastModifiedDate":"2021-09-17"},{"lineNumber":91,"author":{"gitId":"hanif-kamal"},"content":"3. [D][] Return library book (by: 31 Sep 2021)","lastModifiedDate":"2021-09-17"},{"lineNumber":92,"author":{"gitId":"hanif-kamal"},"content":"4. [E][] Catch movie with friends (at: 01 Oct 2021 07:00 PM)","lastModifiedDate":"2021-09-17"},{"lineNumber":93,"author":{"gitId":"hanif-kamal"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":94,"author":{"gitId":"hanif-kamal"},"content":"### `done` - Mark task as done","lastModifiedDate":"2021-09-17"},{"lineNumber":95,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":96,"author":{"gitId":"hanif-kamal"},"content":"Marks a task as done in the list.","lastModifiedDate":"2021-09-17"},{"lineNumber":97,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":98,"author":{"gitId":"hanif-kamal"},"content":"Format: `done TASK_INDEX` (Index as a positive integer)","lastModifiedDate":"2021-09-17"},{"lineNumber":99,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":100,"author":{"gitId":"hanif-kamal"},"content":"Example: `done 1`","lastModifiedDate":"2021-09-17"},{"lineNumber":101,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":102,"author":{"gitId":"hanif-kamal"},"content":"Expected outcome: Marks the 1st task in the list as done.","lastModifiedDate":"2021-09-17"},{"lineNumber":103,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":104,"author":{"gitId":"hanif-kamal"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":105,"author":{"gitId":"hanif-kamal"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2021-09-17"},{"lineNumber":106,"author":{"gitId":"hanif-kamal"},"content":" [T][X] Shop for clothes","lastModifiedDate":"2021-09-17"},{"lineNumber":107,"author":{"gitId":"hanif-kamal"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":108,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":109,"author":{"gitId":"hanif-kamal"},"content":"### `delete` - Delete a task in the list","lastModifiedDate":"2021-09-17"},{"lineNumber":110,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":111,"author":{"gitId":"hanif-kamal"},"content":"Deletes a task in the list.","lastModifiedDate":"2021-09-17"},{"lineNumber":112,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":113,"author":{"gitId":"hanif-kamal"},"content":"Format: `delete TASK_INDEX` (Index as a positive integer)","lastModifiedDate":"2021-09-17"},{"lineNumber":114,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":115,"author":{"gitId":"hanif-kamal"},"content":"Example: `delete 1`","lastModifiedDate":"2021-09-17"},{"lineNumber":116,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":117,"author":{"gitId":"hanif-kamal"},"content":"Expected outcome: Deletes the 1st task in the list.","lastModifiedDate":"2021-09-17"},{"lineNumber":118,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":119,"author":{"gitId":"hanif-kamal"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":120,"author":{"gitId":"hanif-kamal"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2021-09-17"},{"lineNumber":121,"author":{"gitId":"hanif-kamal"},"content":" [T][X] Shop for clothes","lastModifiedDate":"2021-09-17"},{"lineNumber":122,"author":{"gitId":"hanif-kamal"},"content":"Now you have 4 tasks in the list.","lastModifiedDate":"2021-09-17"},{"lineNumber":123,"author":{"gitId":"hanif-kamal"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":124,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":125,"author":{"gitId":"hanif-kamal"},"content":"### `find` - Finds tasks in the list matching a search term","lastModifiedDate":"2021-09-17"},{"lineNumber":126,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":127,"author":{"gitId":"hanif-kamal"},"content":"Finds all tasks in the list with descriptions that match the given search term. Note that the search term is case-sensitive.","lastModifiedDate":"2021-09-17"},{"lineNumber":128,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":129,"author":{"gitId":"hanif-kamal"},"content":"Format: `find SEARCHTERM`","lastModifiedDate":"2021-09-17"},{"lineNumber":130,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":131,"author":{"gitId":"hanif-kamal"},"content":"Example: `find Shop`","lastModifiedDate":"2021-09-17"},{"lineNumber":132,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":133,"author":{"gitId":"hanif-kamal"},"content":"Expected outcome: Lists all the tasks with descriptions that match the given search term.","lastModifiedDate":"2021-09-17"},{"lineNumber":134,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":135,"author":{"gitId":"hanif-kamal"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":136,"author":{"gitId":"hanif-kamal"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2021-09-17"},{"lineNumber":137,"author":{"gitId":"hanif-kamal"},"content":"1. [T][X] Shop for clothes","lastModifiedDate":"2021-09-17"},{"lineNumber":138,"author":{"gitId":"hanif-kamal"},"content":"2. [T][] Get Adblock to make the Shopee ads go away","lastModifiedDate":"2021-09-17"},{"lineNumber":139,"author":{"gitId":"hanif-kamal"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":140,"author":{"gitId":"hanif-kamal"},"content":"### `note` - Creates a note","lastModifiedDate":"2021-09-17"},{"lineNumber":141,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":142,"author":{"gitId":"hanif-kamal"},"content":"Creates a note. Notes are stored in a separate list.","lastModifiedDate":"2021-09-17"},{"lineNumber":143,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":144,"author":{"gitId":"hanif-kamal"},"content":"Format: `note NOTE_DESCRIPTION`","lastModifiedDate":"2021-09-17"},{"lineNumber":145,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":146,"author":{"gitId":"hanif-kamal"},"content":"Example: `note They got Jackie Chan too he\u0027s doing Shopee ads now`","lastModifiedDate":"2021-09-17"},{"lineNumber":147,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":148,"author":{"gitId":"hanif-kamal"},"content":"Expected outcome: Creates a note. The note also indicates when it was created.","lastModifiedDate":"2021-09-17"},{"lineNumber":149,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":150,"author":{"gitId":"hanif-kamal"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":151,"author":{"gitId":"hanif-kamal"},"content":"Got it. I\u0027ve added this note:","lastModifiedDate":"2021-09-17"},{"lineNumber":152,"author":{"gitId":"hanif-kamal"},"content":" They got Jackie Chan too he\u0027s doing Shopee ads now | created: 17/09/21 10:00 PM","lastModifiedDate":"2021-09-17"},{"lineNumber":153,"author":{"gitId":"hanif-kamal"},"content":"Now you have 1 note in the list. ","lastModifiedDate":"2021-09-17"},{"lineNumber":154,"author":{"gitId":"hanif-kamal"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":155,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":156,"author":{"gitId":"hanif-kamal"},"content":"### `notelist` - Lists out all notes","lastModifiedDate":"2021-09-17"},{"lineNumber":157,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":158,"author":{"gitId":"hanif-kamal"},"content":"Lists out all notes.","lastModifiedDate":"2021-09-17"},{"lineNumber":159,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":160,"author":{"gitId":"hanif-kamal"},"content":"Format: `notelist`","lastModifiedDate":"2021-09-17"},{"lineNumber":161,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":162,"author":{"gitId":"hanif-kamal"},"content":"Example: `notelist`","lastModifiedDate":"2021-09-17"},{"lineNumber":163,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":164,"author":{"gitId":"hanif-kamal"},"content":"Expected outcome: Displays all notes.","lastModifiedDate":"2021-09-17"},{"lineNumber":165,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":166,"author":{"gitId":"hanif-kamal"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":167,"author":{"gitId":"hanif-kamal"},"content":"Here are the notes in your list:","lastModifiedDate":"2021-09-17"},{"lineNumber":168,"author":{"gitId":"hanif-kamal"},"content":"1. They got Jackie Chan too he\u0027s doing Shopee ads now | created: 17/09/21 10:00 PM","lastModifiedDate":"2021-09-17"},{"lineNumber":169,"author":{"gitId":"hanif-kamal"},"content":"2. It all started with Cristiano Ronaldo | created: 17/09/21 10:04 PM","lastModifiedDate":"2021-09-17"},{"lineNumber":170,"author":{"gitId":"hanif-kamal"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":171,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":172,"author":{"gitId":"hanif-kamal"},"content":"### `notedelete` - Delete a note in the list","lastModifiedDate":"2021-09-17"},{"lineNumber":173,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":174,"author":{"gitId":"hanif-kamal"},"content":"Deletes a note in the list.","lastModifiedDate":"2021-09-17"},{"lineNumber":175,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":176,"author":{"gitId":"hanif-kamal"},"content":"Format: `notedelete NOTE_INDEX` (Index as a positive integer)","lastModifiedDate":"2021-09-17"},{"lineNumber":177,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":178,"author":{"gitId":"hanif-kamal"},"content":"Example: `notedelete 2`","lastModifiedDate":"2021-09-17"},{"lineNumber":179,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":180,"author":{"gitId":"hanif-kamal"},"content":"Expected outcome: Deletes the 2nd note in the list.","lastModifiedDate":"2021-09-17"},{"lineNumber":181,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":182,"author":{"gitId":"hanif-kamal"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":183,"author":{"gitId":"hanif-kamal"},"content":"Noted. I\u0027ve removed this note:","lastModifiedDate":"2021-09-17"},{"lineNumber":184,"author":{"gitId":"hanif-kamal"},"content":" It all started with Cristiano Ronaldo | created: 17/09/21 10:04 PM","lastModifiedDate":"2021-09-17"},{"lineNumber":185,"author":{"gitId":"hanif-kamal"},"content":"Now you have 1 note in the list.","lastModifiedDate":"2021-09-17"},{"lineNumber":186,"author":{"gitId":"hanif-kamal"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":187,"author":{"gitId":"hanif-kamal"},"content":"### `notefind` - Finds notes in the list matching a search term","lastModifiedDate":"2021-09-17"},{"lineNumber":188,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":189,"author":{"gitId":"hanif-kamal"},"content":"Finds all notes in the list with descriptions that match the given search term. Note that the search term is case-sensitive.","lastModifiedDate":"2021-09-17"},{"lineNumber":190,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":191,"author":{"gitId":"hanif-kamal"},"content":"Format: `notefind SEARCHTERM`","lastModifiedDate":"2021-09-17"},{"lineNumber":192,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":193,"author":{"gitId":"hanif-kamal"},"content":"Example: `notefind Shopee good`","lastModifiedDate":"2021-09-17"},{"lineNumber":194,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":195,"author":{"gitId":"hanif-kamal"},"content":"Expected outcome: Lists all the notes with descriptions that match the given search term.","lastModifiedDate":"2021-09-17"},{"lineNumber":196,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":197,"author":{"gitId":"hanif-kamal"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":198,"author":{"gitId":"hanif-kamal"},"content":"I couldn\u0027t find any notes with that particular search term. Please try again.","lastModifiedDate":"2021-09-17"},{"lineNumber":199,"author":{"gitId":"hanif-kamal"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":200,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"hanif-kamal":184,"-":16}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hanif-kamal"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"hanif-kamal"},"content":"import duke.gui.Main;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"hanif-kamal"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"hanif-kamal"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"hanif-kamal"},"content":" * Represents Duke, an interactive personal assistant bot that can keep track of tasks via text commands.","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"hanif-kamal"},"content":" *","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"hanif-kamal"},"content":" * @author Hanif Kamal","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"hanif-kamal"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"hanif-kamal"},"content":"    private static final String FILEPATH \u003d \"./data/tasks.txt\";","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"hanif-kamal"},"content":"    private static final String NOTE_FILEPATH \u003d \"./data/notes.txt\";","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"hanif-kamal"},"content":"    private final Storage storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"hanif-kamal"},"content":"    private final TaskList list;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"hanif-kamal"},"content":"    private final NoteList noteList;","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"hanif-kamal"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"hanif-kamal"},"content":"     * Class constructor to initialize a Duke instance.","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"hanif-kamal"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"hanif-kamal"},"content":"    public Duke() {","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"hanif-kamal"},"content":"        this.storage \u003d new Storage(FILEPATH, NOTE_FILEPATH);","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"hanif-kamal"},"content":"        this.list \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"hanif-kamal"},"content":"        this.noteList \u003d new NoteList();","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"hanif-kamal"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"hanif-kamal"},"content":"            storage.readTasks(list);","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"hanif-kamal"},"content":"            storage.readNotes(noteList);","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"hanif-kamal"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"hanif-kamal"},"content":"            System.out.println(\"Could not read the following data file: \" + e.getMessage());","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"hanif-kamal"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"hanif-kamal"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"hanif-kamal"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"hanif-kamal"},"content":"     * Starts up Duke to get ready for chatting and task-tracking.","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"hanif-kamal"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"hanif-kamal"},"content":"     * @param input The String input by the user.","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"hanif-kamal"},"content":"     * @return Duke\u0027s response to the user as a String.","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"hanif-kamal"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"hanif-kamal"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"hanif-kamal"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"hanif-kamal"},"content":"            System.exit(0);","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"hanif-kamal"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"hanif-kamal"},"content":"        Parser parser \u003d new Parser(list, noteList);","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"hanif-kamal"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"hanif-kamal"},"content":"            String response \u003d parser.parse(input);","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"hanif-kamal"},"content":"            storage.writeTasks(list);","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"hanif-kamal"},"content":"            storage.writeNotes(noteList);","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"hanif-kamal"},"content":"            return response;","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"hanif-kamal"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"hanif-kamal"},"content":"            return (e.getMessage());","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"hanif-kamal"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":53,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"hanif-kamal"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"hanif-kamal"},"content":"     * Main method to begin Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"hanif-kamal"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":57,"author":{"gitId":"hanif-kamal"},"content":"     * @param args Not used.","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"hanif-kamal"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"hanif-kamal"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"hanif-kamal"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"hanif-kamal"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"hanif-kamal":59,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hanif-kamal"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"hanif-kamal"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"hanif-kamal"},"content":" * Encapsulates exceptions related to Duke, arising from incorrect user inputs.","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"hanif-kamal"},"content":" *","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"hanif-kamal"},"content":" * @author Hanif Kamal","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"hanif-kamal"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"hanif-kamal"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"hanif-kamal"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"hanif-kamal"},"content":"     * Class constructor to initialize a DukeException instance.","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"hanif-kamal"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"hanif-kamal"},"content":"     * @param message An error message prompting the user to correct their inputs.","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"hanif-kamal"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"hanif-kamal"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"hanif-kamal"},"content":"        super(message);","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"hanif-kamal"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"hanif-kamal"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"hanif-kamal":18}},{"path":"src/main/java/duke/Note.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hanif-kamal"},"content":"package duke;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"hanif-kamal"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"hanif-kamal"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"hanif-kamal"},"content":"public class Note {","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"hanif-kamal"},"content":"    private String description;","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"hanif-kamal"},"content":"    private LocalDateTime createdDateTime;","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"hanif-kamal"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"hanif-kamal"},"content":"     * Class constructor.","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"hanif-kamal"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"hanif-kamal"},"content":"     * @param description The description of the Note.","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"hanif-kamal"},"content":"     * @param createdDateTime The LocalDateTime of when the Note was created.","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"hanif-kamal"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"hanif-kamal"},"content":"    public Note(String description, LocalDateTime createdDateTime) {","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"hanif-kamal"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"hanif-kamal"},"content":"        this.createdDateTime \u003d createdDateTime;","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"hanif-kamal"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"hanif-kamal"},"content":"    public String getNoteDescription() {","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"hanif-kamal"},"content":"        return this.description;","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"hanif-kamal"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"hanif-kamal"},"content":"    @Override","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"hanif-kamal"},"content":"    public String toString() {","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"hanif-kamal"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"dd/MM/yy hh:mm a\");","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"hanif-kamal"},"content":"        return this.description + \" | created: \" + this.createdDateTime.format(dtf);","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"hanif-kamal"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"hanif-kamal"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"hanif-kamal":30}},{"path":"src/main/java/duke/NoteList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hanif-kamal"},"content":"package duke;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"hanif-kamal"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"hanif-kamal"},"content":"/**","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"hanif-kamal"},"content":" * Encapsulates a list of Notes that the user n, with relevant processing methods.","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"hanif-kamal"},"content":" *","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"hanif-kamal"},"content":" * @author Hanif Kamal","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"hanif-kamal"},"content":" */","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"hanif-kamal"},"content":"public class NoteList {","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"hanif-kamal"},"content":"    private final ArrayList\u003cNote\u003e list;","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"hanif-kamal"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"hanif-kamal"},"content":"     * Class constructor to initialize the NoteList instance.","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"hanif-kamal"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"hanif-kamal"},"content":"    public NoteList() {","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"hanif-kamal"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"hanif-kamal"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"hanif-kamal"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"hanif-kamal"},"content":"     * Adds the given Note to the NoteList.","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"hanif-kamal"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"hanif-kamal"},"content":"     * @param note The Note to be added to the NoteList.","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"hanif-kamal"},"content":"     * @return A String that acts as a confirmation message by Duke for a successfully added Note.","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"hanif-kamal"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"hanif-kamal"},"content":"    public String addToList(Note note) {","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"hanif-kamal"},"content":"        this.list.add(note);","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"hanif-kamal"},"content":"        assert !list.isEmpty() : \"The Note did not get added!\";","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"hanif-kamal"},"content":"        return (\"Got it. I\u0027ve added this note:\\n\" + \"  \" + note.toString() + \"\\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"hanif-kamal"},"content":"                + \"Now you have \" + list.size() + \" note\" + (list.size() \u003d\u003d 1 ? \"\" : \"s\")","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"hanif-kamal"},"content":"                + \" in the list.\");","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"hanif-kamal"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"hanif-kamal"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"hanif-kamal"},"content":"     * Returns, as a String, all Notes in the NoteList for the user.","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"hanif-kamal"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"hanif-kamal"},"content":"     * @return A String that lists out all the Notes in the NoteList.","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"hanif-kamal"},"content":"     * @throws DukeException In the case where the NoteList is empty.","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"hanif-kamal"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"hanif-kamal"},"content":"    public String printNotes() throws DukeException {","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"hanif-kamal"},"content":"        if (this.list.size() \u003c 1) {","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"hanif-kamal"},"content":"            throw new DukeException(\"You haven\u0027t added any notes to the list yet! Please add a note.\");","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"hanif-kamal"},"content":"        } else {","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"hanif-kamal"},"content":"            assert !list.isEmpty() : \"NoteList should not be empty, tried to print!\";","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"hanif-kamal"},"content":"            String noteQuantifier;","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"hanif-kamal"},"content":"            if (this.list.size() \u003d\u003d 1) {","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"hanif-kamal"},"content":"                noteQuantifier \u003d \"Here is the sole note in your list:\";","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"hanif-kamal"},"content":"            } else {","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"hanif-kamal"},"content":"                noteQuantifier \u003d \"Here are the notes in your list:\";","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"hanif-kamal"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"hanif-kamal"},"content":"            String notes \u003d \"\";","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"hanif-kamal"},"content":"            for (int i \u003d 1; i \u003c\u003d list.size(); i++) {","lastModifiedDate":"2021-09-07"},{"lineNumber":53,"author":{"gitId":"hanif-kamal"},"content":"                notes \u003d notes + (\"\\n\" + i + \". \" + list.get(i - 1));","lastModifiedDate":"2021-09-07"},{"lineNumber":54,"author":{"gitId":"hanif-kamal"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":55,"author":{"gitId":"hanif-kamal"},"content":"            return noteQuantifier + notes;","lastModifiedDate":"2021-09-07"},{"lineNumber":56,"author":{"gitId":"hanif-kamal"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":57,"author":{"gitId":"hanif-kamal"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":58,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":59,"author":{"gitId":"hanif-kamal"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":60,"author":{"gitId":"hanif-kamal"},"content":"     * Looks up the Note at the given index in the NoteList and removes the Note from the list.","lastModifiedDate":"2021-09-07"},{"lineNumber":61,"author":{"gitId":"hanif-kamal"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":62,"author":{"gitId":"hanif-kamal"},"content":"     * @param index The index of the Note, to be deleted, in the NoteList.","lastModifiedDate":"2021-09-07"},{"lineNumber":63,"author":{"gitId":"hanif-kamal"},"content":"     * @return A String that acts as a confirmation message by Duke for a successfully deleted Note.","lastModifiedDate":"2021-09-07"},{"lineNumber":64,"author":{"gitId":"hanif-kamal"},"content":"     * @throws DukeException In the case where the NoteList is empty, or the index is out of bounds.","lastModifiedDate":"2021-09-07"},{"lineNumber":65,"author":{"gitId":"hanif-kamal"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":66,"author":{"gitId":"hanif-kamal"},"content":"    public String deleteNote(int index) throws DukeException {","lastModifiedDate":"2021-09-07"},{"lineNumber":67,"author":{"gitId":"hanif-kamal"},"content":"        if (this.list.size() \u003c 1) {","lastModifiedDate":"2021-09-07"},{"lineNumber":68,"author":{"gitId":"hanif-kamal"},"content":"            throw new DukeException(\"You haven\u0027t added any notes to the list yet! Please add notes before\"","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"hanif-kamal"},"content":"                    + \" deleting.\");","lastModifiedDate":"2021-09-07"},{"lineNumber":70,"author":{"gitId":"hanif-kamal"},"content":"        } else if (index \u003c\u003d this.list.size() \u0026\u0026 index \u003e\u003d 1) {","lastModifiedDate":"2021-09-07"},{"lineNumber":71,"author":{"gitId":"hanif-kamal"},"content":"            assert !list.isEmpty() : \"NoteList should not be empty, tried to delete!\";","lastModifiedDate":"2021-09-07"},{"lineNumber":72,"author":{"gitId":"hanif-kamal"},"content":"            Note toDelete \u003d list.get(index - 1);","lastModifiedDate":"2021-09-07"},{"lineNumber":73,"author":{"gitId":"hanif-kamal"},"content":"            list.remove(index - 1);","lastModifiedDate":"2021-09-07"},{"lineNumber":74,"author":{"gitId":"hanif-kamal"},"content":"            return (\"Noted. I\u0027ve removed this note:\\n\" + \"  \" + toDelete + \"\\n\" + \"Now you have \"","lastModifiedDate":"2021-09-07"},{"lineNumber":75,"author":{"gitId":"hanif-kamal"},"content":"                    + list.size() + \" note\" + (list.size() \u003d\u003d 1 ? \"\" : \"s\") + \" in the list.\");","lastModifiedDate":"2021-09-07"},{"lineNumber":76,"author":{"gitId":"hanif-kamal"},"content":"        } else {","lastModifiedDate":"2021-09-07"},{"lineNumber":77,"author":{"gitId":"hanif-kamal"},"content":"            throw new DukeException(\"Couldn\u0027t find that note in the list! Please ensure that the index is valid. \"","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"hanif-kamal"},"content":"                    + \"Try again.\");","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"hanif-kamal"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":80,"author":{"gitId":"hanif-kamal"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":81,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":82,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":83,"author":{"gitId":"hanif-kamal"},"content":"    public int size() {","lastModifiedDate":"2021-09-07"},{"lineNumber":84,"author":{"gitId":"hanif-kamal"},"content":"        return this.list.size();","lastModifiedDate":"2021-09-07"},{"lineNumber":85,"author":{"gitId":"hanif-kamal"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":86,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":87,"author":{"gitId":"hanif-kamal"},"content":"    public Note getNote(int index) {","lastModifiedDate":"2021-09-07"},{"lineNumber":88,"author":{"gitId":"hanif-kamal"},"content":"        return this.list.get(index);","lastModifiedDate":"2021-09-07"},{"lineNumber":89,"author":{"gitId":"hanif-kamal"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":90,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":91,"author":{"gitId":"hanif-kamal"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":92,"author":{"gitId":"hanif-kamal"},"content":"     * Prints a NoteList that is filtered such that it only consists of Notes that contain the given search term.","lastModifiedDate":"2021-09-07"},{"lineNumber":93,"author":{"gitId":"hanif-kamal"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":94,"author":{"gitId":"hanif-kamal"},"content":"     * @param searchTerm The given search term to narrow down the Notes in the NoteList.","lastModifiedDate":"2021-09-07"},{"lineNumber":95,"author":{"gitId":"hanif-kamal"},"content":"     * @return A String that lists out all the Notes that match the search term in the NoteList.","lastModifiedDate":"2021-09-07"},{"lineNumber":96,"author":{"gitId":"hanif-kamal"},"content":"     * @throws DukeException In the case where no Notes matching the search term can be found.","lastModifiedDate":"2021-09-07"},{"lineNumber":97,"author":{"gitId":"hanif-kamal"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":98,"author":{"gitId":"hanif-kamal"},"content":"    public String printFilteredNotes(String searchTerm) throws DukeException {","lastModifiedDate":"2021-09-07"},{"lineNumber":99,"author":{"gitId":"hanif-kamal"},"content":"        ArrayList\u003cNote\u003e filteredList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-07"},{"lineNumber":100,"author":{"gitId":"hanif-kamal"},"content":"        for (Note note : list) {","lastModifiedDate":"2021-09-07"},{"lineNumber":101,"author":{"gitId":"hanif-kamal"},"content":"            if (note.getNoteDescription().contains(searchTerm)) {","lastModifiedDate":"2021-09-07"},{"lineNumber":102,"author":{"gitId":"hanif-kamal"},"content":"                filteredList.add(note);","lastModifiedDate":"2021-09-07"},{"lineNumber":103,"author":{"gitId":"hanif-kamal"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":104,"author":{"gitId":"hanif-kamal"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":105,"author":{"gitId":"hanif-kamal"},"content":"        if (filteredList.size() \u003c 1) {","lastModifiedDate":"2021-09-07"},{"lineNumber":106,"author":{"gitId":"hanif-kamal"},"content":"            throw new DukeException(\"I couldn\u0027t find any notes with that particular search term. Please try again.\");","lastModifiedDate":"2021-09-17"},{"lineNumber":107,"author":{"gitId":"hanif-kamal"},"content":"        } else {","lastModifiedDate":"2021-09-07"},{"lineNumber":108,"author":{"gitId":"hanif-kamal"},"content":"            assert !filteredList.isEmpty() : \"Filtered NoteList should not be empty, tried to print!\";","lastModifiedDate":"2021-09-07"},{"lineNumber":109,"author":{"gitId":"hanif-kamal"},"content":"            assert filteredList.size() \u003c\u003d list.size() : \"Filtered NoteList should not be larger than original list!\";","lastModifiedDate":"2021-09-07"},{"lineNumber":110,"author":{"gitId":"hanif-kamal"},"content":"            String filteredNoteQuantifier;","lastModifiedDate":"2021-09-07"},{"lineNumber":111,"author":{"gitId":"hanif-kamal"},"content":"            if (filteredList.size() \u003d\u003d 1) {","lastModifiedDate":"2021-09-07"},{"lineNumber":112,"author":{"gitId":"hanif-kamal"},"content":"                filteredNoteQuantifier \u003d \"Here is the sole matching note in your list:\";","lastModifiedDate":"2021-09-07"},{"lineNumber":113,"author":{"gitId":"hanif-kamal"},"content":"            } else {","lastModifiedDate":"2021-09-07"},{"lineNumber":114,"author":{"gitId":"hanif-kamal"},"content":"                filteredNoteQuantifier \u003d \"Here are the matching notes in your list:\";","lastModifiedDate":"2021-09-07"},{"lineNumber":115,"author":{"gitId":"hanif-kamal"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":116,"author":{"gitId":"hanif-kamal"},"content":"            String filteredNotes \u003d \"\";","lastModifiedDate":"2021-09-07"},{"lineNumber":117,"author":{"gitId":"hanif-kamal"},"content":"            for (int i \u003d 1; i \u003c\u003d filteredList.size(); i++) {","lastModifiedDate":"2021-09-17"},{"lineNumber":118,"author":{"gitId":"hanif-kamal"},"content":"                filteredNotes \u003d filteredNotes + (\"\\n\" + i + \". \" + filteredList.get(i - 1));","lastModifiedDate":"2021-09-07"},{"lineNumber":119,"author":{"gitId":"hanif-kamal"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":120,"author":{"gitId":"hanif-kamal"},"content":"            return filteredNoteQuantifier + filteredNotes;","lastModifiedDate":"2021-09-07"},{"lineNumber":121,"author":{"gitId":"hanif-kamal"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":122,"author":{"gitId":"hanif-kamal"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":123,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":124,"author":{"gitId":"hanif-kamal"},"content":"}","lastModifiedDate":"2021-09-07"},{"lineNumber":125,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"hanif-kamal":125}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hanif-kamal"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"hanif-kamal"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"hanif-kamal"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"hanif-kamal"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"hanif-kamal"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"hanif-kamal"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"hanif-kamal"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"hanif-kamal"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"hanif-kamal"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"hanif-kamal"},"content":" * Encapsulates a Parser, which parses user inputs, interprets them as commands and","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"hanif-kamal"},"content":" * updates the TaskList.","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"hanif-kamal"},"content":" *","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"hanif-kamal"},"content":" * @author Hanif Kamal","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"hanif-kamal"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"hanif-kamal"},"content":"public class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"hanif-kamal"},"content":"    /** The TaskList that the Parser updates after command interpretation */","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"hanif-kamal"},"content":"    private TaskList list;","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"hanif-kamal"},"content":"    private NoteList noteList;","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"hanif-kamal"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"hanif-kamal"},"content":"     * Class constructor to initialize a Parser instance.","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"hanif-kamal"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"hanif-kamal"},"content":"     * @param list The TaskList that is to be updated.","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"hanif-kamal"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"hanif-kamal"},"content":"    public Parser(TaskList list, NoteList noteList) {","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"hanif-kamal"},"content":"        this.list \u003d list;","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"hanif-kamal"},"content":"        this.noteList \u003d noteList;","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"hanif-kamal"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"hanif-kamal"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"hanif-kamal"},"content":"     * Takes in a String which represents user input, and parses it. It executes the","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"hanif-kamal"},"content":"     * interpreted commands and then updates the TaskList accordingly.","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"hanif-kamal"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"hanif-kamal"},"content":"     * @param input The String that is input by the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"hanif-kamal"},"content":"     * @throws DukeException In the case of invalid inputs.","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"hanif-kamal"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"hanif-kamal"},"content":"    public String parse(String input) throws DukeException {","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"hanif-kamal"},"content":"        String[] words \u003d input.split(\" \", 2);","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"hanif-kamal"},"content":"        String command \u003d words[0];","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"hanif-kamal"},"content":"        if (words.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"hanif-kamal"},"content":"            return checkCase(command);","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"hanif-kamal"},"content":"        } else {","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"hanif-kamal"},"content":"            String commandInfo \u003d words[1];","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"hanif-kamal"},"content":"            return executeCases(command, commandInfo);","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"hanif-kamal"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"hanif-kamal"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"hanif-kamal"},"content":"    private String checkCase(String command) throws DukeException {","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"hanif-kamal"},"content":"        switch (command) {","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"hanif-kamal"},"content":"        case (\"list\"):","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"hanif-kamal"},"content":"            return list.printTasks();","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"hanif-kamal"},"content":"        case (\"notelist\"):","lastModifiedDate":"2021-09-07"},{"lineNumber":56,"author":{"gitId":"hanif-kamal"},"content":"            return noteList.printNotes();","lastModifiedDate":"2021-09-07"},{"lineNumber":57,"author":{"gitId":"hanif-kamal"},"content":"        case (\"done\"):","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"hanif-kamal"},"content":"            throw new DukeException(\"Please ensure that there is a number after the command \u0027done\u0027. Try again.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"hanif-kamal"},"content":"        case (\"deadline\"):","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"hanif-kamal"},"content":"            throw new DukeException(\"Please ensure that there is a task description after the command \u0027deadline\u0027, \"","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"hanif-kamal"},"content":"                    + \"and a deadline after \u0027/by\u0027. Try again.\");","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"hanif-kamal"},"content":"        case (\"event\"):","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"hanif-kamal"},"content":"            throw new DukeException(\"Please ensure that there is a task description after the command \u0027event\u0027, \"","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"hanif-kamal"},"content":"                    + \"and a date and time after \u0027/at\u0027. Try again.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"hanif-kamal"},"content":"        case (\"todo\"):","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"hanif-kamal"},"content":"            throw new DukeException(\"Please ensure that there is a task description after the command \u0027todo\u0027. \"","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"hanif-kamal"},"content":"                    + \"Try again.\");","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"hanif-kamal"},"content":"        case (\"delete\"):","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"hanif-kamal"},"content":"            throw new DukeException(\"Please ensure that there is a number after the command \u0027delete\u0027. Try again.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"hanif-kamal"},"content":"        case (\"notedelete\"):","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"hanif-kamal"},"content":"            throw new DukeException(\"Please ensure that there is a number after the command \u0027notedelete\u0027. \"","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"hanif-kamal"},"content":"                    + \"Try again.\");","lastModifiedDate":"2021-09-07"},{"lineNumber":73,"author":{"gitId":"hanif-kamal"},"content":"        case (\"find\"):","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"hanif-kamal"},"content":"            throw new DukeException(\"Please ensure that there is a search term after the command \u0027find\u0027. \"","lastModifiedDate":"2021-08-29"},{"lineNumber":75,"author":{"gitId":"hanif-kamal"},"content":"                    + \"Try again.\");","lastModifiedDate":"2021-08-29"},{"lineNumber":76,"author":{"gitId":"hanif-kamal"},"content":"        case (\"notefind\"):","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"hanif-kamal"},"content":"            throw new DukeException(\"Please ensure that there is a search term after the command \u0027notefind\u0027. \"","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"hanif-kamal"},"content":"                    + \"Try again.\");","lastModifiedDate":"2021-09-07"},{"lineNumber":79,"author":{"gitId":"hanif-kamal"},"content":"        case (\"note\"):","lastModifiedDate":"2021-09-07"},{"lineNumber":80,"author":{"gitId":"hanif-kamal"},"content":"            throw new DukeException(\"Please ensure that there is a note description after the command \u0027note\u0027. \"","lastModifiedDate":"2021-09-07"},{"lineNumber":81,"author":{"gitId":"hanif-kamal"},"content":"                    + \"Try again.\");","lastModifiedDate":"2021-09-07"},{"lineNumber":82,"author":{"gitId":"hanif-kamal"},"content":"        default:","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"hanif-kamal"},"content":"            throw new DukeException(\"I didn\u0027t quite get what you meant. Please enter a valid command.\");","lastModifiedDate":"2021-09-17"},{"lineNumber":84,"author":{"gitId":"hanif-kamal"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"hanif-kamal"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"hanif-kamal"},"content":"    private String executeCases(String command, String commandInfo) throws DukeException {","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"hanif-kamal"},"content":"        switch (command) {","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"hanif-kamal"},"content":"        case (\"done\"):","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"hanif-kamal"},"content":"            return handleDone(commandInfo);","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"hanif-kamal"},"content":"        case (\"deadline\"):","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"hanif-kamal"},"content":"            return handleDeadline(commandInfo);","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"hanif-kamal"},"content":"        case (\"event\"):","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"hanif-kamal"},"content":"            return handleEvent(commandInfo);","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"hanif-kamal"},"content":"        case (\"todo\"):","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"hanif-kamal"},"content":"            return handleTodo(commandInfo);","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"hanif-kamal"},"content":"        case (\"note\"):","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"hanif-kamal"},"content":"            return handleNote(commandInfo);","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"hanif-kamal"},"content":"        case (\"delete\"):","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"hanif-kamal"},"content":"            return handleDelete(commandInfo);","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"hanif-kamal"},"content":"        case (\"notedelete\"):","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"hanif-kamal"},"content":"            return handleNoteDelete(commandInfo);","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"hanif-kamal"},"content":"        case (\"find\"):","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"hanif-kamal"},"content":"            return list.printFilteredTasks(commandInfo);","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"hanif-kamal"},"content":"        case (\"notefind\"):","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"hanif-kamal"},"content":"            return noteList.printFilteredNotes(commandInfo);","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"hanif-kamal"},"content":"        default:","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"hanif-kamal"},"content":"            throw new DukeException(\"I didn\u0027t quite get what you meant. Please enter a valid command.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"hanif-kamal"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"hanif-kamal"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"hanif-kamal"},"content":"    private String handleDone(String listIndexString) throws DukeException {","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"hanif-kamal"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"hanif-kamal"},"content":"            int listIndex \u003d Integer.parseInt(listIndexString);","lastModifiedDate":"2021-08-26"},{"lineNumber":115,"author":{"gitId":"hanif-kamal"},"content":"            if (listIndex \u003c\u003d list.size() \u0026\u0026 listIndex \u003e\u003d 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"hanif-kamal"},"content":"                return list.completeTask(listIndex);","lastModifiedDate":"2021-08-31"},{"lineNumber":117,"author":{"gitId":"hanif-kamal"},"content":"            } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"hanif-kamal"},"content":"                throw new DukeException(\"Please ensure that a valid number follows the command \u0027done\u0027. \"","lastModifiedDate":"2021-08-29"},{"lineNumber":119,"author":{"gitId":"hanif-kamal"},"content":"                        + \"Try again.\");","lastModifiedDate":"2021-08-29"},{"lineNumber":120,"author":{"gitId":"hanif-kamal"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"hanif-kamal"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"hanif-kamal"},"content":"            throw new DukeException(\"Please ensure only a number follows the command \u0027done\u0027. Try again.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":123,"author":{"gitId":"hanif-kamal"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"hanif-kamal"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"hanif-kamal"},"content":"    private String handleDeadline(String deadlineInfo) throws DukeException {","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"hanif-kamal"},"content":"        if (!deadlineInfo.contains(\"/by\")) {","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"hanif-kamal"},"content":"            throw new DukeException(\"Please state the deadline for this task with /by! Try again.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"hanif-kamal"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"hanif-kamal"},"content":"            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"hanif-kamal"},"content":"                String[] restOfDeadlineSplit \u003d deadlineInfo.split(\" /by \", 2);","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"hanif-kamal"},"content":"                if (restOfDeadlineSplit.length \u003c 2) {","lastModifiedDate":"2021-08-26"},{"lineNumber":133,"author":{"gitId":"hanif-kamal"},"content":"                    throw new DukeException(\"Please ensure that there is a task description and deadline. \"","lastModifiedDate":"2021-08-29"},{"lineNumber":134,"author":{"gitId":"hanif-kamal"},"content":"                            + \"Try again\");","lastModifiedDate":"2021-08-29"},{"lineNumber":135,"author":{"gitId":"hanif-kamal"},"content":"                }","lastModifiedDate":"2021-08-26"},{"lineNumber":136,"author":{"gitId":"hanif-kamal"},"content":"                assert restOfDeadlineSplit.length \u003d\u003d 2 : \"Deadline should not have anything other than\"","lastModifiedDate":"2021-09-05"},{"lineNumber":137,"author":{"gitId":"hanif-kamal"},"content":"                        + \" exactly 2 parts!\";","lastModifiedDate":"2021-09-05"},{"lineNumber":138,"author":{"gitId":"hanif-kamal"},"content":"                String deadlineDescription \u003d restOfDeadlineSplit[0];","lastModifiedDate":"2021-08-26"},{"lineNumber":139,"author":{"gitId":"hanif-kamal"},"content":"                String deadlineDateString \u003d restOfDeadlineSplit[1];","lastModifiedDate":"2021-08-26"},{"lineNumber":140,"author":{"gitId":"hanif-kamal"},"content":"                DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"dd/MM/yy\");","lastModifiedDate":"2021-08-24"},{"lineNumber":141,"author":{"gitId":"hanif-kamal"},"content":"                LocalDate deadlineDate \u003d LocalDate.parse(deadlineDateString, dtf);","lastModifiedDate":"2021-08-26"},{"lineNumber":142,"author":{"gitId":"hanif-kamal"},"content":"                Deadline createdDeadlineTask \u003d new Deadline(deadlineDescription, false, deadlineDate);","lastModifiedDate":"2021-08-26"},{"lineNumber":143,"author":{"gitId":"hanif-kamal"},"content":"                return list.addToList(createdDeadlineTask);","lastModifiedDate":"2021-08-31"},{"lineNumber":144,"author":{"gitId":"hanif-kamal"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":145,"author":{"gitId":"hanif-kamal"},"content":"                throw new DukeException(\"Please ensure that your deadline is formatted in the following \"","lastModifiedDate":"2021-08-29"},{"lineNumber":146,"author":{"gitId":"hanif-kamal"},"content":"                        + \"way: DD/MM/YY\");","lastModifiedDate":"2021-08-29"},{"lineNumber":147,"author":{"gitId":"hanif-kamal"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":148,"author":{"gitId":"hanif-kamal"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":149,"author":{"gitId":"hanif-kamal"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":150,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":151,"author":{"gitId":"hanif-kamal"},"content":"    private String handleEvent(String eventInfo) throws DukeException {","lastModifiedDate":"2021-10-12"},{"lineNumber":152,"author":{"gitId":"hanif-kamal"},"content":"        if (!eventInfo.contains(\"/at\")) {","lastModifiedDate":"2021-10-12"},{"lineNumber":153,"author":{"gitId":"hanif-kamal"},"content":"            throw new DukeException(\"Please state the date and time for this event with /at! Try again.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"hanif-kamal"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":155,"author":{"gitId":"hanif-kamal"},"content":"            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":156,"author":{"gitId":"hanif-kamal"},"content":"                String[] restOfEventSplit \u003d eventInfo.split(\" /at \", 2);","lastModifiedDate":"2021-10-12"},{"lineNumber":157,"author":{"gitId":"hanif-kamal"},"content":"                if (restOfEventSplit.length \u003c 2) {","lastModifiedDate":"2021-08-26"},{"lineNumber":158,"author":{"gitId":"hanif-kamal"},"content":"                    throw new DukeException(\"Please ensure that there is a task description with a date and \"","lastModifiedDate":"2021-08-29"},{"lineNumber":159,"author":{"gitId":"hanif-kamal"},"content":"                            + \"time for this event. Try again\");","lastModifiedDate":"2021-10-12"},{"lineNumber":160,"author":{"gitId":"hanif-kamal"},"content":"                }","lastModifiedDate":"2021-08-26"},{"lineNumber":161,"author":{"gitId":"hanif-kamal"},"content":"                assert restOfEventSplit.length \u003d\u003d 2 : \"Event should not have anything other than \"","lastModifiedDate":"2021-09-05"},{"lineNumber":162,"author":{"gitId":"hanif-kamal"},"content":"                        + \"exactly 2 parts!\";","lastModifiedDate":"2021-09-05"},{"lineNumber":163,"author":{"gitId":"hanif-kamal"},"content":"                LocalDateTime eventDateTime \u003d LocalDateTime.parse(restOfEventSplit[1],","lastModifiedDate":"2021-10-12"},{"lineNumber":164,"author":{"gitId":"hanif-kamal"},"content":"                        DateTimeFormatter.ofPattern(\"dd/MM/yy HHmm\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":165,"author":{"gitId":"hanif-kamal"},"content":"                Event createdEventTask \u003d new Event(restOfEventSplit[0], false, eventDateTime);","lastModifiedDate":"2021-10-12"},{"lineNumber":166,"author":{"gitId":"hanif-kamal"},"content":"                return list.addToList(createdEventTask);","lastModifiedDate":"2021-08-31"},{"lineNumber":167,"author":{"gitId":"hanif-kamal"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":168,"author":{"gitId":"hanif-kamal"},"content":"                throw new DukeException(\"Please ensure that your deadline is formatted as DD/MM/YY\");","lastModifiedDate":"2021-10-12"},{"lineNumber":169,"author":{"gitId":"hanif-kamal"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":170,"author":{"gitId":"hanif-kamal"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":171,"author":{"gitId":"hanif-kamal"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":172,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":173,"author":{"gitId":"hanif-kamal"},"content":"    private String handleTodo(String todoInfo) {","lastModifiedDate":"2021-10-12"},{"lineNumber":174,"author":{"gitId":"hanif-kamal"},"content":"        Todo createdTodoTask \u003d new Todo(todoInfo, false);","lastModifiedDate":"2021-10-12"},{"lineNumber":175,"author":{"gitId":"hanif-kamal"},"content":"        return list.addToList(createdTodoTask);","lastModifiedDate":"2021-08-31"},{"lineNumber":176,"author":{"gitId":"hanif-kamal"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":177,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":178,"author":{"gitId":"hanif-kamal"},"content":"    private String handleNote(String noteInfo) {","lastModifiedDate":"2021-10-12"},{"lineNumber":179,"author":{"gitId":"hanif-kamal"},"content":"        Note createdNote \u003d new Note(noteInfo, LocalDateTime.now());","lastModifiedDate":"2021-10-12"},{"lineNumber":180,"author":{"gitId":"hanif-kamal"},"content":"        return noteList.addToList(createdNote);","lastModifiedDate":"2021-09-07"},{"lineNumber":181,"author":{"gitId":"hanif-kamal"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":182,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":183,"author":{"gitId":"hanif-kamal"},"content":"    private String handleDelete(String toDeleteIndexString) throws DukeException {","lastModifiedDate":"2021-10-12"},{"lineNumber":184,"author":{"gitId":"hanif-kamal"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":185,"author":{"gitId":"hanif-kamal"},"content":"            int toDeleteIndex \u003d Integer.parseInt(toDeleteIndexString);","lastModifiedDate":"2021-08-26"},{"lineNumber":186,"author":{"gitId":"hanif-kamal"},"content":"            return list.deleteTask(toDeleteIndex);","lastModifiedDate":"2021-08-31"},{"lineNumber":187,"author":{"gitId":"hanif-kamal"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":188,"author":{"gitId":"hanif-kamal"},"content":"            throw new DukeException(\"Please make sure only a number follows the command \u0027delete\u0027. \"","lastModifiedDate":"2021-08-29"},{"lineNumber":189,"author":{"gitId":"hanif-kamal"},"content":"                    + \"Try again.\");","lastModifiedDate":"2021-08-29"},{"lineNumber":190,"author":{"gitId":"hanif-kamal"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":191,"author":{"gitId":"hanif-kamal"},"content":"            throw new DukeException(\"Please add a number after the command \u0027delete\u0027. Try again.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":192,"author":{"gitId":"hanif-kamal"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":193,"author":{"gitId":"hanif-kamal"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":194,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":195,"author":{"gitId":"hanif-kamal"},"content":"    private String handleNoteDelete(String toDeleteNoteIndexString) throws DukeException {","lastModifiedDate":"2021-10-12"},{"lineNumber":196,"author":{"gitId":"hanif-kamal"},"content":"        try {","lastModifiedDate":"2021-09-07"},{"lineNumber":197,"author":{"gitId":"hanif-kamal"},"content":"            int toDeleteNoteIndex \u003d Integer.parseInt(toDeleteNoteIndexString);","lastModifiedDate":"2021-09-07"},{"lineNumber":198,"author":{"gitId":"hanif-kamal"},"content":"            return noteList.deleteNote(toDeleteNoteIndex);","lastModifiedDate":"2021-09-07"},{"lineNumber":199,"author":{"gitId":"hanif-kamal"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":200,"author":{"gitId":"hanif-kamal"},"content":"            throw new DukeException(\"Please make sure only a number follows the command \u0027notedelete\u0027. \"","lastModifiedDate":"2021-09-17"},{"lineNumber":201,"author":{"gitId":"hanif-kamal"},"content":"                    + \"Try again.\");","lastModifiedDate":"2021-09-07"},{"lineNumber":202,"author":{"gitId":"hanif-kamal"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":203,"author":{"gitId":"hanif-kamal"},"content":"            throw new DukeException(\"Please add a number after the command \u0027notedelete\u0027. Try again.\");","lastModifiedDate":"2021-09-17"},{"lineNumber":204,"author":{"gitId":"hanif-kamal"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":205,"author":{"gitId":"hanif-kamal"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":206,"author":{"gitId":"hanif-kamal"},"content":"}","lastModifiedDate":"2021-08-26"},{"lineNumber":207,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"hanif-kamal":207}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hanif-kamal"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"hanif-kamal"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"hanif-kamal"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"hanif-kamal"},"content":"import java.io.File;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"hanif-kamal"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"hanif-kamal"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"hanif-kamal"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"hanif-kamal"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"hanif-kamal"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"hanif-kamal"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"hanif-kamal"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"hanif-kamal"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"hanif-kamal"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"hanif-kamal"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"hanif-kamal"},"content":" * Encapsulates a class that handles saving to and loading from the text file that contains task data.","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"hanif-kamal"},"content":" *","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"hanif-kamal"},"content":" * @author Hanif Kamal","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"hanif-kamal"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"hanif-kamal"},"content":"public class Storage {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"hanif-kamal"},"content":"    /** A String representation of the location of the text file as a file path. */","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"hanif-kamal"},"content":"    private final String filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"hanif-kamal"},"content":"    private final String noteFilePath;","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"hanif-kamal"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"hanif-kamal"},"content":"     * Class constructor.","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"hanif-kamal"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"hanif-kamal"},"content":"     * @param filePath A String representation of the location of the text file as a file path.","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"hanif-kamal"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"hanif-kamal"},"content":"    public Storage(String filePath, String noteFilePath) {","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"hanif-kamal"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"hanif-kamal"},"content":"        this.noteFilePath \u003d noteFilePath;","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"hanif-kamal"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"hanif-kamal"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"hanif-kamal"},"content":"     * Writes Task data from the TaskList to the text file, line by line.","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"hanif-kamal"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"hanif-kamal"},"content":"     * @param list The TaskList from which Task data is used to write to the text file.","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"hanif-kamal"},"content":"     * @throws DukeException In the case where the file is corrupted or cannot be located.","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"hanif-kamal"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"hanif-kamal"},"content":"    public void writeTasks(TaskList list) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"hanif-kamal"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"hanif-kamal"},"content":"            BufferedWriter bw \u003d new BufferedWriter(new FileWriter(filePath));","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"hanif-kamal"},"content":"            for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"hanif-kamal"},"content":"                bw.write(list.getTask(i).toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"hanif-kamal"},"content":"                bw.newLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"hanif-kamal"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"hanif-kamal"},"content":"            bw.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"hanif-kamal"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"hanif-kamal"},"content":"            throw new DukeException(\"Error upon writing to Task data file: \" + e.getMessage());","lastModifiedDate":"2021-09-07"},{"lineNumber":53,"author":{"gitId":"hanif-kamal"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":54,"author":{"gitId":"hanif-kamal"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":55,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":56,"author":{"gitId":"hanif-kamal"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":57,"author":{"gitId":"hanif-kamal"},"content":"     * Writes Note data from the NoteList to the text file, line by line.","lastModifiedDate":"2021-09-07"},{"lineNumber":58,"author":{"gitId":"hanif-kamal"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":59,"author":{"gitId":"hanif-kamal"},"content":"     * @param noteList The NoteList from which Note data is used to write to the text file.","lastModifiedDate":"2021-09-07"},{"lineNumber":60,"author":{"gitId":"hanif-kamal"},"content":"     * @throws DukeException In the case where the file is corrupted or cannot be located.","lastModifiedDate":"2021-09-07"},{"lineNumber":61,"author":{"gitId":"hanif-kamal"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":62,"author":{"gitId":"hanif-kamal"},"content":"    public void writeNotes(NoteList noteList) throws DukeException {","lastModifiedDate":"2021-09-07"},{"lineNumber":63,"author":{"gitId":"hanif-kamal"},"content":"        try {","lastModifiedDate":"2021-09-07"},{"lineNumber":64,"author":{"gitId":"hanif-kamal"},"content":"            BufferedWriter nbw \u003d new BufferedWriter(new FileWriter(noteFilePath));","lastModifiedDate":"2021-09-07"},{"lineNumber":65,"author":{"gitId":"hanif-kamal"},"content":"            for (int i \u003d 0; i \u003c noteList.size(); i++) {","lastModifiedDate":"2021-09-07"},{"lineNumber":66,"author":{"gitId":"hanif-kamal"},"content":"                nbw.write(noteList.getNote(i).toString());","lastModifiedDate":"2021-09-07"},{"lineNumber":67,"author":{"gitId":"hanif-kamal"},"content":"                nbw.newLine();","lastModifiedDate":"2021-09-07"},{"lineNumber":68,"author":{"gitId":"hanif-kamal"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":69,"author":{"gitId":"hanif-kamal"},"content":"            nbw.close();","lastModifiedDate":"2021-09-07"},{"lineNumber":70,"author":{"gitId":"hanif-kamal"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":71,"author":{"gitId":"hanif-kamal"},"content":"            throw new DukeException(\"Error upon writing to Note data file: \" + e.getMessage());","lastModifiedDate":"2021-09-07"},{"lineNumber":72,"author":{"gitId":"hanif-kamal"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"hanif-kamal"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"hanif-kamal"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"hanif-kamal"},"content":"     * Reads a text file, line by line. Parses the lines into task data, and adds it to the given TaskList.","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"hanif-kamal"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"hanif-kamal"},"content":"     * @param list An empty TaskList to be filled with tasks, as parsed from the text file","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"hanif-kamal"},"content":"     * @throws DukeException In the case where the file is corrupted or cannot be located.","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"hanif-kamal"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"hanif-kamal"},"content":"    public void readTasks(TaskList list) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"hanif-kamal"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"hanif-kamal"},"content":"        file.getParentFile().mkdirs();","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"hanif-kamal"},"content":"        if (!file.exists()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"hanif-kamal"},"content":"            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"hanif-kamal"},"content":"                file.createNewFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"hanif-kamal"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"hanif-kamal"},"content":"                throw new DukeException(\"Error upon creating Task data file: \" + e.getMessage());","lastModifiedDate":"2021-09-07"},{"lineNumber":89,"author":{"gitId":"hanif-kamal"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"hanif-kamal"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"hanif-kamal"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"hanif-kamal"},"content":"            BufferedReader br \u003d new BufferedReader(new FileReader(filePath));","lastModifiedDate":"2021-09-07"},{"lineNumber":93,"author":{"gitId":"hanif-kamal"},"content":"            String line;","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"hanif-kamal"},"content":"            while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"hanif-kamal"},"content":"                String[] lineParts \u003d line.split(\" \", 2);","lastModifiedDate":"2021-09-07"},{"lineNumber":96,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"hanif-kamal"},"content":"                switch(lineParts[0].charAt(1)) {","lastModifiedDate":"2021-08-31"},{"lineNumber":98,"author":{"gitId":"hanif-kamal"},"content":"                case \u0027T\u0027:","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"hanif-kamal"},"content":"                    String todoName \u003d lineParts[1];","lastModifiedDate":"2021-08-31"},{"lineNumber":100,"author":{"gitId":"hanif-kamal"},"content":"                    boolean todoStatus \u003d (lineParts[0].charAt(4) \u003d\u003d \u0027X\u0027);","lastModifiedDate":"2021-08-31"},{"lineNumber":101,"author":{"gitId":"hanif-kamal"},"content":"                    list.addToList(new Todo(todoName, todoStatus));","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"hanif-kamal"},"content":"                    break;","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"hanif-kamal"},"content":"                case \u0027D\u0027:","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"hanif-kamal"},"content":"                    boolean deadlineStatus \u003d (lineParts[0].charAt(4) \u003d\u003d \u0027X\u0027);","lastModifiedDate":"2021-08-31"},{"lineNumber":105,"author":{"gitId":"hanif-kamal"},"content":"                    String[] deadlineSplit \u003d lineParts[1].split(\" \\\\(by: \" , 2);","lastModifiedDate":"2021-09-07"},{"lineNumber":106,"author":{"gitId":"hanif-kamal"},"content":"                    String deadlineName \u003d deadlineSplit[0];","lastModifiedDate":"2021-09-07"},{"lineNumber":107,"author":{"gitId":"hanif-kamal"},"content":"                    String deadlineByWithBracket \u003d deadlineSplit[1];","lastModifiedDate":"2021-09-07"},{"lineNumber":108,"author":{"gitId":"hanif-kamal"},"content":"                    String deadlineBy \u003d deadlineByWithBracket.substring(0, deadlineByWithBracket.length() - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"hanif-kamal"},"content":"                    DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"hanif-kamal"},"content":"                    LocalDate correctDeadlineBy \u003d LocalDate.parse(deadlineBy, dtf);","lastModifiedDate":"2021-09-07"},{"lineNumber":111,"author":{"gitId":"hanif-kamal"},"content":"                    list.addToList(new Deadline(deadlineName, deadlineStatus, correctDeadlineBy));","lastModifiedDate":"2021-09-07"},{"lineNumber":112,"author":{"gitId":"hanif-kamal"},"content":"                    break;","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"hanif-kamal"},"content":"                case \u0027E\u0027:","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"hanif-kamal"},"content":"                    boolean eventStatus \u003d (lineParts[0].charAt(4) \u003d\u003d \u0027X\u0027);","lastModifiedDate":"2021-08-31"},{"lineNumber":115,"author":{"gitId":"hanif-kamal"},"content":"                    String[] eventSplit \u003d lineParts[1].split(\" \\\\(at: \" , 2);","lastModifiedDate":"2021-09-07"},{"lineNumber":116,"author":{"gitId":"hanif-kamal"},"content":"                    String eventName \u003d eventSplit[0];","lastModifiedDate":"2021-09-07"},{"lineNumber":117,"author":{"gitId":"hanif-kamal"},"content":"                    String eventAtWithBracket \u003d eventSplit[1];","lastModifiedDate":"2021-09-07"},{"lineNumber":118,"author":{"gitId":"hanif-kamal"},"content":"                    String eventAt \u003d eventAtWithBracket.substring(0, eventAtWithBracket.length() - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"hanif-kamal"},"content":"                    DateTimeFormatter dtf2 \u003d DateTimeFormatter.ofPattern(\"dd MMM yyy hh:mm a\");","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"hanif-kamal"},"content":"                    LocalDateTime correctEventAt \u003d LocalDateTime.parse(eventAt, dtf2);","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"hanif-kamal"},"content":"                    list.addToList(new Event(eventName, eventStatus, correctEventAt));","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"hanif-kamal"},"content":"                    break;","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"hanif-kamal"},"content":"                default:","lastModifiedDate":"2021-08-29"},{"lineNumber":124,"author":{"gitId":"hanif-kamal"},"content":"                    throw new DukeException(\"Oh no! It seems that the Task data in the storage file cannot be read!\");","lastModifiedDate":"2021-09-07"},{"lineNumber":125,"author":{"gitId":"hanif-kamal"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"hanif-kamal"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"hanif-kamal"},"content":"            br.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"hanif-kamal"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"hanif-kamal"},"content":"            throw new DukeException(\"Error upon reading from Task data file: \" + e.getMessage());","lastModifiedDate":"2021-09-07"},{"lineNumber":130,"author":{"gitId":"hanif-kamal"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":131,"author":{"gitId":"hanif-kamal"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":132,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":133,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":134,"author":{"gitId":"hanif-kamal"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":135,"author":{"gitId":"hanif-kamal"},"content":"     * Reads a text file, line by line. Parses the lines into Note data, and adds it to the given NoteList.","lastModifiedDate":"2021-09-07"},{"lineNumber":136,"author":{"gitId":"hanif-kamal"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":137,"author":{"gitId":"hanif-kamal"},"content":"     * @param noteList An empty NoteList to be filled with Notes, as parsed from the text file","lastModifiedDate":"2021-09-07"},{"lineNumber":138,"author":{"gitId":"hanif-kamal"},"content":"     * @throws DukeException In the case where the file is corrupted or cannot be located.","lastModifiedDate":"2021-09-07"},{"lineNumber":139,"author":{"gitId":"hanif-kamal"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":140,"author":{"gitId":"hanif-kamal"},"content":"    public void readNotes(NoteList noteList) throws DukeException {","lastModifiedDate":"2021-09-07"},{"lineNumber":141,"author":{"gitId":"hanif-kamal"},"content":"        File file \u003d new File(noteFilePath);","lastModifiedDate":"2021-09-07"},{"lineNumber":142,"author":{"gitId":"hanif-kamal"},"content":"        file.getParentFile().mkdirs();","lastModifiedDate":"2021-09-07"},{"lineNumber":143,"author":{"gitId":"hanif-kamal"},"content":"        if (!file.exists()) {","lastModifiedDate":"2021-09-07"},{"lineNumber":144,"author":{"gitId":"hanif-kamal"},"content":"            try {","lastModifiedDate":"2021-09-07"},{"lineNumber":145,"author":{"gitId":"hanif-kamal"},"content":"                file.createNewFile();","lastModifiedDate":"2021-09-07"},{"lineNumber":146,"author":{"gitId":"hanif-kamal"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":147,"author":{"gitId":"hanif-kamal"},"content":"                throw new DukeException(\"Error upon creating Note data file: \" + e.getMessage());","lastModifiedDate":"2021-09-07"},{"lineNumber":148,"author":{"gitId":"hanif-kamal"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":149,"author":{"gitId":"hanif-kamal"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":150,"author":{"gitId":"hanif-kamal"},"content":"        try {","lastModifiedDate":"2021-09-07"},{"lineNumber":151,"author":{"gitId":"hanif-kamal"},"content":"            BufferedReader nbr \u003d new BufferedReader(new FileReader(noteFilePath));","lastModifiedDate":"2021-09-07"},{"lineNumber":152,"author":{"gitId":"hanif-kamal"},"content":"            String line;","lastModifiedDate":"2021-09-07"},{"lineNumber":153,"author":{"gitId":"hanif-kamal"},"content":"            while ((line \u003d nbr.readLine()) !\u003d null) {","lastModifiedDate":"2021-09-07"},{"lineNumber":154,"author":{"gitId":"hanif-kamal"},"content":"                String[] lineParts \u003d line.split(\" \\\\| created: \");","lastModifiedDate":"2021-09-07"},{"lineNumber":155,"author":{"gitId":"hanif-kamal"},"content":"                String noteDescription \u003d lineParts[0];","lastModifiedDate":"2021-09-07"},{"lineNumber":156,"author":{"gitId":"hanif-kamal"},"content":"                String noteCreatedDateTime \u003d lineParts[1];","lastModifiedDate":"2021-09-07"},{"lineNumber":157,"author":{"gitId":"hanif-kamal"},"content":"                DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"dd/MM/yy hh:mm a\");","lastModifiedDate":"2021-09-07"},{"lineNumber":158,"author":{"gitId":"hanif-kamal"},"content":"                LocalDateTime noteCreatedDateTimeFormatted \u003d LocalDateTime.parse(noteCreatedDateTime, dtf);","lastModifiedDate":"2021-09-07"},{"lineNumber":159,"author":{"gitId":"hanif-kamal"},"content":"                noteList.addToList(new Note(noteDescription, noteCreatedDateTimeFormatted));","lastModifiedDate":"2021-09-07"},{"lineNumber":160,"author":{"gitId":"hanif-kamal"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":161,"author":{"gitId":"hanif-kamal"},"content":"            nbr.close();","lastModifiedDate":"2021-09-07"},{"lineNumber":162,"author":{"gitId":"hanif-kamal"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":163,"author":{"gitId":"hanif-kamal"},"content":"            throw new DukeException(\"Error upon reading from Note data file: \" + e.getMessage());","lastModifiedDate":"2021-09-07"},{"lineNumber":164,"author":{"gitId":"hanif-kamal"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":165,"author":{"gitId":"hanif-kamal"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":166,"author":{"gitId":"hanif-kamal"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"hanif-kamal":166}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hanif-kamal"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"hanif-kamal"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"hanif-kamal"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"hanif-kamal"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"hanif-kamal"},"content":" * Encapsulates a list of Tasks that the user sets, with relevant processing methods.","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"hanif-kamal"},"content":" *","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"hanif-kamal"},"content":" * @author Hanif Kamal","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"hanif-kamal"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"hanif-kamal"},"content":"public class TaskList {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"hanif-kamal"},"content":"    private final ArrayList\u003cTask\u003e list;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"hanif-kamal"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"hanif-kamal"},"content":"     * Class constructor to initialize the TaskList instance.","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"hanif-kamal"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"hanif-kamal"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"hanif-kamal"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"hanif-kamal"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"hanif-kamal"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"hanif-kamal"},"content":"     * Looks up the Task at the given index in the TaskList and sets the Task as done.","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"hanif-kamal"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"hanif-kamal"},"content":"     * @param index The index of the Task, to be set as done, in the TaskList.","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"hanif-kamal"},"content":"     * @return A String that acts as a confirmation message by Duke for Task completion.","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"hanif-kamal"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"hanif-kamal"},"content":"    public String completeTask(int index) {","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"hanif-kamal"},"content":"        assert list.size() \u003e\u003d index : \"Task index should not be out of bounds, tried to complete!\";","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"hanif-kamal"},"content":"        Task task \u003d this.list.get(index - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"hanif-kamal"},"content":"        task.setDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"hanif-kamal"},"content":"        return (\"Nice! I\u0027ve marked this task as done:\\n\" + \"  \" + task);","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"hanif-kamal"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"hanif-kamal"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"hanif-kamal"},"content":"     * Adds the given Task to the TaskList.","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"hanif-kamal"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"hanif-kamal"},"content":"     * @param task The Task to be added to the TaskList.","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"hanif-kamal"},"content":"     * @return A String that acts as a confirmation message by Duke for a successfully added Task.","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"hanif-kamal"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"hanif-kamal"},"content":"    public String addToList(Task task) {","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"hanif-kamal"},"content":"        this.list.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"hanif-kamal"},"content":"        assert !list.isEmpty() : \"The task did not get added!\";","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"hanif-kamal"},"content":"        return (\"Got it. I\u0027ve added this task:\\n\" + \"  \" + task.toString() + \"\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"hanif-kamal"},"content":"                + \"Now you have \" + list.size() + \" task\" + (list.size() \u003d\u003d 1 ? \"\" : \"s\")","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"hanif-kamal"},"content":"                + \" in the list.\");","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"hanif-kamal"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"hanif-kamal"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"hanif-kamal"},"content":"     * Returns, as a String, all Tasks in the TaskList for the user.","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"hanif-kamal"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"hanif-kamal"},"content":"     * @return A String that lists out all the Tasks in the TaskList.","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"hanif-kamal"},"content":"     * @throws DukeException In the case where the TaskList is empty.","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"hanif-kamal"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"hanif-kamal"},"content":"    public String printTasks() throws DukeException {","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"hanif-kamal"},"content":"        if (this.list.size() \u003c 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"hanif-kamal"},"content":"            throw new DukeException(\"You haven\u0027t added any tasks to the list yet! Please add a task.\");","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"hanif-kamal"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"hanif-kamal"},"content":"            assert !list.isEmpty() : \"List should not be empty, tried to print!\";","lastModifiedDate":"2021-09-05"},{"lineNumber":60,"author":{"gitId":"hanif-kamal"},"content":"            String taskQuantifier;","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"hanif-kamal"},"content":"            if (this.list.size() \u003d\u003d 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"hanif-kamal"},"content":"                taskQuantifier \u003d \"Here is the sole task in your list:\";","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"hanif-kamal"},"content":"            } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"hanif-kamal"},"content":"                taskQuantifier \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"hanif-kamal"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"hanif-kamal"},"content":"            String tasks \u003d \"\";","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"hanif-kamal"},"content":"            for (int i \u003d 1; i \u003c\u003d list.size(); i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"hanif-kamal"},"content":"                tasks \u003d tasks + (\"\\n\" + i + \". \" + list.get(i - 1));","lastModifiedDate":"2021-08-31"},{"lineNumber":69,"author":{"gitId":"hanif-kamal"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"hanif-kamal"},"content":"            return taskQuantifier + tasks;","lastModifiedDate":"2021-08-31"},{"lineNumber":71,"author":{"gitId":"hanif-kamal"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"hanif-kamal"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"hanif-kamal"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"hanif-kamal"},"content":"     * Looks up the Task at the given index in the TaskList and removes the Task from the list.","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"hanif-kamal"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":77,"author":{"gitId":"hanif-kamal"},"content":"     * @param index The index of the Task, to be deleted, in the TaskList.","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"hanif-kamal"},"content":"     * @return A String that acts as a confirmation message by Duke for a successfully deleted Task.","lastModifiedDate":"2021-09-01"},{"lineNumber":79,"author":{"gitId":"hanif-kamal"},"content":"     * @throws DukeException In the case where the TaskList is empty, or the index is out of bounds.","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"hanif-kamal"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"hanif-kamal"},"content":"    public String deleteTask(int index) throws DukeException {","lastModifiedDate":"2021-08-31"},{"lineNumber":82,"author":{"gitId":"hanif-kamal"},"content":"        if (this.list.size() \u003c 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"hanif-kamal"},"content":"            throw new DukeException(\"You haven\u0027t added any tasks to the list yet! Please add tasks before \"","lastModifiedDate":"2021-09-17"},{"lineNumber":84,"author":{"gitId":"hanif-kamal"},"content":"                    + \"deleting.\");","lastModifiedDate":"2021-08-29"},{"lineNumber":85,"author":{"gitId":"hanif-kamal"},"content":"        } else if (index \u003c\u003d this.list.size() \u0026\u0026 index \u003e\u003d 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"hanif-kamal"},"content":"            assert !list.isEmpty() : \"List should not be empty, tried to delete!\";","lastModifiedDate":"2021-09-05"},{"lineNumber":87,"author":{"gitId":"hanif-kamal"},"content":"            Task toDelete \u003d list.get(index - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"hanif-kamal"},"content":"            list.remove(index - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"hanif-kamal"},"content":"            return (\"Noted. I\u0027ve removed this task:\\n\" + \"  \" + toDelete + \"\\n\" + \"Now you have \"","lastModifiedDate":"2021-08-31"},{"lineNumber":90,"author":{"gitId":"hanif-kamal"},"content":"                    + list.size() + \" task\" + (list.size() \u003d\u003d 1 ? \"\" : \"s\") + \" in the list.\");","lastModifiedDate":"2021-08-29"},{"lineNumber":91,"author":{"gitId":"hanif-kamal"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"hanif-kamal"},"content":"            throw new DukeException(\"Couldn\u0027t find that task in the list! Please ensure that the index is valid. \"","lastModifiedDate":"2021-09-17"},{"lineNumber":93,"author":{"gitId":"hanif-kamal"},"content":"                    + \"Try again.\");","lastModifiedDate":"2021-09-17"},{"lineNumber":94,"author":{"gitId":"hanif-kamal"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"hanif-kamal"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"hanif-kamal"},"content":"    public int size() {","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"hanif-kamal"},"content":"        return this.list.size();","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"hanif-kamal"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"hanif-kamal"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"hanif-kamal"},"content":"        return this.list.get(index);","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"hanif-kamal"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":106,"author":{"gitId":"hanif-kamal"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":107,"author":{"gitId":"hanif-kamal"},"content":"     * Prints a TaskList that is filtered such that it only consists of Tasks that contain the given search term.","lastModifiedDate":"2021-08-29"},{"lineNumber":108,"author":{"gitId":"hanif-kamal"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":109,"author":{"gitId":"hanif-kamal"},"content":"     * @param searchTerm The given search term to narrow down the Tasks in the TaskList.","lastModifiedDate":"2021-08-29"},{"lineNumber":110,"author":{"gitId":"hanif-kamal"},"content":"     * @return A String that lists out all the Tasks that match the search term in the TaskList.","lastModifiedDate":"2021-09-01"},{"lineNumber":111,"author":{"gitId":"hanif-kamal"},"content":"     * @throws DukeException In the case where no Tasks matching the search term can be found.","lastModifiedDate":"2021-08-29"},{"lineNumber":112,"author":{"gitId":"hanif-kamal"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":113,"author":{"gitId":"hanif-kamal"},"content":"    public String printFilteredTasks(String searchTerm) throws DukeException {","lastModifiedDate":"2021-08-31"},{"lineNumber":114,"author":{"gitId":"hanif-kamal"},"content":"        ArrayList\u003cTask\u003e filteredList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":115,"author":{"gitId":"hanif-kamal"},"content":"        for (Task task : list) {","lastModifiedDate":"2021-08-26"},{"lineNumber":116,"author":{"gitId":"hanif-kamal"},"content":"            if (task.getTaskName().contains(searchTerm)) {","lastModifiedDate":"2021-08-26"},{"lineNumber":117,"author":{"gitId":"hanif-kamal"},"content":"                filteredList.add(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":118,"author":{"gitId":"hanif-kamal"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":119,"author":{"gitId":"hanif-kamal"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":120,"author":{"gitId":"hanif-kamal"},"content":"        if (filteredList.size() \u003c 1) {","lastModifiedDate":"2021-08-26"},{"lineNumber":121,"author":{"gitId":"hanif-kamal"},"content":"            throw new DukeException(\"I couldn\u0027t find any tasks with that particular search term. Please try again.\");","lastModifiedDate":"2021-09-17"},{"lineNumber":122,"author":{"gitId":"hanif-kamal"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":123,"author":{"gitId":"hanif-kamal"},"content":"            assert !filteredList.isEmpty() : \"Filtered list should not be empty, tried to print!\";","lastModifiedDate":"2021-09-05"},{"lineNumber":124,"author":{"gitId":"hanif-kamal"},"content":"            assert filteredList.size() \u003c\u003d list.size() : \"Filtered list should not be larger than original list!\";","lastModifiedDate":"2021-09-05"},{"lineNumber":125,"author":{"gitId":"hanif-kamal"},"content":"            String filteredTaskQuantifier;","lastModifiedDate":"2021-08-31"},{"lineNumber":126,"author":{"gitId":"hanif-kamal"},"content":"            if (filteredList.size() \u003d\u003d 1) {","lastModifiedDate":"2021-08-26"},{"lineNumber":127,"author":{"gitId":"hanif-kamal"},"content":"                filteredTaskQuantifier \u003d \"Here is the sole matching task in your list:\";","lastModifiedDate":"2021-08-31"},{"lineNumber":128,"author":{"gitId":"hanif-kamal"},"content":"            } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":129,"author":{"gitId":"hanif-kamal"},"content":"                filteredTaskQuantifier \u003d \"Here are the matching tasks in your list:\";","lastModifiedDate":"2021-08-31"},{"lineNumber":130,"author":{"gitId":"hanif-kamal"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":131,"author":{"gitId":"hanif-kamal"},"content":"            String filteredTasks \u003d \"\";","lastModifiedDate":"2021-08-31"},{"lineNumber":132,"author":{"gitId":"hanif-kamal"},"content":"            for (int i \u003d 1; i \u003c\u003d filteredList.size(); i++) {","lastModifiedDate":"2021-09-17"},{"lineNumber":133,"author":{"gitId":"hanif-kamal"},"content":"                filteredTasks \u003d filteredTasks + (\"\\n\" + i + \". \" + filteredList.get(i - 1));","lastModifiedDate":"2021-08-31"},{"lineNumber":134,"author":{"gitId":"hanif-kamal"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":135,"author":{"gitId":"hanif-kamal"},"content":"            return filteredTaskQuantifier + filteredTasks;","lastModifiedDate":"2021-08-31"},{"lineNumber":136,"author":{"gitId":"hanif-kamal"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":137,"author":{"gitId":"hanif-kamal"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":138,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":139,"author":{"gitId":"hanif-kamal"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"hanif-kamal":139}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hanif-kamal"},"content":"package duke.gui;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"hanif-kamal"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"hanif-kamal"},"content":"import java.util.Collections;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"hanif-kamal"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"hanif-kamal"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"hanif-kamal"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"hanif-kamal"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"hanif-kamal"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"hanif-kamal"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"hanif-kamal"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"hanif-kamal"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"hanif-kamal"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"hanif-kamal"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"hanif-kamal"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"hanif-kamal"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"hanif-kamal"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"hanif-kamal"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"hanif-kamal"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"hanif-kamal"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"hanif-kamal"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"hanif-kamal"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"hanif-kamal"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"hanif-kamal"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"hanif-kamal"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"hanif-kamal"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"hanif-kamal"},"content":"    private Label dialog;","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"hanif-kamal"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"hanif-kamal"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"hanif-kamal"},"content":"    private DialogBox(String text, Image img, boolean isDuke) {","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"hanif-kamal"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"hanif-kamal"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"hanif-kamal"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"hanif-kamal"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"hanif-kamal"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"hanif-kamal"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"hanif-kamal"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"hanif-kamal"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"hanif-kamal"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"hanif-kamal"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"hanif-kamal"},"content":"        if (isDuke) {","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"hanif-kamal"},"content":"            BackgroundFill backgroundFill \u003d new BackgroundFill(Color.web(\"#eccbf5\"), CornerRadii.EMPTY, Insets.EMPTY);","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"hanif-kamal"},"content":"            javafx.scene.layout.Background bg \u003d new Background(backgroundFill);","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"hanif-kamal"},"content":"            setBackground(bg);","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"hanif-kamal"},"content":"        } else {","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"hanif-kamal"},"content":"            BackgroundFill backgroundFill \u003d new BackgroundFill(Color.web(\"#c6eff7\"), CornerRadii.EMPTY, Insets.EMPTY);","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"hanif-kamal"},"content":"            javafx.scene.layout.Background bg \u003d new Background(backgroundFill);","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"hanif-kamal"},"content":"            setBackground(bg);","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"hanif-kamal"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"hanif-kamal"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"hanif-kamal"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"hanif-kamal"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"hanif-kamal"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"hanif-kamal"},"content":"    private void flip() {","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"hanif-kamal"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"hanif-kamal"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"hanif-kamal"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"hanif-kamal"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"hanif-kamal"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":68,"author":{"gitId":"hanif-kamal"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-08-31"},{"lineNumber":69,"author":{"gitId":"hanif-kamal"},"content":"        return new DialogBox(text, img, false);","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"hanif-kamal"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":71,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":72,"author":{"gitId":"hanif-kamal"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-08-31"},{"lineNumber":73,"author":{"gitId":"hanif-kamal"},"content":"        var db \u003d new DialogBox(text, img, true);","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"hanif-kamal"},"content":"        if (text.contains(\"Please \")) {","lastModifiedDate":"2021-09-17"},{"lineNumber":75,"author":{"gitId":"hanif-kamal"},"content":"            Node inner \u003d db.getChildren().get(0);","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"hanif-kamal"},"content":"            inner.setStyle(\"-fx-text-fill: red\");","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"hanif-kamal"},"content":"            inner.setOpacity(0.75);","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"hanif-kamal"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"hanif-kamal"},"content":"        db.flip();","lastModifiedDate":"2021-08-31"},{"lineNumber":80,"author":{"gitId":"hanif-kamal"},"content":"        return db;","lastModifiedDate":"2021-08-31"},{"lineNumber":81,"author":{"gitId":"hanif-kamal"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":82,"author":{"gitId":"hanif-kamal"},"content":"}","lastModifiedDate":"2021-08-31"},{"lineNumber":83,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"hanif-kamal":83}},{"path":"src/main/java/duke/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hanif-kamal"},"content":"package duke.gui;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"hanif-kamal"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"hanif-kamal"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"hanif-kamal"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"hanif-kamal"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"hanif-kamal"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"hanif-kamal"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"hanif-kamal"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"hanif-kamal"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"hanif-kamal"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"hanif-kamal"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"hanif-kamal"},"content":"public class Main extends Application {","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"hanif-kamal"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"hanif-kamal"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"hanif-kamal"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"hanif-kamal"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"hanif-kamal"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"hanif-kamal"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"hanif-kamal"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"hanif-kamal"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"hanif-kamal"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"hanif-kamal"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().printWelcomeMessage();","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"hanif-kamal"},"content":"            stage.setTitle(\"Duke\");","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"hanif-kamal"},"content":"            stage.show();","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"hanif-kamal"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"hanif-kamal"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"hanif-kamal"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"hanif-kamal"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"hanif-kamal"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"hanif-kamal":34}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hanif-kamal"},"content":"package duke.gui;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"hanif-kamal"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"hanif-kamal"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"hanif-kamal"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"hanif-kamal"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"hanif-kamal"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"hanif-kamal"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"hanif-kamal"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"hanif-kamal"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"hanif-kamal"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"hanif-kamal"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"hanif-kamal"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"hanif-kamal"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"hanif-kamal"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"hanif-kamal"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"hanif-kamal"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"hanif-kamal"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"hanif-kamal"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"hanif-kamal"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"hanif-kamal"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"hanif-kamal"},"content":"    private Button sendButton;","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"hanif-kamal"},"content":"    private Duke duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"hanif-kamal"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"hanif-kamal"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/duke.jpg\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"hanif-kamal"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"hanif-kamal"},"content":"    public void initialize() {","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"hanif-kamal"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"hanif-kamal"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"hanif-kamal"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"hanif-kamal"},"content":"        duke \u003d d;","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"hanif-kamal"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"hanif-kamal"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"hanif-kamal"},"content":"     * Welcomes the user upon startup.","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"hanif-kamal"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"hanif-kamal"},"content":"    public void printWelcomeMessage() {","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"hanif-kamal"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(\"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\",","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"hanif-kamal"},"content":"                dukeImage));","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"hanif-kamal"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"hanif-kamal"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"hanif-kamal"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"hanif-kamal"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"hanif-kamal"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"hanif-kamal"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"hanif-kamal"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"hanif-kamal"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"hanif-kamal"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"hanif-kamal"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"hanif-kamal"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"hanif-kamal"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"hanif-kamal"},"content":"        );","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"hanif-kamal"},"content":"        userInput.clear();","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"hanif-kamal"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"hanif-kamal"},"content":"}","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"hanif-kamal":61}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hanif-kamal"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"hanif-kamal"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"hanif-kamal"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"hanif-kamal"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"hanif-kamal"},"content":" * Represents a Deadline, a subtype of Task. A Deadline also includes a deadline date, stored as a LocalDate.","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"hanif-kamal"},"content":" *","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"hanif-kamal"},"content":" * @author Hanif Kamal","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"hanif-kamal"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"hanif-kamal"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"hanif-kamal"},"content":"    private LocalDate deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"hanif-kamal"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"hanif-kamal"},"content":"     * Class constructor.","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"hanif-kamal"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"hanif-kamal"},"content":"     * @param taskName The name or description of the Deadline.","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"hanif-kamal"},"content":"     * @param isDone Whether or not the Deadline is done.","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"hanif-kamal"},"content":"     * @param deadline The date of the Deadline.","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"hanif-kamal"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"hanif-kamal"},"content":"    public Deadline(String taskName, boolean isDone, LocalDate deadline) {","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"hanif-kamal"},"content":"        super(taskName, isDone);","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"hanif-kamal"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"hanif-kamal"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"hanif-kamal"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"hanif-kamal"},"content":"     * Returns the string representation of the Deadline.","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"hanif-kamal"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"hanif-kamal"},"content":"     * @return The string representation of the Deadline.","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"hanif-kamal"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"hanif-kamal"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"hanif-kamal"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"hanif-kamal"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"hanif-kamal"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.deadline.format(dtf) + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"hanif-kamal"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"hanif-kamal"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"hanif-kamal":36}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hanif-kamal"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"hanif-kamal"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"hanif-kamal"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"hanif-kamal"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"hanif-kamal"},"content":" * Represents an Event, a subtype of Task. An Event also includes information of when the Event is in the form of an","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"hanif-kamal"},"content":" * Event at, stored as a LocalDateTime.","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"hanif-kamal"},"content":" *","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"hanif-kamal"},"content":" * @author Hanif Kamal","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"hanif-kamal"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"hanif-kamal"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"hanif-kamal"},"content":"    private LocalDateTime at;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"hanif-kamal"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"hanif-kamal"},"content":"     * Class constructor.","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"hanif-kamal"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"hanif-kamal"},"content":"     * @param taskName The name or description of the Event.","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"hanif-kamal"},"content":"     * @param isDone Whether or not the Event is done.","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"hanif-kamal"},"content":"     * @param at The date and time of the Event.","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"hanif-kamal"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"hanif-kamal"},"content":"    public Event(String taskName, boolean isDone, LocalDateTime at) {","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"hanif-kamal"},"content":"        super(taskName, isDone);","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"hanif-kamal"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"hanif-kamal"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"hanif-kamal"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"hanif-kamal"},"content":"     * Returns the string representation of the Event.","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"hanif-kamal"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"hanif-kamal"},"content":"     * @return The string representation of the Event.","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"hanif-kamal"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"hanif-kamal"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"hanif-kamal"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"hanif-kamal"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"dd MMM yyy hh:mm a\");","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"hanif-kamal"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.at.format(dtf) + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"hanif-kamal"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"hanif-kamal"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"hanif-kamal":37}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hanif-kamal"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"hanif-kamal"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"hanif-kamal"},"content":" * Represents a Task, which contains a Task name and a boolean variable which shows whether or not the task","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"hanif-kamal"},"content":" * is done.","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"hanif-kamal"},"content":" *","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"hanif-kamal"},"content":" * @author Hanif Kamal","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"hanif-kamal"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"hanif-kamal"},"content":"public class Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"hanif-kamal"},"content":"    private String taskName;","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"hanif-kamal"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"hanif-kamal"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"hanif-kamal"},"content":"     * Class constructor to initialize a Task.","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"hanif-kamal"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"hanif-kamal"},"content":"     * @param taskName The name or description of the Task.","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"hanif-kamal"},"content":"     * @param isDone Whether or not the Task is done.","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"hanif-kamal"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"hanif-kamal"},"content":"    public Task(String taskName, boolean isDone) {","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"hanif-kamal"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"hanif-kamal"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"hanif-kamal"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"hanif-kamal"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"hanif-kamal"},"content":"     * Sets the Task as done.","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"hanif-kamal"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"hanif-kamal"},"content":"    public void setDone() {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"hanif-kamal"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"hanif-kamal"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"hanif-kamal"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"hanif-kamal"},"content":"     * Gets the Task name.","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"hanif-kamal"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"hanif-kamal"},"content":"     * @return String representation of the Task name.","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"hanif-kamal"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"hanif-kamal"},"content":"    public String getTaskName() {","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"hanif-kamal"},"content":"        return this.taskName;","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"hanif-kamal"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"hanif-kamal"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"hanif-kamal"},"content":"     * Returns the string representation of the Task.","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"hanif-kamal"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"hanif-kamal"},"content":"     * @return The string representation of the Task.","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"hanif-kamal"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"hanif-kamal"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"hanif-kamal"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"hanif-kamal"},"content":"        return this.isDone ? \"[X] \" + this.taskName : \"[] \" + this.taskName;","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"hanif-kamal"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"hanif-kamal"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"hanif-kamal":49}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hanif-kamal"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"hanif-kamal"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"hanif-kamal"},"content":" * Represents a Todo, a subtype of Task.","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"hanif-kamal"},"content":" *","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"hanif-kamal"},"content":" * @author Hanif Kamal","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"hanif-kamal"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"hanif-kamal"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"hanif-kamal"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"hanif-kamal"},"content":"     * Class constructor to initialize a Todo.","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"hanif-kamal"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"hanif-kamal"},"content":"     * @param taskName The name or description of the Todo.","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"hanif-kamal"},"content":"     * @param isDone Whether or not the Todo is done.","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"hanif-kamal"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"hanif-kamal"},"content":"    public Todo(String taskName, boolean isDone) {","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"hanif-kamal"},"content":"        super(taskName, isDone);","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"hanif-kamal"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"hanif-kamal"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"hanif-kamal"},"content":"     * Returns the string representation of the Todo.","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"hanif-kamal"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"hanif-kamal"},"content":"     * @return The string representation of the Todo.","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"hanif-kamal"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"hanif-kamal"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"hanif-kamal"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"hanif-kamal"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"hanif-kamal"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"hanif-kamal"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"hanif-kamal":29}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"hanif-kamal"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"hanif-kamal"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"hanif-kamal"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"hanif-kamal"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"hanif-kamal"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"hanif-kamal"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"hanif-kamal"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"hanif-kamal"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"hanif-kamal"},"content":"    \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" textFill\u003d\"black\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"hanif-kamal"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"hanif-kamal"},"content":"      \u003cclip\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"hanif-kamal"},"content":"        \u003cCircle centerX\u003d\"50\" centerY\u003d\"50\" radius\u003d\"49\" /\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"hanif-kamal"},"content":"      \u003c/clip\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"hanif-kamal"},"content":"    \u003c/ImageView\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"hanif-kamal"},"content":"  \u003c/children\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"hanif-kamal"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"hanif-kamal"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"hanif-kamal"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"hanif-kamal"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"hanif-kamal":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"hanif-kamal"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"hanif-kamal"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"hanif-kamal"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"hanif-kamal"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"hanif-kamal"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"hanif-kamal"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"hanif-kamal"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-image: url(\u0027uk.png\u0027);\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"hanif-kamal"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"hanif-kamal"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"hanif-kamal"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"hanif-kamal"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"hanif-kamal"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"hanif-kamal"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"hanif-kamal"},"content":"      \u003c/content\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"hanif-kamal"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"hanif-kamal"},"content":"  \u003c/children\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"hanif-kamal"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"hanif-kamal":19}},{"path":"src/test/java/duke/test/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hanif-kamal"},"content":"package duke.test;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"hanif-kamal"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"hanif-kamal"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"hanif-kamal"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"hanif-kamal"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"hanif-kamal"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"hanif-kamal"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"hanif-kamal"},"content":"    private final DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"hanif-kamal"},"content":"    private final Deadline deadlineIncomplete \u003d new Deadline(\"test 1\", false,","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"hanif-kamal"},"content":"            LocalDate.parse(\"31/12/2021\", dtf));","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"hanif-kamal"},"content":"    private final Deadline deadlineComplete \u003d new Deadline(\"test 2\", true,","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"hanif-kamal"},"content":"            LocalDate.parse(\"01/08/2021\", dtf));","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"hanif-kamal"},"content":"    private final Deadline deadlineDifferentDateFormat \u003d new Deadline(\"test 3\", false,","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"hanif-kamal"},"content":"            LocalDate.of(2021, 9, 1));","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"hanif-kamal"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"hanif-kamal"},"content":"    public void toString_incompleteDeadline_success() {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"hanif-kamal"},"content":"        assertEquals(\"[D][] test 1 (by: 31 Dec 2021)\", deadlineIncomplete.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"hanif-kamal"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"hanif-kamal"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"hanif-kamal"},"content":"    public void toString_completeDeadline_success() {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"hanif-kamal"},"content":"        assertEquals(\"[D][X] test 2 (by: 01 Aug 2021)\", deadlineComplete.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"hanif-kamal"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"hanif-kamal"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"hanif-kamal"},"content":"    public void toString_differentDateFormat_success() {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"hanif-kamal"},"content":"        assertEquals(\"[D][] test 3 (by: 01 Sep 2021)\", deadlineDifferentDateFormat.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"hanif-kamal"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"hanif-kamal"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"hanif-kamal":34}},{"path":"src/test/java/duke/test/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hanif-kamal"},"content":"package duke.test;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"hanif-kamal"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"hanif-kamal"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"hanif-kamal"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"hanif-kamal"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"hanif-kamal"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"hanif-kamal"},"content":"public class EventTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"hanif-kamal"},"content":"    private final DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"hanif-kamal"},"content":"    private final Event eventIncomplete \u003d new Event(\"test 1\", false,","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"hanif-kamal"},"content":"            LocalDateTime.parse(\"31/12/2021 2359\", dtf));","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"hanif-kamal"},"content":"    private final Event eventComplete \u003d new Event(\"test 2\", true,","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"hanif-kamal"},"content":"            LocalDateTime.parse(\"01/08/2021 0800\", dtf));","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"hanif-kamal"},"content":"    private final Event eventDifferentDateTimeFormat \u003d new Event(\"test 3\", false,","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"hanif-kamal"},"content":"            LocalDateTime.of(2021, 9, 1, 12, 0));","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"hanif-kamal"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"hanif-kamal"},"content":"    public void toString_incompleteEvent_success() {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"hanif-kamal"},"content":"        assertEquals(\"[E][] test 1 (at: 31 Dec 2021 11:59 PM)\", eventIncomplete.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"hanif-kamal"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"hanif-kamal"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"hanif-kamal"},"content":"    public void toString_completeEvent_success() {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"hanif-kamal"},"content":"        assertEquals(\"[E][X] test 2 (at: 01 Aug 2021 08:00 AM)\", eventComplete.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"hanif-kamal"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"hanif-kamal"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"hanif-kamal"},"content":"    public void toString_differentDateFormat_success() {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"hanif-kamal"},"content":"        assertEquals(\"[E][] test 3 (at: 01 Sep 2021 12:00 PM)\", eventDifferentDateTimeFormat.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"hanif-kamal"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"hanif-kamal"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"hanif-kamal":34}},{"path":"src/test/java/duke/test/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"hanif-kamal"},"content":"package duke.test;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"hanif-kamal"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"hanif-kamal"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"hanif-kamal"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"hanif-kamal"},"content":"public class TodoTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"hanif-kamal"},"content":"    private final Todo todoIncomplete \u003d new Todo(\"test 1\", false);","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"hanif-kamal"},"content":"    private final Todo todoComplete \u003d new Todo(\"test 2\", true);","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"hanif-kamal"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"hanif-kamal"},"content":"    public void toString_incompleteTask_success() {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"hanif-kamal"},"content":"        assertEquals(\"[T][] test 1\", todoIncomplete.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"hanif-kamal"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"hanif-kamal"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"hanif-kamal"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"hanif-kamal"},"content":"    public void toString_completeTask_success() {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"hanif-kamal"},"content":"        assertEquals(\"[T][X] test 2\", todoComplete.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"hanif-kamal"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"hanif-kamal"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"hanif-kamal":22}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"hanif-kamal"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"hanif-kamal"},"content":"list aaa","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"hanif-kamal"},"content":"done","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"hanif-kamal"},"content":"done aaa","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"hanif-kamal"},"content":"done 5 aaa","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"hanif-kamal"},"content":"done 1","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"hanif-kamal"},"content":"delete","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"hanif-kamal"},"content":"delete 1","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"hanif-kamal"},"content":"deadline","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"hanif-kamal"},"content":"deadline aaa","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"hanif-kamal"},"content":"deadline aaa /by","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"hanif-kamal"},"content":"deadline code /by Sunday 2359","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"hanif-kamal"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"hanif-kamal"},"content":"event","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"hanif-kamal"},"content":"event aaa","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"hanif-kamal"},"content":"event aaa /at","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"hanif-kamal"},"content":"event lunch /at Sunday 1pm-3pm","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"hanif-kamal"},"content":"todo","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"hanif-kamal"},"content":"todo exercise","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"hanif-kamal"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"hanif-kamal"},"content":"done 0","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"hanif-kamal"},"content":"done 1","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"hanif-kamal"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"hanif-kamal"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"hanif-kamal"},"content":"done 3","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"hanif-kamal"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"hanif-kamal"},"content":"delete 3","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"hanif-kamal"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"hanif-kamal"},"content":"bye bye","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"hanif-kamal"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"hanif-kamal":30}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"hanif-kamal"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"hanif-kamal"},"content":"java -classpath ..\\bin duke/Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"hanif-kamal":2,"-":19}}]
