[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"Linxcathyyy"},"content":"//    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.10\u0027","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"Linxcathyyy"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"Linxcathyyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"Linxcathyyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"Linxcathyyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"Linxcathyyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"Linxcathyyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"Linxcathyyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"Linxcathyyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"Linxcathyyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"Linxcathyyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"Linxcathyyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"Linxcathyyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"Linxcathyyy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"Linxcathyyy"},"content":"    mainClassName \u003d \"meow.Launcher\"","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"Linxcathyyy"},"content":"    archiveBaseName \u003d \"meow\"","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"Linxcathyyy"},"content":"//javafx {","lastModifiedDate":"2021-09-11"},{"lineNumber":61,"author":{"gitId":"Linxcathyyy"},"content":"//    version \u003d \"15.0.1\"","lastModifiedDate":"2021-09-11"},{"lineNumber":62,"author":{"gitId":"Linxcathyyy"},"content":"//    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027]","lastModifiedDate":"2021-09-11"},{"lineNumber":63,"author":{"gitId":"Linxcathyyy"},"content":"//}","lastModifiedDate":"2021-09-11"},{"lineNumber":64,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Linxcathyyy":23,"-":44}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"Linxcathyyy"},"content":"As David Allen said ([source](https://dansilvestre.com/productivity-quotes/)):","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"Linxcathyyy"},"content":"\u003e \"Your mind is for having ideas, not holding them.\"","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"Linxcathyyy"},"content":"Meow is a highly automated chat-bot for managing tasks, ","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"Linxcathyyy"},"content":"optimized for use via a Command Line Interface (CLI) ","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"Linxcathyyy"},"content":"while still having the benefits of a Graphical User ","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"Linxcathyyy"},"content":"Interface (GUI). Meow is a cute cat who loves to sleep a lot!","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"Linxcathyyy"},"content":"Meow~~","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"Linxcathyyy"},"content":"Meow frees your mind of having to remember things you need to do. It\u0027s,","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"Linxcathyyy"},"content":"* text-based","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"Linxcathyyy"},"content":"* easy to learn","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"Linxcathyyy"},"content":"* ~~FAST~~ SUPER FAST to use","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"Linxcathyyy"},"content":"## Quick start","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"Linxcathyyy"},"content":"1. Ensure you have Java ```11``` or above installed in your Computer.","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"Linxcathyyy"},"content":"2. Download the latest ```meow.jar``` from [here](https://github.com/Linxcathyyy/ip/).","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"Linxcathyyy"},"content":"3. Copy the file to the folder you want to use as the home folder for your Meow.","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"Linxcathyyy"},"content":"4. Double-click the file to start the app.","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"Linxcathyyy"},"content":"### Adding a todo: todo","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"Linxcathyyy"},"content":"Adds a todo to your task list.","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"Linxcathyyy"},"content":"Format: ```todo TODO```","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"Linxcathyyy"},"content":"Examples: ```todo do homework```","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"Linxcathyyy"},"content":"### Adding a deadline: deadline","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"Linxcathyyy"},"content":"Adds a deadline to your task list.","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":36,"author":{"gitId":"Linxcathyyy"},"content":"Format: ```deadline DEADLINE /by DATE TIME```","lastModifiedDate":"2021-09-11"},{"lineNumber":37,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"Linxcathyyy"},"content":"Examples: ```deadline return book /by 2/12/2019 1800```","lastModifiedDate":"2021-09-11"},{"lineNumber":39,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":40,"author":{"gitId":"Linxcathyyy"},"content":"### Adding an event: event","lastModifiedDate":"2021-09-11"},{"lineNumber":41,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":42,"author":{"gitId":"Linxcathyyy"},"content":"Adds an event to your task list.","lastModifiedDate":"2021-09-11"},{"lineNumber":43,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":44,"author":{"gitId":"Linxcathyyy"},"content":"Format: ```event EVENT /at TIME```","lastModifiedDate":"2021-09-11"},{"lineNumber":45,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":46,"author":{"gitId":"Linxcathyyy"},"content":"Examples: ```event team meeting /at Friday 8-10pm```","lastModifiedDate":"2021-09-11"},{"lineNumber":47,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":48,"author":{"gitId":"Linxcathyyy"},"content":"### Listing all tasks : list","lastModifiedDate":"2021-09-11"},{"lineNumber":49,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":50,"author":{"gitId":"Linxcathyyy"},"content":"Shows a list of all tasks in the task list.","lastModifiedDate":"2021-09-11"},{"lineNumber":51,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":52,"author":{"gitId":"Linxcathyyy"},"content":"Format: ```list```","lastModifiedDate":"2021-09-11"},{"lineNumber":53,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":54,"author":{"gitId":"Linxcathyyy"},"content":"### Marking a task as done: done","lastModifiedDate":"2021-09-11"},{"lineNumber":55,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":56,"author":{"gitId":"Linxcathyyy"},"content":"Marks the specified task as done from the task list.","lastModifiedDate":"2021-09-11"},{"lineNumber":57,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":58,"author":{"gitId":"Linxcathyyy"},"content":"Format: ```done INDEX```","lastModifiedDate":"2021-09-11"},{"lineNumber":59,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":60,"author":{"gitId":"Linxcathyyy"},"content":"* Marks the task as done at the specified ```INDEX```.","lastModifiedDate":"2021-09-11"},{"lineNumber":61,"author":{"gitId":"Linxcathyyy"},"content":"* The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2021-09-11"},{"lineNumber":62,"author":{"gitId":"Linxcathyyy"},"content":"* The index must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2021-09-11"},{"lineNumber":63,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":64,"author":{"gitId":"Linxcathyyy"},"content":"Examples:","lastModifiedDate":"2021-09-11"},{"lineNumber":65,"author":{"gitId":"Linxcathyyy"},"content":"* ```list``` followed by ```done 2``` marks the 2nd task as done in the task list.","lastModifiedDate":"2021-09-11"},{"lineNumber":66,"author":{"gitId":"Linxcathyyy"},"content":"* ```find homework``` followed by ```done 1``` marks the 1st task as done in the results of the find command.","lastModifiedDate":"2021-09-11"},{"lineNumber":67,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":68,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":69,"author":{"gitId":"Linxcathyyy"},"content":"### Finding a task: find","lastModifiedDate":"2021-09-11"},{"lineNumber":70,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":71,"author":{"gitId":"Linxcathyyy"},"content":"Finds tasks that contain any of the given keywords.","lastModifiedDate":"2021-09-11"},{"lineNumber":72,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":73,"author":{"gitId":"Linxcathyyy"},"content":"Format: ```find KEYWORD [MORE_KEYWORDS]```","lastModifiedDate":"2021-09-11"},{"lineNumber":74,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":75,"author":{"gitId":"Linxcathyyy"},"content":"* The search is case-insensitive. e.g. ```homework``` will match ```Homework```","lastModifiedDate":"2021-09-11"},{"lineNumber":76,"author":{"gitId":"Linxcathyyy"},"content":"* The order of the keywords does not matter. e.g. ```do homework``` will match ```homework do```","lastModifiedDate":"2021-09-11"},{"lineNumber":77,"author":{"gitId":"Linxcathyyy"},"content":"* Partial search is supported e.g. ```home``` will match ```homework```","lastModifiedDate":"2021-09-11"},{"lineNumber":78,"author":{"gitId":"Linxcathyyy"},"content":"* Supports search by task type e.g. ```D```, ```E```, and ```T```, search by done status e.g. ```1``` and ```0```, ","lastModifiedDate":"2021-09-11"},{"lineNumber":79,"author":{"gitId":"Linxcathyyy"},"content":"  and search by date e.g. ```Monday 9am```","lastModifiedDate":"2021-09-11"},{"lineNumber":80,"author":{"gitId":"Linxcathyyy"},"content":"* Tasks matching at least one keyword will be returned (i.e. ```OR``` search). ","lastModifiedDate":"2021-09-11"},{"lineNumber":81,"author":{"gitId":"Linxcathyyy"},"content":"  e.g. ```do``` will return ```do homework```, ```do laundry```","lastModifiedDate":"2021-09-11"},{"lineNumber":82,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":83,"author":{"gitId":"Linxcathyyy"},"content":"### Deleting a task : delete","lastModifiedDate":"2021-09-11"},{"lineNumber":84,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":85,"author":{"gitId":"Linxcathyyy"},"content":"Deletes the specified task from the task list.","lastModifiedDate":"2021-09-11"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":87,"author":{"gitId":"Linxcathyyy"},"content":"Format: ```delete INDEX```","lastModifiedDate":"2021-09-11"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":89,"author":{"gitId":"Linxcathyyy"},"content":"* Deletes the task at the specified ```INDEX```.","lastModifiedDate":"2021-09-11"},{"lineNumber":90,"author":{"gitId":"Linxcathyyy"},"content":"* The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2021-09-11"},{"lineNumber":91,"author":{"gitId":"Linxcathyyy"},"content":"* The index must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2021-09-11"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":93,"author":{"gitId":"Linxcathyyy"},"content":"Examples:","lastModifiedDate":"2021-09-11"},{"lineNumber":94,"author":{"gitId":"Linxcathyyy"},"content":"* ```list``` followed by ```delete 2``` deletes the 2nd task in the task list.","lastModifiedDate":"2021-09-11"},{"lineNumber":95,"author":{"gitId":"Linxcathyyy"},"content":"* ```find homework``` followed by ```delete 1``` deletes the 1st task in the results of the find command.","lastModifiedDate":"2021-09-11"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":97,"author":{"gitId":"Linxcathyyy"},"content":"### Saving the data","lastModifiedDate":"2021-09-11"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":99,"author":{"gitId":"Linxcathyyy"},"content":"Meow data are saved in the hard disk automatically after any command that changes the data. ","lastModifiedDate":"2021-09-11"},{"lineNumber":100,"author":{"gitId":"Linxcathyyy"},"content":"There is no need to save manually.","lastModifiedDate":"2021-09-11"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":102,"author":{"gitId":"Linxcathyyy"},"content":"### Editing the data file","lastModifiedDate":"2021-09-11"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":104,"author":{"gitId":"Linxcathyyy"},"content":"Meow data are saved as a txt file ```[JAR file location]/data/meow.txt```.","lastModifiedDate":"2021-09-11"},{"lineNumber":105,"author":{"gitId":"Linxcathyyy"},"content":"Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-09-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"Linxcathyyy":94,"-":15}},{"path":"src/main/java/meow/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Linxcathyyy"},"content":"package meow;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"Linxcathyyy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Linxcathyyy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Linxcathyyy"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"Linxcathyyy"},"content":" * Represents a specific task (an event) containing the description","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"Linxcathyyy"},"content":" * and the deadline of the task that the user wants","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"Linxcathyyy"},"content":" * to add in his or her todo list.","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"Linxcathyyy"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"Linxcathyyy"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"Linxcathyyy"},"content":"    protected LocalDate date;","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Linxcathyyy"},"content":"    protected String time;","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"Linxcathyyy"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"Linxcathyyy"},"content":"     * A public constructor to initialize a meow.Deadline object.","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"Linxcathyyy"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"Linxcathyyy"},"content":"    public Deadline(String description, LocalDate date, String time) {","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Linxcathyyy"},"content":"        super(description);","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"Linxcathyyy"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Linxcathyyy"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"Linxcathyyy"},"content":"    public String getDeadlineTime() {","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"Linxcathyyy"},"content":"        return this.time;","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"Linxcathyyy"},"content":"    public String getDeadlineDate() {","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"Linxcathyyy"},"content":"        return this.date.toString();","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":32,"author":{"gitId":"Linxcathyyy"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"Linxcathyyy"},"content":"     * Returns the string representation of the meow.Deadline object.","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"Linxcathyyy"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":35,"author":{"gitId":"Linxcathyyy"},"content":"     * @return The string representation of the meow.Deadline object.","lastModifiedDate":"2021-09-04"},{"lineNumber":36,"author":{"gitId":"Linxcathyyy"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"Linxcathyyy"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":38,"author":{"gitId":"Linxcathyyy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":39,"author":{"gitId":"Linxcathyyy"},"content":"        return \"D\" + super.toString() + \" | \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" \" + time;","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":41,"author":{"gitId":"Linxcathyyy"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"Linxcathyyy":41}},{"path":"src/main/java/meow/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Linxcathyyy"},"content":"package meow;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"Linxcathyyy"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"Linxcathyyy"},"content":"import java.util.Collections;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"Linxcathyyy"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"Linxcathyyy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"Linxcathyyy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"Linxcathyyy"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"Linxcathyyy"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"Linxcathyyy"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"Linxcathyyy"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"Linxcathyyy"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"Linxcathyyy"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"Linxcathyyy"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"Linxcathyyy"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"Linxcathyyy"},"content":"import javafx.scene.paint.ImagePattern;","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"Linxcathyyy"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"Linxcathyyy"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"Linxcathyyy"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"Linxcathyyy"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"Linxcathyyy"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"Linxcathyyy"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"Linxcathyyy"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"Linxcathyyy"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"Linxcathyyy"},"content":"    private Label dialog;","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"Linxcathyyy"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"Linxcathyyy"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"Linxcathyyy"},"content":"    @FXML","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"Linxcathyyy"},"content":"    private Circle profile;","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"Linxcathyyy"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"Linxcathyyy"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"Linxcathyyy"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"Linxcathyyy"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"Linxcathyyy"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"Linxcathyyy"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"Linxcathyyy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"Linxcathyyy"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"Linxcathyyy"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"Linxcathyyy"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"Linxcathyyy"},"content":"        profile.setStroke(Color.TRANSPARENT);","lastModifiedDate":"2021-09-11"},{"lineNumber":45,"author":{"gitId":"Linxcathyyy"},"content":"        profile.setFill(new ImagePattern(img));","lastModifiedDate":"2021-09-11"},{"lineNumber":46,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":47,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"Linxcathyyy"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"Linxcathyyy"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"Linxcathyyy"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"Linxcathyyy"},"content":"    private void flip() {","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"Linxcathyyy"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"Linxcathyyy"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"Linxcathyyy"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"Linxcathyyy"},"content":"        setAlignment(Pos.CENTER_LEFT);","lastModifiedDate":"2021-09-11"},{"lineNumber":57,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"Linxcathyyy"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"Linxcathyyy"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"Linxcathyyy"},"content":"    public static DialogBox getMeowDialog(String text, Image img) {","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"Linxcathyyy"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"Linxcathyyy"},"content":"        db.flip();","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"Linxcathyyy"},"content":"        return db;","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"Linxcathyyy"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"Linxcathyyy":68}},{"path":"src/main/java/meow/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Linxcathyyy"},"content":"package meow;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"Linxcathyyy"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"Linxcathyyy"},"content":" * Represents a specific task (an event) containing the description","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"Linxcathyyy"},"content":" * and the starting and ending time of the task that the user wants","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"Linxcathyyy"},"content":" * to add in his or her todo list.","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"Linxcathyyy"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"Linxcathyyy"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"Linxcathyyy"},"content":"    protected String at;","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"Linxcathyyy"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"Linxcathyyy"},"content":"     * A public constructor to initialize an meow.Event object.","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"Linxcathyyy"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"Linxcathyyy"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"Linxcathyyy"},"content":"        super(description);","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"Linxcathyyy"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"Linxcathyyy"},"content":"    public String getEventTime() {","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"Linxcathyyy"},"content":"        return this.at;","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"Linxcathyyy"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"Linxcathyyy"},"content":"     * Returns the string representation of the meow.Event object.","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"Linxcathyyy"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"Linxcathyyy"},"content":"     * @return The string representation of the meow.Event object.","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"Linxcathyyy"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"Linxcathyyy"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"Linxcathyyy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"Linxcathyyy"},"content":"        return \"E\" + super.toString() + \" | \" + at;","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"Linxcathyyy"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"Linxcathyyy":32}},{"path":"src/main/java/meow/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Linxcathyyy"},"content":"package meow;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"Linxcathyyy"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"Linxcathyyy"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"Linxcathyyy"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"Linxcathyyy"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"Linxcathyyy"},"content":"public class Launcher {","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"Linxcathyyy"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"Linxcathyyy"},"content":"     * Start of the application.","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"Linxcathyyy"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"Linxcathyyy"},"content":"     * @param args The given args.","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"Linxcathyyy"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"Linxcathyyy"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"Linxcathyyy"},"content":"        Application.launch(meow.Main.class, args);","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"Linxcathyyy"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"Linxcathyyy":19}},{"path":"src/main/java/meow/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Linxcathyyy"},"content":"package meow;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"Linxcathyyy"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"Linxcathyyy"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"Linxcathyyy"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"Linxcathyyy"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"Linxcathyyy"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"Linxcathyyy"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"Linxcathyyy"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"Linxcathyyy"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"Linxcathyyy"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"Linxcathyyy"},"content":"public class Main extends Application {","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"Linxcathyyy"},"content":"    private Meow meow \u003d new Meow();","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"Linxcathyyy"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"Linxcathyyy"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"Linxcathyyy"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"Linxcathyyy"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"Linxcathyyy"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"Linxcathyyy"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"Linxcathyyy"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"Linxcathyyy"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().initialize(stage);","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"Linxcathyyy"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setMeow(meow);","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"Linxcathyyy"},"content":"            stage.show();","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"Linxcathyyy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"Linxcathyyy"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"Linxcathyyy"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"Linxcathyyy"},"content":"}","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"Linxcathyyy":34}},{"path":"src/main/java/meow/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Linxcathyyy"},"content":"package meow;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"Linxcathyyy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"Linxcathyyy"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"Linxcathyyy"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"Linxcathyyy"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"Linxcathyyy"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"Linxcathyyy"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"Linxcathyyy"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"Linxcathyyy"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"Linxcathyyy"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"Linxcathyyy"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"Linxcathyyy"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"Linxcathyyy"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"Linxcathyyy"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"Linxcathyyy"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"Linxcathyyy"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"Linxcathyyy"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"Linxcathyyy"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"Linxcathyyy"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"Linxcathyyy"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"Linxcathyyy"},"content":"    private Button sendButton;","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"Linxcathyyy"},"content":"    private Meow meow;","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"Linxcathyyy"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"Linxcathyyy"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/doge.png\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"Linxcathyyy"},"content":"    private Image meowImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/cat.jpeg\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"Linxcathyyy"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"Linxcathyyy"},"content":"     * Start of the application.","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"Linxcathyyy"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"Linxcathyyy"},"content":"     * @param stage The given stage.","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"Linxcathyyy"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":36,"author":{"gitId":"Linxcathyyy"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"Linxcathyyy"},"content":"    public void initialize(Stage stage) {","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"Linxcathyyy"},"content":"        stage.setTitle(\"Meow - An Automated Reminder Chat Bot\");","lastModifiedDate":"2021-09-11"},{"lineNumber":39,"author":{"gitId":"Linxcathyyy"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-11"},{"lineNumber":40,"author":{"gitId":"Linxcathyyy"},"content":"        dialogContainer.setStyle(\"-fx-background-image: url(\u0027images/background.png\u0027);\");","lastModifiedDate":"2021-09-11"},{"lineNumber":41,"author":{"gitId":"Linxcathyyy"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"Linxcathyyy"},"content":"                DialogBox.getMeowDialog(ui.greet(), meowImage)","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"Linxcathyyy"},"content":"        );","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"Linxcathyyy"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":47,"author":{"gitId":"Linxcathyyy"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-04"},{"lineNumber":48,"author":{"gitId":"Linxcathyyy"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-04"},{"lineNumber":49,"author":{"gitId":"Linxcathyyy"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":50,"author":{"gitId":"Linxcathyyy"},"content":"     * @param m The Meow object input.","lastModifiedDate":"2021-09-04"},{"lineNumber":51,"author":{"gitId":"Linxcathyyy"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":52,"author":{"gitId":"Linxcathyyy"},"content":"    public void setMeow(Meow m) {","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"Linxcathyyy"},"content":"        meow \u003d m;","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"Linxcathyyy"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"Linxcathyyy"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"Linxcathyyy"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"Linxcathyyy"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"Linxcathyyy"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"Linxcathyyy"},"content":"   private void handleUserInput() {","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"Linxcathyyy"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"Linxcathyyy"},"content":"        String response \u003d meow.getResponse(input);","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"Linxcathyyy"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"Linxcathyyy"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"Linxcathyyy"},"content":"                DialogBox.getMeowDialog(response, meowImage)","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"Linxcathyyy"},"content":"        );","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"Linxcathyyy"},"content":"        userInput.clear();","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"Linxcathyyy"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"Linxcathyyy":70}},{"path":"src/main/java/meow/Meow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Linxcathyyy"},"content":"package meow;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"Linxcathyyy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Linxcathyyy"},"content":"import java.util.List;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"Linxcathyyy"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"Linxcathyyy"},"content":" * Represents a chat bot Meow who will be performing different tasks","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"Linxcathyyy"},"content":" * according to user input.","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"Linxcathyyy"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"Linxcathyyy"},"content":"public class Meow {","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"Linxcathyyy"},"content":"    protected Storage storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"Linxcathyyy"},"content":"    protected TaskList tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"Linxcathyyy"},"content":"    protected Parser parser;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"Linxcathyyy"},"content":"    protected Ui ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"Linxcathyyy"},"content":"    private boolean isExit \u003d false;","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"Linxcathyyy"},"content":"    enum Command {","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"Linxcathyyy"},"content":"        BYE,","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"Linxcathyyy"},"content":"        LIST,","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"Linxcathyyy"},"content":"        DONE,","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"Linxcathyyy"},"content":"        DELETE,","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"Linxcathyyy"},"content":"        FIND,","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"Linxcathyyy"},"content":"        TODO,","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"Linxcathyyy"},"content":"        EVENT,","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"Linxcathyyy"},"content":"        DEADLINE","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"Linxcathyyy"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"Linxcathyyy"},"content":"     * A public constructor to initialize a Meow object.","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"Linxcathyyy"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"Linxcathyyy"},"content":"    public Meow() {","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"Linxcathyyy"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"Linxcathyyy"},"content":"        this.storage \u003d new Storage(\"data/meow.txt\");","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"Linxcathyyy"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"Linxcathyyy"},"content":"        if (this.storage.canReadFromFile()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"Linxcathyyy"},"content":"            // Read the file and convert the content to the taskList array","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"Linxcathyyy"},"content":"            this.tasks \u003d new TaskList(this.storage.getStorageTasksList());","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"Linxcathyyy"},"content":"        } else {","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"Linxcathyyy"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"Linxcathyyy"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"Linxcathyyy"},"content":"    private String processCommand(String input) throws MeowException {","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"Linxcathyyy"},"content":"        try {","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"Linxcathyyy"},"content":"            Command userCommand \u003d this.parser.checkCommand(input);","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"Linxcathyyy"},"content":"            switch (userCommand) {","lastModifiedDate":"2021-08-16"},{"lineNumber":47,"author":{"gitId":"Linxcathyyy"},"content":"            case BYE:","lastModifiedDate":"2021-09-04"},{"lineNumber":48,"author":{"gitId":"Linxcathyyy"},"content":"                System.exit(0);","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"Linxcathyyy"},"content":"                return this.ui.exit();","lastModifiedDate":"2021-09-11"},{"lineNumber":50,"author":{"gitId":"Linxcathyyy"},"content":"            case LIST:","lastModifiedDate":"2021-09-04"},{"lineNumber":51,"author":{"gitId":"Linxcathyyy"},"content":"                return this.ui.displayList(this.tasks.getTasksList());","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"Linxcathyyy"},"content":"            case DONE:","lastModifiedDate":"2021-09-04"},{"lineNumber":53,"author":{"gitId":"Linxcathyyy"},"content":"                String output \u003d this.tasks.completeTask(this.parser.getTaskNumber(input));","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"Linxcathyyy"},"content":"                this.storage.addArrayTaskToFile(this.tasks.getTasksList());","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"Linxcathyyy"},"content":"                return output;","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"Linxcathyyy"},"content":"            case FIND:","lastModifiedDate":"2021-09-04"},{"lineNumber":57,"author":{"gitId":"Linxcathyyy"},"content":"                List\u003cTask\u003e filteredTasks \u003d this.tasks.searchTask(this.parser.getTaskNumber(input));","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"Linxcathyyy"},"content":"                return this.ui.displaySearchList(filteredTasks);","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"Linxcathyyy"},"content":"            case TODO:","lastModifiedDate":"2021-09-04"},{"lineNumber":60,"author":{"gitId":"Linxcathyyy"},"content":"                String todoTask \u003d this.parser.getTask(input, userCommand);","lastModifiedDate":"2021-09-04"},{"lineNumber":61,"author":{"gitId":"Linxcathyyy"},"content":"                Todo newTodo \u003d this.tasks.addTodo(todoTask);","lastModifiedDate":"2021-09-04"},{"lineNumber":62,"author":{"gitId":"Linxcathyyy"},"content":"                this.storage.addArrayTaskToFile(this.tasks.getTasksList());","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"Linxcathyyy"},"content":"                return this.ui.printTaskList(this.tasks.getTasksList(), newTodo);","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"Linxcathyyy"},"content":"            case EVENT:","lastModifiedDate":"2021-09-04"},{"lineNumber":65,"author":{"gitId":"Linxcathyyy"},"content":"                String eventTask \u003d this.parser.getTask(input, userCommand);","lastModifiedDate":"2021-09-04"},{"lineNumber":66,"author":{"gitId":"Linxcathyyy"},"content":"                String[] eventTaskAndDate \u003d this.parser.getTaskAndDate(eventTask, userCommand);","lastModifiedDate":"2021-09-04"},{"lineNumber":67,"author":{"gitId":"Linxcathyyy"},"content":"                try {","lastModifiedDate":"2021-08-16"},{"lineNumber":68,"author":{"gitId":"Linxcathyyy"},"content":"                    Event newEvent \u003d this.tasks.addEvent(eventTaskAndDate[0], eventTaskAndDate[1]);","lastModifiedDate":"2021-09-04"},{"lineNumber":69,"author":{"gitId":"Linxcathyyy"},"content":"                    this.storage.addArrayTaskToFile(this.tasks.getTasksList());","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"Linxcathyyy"},"content":"                    return this.ui.printTaskList(this.tasks.getTasksList(), newEvent);","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"Linxcathyyy"},"content":"                } catch (ArrayIndexOutOfBoundsException exception) {","lastModifiedDate":"2021-08-16"},{"lineNumber":72,"author":{"gitId":"Linxcathyyy"},"content":"                    throw new EmptyEventTimeException();","lastModifiedDate":"2021-08-16"},{"lineNumber":73,"author":{"gitId":"Linxcathyyy"},"content":"                }","lastModifiedDate":"2021-08-15"},{"lineNumber":74,"author":{"gitId":"Linxcathyyy"},"content":"            case DEADLINE:","lastModifiedDate":"2021-09-04"},{"lineNumber":75,"author":{"gitId":"Linxcathyyy"},"content":"                String deadlineTask \u003d this.parser.getTask(input, userCommand);","lastModifiedDate":"2021-09-04"},{"lineNumber":76,"author":{"gitId":"Linxcathyyy"},"content":"                String[] deadlineTaskAndDate \u003d this.parser.getTaskAndDate(deadlineTask, userCommand);","lastModifiedDate":"2021-09-04"},{"lineNumber":77,"author":{"gitId":"Linxcathyyy"},"content":"                try {","lastModifiedDate":"2021-08-16"},{"lineNumber":78,"author":{"gitId":"Linxcathyyy"},"content":"                    String[] dateAndTime \u003d deadlineTaskAndDate[1].split(\" \");","lastModifiedDate":"2021-09-04"},{"lineNumber":79,"author":{"gitId":"Linxcathyyy"},"content":"                    if (this.parser.isLocalDateTime(dateAndTime[0], dateAndTime[1])) {","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"Linxcathyyy"},"content":"                        LocalDate date \u003d this.parser.convertToLocalDate(dateAndTime[0]);","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"Linxcathyyy"},"content":"                        Deadline newDeadline \u003d this.tasks.addDeadline(deadlineTaskAndDate[0], date, dateAndTime[1]);","lastModifiedDate":"2021-09-04"},{"lineNumber":82,"author":{"gitId":"Linxcathyyy"},"content":"                        this.storage.addArrayTaskToFile(this.tasks.getTasksList());","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"Linxcathyyy"},"content":"                        return this.ui.printTaskList(this.tasks.getTasksList(), newDeadline);","lastModifiedDate":"2021-08-29"},{"lineNumber":84,"author":{"gitId":"Linxcathyyy"},"content":"                    } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"Linxcathyyy"},"content":"                        throw new InvalidDateTimeException();","lastModifiedDate":"2021-08-22"},{"lineNumber":86,"author":{"gitId":"Linxcathyyy"},"content":"                    }","lastModifiedDate":"2021-08-22"},{"lineNumber":87,"author":{"gitId":"Linxcathyyy"},"content":"                } catch (ArrayIndexOutOfBoundsException exception) {","lastModifiedDate":"2021-08-16"},{"lineNumber":88,"author":{"gitId":"Linxcathyyy"},"content":"                    throw new EmptyDeadlineTimeException();","lastModifiedDate":"2021-08-16"},{"lineNumber":89,"author":{"gitId":"Linxcathyyy"},"content":"                }","lastModifiedDate":"2021-08-16"},{"lineNumber":90,"author":{"gitId":"Linxcathyyy"},"content":"            case DELETE:","lastModifiedDate":"2021-09-04"},{"lineNumber":91,"author":{"gitId":"Linxcathyyy"},"content":"                String deleteOutput \u003d this.tasks.deleteTask(this.parser.getTaskNumber(input));","lastModifiedDate":"2021-09-04"},{"lineNumber":92,"author":{"gitId":"Linxcathyyy"},"content":"                this.storage.addArrayTaskToFile(this.tasks.getTasksList());","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"Linxcathyyy"},"content":"                return deleteOutput;","lastModifiedDate":"2021-09-04"},{"lineNumber":94,"author":{"gitId":"Linxcathyyy"},"content":"            default:","lastModifiedDate":"2021-09-04"},{"lineNumber":95,"author":{"gitId":"Linxcathyyy"},"content":"                throw new InvalidInputException();","lastModifiedDate":"2021-08-16"},{"lineNumber":96,"author":{"gitId":"Linxcathyyy"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":97,"author":{"gitId":"Linxcathyyy"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":98,"author":{"gitId":"Linxcathyyy"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2021-08-16"},{"lineNumber":99,"author":{"gitId":"Linxcathyyy"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":100,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":101,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":102,"author":{"gitId":"Linxcathyyy"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":103,"author":{"gitId":"Linxcathyyy"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2021-08-29"},{"lineNumber":104,"author":{"gitId":"Linxcathyyy"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2021-08-29"},{"lineNumber":105,"author":{"gitId":"Linxcathyyy"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":106,"author":{"gitId":"Linxcathyyy"},"content":"    String getResponse(String input) {","lastModifiedDate":"2021-08-29"},{"lineNumber":107,"author":{"gitId":"Linxcathyyy"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":108,"author":{"gitId":"Linxcathyyy"},"content":"            return processCommand(input);","lastModifiedDate":"2021-08-29"},{"lineNumber":109,"author":{"gitId":"Linxcathyyy"},"content":"        } catch (MeowException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":110,"author":{"gitId":"Linxcathyyy"},"content":"            return e.toString();","lastModifiedDate":"2021-08-29"},{"lineNumber":111,"author":{"gitId":"Linxcathyyy"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":112,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":113,"author":{"gitId":"Linxcathyyy"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"Linxcathyyy":113}},{"path":"src/main/java/meow/MeowException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Linxcathyyy"},"content":"package meow;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"Linxcathyyy"},"content":"abstract class MeowException extends Exception {","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"Linxcathyyy"},"content":"}","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"Linxcathyyy"},"content":"class InvalidInputException extends MeowException {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"Linxcathyyy"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"Linxcathyyy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"Linxcathyyy"},"content":"        return \"Meow: ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"Linxcathyyy"},"content":"}","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"Linxcathyyy"},"content":"class EmptyTodoDescriptionException extends MeowException {","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"Linxcathyyy"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"Linxcathyyy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"Linxcathyyy"},"content":"        return \"Meow: ☹ OOPS!!! The description of a todo cannot be empty~\";","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"Linxcathyyy"},"content":"}","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"Linxcathyyy"},"content":"class EmptyDeadlineDescriptionException extends MeowException {","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"Linxcathyyy"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"Linxcathyyy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"Linxcathyyy"},"content":"        return \"Meow: ☹ OOPS!!! The description of a deadline cannot be empty~\";","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"Linxcathyyy"},"content":"}","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"Linxcathyyy"},"content":"class EmptyEventDescriptionException extends MeowException {","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"Linxcathyyy"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"Linxcathyyy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"Linxcathyyy"},"content":"        return \"Meow: ☹ OOPS!!! The description of an event cannot be empty~\";","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"Linxcathyyy"},"content":"}","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"Linxcathyyy"},"content":"class EmptyDeadlineTimeException extends MeowException {","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"Linxcathyyy"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"Linxcathyyy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"Linxcathyyy"},"content":"        return \"Meow: ☹ OOPS!!! The date/time of a deadline cannot be empty~\";","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"Linxcathyyy"},"content":"}","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"Linxcathyyy"},"content":"class EmptyEventTimeException extends MeowException {","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"Linxcathyyy"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"Linxcathyyy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":44,"author":{"gitId":"Linxcathyyy"},"content":"        return \"Meow: ☹ OOPS!!! The starting and ending time of an event cannot be empty~\\n\";","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"Linxcathyyy"},"content":"}","lastModifiedDate":"2021-08-16"},{"lineNumber":47,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":48,"author":{"gitId":"Linxcathyyy"},"content":"class InvalidTaskIndex extends MeowException {","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"Linxcathyyy"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":50,"author":{"gitId":"Linxcathyyy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":51,"author":{"gitId":"Linxcathyyy"},"content":"        return \"Meow: ☹ OOPS!!! This task is not in your task list,\\n \"","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"Linxcathyyy"},"content":"                +","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"Linxcathyyy"},"content":"                \"try entering a correct task number~\";","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":55,"author":{"gitId":"Linxcathyyy"},"content":"}","lastModifiedDate":"2021-08-16"},{"lineNumber":56,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":57,"author":{"gitId":"Linxcathyyy"},"content":"class NotSuchTaskFoundException extends MeowException {","lastModifiedDate":"2021-08-16"},{"lineNumber":58,"author":{"gitId":"Linxcathyyy"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":59,"author":{"gitId":"Linxcathyyy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":60,"author":{"gitId":"Linxcathyyy"},"content":"        return \"Meow: ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means,\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"Linxcathyyy"},"content":"                +","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"Linxcathyyy"},"content":"                \"please enter a number to indicate the correct task number~\";","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":64,"author":{"gitId":"Linxcathyyy"},"content":"}","lastModifiedDate":"2021-08-16"},{"lineNumber":65,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":66,"author":{"gitId":"Linxcathyyy"},"content":"class NoItemInTheListException extends MeowException {","lastModifiedDate":"2021-08-16"},{"lineNumber":67,"author":{"gitId":"Linxcathyyy"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":68,"author":{"gitId":"Linxcathyyy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":69,"author":{"gitId":"Linxcathyyy"},"content":"        return \"Meow: You have not added any tasks yet, please add one now~\";","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":71,"author":{"gitId":"Linxcathyyy"},"content":"}","lastModifiedDate":"2021-08-16"},{"lineNumber":72,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"Linxcathyyy"},"content":"class NoSearchResultException extends MeowException {","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"Linxcathyyy"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"Linxcathyyy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"Linxcathyyy"},"content":"        return \"Meow: Meow can\u0027t find any matching results, try entering a different keyword~\";","lastModifiedDate":"2021-08-29"},{"lineNumber":77,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"Linxcathyyy"},"content":"}","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"Linxcathyyy"},"content":"class InvalidDateTimeException extends MeowException {","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"Linxcathyyy"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"Linxcathyyy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"Linxcathyyy"},"content":"        return \"Meow: The format of your deadline is invalid, please try again~\";","lastModifiedDate":"2021-08-29"},{"lineNumber":84,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"Linxcathyyy"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Linxcathyyy":85}},{"path":"src/main/java/meow/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Linxcathyyy"},"content":"package meow;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"Linxcathyyy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"Linxcathyyy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"Linxcathyyy"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"Linxcathyyy"},"content":" * Represents a parser that parses the command","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"Linxcathyyy"},"content":" * input by the user.","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"Linxcathyyy"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"Linxcathyyy"},"content":"public class Parser {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"Linxcathyyy"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"Linxcathyyy"},"content":"     * A public constructor to initialize a meow.Parser object.","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"Linxcathyyy"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"Linxcathyyy"},"content":"    public Parser() {","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"Linxcathyyy"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"Linxcathyyy"},"content":"     * Parses the input by the user, converts and returns","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"Linxcathyyy"},"content":"     * the date in a LocalDate representation.","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"Linxcathyyy"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"Linxcathyyy"},"content":"     * @param inputDate The date input by the user.","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"Linxcathyyy"},"content":"     * @return The command word using enum.","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"Linxcathyyy"},"content":"     * @throws InvalidDateTimeException If the date is invalid.","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"Linxcathyyy"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"Linxcathyyy"},"content":"    public LocalDate convertToLocalDate(String inputDate) throws InvalidDateTimeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"Linxcathyyy"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"Linxcathyyy"},"content":"            String modifiedDate \u003d \"\";","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"Linxcathyyy"},"content":"            String[] values \u003d inputDate.split(\"/\");","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"Linxcathyyy"},"content":"            for (int i \u003d values.length - 1; i \u003e\u003d 0; i--) {","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"Linxcathyyy"},"content":"                String addedValue;","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"Linxcathyyy"},"content":"                if (Integer.parseInt(values[i]) \u003c 10) {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"Linxcathyyy"},"content":"                    addedValue \u003d \"0\" + values[i];","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"Linxcathyyy"},"content":"                } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"Linxcathyyy"},"content":"                    addedValue \u003d values[i];","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"Linxcathyyy"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"Linxcathyyy"},"content":"                if (i \u003d\u003d 0) {","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"Linxcathyyy"},"content":"                    modifiedDate \u003d modifiedDate + addedValue;","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"Linxcathyyy"},"content":"                } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"Linxcathyyy"},"content":"                    modifiedDate \u003d modifiedDate + addedValue + \"-\";","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"Linxcathyyy"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"Linxcathyyy"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"Linxcathyyy"},"content":"            LocalDate date \u003d LocalDate.parse(modifiedDate);","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"Linxcathyyy"},"content":"            return date;","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"Linxcathyyy"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"Linxcathyyy"},"content":"            throw new InvalidDateTimeException();","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"Linxcathyyy"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"Linxcathyyy"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"Linxcathyyy"},"content":"     * Parses the input by the user, interprets and returns a boolean indicating","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"Linxcathyyy"},"content":"     * whether the user input is valid date and valid time.","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"Linxcathyyy"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"Linxcathyyy"},"content":"     * @param inputDate The date input by the user.","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"Linxcathyyy"},"content":"     * @param inputTime The time input by the user.","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"Linxcathyyy"},"content":"     * @return A boolean indicating whether the user input is valid date and valid time.","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"Linxcathyyy"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"Linxcathyyy"},"content":"    public boolean isLocalDateTime(String inputDate, String inputTime) {","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"Linxcathyyy"},"content":"        String validator \u003d \"[0-9]{1,2}(/|-)[0-9]{1,2}(/|-)[0-9]{4}\";","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"Linxcathyyy"},"content":"        boolean isValidDate \u003d inputDate.matches(validator);","lastModifiedDate":"2021-09-04"},{"lineNumber":63,"author":{"gitId":"Linxcathyyy"},"content":"        int time \u003d Integer.parseInt(inputTime);","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"Linxcathyyy"},"content":"        boolean isValidTime \u003d time \u003e\u003d 0 \u0026\u0026 time \u003c\u003d 2359;","lastModifiedDate":"2021-09-04"},{"lineNumber":65,"author":{"gitId":"Linxcathyyy"},"content":"        return isValidDate \u0026\u0026 isValidTime;","lastModifiedDate":"2021-09-04"},{"lineNumber":66,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"Linxcathyyy"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"Linxcathyyy"},"content":"     * Parses the command input by the user, interprets and returns","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"Linxcathyyy"},"content":"     * the description of the task in a String representation.","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"Linxcathyyy"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"Linxcathyyy"},"content":"     * @param input      The input command from the user.","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"Linxcathyyy"},"content":"     * @param typeOfTask The type of task in the command.","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"Linxcathyyy"},"content":"     * @return The description of the task in a String representation.","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"Linxcathyyy"},"content":"     * @throws MeowException If the user input is incomplete.","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"Linxcathyyy"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"Linxcathyyy"},"content":"    public String getTask(String input, Meow.Command typeOfTask) throws MeowException {","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"Linxcathyyy"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"Linxcathyyy"},"content":"            return input.trim().substring(typeOfTask.toString().length() + 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"Linxcathyyy"},"content":"        } catch (StringIndexOutOfBoundsException exception) {","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"Linxcathyyy"},"content":"            if (typeOfTask.equals(Meow.Command.TODO)) {","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"Linxcathyyy"},"content":"                throw new EmptyTodoDescriptionException();","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"Linxcathyyy"},"content":"            } else if (typeOfTask.equals(Meow.Command.DEADLINE)) {","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"Linxcathyyy"},"content":"                throw new EmptyDeadlineDescriptionException();","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"Linxcathyyy"},"content":"            } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"Linxcathyyy"},"content":"                throw new EmptyEventDescriptionException();","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"Linxcathyyy"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"Linxcathyyy"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"Linxcathyyy"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"Linxcathyyy"},"content":"     * Parses the command input by the user, interprets and returns","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"Linxcathyyy"},"content":"     * an array containing the description of the task as well as the","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"Linxcathyyy"},"content":"     * date/time of the task to be completed (only for meow.Deadline and meow.Event).","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"Linxcathyyy"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"Linxcathyyy"},"content":"     * @param task The description of the task in the command.","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"Linxcathyyy"},"content":"     * @param typeOfTask The type of task in the command.","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"Linxcathyyy"},"content":"     * @return An array containing the description of the task as well as the","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"Linxcathyyy"},"content":"     * date/time of the task to be completed (only for meow.Deadline and meow.Event).","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"Linxcathyyy"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"Linxcathyyy"},"content":"    public String[] getTaskAndDate(String task, Meow.Command typeOfTask) {","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"Linxcathyyy"},"content":"        String[] split;","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"Linxcathyyy"},"content":"        if (typeOfTask.equals(Meow.Command.DEADLINE)) {","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"Linxcathyyy"},"content":"            split \u003d task.split(\" /by \");","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"Linxcathyyy"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"Linxcathyyy"},"content":"            split \u003d task.split(\" /at \");","lastModifiedDate":"2021-08-23"},{"lineNumber":107,"author":{"gitId":"Linxcathyyy"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"Linxcathyyy"},"content":"        return split;","lastModifiedDate":"2021-08-23"},{"lineNumber":109,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":110,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":111,"author":{"gitId":"Linxcathyyy"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":112,"author":{"gitId":"Linxcathyyy"},"content":"     * Parses the command input by the user, interprets and returns","lastModifiedDate":"2021-08-23"},{"lineNumber":113,"author":{"gitId":"Linxcathyyy"},"content":"     * the index of the task in a String representation.","lastModifiedDate":"2021-08-23"},{"lineNumber":114,"author":{"gitId":"Linxcathyyy"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":115,"author":{"gitId":"Linxcathyyy"},"content":"     * @param input The input command from the user.","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"Linxcathyyy"},"content":"     * @return The command word using enum.","lastModifiedDate":"2021-08-23"},{"lineNumber":117,"author":{"gitId":"Linxcathyyy"},"content":"     * @throws MeowException If the user input is invalid.","lastModifiedDate":"2021-08-23"},{"lineNumber":118,"author":{"gitId":"Linxcathyyy"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":119,"author":{"gitId":"Linxcathyyy"},"content":"    public Meow.Command checkCommand(String input) throws MeowException {","lastModifiedDate":"2021-08-23"},{"lineNumber":120,"author":{"gitId":"Linxcathyyy"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":121,"author":{"gitId":"Linxcathyyy"},"content":"            String[] commandWord \u003d input.split(\" \");","lastModifiedDate":"2021-08-23"},{"lineNumber":122,"author":{"gitId":"Linxcathyyy"},"content":"            Meow.Command userCommand \u003d Meow.Command.valueOf(commandWord[0].trim().toUpperCase());","lastModifiedDate":"2021-08-23"},{"lineNumber":123,"author":{"gitId":"Linxcathyyy"},"content":"            assert(userCommand !\u003d null);","lastModifiedDate":"2021-09-04"},{"lineNumber":124,"author":{"gitId":"Linxcathyyy"},"content":"            return userCommand;","lastModifiedDate":"2021-08-23"},{"lineNumber":125,"author":{"gitId":"Linxcathyyy"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":126,"author":{"gitId":"Linxcathyyy"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2021-08-23"},{"lineNumber":127,"author":{"gitId":"Linxcathyyy"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":128,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":129,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":130,"author":{"gitId":"Linxcathyyy"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":131,"author":{"gitId":"Linxcathyyy"},"content":"     * Parses the command input by the user, interprets and returns","lastModifiedDate":"2021-08-23"},{"lineNumber":132,"author":{"gitId":"Linxcathyyy"},"content":"     * the index of the task in a String representation.","lastModifiedDate":"2021-08-23"},{"lineNumber":133,"author":{"gitId":"Linxcathyyy"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":134,"author":{"gitId":"Linxcathyyy"},"content":"     * @param input The command input by the user.","lastModifiedDate":"2021-08-23"},{"lineNumber":135,"author":{"gitId":"Linxcathyyy"},"content":"     * @return The index of the task in a String representation.","lastModifiedDate":"2021-08-23"},{"lineNumber":136,"author":{"gitId":"Linxcathyyy"},"content":"     * @throws MeowException If the user input is invalid.","lastModifiedDate":"2021-08-23"},{"lineNumber":137,"author":{"gitId":"Linxcathyyy"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":138,"author":{"gitId":"Linxcathyyy"},"content":"    public String getTaskNumber(String input) throws MeowException {","lastModifiedDate":"2021-08-23"},{"lineNumber":139,"author":{"gitId":"Linxcathyyy"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":140,"author":{"gitId":"Linxcathyyy"},"content":"            String[] commandWord \u003d input.split(\" \");","lastModifiedDate":"2021-08-23"},{"lineNumber":141,"author":{"gitId":"Linxcathyyy"},"content":"            assert(commandWord[1].trim() !\u003d null);","lastModifiedDate":"2021-09-04"},{"lineNumber":142,"author":{"gitId":"Linxcathyyy"},"content":"            return commandWord[1].trim();","lastModifiedDate":"2021-08-23"},{"lineNumber":143,"author":{"gitId":"Linxcathyyy"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":144,"author":{"gitId":"Linxcathyyy"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2021-08-23"},{"lineNumber":145,"author":{"gitId":"Linxcathyyy"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":146,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":147,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":148,"author":{"gitId":"Linxcathyyy"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"Linxcathyyy":148}},{"path":"src/main/java/meow/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Linxcathyyy"},"content":"package meow;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"Linxcathyyy"},"content":"import java.io.File;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"Linxcathyyy"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"Linxcathyyy"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"Linxcathyyy"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"Linxcathyyy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"Linxcathyyy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"Linxcathyyy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"Linxcathyyy"},"content":"import java.util.List;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"Linxcathyyy"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"Linxcathyyy"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"Linxcathyyy"},"content":" * Represents a storage that deals with loading","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"Linxcathyyy"},"content":" * tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"Linxcathyyy"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"Linxcathyyy"},"content":"public class Storage {","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"Linxcathyyy"},"content":"    protected String filePath;","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"Linxcathyyy"},"content":"    protected List\u003cTask\u003e tasksList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"Linxcathyyy"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"Linxcathyyy"},"content":"     * A public constructor to initialize a meow.Storage object.","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"Linxcathyyy"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"Linxcathyyy"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"Linxcathyyy"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"Linxcathyyy"},"content":"    private void writeToFile(String textToAdd) {","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"Linxcathyyy"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"Linxcathyyy"},"content":"            FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"Linxcathyyy"},"content":"            fw.write(textToAdd);","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"Linxcathyyy"},"content":"            fw.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"Linxcathyyy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"Linxcathyyy"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"Linxcathyyy"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"Linxcathyyy"},"content":"    private void createFile() {","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"Linxcathyyy"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"Linxcathyyy"},"content":"            File file \u003d new File(this.filePath);","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"Linxcathyyy"},"content":"            file.createNewFile();","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"Linxcathyyy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"Linxcathyyy"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"Linxcathyyy"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"Linxcathyyy"},"content":"    private void createFolder(String folderPath) {","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"Linxcathyyy"},"content":"        File file \u003d new File(folderPath);","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"Linxcathyyy"},"content":"        file.mkdir();","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"Linxcathyyy"},"content":"    private void addFileContentToArray() throws FileNotFoundException, InvalidDateTimeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"Linxcathyyy"},"content":"        File file \u003d new File(this.filePath);","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"Linxcathyyy"},"content":"        Scanner s \u003d new Scanner(file);","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"Linxcathyyy"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"Linxcathyyy"},"content":"            String task \u003d s.nextLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"Linxcathyyy"},"content":"            load(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"Linxcathyyy"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"Linxcathyyy"},"content":"    private void load(String input) {","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"Linxcathyyy"},"content":"        final String COMPLETED \u003d \"1\";","lastModifiedDate":"2021-09-04"},{"lineNumber":63,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":64,"author":{"gitId":"Linxcathyyy"},"content":"        String[] values \u003d input.split(\" \\\\| \");","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"Linxcathyyy"},"content":"        String typeOfTask \u003d values[0].trim();","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"Linxcathyyy"},"content":"        assert(typeOfTask !\u003d null);","lastModifiedDate":"2021-09-04"},{"lineNumber":67,"author":{"gitId":"Linxcathyyy"},"content":"        String completeStatus \u003d values[1].trim();","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"Linxcathyyy"},"content":"        assert(completeStatus !\u003d null);","lastModifiedDate":"2021-09-04"},{"lineNumber":69,"author":{"gitId":"Linxcathyyy"},"content":"        String task \u003d values[2].trim();","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"Linxcathyyy"},"content":"        assert(task !\u003d null);","lastModifiedDate":"2021-09-04"},{"lineNumber":71,"author":{"gitId":"Linxcathyyy"},"content":"        switch (typeOfTask) {","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"Linxcathyyy"},"content":"        case \"T\":","lastModifiedDate":"2021-09-04"},{"lineNumber":73,"author":{"gitId":"Linxcathyyy"},"content":"            Todo newTodo \u003d new Todo(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"Linxcathyyy"},"content":"            if (completeStatus.equals(COMPLETED)) {","lastModifiedDate":"2021-09-04"},{"lineNumber":75,"author":{"gitId":"Linxcathyyy"},"content":"                newTodo.markAsDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"Linxcathyyy"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"Linxcathyyy"},"content":"            this.tasksList.add(newTodo);","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"Linxcathyyy"},"content":"            break;","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"Linxcathyyy"},"content":"        case \"D\":","lastModifiedDate":"2021-09-04"},{"lineNumber":80,"author":{"gitId":"Linxcathyyy"},"content":"            String dateAndTime \u003d values[3].trim();","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"Linxcathyyy"},"content":"            String[] dateTimeArray \u003d dateAndTime.split(\" \");","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"Linxcathyyy"},"content":"            LocalDate localDate \u003d convertToLocalDate(dateTimeArray);","lastModifiedDate":"2021-09-04"},{"lineNumber":83,"author":{"gitId":"Linxcathyyy"},"content":"            Deadline newDeadline \u003d new Deadline(task, localDate, dateTimeArray[3]);","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"Linxcathyyy"},"content":"            if (completeStatus.equals(COMPLETED)) {","lastModifiedDate":"2021-09-04"},{"lineNumber":85,"author":{"gitId":"Linxcathyyy"},"content":"                newDeadline.markAsDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"Linxcathyyy"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"Linxcathyyy"},"content":"            this.tasksList.add(newDeadline);","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"Linxcathyyy"},"content":"            break;","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"Linxcathyyy"},"content":"        case \"E\":","lastModifiedDate":"2021-09-04"},{"lineNumber":90,"author":{"gitId":"Linxcathyyy"},"content":"            String eventDate \u003d values[3].trim();","lastModifiedDate":"2021-09-04"},{"lineNumber":91,"author":{"gitId":"Linxcathyyy"},"content":"            Event newEvent \u003d new Event(task, eventDate);","lastModifiedDate":"2021-09-04"},{"lineNumber":92,"author":{"gitId":"Linxcathyyy"},"content":"            if (completeStatus.equals(COMPLETED)) {","lastModifiedDate":"2021-09-04"},{"lineNumber":93,"author":{"gitId":"Linxcathyyy"},"content":"                newEvent.markAsDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"Linxcathyyy"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"Linxcathyyy"},"content":"            this.tasksList.add(newEvent);","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"Linxcathyyy"},"content":"            break;","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"Linxcathyyy"},"content":"        default:","lastModifiedDate":"2021-09-04"},{"lineNumber":98,"author":{"gitId":"Linxcathyyy"},"content":"            break;","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"Linxcathyyy"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":102,"author":{"gitId":"Linxcathyyy"},"content":"    private LocalDate convertToLocalDate(String[] dateTimeArray) {","lastModifiedDate":"2021-09-04"},{"lineNumber":103,"author":{"gitId":"Linxcathyyy"},"content":"        String deadlineDate \u003d \"\";","lastModifiedDate":"2021-09-04"},{"lineNumber":104,"author":{"gitId":"Linxcathyyy"},"content":"        for (int i \u003d 0; i \u003c dateTimeArray.length - 1; i++) {","lastModifiedDate":"2021-09-04"},{"lineNumber":105,"author":{"gitId":"Linxcathyyy"},"content":"            if (i \u003d\u003d 1 \u0026\u0026 Integer.parseInt(dateTimeArray[i]) \u003c 10) {","lastModifiedDate":"2021-09-04"},{"lineNumber":106,"author":{"gitId":"Linxcathyyy"},"content":"                deadlineDate \u003d deadlineDate + \"0\" + dateTimeArray[i] + \" \";","lastModifiedDate":"2021-09-04"},{"lineNumber":107,"author":{"gitId":"Linxcathyyy"},"content":"            } else if (i \u003d\u003d 2) {","lastModifiedDate":"2021-09-04"},{"lineNumber":108,"author":{"gitId":"Linxcathyyy"},"content":"                deadlineDate \u003d deadlineDate + dateTimeArray[i];","lastModifiedDate":"2021-09-04"},{"lineNumber":109,"author":{"gitId":"Linxcathyyy"},"content":"            } else {","lastModifiedDate":"2021-09-04"},{"lineNumber":110,"author":{"gitId":"Linxcathyyy"},"content":"                deadlineDate \u003d deadlineDate + dateTimeArray[i] + \" \";","lastModifiedDate":"2021-09-04"},{"lineNumber":111,"author":{"gitId":"Linxcathyyy"},"content":"            }","lastModifiedDate":"2021-09-04"},{"lineNumber":112,"author":{"gitId":"Linxcathyyy"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":113,"author":{"gitId":"Linxcathyyy"},"content":"        LocalDate localDate \u003d LocalDate.parse(deadlineDate, DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-09-04"},{"lineNumber":114,"author":{"gitId":"Linxcathyyy"},"content":"        return localDate;","lastModifiedDate":"2021-09-04"},{"lineNumber":115,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":117,"author":{"gitId":"Linxcathyyy"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":118,"author":{"gitId":"Linxcathyyy"},"content":"     * Reads the local file and converts it the array, if the folder or file","lastModifiedDate":"2021-08-23"},{"lineNumber":119,"author":{"gitId":"Linxcathyyy"},"content":"     * does not exists, create an empty one.","lastModifiedDate":"2021-08-23"},{"lineNumber":120,"author":{"gitId":"Linxcathyyy"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":121,"author":{"gitId":"Linxcathyyy"},"content":"     * @return A boolean indicating whether the chat bot cat Meow is able to","lastModifiedDate":"2021-08-23"},{"lineNumber":122,"author":{"gitId":"Linxcathyyy"},"content":"     * read from the local file.","lastModifiedDate":"2021-08-23"},{"lineNumber":123,"author":{"gitId":"Linxcathyyy"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":124,"author":{"gitId":"Linxcathyyy"},"content":"    public boolean canReadFromFile() {","lastModifiedDate":"2021-08-23"},{"lineNumber":125,"author":{"gitId":"Linxcathyyy"},"content":"        File folder \u003d new File(\"data\");","lastModifiedDate":"2021-08-23"},{"lineNumber":126,"author":{"gitId":"Linxcathyyy"},"content":"        if (folder.isDirectory()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":127,"author":{"gitId":"Linxcathyyy"},"content":"            try {","lastModifiedDate":"2021-08-23"},{"lineNumber":128,"author":{"gitId":"Linxcathyyy"},"content":"                addFileContentToArray();","lastModifiedDate":"2021-08-23"},{"lineNumber":129,"author":{"gitId":"Linxcathyyy"},"content":"                return true;","lastModifiedDate":"2021-08-23"},{"lineNumber":130,"author":{"gitId":"Linxcathyyy"},"content":"            } catch (FileNotFoundException | InvalidDateTimeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":131,"author":{"gitId":"Linxcathyyy"},"content":"                // Create a file","lastModifiedDate":"2021-08-23"},{"lineNumber":132,"author":{"gitId":"Linxcathyyy"},"content":"                createFile();","lastModifiedDate":"2021-08-23"},{"lineNumber":133,"author":{"gitId":"Linxcathyyy"},"content":"                return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":134,"author":{"gitId":"Linxcathyyy"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":135,"author":{"gitId":"Linxcathyyy"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":136,"author":{"gitId":"Linxcathyyy"},"content":"            // Create a folder","lastModifiedDate":"2021-08-23"},{"lineNumber":137,"author":{"gitId":"Linxcathyyy"},"content":"            createFolder(\"data\");","lastModifiedDate":"2021-08-23"},{"lineNumber":138,"author":{"gitId":"Linxcathyyy"},"content":"            return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":139,"author":{"gitId":"Linxcathyyy"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":140,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":141,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":142,"author":{"gitId":"Linxcathyyy"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":143,"author":{"gitId":"Linxcathyyy"},"content":"     * Returns a list of meow.Task objects stored in the local file.","lastModifiedDate":"2021-08-23"},{"lineNumber":144,"author":{"gitId":"Linxcathyyy"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":145,"author":{"gitId":"Linxcathyyy"},"content":"     * @return A list of meow.Task objects.","lastModifiedDate":"2021-08-23"},{"lineNumber":146,"author":{"gitId":"Linxcathyyy"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":147,"author":{"gitId":"Linxcathyyy"},"content":"    public List\u003cTask\u003e getStorageTasksList() {","lastModifiedDate":"2021-08-23"},{"lineNumber":148,"author":{"gitId":"Linxcathyyy"},"content":"        return this.tasksList;","lastModifiedDate":"2021-08-23"},{"lineNumber":149,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":150,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":151,"author":{"gitId":"Linxcathyyy"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":152,"author":{"gitId":"Linxcathyyy"},"content":"     * Adds all the tasks in the task list to the local file.","lastModifiedDate":"2021-08-23"},{"lineNumber":153,"author":{"gitId":"Linxcathyyy"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":154,"author":{"gitId":"Linxcathyyy"},"content":"     * @param givenTaskList The task list that is used to store","lastModifiedDate":"2021-08-23"},{"lineNumber":155,"author":{"gitId":"Linxcathyyy"},"content":"     *                      the tasks input by the user.","lastModifiedDate":"2021-08-23"},{"lineNumber":156,"author":{"gitId":"Linxcathyyy"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":157,"author":{"gitId":"Linxcathyyy"},"content":"    public void addArrayTaskToFile(List\u003cTask\u003e givenTaskList) {","lastModifiedDate":"2021-08-23"},{"lineNumber":158,"author":{"gitId":"Linxcathyyy"},"content":"        String addedContent \u003d \"\";","lastModifiedDate":"2021-08-23"},{"lineNumber":159,"author":{"gitId":"Linxcathyyy"},"content":"        for (int i \u003d 0; i \u003c givenTaskList.size(); i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":160,"author":{"gitId":"Linxcathyyy"},"content":"            addedContent \u003d addedContent + givenTaskList.get(i).toString() + System.lineSeparator();","lastModifiedDate":"2021-08-23"},{"lineNumber":161,"author":{"gitId":"Linxcathyyy"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":162,"author":{"gitId":"Linxcathyyy"},"content":"        writeToFile(addedContent);","lastModifiedDate":"2021-08-23"},{"lineNumber":163,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":164,"author":{"gitId":"Linxcathyyy"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"Linxcathyyy":164}},{"path":"src/main/java/meow/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Linxcathyyy"},"content":"package meow;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"Linxcathyyy"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"Linxcathyyy"},"content":" * Represents a general task that the user wants to add","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"Linxcathyyy"},"content":" * in his or her todo list.","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"Linxcathyyy"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"Linxcathyyy"},"content":"public class Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"Linxcathyyy"},"content":"    protected String description;","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"Linxcathyyy"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"Linxcathyyy"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"Linxcathyyy"},"content":"     * A public constructor to initialize a meow.Task object.","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"Linxcathyyy"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"Linxcathyyy"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"Linxcathyyy"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"Linxcathyyy"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"Linxcathyyy"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"Linxcathyyy"},"content":"        return (isDone ? \"1\" : \"0\"); // mark done task with X","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"Linxcathyyy"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"Linxcathyyy"},"content":"     * Returns the description of the meow.Task object.","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"Linxcathyyy"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"Linxcathyyy"},"content":"     * @return The description of the meow.Task object.","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"Linxcathyyy"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"Linxcathyyy"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"Linxcathyyy"},"content":"        return description; // mark done task with X","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"Linxcathyyy"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"Linxcathyyy"},"content":"     * Changes the isDone field of the meow.Task object to true.","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"Linxcathyyy"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"Linxcathyyy"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-14"},{"lineNumber":36,"author":{"gitId":"Linxcathyyy"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-14"},{"lineNumber":37,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":38,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":39,"author":{"gitId":"Linxcathyyy"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"Linxcathyyy"},"content":"     * Returns the string representation of the meow.Task object.","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"Linxcathyyy"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":42,"author":{"gitId":"Linxcathyyy"},"content":"     * @return The string representation of the meow.Task object.","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"Linxcathyyy"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"Linxcathyyy"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":45,"author":{"gitId":"Linxcathyyy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":46,"author":{"gitId":"Linxcathyyy"},"content":"        return \" | \" + getStatusIcon() + \" | \" + getDescription();","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":48,"author":{"gitId":"Linxcathyyy"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"Linxcathyyy":48}},{"path":"src/main/java/meow/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Linxcathyyy"},"content":"package meow;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"Linxcathyyy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"Linxcathyyy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"Linxcathyyy"},"content":"import java.util.List;","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"Linxcathyyy"},"content":"import java.util.Locale;","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"Linxcathyyy"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"Linxcathyyy"},"content":" * Represents a task list that stores the tasks","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"Linxcathyyy"},"content":" * entered by the user.","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"Linxcathyyy"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"Linxcathyyy"},"content":"public class TaskList {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"Linxcathyyy"},"content":"    protected List\u003cTask\u003e tasksList;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"Linxcathyyy"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"Linxcathyyy"},"content":"     * A public constructor to initialize a meow.TaskList object which","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"Linxcathyyy"},"content":"     * stores the content from the local file.","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"Linxcathyyy"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"Linxcathyyy"},"content":"    public TaskList(List\u003cTask\u003e tasksList) {","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"Linxcathyyy"},"content":"        this.tasksList \u003d tasksList;","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"Linxcathyyy"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"Linxcathyyy"},"content":"     * A public constructor to initialize an empty meow.TaskList object.","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"Linxcathyyy"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"Linxcathyyy"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"Linxcathyyy"},"content":"        this.tasksList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"Linxcathyyy"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"Linxcathyyy"},"content":"     * Marks the specific task in the task list as done according to the","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"Linxcathyyy"},"content":"     * index input by the user. Prints the task that has been marked as","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"Linxcathyyy"},"content":"     * done and the total number of tasks in the list.","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"Linxcathyyy"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"Linxcathyyy"},"content":"     * @param index The task number that the user wants to mark as done.","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"Linxcathyyy"},"content":"     * @throws MeowException If the index is out of range.","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"Linxcathyyy"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"Linxcathyyy"},"content":"    public String completeTask(String index) throws MeowException {","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"Linxcathyyy"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"Linxcathyyy"},"content":"            int taskNumber \u003d Integer.parseInt(index);","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"Linxcathyyy"},"content":"            if (taskNumber \u003c\u003d tasksList.size() \u0026\u0026 taskNumber \u003e 0) {","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"Linxcathyyy"},"content":"                Task completedTask \u003d tasksList.get(taskNumber - 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"Linxcathyyy"},"content":"                completedTask.markAsDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"Linxcathyyy"},"content":"                return \"Nice! I\u0027ve marked this task as done:\\n\" + completedTask.toString();","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"Linxcathyyy"},"content":"            } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"Linxcathyyy"},"content":"                throw new InvalidTaskIndex();","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"Linxcathyyy"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"Linxcathyyy"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"Linxcathyyy"},"content":"            // String cannot be parsed to integer","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"Linxcathyyy"},"content":"            throw new NotSuchTaskFoundException();","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"Linxcathyyy"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"Linxcathyyy"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"Linxcathyyy"},"content":"     * Deletes the specific task in the task list according to the","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"Linxcathyyy"},"content":"     * index input by the user. Prints the task that has been deleted","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"Linxcathyyy"},"content":"     * and the total number of tasks left in the list.","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"Linxcathyyy"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"Linxcathyyy"},"content":"     * @param index The task number that the user wants to delete from the list.","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"Linxcathyyy"},"content":"     * @throws MeowException If the index is out of range.","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"Linxcathyyy"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"Linxcathyyy"},"content":"    public String deleteTask(String index) throws MeowException {","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"Linxcathyyy"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"Linxcathyyy"},"content":"            int taskNumber \u003d Integer.parseInt(index);","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"Linxcathyyy"},"content":"            if (taskNumber \u003c\u003d tasksList.size() \u0026\u0026 taskNumber \u003e 0) {","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"Linxcathyyy"},"content":"                Task removedTask \u003d tasksList.remove(taskNumber - 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"Linxcathyyy"},"content":"                int taskListLength \u003d tasksList.size();","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"Linxcathyyy"},"content":"                String task \u003d taskListLength \u003c\u003d 1 ? \" task \" : \" tasks \";","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"Linxcathyyy"},"content":"                return \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"Linxcathyyy"},"content":"                        + removedTask.toString() + \"\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"Linxcathyyy"},"content":"                        + \"Now you have \" + taskListLength + task + \"in the list.\";","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"Linxcathyyy"},"content":"            } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"Linxcathyyy"},"content":"                throw new InvalidTaskIndex();","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"Linxcathyyy"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"Linxcathyyy"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"Linxcathyyy"},"content":"            // String cannot be parsed to integer","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"Linxcathyyy"},"content":"            throw new NotSuchTaskFoundException();","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"Linxcathyyy"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"Linxcathyyy"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"Linxcathyyy"},"content":"     * Adds a new meow.Todo to the meow.TaskList and returns the meow.Todo","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"Linxcathyyy"},"content":"     * object added.","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"Linxcathyyy"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"Linxcathyyy"},"content":"     * @param todo The todo input by the user.","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"Linxcathyyy"},"content":"     * @return The meow.Todo object added.","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"Linxcathyyy"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"Linxcathyyy"},"content":"    public Todo addTodo(String todo) {","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"Linxcathyyy"},"content":"        Todo newTodo \u003d new Todo(todo);","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"Linxcathyyy"},"content":"        tasksList.add(newTodo);","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"Linxcathyyy"},"content":"        return newTodo;","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"Linxcathyyy"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"Linxcathyyy"},"content":"     * Adds a new meow.Deadline to the meow.TaskList and returns the meow.Deadline","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"Linxcathyyy"},"content":"     * object added.","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"Linxcathyyy"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"Linxcathyyy"},"content":"     * @param deadline The deadline input by the user.","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"Linxcathyyy"},"content":"     * @param date     The date of the deadline.","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"Linxcathyyy"},"content":"     * @param time     The time of the deadline.","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"Linxcathyyy"},"content":"     * @return The meow.Deadline object added.","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"Linxcathyyy"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"Linxcathyyy"},"content":"    public Deadline addDeadline(String deadline, LocalDate date, String time) {","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"Linxcathyyy"},"content":"        Deadline newDeadline \u003d new Deadline(deadline, date, time);","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"Linxcathyyy"},"content":"        tasksList.add(newDeadline);","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"Linxcathyyy"},"content":"        return newDeadline;","lastModifiedDate":"2021-08-23"},{"lineNumber":107,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":109,"author":{"gitId":"Linxcathyyy"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":110,"author":{"gitId":"Linxcathyyy"},"content":"     * Adds a new meow.Event to the meow.TaskList and returns the meow.Event","lastModifiedDate":"2021-08-23"},{"lineNumber":111,"author":{"gitId":"Linxcathyyy"},"content":"     * object added.","lastModifiedDate":"2021-08-23"},{"lineNumber":112,"author":{"gitId":"Linxcathyyy"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":113,"author":{"gitId":"Linxcathyyy"},"content":"     * @param event The event input by the user.","lastModifiedDate":"2021-08-23"},{"lineNumber":114,"author":{"gitId":"Linxcathyyy"},"content":"     * @param at    The time of the event.","lastModifiedDate":"2021-08-23"},{"lineNumber":115,"author":{"gitId":"Linxcathyyy"},"content":"     * @return The meow.Event object added.","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"Linxcathyyy"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":117,"author":{"gitId":"Linxcathyyy"},"content":"    public Event addEvent(String event, String at) {","lastModifiedDate":"2021-08-23"},{"lineNumber":118,"author":{"gitId":"Linxcathyyy"},"content":"        Event newEvent \u003d new Event(event, at);","lastModifiedDate":"2021-08-23"},{"lineNumber":119,"author":{"gitId":"Linxcathyyy"},"content":"        tasksList.add(newEvent);","lastModifiedDate":"2021-08-23"},{"lineNumber":120,"author":{"gitId":"Linxcathyyy"},"content":"        return newEvent;","lastModifiedDate":"2021-08-23"},{"lineNumber":121,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":122,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":123,"author":{"gitId":"Linxcathyyy"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":124,"author":{"gitId":"Linxcathyyy"},"content":"     * Returns a list of meow.Task objects stored in the meow.TaskList object.","lastModifiedDate":"2021-08-23"},{"lineNumber":125,"author":{"gitId":"Linxcathyyy"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":126,"author":{"gitId":"Linxcathyyy"},"content":"     * @return A list of meow.Task objects.","lastModifiedDate":"2021-08-23"},{"lineNumber":127,"author":{"gitId":"Linxcathyyy"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":128,"author":{"gitId":"Linxcathyyy"},"content":"    public List\u003cTask\u003e getTasksList() {","lastModifiedDate":"2021-08-23"},{"lineNumber":129,"author":{"gitId":"Linxcathyyy"},"content":"        return this.tasksList;","lastModifiedDate":"2021-08-23"},{"lineNumber":130,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":131,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":132,"author":{"gitId":"Linxcathyyy"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":133,"author":{"gitId":"Linxcathyyy"},"content":"     * Filter the list of meow.Task objects based on the keyword provided by the user,","lastModifiedDate":"2021-08-23"},{"lineNumber":134,"author":{"gitId":"Linxcathyyy"},"content":"     * and returns a list of meow.Task objects.","lastModifiedDate":"2021-08-23"},{"lineNumber":135,"author":{"gitId":"Linxcathyyy"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":136,"author":{"gitId":"Linxcathyyy"},"content":"     * @param keywords The search keywords input by the user.","lastModifiedDate":"2021-09-04"},{"lineNumber":137,"author":{"gitId":"Linxcathyyy"},"content":"     * @return A list of filtered meow.Task objects.","lastModifiedDate":"2021-08-23"},{"lineNumber":138,"author":{"gitId":"Linxcathyyy"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":139,"author":{"gitId":"Linxcathyyy"},"content":"    public List\u003cTask\u003e searchTask(String ... keywords) {","lastModifiedDate":"2021-09-04"},{"lineNumber":140,"author":{"gitId":"Linxcathyyy"},"content":"        boolean resultFound \u003d false;","lastModifiedDate":"2021-09-04"},{"lineNumber":141,"author":{"gitId":"Linxcathyyy"},"content":"        List\u003cTask\u003e filteredTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-04"},{"lineNumber":142,"author":{"gitId":"Linxcathyyy"},"content":"        final String TODO \u003d \"todo\";","lastModifiedDate":"2021-09-04"},{"lineNumber":143,"author":{"gitId":"Linxcathyyy"},"content":"        final String EVENT \u003d \"event\";","lastModifiedDate":"2021-09-04"},{"lineNumber":144,"author":{"gitId":"Linxcathyyy"},"content":"        final String DEADLINE \u003d \"deadline\";","lastModifiedDate":"2021-09-04"},{"lineNumber":145,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":146,"author":{"gitId":"Linxcathyyy"},"content":"        for (int i \u003d 0; i \u003c this.tasksList.size(); i++) {","lastModifiedDate":"2021-09-04"},{"lineNumber":147,"author":{"gitId":"Linxcathyyy"},"content":"            Task task \u003d this.tasksList.get(i);","lastModifiedDate":"2021-09-04"},{"lineNumber":148,"author":{"gitId":"Linxcathyyy"},"content":"            String description \u003d task.getDescription();","lastModifiedDate":"2021-09-04"},{"lineNumber":149,"author":{"gitId":"Linxcathyyy"},"content":"            String status \u003d task.getStatusIcon();","lastModifiedDate":"2021-09-04"},{"lineNumber":150,"author":{"gitId":"Linxcathyyy"},"content":"            String typeOfTask \u003d \"\";","lastModifiedDate":"2021-09-04"},{"lineNumber":151,"author":{"gitId":"Linxcathyyy"},"content":"            String time \u003d \"\";","lastModifiedDate":"2021-09-04"},{"lineNumber":152,"author":{"gitId":"Linxcathyyy"},"content":"            String date \u003d \"\";","lastModifiedDate":"2021-09-04"},{"lineNumber":153,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":154,"author":{"gitId":"Linxcathyyy"},"content":"            if (task instanceof Event) {","lastModifiedDate":"2021-09-04"},{"lineNumber":155,"author":{"gitId":"Linxcathyyy"},"content":"                time \u003d ((Event) task).getEventTime();","lastModifiedDate":"2021-09-04"},{"lineNumber":156,"author":{"gitId":"Linxcathyyy"},"content":"                typeOfTask \u003d EVENT;","lastModifiedDate":"2021-09-04"},{"lineNumber":157,"author":{"gitId":"Linxcathyyy"},"content":"            } else if (task instanceof Deadline) {","lastModifiedDate":"2021-09-04"},{"lineNumber":158,"author":{"gitId":"Linxcathyyy"},"content":"                time \u003d ((Deadline) task).getDeadlineTime();","lastModifiedDate":"2021-09-04"},{"lineNumber":159,"author":{"gitId":"Linxcathyyy"},"content":"                typeOfTask \u003d DEADLINE;","lastModifiedDate":"2021-09-04"},{"lineNumber":160,"author":{"gitId":"Linxcathyyy"},"content":"                date \u003d ((Deadline) task).getDeadlineDate();","lastModifiedDate":"2021-09-04"},{"lineNumber":161,"author":{"gitId":"Linxcathyyy"},"content":"                System.out.println(date);","lastModifiedDate":"2021-09-04"},{"lineNumber":162,"author":{"gitId":"Linxcathyyy"},"content":"            } else {","lastModifiedDate":"2021-09-04"},{"lineNumber":163,"author":{"gitId":"Linxcathyyy"},"content":"                typeOfTask \u003d TODO;","lastModifiedDate":"2021-09-04"},{"lineNumber":164,"author":{"gitId":"Linxcathyyy"},"content":"            }","lastModifiedDate":"2021-09-04"},{"lineNumber":165,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":166,"author":{"gitId":"Linxcathyyy"},"content":"            for (int j \u003d 0; j \u003c keywords.length; j++) {","lastModifiedDate":"2021-09-04"},{"lineNumber":167,"author":{"gitId":"Linxcathyyy"},"content":"                resultFound \u003d resultFound || description.contains(keywords[j].toLowerCase(Locale.ROOT))","lastModifiedDate":"2021-09-04"},{"lineNumber":168,"author":{"gitId":"Linxcathyyy"},"content":"                        ||","lastModifiedDate":"2021-09-04"},{"lineNumber":169,"author":{"gitId":"Linxcathyyy"},"content":"                        status.contains(keywords[j])","lastModifiedDate":"2021-09-04"},{"lineNumber":170,"author":{"gitId":"Linxcathyyy"},"content":"                        ||","lastModifiedDate":"2021-09-04"},{"lineNumber":171,"author":{"gitId":"Linxcathyyy"},"content":"                        time.contains(keywords[j].toLowerCase(Locale.ROOT))","lastModifiedDate":"2021-09-04"},{"lineNumber":172,"author":{"gitId":"Linxcathyyy"},"content":"                        ||","lastModifiedDate":"2021-09-04"},{"lineNumber":173,"author":{"gitId":"Linxcathyyy"},"content":"                        typeOfTask.contains(keywords[j].toLowerCase(Locale.ROOT))","lastModifiedDate":"2021-09-04"},{"lineNumber":174,"author":{"gitId":"Linxcathyyy"},"content":"                        ||","lastModifiedDate":"2021-09-04"},{"lineNumber":175,"author":{"gitId":"Linxcathyyy"},"content":"                        date.contains(keywords[j].toLowerCase(Locale.ROOT));","lastModifiedDate":"2021-09-04"},{"lineNumber":176,"author":{"gitId":"Linxcathyyy"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":177,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":178,"author":{"gitId":"Linxcathyyy"},"content":"            if (resultFound) {","lastModifiedDate":"2021-09-04"},{"lineNumber":179,"author":{"gitId":"Linxcathyyy"},"content":"                filteredTasks.add(this.tasksList.get(i));","lastModifiedDate":"2021-09-04"},{"lineNumber":180,"author":{"gitId":"Linxcathyyy"},"content":"            }","lastModifiedDate":"2021-09-04"},{"lineNumber":181,"author":{"gitId":"Linxcathyyy"},"content":"            resultFound \u003d false;","lastModifiedDate":"2021-09-04"},{"lineNumber":182,"author":{"gitId":"Linxcathyyy"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":183,"author":{"gitId":"Linxcathyyy"},"content":"        return filteredTasks;","lastModifiedDate":"2021-09-04"},{"lineNumber":184,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":185,"author":{"gitId":"Linxcathyyy"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"Linxcathyyy":185}},{"path":"src/main/java/meow/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Linxcathyyy"},"content":"package meow;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"Linxcathyyy"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"Linxcathyyy"},"content":" * Represents a specific task (a todo) containing the description of the task","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"Linxcathyyy"},"content":" * that the user wants to add in his or her todo list.","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"Linxcathyyy"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"Linxcathyyy"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"Linxcathyyy"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"Linxcathyyy"},"content":"     * A public constructor to initialize a meow.Todo object.","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"Linxcathyyy"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"Linxcathyyy"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"Linxcathyyy"},"content":"        super(description);","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"Linxcathyyy"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"Linxcathyyy"},"content":"     * Returns the string representation of the meow.Todo object.","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"Linxcathyyy"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"Linxcathyyy"},"content":"     * @return The string representation of the meow.Todo object.","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"Linxcathyyy"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"Linxcathyyy"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"Linxcathyyy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"Linxcathyyy"},"content":"        return \"T\" + super.toString();","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"Linxcathyyy"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"Linxcathyyy":25}},{"path":"src/main/java/meow/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Linxcathyyy"},"content":"package meow;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"Linxcathyyy"},"content":"import java.util.List;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"Linxcathyyy"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"Linxcathyyy"},"content":" * Represents a user interface that interacts with the users","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"Linxcathyyy"},"content":" * by printing the response from the chat bot cat Meow.","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"Linxcathyyy"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"Linxcathyyy"},"content":"public class Ui {","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"Linxcathyyy"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"Linxcathyyy"},"content":"     * A public constructor to initialize an meow.Ui object.","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"Linxcathyyy"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"Linxcathyyy"},"content":"    public Ui() {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"Linxcathyyy"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"Linxcathyyy"},"content":"     * Prints the greeting message from the chat bot cat Meow.","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"Linxcathyyy"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"Linxcathyyy"},"content":"     * @return A String representation of the greeting message from the chat bot.","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"Linxcathyyy"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"Linxcathyyy"},"content":"    public String greet() {","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"Linxcathyyy"},"content":"        return \"Meow: Hi human, I\u0027m your cat Meow~ What can I do for you?\";","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"Linxcathyyy"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"Linxcathyyy"},"content":"     * Prints the bye message from the chat bot cat Meow.","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"Linxcathyyy"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"Linxcathyyy"},"content":"     * @return A String representation of the goodbye message from the chat bot.","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"Linxcathyyy"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"Linxcathyyy"},"content":"    public String exit() {","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"Linxcathyyy"},"content":"        return \"Meow: Bye human~ Your cat is going to sleep now~\";","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"Linxcathyyy"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"Linxcathyyy"},"content":"     * Displays all the tasks in the task list that the user has entered.","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"Linxcathyyy"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"Linxcathyyy"},"content":"     * @param tasksList The task list that stores the tasks input by the user.","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"Linxcathyyy"},"content":"     * @return A list of tasks added by the user.","lastModifiedDate":"2021-09-04"},{"lineNumber":41,"author":{"gitId":"Linxcathyyy"},"content":"     * @throws NoItemInTheListException If the tasksList is empty.","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"Linxcathyyy"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"Linxcathyyy"},"content":"    public String displayList(List\u003cTask\u003e tasksList) throws NoItemInTheListException {","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"Linxcathyyy"},"content":"        int len \u003d tasksList.size();","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"Linxcathyyy"},"content":"        if (len \u003e 0) {","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"Linxcathyyy"},"content":"            String list \u003d \"\";","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"Linxcathyyy"},"content":"            for (int i \u003d 0; i \u003c len; i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"Linxcathyyy"},"content":"                Task task \u003d tasksList.get(i);","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"Linxcathyyy"},"content":"                list \u003d list + (i + 1 + \". \" + task.toString() + \"\\n\");","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"Linxcathyyy"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"Linxcathyyy"},"content":"            return \"Here are the tasks in your list:\\n\" + list;","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"Linxcathyyy"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"Linxcathyyy"},"content":"            throw new NoItemInTheListException();","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"Linxcathyyy"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"Linxcathyyy"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"Linxcathyyy"},"content":"     * Displays all the tasks in the task list that the user has entered.","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"Linxcathyyy"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"Linxcathyyy"},"content":"     * @param filteredList The task list that stores the tasks input by the user.","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"Linxcathyyy"},"content":"     * @return A list of tasks filtered by the keywords.","lastModifiedDate":"2021-09-04"},{"lineNumber":62,"author":{"gitId":"Linxcathyyy"},"content":"     * @throws NoSearchResultException If there is not matching result.","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"Linxcathyyy"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"Linxcathyyy"},"content":"    public String displaySearchList(List\u003cTask\u003e filteredList) throws NoSearchResultException {","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"Linxcathyyy"},"content":"        int len \u003d filteredList.size();","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"Linxcathyyy"},"content":"        if (len \u003e 0) {","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"Linxcathyyy"},"content":"            String list \u003d \"\";","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"Linxcathyyy"},"content":"            for (int i \u003d 0; i \u003c len; i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"Linxcathyyy"},"content":"                Task task \u003d filteredList.get(i);","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"Linxcathyyy"},"content":"                list \u003d list + (i + 1 + \". \" + task.toString() + \"\\n\");","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"Linxcathyyy"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"Linxcathyyy"},"content":"            return \"Here are the matching tasks in your list:\\n\" + list;","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"Linxcathyyy"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"Linxcathyyy"},"content":"            throw new NoSearchResultException();","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"Linxcathyyy"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"Linxcathyyy"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"Linxcathyyy"},"content":"     * Displays the new task that has been added to the list and the number","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"Linxcathyyy"},"content":"     * of tasks stored in the list.","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"Linxcathyyy"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"Linxcathyyy"},"content":"     * @param tasksList The task list that stores the tasks input by the user.","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"Linxcathyyy"},"content":"     * @param taskAdded The new task that has been added to the list.","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"Linxcathyyy"},"content":"     * @return The new task added by the user and all the tasks in the list.","lastModifiedDate":"2021-09-04"},{"lineNumber":85,"author":{"gitId":"Linxcathyyy"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"Linxcathyyy"},"content":"    public String printTaskList(List\u003cTask\u003e tasksList, Task taskAdded) {","lastModifiedDate":"2021-08-29"},{"lineNumber":87,"author":{"gitId":"Linxcathyyy"},"content":"        int taskListLength \u003d tasksList.size();","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"Linxcathyyy"},"content":"        String task \u003d taskListLength \u003c\u003d 1 ? \" task \" : \" tasks \";","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"Linxcathyyy"},"content":"        return \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":90,"author":{"gitId":"Linxcathyyy"},"content":"                + taskAdded.toString() + \"\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":91,"author":{"gitId":"Linxcathyyy"},"content":"                + \"Now you have \"","lastModifiedDate":"2021-08-29"},{"lineNumber":92,"author":{"gitId":"Linxcathyyy"},"content":"                + taskListLength","lastModifiedDate":"2021-08-29"},{"lineNumber":93,"author":{"gitId":"Linxcathyyy"},"content":"                + task","lastModifiedDate":"2021-08-29"},{"lineNumber":94,"author":{"gitId":"Linxcathyyy"},"content":"                + \"in the list.\";","lastModifiedDate":"2021-08-29"},{"lineNumber":95,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"Linxcathyyy"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"Linxcathyyy":96}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Linxcathyyy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"Linxcathyyy"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"Linxcathyyy"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"Linxcathyyy"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"Linxcathyyy"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"Linxcathyyy"},"content":"\u003cfx:root alignment\u003d\"CENTER_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"Linxcathyyy"},"content":"         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"Linxcathyyy"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"Linxcathyyy"},"content":"        \u003cLabel fx:id\u003d\"dialog\" style\u003d\"-fx-padding: 10 10 10 10; -fx-background-color: #d99694; -fx-border-radius: 30; -fx-background-radius: 30;\" text\u003d\"Label\" textFill\u003d\"WHITE\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"Linxcathyyy"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"Linxcathyyy"},"content":"            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"Linxcathyyy"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"Linxcathyyy"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"Linxcathyyy"},"content":"            \u003cInsets bottom\u003d\"10.0\" left\u003d\"20.0\" right\u003d\"20.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"Linxcathyyy"},"content":"         \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"Linxcathyyy"},"content":"      \u003cCircle fx:id\u003d\"profile\" fill\u003d\"DODGERBLUE\" radius\u003d\"43.0\" stroke\u003d\"BLACK\" strokeType\u003d\"INSIDE\"\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"Linxcathyyy"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"Linxcathyyy"},"content":"            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"Linxcathyyy"},"content":"         \u003c/HBox.margin\u003e\u003c/Circle\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"Linxcathyyy"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"Linxcathyyy"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"Linxcathyyy"},"content":"        \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"Linxcathyyy"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"Linxcathyyy"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"Linxcathyyy":26}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Linxcathyyy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"Linxcathyyy"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"Linxcathyyy"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"Linxcathyyy"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"Linxcathyyy"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"Linxcathyyy"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"Linxcathyyy"},"content":"\u003cAnchorPane maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\"","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"Linxcathyyy"},"content":"            minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"meow.MainWindow\"\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"Linxcathyyy"},"content":"\u003cchildren\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"Linxcathyyy"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutX\u003d\"10.0\" layoutY\u003d\"562.0\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"34.0\" prefWidth\u003d\"299.0\" style\u003d\"-fx-background-radius: 20;\" AnchorPane.bottomAnchor\u003d\"4.0\" /\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"Linxcathyyy"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"322.0\" layoutY\u003d\"564.0\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"28.0\" prefWidth\u003d\"69.0\" style\u003d\"-fx-background-color: #d99694;\" text\u003d\"Send\" textFill\u003d\"WHITE\" /\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"Linxcathyyy"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"Linxcathyyy"},"content":"        \u003ccontent\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"Linxcathyyy"},"content":"            \u003cVBox fx:id\u003d\"dialogContainer\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"Linxcathyyy"},"content":"                  prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: rgba(217,150,148,0.3);\" /\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"Linxcathyyy"},"content":"        \u003c/content\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"Linxcathyyy"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"Linxcathyyy"},"content":"\u003c/children\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"Linxcathyyy"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"Linxcathyyy":21}},{"path":"src/test/java/meow/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Linxcathyyy"},"content":"package meow;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"Linxcathyyy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"Linxcathyyy"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"Linxcathyyy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"Linxcathyyy"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"Linxcathyyy"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"Linxcathyyy"},"content":"    public void convertToLocalDate_invalidDate_exceptionThrown() {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"Linxcathyyy"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"Linxcathyyy"},"content":"            assertEquals(\"2020-13-70\",","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"Linxcathyyy"},"content":"                    new Parser().convertToLocalDate(\"70/13/2020\").toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"Linxcathyyy"},"content":"            fail();","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"Linxcathyyy"},"content":"            // the test should not reach this line","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"Linxcathyyy"},"content":"        } catch (InvalidDateTimeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"Linxcathyyy"},"content":"            String errorMessage \u003d \"Meow: The format of your deadline is invalid, please try again~\";","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"Linxcathyyy"},"content":"            assertEquals(errorMessage,","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"Linxcathyyy"},"content":"                    e.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"Linxcathyyy"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"Linxcathyyy"},"content":"    private void fail() {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"Linxcathyyy"},"content":"        System.out.println(\"Your test has failed.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"Linxcathyyy"},"content":"        Assertions.fail();","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"Linxcathyyy"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"Linxcathyyy":27}},{"path":"src/test/java/meow/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Linxcathyyy"},"content":"package meow;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"Linxcathyyy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"Linxcathyyy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"Linxcathyyy"},"content":"public class TaskListTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"Linxcathyyy"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"Linxcathyyy"},"content":"    public void addEvent_correctInput_returnEventString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"Linxcathyyy"},"content":"        assertEquals(\"E | 0 | team meeting | Sunday 1600\",","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"Linxcathyyy"},"content":"                new TaskList().addEvent(\"team meeting\", \"Sunday 1600\").toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"Linxcathyyy"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"Linxcathyyy":13}},{"path":"src/test/java/meow/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Linxcathyyy"},"content":"package meow;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"Linxcathyyy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"Linxcathyyy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"Linxcathyyy"},"content":"public class TodoTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"Linxcathyyy"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"Linxcathyyy"},"content":"    public void toString_correctInput_returnToDoString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"Linxcathyyy"},"content":"        assertEquals(\"T | 0 | do homework\",","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"Linxcathyyy"},"content":"                new Todo(\"do homework\").toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"Linxcathyyy"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"Linxcathyyy":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Linxcathyyy"},"content":"todo read book","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"Linxcathyyy"},"content":"todo do laundry","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"Linxcathyyy"},"content":"done 1","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"Linxcathyyy"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"Linxcathyyy"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"Linxcathyyy"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"Linxcathyyy"},"content":"done 10","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"Linxcathyyy"},"content":"done 3","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"Linxcathyyy"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"Linxcathyyy"},"content":"bye","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"Linxcathyyy":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Linxcathyyy"},"content":"java -classpath ..\\bin meow.Main \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Linxcathyyy":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"Linxcathyyy"},"content":"java -classpath ../bin Main \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Linxcathyyy":1,"-":37}}]
