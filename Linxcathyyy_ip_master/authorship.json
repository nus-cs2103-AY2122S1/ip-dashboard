[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Linxcathyyy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Linxcathyyy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Linxcathyyy"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"Linxcathyyy"},"content":" * Represents a specific task (an event) containing the description","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"Linxcathyyy"},"content":" * and the deadline of the task that the user wants","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"Linxcathyyy"},"content":" * to add in his or her todo list.","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"Linxcathyyy"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"Linxcathyyy"},"content":"public class Deadline extends Task{","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"Linxcathyyy"},"content":"    protected LocalDate date;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Linxcathyyy"},"content":"    protected String time;","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"Linxcathyyy"},"content":"    public Deadline(String description, LocalDate date, String time) {","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Linxcathyyy"},"content":"        super(description);","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"Linxcathyyy"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Linxcathyyy"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"Linxcathyyy"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"Linxcathyyy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"Linxcathyyy"},"content":"        return \"D\" + super.toString() + \" | \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" \" + time;","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"Linxcathyyy"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"Linxcathyyy":23}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Linxcathyyy"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"Linxcathyyy"},"content":" * Represents a specific task (an event) containing the description","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"Linxcathyyy"},"content":" * and the starting and ending time of the task that the user wants","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"Linxcathyyy"},"content":" * to add in his or her todo list.","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"Linxcathyyy"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"Linxcathyyy"},"content":"public class Event extends Task{","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"Linxcathyyy"},"content":"    protected String at;","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"Linxcathyyy"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"Linxcathyyy"},"content":"        super(description);","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"Linxcathyyy"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"Linxcathyyy"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"Linxcathyyy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"Linxcathyyy"},"content":"        return \"E\" + super.toString() + \" | \" + at;","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"Linxcathyyy"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"Linxcathyyy":18}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Linxcathyyy"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Linxcathyyy"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"Linxcathyyy"},"content":"public class Main {","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"Linxcathyyy"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Linxcathyyy"},"content":"        run();","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"Linxcathyyy"},"content":"    public static void run() {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Linxcathyyy"},"content":"        // Create a new chat bot object.","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"Linxcathyyy"},"content":"        Meow meow \u003d new Meow();","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"Linxcathyyy"},"content":"        // Read the file and convert the content to the taskList array","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Linxcathyyy"},"content":"        meow.convertFileToArray();","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Linxcathyyy"},"content":"        // Greeting from chat bot.","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"Linxcathyyy"},"content":"        meow.greet();","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"Linxcathyyy"},"content":"        // Create a scanner to read from standard input.","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"Linxcathyyy"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"Linxcathyyy"},"content":"        while (!meow.getIsExit()) {","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"Linxcathyyy"},"content":"            try {","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"Linxcathyyy"},"content":"                String input \u003d scanner.nextLine();","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"Linxcathyyy"},"content":"                meow.checkCommand(input);","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"Linxcathyyy"},"content":"            } catch (MeowException exception) {","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"Linxcathyyy"},"content":"                System.out.println(exception.toString());","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"Linxcathyyy"},"content":"            }","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"Linxcathyyy"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"Linxcathyyy"},"content":"        // Clean up the scanner.","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"Linxcathyyy"},"content":"        scanner.close();","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"Linxcathyyy"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"Linxcathyyy":29}},{"path":"src/main/java/Meow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Linxcathyyy"},"content":"import java.io.File;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Linxcathyyy"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Linxcathyyy"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Linxcathyyy"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Linxcathyyy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Linxcathyyy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Linxcathyyy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Linxcathyyy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"Linxcathyyy"},"content":"import java.util.List;","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"Linxcathyyy"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"Linxcathyyy"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"Linxcathyyy"},"content":" * Represents a chat bot Meow who will be performing different tasks","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"Linxcathyyy"},"content":" * according to user input.","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"Linxcathyyy"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"Linxcathyyy"},"content":"public class Meow {","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"Linxcathyyy"},"content":"    private boolean isExit \u003d false;","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"Linxcathyyy"},"content":"    private List\u003cTask\u003e tasksList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Linxcathyyy"},"content":"    enum Command {","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"Linxcathyyy"},"content":"        BYE,","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"Linxcathyyy"},"content":"        LIST,","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"Linxcathyyy"},"content":"        DONE,","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"Linxcathyyy"},"content":"        DELETE,","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"Linxcathyyy"},"content":"        TODO,","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"Linxcathyyy"},"content":"        EVENT,","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"Linxcathyyy"},"content":"        DEADLINE","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"Linxcathyyy"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"Linxcathyyy"},"content":"     * A public constructor to initialize a Meow object.","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"Linxcathyyy"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"Linxcathyyy"},"content":"    public Meow() {","lastModifiedDate":"2021-08-14"},{"lineNumber":34,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":35,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":36,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":37,"author":{"gitId":"Linxcathyyy"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":38,"author":{"gitId":"Linxcathyyy"},"content":"     * Prints the greeting message from the chat bot cat Meow.","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"Linxcathyyy"},"content":"     *","lastModifiedDate":"2021-08-14"},{"lineNumber":40,"author":{"gitId":"Linxcathyyy"},"content":"     * @return A boolean indicating whether the user wants to exit to","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"Linxcathyyy"},"content":"     * chat bot or nor.","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"Linxcathyyy"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":43,"author":{"gitId":"Linxcathyyy"},"content":"    public boolean getIsExit() {","lastModifiedDate":"2021-08-16"},{"lineNumber":44,"author":{"gitId":"Linxcathyyy"},"content":"        return this.isExit;","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":46,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":47,"author":{"gitId":"Linxcathyyy"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":48,"author":{"gitId":"Linxcathyyy"},"content":"     * Prints the greeting message from the chat bot cat Meow.","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"Linxcathyyy"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":50,"author":{"gitId":"Linxcathyyy"},"content":"    public void greet() {","lastModifiedDate":"2021-08-16"},{"lineNumber":51,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":52,"author":{"gitId":"Linxcathyyy"},"content":"        System.out.println(","lastModifiedDate":"2021-08-16"},{"lineNumber":53,"author":{"gitId":"Linxcathyyy"},"content":"                \"------------------------------------------------------------------------------\\n\" +","lastModifiedDate":"2021-08-16"},{"lineNumber":54,"author":{"gitId":"Linxcathyyy"},"content":"                        \"Meow: Hi human, I\u0027m your cat Meow~ What can I do for you?\\n\" +","lastModifiedDate":"2021-08-16"},{"lineNumber":55,"author":{"gitId":"Linxcathyyy"},"content":"                        \"------------------------------------------------------------------------------\"","lastModifiedDate":"2021-08-16"},{"lineNumber":56,"author":{"gitId":"Linxcathyyy"},"content":"        );","lastModifiedDate":"2021-08-16"},{"lineNumber":57,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":58,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":59,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":60,"author":{"gitId":"Linxcathyyy"},"content":"    /**","lastModifiedDate":"2021-08-14"},{"lineNumber":61,"author":{"gitId":"Linxcathyyy"},"content":"     * Prints the goodbye message from the chat bot cat Meow.","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"Linxcathyyy"},"content":"     */","lastModifiedDate":"2021-08-14"},{"lineNumber":63,"author":{"gitId":"Linxcathyyy"},"content":"    private void exit() {","lastModifiedDate":"2021-08-16"},{"lineNumber":64,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":65,"author":{"gitId":"Linxcathyyy"},"content":"        System.out.println(","lastModifiedDate":"2021-08-16"},{"lineNumber":66,"author":{"gitId":"Linxcathyyy"},"content":"                \"------------------------------------------------------------------------------\\n\" +","lastModifiedDate":"2021-08-16"},{"lineNumber":67,"author":{"gitId":"Linxcathyyy"},"content":"                        \"Meow: Bye human, see you soon! Your cat Meow is going to sleep now~\\n\" +","lastModifiedDate":"2021-08-16"},{"lineNumber":68,"author":{"gitId":"Linxcathyyy"},"content":"                        \"------------------------------------------------------------------------------\"","lastModifiedDate":"2021-08-16"},{"lineNumber":69,"author":{"gitId":"Linxcathyyy"},"content":"        );","lastModifiedDate":"2021-08-16"},{"lineNumber":70,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":71,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":72,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":73,"author":{"gitId":"Linxcathyyy"},"content":"    private void displayList() throws NoItemInTheListException {","lastModifiedDate":"2021-08-16"},{"lineNumber":74,"author":{"gitId":"Linxcathyyy"},"content":"        int len \u003d tasksList.size();","lastModifiedDate":"2021-08-14"},{"lineNumber":75,"author":{"gitId":"Linxcathyyy"},"content":"        if (len \u003e 0) {","lastModifiedDate":"2021-08-14"},{"lineNumber":76,"author":{"gitId":"Linxcathyyy"},"content":"            System.out.println(\"------------------------------------------------------------------------------\");","lastModifiedDate":"2021-08-16"},{"lineNumber":77,"author":{"gitId":"Linxcathyyy"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-08-14"},{"lineNumber":78,"author":{"gitId":"Linxcathyyy"},"content":"            for (int i \u003d 0; i \u003c len; i++) {","lastModifiedDate":"2021-08-14"},{"lineNumber":79,"author":{"gitId":"Linxcathyyy"},"content":"                Task task \u003d tasksList.get(i);","lastModifiedDate":"2021-08-14"},{"lineNumber":80,"author":{"gitId":"Linxcathyyy"},"content":"                System.out.println(i + 1 + \". \" + task.toString());","lastModifiedDate":"2021-08-15"},{"lineNumber":81,"author":{"gitId":"Linxcathyyy"},"content":"            }","lastModifiedDate":"2021-08-14"},{"lineNumber":82,"author":{"gitId":"Linxcathyyy"},"content":"            System.out.println(\"------------------------------------------------------------------------------\");","lastModifiedDate":"2021-08-16"},{"lineNumber":83,"author":{"gitId":"Linxcathyyy"},"content":"        } else {","lastModifiedDate":"2021-08-14"},{"lineNumber":84,"author":{"gitId":"Linxcathyyy"},"content":"            throw new NoItemInTheListException();","lastModifiedDate":"2021-08-16"},{"lineNumber":85,"author":{"gitId":"Linxcathyyy"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":86,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":87,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":88,"author":{"gitId":"Linxcathyyy"},"content":"    private void writeToFile(String filePath, String textToAdd) {","lastModifiedDate":"2021-08-22"},{"lineNumber":89,"author":{"gitId":"Linxcathyyy"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"Linxcathyyy"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2021-08-22"},{"lineNumber":91,"author":{"gitId":"Linxcathyyy"},"content":"            fw.write(textToAdd);","lastModifiedDate":"2021-08-22"},{"lineNumber":92,"author":{"gitId":"Linxcathyyy"},"content":"            fw.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":93,"author":{"gitId":"Linxcathyyy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":94,"author":{"gitId":"Linxcathyyy"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-22"},{"lineNumber":95,"author":{"gitId":"Linxcathyyy"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":96,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":98,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":99,"author":{"gitId":"Linxcathyyy"},"content":"    private void createFile(String filePath) {","lastModifiedDate":"2021-08-22"},{"lineNumber":100,"author":{"gitId":"Linxcathyyy"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":101,"author":{"gitId":"Linxcathyyy"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2021-08-22"},{"lineNumber":102,"author":{"gitId":"Linxcathyyy"},"content":"            file.createNewFile();","lastModifiedDate":"2021-08-22"},{"lineNumber":103,"author":{"gitId":"Linxcathyyy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":104,"author":{"gitId":"Linxcathyyy"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-22"},{"lineNumber":105,"author":{"gitId":"Linxcathyyy"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":106,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":107,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":108,"author":{"gitId":"Linxcathyyy"},"content":"    private void createFolder(String filePath) {","lastModifiedDate":"2021-08-22"},{"lineNumber":109,"author":{"gitId":"Linxcathyyy"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2021-08-22"},{"lineNumber":110,"author":{"gitId":"Linxcathyyy"},"content":"        file.mkdir();","lastModifiedDate":"2021-08-22"},{"lineNumber":111,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":112,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":113,"author":{"gitId":"Linxcathyyy"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":114,"author":{"gitId":"Linxcathyyy"},"content":"     * Reads the local file and converts it the array, if the folder or file","lastModifiedDate":"2021-08-22"},{"lineNumber":115,"author":{"gitId":"Linxcathyyy"},"content":"     * does not exists, create an empty one.","lastModifiedDate":"2021-08-22"},{"lineNumber":116,"author":{"gitId":"Linxcathyyy"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":117,"author":{"gitId":"Linxcathyyy"},"content":"    public void convertFileToArray() {","lastModifiedDate":"2021-08-22"},{"lineNumber":118,"author":{"gitId":"Linxcathyyy"},"content":"        File folder \u003d new File(\"data\");","lastModifiedDate":"2021-08-22"},{"lineNumber":119,"author":{"gitId":"Linxcathyyy"},"content":"        if (folder.isDirectory()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":120,"author":{"gitId":"Linxcathyyy"},"content":"            try {","lastModifiedDate":"2021-08-22"},{"lineNumber":121,"author":{"gitId":"Linxcathyyy"},"content":"                addFileContentToArray(\"data/meow.txt\");","lastModifiedDate":"2021-08-22"},{"lineNumber":122,"author":{"gitId":"Linxcathyyy"},"content":"            } catch (FileNotFoundException | InvalidDateTimeException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":123,"author":{"gitId":"Linxcathyyy"},"content":"                // Create a file","lastModifiedDate":"2021-08-22"},{"lineNumber":124,"author":{"gitId":"Linxcathyyy"},"content":"                createFile(\"data/meow.txt\");","lastModifiedDate":"2021-08-22"},{"lineNumber":125,"author":{"gitId":"Linxcathyyy"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":126,"author":{"gitId":"Linxcathyyy"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":127,"author":{"gitId":"Linxcathyyy"},"content":"            // Create a folder","lastModifiedDate":"2021-08-22"},{"lineNumber":128,"author":{"gitId":"Linxcathyyy"},"content":"            createFolder(\"data\");","lastModifiedDate":"2021-08-22"},{"lineNumber":129,"author":{"gitId":"Linxcathyyy"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":130,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":131,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":132,"author":{"gitId":"Linxcathyyy"},"content":"    private void addFileContentToArray(String filePath) throws FileNotFoundException, InvalidDateTimeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":133,"author":{"gitId":"Linxcathyyy"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2021-08-22"},{"lineNumber":134,"author":{"gitId":"Linxcathyyy"},"content":"        Scanner s \u003d new Scanner(file);","lastModifiedDate":"2021-08-22"},{"lineNumber":135,"author":{"gitId":"Linxcathyyy"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":136,"author":{"gitId":"Linxcathyyy"},"content":"            String task \u003d s.nextLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":137,"author":{"gitId":"Linxcathyyy"},"content":"            addTaskToArray(task);","lastModifiedDate":"2021-08-22"},{"lineNumber":138,"author":{"gitId":"Linxcathyyy"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":139,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":140,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":141,"author":{"gitId":"Linxcathyyy"},"content":"    private void addTaskToArray(String input) throws InvalidDateTimeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":142,"author":{"gitId":"Linxcathyyy"},"content":"        String[] values \u003d input.split(\" \\\\| \");","lastModifiedDate":"2021-08-22"},{"lineNumber":143,"author":{"gitId":"Linxcathyyy"},"content":"        String typeOfTask \u003d values[0].trim();","lastModifiedDate":"2021-08-22"},{"lineNumber":144,"author":{"gitId":"Linxcathyyy"},"content":"        String completeStatus \u003d values[1].trim();","lastModifiedDate":"2021-08-22"},{"lineNumber":145,"author":{"gitId":"Linxcathyyy"},"content":"        String task \u003d values[2].trim();","lastModifiedDate":"2021-08-22"},{"lineNumber":146,"author":{"gitId":"Linxcathyyy"},"content":"        switch (typeOfTask) {","lastModifiedDate":"2021-08-22"},{"lineNumber":147,"author":{"gitId":"Linxcathyyy"},"content":"        case \"T\": {","lastModifiedDate":"2021-08-22"},{"lineNumber":148,"author":{"gitId":"Linxcathyyy"},"content":"            Todo newTodo \u003d new Todo(task);","lastModifiedDate":"2021-08-22"},{"lineNumber":149,"author":{"gitId":"Linxcathyyy"},"content":"            if (completeStatus.equals(\"1\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":150,"author":{"gitId":"Linxcathyyy"},"content":"                newTodo.markAsDone();","lastModifiedDate":"2021-08-22"},{"lineNumber":151,"author":{"gitId":"Linxcathyyy"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":152,"author":{"gitId":"Linxcathyyy"},"content":"            tasksList.add(newTodo);","lastModifiedDate":"2021-08-22"},{"lineNumber":153,"author":{"gitId":"Linxcathyyy"},"content":"            break;","lastModifiedDate":"2021-08-22"},{"lineNumber":154,"author":{"gitId":"Linxcathyyy"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":155,"author":{"gitId":"Linxcathyyy"},"content":"        case \"D\": {","lastModifiedDate":"2021-08-22"},{"lineNumber":156,"author":{"gitId":"Linxcathyyy"},"content":"            String dateAndTime \u003d values[3].trim();","lastModifiedDate":"2021-08-22"},{"lineNumber":157,"author":{"gitId":"Linxcathyyy"},"content":"            String[] dateTimeArray \u003d dateAndTime.split(\" \");","lastModifiedDate":"2021-08-22"},{"lineNumber":158,"author":{"gitId":"Linxcathyyy"},"content":"            String date \u003d \"\";","lastModifiedDate":"2021-08-22"},{"lineNumber":159,"author":{"gitId":"Linxcathyyy"},"content":"            for (int i \u003d 0; i \u003c dateTimeArray.length - 1; i++) {","lastModifiedDate":"2021-08-22"},{"lineNumber":160,"author":{"gitId":"Linxcathyyy"},"content":"                if (i \u003d\u003d 1 \u0026\u0026 Integer.parseInt(dateTimeArray[i]) \u003c 10) {","lastModifiedDate":"2021-08-22"},{"lineNumber":161,"author":{"gitId":"Linxcathyyy"},"content":"                    date \u003d date + \"0\" + dateTimeArray[i] + \" \";","lastModifiedDate":"2021-08-22"},{"lineNumber":162,"author":{"gitId":"Linxcathyyy"},"content":"                } else if (i \u003d\u003d 2) {","lastModifiedDate":"2021-08-22"},{"lineNumber":163,"author":{"gitId":"Linxcathyyy"},"content":"                    date \u003d date + dateTimeArray[i];","lastModifiedDate":"2021-08-22"},{"lineNumber":164,"author":{"gitId":"Linxcathyyy"},"content":"                } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":165,"author":{"gitId":"Linxcathyyy"},"content":"                    date \u003d date + dateTimeArray[i] + \" \";","lastModifiedDate":"2021-08-22"},{"lineNumber":166,"author":{"gitId":"Linxcathyyy"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":167,"author":{"gitId":"Linxcathyyy"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":168,"author":{"gitId":"Linxcathyyy"},"content":"            LocalDate localDate \u003d LocalDate.parse(date, DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":169,"author":{"gitId":"Linxcathyyy"},"content":"            Deadline newDeadline \u003d new Deadline(task, localDate, dateTimeArray[3]);","lastModifiedDate":"2021-08-22"},{"lineNumber":170,"author":{"gitId":"Linxcathyyy"},"content":"            if (completeStatus.equals(\"1\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":171,"author":{"gitId":"Linxcathyyy"},"content":"                newDeadline.markAsDone();","lastModifiedDate":"2021-08-22"},{"lineNumber":172,"author":{"gitId":"Linxcathyyy"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":173,"author":{"gitId":"Linxcathyyy"},"content":"            tasksList.add(newDeadline);","lastModifiedDate":"2021-08-22"},{"lineNumber":174,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":175,"author":{"gitId":"Linxcathyyy"},"content":"            break;","lastModifiedDate":"2021-08-22"},{"lineNumber":176,"author":{"gitId":"Linxcathyyy"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":177,"author":{"gitId":"Linxcathyyy"},"content":"        case \"E\": {","lastModifiedDate":"2021-08-22"},{"lineNumber":178,"author":{"gitId":"Linxcathyyy"},"content":"            String date \u003d values[3].trim();","lastModifiedDate":"2021-08-22"},{"lineNumber":179,"author":{"gitId":"Linxcathyyy"},"content":"            Event newEvent \u003d new Event(task, date);","lastModifiedDate":"2021-08-22"},{"lineNumber":180,"author":{"gitId":"Linxcathyyy"},"content":"            if (completeStatus.equals(\"1\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":181,"author":{"gitId":"Linxcathyyy"},"content":"                newEvent.markAsDone();","lastModifiedDate":"2021-08-22"},{"lineNumber":182,"author":{"gitId":"Linxcathyyy"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":183,"author":{"gitId":"Linxcathyyy"},"content":"            tasksList.add(newEvent);","lastModifiedDate":"2021-08-22"},{"lineNumber":184,"author":{"gitId":"Linxcathyyy"},"content":"            break;","lastModifiedDate":"2021-08-22"},{"lineNumber":185,"author":{"gitId":"Linxcathyyy"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":186,"author":{"gitId":"Linxcathyyy"},"content":"        default: {","lastModifiedDate":"2021-08-22"},{"lineNumber":187,"author":{"gitId":"Linxcathyyy"},"content":"            break;","lastModifiedDate":"2021-08-22"},{"lineNumber":188,"author":{"gitId":"Linxcathyyy"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":189,"author":{"gitId":"Linxcathyyy"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":190,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":191,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":192,"author":{"gitId":"Linxcathyyy"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":193,"author":{"gitId":"Linxcathyyy"},"content":"     * Checks whether the task is able to be marked as done, 0 indicating that","lastModifiedDate":"2021-08-22"},{"lineNumber":194,"author":{"gitId":"Linxcathyyy"},"content":"     * this is an invalid task, Integer.MAX_VALUE indicating that this task is","lastModifiedDate":"2021-08-15"},{"lineNumber":195,"author":{"gitId":"Linxcathyyy"},"content":"     * not in the task list, any number other than 0 or Integer.MAX_VALUE indicating","lastModifiedDate":"2021-08-15"},{"lineNumber":196,"author":{"gitId":"Linxcathyyy"},"content":"     * the task number to be marked as done.","lastModifiedDate":"2021-08-15"},{"lineNumber":197,"author":{"gitId":"Linxcathyyy"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":198,"author":{"gitId":"Linxcathyyy"},"content":"     * @param index The task number that the user wants to mark as done.","lastModifiedDate":"2021-08-16"},{"lineNumber":199,"author":{"gitId":"Linxcathyyy"},"content":"     * @return An integer indicating which task to be marked as done.","lastModifiedDate":"2021-08-15"},{"lineNumber":200,"author":{"gitId":"Linxcathyyy"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":201,"author":{"gitId":"Linxcathyyy"},"content":"    private void completeTask(String index) throws MeowException {","lastModifiedDate":"2021-08-16"},{"lineNumber":202,"author":{"gitId":"Linxcathyyy"},"content":"        try {","lastModifiedDate":"2021-08-14"},{"lineNumber":203,"author":{"gitId":"Linxcathyyy"},"content":"            int taskNumber \u003d Integer.parseInt(index);","lastModifiedDate":"2021-08-16"},{"lineNumber":204,"author":{"gitId":"Linxcathyyy"},"content":"            if (taskNumber \u003c\u003d tasksList.size() \u0026\u0026 taskNumber \u003e 0) {","lastModifiedDate":"2021-08-16"},{"lineNumber":205,"author":{"gitId":"Linxcathyyy"},"content":"                Task completedTask \u003d tasksList.get(taskNumber - 1);","lastModifiedDate":"2021-08-16"},{"lineNumber":206,"author":{"gitId":"Linxcathyyy"},"content":"                completedTask.markAsDone();","lastModifiedDate":"2021-08-16"},{"lineNumber":207,"author":{"gitId":"Linxcathyyy"},"content":"                addArrayTaskToFile();","lastModifiedDate":"2021-08-22"},{"lineNumber":208,"author":{"gitId":"Linxcathyyy"},"content":"                System.out.println(\"------------------------------------------------------------------------------\");","lastModifiedDate":"2021-08-16"},{"lineNumber":209,"author":{"gitId":"Linxcathyyy"},"content":"                System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2021-08-16"},{"lineNumber":210,"author":{"gitId":"Linxcathyyy"},"content":"                System.out.println(completedTask.toString());","lastModifiedDate":"2021-08-16"},{"lineNumber":211,"author":{"gitId":"Linxcathyyy"},"content":"                System.out.println(\"------------------------------------------------------------------------------\");","lastModifiedDate":"2021-08-16"},{"lineNumber":212,"author":{"gitId":"Linxcathyyy"},"content":"            } else {","lastModifiedDate":"2021-08-14"},{"lineNumber":213,"author":{"gitId":"Linxcathyyy"},"content":"                throw new InvalidTaskIndex();","lastModifiedDate":"2021-08-16"},{"lineNumber":214,"author":{"gitId":"Linxcathyyy"},"content":"            }","lastModifiedDate":"2021-08-14"},{"lineNumber":215,"author":{"gitId":"Linxcathyyy"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":216,"author":{"gitId":"Linxcathyyy"},"content":"            // String cannot be parsed to integer","lastModifiedDate":"2021-08-16"},{"lineNumber":217,"author":{"gitId":"Linxcathyyy"},"content":"            throw new NotSuchTaskFoundException();","lastModifiedDate":"2021-08-16"},{"lineNumber":218,"author":{"gitId":"Linxcathyyy"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":219,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":220,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":221,"author":{"gitId":"Linxcathyyy"},"content":"    private void printTaskList(Task taskAdded) {","lastModifiedDate":"2021-08-22"},{"lineNumber":222,"author":{"gitId":"Linxcathyyy"},"content":"        int taskListLength \u003d tasksList.size();","lastModifiedDate":"2021-08-15"},{"lineNumber":223,"author":{"gitId":"Linxcathyyy"},"content":"        String task \u003d taskListLength \u003c\u003d 1 ? \" task \" : \" tasks \";","lastModifiedDate":"2021-08-15"},{"lineNumber":224,"author":{"gitId":"Linxcathyyy"},"content":"        System.out.println(\"------------------------------------------------------------------------------\");","lastModifiedDate":"2021-08-16"},{"lineNumber":225,"author":{"gitId":"Linxcathyyy"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-08-15"},{"lineNumber":226,"author":{"gitId":"Linxcathyyy"},"content":"        System.out.println(taskAdded.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":227,"author":{"gitId":"Linxcathyyy"},"content":"        System.out.println(\"Now you have \" + taskListLength + task + \"in the list.\");","lastModifiedDate":"2021-08-15"},{"lineNumber":228,"author":{"gitId":"Linxcathyyy"},"content":"        System.out.println(\"------------------------------------------------------------------------------\");","lastModifiedDate":"2021-08-16"},{"lineNumber":229,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":230,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":231,"author":{"gitId":"Linxcathyyy"},"content":"    private void addArrayTaskToFile() {","lastModifiedDate":"2021-08-22"},{"lineNumber":232,"author":{"gitId":"Linxcathyyy"},"content":"        String addedContent \u003d \"\";","lastModifiedDate":"2021-08-22"},{"lineNumber":233,"author":{"gitId":"Linxcathyyy"},"content":"        for (int i \u003d 0; i \u003c tasksList.size(); i++) {","lastModifiedDate":"2021-08-22"},{"lineNumber":234,"author":{"gitId":"Linxcathyyy"},"content":"            addedContent \u003d addedContent + tasksList.get(i).toString() + System.lineSeparator();","lastModifiedDate":"2021-08-22"},{"lineNumber":235,"author":{"gitId":"Linxcathyyy"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":236,"author":{"gitId":"Linxcathyyy"},"content":"        writeToFile(\"data/meow.txt\", addedContent);","lastModifiedDate":"2021-08-22"},{"lineNumber":237,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":238,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":239,"author":{"gitId":"Linxcathyyy"},"content":"    private void addTodo(String todo) {","lastModifiedDate":"2021-08-22"},{"lineNumber":240,"author":{"gitId":"Linxcathyyy"},"content":"        Todo newTodo \u003d new Todo(todo);","lastModifiedDate":"2021-08-22"},{"lineNumber":241,"author":{"gitId":"Linxcathyyy"},"content":"        tasksList.add(newTodo);","lastModifiedDate":"2021-08-22"},{"lineNumber":242,"author":{"gitId":"Linxcathyyy"},"content":"        addArrayTaskToFile();","lastModifiedDate":"2021-08-22"},{"lineNumber":243,"author":{"gitId":"Linxcathyyy"},"content":"        printTaskList(newTodo);","lastModifiedDate":"2021-08-22"},{"lineNumber":244,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":245,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":246,"author":{"gitId":"Linxcathyyy"},"content":"    private void addDeadline(String deadline, LocalDate date, String time) {","lastModifiedDate":"2021-08-22"},{"lineNumber":247,"author":{"gitId":"Linxcathyyy"},"content":"        Deadline newDeadline \u003d new Deadline(deadline, date, time);","lastModifiedDate":"2021-08-22"},{"lineNumber":248,"author":{"gitId":"Linxcathyyy"},"content":"        tasksList.add(newDeadline);","lastModifiedDate":"2021-08-15"},{"lineNumber":249,"author":{"gitId":"Linxcathyyy"},"content":"        addArrayTaskToFile();","lastModifiedDate":"2021-08-22"},{"lineNumber":250,"author":{"gitId":"Linxcathyyy"},"content":"        printTaskList(newDeadline);","lastModifiedDate":"2021-08-22"},{"lineNumber":251,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":252,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":253,"author":{"gitId":"Linxcathyyy"},"content":"    private void addEvent(String event, String at) {","lastModifiedDate":"2021-08-15"},{"lineNumber":254,"author":{"gitId":"Linxcathyyy"},"content":"        Event newEvent \u003d new Event(event, at);","lastModifiedDate":"2021-08-15"},{"lineNumber":255,"author":{"gitId":"Linxcathyyy"},"content":"        tasksList.add(newEvent);","lastModifiedDate":"2021-08-15"},{"lineNumber":256,"author":{"gitId":"Linxcathyyy"},"content":"        addArrayTaskToFile();","lastModifiedDate":"2021-08-22"},{"lineNumber":257,"author":{"gitId":"Linxcathyyy"},"content":"        printTaskList(newEvent);","lastModifiedDate":"2021-08-22"},{"lineNumber":258,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":259,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":260,"author":{"gitId":"Linxcathyyy"},"content":"    private String getTask(String input, Command typeOfTask) throws MeowException {","lastModifiedDate":"2021-08-16"},{"lineNumber":261,"author":{"gitId":"Linxcathyyy"},"content":"        try {","lastModifiedDate":"2021-08-15"},{"lineNumber":262,"author":{"gitId":"Linxcathyyy"},"content":"            return input.trim().substring(typeOfTask.toString().length() + 1);","lastModifiedDate":"2021-08-16"},{"lineNumber":263,"author":{"gitId":"Linxcathyyy"},"content":"        } catch (StringIndexOutOfBoundsException exception) {","lastModifiedDate":"2021-08-16"},{"lineNumber":264,"author":{"gitId":"Linxcathyyy"},"content":"            if (typeOfTask.equals(Command.TODO)) {","lastModifiedDate":"2021-08-16"},{"lineNumber":265,"author":{"gitId":"Linxcathyyy"},"content":"                throw new EmptyTodoDescriptionException();","lastModifiedDate":"2021-08-16"},{"lineNumber":266,"author":{"gitId":"Linxcathyyy"},"content":"            } else if (typeOfTask.equals(Command.DEADLINE)) {","lastModifiedDate":"2021-08-16"},{"lineNumber":267,"author":{"gitId":"Linxcathyyy"},"content":"                throw new EmptyDeadlineDescriptionException();","lastModifiedDate":"2021-08-16"},{"lineNumber":268,"author":{"gitId":"Linxcathyyy"},"content":"            } else {","lastModifiedDate":"2021-08-15"},{"lineNumber":269,"author":{"gitId":"Linxcathyyy"},"content":"                throw new EmptyEventDescriptionException();","lastModifiedDate":"2021-08-16"},{"lineNumber":270,"author":{"gitId":"Linxcathyyy"},"content":"            }","lastModifiedDate":"2021-08-15"},{"lineNumber":271,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":272,"author":{"gitId":"Linxcathyyy"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":273,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":274,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":275,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":276,"author":{"gitId":"Linxcathyyy"},"content":"    private String[] getTaskAndDate(String task, Command typeOfTask) {","lastModifiedDate":"2021-08-16"},{"lineNumber":277,"author":{"gitId":"Linxcathyyy"},"content":"        String[] split;","lastModifiedDate":"2021-08-15"},{"lineNumber":278,"author":{"gitId":"Linxcathyyy"},"content":"        if (typeOfTask.equals(Command.DEADLINE)) {","lastModifiedDate":"2021-08-16"},{"lineNumber":279,"author":{"gitId":"Linxcathyyy"},"content":"            split \u003d task.split(\" /by \");","lastModifiedDate":"2021-08-15"},{"lineNumber":280,"author":{"gitId":"Linxcathyyy"},"content":"        } else {","lastModifiedDate":"2021-08-15"},{"lineNumber":281,"author":{"gitId":"Linxcathyyy"},"content":"            split \u003d task.split(\" /at \");","lastModifiedDate":"2021-08-15"},{"lineNumber":282,"author":{"gitId":"Linxcathyyy"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":283,"author":{"gitId":"Linxcathyyy"},"content":"        return split;","lastModifiedDate":"2021-08-15"},{"lineNumber":284,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":285,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":286,"author":{"gitId":"Linxcathyyy"},"content":"    private LocalDate convertToLocalDate(String inputDate) throws InvalidDateTimeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":287,"author":{"gitId":"Linxcathyyy"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":288,"author":{"gitId":"Linxcathyyy"},"content":"            String modifiedDate \u003d \"\";","lastModifiedDate":"2021-08-22"},{"lineNumber":289,"author":{"gitId":"Linxcathyyy"},"content":"            String[] values \u003d inputDate.split(\"/\");","lastModifiedDate":"2021-08-22"},{"lineNumber":290,"author":{"gitId":"Linxcathyyy"},"content":"            for (int i \u003d values.length - 1; i \u003e\u003d 0; i--) {","lastModifiedDate":"2021-08-22"},{"lineNumber":291,"author":{"gitId":"Linxcathyyy"},"content":"                String addedValue;","lastModifiedDate":"2021-08-22"},{"lineNumber":292,"author":{"gitId":"Linxcathyyy"},"content":"                if (Integer.parseInt(values[i]) \u003c 10) {","lastModifiedDate":"2021-08-22"},{"lineNumber":293,"author":{"gitId":"Linxcathyyy"},"content":"                    addedValue \u003d \"0\" + values[i];","lastModifiedDate":"2021-08-22"},{"lineNumber":294,"author":{"gitId":"Linxcathyyy"},"content":"                } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":295,"author":{"gitId":"Linxcathyyy"},"content":"                    addedValue \u003d values[i];","lastModifiedDate":"2021-08-22"},{"lineNumber":296,"author":{"gitId":"Linxcathyyy"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":297,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":298,"author":{"gitId":"Linxcathyyy"},"content":"                if (i \u003d\u003d 0) {","lastModifiedDate":"2021-08-22"},{"lineNumber":299,"author":{"gitId":"Linxcathyyy"},"content":"                    modifiedDate \u003d modifiedDate + addedValue;","lastModifiedDate":"2021-08-22"},{"lineNumber":300,"author":{"gitId":"Linxcathyyy"},"content":"                } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":301,"author":{"gitId":"Linxcathyyy"},"content":"                    modifiedDate \u003d modifiedDate + addedValue + \"-\";","lastModifiedDate":"2021-08-22"},{"lineNumber":302,"author":{"gitId":"Linxcathyyy"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":303,"author":{"gitId":"Linxcathyyy"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":304,"author":{"gitId":"Linxcathyyy"},"content":"            LocalDate date \u003d LocalDate.parse(modifiedDate);","lastModifiedDate":"2021-08-22"},{"lineNumber":305,"author":{"gitId":"Linxcathyyy"},"content":"            return date;","lastModifiedDate":"2021-08-22"},{"lineNumber":306,"author":{"gitId":"Linxcathyyy"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":307,"author":{"gitId":"Linxcathyyy"},"content":"            throw new InvalidDateTimeException();","lastModifiedDate":"2021-08-22"},{"lineNumber":308,"author":{"gitId":"Linxcathyyy"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":309,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":310,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":311,"author":{"gitId":"Linxcathyyy"},"content":"    private boolean isLocalDateTime(String inputDate, String inputTime) {","lastModifiedDate":"2021-08-22"},{"lineNumber":312,"author":{"gitId":"Linxcathyyy"},"content":"        System.out.println(\"input date: \" + inputDate);","lastModifiedDate":"2021-08-22"},{"lineNumber":313,"author":{"gitId":"Linxcathyyy"},"content":"        String validator \u003d \"[0-9]{1,2}(/|-)[0-9]{1,2}(/|-)[0-9]{4}\";","lastModifiedDate":"2021-08-22"},{"lineNumber":314,"author":{"gitId":"Linxcathyyy"},"content":"        boolean dateValidated \u003d inputDate.matches(validator);","lastModifiedDate":"2021-08-22"},{"lineNumber":315,"author":{"gitId":"Linxcathyyy"},"content":"        int time \u003d Integer.parseInt(inputTime);","lastModifiedDate":"2021-08-22"},{"lineNumber":316,"author":{"gitId":"Linxcathyyy"},"content":"        boolean timeValidated \u003d time \u003e\u003d 0 \u0026\u0026 time \u003c\u003d 2359;","lastModifiedDate":"2021-08-22"},{"lineNumber":317,"author":{"gitId":"Linxcathyyy"},"content":"        return dateValidated \u0026\u0026 timeValidated;","lastModifiedDate":"2021-08-22"},{"lineNumber":318,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":319,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":320,"author":{"gitId":"Linxcathyyy"},"content":"    private void deleteTask(String index) throws MeowException {","lastModifiedDate":"2021-08-16"},{"lineNumber":321,"author":{"gitId":"Linxcathyyy"},"content":"        try {","lastModifiedDate":"2021-08-16"},{"lineNumber":322,"author":{"gitId":"Linxcathyyy"},"content":"            int taskNumber \u003d Integer.parseInt(index);","lastModifiedDate":"2021-08-16"},{"lineNumber":323,"author":{"gitId":"Linxcathyyy"},"content":"            if (taskNumber \u003c\u003d tasksList.size() \u0026\u0026 taskNumber \u003e 0) {","lastModifiedDate":"2021-08-16"},{"lineNumber":324,"author":{"gitId":"Linxcathyyy"},"content":"                Task removedTask \u003d tasksList.remove(taskNumber - 1);","lastModifiedDate":"2021-08-16"},{"lineNumber":325,"author":{"gitId":"Linxcathyyy"},"content":"                addArrayTaskToFile();","lastModifiedDate":"2021-08-22"},{"lineNumber":326,"author":{"gitId":"Linxcathyyy"},"content":"                int taskListLength \u003d tasksList.size();","lastModifiedDate":"2021-08-16"},{"lineNumber":327,"author":{"gitId":"Linxcathyyy"},"content":"                String task \u003d taskListLength \u003c\u003d 1 ? \" task \" : \" tasks \";","lastModifiedDate":"2021-08-16"},{"lineNumber":328,"author":{"gitId":"Linxcathyyy"},"content":"                System.out.println(\"------------------------------------------------------------------------------\");","lastModifiedDate":"2021-08-16"},{"lineNumber":329,"author":{"gitId":"Linxcathyyy"},"content":"                System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2021-08-16"},{"lineNumber":330,"author":{"gitId":"Linxcathyyy"},"content":"                System.out.println(removedTask.toString());","lastModifiedDate":"2021-08-16"},{"lineNumber":331,"author":{"gitId":"Linxcathyyy"},"content":"                System.out.println(\"Now you have \" + taskListLength + task + \"in the list.\");","lastModifiedDate":"2021-08-16"},{"lineNumber":332,"author":{"gitId":"Linxcathyyy"},"content":"                System.out.println(\"------------------------------------------------------------------------------\");","lastModifiedDate":"2021-08-16"},{"lineNumber":333,"author":{"gitId":"Linxcathyyy"},"content":"            } else {","lastModifiedDate":"2021-08-16"},{"lineNumber":334,"author":{"gitId":"Linxcathyyy"},"content":"                throw new InvalidTaskIndex();","lastModifiedDate":"2021-08-16"},{"lineNumber":335,"author":{"gitId":"Linxcathyyy"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":336,"author":{"gitId":"Linxcathyyy"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":337,"author":{"gitId":"Linxcathyyy"},"content":"            // String cannot be parsed to integer","lastModifiedDate":"2021-08-16"},{"lineNumber":338,"author":{"gitId":"Linxcathyyy"},"content":"            throw new NotSuchTaskFoundException();","lastModifiedDate":"2021-08-16"},{"lineNumber":339,"author":{"gitId":"Linxcathyyy"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":340,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":341,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":342,"author":{"gitId":"Linxcathyyy"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":343,"author":{"gitId":"Linxcathyyy"},"content":"     * Performs different tasks according to","lastModifiedDate":"2021-08-22"},{"lineNumber":344,"author":{"gitId":"Linxcathyyy"},"content":"     * the command that the user has entered.","lastModifiedDate":"2021-08-16"},{"lineNumber":345,"author":{"gitId":"Linxcathyyy"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":346,"author":{"gitId":"Linxcathyyy"},"content":"     * @param input The input command from the user.","lastModifiedDate":"2021-08-16"},{"lineNumber":347,"author":{"gitId":"Linxcathyyy"},"content":"     * @throws MeowException If the user input is invalid.","lastModifiedDate":"2021-08-16"},{"lineNumber":348,"author":{"gitId":"Linxcathyyy"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":349,"author":{"gitId":"Linxcathyyy"},"content":"    public void checkCommand(String input) throws MeowException {","lastModifiedDate":"2021-08-16"},{"lineNumber":350,"author":{"gitId":"Linxcathyyy"},"content":"        try {","lastModifiedDate":"2021-08-16"},{"lineNumber":351,"author":{"gitId":"Linxcathyyy"},"content":"            String[] commandWord \u003d input.split(\" \");","lastModifiedDate":"2021-08-16"},{"lineNumber":352,"author":{"gitId":"Linxcathyyy"},"content":"            Command userCommand \u003d Command.valueOf(commandWord[0].trim().toUpperCase());","lastModifiedDate":"2021-08-16"},{"lineNumber":353,"author":{"gitId":"Linxcathyyy"},"content":"            switch (userCommand) {","lastModifiedDate":"2021-08-16"},{"lineNumber":354,"author":{"gitId":"Linxcathyyy"},"content":"            case BYE: {","lastModifiedDate":"2021-08-16"},{"lineNumber":355,"author":{"gitId":"Linxcathyyy"},"content":"                exit();","lastModifiedDate":"2021-08-16"},{"lineNumber":356,"author":{"gitId":"Linxcathyyy"},"content":"                isExit \u003d true;","lastModifiedDate":"2021-08-16"},{"lineNumber":357,"author":{"gitId":"Linxcathyyy"},"content":"                break;","lastModifiedDate":"2021-08-16"},{"lineNumber":358,"author":{"gitId":"Linxcathyyy"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":359,"author":{"gitId":"Linxcathyyy"},"content":"            case LIST: {","lastModifiedDate":"2021-08-16"},{"lineNumber":360,"author":{"gitId":"Linxcathyyy"},"content":"                displayList();","lastModifiedDate":"2021-08-16"},{"lineNumber":361,"author":{"gitId":"Linxcathyyy"},"content":"                break;","lastModifiedDate":"2021-08-16"},{"lineNumber":362,"author":{"gitId":"Linxcathyyy"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":363,"author":{"gitId":"Linxcathyyy"},"content":"            case DONE: {","lastModifiedDate":"2021-08-16"},{"lineNumber":364,"author":{"gitId":"Linxcathyyy"},"content":"                completeTask(commandWord[1].trim());","lastModifiedDate":"2021-08-16"},{"lineNumber":365,"author":{"gitId":"Linxcathyyy"},"content":"                break;","lastModifiedDate":"2021-08-16"},{"lineNumber":366,"author":{"gitId":"Linxcathyyy"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":367,"author":{"gitId":"Linxcathyyy"},"content":"            case TODO: {","lastModifiedDate":"2021-08-16"},{"lineNumber":368,"author":{"gitId":"Linxcathyyy"},"content":"                String task \u003d getTask(input, userCommand);","lastModifiedDate":"2021-08-16"},{"lineNumber":369,"author":{"gitId":"Linxcathyyy"},"content":"                addTodo(task);","lastModifiedDate":"2021-08-15"},{"lineNumber":370,"author":{"gitId":"Linxcathyyy"},"content":"                break;","lastModifiedDate":"2021-08-16"},{"lineNumber":371,"author":{"gitId":"Linxcathyyy"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":372,"author":{"gitId":"Linxcathyyy"},"content":"            case EVENT: {","lastModifiedDate":"2021-08-16"},{"lineNumber":373,"author":{"gitId":"Linxcathyyy"},"content":"                String task \u003d getTask(input, userCommand);","lastModifiedDate":"2021-08-16"},{"lineNumber":374,"author":{"gitId":"Linxcathyyy"},"content":"                String[] taskAndDate \u003d getTaskAndDate(task, userCommand);","lastModifiedDate":"2021-08-16"},{"lineNumber":375,"author":{"gitId":"Linxcathyyy"},"content":"                try {","lastModifiedDate":"2021-08-16"},{"lineNumber":376,"author":{"gitId":"Linxcathyyy"},"content":"                    addEvent(taskAndDate[0], taskAndDate[1]);","lastModifiedDate":"2021-08-15"},{"lineNumber":377,"author":{"gitId":"Linxcathyyy"},"content":"                    break;","lastModifiedDate":"2021-08-16"},{"lineNumber":378,"author":{"gitId":"Linxcathyyy"},"content":"                } catch (ArrayIndexOutOfBoundsException exception) {","lastModifiedDate":"2021-08-16"},{"lineNumber":379,"author":{"gitId":"Linxcathyyy"},"content":"                    throw new EmptyEventTimeException();","lastModifiedDate":"2021-08-16"},{"lineNumber":380,"author":{"gitId":"Linxcathyyy"},"content":"                }","lastModifiedDate":"2021-08-15"},{"lineNumber":381,"author":{"gitId":"Linxcathyyy"},"content":"            }","lastModifiedDate":"2021-08-15"},{"lineNumber":382,"author":{"gitId":"Linxcathyyy"},"content":"            case DEADLINE: {","lastModifiedDate":"2021-08-16"},{"lineNumber":383,"author":{"gitId":"Linxcathyyy"},"content":"                String task \u003d getTask(input, userCommand);","lastModifiedDate":"2021-08-16"},{"lineNumber":384,"author":{"gitId":"Linxcathyyy"},"content":"                String[] taskAndDate \u003d getTaskAndDate(task, userCommand);","lastModifiedDate":"2021-08-16"},{"lineNumber":385,"author":{"gitId":"Linxcathyyy"},"content":"                try {","lastModifiedDate":"2021-08-16"},{"lineNumber":386,"author":{"gitId":"Linxcathyyy"},"content":"                    String[] dateAndTime \u003d taskAndDate[1].split(\" \");","lastModifiedDate":"2021-08-22"},{"lineNumber":387,"author":{"gitId":"Linxcathyyy"},"content":"                    if (isLocalDateTime(dateAndTime[0], dateAndTime[1])) {","lastModifiedDate":"2021-08-22"},{"lineNumber":388,"author":{"gitId":"Linxcathyyy"},"content":"                        LocalDate date \u003d convertToLocalDate(dateAndTime[0]);","lastModifiedDate":"2021-08-22"},{"lineNumber":389,"author":{"gitId":"Linxcathyyy"},"content":"                        addDeadline(taskAndDate[0], date, dateAndTime[1]);","lastModifiedDate":"2021-08-22"},{"lineNumber":390,"author":{"gitId":"Linxcathyyy"},"content":"                    } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":391,"author":{"gitId":"Linxcathyyy"},"content":"                        throw new InvalidDateTimeException();","lastModifiedDate":"2021-08-22"},{"lineNumber":392,"author":{"gitId":"Linxcathyyy"},"content":"                    }","lastModifiedDate":"2021-08-22"},{"lineNumber":393,"author":{"gitId":"Linxcathyyy"},"content":"                    break;","lastModifiedDate":"2021-08-16"},{"lineNumber":394,"author":{"gitId":"Linxcathyyy"},"content":"                } catch (ArrayIndexOutOfBoundsException exception) {","lastModifiedDate":"2021-08-16"},{"lineNumber":395,"author":{"gitId":"Linxcathyyy"},"content":"                    throw new EmptyDeadlineTimeException();","lastModifiedDate":"2021-08-16"},{"lineNumber":396,"author":{"gitId":"Linxcathyyy"},"content":"                }","lastModifiedDate":"2021-08-16"},{"lineNumber":397,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":398,"author":{"gitId":"Linxcathyyy"},"content":"            }","lastModifiedDate":"2021-08-15"},{"lineNumber":399,"author":{"gitId":"Linxcathyyy"},"content":"            case DELETE: {","lastModifiedDate":"2021-08-16"},{"lineNumber":400,"author":{"gitId":"Linxcathyyy"},"content":"                deleteTask(commandWord[1].trim());","lastModifiedDate":"2021-08-16"},{"lineNumber":401,"author":{"gitId":"Linxcathyyy"},"content":"                break;","lastModifiedDate":"2021-08-16"},{"lineNumber":402,"author":{"gitId":"Linxcathyyy"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":403,"author":{"gitId":"Linxcathyyy"},"content":"            default: {","lastModifiedDate":"2021-08-16"},{"lineNumber":404,"author":{"gitId":"Linxcathyyy"},"content":"                throw new InvalidInputException();","lastModifiedDate":"2021-08-16"},{"lineNumber":405,"author":{"gitId":"Linxcathyyy"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":406,"author":{"gitId":"Linxcathyyy"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":407,"author":{"gitId":"Linxcathyyy"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":408,"author":{"gitId":"Linxcathyyy"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2021-08-16"},{"lineNumber":409,"author":{"gitId":"Linxcathyyy"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":410,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":411,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":412,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":413,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":414,"author":{"gitId":"Linxcathyyy"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"Linxcathyyy":414}},{"path":"src/main/java/MeowException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Linxcathyyy"},"content":"abstract class MeowException extends Exception{","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"Linxcathyyy"},"content":"}","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"Linxcathyyy"},"content":"class InvalidInputException extends MeowException {","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"Linxcathyyy"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"Linxcathyyy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"Linxcathyyy"},"content":"        return \"------------------------------------------------------------------------------\\n\" +","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"Linxcathyyy"},"content":"                \"Meow: ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\" +","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"Linxcathyyy"},"content":"                \"------------------------------------------------------------------------------\";","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"Linxcathyyy"},"content":"}","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"Linxcathyyy"},"content":"class EmptyTodoDescriptionException extends MeowException {","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"Linxcathyyy"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"Linxcathyyy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"Linxcathyyy"},"content":"        return \"------------------------------------------------------------------------------\\n\" +","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"Linxcathyyy"},"content":"                \"Meow: ☹ OOPS!!! The description of a todo cannot be empty~\\n\" +","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"Linxcathyyy"},"content":"                \"------------------------------------------------------------------------------\";","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"Linxcathyyy"},"content":"}","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"Linxcathyyy"},"content":"class EmptyDeadlineDescriptionException extends MeowException {","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"Linxcathyyy"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"Linxcathyyy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"Linxcathyyy"},"content":"        return \"------------------------------------------------------------------------------\\n\" +","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"Linxcathyyy"},"content":"                \"Meow: ☹ OOPS!!! The description of a deadline cannot be empty~\\n\" +","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"Linxcathyyy"},"content":"                \"------------------------------------------------------------------------------\";","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"Linxcathyyy"},"content":"}","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"Linxcathyyy"},"content":"class EmptyEventDescriptionException extends MeowException {","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"Linxcathyyy"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"Linxcathyyy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"Linxcathyyy"},"content":"        return \"------------------------------------------------------------------------------\\n\" +","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"Linxcathyyy"},"content":"                \"Meow: ☹ OOPS!!! The description of an event cannot be empty~\\n\" +","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"Linxcathyyy"},"content":"                \"------------------------------------------------------------------------------\";","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"Linxcathyyy"},"content":"}","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"Linxcathyyy"},"content":"class EmptyDeadlineTimeException extends MeowException {","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"Linxcathyyy"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"Linxcathyyy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"Linxcathyyy"},"content":"        return \"------------------------------------------------------------------------------\\n\" +","lastModifiedDate":"2021-08-16"},{"lineNumber":44,"author":{"gitId":"Linxcathyyy"},"content":"                \"Meow: ☹ OOPS!!! The date/time of a deadline cannot be empty~\\n\" +","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"Linxcathyyy"},"content":"                \"------------------------------------------------------------------------------\";","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":47,"author":{"gitId":"Linxcathyyy"},"content":"}","lastModifiedDate":"2021-08-16"},{"lineNumber":48,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"Linxcathyyy"},"content":"class EmptyEventTimeException extends MeowException {","lastModifiedDate":"2021-08-16"},{"lineNumber":50,"author":{"gitId":"Linxcathyyy"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":51,"author":{"gitId":"Linxcathyyy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":52,"author":{"gitId":"Linxcathyyy"},"content":"        return \"------------------------------------------------------------------------------\\n\" +","lastModifiedDate":"2021-08-16"},{"lineNumber":53,"author":{"gitId":"Linxcathyyy"},"content":"                \"Meow: ☹ OOPS!!! The starting and ending time of an event cannot be empty~\\n\" +","lastModifiedDate":"2021-08-16"},{"lineNumber":54,"author":{"gitId":"Linxcathyyy"},"content":"                \"------------------------------------------------------------------------------\";","lastModifiedDate":"2021-08-16"},{"lineNumber":55,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":56,"author":{"gitId":"Linxcathyyy"},"content":"}","lastModifiedDate":"2021-08-16"},{"lineNumber":57,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":58,"author":{"gitId":"Linxcathyyy"},"content":"class InvalidTaskIndex extends MeowException {","lastModifiedDate":"2021-08-16"},{"lineNumber":59,"author":{"gitId":"Linxcathyyy"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":60,"author":{"gitId":"Linxcathyyy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":61,"author":{"gitId":"Linxcathyyy"},"content":"        return \"------------------------------------------------------------------------------\\n\" +","lastModifiedDate":"2021-08-16"},{"lineNumber":62,"author":{"gitId":"Linxcathyyy"},"content":"                \"Meow: ☹ OOPS!!! This task is not in your task list,\\n \" +","lastModifiedDate":"2021-08-16"},{"lineNumber":63,"author":{"gitId":"Linxcathyyy"},"content":"                \"try entering a correct task number~\\n\" +","lastModifiedDate":"2021-08-16"},{"lineNumber":64,"author":{"gitId":"Linxcathyyy"},"content":"                \"------------------------------------------------------------------------------\";","lastModifiedDate":"2021-08-16"},{"lineNumber":65,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":66,"author":{"gitId":"Linxcathyyy"},"content":"}","lastModifiedDate":"2021-08-16"},{"lineNumber":67,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":68,"author":{"gitId":"Linxcathyyy"},"content":"class NotSuchTaskFoundException extends MeowException {","lastModifiedDate":"2021-08-16"},{"lineNumber":69,"author":{"gitId":"Linxcathyyy"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":70,"author":{"gitId":"Linxcathyyy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":71,"author":{"gitId":"Linxcathyyy"},"content":"        return \"------------------------------------------------------------------------------\\n\" +","lastModifiedDate":"2021-08-16"},{"lineNumber":72,"author":{"gitId":"Linxcathyyy"},"content":"                \"Meow: ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means,\\n\"  +","lastModifiedDate":"2021-08-16"},{"lineNumber":73,"author":{"gitId":"Linxcathyyy"},"content":"                \"please enter a number to indicate the correct task number~\\n\" +","lastModifiedDate":"2021-08-16"},{"lineNumber":74,"author":{"gitId":"Linxcathyyy"},"content":"                \"------------------------------------------------------------------------------\";","lastModifiedDate":"2021-08-16"},{"lineNumber":75,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":76,"author":{"gitId":"Linxcathyyy"},"content":"}","lastModifiedDate":"2021-08-16"},{"lineNumber":77,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":78,"author":{"gitId":"Linxcathyyy"},"content":"class NoItemInTheListException extends MeowException {","lastModifiedDate":"2021-08-16"},{"lineNumber":79,"author":{"gitId":"Linxcathyyy"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":80,"author":{"gitId":"Linxcathyyy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":81,"author":{"gitId":"Linxcathyyy"},"content":"        return \"------------------------------------------------------------------------------\\n\" +","lastModifiedDate":"2021-08-16"},{"lineNumber":82,"author":{"gitId":"Linxcathyyy"},"content":"                \"Meow: You have not added any tasks yet, please add one now~\\n\" +","lastModifiedDate":"2021-08-16"},{"lineNumber":83,"author":{"gitId":"Linxcathyyy"},"content":"                \"------------------------------------------------------------------------------\";","lastModifiedDate":"2021-08-16"},{"lineNumber":84,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":85,"author":{"gitId":"Linxcathyyy"},"content":"}","lastModifiedDate":"2021-08-16"},{"lineNumber":86,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":87,"author":{"gitId":"Linxcathyyy"},"content":"class InvalidDateTimeException extends MeowException {","lastModifiedDate":"2021-08-22"},{"lineNumber":88,"author":{"gitId":"Linxcathyyy"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":89,"author":{"gitId":"Linxcathyyy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"Linxcathyyy"},"content":"        return \"------------------------------------------------------------------------------\\n\" +","lastModifiedDate":"2021-08-22"},{"lineNumber":91,"author":{"gitId":"Linxcathyyy"},"content":"                \"Meow: The format of your deadline is invalid, please try again~\\n\" +","lastModifiedDate":"2021-08-22"},{"lineNumber":92,"author":{"gitId":"Linxcathyyy"},"content":"                \"------------------------------------------------------------------------------\";","lastModifiedDate":"2021-08-22"},{"lineNumber":93,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":94,"author":{"gitId":"Linxcathyyy"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Linxcathyyy":94}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Linxcathyyy"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"Linxcathyyy"},"content":" * Represents a general task that the user wants to add","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"Linxcathyyy"},"content":" * in his or her todo list.","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"Linxcathyyy"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"Linxcathyyy"},"content":"public class Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"Linxcathyyy"},"content":"    protected String description;","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"Linxcathyyy"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"Linxcathyyy"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"Linxcathyyy"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"Linxcathyyy"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"Linxcathyyy"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"Linxcathyyy"},"content":"        return (isDone ? \"1\" : \"0\"); // mark done task with X","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"Linxcathyyy"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"Linxcathyyy"},"content":"        return description; // mark done task with X","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"Linxcathyyy"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"Linxcathyyy"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"Linxcathyyy"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"Linxcathyyy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"Linxcathyyy"},"content":"        return \" | \" + getStatusIcon() + \" | \" + getDescription();","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"Linxcathyyy"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"Linxcathyyy":30}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Linxcathyyy"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"Linxcathyyy"},"content":" * Represents a specific task (a todo) containing the description of the task","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"Linxcathyyy"},"content":" * that the user wants to add in his or her todo list.","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"Linxcathyyy"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"Linxcathyyy"},"content":"public class Todo extends Task{","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"Linxcathyyy"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"Linxcathyyy"},"content":"        super(description);","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"Linxcathyyy"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"Linxcathyyy"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"Linxcathyyy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"Linxcathyyy"},"content":"        return \"T\" + super.toString();","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Linxcathyyy"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"Linxcathyyy"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"Linxcathyyy":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Linxcathyyy"},"content":"todo read book","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"Linxcathyyy"},"content":"todo do laundry","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"Linxcathyyy"},"content":"done 1","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"Linxcathyyy"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"Linxcathyyy"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"Linxcathyyy"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"Linxcathyyy"},"content":"done 10","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"Linxcathyyy"},"content":"done 3","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"Linxcathyyy"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"Linxcathyyy"},"content":"bye","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"Linxcathyyy":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Linxcathyyy"},"content":"java -classpath ..\\bin Main \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Linxcathyyy":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"Linxcathyyy"},"content":"java -classpath ../bin Main \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Linxcathyyy":1,"-":37}}]
