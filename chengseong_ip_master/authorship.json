[{"path":"config/travis/check-eof-newline.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"chengseong"},"content":"#!/bin/sh","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"chengseong"},"content":"# Checks that all text files end with a newline.","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"chengseong"},"content":"ret\u003d0","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"chengseong"},"content":"# Preserve filename with spaces by only splitting on newlines.","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"chengseong"},"content":"IFS\u003d\u0027","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"chengseong"},"content":"\u0027","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"chengseong"},"content":"for filename in $(git grep --cached -I -l -e \u0027\u0027 -- \u0027:/\u0027); do","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"chengseong"},"content":"    if [ \"$(tail -c 1 \"./$filename\")\" !\u003d \u0027\u0027 ]; then","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"chengseong"},"content":"        line\u003d\"$(wc -l \"./$filename\" | cut -d\u0027 \u0027 -f1)\"","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"chengseong"},"content":"        echo \"ERROR:$filename:$line: no newline at EOF.\"","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"chengseong"},"content":"        ret\u003d1","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"chengseong"},"content":"    fi","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"chengseong"},"content":"done","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"chengseong"},"content":"exit $ret","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"chengseong":18}},{"path":"config/travis/check-line-endings.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"chengseong"},"content":"#!/bin/sh","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"chengseong"},"content":"# Checks for prohibited line endings.","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"chengseong"},"content":"# Prohibited line endings: \\r\\n","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"chengseong"},"content":"git grep --cached -I -n --no-color -P \u0027\\r$\u0027 -- \u0027:/\u0027 |","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"chengseong"},"content":"awk \u0027","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"chengseong"},"content":"    BEGIN {","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"chengseong"},"content":"        FS \u003d \":\"","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"chengseong"},"content":"        OFS \u003d \":\"","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"chengseong"},"content":"        ret \u003d 0","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"chengseong"},"content":"    {","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"chengseong"},"content":"        ret \u003d 1","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"chengseong"},"content":"        print \"ERROR\", $1, $2, \" prohibited \\\\r\\\\n line ending, use \\\\n instead.\"","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"chengseong"},"content":"    END {","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"chengseong"},"content":"        exit ret","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"chengseong"},"content":"\u0027","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"chengseong":19}},{"path":"config/travis/check-trailing-whitespace.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"chengseong"},"content":"#!/bin/sh","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"chengseong"},"content":"# Checks for trailing whitespace","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"chengseong"},"content":"git grep --cached -I -n --no-color -P \u0027[ \\t]+$\u0027 -- \u0027:/\u0027 |","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"chengseong"},"content":"awk \u0027","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"chengseong"},"content":"    BEGIN {","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"chengseong"},"content":"        FS \u003d \":\"","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"chengseong"},"content":"        OFS \u003d \":\"","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"chengseong"},"content":"        ret \u003d 0","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"chengseong"},"content":"    {","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"chengseong"},"content":"        # Only warn for markdown files (*.md) to accomodate text editors","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"chengseong"},"content":"        # which do not properly handle trailing whitespace.","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"chengseong"},"content":"        # (e.g. GitHub web editor)","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"chengseong"},"content":"        if ($1 ~ /\\.md$/) {","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"chengseong"},"content":"            severity \u003d \"WARN\"","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"chengseong"},"content":"        } else {","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"chengseong"},"content":"            severity \u003d \"ERROR\"","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"chengseong"},"content":"            ret \u003d 1","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"chengseong"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"chengseong"},"content":"        print severity, $1, $2, \" trailing whitespace.\"","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"chengseong"},"content":"    END {","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"chengseong"},"content":"        exit ret","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"chengseong"},"content":"\u0027","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"chengseong":26}},{"path":"config/travis/run-checks.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"chengseong"},"content":"#!/bin/sh","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"chengseong"},"content":"# Runs all check-* scripts, and returns a non-zero exit code if any of them fail.","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"chengseong"},"content":"dir\u003d$(CDPATH\u003d cd -- \"$(dirname -- \"$0\")\" \u0026\u0026 pwd) \u0026\u0026","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"chengseong"},"content":"ret\u003d0 \u0026\u0026","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"chengseong"},"content":"for checkscript in \"$dir\"/check-*; do","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"chengseong"},"content":"    if ! \"$checkscript\"; then","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"chengseong"},"content":"        ret\u003d1","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"chengseong"},"content":"    fi","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"chengseong"},"content":"done","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"chengseong"},"content":"exit $ret","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"chengseong":11}},{"path":"src/main/java/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chengseong"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"chengseong"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"chengseong"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"chengseong"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"chengseong"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"chengseong"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"chengseong"},"content":" * Represents a Command that adds a Task to the TaskList.","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"chengseong"},"content":" * An AddCommand consists of a Task.","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"chengseong"},"content":" *","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"chengseong"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"chengseong"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"chengseong"},"content":"    private Task task;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"chengseong"},"content":"     * Creates an AddCommand Object.","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"chengseong"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"chengseong"},"content":"     * @param task Task to be added to the TaskList.","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"chengseong"},"content":"    public AddCommand(Task task){","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"chengseong"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"chengseong"},"content":"     * Adds task to TaskList.","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"chengseong"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"chengseong"},"content":"     * @param tasks TaskList to add task to.","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"chengseong"},"content":"     * @param ui UI to print out the output after task has been added.","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"chengseong"},"content":"     * @param storage unused.","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"chengseong"},"content":"    @Override","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"chengseong"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage){","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"chengseong"},"content":"        tasks.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"chengseong"},"content":"        ui.printAdd(task, tasks);","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"chengseong"},"content":"     * Returns Task attached to this AddCommand","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"chengseong"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"chengseong"},"content":"     * @return Task attached to this AddCommand","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"chengseong"},"content":"    public Task getTask() {","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"chengseong"},"content":"        return task;","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"chengseong"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"chengseong"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"chengseong"},"content":"        if (!(o instanceof AddCommand)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"chengseong"},"content":"            return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"chengseong"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"chengseong"},"content":"            AddCommand oAddCommand \u003d (AddCommand) o;","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"chengseong"},"content":"            return task.toString().equals((oAddCommand.getTask().toString()));","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"chengseong"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"chengseong"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"chengseong":57}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chengseong"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"chengseong"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"chengseong"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"chengseong"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"chengseong"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"chengseong"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"chengseong"},"content":" * Command is the abstract base class for all Commands.","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"chengseong"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"chengseong"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"chengseong"},"content":"    /** Executes the Command using the arguments","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"chengseong"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"chengseong"},"content":"     * @param tasks Tasklist to execute the command on.","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"chengseong"},"content":"     * @param ui UI to reflect the changes.","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"chengseong"},"content":"     * @param storage Storage to store the TaskList after a command has been executed.","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"chengseong"},"content":"     * @throws IOException On Input error.","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"chengseong"},"content":"     * @see IOException","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"chengseong"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"chengseong"},"content":"     * Indicates whether a Command is an ExitCommand or not.","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"chengseong"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"chengseong"},"content":"     * @return true if Command is an ExitCommand, false if Command is not an ExitCommand","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"chengseong"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"chengseong"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"chengseong"},"content":"    ","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"chengseong"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"chengseong":32}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chengseong"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"chengseong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"chengseong"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"chengseong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"chengseong"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"chengseong"},"content":" * Represents a Deadline Task.","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"chengseong"},"content":" * A Deadline consists of a date and time representing the deadline of the task.","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"chengseong"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"chengseong"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"chengseong"},"content":"    private LocalDate date;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"chengseong"},"content":"    private LocalTime time;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"chengseong"},"content":"     * Creates a Deadline object","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"chengseong"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"chengseong"},"content":"     * @param toDo name of the task to be done before the deadline","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"chengseong"},"content":"     * @param date deadline date of the task","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"chengseong"},"content":"     * @param time deadline time of the task","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"chengseong"},"content":"    public Deadline(String toDo, LocalDate date, LocalTime time){","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"chengseong"},"content":"        super(toDo);","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"chengseong"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"chengseong"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"chengseong"},"content":"    String getType() {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"chengseong"},"content":"        return \"D\";","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"chengseong"},"content":"    ","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"chengseong"},"content":"    String getDateString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"chengseong"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))  + \", \" + ","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"chengseong"},"content":"                time.format(DateTimeFormatter.ofPattern(\"hh:mm a\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"chengseong"},"content":"     * Returns the Deadline String that will be written into storage.","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"chengseong"},"content":"     * Date will have the format MMM dd yyyy","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"chengseong"},"content":"     * Time will have the format hh:mm AM/PM","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"chengseong"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"chengseong"},"content":"     * @return string with the format \"[D] | status | task | date and time of deadline\"","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"chengseong"},"content":"    public String getToWrite() {","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"chengseong"},"content":"        return this.getType() + \" | \" + super.getToWrite() + \" | \" + this.getDateString();","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"chengseong"},"content":"     * Returns the Deadline String","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"chengseong"},"content":"     * Date will have the format MMM dd yyyy","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"chengseong"},"content":"     * Time will have the format hh:mm AM/PM","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"chengseong"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"chengseong"},"content":"     * @return string with the format \"[D] status and task (by: deadline)","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"chengseong"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"chengseong"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"chengseong"},"content":"        return(\"[D]\" + super.toString() + \"(by: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" \" ","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"chengseong"},"content":"                + time.format(DateTimeFormatter.ofPattern(\"hh:mm a\")) + \")\");","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"chengseong"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"chengseong":61}},{"path":"src/main/java/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chengseong"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"chengseong"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"chengseong"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"chengseong"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"chengseong"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"chengseong"},"content":" * Represents a Command that deletes a task from the TaskList.","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"chengseong"},"content":" * A DeleteCommand contains an index representing the index of the task in the TaskList to be deleted.","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"chengseong"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"chengseong"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"chengseong"},"content":"    private int index;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"chengseong"},"content":"     * Creates a DeleteCommand Object.","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"chengseong"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"chengseong"},"content":"     * @param index Index of task to be deleted in the TaskList","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"chengseong"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"chengseong"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"chengseong"},"content":"     * Deletes the task from TaskList.","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"chengseong"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"chengseong"},"content":"     * @param tasks TaskList to delete task from.","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"chengseong"},"content":"     * @param ui UI that reflects the changes made to the TaskList.","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"chengseong"},"content":"     * @param storage unused.","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"chengseong"},"content":"    @Override","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"chengseong"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage){","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"chengseong"},"content":"        ui.printDelete(tasks, index);","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"chengseong"},"content":"        tasks.delete(index);","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"chengseong"},"content":"    ","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"chengseong"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"chengseong":37}},{"path":"src/main/java/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chengseong"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"chengseong"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"chengseong"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"chengseong"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"chengseong"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"chengseong"},"content":" * Represents a Command that marks a task as completed in a TaskList","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"chengseong"},"content":" * A DoneCommand contains an index representing the index of the task in the TaskList that was completed.","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"chengseong"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"chengseong"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"chengseong"},"content":"    ","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"chengseong"},"content":"    private int toComplete;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"chengseong"},"content":"     * Creates a DoneCommand Object.","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"chengseong"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"chengseong"},"content":"     * @param toComplete Index of a task to be completed in the TaskList.","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"chengseong"},"content":"    public DoneCommand(int toComplete) {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"chengseong"},"content":"        this.toComplete \u003d toComplete;","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"chengseong"},"content":"     * Marks the task as completed.","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"chengseong"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"chengseong"},"content":"     * @param tasks TaskList that contains the task to be marked as done.","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"chengseong"},"content":"     * @param ui UI that reflects the changes made to the TaskList.","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"chengseong"},"content":"     * @param storage unused.","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"chengseong"},"content":"    @Override","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"chengseong"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"chengseong"},"content":"        ui.printDone(tasks, toComplete);","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"chengseong"},"content":"        tasks.get(toComplete).complete();","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"chengseong"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"chengseong":37}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chengseong"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"chengseong"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"chengseong"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"chengseong"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"chengseong"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"chengseong"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"chengseong"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"chengseong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"chengseong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"chengseong"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"chengseong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"chengseong"},"content":"import duke.Parser;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"chengseong"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"chengseong"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"chengseong"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"chengseong"},"content":"import duke.exception.FolderNotFoundException;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"chengseong"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"chengseong"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"chengseong"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"chengseong"},"content":" * \u003ch1\u003e Duke TaskList ChatBot! \u003c/h1\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"chengseong"},"content":" * The duke program implements and application that keeps track of all the users task!","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"chengseong"},"content":" * The user is able to add, delete and \"mark as complete\" tasks from the task list!","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"chengseong"},"content":" * Currently the Duke ChatBot is only able to keep track of ToDos, Deadlines and Events!","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"chengseong"},"content":" *","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"chengseong"},"content":" * @author Ong Cheng Seong","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"chengseong"},"content":" * @version 1.0","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"chengseong"},"content":" * @since 2021-08-31","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"chengseong"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"chengseong"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"chengseong"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"chengseong"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"chengseong"},"content":"     * Creates a Duke ChatBot Object that has a Ui, and a TaskList populated by the data read from the storage.","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"chengseong"},"content":"     * @param filePath text document that contains the task list for Storage to read from.","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"chengseong"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"chengseong"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"chengseong"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"chengseong"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"chengseong"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"chengseong"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"chengseong"},"content":"            ui.showLoadingError();","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"chengseong"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"chengseong"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"chengseong"},"content":"     * Starts the Program.","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"chengseong"},"content":"    public void run() {","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"chengseong"},"content":"        ui.showWelcome();","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"chengseong"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"chengseong"},"content":"        while (!isExit) {","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"chengseong"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"chengseong"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"chengseong"},"content":"                ui.showLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"chengseong"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"chengseong"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"chengseong"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"chengseong"},"content":"            } catch (Exception e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"chengseong"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"chengseong"},"content":"            } finally {","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"chengseong"},"content":"                ui.showLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"chengseong"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":69,"author":{"gitId":"chengseong"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":72,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":73,"author":{"gitId":"chengseong"},"content":"     * Main method which starts the Duke bot.","lastModifiedDate":"2021-08-31"},{"lineNumber":74,"author":{"gitId":"chengseong"},"content":"     * @param args user input","lastModifiedDate":"2021-08-31"},{"lineNumber":75,"author":{"gitId":"chengseong"},"content":"     * @throws FileNotFoundException when filepath does not exist.","lastModifiedDate":"2021-08-31"},{"lineNumber":76,"author":{"gitId":"chengseong"},"content":"     * @throws FolderNotFoundException when filepath folder does not exist.","lastModifiedDate":"2021-08-31"},{"lineNumber":77,"author":{"gitId":"chengseong"},"content":"     * @throws IOException On input error.","lastModifiedDate":"2021-08-31"},{"lineNumber":78,"author":{"gitId":"chengseong"},"content":"     * @see IOException","lastModifiedDate":"2021-08-31"},{"lineNumber":79,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":80,"author":{"gitId":"chengseong"},"content":"    public static void main(String[] args) throws FileNotFoundException, FolderNotFoundException, IOException {","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"chengseong"},"content":"        new Duke(\"../../../data/tasks.txt\").run();","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"chengseong":80,"-":3}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chengseong"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"chengseong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"chengseong"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"chengseong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"chengseong"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"chengseong"},"content":" *  Represents an Event task.","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"chengseong"},"content":" *  An Event consists of a date and time representing the date and time of the Event.","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"chengseong"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"chengseong"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"chengseong"},"content":"    private LocalDate date;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"chengseong"},"content":"    private LocalTime time;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"chengseong"},"content":"     * Creates an Event Object.","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"chengseong"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"chengseong"},"content":"     * @param toDo name of the event occuring at the specified date.","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"chengseong"},"content":"     * @param date date of the event.","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"chengseong"},"content":"     * @param time time of the event.","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"chengseong"},"content":"    public Event(String toDo, LocalDate date, LocalTime time){","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"chengseong"},"content":"        super(toDo);","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"chengseong"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"chengseong"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"chengseong"},"content":"    String getType() {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"chengseong"},"content":"        return \"E\";","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"chengseong"},"content":"    String getDateString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"chengseong"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))  + \", \" + ","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"chengseong"},"content":"        time.format(DateTimeFormatter.ofPattern(\"hh:mm a\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"chengseong"},"content":"     * Returns the Event String that will be written into Storage","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"chengseong"},"content":"     * Date will have the format MMM dd yyyy","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"chengseong"},"content":"     * Time will have the format hh:mm AM/PM","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"chengseong"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"chengseong"},"content":"     * @return string with the format [E] | status | event name | date and time of event","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"chengseong"},"content":"    public String getToWrite() {","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"chengseong"},"content":"        return this.getType() + \" | \" + super.getToWrite() + \" | \" + this.getDateString();","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"chengseong"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"chengseong"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"chengseong"},"content":"        return(\"[E]\" + super.toString() + \"(at: \" + date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \" \"","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"chengseong"},"content":"                + time.format(DateTimeFormatter.ofPattern(\"hh:mm a\")) + \")\");","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"chengseong"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"chengseong":54}},{"path":"src/main/java/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chengseong"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"chengseong"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"chengseong"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"chengseong"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"chengseong"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"chengseong"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"chengseong"},"content":" *  Represents a Command that Exits the Chatbot Program","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"chengseong"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"chengseong"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"chengseong"},"content":"     * Executes the Exit Command.","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"chengseong"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"chengseong"},"content":"     * @param tasks TaskList to write into Storage.","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"chengseong"},"content":"     * @param ui UI to reflect the exit.","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"chengseong"},"content":"     * @param storage Storage to write the TaskList into.","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"chengseong"},"content":"     * @throws IOException On output Error.","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"chengseong"},"content":"     * @see IOException","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"chengseong"},"content":"    @Override","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"chengseong"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"chengseong"},"content":"        storage.write(tasks);","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"chengseong"},"content":"        ui.printExit();","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"chengseong"},"content":"     * Reflects that it is an ExitCommand","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"chengseong"},"content":"     * @return true","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"chengseong"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"chengseong"},"content":"        return true;","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"chengseong"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"chengseong":39}},{"path":"src/main/java/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chengseong"},"content":"package duke.command;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"chengseong"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"chengseong"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"chengseong"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"chengseong"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"chengseong"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"chengseong"},"content":" * Represents a Command that finds a Task to the TaskList.","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"chengseong"},"content":" * An FindCommand consists of a keyword.","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"chengseong"},"content":" *","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"chengseong"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"chengseong"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"chengseong"},"content":"    private final String keyword;","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"chengseong"},"content":"     * Creates a FindCommand Object.","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"chengseong"},"content":"     * @param keyword keyword to find tasks.","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"chengseong"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"chengseong"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"chengseong"},"content":"    @Override","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"chengseong"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"chengseong"},"content":"        TaskList filteredTasks \u003d new TaskList();","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"chengseong"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"chengseong"},"content":"            Task toFilter \u003d tasks.get(i);","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"chengseong"},"content":"            if (toFilter.toString().contains(keyword)) {","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"chengseong"},"content":"                filteredTasks.add(toFilter);","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"chengseong"},"content":"            }","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"chengseong"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"chengseong"},"content":"        ui.printList(filteredTasks);","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"chengseong"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"chengseong":37}},{"path":"src/main/java/FolderNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chengseong"},"content":"package duke.exception;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"chengseong"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"chengseong"},"content":" * Exception for when the Folder is not found.","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"chengseong"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"chengseong"},"content":"public class FolderNotFoundException extends Exception {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"chengseong"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"chengseong":7}},{"path":"src/main/java/IllegalCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chengseong"},"content":"package duke.exception;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"chengseong"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"chengseong"},"content":" * Exception for when an Illegal Command is given.","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"chengseong"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"chengseong"},"content":"public class IllegalCommandException extends Exception {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"chengseong"},"content":"    public IllegalCommandException(String message){","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"chengseong"},"content":"        super(message);","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"chengseong"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"chengseong":10}},{"path":"src/main/java/IllegalTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chengseong"},"content":"package duke.exception;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"chengseong"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"chengseong"},"content":" * Exception for when no task is given after a \"todo\" command is given","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"chengseong"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"chengseong"},"content":"public class IllegalTaskException extends Exception {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"chengseong"},"content":"    public IllegalTaskException(String message){","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"chengseong"},"content":"        super(message);","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"chengseong"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"chengseong":10}},{"path":"src/main/java/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chengseong"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"chengseong"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"chengseong"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"chengseong"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"chengseong"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"chengseong"},"content":" * Represents a Command to print the list of tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"chengseong"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"chengseong"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"chengseong"},"content":"     * Prints the lists of tasks","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"chengseong"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"chengseong"},"content":"     * @param tasks TaskList to print","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"chengseong"},"content":"     * @param ui UI to print out the TaskList","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"chengseong"},"content":"     * @param storage unused.","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"chengseong"},"content":"    @Override","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"chengseong"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"chengseong"},"content":"        ui.printList(tasks);","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"chengseong"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"chengseong":24}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chengseong"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"chengseong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"chengseong"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"chengseong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"chengseong"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"chengseong"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"chengseong"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"chengseong"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"chengseong"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"chengseong"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"chengseong"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"chengseong"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"chengseong"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"chengseong"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"chengseong"},"content":"import duke.exception.IllegalCommandException;","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"chengseong"},"content":"import duke.exception.IllegalTaskException;","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"chengseong"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"chengseong"},"content":" * Represents a Parser that parses in the input received by the UI","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"chengseong"},"content":" * \u003cul\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"chengseong"},"content":" * \u003cli\u003eIf the first word of the input is \"list\", a ListCommand is created.\u003c/li\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"chengseong"},"content":" * \u003cli\u003eIf the first word of the input is \"done\", a DoneCommand consisting the index of the task done is created.\u003c/li\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"chengseong"},"content":" * \u003cli\u003eIf the first word of the input is \"delete\", a DeleteCommand consisting the index to the task to be deleted is","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"chengseong"},"content":" * created.\u003c/li\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"chengseong"},"content":" * \u003cli\u003eIf the first word of the input is \"todo\", the Parser checks for a task afterwards. If there is a task, an","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"chengseong"},"content":" * AddCommand consisting a ToDo task which contains the task is created. If there is no task, an","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"chengseong"},"content":" * IllegalTaskException is thrown.\u003c/li\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"chengseong"},"content":" * \u003cli\u003eIf the first word of the input is \"deadline\", an AddCommand consisting a Deadline task which contains the task","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"chengseong"},"content":" * and deadline is created.\u003c/li\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"chengseong"},"content":" * \u003cli\u003eIf the first word of the input is \"event\", a new AddCommand consisting an Event Task which contains the","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"chengseong"},"content":" * event and event date is created.\u003c/li\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"chengseong"},"content":" * \u003cli\u003e If the first word of the input is \"bye\", a new ExitCommand is created.\u003c/li\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"chengseong"},"content":" * \u003cli\u003e If the first word of the input matches none of the cases above, an IllegalCommandException is thrown.\u003c/li\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"chengseong"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"chengseong"},"content":" *","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"chengseong"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"chengseong"},"content":"public class Parser {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"chengseong"},"content":"     * Parses the input received by the UI.","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"chengseong"},"content":"     * Dates should be input in the format dd/mm/yyyy HHmm","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"chengseong"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"chengseong"},"content":"     * @param fullCommand String containing the full command input by the user.","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"chengseong"},"content":"     * @return Commands depending on the first word of the input.","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"chengseong"},"content":"     * @throws IllegalCommandException in the case no task is given after \"todo\".","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"chengseong"},"content":"     * @throws IllegalTaskException in the case an invalid task is given.","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"chengseong"},"content":"    public static Command parse(String fullCommand) throws IllegalCommandException, IllegalTaskException {","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"chengseong"},"content":"        String command \u003d fullCommand.split(\" \")[0];","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"chengseong"},"content":"        switch (command) {","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"chengseong"},"content":"        case \"list\":","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"chengseong"},"content":"            return new ListCommand();","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"chengseong"},"content":"        case \"done\":","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"chengseong"},"content":"            int toComplete \u003d Integer.parseInt(fullCommand.split(\" \")[1]) - 1;","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"chengseong"},"content":"            return new DoneCommand(toComplete);","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"chengseong"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"chengseong"},"content":"            int toDelete \u003d Integer.parseInt(fullCommand.split(\" \")[1]) - 1;","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"chengseong"},"content":"            return new DeleteCommand(toDelete);","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"chengseong"},"content":"        case \"todo\": {","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"chengseong"},"content":"            String task \u003d fullCommand.replaceFirst(\"todo \", \"\");","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"chengseong"},"content":"            if (task.equals(\"todo\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"chengseong"},"content":"                throw new IllegalTaskException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"chengseong"},"content":"            } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"chengseong"},"content":"                return new AddCommand(new ToDo(task));","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"chengseong"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"chengseong"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":69,"author":{"gitId":"chengseong"},"content":"        case \"deadline\": {","lastModifiedDate":"2021-08-27"},{"lineNumber":70,"author":{"gitId":"chengseong"},"content":"            String[] taskDate \u003d fullCommand.replaceFirst(\"deadline \", \"\").split(\"/by \");","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"chengseong"},"content":"            String task \u003d taskDate[0];","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"chengseong"},"content":"            String date \u003d taskDate[1];","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"chengseong"},"content":"            String[] splitDateTime \u003d date.split(\" \");","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"chengseong"},"content":"            String[] splitDate \u003d splitDateTime[0].split(\"/\");","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"chengseong"},"content":"            LocalDate localDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"chengseong"},"content":"            if (splitDate[1].length() \u003d\u003d 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"chengseong"},"content":"                localDate \u003d LocalDate.parse(splitDate[2] + \"-0\" + splitDate[1] + \"-\" + splitDate[0]);","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"chengseong"},"content":"            } else if (splitDate[0].length() \u003d\u003d 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"chengseong"},"content":"                localDate \u003d LocalDate.parse(splitDate[2] + \"-\" + splitDate[1] + \"-0\" + splitDate[0]);","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"chengseong"},"content":"            } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"chengseong"},"content":"                localDate \u003d LocalDate.parse(splitDate[2] + \"-\" + splitDate[1] + \"-\" + splitDate[0]);","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"chengseong"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"chengseong"},"content":"            LocalTime localTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"chengseong"},"content":"            localTime \u003d LocalTime.parse(splitDateTime[1], DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"chengseong"},"content":"            return new AddCommand(new Deadline(task, localDate, localTime));","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"chengseong"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":87,"author":{"gitId":"chengseong"},"content":"        case \"event\": {","lastModifiedDate":"2021-08-27"},{"lineNumber":88,"author":{"gitId":"chengseong"},"content":"            String[] taskDate \u003d fullCommand.replaceFirst(\"event \", \"\").split(\"/at \");","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"chengseong"},"content":"            String task \u003d taskDate[0];","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"chengseong"},"content":"            String date \u003d taskDate[1];","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"chengseong"},"content":"            String[] splitDateTime \u003d date.split(\" \");","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"chengseong"},"content":"            String[] splitDate \u003d splitDateTime[0].split(\"/\");","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"chengseong"},"content":"            LocalDate localDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"chengseong"},"content":"            if (splitDate[1].length() \u003d\u003d 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"chengseong"},"content":"                localDate \u003d LocalDate.parse(splitDate[2] + \"-0\" + splitDate[1] + \"-\" + splitDate[0]);","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"chengseong"},"content":"            } else if (splitDate[0].length() \u003d\u003d 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"chengseong"},"content":"                localDate \u003d LocalDate.parse(splitDate[2] + \"-\" + splitDate[1] + \"-0\" + splitDate[0]);","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"chengseong"},"content":"            } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"chengseong"},"content":"                localDate \u003d LocalDate.parse(splitDate[2] + \"-\" + splitDate[1] + \"-\" + splitDate[0]);","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"chengseong"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"chengseong"},"content":"            LocalTime localTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"chengseong"},"content":"            localTime \u003d LocalTime.parse(splitDateTime[1], DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"chengseong"},"content":"            return new AddCommand(new Event(task, localDate, localTime));","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"chengseong"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":105,"author":{"gitId":"chengseong"},"content":"        case \"find\" : {","lastModifiedDate":"2021-08-31"},{"lineNumber":106,"author":{"gitId":"chengseong"},"content":"            String keyword \u003d fullCommand.replaceFirst(\"find \", \"\");","lastModifiedDate":"2021-08-31"},{"lineNumber":107,"author":{"gitId":"chengseong"},"content":"            return new FindCommand(keyword);","lastModifiedDate":"2021-08-31"},{"lineNumber":108,"author":{"gitId":"chengseong"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":109,"author":{"gitId":"chengseong"},"content":"        case \"bye\": {","lastModifiedDate":"2021-08-31"},{"lineNumber":110,"author":{"gitId":"chengseong"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"chengseong"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":112,"author":{"gitId":"chengseong"},"content":"        default: {","lastModifiedDate":"2021-08-31"},{"lineNumber":113,"author":{"gitId":"chengseong"},"content":"            throw new IllegalCommandException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"chengseong"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"chengseong"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":117,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"chengseong"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"chengseong":118}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chengseong"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"chengseong"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"chengseong"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"chengseong"},"content":"import java.io.File;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"chengseong"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"chengseong"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"chengseong"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"chengseong"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"chengseong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"chengseong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"chengseong"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"chengseong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"chengseong"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"chengseong"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"chengseong"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"chengseong"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"chengseong"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"chengseong"},"content":" * Represents a storage which stores the Task List.","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"chengseong"},"content":" * The storage is read at when the bot starts up and written into when the bot is terminated.","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"chengseong"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"chengseong"},"content":"public class Storage {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"chengseong"},"content":"    private String filePath;","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"chengseong"},"content":"     * Creates a Storage Object containing the file path of where the user wishes to store the TaskList.","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"chengseong"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"chengseong"},"content":"     * @param filePath file path of Storage.","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"chengseong"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"chengseong"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"chengseong"},"content":"     * Reads and loads the storage into an ArrayList of Tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"chengseong"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"chengseong"},"content":"     * @return ArrayList of tasks stored in the storage.","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"chengseong"},"content":"     * @throws FileNotFoundException if file path does not exist.","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"chengseong"},"content":"    public ArrayList\u003cTask\u003e load() throws FileNotFoundException {","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"chengseong"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"chengseong"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"chengseong"},"content":"        if (f.exists()){","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"chengseong"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"chengseong"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"chengseong"},"content":"                String toRead \u003d s.nextLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"chengseong"},"content":"                String[] strSplit \u003d toRead.split(\" \\\\| \");","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"chengseong"},"content":"                if (strSplit[0].equals(\"T\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"chengseong"},"content":"                    ToDo toDo \u003d new ToDo(strSplit[2]);","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"chengseong"},"content":"                    if (strSplit[1].equals(\"1\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"chengseong"},"content":"                        toDo.complete();","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"chengseong"},"content":"                    }","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"chengseong"},"content":"                    list.add(toDo);","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"chengseong"},"content":"                } else if (strSplit[0].equals(\"D\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"chengseong"},"content":"                    String[] dateTime \u003d strSplit[3].split(\", \");","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"chengseong"},"content":"                    LocalDate date \u003d LocalDate.parse(dateTime[0], DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"chengseong"},"content":"                    LocalTime time \u003d LocalTime.parse(dateTime[1], DateTimeFormatter.ofPattern(\"hh:mm a\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"chengseong"},"content":"                    Deadline deadline \u003d new Deadline(strSplit[2], date, time);","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"chengseong"},"content":"                    if (strSplit[1].equals(\"1\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"chengseong"},"content":"                        deadline.complete();","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"chengseong"},"content":"                    }","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"chengseong"},"content":"                    list.add(deadline);","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"chengseong"},"content":"                } else if (strSplit[0].equals(\"E\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"chengseong"},"content":"                    String[] dateTime \u003d strSplit[3].split(\", \");","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"chengseong"},"content":"                    LocalDate date \u003d LocalDate.parse(dateTime[0], DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"chengseong"},"content":"                    LocalTime time \u003d LocalTime.parse(dateTime[1], DateTimeFormatter.ofPattern(\"hh:mm a\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"chengseong"},"content":"                    Event event \u003d new Event(strSplit[2], date, time);","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"chengseong"},"content":"                    if (strSplit[1].equals(\"1\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"chengseong"},"content":"                        event.complete();","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"chengseong"},"content":"                    }","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"chengseong"},"content":"                    list.add(event);","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"chengseong"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"chengseong"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"chengseong"},"content":"            s.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"chengseong"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"chengseong"},"content":"            throw new FileNotFoundException();","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"chengseong"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"chengseong"},"content":"        return list;","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":84,"author":{"gitId":"chengseong"},"content":"     * Writes the TaskList into a text file that is then stored in the file path.","lastModifiedDate":"2021-08-27"},{"lineNumber":85,"author":{"gitId":"chengseong"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":86,"author":{"gitId":"chengseong"},"content":"     * @param tasks TaskList of tasks to be written into the text file","lastModifiedDate":"2021-08-27"},{"lineNumber":87,"author":{"gitId":"chengseong"},"content":"     * @throws IOException On Output Error.","lastModifiedDate":"2021-08-27"},{"lineNumber":88,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":89,"author":{"gitId":"chengseong"},"content":"    public void write(TaskList tasks) throws IOException {","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"chengseong"},"content":"        File toWrite \u003d new File(\"../../../data\");","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"chengseong"},"content":"        if (!toWrite.exists()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"chengseong"},"content":"            toWrite.mkdir();","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"chengseong"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"chengseong"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"chengseong"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2021-09-07"},{"lineNumber":96,"author":{"gitId":"chengseong"},"content":"            Task t \u003d tasks.get(i);","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"chengseong"},"content":"            fw.write(t.getToWrite());","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"chengseong"},"content":"            fw.write(System.getProperty(\"line.separator\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"chengseong"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"chengseong"},"content":"        fw.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"chengseong"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"chengseong":102}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chengseong"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"chengseong"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"chengseong"},"content":" * Task is the abstract base class of all the Tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"chengseong"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"chengseong"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"chengseong"},"content":"    private boolean isDone;","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"chengseong"},"content":"    private String toDo;","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"chengseong"},"content":"    Task(String toDo) {","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"chengseong"},"content":"        this(false, toDo);","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"chengseong"},"content":"    Task(boolean isDone, String toDo){","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"chengseong"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"chengseong"},"content":"        this.toDo \u003d toDo;","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"chengseong"},"content":"     * Changes the done variable stored in Task to 1, representing a completed task.","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"chengseong"},"content":"    public void complete(){","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"chengseong"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"chengseong"},"content":"    String getToDo() {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"chengseong"},"content":"        return toDo;","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"chengseong"},"content":"    String getDone() {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"chengseong"},"content":"        if (!isDone) {","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"chengseong"},"content":"            return \"0\";","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"chengseong"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"chengseong"},"content":"        return \"1\";","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"chengseong"},"content":"     * returns a String in the format \"Completion Status | Task\"","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"chengseong"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"chengseong"},"content":"     * @return a String in the format \"Completion Status | Task\"","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"chengseong"},"content":"    public String getToWrite() {","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"chengseong"},"content":"        return  this.getDone() + \" | \"  + this.getToDo();","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"chengseong"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"chengseong"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"chengseong"},"content":"        if (!(o instanceof Task)){","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"chengseong"},"content":"            return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"chengseong"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"chengseong"},"content":"            Task oTask \u003d (Task) o;","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"chengseong"},"content":"            return this.toString().equals(oTask.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"chengseong"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"chengseong"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":58,"author":{"gitId":"chengseong"},"content":"    public String toString(){","lastModifiedDate":"2021-08-17"},{"lineNumber":59,"author":{"gitId":"chengseong"},"content":"        if(isDone){","lastModifiedDate":"2021-09-07"},{"lineNumber":60,"author":{"gitId":"chengseong"},"content":"            return String.format(\"[X] %s\", toDo);","lastModifiedDate":"2021-08-17"},{"lineNumber":61,"author":{"gitId":"chengseong"},"content":"        } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":62,"author":{"gitId":"chengseong"},"content":"            return String.format(\"[ ] %s\", toDo);","lastModifiedDate":"2021-08-17"},{"lineNumber":63,"author":{"gitId":"chengseong"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":64,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":65,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":66,"author":{"gitId":"chengseong"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"chengseong":66}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chengseong"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"chengseong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"chengseong"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"chengseong"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"chengseong"},"content":" * Represents a list containing all the tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"chengseong"},"content":" * A TaskList contains an ArrayList of the tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"chengseong"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"chengseong"},"content":"public class TaskList {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"chengseong"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"chengseong"},"content":"     * Creates a TaskList Object containing an empty ArrayList.","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"chengseong"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"chengseong"},"content":"        this(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"chengseong"},"content":"     * Creates a TaskList Object containing the ArrayList of tasks given.","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"chengseong"},"content":"     * @param tasks ArrayList of tasks to be stored in TaskList.","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"chengseong"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"chengseong"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"chengseong"},"content":"     * Deletes a task from the TaskList stored in the index given.","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"chengseong"},"content":"     * @param index index of the task to be deleted.","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"chengseong"},"content":"    public void delete(int index) {","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"chengseong"},"content":"        tasks.remove(index);","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"chengseong"},"content":"     * Adds the Task given to the TaskList.","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"chengseong"},"content":"     * @param t Task to be added to the TaskList.","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"chengseong"},"content":"    public void add(Task t) {","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"chengseong"},"content":"        tasks.add(t);","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"chengseong"},"content":"     * Returns the Task from the TaskList stored in the index given.","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"chengseong"},"content":"     * @param index index of the task to be retrieved.","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"chengseong"},"content":"     * @return Task stored at the index.","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"chengseong"},"content":"    public Task get(int index) {","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"chengseong"},"content":"        return tasks.get(index);","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"chengseong"},"content":"     * Returns the number of Tasks stored in the TaskList.","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"chengseong"},"content":"     * @return Number of Tasks stored in the TaskList.","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"chengseong"},"content":"    public int getSize() {","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"chengseong"},"content":"        return tasks.size();","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"chengseong"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"chengseong":61}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chengseong"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"chengseong"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"chengseong"},"content":" * Represents a ToDo task.","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"chengseong"},"content":" * A ToDo task contains a String describing the task.","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"chengseong"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"chengseong"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"chengseong"},"content":"     * Creates a ToDo Object containing the task to be done.","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"chengseong"},"content":"     * @param toDo task to be done.","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"chengseong"},"content":"    public ToDo(String toDo){","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"chengseong"},"content":"        super(toDo);","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"chengseong"},"content":"    String getType() {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"chengseong"},"content":"        return \"T\";","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"chengseong"},"content":"     * returns a String in the format \"[T] Completion Status | Task\"","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"chengseong"},"content":"     * @return a String in the format \"[T] Completion Status | Task\"","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"chengseong"},"content":"    public String getToWrite() {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"chengseong"},"content":"        return this.getType() + \" | \" + super.getToWrite();","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"chengseong"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"chengseong"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"chengseong"},"content":"        return(\"[T]\" + super.toString());","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"chengseong"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"chengseong":35}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chengseong"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"chengseong"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"chengseong"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"chengseong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"chengseong"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"chengseong"},"content":" * Represents the UI of the chatbot.","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"chengseong"},"content":" * Contains a Scanner that reads the input given by the user.","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"chengseong"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"chengseong"},"content":"public class Ui {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"chengseong"},"content":"    private Scanner sc;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"chengseong"},"content":"     * Creates a UI Object containing a Scanner that reads the inputs.","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"chengseong"},"content":"    public Ui() {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"chengseong"},"content":"        sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"chengseong"},"content":"    private String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"chengseong"},"content":"    + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"chengseong"},"content":"    + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"chengseong"},"content":"    + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"chengseong"},"content":"    + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"chengseong"},"content":"     * Prints the greeting message the user sees when the Bot is started up.","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"chengseong"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"chengseong"},"content":"    public void showWelcome() {","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"chengseong"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"chengseong"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"chengseong"},"content":"     * Prints the error message in the case the file path that the Storage is supposed to read from does not exist.","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"chengseong"},"content":"    public void showLoadingError() {","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"chengseong"},"content":"        System.out.println(\"File Not Found\");","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"chengseong"},"content":"     * Prints the error message when an Exception is thrown.","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"chengseong"},"content":"     * @param error error message given by the Exception.","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"chengseong"},"content":"    public void showError(String error) {","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"chengseong"},"content":"        System.out.println(error);","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"chengseong"},"content":"     * Prints the message when a Task is added to the TaskList.","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"chengseong"},"content":"     * @param task Task to be added to the TaskList","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"chengseong"},"content":"     * @param tasks TaskList the Task is to be added to.","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"chengseong"},"content":"    public void printAdd(Task task, TaskList tasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"chengseong"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"chengseong"},"content":"        System.out.println(String.format(\"  %s\", task.toString()));","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"chengseong"},"content":"        System.out.println(String.format(\"Now you have %d tasks in the list\", tasks.getSize()));","lastModifiedDate":"2021-09-07"},{"lineNumber":64,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":67,"author":{"gitId":"chengseong"},"content":"     * Prints the message when a Task is completed in the TaskList.","lastModifiedDate":"2021-08-27"},{"lineNumber":68,"author":{"gitId":"chengseong"},"content":"     * @param tasks TaskList containing the Task that was completed.","lastModifiedDate":"2021-08-27"},{"lineNumber":69,"author":{"gitId":"chengseong"},"content":"     * @param toComplete Index of the completed Task in the TaskList","lastModifiedDate":"2021-08-27"},{"lineNumber":70,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":71,"author":{"gitId":"chengseong"},"content":"    public void printDone(TaskList tasks, int toComplete) {","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"chengseong"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"chengseong"},"content":"        System.out.println(String.format(\"  %s\", tasks.get(toComplete)));","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":77,"author":{"gitId":"chengseong"},"content":"     * Prints the message when a Task is deleted in the TaskList.","lastModifiedDate":"2021-08-27"},{"lineNumber":78,"author":{"gitId":"chengseong"},"content":"     * @param tasks TaskList containing the Task that was deleted.","lastModifiedDate":"2021-08-27"},{"lineNumber":79,"author":{"gitId":"chengseong"},"content":"     * @param toDelete Index of the deleted Task in the TaskList","lastModifiedDate":"2021-08-27"},{"lineNumber":80,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":81,"author":{"gitId":"chengseong"},"content":"    public void printDelete(TaskList tasks, int toDelete){","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"chengseong"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task: \");","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"chengseong"},"content":"        System.out.println(String.format(\"  %s\", tasks.get(toDelete)));","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"chengseong"},"content":"        System.out.println(String.format(\"Now you have %d tasks in the list\", tasks.getSize() - 1));","lastModifiedDate":"2021-09-07"},{"lineNumber":85,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":88,"author":{"gitId":"chengseong"},"content":"     * Prints the message when the Bot is Terminated.","lastModifiedDate":"2021-08-27"},{"lineNumber":89,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":90,"author":{"gitId":"chengseong"},"content":"    public void printExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"chengseong"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"chengseong"},"content":"        sc.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":96,"author":{"gitId":"chengseong"},"content":"     * Prints the line between each output.","lastModifiedDate":"2021-08-27"},{"lineNumber":97,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":98,"author":{"gitId":"chengseong"},"content":"    public void showLine() {","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"chengseong"},"content":"        System.out.println(\"_______\");","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":103,"author":{"gitId":"chengseong"},"content":"     * Prints out the list of Tasks stored in the TaskList.","lastModifiedDate":"2021-08-27"},{"lineNumber":104,"author":{"gitId":"chengseong"},"content":"     * @param tasks TaskList to be printed.","lastModifiedDate":"2021-08-27"},{"lineNumber":105,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":106,"author":{"gitId":"chengseong"},"content":"    public void printList(TaskList tasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"chengseong"},"content":"        System.out.println(\"Here are the tasks in your list: \");","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"chengseong"},"content":"        for(int i \u003d 0; i \u003c tasks.getSize(); i++){","lastModifiedDate":"2021-09-07"},{"lineNumber":109,"author":{"gitId":"chengseong"},"content":"            System.out.println((i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"chengseong"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":114,"author":{"gitId":"chengseong"},"content":"     * Returns the input given by the user.","lastModifiedDate":"2021-08-27"},{"lineNumber":115,"author":{"gitId":"chengseong"},"content":"     * @return String containing input of the user.","lastModifiedDate":"2021-08-27"},{"lineNumber":116,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":117,"author":{"gitId":"chengseong"},"content":"    public String readCommand() {","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"chengseong"},"content":"        String input \u003d sc.nextLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"chengseong"},"content":"        return input;","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":121,"author":{"gitId":"chengseong"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"chengseong":121}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chengseong"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"chengseong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"chengseong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"chengseong"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"chengseong"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"chengseong"},"content":"import duke.exception.IllegalCommandException;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"chengseong"},"content":"import duke.exception.IllegalTaskException;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"chengseong"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"chengseong"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"chengseong"},"content":"    public void testParse_toDo_success() throws IllegalCommandException, IllegalTaskException {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"chengseong"},"content":"        String command1 \u003d \"todo read book\";","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"chengseong"},"content":"        assertEquals(new AddCommand(new ToDo(\"read book\")),","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"chengseong"},"content":"                duke.Parser.parse(command1));","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"chengseong"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"chengseong":17}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chengseong"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"chengseong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"chengseong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"chengseong"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"chengseong"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"chengseong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"chengseong"},"content":"public class TaskListTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"chengseong"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"chengseong"},"content":"    public void testGet_toDo_success() {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"chengseong"},"content":"        duke.TaskList test \u003d new duke.TaskList(new ArrayList\u003cTask\u003e() {{add(new ToDo(\"eat\"));}});","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"chengseong"},"content":"        assertEquals(new ToDo(\"eat\"), test.get(0));","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"chengseong"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"chengseong":16}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"chengseong"},"content":"todo read book","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"chengseong"},"content":"deadline return book /by 2/12/2019 1800","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"chengseong"},"content":"event project meeting /at 2/13/2019 1700","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"chengseong"},"content":"todo join sports club","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"chengseong"},"content":"todo borrow book","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"chengseong"},"content":"done 1","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"chengseong"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"chengseong"},"content":"done 4","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"chengseong"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"chengseong"},"content":"delete 3","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"chengseong"},"content":"todo","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"chengseong"},"content":"bleh","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"chengseong"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"chengseong":13}}]
