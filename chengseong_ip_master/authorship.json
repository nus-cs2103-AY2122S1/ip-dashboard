[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"chengseong"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"chengseong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"chengseong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"chengseong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"chengseong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"chengseong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"chengseong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"chengseong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"chengseong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"chengseong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"chengseong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"chengseong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"chengseong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"chengseong"},"content":"    mainClassName \u003d \"Launcher\"","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"chengseong":16,"-":45}},{"path":"config/travis/check-eof-newline.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"chengseong"},"content":"#!/bin/sh","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"chengseong"},"content":"# Checks that all text files end with a newline.","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"chengseong"},"content":"ret\u003d0","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"chengseong"},"content":"# Preserve filename with spaces by only splitting on newlines.","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"chengseong"},"content":"IFS\u003d\u0027","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"chengseong"},"content":"\u0027","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"chengseong"},"content":"for filename in $(git grep --cached -I -l -e \u0027\u0027 -- \u0027:/\u0027); do","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"chengseong"},"content":"    if [ \"$(tail -c 1 \"./$filename\")\" !\u003d \u0027\u0027 ]; then","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"chengseong"},"content":"        line\u003d\"$(wc -l \"./$filename\" | cut -d\u0027 \u0027 -f1)\"","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"chengseong"},"content":"        echo \"ERROR:$filename:$line: no newline at EOF.\"","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"chengseong"},"content":"        ret\u003d1","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"chengseong"},"content":"    fi","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"chengseong"},"content":"done","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"chengseong"},"content":"exit $ret","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"chengseong":18}},{"path":"config/travis/check-line-endings.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"chengseong"},"content":"#!/bin/sh","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"chengseong"},"content":"# Checks for prohibited line endings.","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"chengseong"},"content":"# Prohibited line endings: \\r\\n","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"chengseong"},"content":"git grep --cached -I -n --no-color -P \u0027\\r$\u0027 -- \u0027:/\u0027 |","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"chengseong"},"content":"awk \u0027","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"chengseong"},"content":"    BEGIN {","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"chengseong"},"content":"        FS \u003d \":\"","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"chengseong"},"content":"        OFS \u003d \":\"","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"chengseong"},"content":"        ret \u003d 0","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"chengseong"},"content":"    {","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"chengseong"},"content":"        ret \u003d 1","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"chengseong"},"content":"        print \"ERROR\", $1, $2, \" prohibited \\\\r\\\\n line ending, use \\\\n instead.\"","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"chengseong"},"content":"    END {","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"chengseong"},"content":"        exit ret","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"chengseong"},"content":"\u0027","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"chengseong":19}},{"path":"config/travis/check-trailing-whitespace.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"chengseong"},"content":"#!/bin/sh","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"chengseong"},"content":"# Checks for trailing whitespace","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"chengseong"},"content":"git grep --cached -I -n --no-color -P \u0027[ \\t]+$\u0027 -- \u0027:/\u0027 |","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"chengseong"},"content":"awk \u0027","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"chengseong"},"content":"    BEGIN {","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"chengseong"},"content":"        FS \u003d \":\"","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"chengseong"},"content":"        OFS \u003d \":\"","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"chengseong"},"content":"        ret \u003d 0","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"chengseong"},"content":"    {","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"chengseong"},"content":"        # Only warn for markdown files (*.md) to accomodate text editors","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"chengseong"},"content":"        # which do not properly handle trailing whitespace.","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"chengseong"},"content":"        # (e.g. GitHub web editor)","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"chengseong"},"content":"        if ($1 ~ /\\.md$/) {","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"chengseong"},"content":"            severity \u003d \"WARN\"","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"chengseong"},"content":"        } else {","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"chengseong"},"content":"            severity \u003d \"ERROR\"","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"chengseong"},"content":"            ret \u003d 1","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"chengseong"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"chengseong"},"content":"        print severity, $1, $2, \" trailing whitespace.\"","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"chengseong"},"content":"    END {","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"chengseong"},"content":"        exit ret","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"chengseong"},"content":"\u0027","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"chengseong":26}},{"path":"config/travis/run-checks.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"chengseong"},"content":"#!/bin/sh","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"chengseong"},"content":"# Runs all check-* scripts, and returns a non-zero exit code if any of them fail.","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"chengseong"},"content":"dir\u003d$(CDPATH\u003d cd -- \"$(dirname -- \"$0\")\" \u0026\u0026 pwd) \u0026\u0026","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"chengseong"},"content":"ret\u003d0 \u0026\u0026","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"chengseong"},"content":"for checkscript in \"$dir\"/check-*; do","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"chengseong"},"content":"    if ! \"$checkscript\"; then","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"chengseong"},"content":"        ret\u003d1","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"chengseong"},"content":"    fi","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"chengseong"},"content":"done","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"chengseong"},"content":"exit $ret","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"chengseong":11}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"chengseong"},"content":"DukeBot is a **desktop app for managing tasks, optimized for use via a Command Line Interface** (CLI) while still having","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"chengseong"},"content":" the benefits of a Graphical User Intrerface (GUI). If you can type fast, DukeBot can get your task management done","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"chengseong"},"content":" faster than tradition GUI apps. ","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"chengseong"},"content":"![Image of GUI](https://chengseong.github.io/ip/Ui.png)","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"chengseong"},"content":"**Notes about the command format:**","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"chengseong"},"content":"* Commands are case sensitive.","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"chengseong"},"content":"  e.g. `todo` is a proper command, while `Todo` will return an error.","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"chengseong"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"chengseong"},"content":"  e.g. in `todo TODO`, `TODO` is a parameter which can be used as `todo read book`.","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"chengseong"},"content":"* All date and time input must be in the format `dd/mm/yyyy`.","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"chengseong"},"content":"  e.g. `20/9/2021 1800` ","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"chengseong"},"content":"* Currently, the only `FREQUENCY` supported are `weekly` and `monthly`.","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"chengseong"},"content":"  e.g. inputting `annually` will return an error.","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"chengseong"},"content":"* Items in square brackets are optional.","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"chengseong"},"content":"  e.g. `DATE \\[FREQUENCY\\]` can be used as `20/9/2021 1800 weekly` or as `20/9/2021 1800`.","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"chengseong"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `list` and `bye`) will be ignored.","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"chengseong"},"content":"  e.g. if the command specifies `list 123`, it will be interpreted as `list`.","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"chengseong"},"content":"### Adding a todo: `todo`","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"chengseong"},"content":"Adds a todo the the task list.","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"chengseong"},"content":"Format : `todo TODO`","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"chengseong"},"content":"Examples:","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"chengseong"},"content":"* `todo read book`","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"chengseong"},"content":"* `todo finish chapter 1 of lectures`","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"chengseong"},"content":"### Adding a deadline: `deadline` ","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"chengseong"},"content":"Adds a deadline to the task list.","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"chengseong"},"content":"Format: `deadline TASK /by DATE TIME [FREQUENCY]` ","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"chengseong"},"content":"* `FREQUENCY` defaults to `once` if there is no input for the parameter.","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"chengseong"},"content":"Examples:","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"chengseong"},"content":"* `deadline return library book /by 20/9/2021 1800`","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"chengseong"},"content":"* `deadline finish weekly quiz /by 21/9/2021 2359 weekly`","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"chengseong"},"content":"### Adding an event: `event` ","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"chengseong"},"content":"Adds an event to the task list.","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"chengseong"},"content":"Format: `event TASK /at DATE TIME [FREQUENCY]` ","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"chengseong"},"content":"* `FREQUENCY` defaults to `once` if there is no input for the parameter.","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"chengseong"},"content":"Examples:","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"chengseong"},"content":"* `event CS2106 midterms /at 29/9/2021 1345`","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"chengseong"},"content":"* `event monthly test /at 21/9/2021 2359 monthly`","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"chengseong"},"content":"### Completing an task: `done`","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"chengseong"},"content":"Completes a task in the task list.","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"chengseong"},"content":"Format: `done INDEX`","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"chengseong"},"content":"* Index must be valid. e.g. if the task list has 2 tasks, inputting `done 3` will return an error.","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"chengseong"},"content":"Example: ","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"chengseong"},"content":"* `done 2`","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"chengseong"},"content":"### Deleting a task : `delete`","lastModifiedDate":"2021-09-17"},{"lineNumber":75,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"chengseong"},"content":"Deletes a task from the task list.","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"chengseong"},"content":"Format : `delete INDEX`","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":80,"author":{"gitId":"chengseong"},"content":"* Index must be valid. e.g. if the task list has 2 tasks, inputting `delete 3` will return an error.","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":82,"author":{"gitId":"chengseong"},"content":"Example:","lastModifiedDate":"2021-09-17"},{"lineNumber":83,"author":{"gitId":"chengseong"},"content":"* `delete 3`","lastModifiedDate":"2021-09-17"},{"lineNumber":84,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":85,"author":{"gitId":"chengseong"},"content":"### Listing all tasks: `list`","lastModifiedDate":"2021-09-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":87,"author":{"gitId":"chengseong"},"content":"Shows a list of all tasks in the task list.","lastModifiedDate":"2021-09-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":89,"author":{"gitId":"chengseong"},"content":"Format: `list`","lastModifiedDate":"2021-09-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":91,"author":{"gitId":"chengseong"},"content":"### Locating tasks by task: `find`","lastModifiedDate":"2021-09-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":93,"author":{"gitId":"chengseong"},"content":"Finds tasks which contains the given keyword.","lastModifiedDate":"2021-09-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":95,"author":{"gitId":"chengseong"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2021-09-17"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":97,"author":{"gitId":"chengseong"},"content":"* The search is case-sensitive. e.g. `Read` will not match `read`.","lastModifiedDate":"2021-09-17"},{"lineNumber":98,"author":{"gitId":"chengseong"},"content":"* Only the task is searched. e.g. `find event` will not give a list of all the events in the task list.","lastModifiedDate":"2021-09-17"},{"lineNumber":99,"author":{"gitId":"chengseong"},"content":"* Partial matching is supported. e.g. `Re` will match `Read`.","lastModifiedDate":"2021-09-17"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":101,"author":{"gitId":"chengseong"},"content":"Examples:","lastModifiedDate":"2021-09-17"},{"lineNumber":102,"author":{"gitId":"chengseong"},"content":"* `find read` returns `todo read book`","lastModifiedDate":"2021-09-17"},{"lineNumber":103,"author":{"gitId":"chengseong"},"content":"* `find re` returns both `todo read book` and `todo return book`","lastModifiedDate":"2021-09-17"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":105,"author":{"gitId":"chengseong"},"content":"### Saving the task list: `bye`","lastModifiedDate":"2021-09-17"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":107,"author":{"gitId":"chengseong"},"content":"Saves the task list to `[JAR file location]/data/tasks.txt` and closes the window.","lastModifiedDate":"2021-09-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":109,"author":{"gitId":"chengseong"},"content":"Format: `bye`","lastModifiedDate":"2021-09-17"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":111,"author":{"gitId":"chengseong"},"content":"* If the data folder does not exist, it will create a data folder.","lastModifiedDate":"2021-09-17"},{"lineNumber":112,"author":{"gitId":"chengseong"},"content":"* If the `tasks.txt` file does not exist in the data folder, it will create a `tasks.txt` file.","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"chengseong":97,"-":15}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chengseong"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"chengseong"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"chengseong"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"chengseong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"chengseong"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"chengseong"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"chengseong"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"chengseong"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"chengseong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"chengseong"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"chengseong"},"content":"import javafx.scene.paint.ImagePattern;","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"chengseong"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"chengseong"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"chengseong"},"content":"/**","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"chengseong"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"chengseong"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"chengseong"},"content":" */","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"chengseong"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"chengseong"},"content":"    @FXML","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"chengseong"},"content":"    private Text dialog;","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"chengseong"},"content":"    @FXML","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"chengseong"},"content":"    private Circle displayPicture;","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"chengseong"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"chengseong"},"content":"        try {","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"chengseong"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"chengseong"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"chengseong"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"chengseong"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"chengseong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"chengseong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"chengseong"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"chengseong"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"chengseong"},"content":"        displayPicture.setFill(new ImagePattern(img));","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"chengseong"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"chengseong"},"content":"    private void flip() {","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"chengseong"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"chengseong"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"chengseong"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"chengseong"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"chengseong"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"chengseong"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":53,"author":{"gitId":"chengseong"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-07"},{"lineNumber":54,"author":{"gitId":"chengseong"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-07"},{"lineNumber":55,"author":{"gitId":"chengseong"},"content":"        db.flip();","lastModifiedDate":"2021-09-07"},{"lineNumber":56,"author":{"gitId":"chengseong"},"content":"        return db;","lastModifiedDate":"2021-09-07"},{"lineNumber":57,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":58,"author":{"gitId":"chengseong"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"chengseong":58}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chengseong"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"chengseong"},"content":"import duke.Parser;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"chengseong"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"chengseong"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"chengseong"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"chengseong"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"chengseong"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"chengseong"},"content":" * \u003ch1\u003e Duke TaskList ChatBot! \u003c/h1\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"chengseong"},"content":" * The duke program implements and application that keeps track of all the users task!","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"chengseong"},"content":" * The user is able to add, delete and \"mark as complete\" tasks from the task list!","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"chengseong"},"content":" * Currently the Duke ChatBot is only able to keep track of ToDos, Deadlines and Events!","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"chengseong"},"content":" *","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"chengseong"},"content":" * @author Ong Cheng Seong","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"chengseong"},"content":" * @version 1.0","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"chengseong"},"content":" * @since 2021-08-31","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"chengseong"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"chengseong"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"chengseong"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"chengseong"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"chengseong"},"content":"     * Creates a Duke ChatBot Object that has a Ui, and a TaskList populated by the data read from the storage.","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"chengseong"},"content":"     * @param filePath text document that contains the task list for Storage to read from.","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"chengseong"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"chengseong"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"chengseong"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"chengseong"},"content":"        tasks \u003d loadTaskList(storage);","lastModifiedDate":"2021-09-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"chengseong"},"content":"     * Returns the response given by the input","lastModifiedDate":"2021-09-12"},{"lineNumber":37,"author":{"gitId":"chengseong"},"content":"     * @param input User Input","lastModifiedDate":"2021-09-12"},{"lineNumber":38,"author":{"gitId":"chengseong"},"content":"     * @return Response after command is executed.","lastModifiedDate":"2021-09-12"},{"lineNumber":39,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"chengseong"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"chengseong"},"content":"        try {","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"chengseong"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"chengseong"},"content":"            String output \u003d c.execute(tasks, ui, storage);","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"chengseong"},"content":"            assert !output.equals(\"\") : \"There should be an output\";","lastModifiedDate":"2021-09-12"},{"lineNumber":45,"author":{"gitId":"chengseong"},"content":"            return output;","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"chengseong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"chengseong"},"content":"            return e.getMessage();","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"chengseong"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"chengseong"},"content":"    private TaskList loadTaskList(Storage storage) {","lastModifiedDate":"2021-09-12"},{"lineNumber":52,"author":{"gitId":"chengseong"},"content":"        try {","lastModifiedDate":"2021-09-12"},{"lineNumber":53,"author":{"gitId":"chengseong"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-09-12"},{"lineNumber":54,"author":{"gitId":"chengseong"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-12"},{"lineNumber":55,"author":{"gitId":"chengseong"},"content":"            ui.showLoadingError();","lastModifiedDate":"2021-09-12"},{"lineNumber":56,"author":{"gitId":"chengseong"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-09-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":58,"author":{"gitId":"chengseong"},"content":"        return tasks;","lastModifiedDate":"2021-09-12"},{"lineNumber":59,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":60,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"chengseong":57,"-":4}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chengseong"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"chengseong"},"content":"/**","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"chengseong"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"chengseong"},"content":" */","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"chengseong"},"content":"public class Launcher {","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"chengseong"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"chengseong"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"chengseong"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"chengseong":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chengseong"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"chengseong"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"chengseong"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"chengseong"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"chengseong"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"chengseong"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"chengseong"},"content":"/**","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"chengseong"},"content":" * A GUI for Duke using FXML","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"chengseong"},"content":" */","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"chengseong"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"chengseong"},"content":"    private final String FILEPATH \u003d \"./data/tasks.txt\";","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":16,"author":{"gitId":"chengseong"},"content":"    private Duke duke \u003d new Duke(FILEPATH);","lastModifiedDate":"2021-09-12"},{"lineNumber":17,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"chengseong"},"content":"    @Override","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"chengseong"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"chengseong"},"content":"        try {","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"chengseong"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"chengseong"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"chengseong"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"chengseong"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"chengseong"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"chengseong"},"content":"            stage.show();","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"chengseong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"chengseong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"chengseong"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"chengseong"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"chengseong":31}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chengseong"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"chengseong"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"chengseong"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"chengseong"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"chengseong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"chengseong"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"chengseong"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"chengseong"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"chengseong"},"content":"/**","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"chengseong"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"chengseong"},"content":" */","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"chengseong"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"chengseong"},"content":"    @FXML","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"chengseong"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"chengseong"},"content":"    @FXML","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"chengseong"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"chengseong"},"content":"    @FXML","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"chengseong"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"chengseong"},"content":"    @FXML","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"chengseong"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"chengseong"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"chengseong"},"content":"    private final String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"chengseong"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"chengseong"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"chengseong"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"chengseong"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"chengseong"},"content":"    private final String greeting \u003d \"Hello from Duke!\"","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"chengseong"},"content":"            + \"\\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"chengseong"},"content":"            + \"What can I do for you?\";","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"chengseong"},"content":"    private final String BYERESPONSE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"chengseong"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.jpg\"));","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"chengseong"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/bot.jpg\"));","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"chengseong"},"content":"    @FXML","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"chengseong"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"chengseong"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"chengseong"},"content":"        dialogContainer.getChildren()","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"chengseong"},"content":"                .add(DialogBox.getDukeDialog(greeting, dukeImage));","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"chengseong"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"chengseong"},"content":"        duke \u003d d;","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"chengseong"},"content":"    @FXML","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"chengseong"},"content":"    private void checkExit(String response) {","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"chengseong"},"content":"        if (response.equals(BYERESPONSE)) {","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"chengseong"},"content":"            Stage stage \u003d (Stage) dialogContainer.getScene().getWindow();","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"chengseong"},"content":"            stage.close();","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"chengseong"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":59,"author":{"gitId":"chengseong"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them","lastModifiedDate":"2021-09-07"},{"lineNumber":60,"author":{"gitId":"chengseong"},"content":"     * to the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-07"},{"lineNumber":61,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":62,"author":{"gitId":"chengseong"},"content":"    @FXML","lastModifiedDate":"2021-09-07"},{"lineNumber":63,"author":{"gitId":"chengseong"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-07"},{"lineNumber":64,"author":{"gitId":"chengseong"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-07"},{"lineNumber":65,"author":{"gitId":"chengseong"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-09-07"},{"lineNumber":66,"author":{"gitId":"chengseong"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-07"},{"lineNumber":67,"author":{"gitId":"chengseong"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-07"},{"lineNumber":68,"author":{"gitId":"chengseong"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-09-07"},{"lineNumber":69,"author":{"gitId":"chengseong"},"content":"        );","lastModifiedDate":"2021-09-07"},{"lineNumber":70,"author":{"gitId":"chengseong"},"content":"        checkExit(response);","lastModifiedDate":"2021-09-26"},{"lineNumber":71,"author":{"gitId":"chengseong"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-07"},{"lineNumber":72,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":73,"author":{"gitId":"chengseong"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"chengseong":73}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chengseong"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"chengseong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"chengseong"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"chengseong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"chengseong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"chengseong"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"chengseong"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"chengseong"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"chengseong"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"chengseong"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"chengseong"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"chengseong"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"chengseong"},"content":"import duke.exception.IllegalCommandException;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"chengseong"},"content":"import duke.exception.IllegalDateException;","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"chengseong"},"content":"import duke.exception.IllegalFrequencyException;","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"chengseong"},"content":"import duke.exception.IllegalTaskException;","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"chengseong"},"content":"import duke.exception.IllegalTimeException;","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"chengseong"},"content":"import duke.exception.MissingIndexException;","lastModifiedDate":"2021-09-13"},{"lineNumber":21,"author":{"gitId":"chengseong"},"content":"import duke.exception.MissingSyntaxException;","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"chengseong"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"chengseong"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"chengseong"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"chengseong"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"chengseong"},"content":" * Represents a Parser that parses in the input received by the UI","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"chengseong"},"content":" * \u003cul\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"chengseong"},"content":" * \u003cli\u003eIf the first word of the input is \"list\", a ListCommand is created.\u003c/li\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"chengseong"},"content":" * \u003cli\u003eIf the first word of the input is \"done\", a DoneCommand consisting the index of the task done is created.\u003c/li\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"chengseong"},"content":" * \u003cli\u003eIf the first word of the input is \"delete\", a DeleteCommand consisting the index to the task to be deleted is","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"chengseong"},"content":" * created.\u003c/li\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"chengseong"},"content":" * \u003cli\u003eIf the first word of the input is \"todo\", the Parser checks for a task afterwards. If there is a task, an","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"chengseong"},"content":" * AddCommand consisting a ToDo task which contains the task is created. If there is no task, an","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"chengseong"},"content":" * IllegalTaskException is thrown.\u003c/li\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"chengseong"},"content":" * \u003cli\u003eIf the first word of the input is \"deadline\", an AddCommand consisting a Deadline task which contains the task","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"chengseong"},"content":" * and deadline is created.\u003c/li\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"chengseong"},"content":" * \u003cli\u003eIf the first word of the input is \"event\", a new AddCommand consisting an Event Task which contains the","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"chengseong"},"content":" * event and event date is created.\u003c/li\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"chengseong"},"content":" * \u003cli\u003e If the first word of the input is \"bye\", a new ExitCommand is created.\u003c/li\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"chengseong"},"content":" * \u003cli\u003e If the first word of the input matches none of the cases above, an IllegalCommandException is thrown.\u003c/li\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"chengseong"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"chengseong"},"content":" *","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"chengseong"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"chengseong"},"content":"public class Parser {","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"chengseong"},"content":"    private static final String TIMEFORMAT \u003d \"HHmm\";","lastModifiedDate":"2021-09-12"},{"lineNumber":48,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"chengseong"},"content":"     * Parses the input received by the UI.","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"chengseong"},"content":"     * Dates should be input in the format dd/mm/yyyy HHmm","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"chengseong"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"chengseong"},"content":"     * @param fullCommand String containing the full command input by the user.","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"chengseong"},"content":"     * @return Commands depending on the first word of the input.","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"chengseong"},"content":"     * @throws IllegalCommandException in the case no task is given after \"todo\".","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"chengseong"},"content":"     * @throws IllegalTaskException in the case an invalid task is given.","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"chengseong"},"content":"    public static Command parse(String fullCommand) throws IllegalCommandException, IllegalTaskException,","lastModifiedDate":"2021-09-13"},{"lineNumber":58,"author":{"gitId":"chengseong"},"content":"            MissingIndexException, MissingSyntaxException, IllegalTimeException, IllegalDateException,","lastModifiedDate":"2021-09-13"},{"lineNumber":59,"author":{"gitId":"chengseong"},"content":"            IllegalFrequencyException {","lastModifiedDate":"2021-09-13"},{"lineNumber":60,"author":{"gitId":"chengseong"},"content":"        String command \u003d fullCommand.split(\" \")[0];","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"chengseong"},"content":"        switch (command) {","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"chengseong"},"content":"        case \"list\":","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"chengseong"},"content":"            return new ListCommand();","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"chengseong"},"content":"        case \"done\":","lastModifiedDate":"2021-08-27"},{"lineNumber":65,"author":{"gitId":"chengseong"},"content":"            return createDoneCommand(fullCommand);","lastModifiedDate":"2021-09-12"},{"lineNumber":66,"author":{"gitId":"chengseong"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-27"},{"lineNumber":67,"author":{"gitId":"chengseong"},"content":"            return createDeleteCommand(fullCommand);","lastModifiedDate":"2021-09-12"},{"lineNumber":68,"author":{"gitId":"chengseong"},"content":"        case \"todo\": {","lastModifiedDate":"2021-08-27"},{"lineNumber":69,"author":{"gitId":"chengseong"},"content":"            return createToDo(fullCommand);","lastModifiedDate":"2021-09-12"},{"lineNumber":70,"author":{"gitId":"chengseong"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":71,"author":{"gitId":"chengseong"},"content":"        case \"deadline\": {","lastModifiedDate":"2021-08-27"},{"lineNumber":72,"author":{"gitId":"chengseong"},"content":"            return createDeadline(fullCommand);","lastModifiedDate":"2021-09-12"},{"lineNumber":73,"author":{"gitId":"chengseong"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":74,"author":{"gitId":"chengseong"},"content":"        case \"event\": {","lastModifiedDate":"2021-09-12"},{"lineNumber":75,"author":{"gitId":"chengseong"},"content":"            return createEvent(fullCommand);","lastModifiedDate":"2021-09-12"},{"lineNumber":76,"author":{"gitId":"chengseong"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":77,"author":{"gitId":"chengseong"},"content":"        case \"find\" : {","lastModifiedDate":"2021-08-31"},{"lineNumber":78,"author":{"gitId":"chengseong"},"content":"            return createFindCommand(fullCommand);","lastModifiedDate":"2021-09-12"},{"lineNumber":79,"author":{"gitId":"chengseong"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":80,"author":{"gitId":"chengseong"},"content":"        case \"bye\": {","lastModifiedDate":"2021-08-31"},{"lineNumber":81,"author":{"gitId":"chengseong"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"chengseong"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":83,"author":{"gitId":"chengseong"},"content":"        default: {","lastModifiedDate":"2021-08-31"},{"lineNumber":84,"author":{"gitId":"chengseong"},"content":"            throw new IllegalCommandException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"chengseong"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"chengseong"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":88,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"chengseong"},"content":"    private static DoneCommand createDoneCommand(String fullCommand) throws MissingIndexException {","lastModifiedDate":"2021-09-13"},{"lineNumber":90,"author":{"gitId":"chengseong"},"content":"        int toComplete \u003d getCommandIndex(fullCommand);","lastModifiedDate":"2021-09-12"},{"lineNumber":91,"author":{"gitId":"chengseong"},"content":"        return new DoneCommand(toComplete);","lastModifiedDate":"2021-09-12"},{"lineNumber":92,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":93,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":94,"author":{"gitId":"chengseong"},"content":"    private static DeleteCommand createDeleteCommand(String fullCommand) throws MissingIndexException {","lastModifiedDate":"2021-09-13"},{"lineNumber":95,"author":{"gitId":"chengseong"},"content":"        int toDelete \u003d getCommandIndex(fullCommand);","lastModifiedDate":"2021-09-12"},{"lineNumber":96,"author":{"gitId":"chengseong"},"content":"        return new DeleteCommand(toDelete);","lastModifiedDate":"2021-09-12"},{"lineNumber":97,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":98,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":99,"author":{"gitId":"chengseong"},"content":"    private static AddCommand createToDo(String fullCommand) throws IllegalTaskException {","lastModifiedDate":"2021-09-12"},{"lineNumber":100,"author":{"gitId":"chengseong"},"content":"        String task \u003d fullCommand.replaceFirst(\"todo \", \"\");","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"chengseong"},"content":"        if (task.equals(\"todo\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"chengseong"},"content":"            throw new IllegalTaskException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"chengseong"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":104,"author":{"gitId":"chengseong"},"content":"        return new AddCommand(new ToDo(task));","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":107,"author":{"gitId":"chengseong"},"content":"    private static AddCommand createDeadline(String fullCommand) throws MissingSyntaxException, IllegalTimeException,","lastModifiedDate":"2021-09-13"},{"lineNumber":108,"author":{"gitId":"chengseong"},"content":"            IllegalDateException, IllegalTaskException, IllegalCommandException, IllegalFrequencyException {","lastModifiedDate":"2021-09-13"},{"lineNumber":109,"author":{"gitId":"chengseong"},"content":"        if (!fullCommand.contains(\"/by\")) {","lastModifiedDate":"2021-09-13"},{"lineNumber":110,"author":{"gitId":"chengseong"},"content":"            throw new MissingSyntaxException(\"Deadline commands must be split by a \\\"/by\\\"\");","lastModifiedDate":"2021-09-13"},{"lineNumber":111,"author":{"gitId":"chengseong"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":112,"author":{"gitId":"chengseong"},"content":"        String[] taskDate \u003d getTaskDate(fullCommand, \"deadline \", \"/by \");","lastModifiedDate":"2021-09-12"},{"lineNumber":113,"author":{"gitId":"chengseong"},"content":"        if (taskDate[0].equals(\"\")) {","lastModifiedDate":"2021-09-13"},{"lineNumber":114,"author":{"gitId":"chengseong"},"content":"            throw new IllegalTaskException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2021-09-13"},{"lineNumber":115,"author":{"gitId":"chengseong"},"content":"        } else if (taskDate.length \u003e 2) {","lastModifiedDate":"2021-09-13"},{"lineNumber":116,"author":{"gitId":"chengseong"},"content":"            throw new IllegalCommandException(\"Deadline commands should only be split by 1 \\\"/by\\\"\");","lastModifiedDate":"2021-09-13"},{"lineNumber":117,"author":{"gitId":"chengseong"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":118,"author":{"gitId":"chengseong"},"content":"        return parseCommand(\"Deadline\", taskDate);","lastModifiedDate":"2021-09-12"},{"lineNumber":119,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":120,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":121,"author":{"gitId":"chengseong"},"content":"    private static AddCommand createEvent(String fullCommand) throws MissingSyntaxException, IllegalTimeException,","lastModifiedDate":"2021-09-13"},{"lineNumber":122,"author":{"gitId":"chengseong"},"content":"            IllegalDateException, IllegalTaskException, IllegalCommandException, IllegalFrequencyException {","lastModifiedDate":"2021-09-13"},{"lineNumber":123,"author":{"gitId":"chengseong"},"content":"        if (!fullCommand.contains(\"/at\")) {","lastModifiedDate":"2021-09-13"},{"lineNumber":124,"author":{"gitId":"chengseong"},"content":"            throw new MissingSyntaxException(\"Event commands must be split by a \\\"/at\\\"\");","lastModifiedDate":"2021-09-13"},{"lineNumber":125,"author":{"gitId":"chengseong"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":126,"author":{"gitId":"chengseong"},"content":"        String[] taskDate \u003d getTaskDate(fullCommand, \"event \", \"/at \");","lastModifiedDate":"2021-09-12"},{"lineNumber":127,"author":{"gitId":"chengseong"},"content":"        if (taskDate.length \u003d\u003d 0 || taskDate[0].equals(\"\")) {","lastModifiedDate":"2021-09-13"},{"lineNumber":128,"author":{"gitId":"chengseong"},"content":"            throw new IllegalTaskException(\"☹ OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2021-09-13"},{"lineNumber":129,"author":{"gitId":"chengseong"},"content":"        } else if (taskDate.length \u003e 2) {","lastModifiedDate":"2021-09-13"},{"lineNumber":130,"author":{"gitId":"chengseong"},"content":"            throw new IllegalCommandException(\"Event commands should only be split by 1 \\\"/at\\\"\");","lastModifiedDate":"2021-09-13"},{"lineNumber":131,"author":{"gitId":"chengseong"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":132,"author":{"gitId":"chengseong"},"content":"        return parseCommand(\"Event\", taskDate);","lastModifiedDate":"2021-09-12"},{"lineNumber":133,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":134,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":135,"author":{"gitId":"chengseong"},"content":"    private static FindCommand createFindCommand(String fullCommand) throws IllegalTaskException {","lastModifiedDate":"2021-09-13"},{"lineNumber":136,"author":{"gitId":"chengseong"},"content":"        String keyword \u003d fullCommand.replaceFirst(\"find \", \"\");","lastModifiedDate":"2021-09-12"},{"lineNumber":137,"author":{"gitId":"chengseong"},"content":"        if (keyword.equals(\"\") || keyword.equals(fullCommand)) {","lastModifiedDate":"2021-09-13"},{"lineNumber":138,"author":{"gitId":"chengseong"},"content":"            throw new IllegalTaskException(\"Missing keyword!\");","lastModifiedDate":"2021-09-13"},{"lineNumber":139,"author":{"gitId":"chengseong"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":140,"author":{"gitId":"chengseong"},"content":"        return new FindCommand(keyword);","lastModifiedDate":"2021-09-12"},{"lineNumber":141,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":142,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":143,"author":{"gitId":"chengseong"},"content":"    private static AddCommand parseCommand(String type, String[] taskDate) throws IllegalTimeException,","lastModifiedDate":"2021-09-13"},{"lineNumber":144,"author":{"gitId":"chengseong"},"content":"            IllegalDateException, IllegalTaskException, IllegalFrequencyException {","lastModifiedDate":"2021-09-13"},{"lineNumber":145,"author":{"gitId":"chengseong"},"content":"        String task \u003d taskDate[0];","lastModifiedDate":"2021-08-25"},{"lineNumber":146,"author":{"gitId":"chengseong"},"content":"        String fullDateTime \u003d taskDate[1];","lastModifiedDate":"2021-09-12"},{"lineNumber":147,"author":{"gitId":"chengseong"},"content":"        if (fullDateTime.split(\" \").length \u003c 2 || fullDateTime.split(\" \").length \u003e 3) {","lastModifiedDate":"2021-09-13"},{"lineNumber":148,"author":{"gitId":"chengseong"},"content":"            throw new IllegalTaskException(\"Date and time must be given in the format \\\"dd/mm/yyyy HHmm\\\"!\");","lastModifiedDate":"2021-09-13"},{"lineNumber":149,"author":{"gitId":"chengseong"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":150,"author":{"gitId":"chengseong"},"content":"        LocalDate localDate \u003d getLocalDate(fullDateTime);","lastModifiedDate":"2021-09-12"},{"lineNumber":151,"author":{"gitId":"chengseong"},"content":"        LocalTime localTime \u003d getLocalTime(fullDateTime);","lastModifiedDate":"2021-09-12"},{"lineNumber":152,"author":{"gitId":"chengseong"},"content":"        String frequency \u003d getFrequency(fullDateTime);","lastModifiedDate":"2021-09-13"},{"lineNumber":153,"author":{"gitId":"chengseong"},"content":"        if (!frequency.equals(\"monthly\") \u0026\u0026 !frequency.equals(\"weekly\") \u0026\u0026 !frequency.equals(\"once\")) {","lastModifiedDate":"2021-09-13"},{"lineNumber":154,"author":{"gitId":"chengseong"},"content":"            throw new IllegalFrequencyException(\"Frequency of task can only either be \\\"weekly\\\" or \\\"monthly\\\"\");","lastModifiedDate":"2021-09-13"},{"lineNumber":155,"author":{"gitId":"chengseong"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":156,"author":{"gitId":"chengseong"},"content":"        return createAddCommandWithDateTime(type, task, localDate, localTime, frequency);","lastModifiedDate":"2021-09-13"},{"lineNumber":157,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":158,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":159,"author":{"gitId":"chengseong"},"content":"    private static AddCommand createAddCommandWithDateTime(String type, String task, LocalDate localDate,","lastModifiedDate":"2021-09-12"},{"lineNumber":160,"author":{"gitId":"chengseong"},"content":"                                                           LocalTime localTime, String frequency) {","lastModifiedDate":"2021-09-13"},{"lineNumber":161,"author":{"gitId":"chengseong"},"content":"        if (type.equals(\"Event\")) {","lastModifiedDate":"2021-09-12"},{"lineNumber":162,"author":{"gitId":"chengseong"},"content":"            return new AddCommand(new Event(task, localDate, localTime, frequency));","lastModifiedDate":"2021-09-13"},{"lineNumber":163,"author":{"gitId":"chengseong"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":164,"author":{"gitId":"chengseong"},"content":"        return new AddCommand(new Deadline(task, localDate, localTime, frequency));","lastModifiedDate":"2021-09-13"},{"lineNumber":165,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":166,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":167,"author":{"gitId":"chengseong"},"content":"    private static String[] getTaskDate(String fullCommand, String type, String splitter) {","lastModifiedDate":"2021-09-12"},{"lineNumber":168,"author":{"gitId":"chengseong"},"content":"        return fullCommand.replaceFirst(type, \"\").split(splitter);","lastModifiedDate":"2021-09-12"},{"lineNumber":169,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":170,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":171,"author":{"gitId":"chengseong"},"content":"    private static LocalDate getLocalDate (String fullDateTime) throws IllegalDateException {","lastModifiedDate":"2021-09-13"},{"lineNumber":172,"author":{"gitId":"chengseong"},"content":"        String formattedDate \u003d formatDate(fullDateTime);","lastModifiedDate":"2021-09-12"},{"lineNumber":173,"author":{"gitId":"chengseong"},"content":"        try {","lastModifiedDate":"2021-09-13"},{"lineNumber":174,"author":{"gitId":"chengseong"},"content":"            return LocalDate.parse(formattedDate);","lastModifiedDate":"2021-09-12"},{"lineNumber":175,"author":{"gitId":"chengseong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-13"},{"lineNumber":176,"author":{"gitId":"chengseong"},"content":"            throw new IllegalDateException(\"Date given must be in format \\\"dd/mm/yyyy\\\"!\");","lastModifiedDate":"2021-09-13"},{"lineNumber":177,"author":{"gitId":"chengseong"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":178,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":179,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":180,"author":{"gitId":"chengseong"},"content":"    private static LocalTime getLocalTime (String fullDateTime) throws IllegalTimeException {","lastModifiedDate":"2021-09-13"},{"lineNumber":181,"author":{"gitId":"chengseong"},"content":"        String time \u003d getTime(fullDateTime);","lastModifiedDate":"2021-09-12"},{"lineNumber":182,"author":{"gitId":"chengseong"},"content":"        try {","lastModifiedDate":"2021-09-13"},{"lineNumber":183,"author":{"gitId":"chengseong"},"content":"            return LocalTime.parse(time, DateTimeFormatter.ofPattern(TIMEFORMAT));","lastModifiedDate":"2021-09-12"},{"lineNumber":184,"author":{"gitId":"chengseong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-13"},{"lineNumber":185,"author":{"gitId":"chengseong"},"content":"            throw new IllegalTimeException(\"Time given must be in format \\\"HHmm\\\"!\");","lastModifiedDate":"2021-09-13"},{"lineNumber":186,"author":{"gitId":"chengseong"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":187,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":188,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":189,"author":{"gitId":"chengseong"},"content":"    private static String getTime(String fullDateTime) {","lastModifiedDate":"2021-09-12"},{"lineNumber":190,"author":{"gitId":"chengseong"},"content":"        return fullDateTime.split(\" \")[1];","lastModifiedDate":"2021-09-12"},{"lineNumber":191,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":192,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":193,"author":{"gitId":"chengseong"},"content":"    private static String formatDate(String fullDateTime) throws IllegalDateException {","lastModifiedDate":"2021-09-13"},{"lineNumber":194,"author":{"gitId":"chengseong"},"content":"        String fullDate \u003d fullDateTime.split(\" \")[0];","lastModifiedDate":"2021-09-12"},{"lineNumber":195,"author":{"gitId":"chengseong"},"content":"        String[] splitDate \u003d fullDate.split(\"/\");","lastModifiedDate":"2021-09-12"},{"lineNumber":196,"author":{"gitId":"chengseong"},"content":"        if (splitDate.length !\u003d 3) {","lastModifiedDate":"2021-09-13"},{"lineNumber":197,"author":{"gitId":"chengseong"},"content":"            throw new IllegalDateException(\"Date given must be in format \\\"dd/mm/yyyy\\\"!\");","lastModifiedDate":"2021-09-13"},{"lineNumber":198,"author":{"gitId":"chengseong"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":199,"author":{"gitId":"chengseong"},"content":"        return rewriteDate(splitDate);","lastModifiedDate":"2021-09-12"},{"lineNumber":200,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":201,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":202,"author":{"gitId":"chengseong"},"content":"    private static String rewriteDate(String[] splitDate) {","lastModifiedDate":"2021-09-12"},{"lineNumber":203,"author":{"gitId":"chengseong"},"content":"        if (splitDate[1].length() \u003d\u003d 1) {","lastModifiedDate":"2021-09-12"},{"lineNumber":204,"author":{"gitId":"chengseong"},"content":"            return splitDate[2] + \"-0\" + splitDate[1] + \"-\" + splitDate[0];","lastModifiedDate":"2021-09-12"},{"lineNumber":205,"author":{"gitId":"chengseong"},"content":"        } else if (splitDate[0].length() \u003d\u003d 1) {","lastModifiedDate":"2021-09-12"},{"lineNumber":206,"author":{"gitId":"chengseong"},"content":"            return splitDate[2] + \"-\" + splitDate[1] + \"-0\" + splitDate[0];","lastModifiedDate":"2021-09-12"},{"lineNumber":207,"author":{"gitId":"chengseong"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":208,"author":{"gitId":"chengseong"},"content":"        return splitDate[2] + \"-\" + splitDate[1] + \"-\" + splitDate[0];","lastModifiedDate":"2021-09-12"},{"lineNumber":209,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":210,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":211,"author":{"gitId":"chengseong"},"content":"    private static String getFrequency(String fullDateTime) {","lastModifiedDate":"2021-09-13"},{"lineNumber":212,"author":{"gitId":"chengseong"},"content":"        if (fullDateTime.split(\" \").length \u003d\u003d 2) {","lastModifiedDate":"2021-09-13"},{"lineNumber":213,"author":{"gitId":"chengseong"},"content":"            return \"once\";","lastModifiedDate":"2021-09-13"},{"lineNumber":214,"author":{"gitId":"chengseong"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":215,"author":{"gitId":"chengseong"},"content":"        return fullDateTime.split(\" \")[2];","lastModifiedDate":"2021-09-13"},{"lineNumber":216,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":217,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":218,"author":{"gitId":"chengseong"},"content":"    private static Integer getCommandIndex(String fullCommand) throws MissingIndexException {","lastModifiedDate":"2021-09-13"},{"lineNumber":219,"author":{"gitId":"chengseong"},"content":"        if (fullCommand.split(\" \").length \u003c 2) {","lastModifiedDate":"2021-09-13"},{"lineNumber":220,"author":{"gitId":"chengseong"},"content":"            throw new MissingIndexException(\"Command requires an Index!\");","lastModifiedDate":"2021-09-13"},{"lineNumber":221,"author":{"gitId":"chengseong"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":222,"author":{"gitId":"chengseong"},"content":"        return Integer.parseInt(fullCommand.split(\" \")[1]) - 1;","lastModifiedDate":"2021-09-12"},{"lineNumber":223,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":224,"author":{"gitId":"chengseong"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"chengseong":224}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chengseong"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"chengseong"},"content":"import java.io.File;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"chengseong"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"chengseong"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"chengseong"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"chengseong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"chengseong"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"chengseong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"chengseong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"chengseong"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"chengseong"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"chengseong"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"chengseong"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"chengseong"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"chengseong"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"chengseong"},"content":" * Represents a storage which stores the Task List.","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"chengseong"},"content":" * The storage is read at when the bot starts up and written into when the bot is terminated.","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"chengseong"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"chengseong"},"content":"public class Storage {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"chengseong"},"content":"    private String filePath;","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"chengseong"},"content":"    private final String WRITEPATH \u003d \"./data\";","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"chengseong"},"content":"    private final String DATEFORMAT \u003d \"MMM dd yyyy\";","lastModifiedDate":"2021-09-12"},{"lineNumber":27,"author":{"gitId":"chengseong"},"content":"    private final String TIMEFORMAT \u003d \"hh:mm a\";","lastModifiedDate":"2021-09-12"},{"lineNumber":28,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"chengseong"},"content":"     * Creates a Storage Object containing the file path of where the user wishes to store the TaskList.","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"chengseong"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"chengseong"},"content":"     * @param filePath file path of Storage.","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"chengseong"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"chengseong"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"chengseong"},"content":"     * Reads and loads the storage into an ArrayList of Tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"chengseong"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"chengseong"},"content":"     * @return ArrayList of tasks stored in the storage.","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"chengseong"},"content":"     * @throws FileNotFoundException if file path does not exist.","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"chengseong"},"content":"    public ArrayList\u003cTask\u003e load() throws FileNotFoundException {","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"chengseong"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"chengseong"},"content":"        return parseFile(f);","lastModifiedDate":"2021-09-12"},{"lineNumber":47,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":48,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":49,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":50,"author":{"gitId":"chengseong"},"content":"     * Writes the TaskList into a text file that is then stored in the file path.","lastModifiedDate":"2021-09-12"},{"lineNumber":51,"author":{"gitId":"chengseong"},"content":"     *","lastModifiedDate":"2021-09-12"},{"lineNumber":52,"author":{"gitId":"chengseong"},"content":"     * @param tasks TaskList of tasks to be written into the text file","lastModifiedDate":"2021-09-12"},{"lineNumber":53,"author":{"gitId":"chengseong"},"content":"     * @throws IOException On Output Error.","lastModifiedDate":"2021-09-12"},{"lineNumber":54,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":55,"author":{"gitId":"chengseong"},"content":"    public void write(TaskList tasks) throws IOException {","lastModifiedDate":"2021-09-12"},{"lineNumber":56,"author":{"gitId":"chengseong"},"content":"        File toWrite \u003d new File(WRITEPATH);","lastModifiedDate":"2021-09-12"},{"lineNumber":57,"author":{"gitId":"chengseong"},"content":"        checkFilePath(toWrite);","lastModifiedDate":"2021-09-12"},{"lineNumber":58,"author":{"gitId":"chengseong"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2021-09-12"},{"lineNumber":59,"author":{"gitId":"chengseong"},"content":"        writeToFile(fw, tasks);","lastModifiedDate":"2021-09-12"},{"lineNumber":60,"author":{"gitId":"chengseong"},"content":"        fw.close();","lastModifiedDate":"2021-09-12"},{"lineNumber":61,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":62,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":63,"author":{"gitId":"chengseong"},"content":"    private ArrayList\u003cTask\u003e parseFile(File f) throws FileNotFoundException {","lastModifiedDate":"2021-09-12"},{"lineNumber":64,"author":{"gitId":"chengseong"},"content":"        if (!f.exists()) {","lastModifiedDate":"2021-09-12"},{"lineNumber":65,"author":{"gitId":"chengseong"},"content":"            throw new FileNotFoundException();","lastModifiedDate":"2021-09-12"},{"lineNumber":66,"author":{"gitId":"chengseong"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":67,"author":{"gitId":"chengseong"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"chengseong"},"content":"        return retrieveList(s);","lastModifiedDate":"2021-09-12"},{"lineNumber":69,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":70,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":71,"author":{"gitId":"chengseong"},"content":"    private ArrayList\u003cTask\u003e retrieveList(Scanner s) {","lastModifiedDate":"2021-09-12"},{"lineNumber":72,"author":{"gitId":"chengseong"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-09-12"},{"lineNumber":73,"author":{"gitId":"chengseong"},"content":"        addToList(s, list);","lastModifiedDate":"2021-09-12"},{"lineNumber":74,"author":{"gitId":"chengseong"},"content":"        s.close();","lastModifiedDate":"2021-09-12"},{"lineNumber":75,"author":{"gitId":"chengseong"},"content":"        return list;","lastModifiedDate":"2021-09-12"},{"lineNumber":76,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":77,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":78,"author":{"gitId":"chengseong"},"content":"    private void addToList(Scanner s, ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2021-09-12"},{"lineNumber":79,"author":{"gitId":"chengseong"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"chengseong"},"content":"            String toRead \u003d s.nextLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"chengseong"},"content":"            list.add(parseLine(toRead));","lastModifiedDate":"2021-09-12"},{"lineNumber":82,"author":{"gitId":"chengseong"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":83,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":84,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":85,"author":{"gitId":"chengseong"},"content":"    private Task parseLine(String toRead) {","lastModifiedDate":"2021-09-12"},{"lineNumber":86,"author":{"gitId":"chengseong"},"content":"        String[] strSplit \u003d toRead.split(\" \\\\| \");","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"chengseong"},"content":"        return createTask(strSplit);","lastModifiedDate":"2021-09-12"},{"lineNumber":88,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":89,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":90,"author":{"gitId":"chengseong"},"content":"    private Task createTask(String[] strSplit) {","lastModifiedDate":"2021-09-12"},{"lineNumber":91,"author":{"gitId":"chengseong"},"content":"        if (strSplit[0].equals(\"T\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"chengseong"},"content":"            return createToDo(strSplit);","lastModifiedDate":"2021-09-12"},{"lineNumber":93,"author":{"gitId":"chengseong"},"content":"        } else if (strSplit[0].equals(\"D\")) {","lastModifiedDate":"2021-09-12"},{"lineNumber":94,"author":{"gitId":"chengseong"},"content":"            return createDeadline(strSplit);","lastModifiedDate":"2021-09-12"},{"lineNumber":95,"author":{"gitId":"chengseong"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":96,"author":{"gitId":"chengseong"},"content":"        return createEvent(strSplit);","lastModifiedDate":"2021-09-12"},{"lineNumber":97,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":98,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":99,"author":{"gitId":"chengseong"},"content":"    private Task createToDo(String[] strSplit) {","lastModifiedDate":"2021-09-12"},{"lineNumber":100,"author":{"gitId":"chengseong"},"content":"        ToDo toDo \u003d new ToDo(strSplit[2]);","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"chengseong"},"content":"        return checkCompletion(toDo, strSplit);","lastModifiedDate":"2021-09-12"},{"lineNumber":102,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":104,"author":{"gitId":"chengseong"},"content":"    private Task createDeadline(String[] strSplit) {","lastModifiedDate":"2021-09-12"},{"lineNumber":105,"author":{"gitId":"chengseong"},"content":"        Task deadline \u003d parseCommand(\"Deadline\", strSplit);","lastModifiedDate":"2021-09-12"},{"lineNumber":106,"author":{"gitId":"chengseong"},"content":"        return checkCompletion(deadline, strSplit);","lastModifiedDate":"2021-09-12"},{"lineNumber":107,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":108,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":109,"author":{"gitId":"chengseong"},"content":"    private Task createEvent(String[] strSplit) {","lastModifiedDate":"2021-09-12"},{"lineNumber":110,"author":{"gitId":"chengseong"},"content":"        Task event \u003d parseCommand(\"Event\", strSplit);","lastModifiedDate":"2021-09-12"},{"lineNumber":111,"author":{"gitId":"chengseong"},"content":"        return checkCompletion(event, strSplit);","lastModifiedDate":"2021-09-12"},{"lineNumber":112,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":114,"author":{"gitId":"chengseong"},"content":"    private Task parseCommand(String type, String[] strSplit) {","lastModifiedDate":"2021-09-12"},{"lineNumber":115,"author":{"gitId":"chengseong"},"content":"        String[] dateTime \u003d strSplit[3].split(\", \");","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"chengseong"},"content":"        String frequency \u003d strSplit[4];","lastModifiedDate":"2021-09-13"},{"lineNumber":117,"author":{"gitId":"chengseong"},"content":"        LocalDate date \u003d LocalDate.parse(dateTime[0], DateTimeFormatter.ofPattern(DATEFORMAT));","lastModifiedDate":"2021-09-12"},{"lineNumber":118,"author":{"gitId":"chengseong"},"content":"        LocalDate updatedDate \u003d checkDate(date, frequency);","lastModifiedDate":"2021-09-13"},{"lineNumber":119,"author":{"gitId":"chengseong"},"content":"        boolean isUpdated \u003d !date.isEqual(updatedDate);","lastModifiedDate":"2021-09-13"},{"lineNumber":120,"author":{"gitId":"chengseong"},"content":"        LocalTime time \u003d LocalTime.parse(dateTime[1], DateTimeFormatter.ofPattern(TIMEFORMAT));","lastModifiedDate":"2021-09-12"},{"lineNumber":121,"author":{"gitId":"chengseong"},"content":"        String task \u003d strSplit[2];","lastModifiedDate":"2021-09-12"},{"lineNumber":122,"author":{"gitId":"chengseong"},"content":"        return createTaskWithDateTime(type, task, updatedDate, time, frequency, isUpdated);","lastModifiedDate":"2021-09-13"},{"lineNumber":123,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":124,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":125,"author":{"gitId":"chengseong"},"content":"    private Task createTaskWithDateTime(String type, String task, LocalDate date, LocalTime time, String frequency,","lastModifiedDate":"2021-09-13"},{"lineNumber":126,"author":{"gitId":"chengseong"},"content":"                                        boolean isUpdated) {","lastModifiedDate":"2021-09-13"},{"lineNumber":127,"author":{"gitId":"chengseong"},"content":"        if (type.equals(\"Deadline\")) {","lastModifiedDate":"2021-09-12"},{"lineNumber":128,"author":{"gitId":"chengseong"},"content":"            return new Deadline(task, date, time, frequency, isUpdated);","lastModifiedDate":"2021-09-13"},{"lineNumber":129,"author":{"gitId":"chengseong"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":130,"author":{"gitId":"chengseong"},"content":"        return new Event(task, date, time, frequency, isUpdated);","lastModifiedDate":"2021-09-13"},{"lineNumber":131,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":132,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":133,"author":{"gitId":"chengseong"},"content":"    private Task checkCompletion(Task task, String[] strSplit) {","lastModifiedDate":"2021-09-12"},{"lineNumber":134,"author":{"gitId":"chengseong"},"content":"        if (strSplit[1].equals(\"1\")) {","lastModifiedDate":"2021-09-12"},{"lineNumber":135,"author":{"gitId":"chengseong"},"content":"            task.complete();","lastModifiedDate":"2021-09-12"},{"lineNumber":136,"author":{"gitId":"chengseong"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":137,"author":{"gitId":"chengseong"},"content":"        return task;","lastModifiedDate":"2021-09-12"},{"lineNumber":138,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":139,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":140,"author":{"gitId":"chengseong"},"content":"    private LocalDate checkDate(LocalDate date, String frequency) {","lastModifiedDate":"2021-09-13"},{"lineNumber":141,"author":{"gitId":"chengseong"},"content":"        if (date.compareTo(LocalDate.now()) \u003e 0) {","lastModifiedDate":"2021-09-13"},{"lineNumber":142,"author":{"gitId":"chengseong"},"content":"            return date;","lastModifiedDate":"2021-09-13"},{"lineNumber":143,"author":{"gitId":"chengseong"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":144,"author":{"gitId":"chengseong"},"content":"        return updateDate(date, frequency);","lastModifiedDate":"2021-09-13"},{"lineNumber":145,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":146,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":147,"author":{"gitId":"chengseong"},"content":"    private LocalDate updateDate(LocalDate date, String frequency) {","lastModifiedDate":"2021-09-13"},{"lineNumber":148,"author":{"gitId":"chengseong"},"content":"        if (frequency.equals(\"weekly\")) {","lastModifiedDate":"2021-09-13"},{"lineNumber":149,"author":{"gitId":"chengseong"},"content":"            return date.plusWeeks(1);","lastModifiedDate":"2021-09-13"},{"lineNumber":150,"author":{"gitId":"chengseong"},"content":"        } else if (frequency.equals(\"monthly\")) {","lastModifiedDate":"2021-09-13"},{"lineNumber":151,"author":{"gitId":"chengseong"},"content":"            return date.plusMonths(1);","lastModifiedDate":"2021-09-13"},{"lineNumber":152,"author":{"gitId":"chengseong"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":153,"author":{"gitId":"chengseong"},"content":"        return date;","lastModifiedDate":"2021-09-13"},{"lineNumber":154,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":155,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":156,"author":{"gitId":"chengseong"},"content":"    private void checkFilePath(File f) {","lastModifiedDate":"2021-09-12"},{"lineNumber":157,"author":{"gitId":"chengseong"},"content":"        if (!f.exists()) {","lastModifiedDate":"2021-09-12"},{"lineNumber":158,"author":{"gitId":"chengseong"},"content":"            f.mkdir();","lastModifiedDate":"2021-09-12"},{"lineNumber":159,"author":{"gitId":"chengseong"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":160,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":161,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":162,"author":{"gitId":"chengseong"},"content":"    private void writeToFile(FileWriter fw, TaskList tasks) throws IOException {","lastModifiedDate":"2021-09-12"},{"lineNumber":163,"author":{"gitId":"chengseong"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2021-09-07"},{"lineNumber":164,"author":{"gitId":"chengseong"},"content":"            Task t \u003d tasks.get(i);","lastModifiedDate":"2021-08-25"},{"lineNumber":165,"author":{"gitId":"chengseong"},"content":"            writeTasks(fw, t);","lastModifiedDate":"2021-09-12"},{"lineNumber":166,"author":{"gitId":"chengseong"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":167,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":168,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":169,"author":{"gitId":"chengseong"},"content":"    private void writeTasks(FileWriter fw, Task t) throws IOException {","lastModifiedDate":"2021-09-12"},{"lineNumber":170,"author":{"gitId":"chengseong"},"content":"        fw.write(t.getToWrite());","lastModifiedDate":"2021-08-25"},{"lineNumber":171,"author":{"gitId":"chengseong"},"content":"        fw.write(System.getProperty(\"line.separator\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":172,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":173,"author":{"gitId":"chengseong"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"chengseong":173}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chengseong"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"chengseong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"chengseong"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"chengseong"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"chengseong"},"content":" * Represents a list containing all the tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"chengseong"},"content":" * A TaskList contains an ArrayList of the tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"chengseong"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"chengseong"},"content":"public class TaskList {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"chengseong"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"chengseong"},"content":"     * Creates a TaskList Object containing an empty ArrayList.","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"chengseong"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"chengseong"},"content":"        this(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"chengseong"},"content":"     * Creates a TaskList Object containing the ArrayList of tasks given.","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"chengseong"},"content":"     * @param tasks ArrayList of tasks to be stored in TaskList.","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"chengseong"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"chengseong"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"chengseong"},"content":"     * Deletes a task from the TaskList stored in the index given.","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"chengseong"},"content":"     * @param index index of the task to be deleted.","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"chengseong"},"content":"    public void delete(int index) {","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"chengseong"},"content":"        assert index \u003c getSize() : \"index should be within range\";","lastModifiedDate":"2021-09-12"},{"lineNumber":36,"author":{"gitId":"chengseong"},"content":"        tasks.remove(index);","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"chengseong"},"content":"     * Adds the Task given to the TaskList.","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"chengseong"},"content":"     * @param t Task to be added to the TaskList.","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"chengseong"},"content":"    public void add(Task t) {","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"chengseong"},"content":"        tasks.add(t);","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"chengseong"},"content":"     * Returns the Task from the TaskList stored in the index given.","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"chengseong"},"content":"     * @param index index of the task to be retrieved.","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"chengseong"},"content":"     * @return Task stored at the index.","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"chengseong"},"content":"    public Task get(int index) {","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"chengseong"},"content":"        assert index \u003c getSize() : \"index should be within range\";","lastModifiedDate":"2021-09-12"},{"lineNumber":54,"author":{"gitId":"chengseong"},"content":"        return tasks.get(index);","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"chengseong"},"content":"     * Returns the number of Tasks stored in the TaskList.","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"chengseong"},"content":"     * @return Number of Tasks stored in the TaskList.","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"chengseong"},"content":"    public int getSize() {","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"chengseong"},"content":"        return tasks.size();","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"chengseong"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"chengseong":64}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chengseong"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"chengseong"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"chengseong"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"chengseong"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"chengseong"},"content":" * Represents the UI of the chatbot.","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"chengseong"},"content":" * Contains a Scanner that reads the input given by the user.","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"chengseong"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"chengseong"},"content":"public class Ui {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"chengseong"},"content":"    private Scanner sc;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"chengseong"},"content":"    private final String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"chengseong"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"chengseong"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"chengseong"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"chengseong"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"chengseong"},"content":"     * Creates a UI Object containing a Scanner that reads the inputs.","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"chengseong"},"content":"    public Ui() {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"chengseong"},"content":"        sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"chengseong"},"content":"     * Prints the error message in the case the file path that the Storage is supposed to read from does not exist.","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"chengseong"},"content":"    public void showLoadingError() {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"chengseong"},"content":"        System.out.println(\"File Not Found\");","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"chengseong"},"content":"     * Returns the message when a Task is added to the TaskList.","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"chengseong"},"content":"     * @param task Task to be added to the TaskList","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"chengseong"},"content":"     * @param tasks TaskList the Task is to be added to.","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"chengseong"},"content":"     * @return message to be printed;","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"chengseong"},"content":"    public String printAdd(Task task, TaskList tasks) {","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"chengseong"},"content":"        return \"Got it. I\u0027ve added this task: \\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"chengseong"},"content":"                + String.format(\"  %s\", task.toString())","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"chengseong"},"content":"                + \"\\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"chengseong"},"content":"                + String.format(\"Now you have %d tasks in the list\", tasks.getSize());","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"chengseong"},"content":"     * Returns the message when a Task is completed in the TaskList.","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"chengseong"},"content":"     * @param tasks TaskList containing the Task that was completed.","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"chengseong"},"content":"     * @param toComplete Index of the completed Task in the TaskList","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"chengseong"},"content":"     * @return Message to be printed","lastModifiedDate":"2021-09-07"},{"lineNumber":54,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"chengseong"},"content":"    public String printDone(TaskList tasks, int toComplete) {","lastModifiedDate":"2021-09-07"},{"lineNumber":56,"author":{"gitId":"chengseong"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":57,"author":{"gitId":"chengseong"},"content":"                + String.format(\"  %s\", tasks.get(toComplete));","lastModifiedDate":"2021-09-07"},{"lineNumber":58,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"chengseong"},"content":"     * Returns the message when a Task is deleted in the TaskList.","lastModifiedDate":"2021-09-07"},{"lineNumber":62,"author":{"gitId":"chengseong"},"content":"     * @param tasks TaskList containing the Task that was deleted.","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"chengseong"},"content":"     * @param toDelete Index of the deleted Task in the TaskList","lastModifiedDate":"2021-08-27"},{"lineNumber":64,"author":{"gitId":"chengseong"},"content":"     * @return Message to be printed","lastModifiedDate":"2021-09-07"},{"lineNumber":65,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":66,"author":{"gitId":"chengseong"},"content":"    public String printDelete(TaskList tasks, int toDelete) {","lastModifiedDate":"2021-09-07"},{"lineNumber":67,"author":{"gitId":"chengseong"},"content":"        return \"Noted. I\u0027ve removed this task: \\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":68,"author":{"gitId":"chengseong"},"content":"                + String.format(\"  %s\", tasks.get(toDelete))","lastModifiedDate":"2021-09-07"},{"lineNumber":69,"author":{"gitId":"chengseong"},"content":"                + \"\\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":70,"author":{"gitId":"chengseong"},"content":"                + String.format(\"Now you have %d tasks in the list\", tasks.getSize() - 1);","lastModifiedDate":"2021-09-07"},{"lineNumber":71,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":74,"author":{"gitId":"chengseong"},"content":"     * Prints the message when the Bot is Terminated.","lastModifiedDate":"2021-08-27"},{"lineNumber":75,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":76,"author":{"gitId":"chengseong"},"content":"    public String printExit() {","lastModifiedDate":"2021-09-07"},{"lineNumber":77,"author":{"gitId":"chengseong"},"content":"        sc.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"chengseong"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-09-07"},{"lineNumber":79,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":82,"author":{"gitId":"chengseong"},"content":"     * Prints out the list of Tasks stored in the TaskList.","lastModifiedDate":"2021-08-27"},{"lineNumber":83,"author":{"gitId":"chengseong"},"content":"     * @param tasks TaskList to be printed.","lastModifiedDate":"2021-08-27"},{"lineNumber":84,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":85,"author":{"gitId":"chengseong"},"content":"    public String printList(TaskList tasks) {","lastModifiedDate":"2021-09-07"},{"lineNumber":86,"author":{"gitId":"chengseong"},"content":"        String output \u003d \"Here are the tasks in your list: \";","lastModifiedDate":"2021-09-07"},{"lineNumber":87,"author":{"gitId":"chengseong"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2021-09-07"},{"lineNumber":88,"author":{"gitId":"chengseong"},"content":"            output +\u003d \"\\n\" + (i + 1) + \". \" + tasks.get(i);","lastModifiedDate":"2021-09-07"},{"lineNumber":89,"author":{"gitId":"chengseong"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"chengseong"},"content":"        return output;","lastModifiedDate":"2021-09-07"},{"lineNumber":91,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"chengseong"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"chengseong":93}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chengseong"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"chengseong"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"chengseong"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"chengseong"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"chengseong"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"chengseong"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"chengseong"},"content":" * Represents a Command that adds a Task to the TaskList.","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"chengseong"},"content":" * An AddCommand consists of a Task.","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"chengseong"},"content":" *","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"chengseong"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"chengseong"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"chengseong"},"content":"    private Task task;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"chengseong"},"content":"     * Creates an AddCommand Object.","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"chengseong"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"chengseong"},"content":"     * @param task Task to be added to the TaskList.","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"chengseong"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"chengseong"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"chengseong"},"content":"     * Adds task to TaskList.","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"chengseong"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"chengseong"},"content":"     * @param tasks TaskList to add task to.","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"chengseong"},"content":"     * @param ui UI to print out the output after task has been added.","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"chengseong"},"content":"     * @param storage unused.","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"chengseong"},"content":"    @Override","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"chengseong"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"chengseong"},"content":"        tasks.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"chengseong"},"content":"        return ui.printAdd(task, tasks);","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"chengseong"},"content":"     * Returns Task attached to this AddCommand","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"chengseong"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"chengseong"},"content":"     * @return Task attached to this AddCommand","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"chengseong"},"content":"    public Task getTask() {","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"chengseong"},"content":"        return task;","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"chengseong"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"chengseong"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"chengseong"},"content":"        if (!(o instanceof AddCommand)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"chengseong"},"content":"            return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"chengseong"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"chengseong"},"content":"            AddCommand oAddCommand \u003d (AddCommand) o;","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"chengseong"},"content":"            return task.toString().equals((oAddCommand.getTask().toString()));","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"chengseong"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"chengseong"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"chengseong":57}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chengseong"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"chengseong"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"chengseong"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"chengseong"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"chengseong"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"chengseong"},"content":"import duke.exception.IndexOutOfBoundsException;","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"chengseong"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"chengseong"},"content":" * Command is the abstract base class for all Commands.","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"chengseong"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"chengseong"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"chengseong"},"content":"    /** Executes the Command using the arguments","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"chengseong"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"chengseong"},"content":"     * @param tasks Tasklist to execute the command on.","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"chengseong"},"content":"     * @param ui UI to reflect the changes.","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"chengseong"},"content":"     * @param storage Storage to store the TaskList after a command has been executed.","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"chengseong"},"content":"     * @throws IOException On Input error.","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"chengseong"},"content":"     * @see IOException","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"chengseong"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws IOException,","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"chengseong"},"content":"            IndexOutOfBoundsException;","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"chengseong"},"content":"     * Indicates whether a Command is an ExitCommand or not.","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"chengseong"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"chengseong"},"content":"     * @return true if Command is an ExitCommand, false if Command is not an ExitCommand","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"chengseong"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"chengseong"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"chengseong"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"chengseong":34}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chengseong"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"chengseong"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"chengseong"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"chengseong"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"chengseong"},"content":"import duke.exception.IndexOutOfBoundsException;","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"chengseong"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"chengseong"},"content":" * Represents a Command that deletes a task from the TaskList.","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"chengseong"},"content":" * A DeleteCommand contains an index representing the index of the task in the TaskList to be deleted.","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"chengseong"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"chengseong"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"chengseong"},"content":"    private int toDelete;","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"chengseong"},"content":"     * Creates a DeleteCommand Object.","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"chengseong"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"chengseong"},"content":"     * @param toDelete Index of task to be deleted in the TaskList","lastModifiedDate":"2021-09-13"},{"lineNumber":21,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"chengseong"},"content":"    public DeleteCommand(int toDelete) {","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"chengseong"},"content":"        this.toDelete \u003d toDelete;","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"chengseong"},"content":"     * Deletes the task from TaskList.","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"chengseong"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"chengseong"},"content":"     * @param tasks TaskList to delete task from.","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"chengseong"},"content":"     * @param ui UI that reflects the changes made to the TaskList.","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"chengseong"},"content":"     * @param storage unused.","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"chengseong"},"content":"    @Override","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"chengseong"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws IndexOutOfBoundsException {","lastModifiedDate":"2021-09-13"},{"lineNumber":35,"author":{"gitId":"chengseong"},"content":"        if (toDelete \u003e\u003d tasks.getSize()) {","lastModifiedDate":"2021-09-13"},{"lineNumber":36,"author":{"gitId":"chengseong"},"content":"            throw new IndexOutOfBoundsException(\"Index does not exist!\");","lastModifiedDate":"2021-09-13"},{"lineNumber":37,"author":{"gitId":"chengseong"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":38,"author":{"gitId":"chengseong"},"content":"        String output \u003d ui.printDelete(tasks, toDelete);","lastModifiedDate":"2021-09-13"},{"lineNumber":39,"author":{"gitId":"chengseong"},"content":"        tasks.delete(toDelete);","lastModifiedDate":"2021-09-13"},{"lineNumber":40,"author":{"gitId":"chengseong"},"content":"        return output;","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"chengseong"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"chengseong":42}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chengseong"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"chengseong"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"chengseong"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"chengseong"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"chengseong"},"content":"import duke.exception.IndexOutOfBoundsException;","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"chengseong"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"chengseong"},"content":" * Represents a Command that marks a task as completed in a TaskList","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"chengseong"},"content":" * A DoneCommand contains an index representing the index of the task in the TaskList that was completed.","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"chengseong"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"chengseong"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"chengseong"},"content":"    private int toComplete;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"chengseong"},"content":"     * Creates a DoneCommand Object.","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"chengseong"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"chengseong"},"content":"     * @param toComplete Index of a task to be completed in the TaskList.","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"chengseong"},"content":"    public DoneCommand(int toComplete) {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"chengseong"},"content":"        this.toComplete \u003d toComplete;","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"chengseong"},"content":"     * Marks the task as completed.","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"chengseong"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"chengseong"},"content":"     * @param tasks TaskList that contains the task to be marked as done.","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"chengseong"},"content":"     * @param ui UI that reflects the changes made to the TaskList.","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"chengseong"},"content":"     * @param storage unused.","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"chengseong"},"content":"    @Override","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"chengseong"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws IndexOutOfBoundsException {","lastModifiedDate":"2021-09-13"},{"lineNumber":34,"author":{"gitId":"chengseong"},"content":"        if (toComplete \u003e\u003d tasks.getSize()) {","lastModifiedDate":"2021-09-13"},{"lineNumber":35,"author":{"gitId":"chengseong"},"content":"            throw new IndexOutOfBoundsException(\"Index does not exist!\");","lastModifiedDate":"2021-09-13"},{"lineNumber":36,"author":{"gitId":"chengseong"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":37,"author":{"gitId":"chengseong"},"content":"        String output \u003d ui.printDone(tasks, toComplete);","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"chengseong"},"content":"        tasks.get(toComplete).complete();","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"chengseong"},"content":"        return output;","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"chengseong"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"chengseong":42}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chengseong"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"chengseong"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"chengseong"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"chengseong"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"chengseong"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"chengseong"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"chengseong"},"content":" *  Represents a Command that Exits the Chatbot Program","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"chengseong"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"chengseong"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"chengseong"},"content":"     * Executes the Exit Command.","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"chengseong"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"chengseong"},"content":"     * @param tasks TaskList to write into Storage.","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"chengseong"},"content":"     * @param ui UI to reflect the exit.","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"chengseong"},"content":"     * @param storage Storage to write the TaskList into.","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"chengseong"},"content":"     * @throws IOException On output Error.","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"chengseong"},"content":"     * @see IOException","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"chengseong"},"content":"    @Override","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"chengseong"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"chengseong"},"content":"        storage.write(tasks);","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"chengseong"},"content":"        return ui.printExit();","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"chengseong"},"content":"     * Reflects that it is an ExitCommand","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"chengseong"},"content":"     * @return true","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"chengseong"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"chengseong"},"content":"        return true;","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"chengseong"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"chengseong":39}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chengseong"},"content":"package duke.command;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"chengseong"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"chengseong"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"chengseong"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"chengseong"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"chengseong"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"chengseong"},"content":" * Represents a Command that finds a Task in the TaskList.","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"chengseong"},"content":" * An FindCommand consists of a keyword.","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"chengseong"},"content":" *","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"chengseong"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"chengseong"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"chengseong"},"content":"    private final String keyword;","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"chengseong"},"content":"     * Creates a FindCommand Object.","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"chengseong"},"content":"     * @param keyword keyword to find tasks.","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"chengseong"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"chengseong"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"chengseong"},"content":"    @Override","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"chengseong"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"chengseong"},"content":"        TaskList filteredTasks \u003d new TaskList();","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"chengseong"},"content":"        filterTasks(tasks, filteredTasks);","lastModifiedDate":"2021-09-12"},{"lineNumber":30,"author":{"gitId":"chengseong"},"content":"        return ui.printList(filteredTasks);","lastModifiedDate":"2021-09-12"},{"lineNumber":31,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":32,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":33,"author":{"gitId":"chengseong"},"content":"    private void filterTasks(TaskList tasks, TaskList filteredTasks) {","lastModifiedDate":"2021-09-12"},{"lineNumber":34,"author":{"gitId":"chengseong"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"chengseong"},"content":"            Task toFilter \u003d tasks.get(i);","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"chengseong"},"content":"            addTasks(filteredTasks, toFilter);","lastModifiedDate":"2021-09-12"},{"lineNumber":37,"author":{"gitId":"chengseong"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":38,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":39,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":40,"author":{"gitId":"chengseong"},"content":"    private void addTasks(TaskList filteredTasks, Task toFilter) {","lastModifiedDate":"2021-09-12"},{"lineNumber":41,"author":{"gitId":"chengseong"},"content":"        if (toFilter.toString().contains(keyword)) {","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"chengseong"},"content":"            filteredTasks.add(toFilter);","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"chengseong"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"chengseong"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"chengseong":45}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chengseong"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"chengseong"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"chengseong"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"chengseong"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"chengseong"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"chengseong"},"content":" * Represents a Command to print the list of tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"chengseong"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"chengseong"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"chengseong"},"content":"     * Prints the lists of tasks","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"chengseong"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"chengseong"},"content":"     * @param tasks TaskList to print","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"chengseong"},"content":"     * @param ui UI to print out the TaskList","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"chengseong"},"content":"     * @param storage unused.","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"chengseong"},"content":"    @Override","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"chengseong"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"chengseong"},"content":"        return ui.printList(tasks);","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"chengseong"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"chengseong":24}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chengseong"},"content":"package duke.exception;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":3,"author":{"gitId":"chengseong"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"chengseong"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"chengseong"},"content":"        super(message);","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"chengseong"},"content":"}","lastModifiedDate":"2021-09-13"}],"authorContributionMap":{"chengseong":7}},{"path":"src/main/java/duke/exception/FolderNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chengseong"},"content":"package duke.exception;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"chengseong"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"chengseong"},"content":" * Exception for when the Folder is not found.","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"chengseong"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"chengseong"},"content":"public class FolderNotFoundException extends DukeException {","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"chengseong"},"content":"    public FolderNotFoundException(String message) {","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"chengseong"},"content":"        super(message);","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"chengseong"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"chengseong":10}},{"path":"src/main/java/duke/exception/IllegalCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chengseong"},"content":"package duke.exception;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"chengseong"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"chengseong"},"content":" * Exception for when an Illegal Command is given.","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"chengseong"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"chengseong"},"content":"public class IllegalCommandException extends Exception {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"chengseong"},"content":"    public IllegalCommandException(String message) {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"chengseong"},"content":"        super(message);","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"chengseong"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"chengseong":10}},{"path":"src/main/java/duke/exception/IllegalDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chengseong"},"content":"package duke.exception;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":3,"author":{"gitId":"chengseong"},"content":"public class IllegalDateException extends DukeException {","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"chengseong"},"content":"    public IllegalDateException(String message) {","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"chengseong"},"content":"        super(message);","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"chengseong"},"content":"}","lastModifiedDate":"2021-09-13"}],"authorContributionMap":{"chengseong":7}},{"path":"src/main/java/duke/exception/IllegalFrequencyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chengseong"},"content":"package duke.exception;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":3,"author":{"gitId":"chengseong"},"content":"public class IllegalFrequencyException extends DukeException {","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"chengseong"},"content":"    public IllegalFrequencyException(String message) {","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"chengseong"},"content":"        super(message);","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"chengseong"},"content":"}","lastModifiedDate":"2021-09-13"}],"authorContributionMap":{"chengseong":7}},{"path":"src/main/java/duke/exception/IllegalTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chengseong"},"content":"package duke.exception;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"chengseong"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"chengseong"},"content":" * Exception for when no task is given after a \"todo\" command is given","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"chengseong"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"chengseong"},"content":"public class IllegalTaskException extends Exception {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"chengseong"},"content":"    public IllegalTaskException(String message) {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"chengseong"},"content":"        super(message);","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"chengseong"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"chengseong":10}},{"path":"src/main/java/duke/exception/IllegalTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chengseong"},"content":"package duke.exception;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":3,"author":{"gitId":"chengseong"},"content":"public class IllegalTimeException extends DukeException {","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"chengseong"},"content":"    public IllegalTimeException(String message) {","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"chengseong"},"content":"        super(message);","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"chengseong"},"content":"}","lastModifiedDate":"2021-09-13"}],"authorContributionMap":{"chengseong":7}},{"path":"src/main/java/duke/exception/IndexOutOfBoundsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chengseong"},"content":"package duke.exception;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":3,"author":{"gitId":"chengseong"},"content":"public class IndexOutOfBoundsException extends DukeException {","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"chengseong"},"content":"    public IndexOutOfBoundsException(String message) {","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"chengseong"},"content":"        super(message);","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"chengseong"},"content":"}","lastModifiedDate":"2021-09-13"}],"authorContributionMap":{"chengseong":7}},{"path":"src/main/java/duke/exception/MissingIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chengseong"},"content":"package duke.exception;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":3,"author":{"gitId":"chengseong"},"content":"public class MissingIndexException extends DukeException {","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"chengseong"},"content":"    public MissingIndexException(String message) {","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"chengseong"},"content":"        super(message);","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"chengseong"},"content":"}","lastModifiedDate":"2021-09-13"}],"authorContributionMap":{"chengseong":7}},{"path":"src/main/java/duke/exception/MissingSyntaxException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chengseong"},"content":"package duke.exception;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":3,"author":{"gitId":"chengseong"},"content":"public class MissingSyntaxException extends DukeException {","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"chengseong"},"content":"    public MissingSyntaxException(String message) {","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"chengseong"},"content":"        super(message);","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"chengseong"},"content":"}","lastModifiedDate":"2021-09-13"}],"authorContributionMap":{"chengseong":7}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chengseong"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"chengseong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"chengseong"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"chengseong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"chengseong"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"chengseong"},"content":" * Represents a Deadline Task.","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"chengseong"},"content":" * A Deadline consists of a date and time representing the deadline of the task.","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"chengseong"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"chengseong"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"chengseong"},"content":"    private LocalDate date;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"chengseong"},"content":"    private LocalTime time;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"chengseong"},"content":"    private String frequency;","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"chengseong"},"content":"    private boolean isUpdated;","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"chengseong"},"content":"    public Deadline(String toDo, LocalDate date, LocalTime time, String frequency) {","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"chengseong"},"content":"        this(toDo, date, time, frequency, false);","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":21,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"chengseong"},"content":"     * Creates a Deadline object","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"chengseong"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"chengseong"},"content":"     * @param toDo name of the task to be done before the deadline","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"chengseong"},"content":"     * @param date deadline date of the task","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"chengseong"},"content":"     * @param time deadline time of the task","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"chengseong"},"content":"    public Deadline(String toDo, LocalDate date, LocalTime time, String frequency, boolean isUpdated) {","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"chengseong"},"content":"        super(toDo);","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"chengseong"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"chengseong"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"chengseong"},"content":"        this.frequency \u003d frequency;","lastModifiedDate":"2021-09-13"},{"lineNumber":34,"author":{"gitId":"chengseong"},"content":"        this.isUpdated \u003d isUpdated;","lastModifiedDate":"2021-09-13"},{"lineNumber":35,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"chengseong"},"content":"    String getType() {","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"chengseong"},"content":"        return \"D\";","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"chengseong"},"content":"    String getDateString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"chengseong"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \", \"","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"chengseong"},"content":"                + time.format(DateTimeFormatter.ofPattern(\"hh:mm a\"));","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"chengseong"},"content":"     * Returns the Deadline String that will be written into storage.","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"chengseong"},"content":"     * Date will have the format MMM dd yyyy","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"chengseong"},"content":"     * Time will have the format hh:mm AM/PM","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"chengseong"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"chengseong"},"content":"     * @return string with the format \"[D] | status | task | date and time of deadline\"","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"chengseong"},"content":"    public String getToWrite() {","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"chengseong"},"content":"        return this.getType() + \" | \" + super.getToWrite() + \" | \" + this.getDateString() + \" | \" + frequency;","lastModifiedDate":"2021-09-13"},{"lineNumber":55,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":56,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":57,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":58,"author":{"gitId":"chengseong"},"content":"     * checks if Event Date was recently updated. Only updates isDone if Event Date was not recently updated, then","lastModifiedDate":"2021-09-13"},{"lineNumber":59,"author":{"gitId":"chengseong"},"content":"     * resets isUpdated","lastModifiedDate":"2021-09-13"},{"lineNumber":60,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":61,"author":{"gitId":"chengseong"},"content":"    @Override","lastModifiedDate":"2021-09-13"},{"lineNumber":62,"author":{"gitId":"chengseong"},"content":"    public void complete() {","lastModifiedDate":"2021-09-13"},{"lineNumber":63,"author":{"gitId":"chengseong"},"content":"        if (!this.isUpdated) {","lastModifiedDate":"2021-09-13"},{"lineNumber":64,"author":{"gitId":"chengseong"},"content":"            super.complete();","lastModifiedDate":"2021-09-13"},{"lineNumber":65,"author":{"gitId":"chengseong"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":66,"author":{"gitId":"chengseong"},"content":"        this.isUpdated \u003d false;","lastModifiedDate":"2021-09-13"},{"lineNumber":67,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":70,"author":{"gitId":"chengseong"},"content":"     * Returns the Deadline String","lastModifiedDate":"2021-08-27"},{"lineNumber":71,"author":{"gitId":"chengseong"},"content":"     * Date will have the format MMM dd yyyy","lastModifiedDate":"2021-08-27"},{"lineNumber":72,"author":{"gitId":"chengseong"},"content":"     * Time will have the format hh:mm AM/PM","lastModifiedDate":"2021-08-27"},{"lineNumber":73,"author":{"gitId":"chengseong"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":74,"author":{"gitId":"chengseong"},"content":"     * @return string with the format \"[D] status and task (by: deadline) frequency","lastModifiedDate":"2021-09-13"},{"lineNumber":75,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":76,"author":{"gitId":"chengseong"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":77,"author":{"gitId":"chengseong"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":78,"author":{"gitId":"chengseong"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2021-09-07"},{"lineNumber":79,"author":{"gitId":"chengseong"},"content":"                + \" \"","lastModifiedDate":"2021-09-07"},{"lineNumber":80,"author":{"gitId":"chengseong"},"content":"                + time.format(DateTimeFormatter.ofPattern(\"hh:mm a\"))","lastModifiedDate":"2021-09-13"},{"lineNumber":81,"author":{"gitId":"chengseong"},"content":"                + \") \"","lastModifiedDate":"2021-09-13"},{"lineNumber":82,"author":{"gitId":"chengseong"},"content":"                + frequency;","lastModifiedDate":"2021-09-13"},{"lineNumber":83,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":84,"author":{"gitId":"chengseong"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"chengseong":84}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chengseong"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"chengseong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"chengseong"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"chengseong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"chengseong"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"chengseong"},"content":" *  Represents an Event task.","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"chengseong"},"content":" *  An Event consists of a date and time representing the date and time of the Event.","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"chengseong"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"chengseong"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"chengseong"},"content":"    private LocalDate date;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"chengseong"},"content":"    private LocalTime time;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"chengseong"},"content":"    private String frequency;","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"chengseong"},"content":"    private boolean isUpdated;","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"chengseong"},"content":"     * Creates an Event Object.","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"chengseong"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"chengseong"},"content":"     * @param toDo name of the event occuring at the specified date.","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"chengseong"},"content":"     * @param date date of the event.","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"chengseong"},"content":"     * @param time time of the event.","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"chengseong"},"content":"    public Event(String toDo, LocalDate date, LocalTime time, String frequency) {","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"chengseong"},"content":"        this(toDo, date, time, frequency, false);","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"chengseong"},"content":"    public Event(String toDo, LocalDate date, LocalTime time, String frequency, boolean isUpdated) {","lastModifiedDate":"2021-09-13"},{"lineNumber":31,"author":{"gitId":"chengseong"},"content":"        super(toDo);","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"chengseong"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"chengseong"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"chengseong"},"content":"        this.frequency \u003d frequency;","lastModifiedDate":"2021-09-13"},{"lineNumber":35,"author":{"gitId":"chengseong"},"content":"        this.isUpdated \u003d isUpdated;","lastModifiedDate":"2021-09-13"},{"lineNumber":36,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"chengseong"},"content":"    String getType() {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"chengseong"},"content":"        return \"E\";","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"chengseong"},"content":"    String getDateString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"chengseong"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"chengseong"},"content":"                + \", \"","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"chengseong"},"content":"                + time.format(DateTimeFormatter.ofPattern(\"hh:mm a\")","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"chengseong"},"content":"        );","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":50,"author":{"gitId":"chengseong"},"content":"     * checks if Event Date was recently updated. Only updates isDone if Event Date was not recently updated, then","lastModifiedDate":"2021-09-13"},{"lineNumber":51,"author":{"gitId":"chengseong"},"content":"     * resets isUpdated","lastModifiedDate":"2021-09-13"},{"lineNumber":52,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":53,"author":{"gitId":"chengseong"},"content":"    @Override","lastModifiedDate":"2021-09-13"},{"lineNumber":54,"author":{"gitId":"chengseong"},"content":"    public void complete() {","lastModifiedDate":"2021-09-13"},{"lineNumber":55,"author":{"gitId":"chengseong"},"content":"        if (!this.isUpdated) {","lastModifiedDate":"2021-09-13"},{"lineNumber":56,"author":{"gitId":"chengseong"},"content":"            super.complete();","lastModifiedDate":"2021-09-13"},{"lineNumber":57,"author":{"gitId":"chengseong"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":58,"author":{"gitId":"chengseong"},"content":"        this.isUpdated \u003d false;","lastModifiedDate":"2021-09-13"},{"lineNumber":59,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":60,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":61,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"chengseong"},"content":"     * Returns the Event String that will be written into Storage","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"chengseong"},"content":"     * Date will have the format MMM dd yyyy","lastModifiedDate":"2021-08-27"},{"lineNumber":64,"author":{"gitId":"chengseong"},"content":"     * Time will have the format hh:mm AM/PM","lastModifiedDate":"2021-08-27"},{"lineNumber":65,"author":{"gitId":"chengseong"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":66,"author":{"gitId":"chengseong"},"content":"     * @return string with the format [E] | status | event name | date and time of event","lastModifiedDate":"2021-08-27"},{"lineNumber":67,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":68,"author":{"gitId":"chengseong"},"content":"    public String getToWrite() {","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"chengseong"},"content":"        return this.getType() + \" | \" + super.getToWrite() + \" | \" + this.getDateString() + \" | \" + frequency;","lastModifiedDate":"2021-09-13"},{"lineNumber":70,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":73,"author":{"gitId":"chengseong"},"content":"     * Returns the Event String","lastModifiedDate":"2021-09-13"},{"lineNumber":74,"author":{"gitId":"chengseong"},"content":"     * Date will have the format MMM dd yyyy","lastModifiedDate":"2021-09-13"},{"lineNumber":75,"author":{"gitId":"chengseong"},"content":"     * Time will have the format hh:mm AM/PM","lastModifiedDate":"2021-09-13"},{"lineNumber":76,"author":{"gitId":"chengseong"},"content":"     *","lastModifiedDate":"2021-09-13"},{"lineNumber":77,"author":{"gitId":"chengseong"},"content":"     * @return string with the format \"[D] status and task (at: date) frequency","lastModifiedDate":"2021-09-13"},{"lineNumber":78,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":79,"author":{"gitId":"chengseong"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":80,"author":{"gitId":"chengseong"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":81,"author":{"gitId":"chengseong"},"content":"        return \"[E]\" + super.toString() + \"(at: \" + date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))","lastModifiedDate":"2021-09-07"},{"lineNumber":82,"author":{"gitId":"chengseong"},"content":"                + \" \"","lastModifiedDate":"2021-09-07"},{"lineNumber":83,"author":{"gitId":"chengseong"},"content":"                + time.format(DateTimeFormatter.ofPattern(\"hh:mm a\"))","lastModifiedDate":"2021-09-13"},{"lineNumber":84,"author":{"gitId":"chengseong"},"content":"                + \") \"","lastModifiedDate":"2021-09-13"},{"lineNumber":85,"author":{"gitId":"chengseong"},"content":"                + frequency;","lastModifiedDate":"2021-09-13"},{"lineNumber":86,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":87,"author":{"gitId":"chengseong"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"chengseong":87}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chengseong"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"chengseong"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"chengseong"},"content":" * Task is the abstract base class of all the Tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"chengseong"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"chengseong"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"chengseong"},"content":"    private boolean isDone;","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"chengseong"},"content":"    private String toDo;","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"chengseong"},"content":"    Task(String toDo) {","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"chengseong"},"content":"        this(false, toDo);","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"chengseong"},"content":"    Task(boolean isDone, String toDo) {","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"chengseong"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"chengseong"},"content":"        this.toDo \u003d toDo;","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"chengseong"},"content":"     * Changes the done variable stored in Task to 1, representing a completed task.","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"chengseong"},"content":"    public void complete() {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"chengseong"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"chengseong"},"content":"    String getToDo() {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"chengseong"},"content":"        return toDo;","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"chengseong"},"content":"    String getDone() {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"chengseong"},"content":"        if (!isDone) {","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"chengseong"},"content":"            return \"0\";","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"chengseong"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"chengseong"},"content":"        return \"1\";","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"chengseong"},"content":"     * returns a String in the format \"Completion Status | Task\"","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"chengseong"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"chengseong"},"content":"     * @return a String in the format \"Completion Status | Task\"","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"chengseong"},"content":"    public String getToWrite() {","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"chengseong"},"content":"        return this.getDone() + \" | \" + this.getToDo();","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"chengseong"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"chengseong"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"chengseong"},"content":"        if (!(o instanceof Task)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"chengseong"},"content":"            return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"chengseong"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"chengseong"},"content":"            Task oTask \u003d (Task) o;","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"chengseong"},"content":"            return this.toString().equals(oTask.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"chengseong"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"chengseong"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":58,"author":{"gitId":"chengseong"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":59,"author":{"gitId":"chengseong"},"content":"        if (isDone) {","lastModifiedDate":"2021-09-07"},{"lineNumber":60,"author":{"gitId":"chengseong"},"content":"            return String.format(\"[X] %s\", toDo);","lastModifiedDate":"2021-08-17"},{"lineNumber":61,"author":{"gitId":"chengseong"},"content":"        } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":62,"author":{"gitId":"chengseong"},"content":"            return String.format(\"[ ] %s\", toDo);","lastModifiedDate":"2021-08-17"},{"lineNumber":63,"author":{"gitId":"chengseong"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":64,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":65,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":66,"author":{"gitId":"chengseong"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"chengseong":66}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chengseong"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"chengseong"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"chengseong"},"content":" * Represents a ToDo task.","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"chengseong"},"content":" * A ToDo task contains a String describing the task.","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"chengseong"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"chengseong"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"chengseong"},"content":"     * Creates a ToDo Object containing the task to be done.","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"chengseong"},"content":"     * @param toDo task to be done.","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"chengseong"},"content":"    public ToDo(String toDo) {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"chengseong"},"content":"        super(toDo);","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"chengseong"},"content":"    String getType() {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"chengseong"},"content":"        return \"T\";","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"chengseong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"chengseong"},"content":"     * returns a String in the format \"[T] Completion Status | Task\"","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"chengseong"},"content":"     * @return a String in the format \"[T] Completion Status | Task\"","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"chengseong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"chengseong"},"content":"    public String getToWrite() {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"chengseong"},"content":"        return this.getType() + \" | \" + super.getToWrite();","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"chengseong"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"chengseong"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"chengseong"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"chengseong"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"chengseong":35}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"chengseong"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"chengseong"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"chengseong"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"chengseong"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"chengseong"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"chengseong"},"content":"\u003c?import javafx.scene.text.TextFlow?\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"chengseong"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" fillHeight\u003d\"false\" maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"chengseong"},"content":"         maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"chengseong"},"content":"         xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"chengseong"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"chengseong"},"content":"      \u003cTextFlow style\u003d\"-fx-background-color: #FFFFFF; -fx-background-radius: 20;\"\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"chengseong"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"chengseong"},"content":"            \u003cText fx:id\u003d\"dialog\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Text\" /\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"chengseong"},"content":"         \u003c/children\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"chengseong"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"chengseong"},"content":"            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"chengseong"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"chengseong"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"chengseong"},"content":"            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"chengseong"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"chengseong"},"content":"      \u003c/TextFlow\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"chengseong"},"content":"      \u003cCircle fx:id\u003d\"displayPicture\" fill\u003d\"DODGERBLUE\" radius\u003d\"40.0\" stroke\u003d\"BLACK\" strokeType\u003d\"INSIDE\" /\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"chengseong"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"chengseong"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"chengseong"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"chengseong"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"chengseong"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"chengseong":29}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"chengseong"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"chengseong"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"chengseong"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"chengseong"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"chengseong"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"chengseong"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"chengseong"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\"","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"chengseong"},"content":"            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"chengseong"},"content":"            fx:controller\u003d\"MainWindow\"\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"chengseong"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"chengseong"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"chengseong"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"chengseong"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"chengseong"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"chengseong"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-image: url(\u0027/images/background.jpg\u0027);\" /\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"chengseong"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"chengseong"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"chengseong"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"chengseong"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"chengseong":21}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chengseong"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"chengseong"},"content":"import duke.exception.*;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"chengseong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"chengseong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"chengseong"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"chengseong"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"chengseong"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"chengseong"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"chengseong"},"content":"    public void testParse_toDo_success() throws IllegalCommandException, IllegalTaskException,","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"chengseong"},"content":"            IllegalFrequencyException, MissingSyntaxException, MissingIndexException, IllegalTimeException,","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"chengseong"},"content":"            IllegalDateException {","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"chengseong"},"content":"        String command1 \u003d \"todo read book\";","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"chengseong"},"content":"        assertEquals(new AddCommand(new ToDo(\"read book\")),","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"chengseong"},"content":"                duke.Parser.parse(command1));","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"chengseong"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"chengseong":18}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chengseong"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"chengseong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"chengseong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"chengseong"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"chengseong"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"chengseong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"chengseong"},"content":"public class TaskListTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"chengseong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"chengseong"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"chengseong"},"content":"    public void testGet_toDo_success() {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"chengseong"},"content":"        duke.TaskList test \u003d new duke.TaskList(new ArrayList\u003cTask\u003e() {{add(new ToDo(\"eat\"));}});","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"chengseong"},"content":"        assertEquals(new ToDo(\"eat\"), test.get(0));","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"chengseong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"chengseong"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"chengseong":16}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"chengseong"},"content":"todo read book","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"chengseong"},"content":"deadline return book /by 2/12/2019 1800","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"chengseong"},"content":"event project meeting /at 2/13/2019 1700","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"chengseong"},"content":"todo join sports club","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"chengseong"},"content":"todo borrow book","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"chengseong"},"content":"done 1","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"chengseong"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"chengseong"},"content":"done 4","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"chengseong"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"chengseong"},"content":"delete 3","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"chengseong"},"content":"todo","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"chengseong"},"content":"bleh","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"chengseong"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"chengseong":13}}]
