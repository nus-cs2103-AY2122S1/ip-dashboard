[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luayida99"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"luayida99"},"content":" * CS2103T Individual Project AY 21/22 Sem 1","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"luayida99"},"content":" * Project Duke: Incrementally building a Chatbot.","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"luayida99"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"luayida99"},"content":" * The Deadline class represents a task that has to be done before a specified time, currently represented","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"luayida99"},"content":" * as a string. It encapsulates the following information:","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"luayida99"},"content":" * - description","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"luayida99"},"content":" * - time","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"luayida99"},"content":" * - isDone","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"luayida99"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"luayida99"},"content":" * @author Lua Yi Da","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"luayida99"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"luayida99"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"luayida99"},"content":"    protected String time;","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"luayida99"},"content":"    public Deadline(String description, String time) {","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"luayida99"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"luayida99"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"luayida99"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"luayida99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"luayida99"},"content":"        StringBuilder deadlineLine \u003d new StringBuilder();","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"luayida99"},"content":"        if (this.isDone) {","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"luayida99"},"content":"            deadlineLine.append(\"[D][x]\");","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"luayida99"},"content":"        } else {","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"luayida99"},"content":"            deadlineLine.append(\"[D][ ]\");","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"luayida99"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"luayida99"},"content":"        deadlineLine.append(this.description.replaceFirst(\"deadline\", \"\") + \"(by:\" + this.time + \")\");","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"luayida99"},"content":"        return deadlineLine.toString();","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"luayida99"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"luayida99":33}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luayida99"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"luayida99"},"content":" * CS2103T Individual Project AY 21/22 Sem 1","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"luayida99"},"content":" * Project Duke: Incrementally building a Chatbot.","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"luayida99"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"luayida99"},"content":" * The Event class represents a task that has to be done at a specified time, currently represented","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"luayida99"},"content":" * as a string. It encapsulates the following information:","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"luayida99"},"content":" * - description","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"luayida99"},"content":" * - time","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"luayida99"},"content":" * - isDone","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"luayida99"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"luayida99"},"content":" * @author Lua Yi Da","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"luayida99"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"luayida99"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"luayida99"},"content":"    protected String time;","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"luayida99"},"content":"    public Event(String description, String time) {","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"luayida99"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"luayida99"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"luayida99"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"luayida99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"luayida99"},"content":"        StringBuilder deadlineLine \u003d new StringBuilder();","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"luayida99"},"content":"        if (this.isDone) {","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"luayida99"},"content":"            deadlineLine.append(\"[E][x]\");","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"luayida99"},"content":"        } else {","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"luayida99"},"content":"            deadlineLine.append(\"[E][ ]\");","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"luayida99"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"luayida99"},"content":"        deadlineLine.append(this.description.replaceFirst(\"event\", \"\") + \"(at:\" + this.time + \")\");","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"luayida99"},"content":"        return deadlineLine.toString();","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"luayida99"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"luayida99":33}},{"path":"src/main/java/Side.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luayida99"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"luayida99"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"luayida99"},"content":" * CS2103T Individual Project AY 21/22 Sem 1","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"luayida99"},"content":" * Project Duke: Incrementally building a Chatbot.","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"luayida99"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"luayida99"},"content":" * Description:","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"luayida99"},"content":" * On running the program, Duke greets the user and awaits for inputted commands:","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"luayida99"},"content":" *   - \u0027todo x\u0027 -\u003e adds a Task of x with no date/time attached","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"luayida99"},"content":" *   - \u0027deadline x /by y\u0027 -\u003e adds Deadline of x that needs to be done by y","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"luayida99"},"content":" *   - \u0027event x /at y\u0027 -\u003e adds an Event of x that starts and ends at a specific time y","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"luayida99"},"content":" *   - \u0027list\u0027 -\u003e displays current list of tasks","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"luayida99"},"content":" *   - \u0027done x\u0027 -\u003e marks Task x as done","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"luayida99"},"content":" *   - \u0027delete x\u0027 -\u003e deletes Task x from the task list","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"luayida99"},"content":" *   - \u0027bye\u0027 -\u003e exits the program","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"luayida99"},"content":" *   - Other input patterns throw exceptions","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"luayida99"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"luayida99"},"content":" * @author Lua Yi Da","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"luayida99"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"luayida99"},"content":"public class Side {","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"luayida99"},"content":"    private static final String LINEBREAK \u003d \"---------------------------------------------------------------------\";","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"luayida99"},"content":"    private static final String GREETING \u003d LINEBREAK + \"\" + \"\\nI\u0027m Side, your unpaid personal assistant. \" +","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"luayida99"},"content":"            \"Please do less...\\n\" + LINEBREAK;","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"luayida99"},"content":"    private static final String GOODBYE \u003d LINEBREAK + \"\\nOh, you have to go? What a pity...\\n\"","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"luayida99"},"content":"            + LINEBREAK;","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"luayida99"},"content":"    private enum COMMAND { TODO, DEADLINE, EVENT, LIST, DONE, DELETE, INVALID }","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"luayida99"},"content":"    private static void printLogo() {","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"luayida99"},"content":"        String logo \u003d \" ___  _____  _____   _____  \\n\"","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"luayida99"},"content":"                + \"|  _|  | |  | ___ \\\\  | |__\\n\"","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"luayida99"},"content":"                + \" \\\\ \\\\   | |  | |_| |  | |  \\n\"","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"luayida99"},"content":"                + \"|___| _|_|_ |____/   |_|__\\n\";","lastModifiedDate":"2021-08-14"},{"lineNumber":34,"author":{"gitId":"luayida99"},"content":"        System.out.println(logo);","lastModifiedDate":"2021-08-14"},{"lineNumber":35,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":36,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":37,"author":{"gitId":"luayida99"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":38,"author":{"gitId":"luayida99"},"content":"     * Print response specific to adding tasks.","lastModifiedDate":"2021-08-15"},{"lineNumber":39,"author":{"gitId":"luayida99"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":40,"author":{"gitId":"luayida99"},"content":"     * @param input String representation of task to add.","lastModifiedDate":"2021-08-15"},{"lineNumber":41,"author":{"gitId":"luayida99"},"content":"     * @param tasks TaskList to be added to.","lastModifiedDate":"2021-08-15"},{"lineNumber":42,"author":{"gitId":"luayida99"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":43,"author":{"gitId":"luayida99"},"content":"    private static void echo(String input, TaskList tasks) {","lastModifiedDate":"2021-08-14"},{"lineNumber":44,"author":{"gitId":"luayida99"},"content":"        System.out.println(LINEBREAK);","lastModifiedDate":"2021-08-14"},{"lineNumber":45,"author":{"gitId":"luayida99"},"content":"        String taskQuantifier \u003d tasks.length() \u003d\u003d 1 ? \"task...\" : \"tasks...\";","lastModifiedDate":"2021-08-14"},{"lineNumber":46,"author":{"gitId":"luayida99"},"content":"        System.out.println(\"Fine, I\u0027ll add: \" + input + \"\\nYou now have \" + tasks.length() + \" \" + taskQuantifier);","lastModifiedDate":"2021-08-14"},{"lineNumber":47,"author":{"gitId":"luayida99"},"content":"        System.out.println(LINEBREAK);","lastModifiedDate":"2021-08-14"},{"lineNumber":48,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":49,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":50,"author":{"gitId":"luayida99"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":51,"author":{"gitId":"luayida99"},"content":"     * Generic print response.","lastModifiedDate":"2021-08-15"},{"lineNumber":52,"author":{"gitId":"luayida99"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":53,"author":{"gitId":"luayida99"},"content":"     * @param input String representation of String to format.","lastModifiedDate":"2021-08-15"},{"lineNumber":54,"author":{"gitId":"luayida99"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":55,"author":{"gitId":"luayida99"},"content":"    private static void printResponse(String input) {","lastModifiedDate":"2021-08-14"},{"lineNumber":56,"author":{"gitId":"luayida99"},"content":"        System.out.println(LINEBREAK);","lastModifiedDate":"2021-08-14"},{"lineNumber":57,"author":{"gitId":"luayida99"},"content":"        System.out.println(input);","lastModifiedDate":"2021-08-14"},{"lineNumber":58,"author":{"gitId":"luayida99"},"content":"        System.out.println(LINEBREAK);","lastModifiedDate":"2021-08-14"},{"lineNumber":59,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":60,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":61,"author":{"gitId":"luayida99"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":62,"author":{"gitId":"luayida99"},"content":"     * Helper method to isolate secondary commands like /at and /by.","lastModifiedDate":"2021-08-15"},{"lineNumber":63,"author":{"gitId":"luayida99"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":64,"author":{"gitId":"luayida99"},"content":"     * @param input String to be searched.","lastModifiedDate":"2021-08-15"},{"lineNumber":65,"author":{"gitId":"luayida99"},"content":"     * @param arg String to find.","lastModifiedDate":"2021-08-15"},{"lineNumber":66,"author":{"gitId":"luayida99"},"content":"     * @return String representing time given by usder input.","lastModifiedDate":"2021-08-15"},{"lineNumber":67,"author":{"gitId":"luayida99"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":68,"author":{"gitId":"luayida99"},"content":"    private static String findTime(String input, String arg) {","lastModifiedDate":"2021-08-14"},{"lineNumber":69,"author":{"gitId":"luayida99"},"content":"        int argIdx \u003d input.lastIndexOf(arg);","lastModifiedDate":"2021-08-14"},{"lineNumber":70,"author":{"gitId":"luayida99"},"content":"        String output \u003d input.substring(argIdx + arg.length());","lastModifiedDate":"2021-08-14"},{"lineNumber":71,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":72,"author":{"gitId":"luayida99"},"content":"        if (output.replaceAll(\"\\\\s\", \"\").length() \u003c 1) {","lastModifiedDate":"2021-08-14"},{"lineNumber":73,"author":{"gitId":"luayida99"},"content":"            return null;","lastModifiedDate":"2021-08-14"},{"lineNumber":74,"author":{"gitId":"luayida99"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":75,"author":{"gitId":"luayida99"},"content":"        return output;","lastModifiedDate":"2021-08-14"},{"lineNumber":76,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":77,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":78,"author":{"gitId":"luayida99"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":79,"author":{"gitId":"luayida99"},"content":"     * Handles the logic to add a deadline to TaskList.","lastModifiedDate":"2021-08-15"},{"lineNumber":80,"author":{"gitId":"luayida99"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":81,"author":{"gitId":"luayida99"},"content":"     * @param input String representation of user input.","lastModifiedDate":"2021-08-15"},{"lineNumber":82,"author":{"gitId":"luayida99"},"content":"     * @param taskList TaskList to be added to.","lastModifiedDate":"2021-08-15"},{"lineNumber":83,"author":{"gitId":"luayida99"},"content":"     * @throws WrongFormatException Catches incorrectly formatted input and returns error.","lastModifiedDate":"2021-08-15"},{"lineNumber":84,"author":{"gitId":"luayida99"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":85,"author":{"gitId":"luayida99"},"content":"    private static void addDeadline(String input, TaskList taskList) throws WrongFormatException {","lastModifiedDate":"2021-08-14"},{"lineNumber":86,"author":{"gitId":"luayida99"},"content":"        if (input.contains(\"/by\") \u0026\u0026 (findTime(input, \"/by\") !\u003d null)) {","lastModifiedDate":"2021-08-14"},{"lineNumber":87,"author":{"gitId":"luayida99"},"content":"            String time \u003d findTime(input, \"/by\");","lastModifiedDate":"2021-08-14"},{"lineNumber":88,"author":{"gitId":"luayida99"},"content":"            String description \u003d input.replace(\"/by\" + time, \"\");","lastModifiedDate":"2021-08-14"},{"lineNumber":89,"author":{"gitId":"luayida99"},"content":"            taskList.addDeadline(description, time);","lastModifiedDate":"2021-08-14"},{"lineNumber":90,"author":{"gitId":"luayida99"},"content":"            echo(new Deadline(description, time).toString(), taskList);","lastModifiedDate":"2021-08-14"},{"lineNumber":91,"author":{"gitId":"luayida99"},"content":"        } else {","lastModifiedDate":"2021-08-14"},{"lineNumber":92,"author":{"gitId":"luayida99"},"content":"            throw new WrongFormatException(\"deadline [task name] /by [time]\");","lastModifiedDate":"2021-08-14"},{"lineNumber":93,"author":{"gitId":"luayida99"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":94,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":95,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":96,"author":{"gitId":"luayida99"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":97,"author":{"gitId":"luayida99"},"content":"     * Handles the logic to add an Event to TaskList.","lastModifiedDate":"2021-08-15"},{"lineNumber":98,"author":{"gitId":"luayida99"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":99,"author":{"gitId":"luayida99"},"content":"     * @param input String representation of user input.","lastModifiedDate":"2021-08-15"},{"lineNumber":100,"author":{"gitId":"luayida99"},"content":"     * @param taskList TaskList to be added to.","lastModifiedDate":"2021-08-15"},{"lineNumber":101,"author":{"gitId":"luayida99"},"content":"     * @throws WrongFormatException Catches incorrectly formatted input and returns error.","lastModifiedDate":"2021-08-15"},{"lineNumber":102,"author":{"gitId":"luayida99"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":103,"author":{"gitId":"luayida99"},"content":"    private static void addEvent(String input, TaskList taskList) throws WrongFormatException {","lastModifiedDate":"2021-08-14"},{"lineNumber":104,"author":{"gitId":"luayida99"},"content":"        if (input.contains(\"/at\") \u0026\u0026 (findTime(input, \"/at\") !\u003d null)) {","lastModifiedDate":"2021-08-14"},{"lineNumber":105,"author":{"gitId":"luayida99"},"content":"            String time \u003d findTime(input, \"/at\");","lastModifiedDate":"2021-08-14"},{"lineNumber":106,"author":{"gitId":"luayida99"},"content":"            String description \u003d input.replace(\"/at\" + time, \"\");","lastModifiedDate":"2021-08-14"},{"lineNumber":107,"author":{"gitId":"luayida99"},"content":"            taskList.addEvent(description, time);","lastModifiedDate":"2021-08-14"},{"lineNumber":108,"author":{"gitId":"luayida99"},"content":"            echo(new Event(description, time).toString(), taskList);","lastModifiedDate":"2021-08-14"},{"lineNumber":109,"author":{"gitId":"luayida99"},"content":"        } else {","lastModifiedDate":"2021-08-14"},{"lineNumber":110,"author":{"gitId":"luayida99"},"content":"            throw new WrongFormatException(\"event [task name] /at [time]\");","lastModifiedDate":"2021-08-14"},{"lineNumber":111,"author":{"gitId":"luayida99"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":112,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":113,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":114,"author":{"gitId":"luayida99"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":115,"author":{"gitId":"luayida99"},"content":"     * Handles the logic to add a task to TaskList.","lastModifiedDate":"2021-08-15"},{"lineNumber":116,"author":{"gitId":"luayida99"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":117,"author":{"gitId":"luayida99"},"content":"     * @param input String representation of user input.","lastModifiedDate":"2021-08-15"},{"lineNumber":118,"author":{"gitId":"luayida99"},"content":"     * @param taskList TaskList to be added to.","lastModifiedDate":"2021-08-15"},{"lineNumber":119,"author":{"gitId":"luayida99"},"content":"     * @throws WrongFormatException Catches incorrectly formatted input and returns error.","lastModifiedDate":"2021-08-15"},{"lineNumber":120,"author":{"gitId":"luayida99"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":121,"author":{"gitId":"luayida99"},"content":"    private static void addTask(String input, TaskList taskList) throws WrongFormatException {","lastModifiedDate":"2021-08-14"},{"lineNumber":122,"author":{"gitId":"luayida99"},"content":"        if (input.replace(\"todo\", \"\").replaceAll(\" \", \"\").length() \u003e 0) {","lastModifiedDate":"2021-08-14"},{"lineNumber":123,"author":{"gitId":"luayida99"},"content":"            taskList.addTask(input);","lastModifiedDate":"2021-08-14"},{"lineNumber":124,"author":{"gitId":"luayida99"},"content":"            echo(new Task(input).toString(), taskList);","lastModifiedDate":"2021-08-14"},{"lineNumber":125,"author":{"gitId":"luayida99"},"content":"        } else {","lastModifiedDate":"2021-08-14"},{"lineNumber":126,"author":{"gitId":"luayida99"},"content":"            throw new WrongFormatException(\"todo [task name]\");","lastModifiedDate":"2021-08-14"},{"lineNumber":127,"author":{"gitId":"luayida99"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":128,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":129,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":130,"author":{"gitId":"luayida99"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":131,"author":{"gitId":"luayida99"},"content":"     * Helper method to parse string and isolate index passed in by user","lastModifiedDate":"2021-08-15"},{"lineNumber":132,"author":{"gitId":"luayida99"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":133,"author":{"gitId":"luayida99"},"content":"     * @param s String to be parsed.","lastModifiedDate":"2021-08-15"},{"lineNumber":134,"author":{"gitId":"luayida99"},"content":"     * @return Integer from parsing String s.","lastModifiedDate":"2021-08-15"},{"lineNumber":135,"author":{"gitId":"luayida99"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":136,"author":{"gitId":"luayida99"},"content":"    private static Integer tryIntParsing(String s) {","lastModifiedDate":"2021-08-15"},{"lineNumber":137,"author":{"gitId":"luayida99"},"content":"        try {","lastModifiedDate":"2021-08-15"},{"lineNumber":138,"author":{"gitId":"luayida99"},"content":"            int parsedInt \u003d Integer.parseInt(s);","lastModifiedDate":"2021-08-15"},{"lineNumber":139,"author":{"gitId":"luayida99"},"content":"            return parsedInt;","lastModifiedDate":"2021-08-15"},{"lineNumber":140,"author":{"gitId":"luayida99"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-15"},{"lineNumber":141,"author":{"gitId":"luayida99"},"content":"            return 0;","lastModifiedDate":"2021-08-15"},{"lineNumber":142,"author":{"gitId":"luayida99"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":143,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":144,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":145,"author":{"gitId":"luayida99"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":146,"author":{"gitId":"luayida99"},"content":"     * Handles the logic of marking a task as done.","lastModifiedDate":"2021-08-15"},{"lineNumber":147,"author":{"gitId":"luayida99"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":148,"author":{"gitId":"luayida99"},"content":"     * @param input String representation of user input.","lastModifiedDate":"2021-08-15"},{"lineNumber":149,"author":{"gitId":"luayida99"},"content":"     * @param taskList TaskList in which task is to be marked.","lastModifiedDate":"2021-08-15"},{"lineNumber":150,"author":{"gitId":"luayida99"},"content":"     * @throws TaskIndexException Catches out of bounds task indexes and returns error.","lastModifiedDate":"2021-08-15"},{"lineNumber":151,"author":{"gitId":"luayida99"},"content":"     * @throws NoIndexException Catches no index input from user and returns error.","lastModifiedDate":"2021-08-15"},{"lineNumber":152,"author":{"gitId":"luayida99"},"content":"     * @throws TooManyIndexesException Catches too many index input from user and returns error.","lastModifiedDate":"2021-08-15"},{"lineNumber":153,"author":{"gitId":"luayida99"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":154,"author":{"gitId":"luayida99"},"content":"    private static void handleDone(String input, TaskList taskList) throws TaskIndexException, NoIndexException,","lastModifiedDate":"2021-08-15"},{"lineNumber":155,"author":{"gitId":"luayida99"},"content":"            TooManyIndexesException {","lastModifiedDate":"2021-08-15"},{"lineNumber":156,"author":{"gitId":"luayida99"},"content":"        if (input.split(\"\\\\s+\").length \u003d\u003d 2) {","lastModifiedDate":"2021-08-15"},{"lineNumber":157,"author":{"gitId":"luayida99"},"content":"            int taskNum \u003d tryIntParsing(input.split(\"\\\\s+\")[1]);","lastModifiedDate":"2021-08-15"},{"lineNumber":158,"author":{"gitId":"luayida99"},"content":"            if (taskNum \u003e taskList.length() || taskNum \u003c\u003d 0) {","lastModifiedDate":"2021-08-15"},{"lineNumber":159,"author":{"gitId":"luayida99"},"content":"                throw new TaskIndexException();","lastModifiedDate":"2021-08-15"},{"lineNumber":160,"author":{"gitId":"luayida99"},"content":"            } else {","lastModifiedDate":"2021-08-15"},{"lineNumber":161,"author":{"gitId":"luayida99"},"content":"                printResponse(taskList.markTaskDone(taskNum - 1));","lastModifiedDate":"2021-08-15"},{"lineNumber":162,"author":{"gitId":"luayida99"},"content":"            }","lastModifiedDate":"2021-08-15"},{"lineNumber":163,"author":{"gitId":"luayida99"},"content":"        } else if (input.split(\"\\\\s+\").length \u003d\u003d 1) {","lastModifiedDate":"2021-08-15"},{"lineNumber":164,"author":{"gitId":"luayida99"},"content":"            throw new NoIndexException();","lastModifiedDate":"2021-08-15"},{"lineNumber":165,"author":{"gitId":"luayida99"},"content":"        } else {","lastModifiedDate":"2021-08-15"},{"lineNumber":166,"author":{"gitId":"luayida99"},"content":"            throw new TooManyIndexesException(\"mark\");","lastModifiedDate":"2021-08-15"},{"lineNumber":167,"author":{"gitId":"luayida99"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":168,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":169,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":170,"author":{"gitId":"luayida99"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":171,"author":{"gitId":"luayida99"},"content":"     * Handles the logic of deleting a task","lastModifiedDate":"2021-08-15"},{"lineNumber":172,"author":{"gitId":"luayida99"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":173,"author":{"gitId":"luayida99"},"content":"     * @param input String representation of user input.","lastModifiedDate":"2021-08-15"},{"lineNumber":174,"author":{"gitId":"luayida99"},"content":"     * @param taskList TaskList in which task is to be marked.","lastModifiedDate":"2021-08-15"},{"lineNumber":175,"author":{"gitId":"luayida99"},"content":"     * @throws DeleteIndexException Catches out of bounds task indexes and returns error.","lastModifiedDate":"2021-08-15"},{"lineNumber":176,"author":{"gitId":"luayida99"},"content":"     * @throws NoIndexException Catches no index input from user and returns error.","lastModifiedDate":"2021-08-15"},{"lineNumber":177,"author":{"gitId":"luayida99"},"content":"     * @throws TooManyIndexesException Catches too many index input from user and returns error.","lastModifiedDate":"2021-08-15"},{"lineNumber":178,"author":{"gitId":"luayida99"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":179,"author":{"gitId":"luayida99"},"content":"    private static void handleDelete(String input, TaskList taskList) throws DeleteIndexException, NoIndexException,","lastModifiedDate":"2021-08-15"},{"lineNumber":180,"author":{"gitId":"luayida99"},"content":"            TooManyIndexesException {","lastModifiedDate":"2021-08-15"},{"lineNumber":181,"author":{"gitId":"luayida99"},"content":"        if (input.split(\"\\\\s+\").length \u003d\u003d 2) {","lastModifiedDate":"2021-08-15"},{"lineNumber":182,"author":{"gitId":"luayida99"},"content":"            int taskNum \u003d tryIntParsing(input.split(\"\\\\s+\")[1]);","lastModifiedDate":"2021-08-15"},{"lineNumber":183,"author":{"gitId":"luayida99"},"content":"            if (taskNum \u003e taskList.length() || taskNum \u003c\u003d 0) {","lastModifiedDate":"2021-08-15"},{"lineNumber":184,"author":{"gitId":"luayida99"},"content":"                throw new DeleteIndexException();","lastModifiedDate":"2021-08-15"},{"lineNumber":185,"author":{"gitId":"luayida99"},"content":"            } else {","lastModifiedDate":"2021-08-15"},{"lineNumber":186,"author":{"gitId":"luayida99"},"content":"                printResponse(taskList.delete(taskNum - 1));","lastModifiedDate":"2021-08-15"},{"lineNumber":187,"author":{"gitId":"luayida99"},"content":"            }","lastModifiedDate":"2021-08-15"},{"lineNumber":188,"author":{"gitId":"luayida99"},"content":"        } else if (input.split(\"\\\\s+\").length \u003d\u003d 1) {","lastModifiedDate":"2021-08-15"},{"lineNumber":189,"author":{"gitId":"luayida99"},"content":"            throw new NoIndexException();","lastModifiedDate":"2021-08-15"},{"lineNumber":190,"author":{"gitId":"luayida99"},"content":"        } else {","lastModifiedDate":"2021-08-15"},{"lineNumber":191,"author":{"gitId":"luayida99"},"content":"            throw new TooManyIndexesException(\"delete\");","lastModifiedDate":"2021-08-15"},{"lineNumber":192,"author":{"gitId":"luayida99"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":193,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":194,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":195,"author":{"gitId":"luayida99"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":196,"author":{"gitId":"luayida99"},"content":"     * Helper to convert parsed command to COMMAND constant.","lastModifiedDate":"2021-08-18"},{"lineNumber":197,"author":{"gitId":"luayida99"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":198,"author":{"gitId":"luayida99"},"content":"     * @param command String representing command input.","lastModifiedDate":"2021-08-18"},{"lineNumber":199,"author":{"gitId":"luayida99"},"content":"     * @return COMMAND corresponding to String input.","lastModifiedDate":"2021-08-18"},{"lineNumber":200,"author":{"gitId":"luayida99"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":201,"author":{"gitId":"luayida99"},"content":"    private static COMMAND toCommand(String command) {","lastModifiedDate":"2021-08-18"},{"lineNumber":202,"author":{"gitId":"luayida99"},"content":"        switch (command) {","lastModifiedDate":"2021-08-18"},{"lineNumber":203,"author":{"gitId":"luayida99"},"content":"            case \"todo\":","lastModifiedDate":"2021-08-18"},{"lineNumber":204,"author":{"gitId":"luayida99"},"content":"                return COMMAND.TODO;","lastModifiedDate":"2021-08-18"},{"lineNumber":205,"author":{"gitId":"luayida99"},"content":"            case \"deadline\":","lastModifiedDate":"2021-08-18"},{"lineNumber":206,"author":{"gitId":"luayida99"},"content":"                return COMMAND.DEADLINE;","lastModifiedDate":"2021-08-18"},{"lineNumber":207,"author":{"gitId":"luayida99"},"content":"            case \"event\":","lastModifiedDate":"2021-08-18"},{"lineNumber":208,"author":{"gitId":"luayida99"},"content":"                return COMMAND.EVENT;","lastModifiedDate":"2021-08-18"},{"lineNumber":209,"author":{"gitId":"luayida99"},"content":"            case \"list\":","lastModifiedDate":"2021-08-18"},{"lineNumber":210,"author":{"gitId":"luayida99"},"content":"                return COMMAND.LIST;","lastModifiedDate":"2021-08-18"},{"lineNumber":211,"author":{"gitId":"luayida99"},"content":"            case \"done\":","lastModifiedDate":"2021-08-18"},{"lineNumber":212,"author":{"gitId":"luayida99"},"content":"                return COMMAND.DONE;","lastModifiedDate":"2021-08-18"},{"lineNumber":213,"author":{"gitId":"luayida99"},"content":"            case \"delete\":","lastModifiedDate":"2021-08-18"},{"lineNumber":214,"author":{"gitId":"luayida99"},"content":"                return COMMAND.DELETE;","lastModifiedDate":"2021-08-18"},{"lineNumber":215,"author":{"gitId":"luayida99"},"content":"            default:","lastModifiedDate":"2021-08-18"},{"lineNumber":216,"author":{"gitId":"luayida99"},"content":"                return COMMAND.INVALID;","lastModifiedDate":"2021-08-18"},{"lineNumber":217,"author":{"gitId":"luayida99"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":218,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":219,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":220,"author":{"gitId":"luayida99"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-14"},{"lineNumber":221,"author":{"gitId":"luayida99"},"content":"        printLogo();","lastModifiedDate":"2021-08-14"},{"lineNumber":222,"author":{"gitId":"luayida99"},"content":"        System.out.println(GREETING);","lastModifiedDate":"2021-08-14"},{"lineNumber":223,"author":{"gitId":"luayida99"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-08-14"},{"lineNumber":224,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":225,"author":{"gitId":"luayida99"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-14"},{"lineNumber":226,"author":{"gitId":"luayida99"},"content":"        String userInput \u003d scanner.nextLine();","lastModifiedDate":"2021-08-14"},{"lineNumber":227,"author":{"gitId":"luayida99"},"content":"        while (!userInput.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2021-08-14"},{"lineNumber":228,"author":{"gitId":"luayida99"},"content":"            COMMAND command \u003d toCommand(userInput.split(\"\\\\s+\")[0]);","lastModifiedDate":"2021-08-18"},{"lineNumber":229,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":230,"author":{"gitId":"luayida99"},"content":"            try {","lastModifiedDate":"2021-08-14"},{"lineNumber":231,"author":{"gitId":"luayida99"},"content":"                switch (command) {","lastModifiedDate":"2021-08-14"},{"lineNumber":232,"author":{"gitId":"luayida99"},"content":"                    case TODO:","lastModifiedDate":"2021-08-18"},{"lineNumber":233,"author":{"gitId":"luayida99"},"content":"                        addTask(userInput, tasks);","lastModifiedDate":"2021-08-14"},{"lineNumber":234,"author":{"gitId":"luayida99"},"content":"                        break;","lastModifiedDate":"2021-08-14"},{"lineNumber":235,"author":{"gitId":"luayida99"},"content":"                    case DEADLINE:","lastModifiedDate":"2021-08-18"},{"lineNumber":236,"author":{"gitId":"luayida99"},"content":"                        addDeadline(userInput, tasks);","lastModifiedDate":"2021-08-14"},{"lineNumber":237,"author":{"gitId":"luayida99"},"content":"                        break;","lastModifiedDate":"2021-08-14"},{"lineNumber":238,"author":{"gitId":"luayida99"},"content":"                    case EVENT:","lastModifiedDate":"2021-08-18"},{"lineNumber":239,"author":{"gitId":"luayida99"},"content":"                        addEvent(userInput, tasks);","lastModifiedDate":"2021-08-14"},{"lineNumber":240,"author":{"gitId":"luayida99"},"content":"                        break;","lastModifiedDate":"2021-08-14"},{"lineNumber":241,"author":{"gitId":"luayida99"},"content":"                    case LIST:","lastModifiedDate":"2021-08-18"},{"lineNumber":242,"author":{"gitId":"luayida99"},"content":"                        printResponse(tasks.toString());","lastModifiedDate":"2021-08-14"},{"lineNumber":243,"author":{"gitId":"luayida99"},"content":"                        break;","lastModifiedDate":"2021-08-14"},{"lineNumber":244,"author":{"gitId":"luayida99"},"content":"                    case DONE:","lastModifiedDate":"2021-08-18"},{"lineNumber":245,"author":{"gitId":"luayida99"},"content":"                        handleDone(userInput, tasks);","lastModifiedDate":"2021-08-15"},{"lineNumber":246,"author":{"gitId":"luayida99"},"content":"                        break;","lastModifiedDate":"2021-08-15"},{"lineNumber":247,"author":{"gitId":"luayida99"},"content":"                    case DELETE:","lastModifiedDate":"2021-08-18"},{"lineNumber":248,"author":{"gitId":"luayida99"},"content":"                        handleDelete(userInput, tasks);","lastModifiedDate":"2021-08-15"},{"lineNumber":249,"author":{"gitId":"luayida99"},"content":"                        break;","lastModifiedDate":"2021-08-14"},{"lineNumber":250,"author":{"gitId":"luayida99"},"content":"                    default:","lastModifiedDate":"2021-08-14"},{"lineNumber":251,"author":{"gitId":"luayida99"},"content":"                        throw new UnknownCommandException();","lastModifiedDate":"2021-08-14"},{"lineNumber":252,"author":{"gitId":"luayida99"},"content":"                }","lastModifiedDate":"2021-08-14"},{"lineNumber":253,"author":{"gitId":"luayida99"},"content":"            } catch (SideException e) {","lastModifiedDate":"2021-08-15"},{"lineNumber":254,"author":{"gitId":"luayida99"},"content":"                printResponse(e.getMessage());","lastModifiedDate":"2021-08-14"},{"lineNumber":255,"author":{"gitId":"luayida99"},"content":"            }","lastModifiedDate":"2021-08-14"},{"lineNumber":256,"author":{"gitId":"luayida99"},"content":"            userInput \u003d scanner.nextLine();","lastModifiedDate":"2021-08-14"},{"lineNumber":257,"author":{"gitId":"luayida99"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":258,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":259,"author":{"gitId":"luayida99"},"content":"        System.out.println(GOODBYE);","lastModifiedDate":"2021-08-14"},{"lineNumber":260,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":261,"author":{"gitId":"luayida99"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"luayida99":261}},{"path":"src/main/java/SideException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luayida99"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"luayida99"},"content":" * CS2103T Individual Project AY 21/22 Sem 1","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"luayida99"},"content":" * Project Duke: Incrementally building a Chatbot.","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"luayida99"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"luayida99"},"content":" * SideException encapsulates the errors specific to Side when it encounters runtime errors.","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"luayida99"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"luayida99"},"content":" * It contains the exceptions that are thrown due to wrong inputs given.","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"luayida99"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"luayida99"},"content":" * @author Lua Yi Da","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"luayida99"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"luayida99"},"content":"public class SideException extends RuntimeException {","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"luayida99"},"content":"    String message;","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"luayida99"},"content":"    public SideException(String message) {","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"luayida99"},"content":"        super(message);","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"luayida99"},"content":"        this.message \u003d message;","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"luayida99"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"luayida99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"luayida99"},"content":"        return this.message;","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"luayida99"},"content":"}","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"luayida99"},"content":"class UnknownCommandException extends SideException {","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"luayida99"},"content":"    public UnknownCommandException() {","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"luayida99"},"content":"        super(\"No such command, what a drag...\");","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"luayida99"},"content":"}","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"luayida99"},"content":"class WrongFormatException extends SideException {","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"luayida99"},"content":"    public WrongFormatException(String format) {","lastModifiedDate":"2021-08-14"},{"lineNumber":34,"author":{"gitId":"luayida99"},"content":"        super(\"Follow this format, don\u0027t make this worse:\\n  \" + format);","lastModifiedDate":"2021-08-14"},{"lineNumber":35,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":36,"author":{"gitId":"luayida99"},"content":"}","lastModifiedDate":"2021-08-14"},{"lineNumber":37,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":38,"author":{"gitId":"luayida99"},"content":"class TaskIndexException extends SideException {","lastModifiedDate":"2021-08-15"},{"lineNumber":39,"author":{"gitId":"luayida99"},"content":"    public TaskIndexException() {","lastModifiedDate":"2021-08-14"},{"lineNumber":40,"author":{"gitId":"luayida99"},"content":"        super(\"No such task, more energy wasted...\");","lastModifiedDate":"2021-08-14"},{"lineNumber":41,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":42,"author":{"gitId":"luayida99"},"content":"}","lastModifiedDate":"2021-08-14"},{"lineNumber":43,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":44,"author":{"gitId":"luayida99"},"content":"class DeleteIndexException extends SideException {","lastModifiedDate":"2021-08-15"},{"lineNumber":45,"author":{"gitId":"luayida99"},"content":"    public DeleteIndexException() {","lastModifiedDate":"2021-08-15"},{"lineNumber":46,"author":{"gitId":"luayida99"},"content":"        super(\"Can\u0027t delete what isn\u0027t there...\");","lastModifiedDate":"2021-08-15"},{"lineNumber":47,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":48,"author":{"gitId":"luayida99"},"content":"}","lastModifiedDate":"2021-08-15"},{"lineNumber":49,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":50,"author":{"gitId":"luayida99"},"content":"class NoIndexException extends SideException {","lastModifiedDate":"2021-08-15"},{"lineNumber":51,"author":{"gitId":"luayida99"},"content":"    public NoIndexException() {","lastModifiedDate":"2021-08-15"},{"lineNumber":52,"author":{"gitId":"luayida99"},"content":"        super(\"Can\u0027t do anything without task number...\");","lastModifiedDate":"2021-08-15"},{"lineNumber":53,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":54,"author":{"gitId":"luayida99"},"content":"}","lastModifiedDate":"2021-08-15"},{"lineNumber":55,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":56,"author":{"gitId":"luayida99"},"content":"class TooManyIndexesException extends SideException {","lastModifiedDate":"2021-08-15"},{"lineNumber":57,"author":{"gitId":"luayida99"},"content":"    public TooManyIndexesException(String input) {","lastModifiedDate":"2021-08-15"},{"lineNumber":58,"author":{"gitId":"luayida99"},"content":"        super(\"I only have 1 hand, I can only \" + input + \" 1 at a time...\");","lastModifiedDate":"2021-08-15"},{"lineNumber":59,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":60,"author":{"gitId":"luayida99"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"luayida99":60}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luayida99"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"luayida99"},"content":" * CS2103T Individual Project AY 21/22 Sem 1","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"luayida99"},"content":" * Project Duke: Incrementally building a Chatbot.","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"luayida99"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"luayida99"},"content":" * The Task class represents a task that has to be done, currently represented as a string.","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"luayida99"},"content":" * It encapsulates the following information:","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"luayida99"},"content":" * - description","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"luayida99"},"content":" * - time","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"luayida99"},"content":" * - isDone","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"luayida99"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"luayida99"},"content":" * @author Lua Yi Da","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"luayida99"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"luayida99"},"content":"public class Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"luayida99"},"content":"    protected String description;","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"luayida99"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"luayida99"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"luayida99"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"luayida99"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"luayida99"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"luayida99"},"content":"     * Marks a task as done.","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"luayida99"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"luayida99"},"content":"     * @return String response of Side in response to marking a task as done.","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"luayida99"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"luayida99"},"content":"    public String markAsDone() {","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"luayida99"},"content":"        if (!this.isDone) {","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"luayida99"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"luayida99"},"content":"            return \"Fine, I\u0027ll mark it for you: \" + this.toString();","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"luayida99"},"content":"        } else {","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"luayida99"},"content":"            return \"I\u0027m lazy, stop making me mark the same things again...\";","lastModifiedDate":"2021-08-14"},{"lineNumber":34,"author":{"gitId":"luayida99"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":35,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":36,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":37,"author":{"gitId":"luayida99"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":38,"author":{"gitId":"luayida99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":39,"author":{"gitId":"luayida99"},"content":"        StringBuilder taskLine \u003d new StringBuilder();","lastModifiedDate":"2021-08-14"},{"lineNumber":40,"author":{"gitId":"luayida99"},"content":"        if (this.isDone) {","lastModifiedDate":"2021-08-14"},{"lineNumber":41,"author":{"gitId":"luayida99"},"content":"            taskLine.append(\"[T][x]\");","lastModifiedDate":"2021-08-14"},{"lineNumber":42,"author":{"gitId":"luayida99"},"content":"        } else {","lastModifiedDate":"2021-08-14"},{"lineNumber":43,"author":{"gitId":"luayida99"},"content":"            taskLine.append(\"[T][ ]\");","lastModifiedDate":"2021-08-14"},{"lineNumber":44,"author":{"gitId":"luayida99"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":45,"author":{"gitId":"luayida99"},"content":"        taskLine.append(this.description.replaceFirst(\"todo\", \"\"));","lastModifiedDate":"2021-08-14"},{"lineNumber":46,"author":{"gitId":"luayida99"},"content":"        return taskLine.toString();","lastModifiedDate":"2021-08-14"},{"lineNumber":47,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":48,"author":{"gitId":"luayida99"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"luayida99":48}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luayida99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"luayida99"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"luayida99"},"content":" * CS2103T Individual Project AY 21/22 Sem 1","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"luayida99"},"content":" * Project Duke: Incrementally building a Chatbot.","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"luayida99"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"luayida99"},"content":" * The TaskList class provides a wrapper around an ArrayList of Tasks to encapsulate the list of tasks given to","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"luayida99"},"content":" * Side by its user. Supports add, delete and done operations on tasks in it.","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"luayida99"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"luayida99"},"content":" * @author Lua Yi Da","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"luayida99"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"luayida99"},"content":"public class TaskList {","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"luayida99"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"luayida99"},"content":"    private int taskLabel;","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"luayida99"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"luayida99"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"luayida99"},"content":"        this.taskLabel \u003d 0;","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"luayida99"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"luayida99"},"content":"     * Calculates the number of tasks in the TaskList.","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"luayida99"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"luayida99"},"content":"     * @return Number of tasks in TaskList.","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"luayida99"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"luayida99"},"content":"    public int length() {","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"luayida99"},"content":"        return this.tasks.size();","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"luayida99"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"luayida99"},"content":"     * Adds a task to the TaskList.","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"luayida99"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"luayida99"},"content":"     * @param description String representation of task information.","lastModifiedDate":"2021-08-15"},{"lineNumber":35,"author":{"gitId":"luayida99"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":36,"author":{"gitId":"luayida99"},"content":"    public void addTask(String description) {","lastModifiedDate":"2021-08-14"},{"lineNumber":37,"author":{"gitId":"luayida99"},"content":"        Task task \u003d new Task(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":38,"author":{"gitId":"luayida99"},"content":"        this.tasks.add(task);","lastModifiedDate":"2021-08-14"},{"lineNumber":39,"author":{"gitId":"luayida99"},"content":"        taskLabel++;","lastModifiedDate":"2021-08-14"},{"lineNumber":40,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":41,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":42,"author":{"gitId":"luayida99"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":43,"author":{"gitId":"luayida99"},"content":"     * Adds an event to the TaskList.","lastModifiedDate":"2021-08-15"},{"lineNumber":44,"author":{"gitId":"luayida99"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":45,"author":{"gitId":"luayida99"},"content":"     * @param description String representation of event information.","lastModifiedDate":"2021-08-15"},{"lineNumber":46,"author":{"gitId":"luayida99"},"content":"     * @param time Time at which the event happens.","lastModifiedDate":"2021-08-15"},{"lineNumber":47,"author":{"gitId":"luayida99"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":48,"author":{"gitId":"luayida99"},"content":"    public void addEvent(String description, String time) {","lastModifiedDate":"2021-08-14"},{"lineNumber":49,"author":{"gitId":"luayida99"},"content":"        Event event \u003d new Event(description, time);","lastModifiedDate":"2021-08-14"},{"lineNumber":50,"author":{"gitId":"luayida99"},"content":"        this.tasks.add(event);","lastModifiedDate":"2021-08-14"},{"lineNumber":51,"author":{"gitId":"luayida99"},"content":"        taskLabel++;","lastModifiedDate":"2021-08-14"},{"lineNumber":52,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":53,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":54,"author":{"gitId":"luayida99"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":55,"author":{"gitId":"luayida99"},"content":"     * Adds a deadline to the TaskList.","lastModifiedDate":"2021-08-15"},{"lineNumber":56,"author":{"gitId":"luayida99"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":57,"author":{"gitId":"luayida99"},"content":"     * @param description String representation of deadline information.","lastModifiedDate":"2021-08-15"},{"lineNumber":58,"author":{"gitId":"luayida99"},"content":"     * @param time Time at which the deadline elapses.","lastModifiedDate":"2021-08-15"},{"lineNumber":59,"author":{"gitId":"luayida99"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":60,"author":{"gitId":"luayida99"},"content":"    public void addDeadline(String description, String time) {","lastModifiedDate":"2021-08-14"},{"lineNumber":61,"author":{"gitId":"luayida99"},"content":"        Deadline event \u003d new Deadline(description, time);","lastModifiedDate":"2021-08-14"},{"lineNumber":62,"author":{"gitId":"luayida99"},"content":"        this.tasks.add(event);","lastModifiedDate":"2021-08-14"},{"lineNumber":63,"author":{"gitId":"luayida99"},"content":"        taskLabel++;","lastModifiedDate":"2021-08-14"},{"lineNumber":64,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":65,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":66,"author":{"gitId":"luayida99"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":67,"author":{"gitId":"luayida99"},"content":"     * Marks a task as done.","lastModifiedDate":"2021-08-15"},{"lineNumber":68,"author":{"gitId":"luayida99"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":69,"author":{"gitId":"luayida99"},"content":"     * @param index Index of task to be marked as done.","lastModifiedDate":"2021-08-15"},{"lineNumber":70,"author":{"gitId":"luayida99"},"content":"     * @return String response of Side in response to marking task as done.","lastModifiedDate":"2021-08-15"},{"lineNumber":71,"author":{"gitId":"luayida99"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":72,"author":{"gitId":"luayida99"},"content":"    public String markTaskDone(int index) {","lastModifiedDate":"2021-08-15"},{"lineNumber":73,"author":{"gitId":"luayida99"},"content":"        return tasks.get(index).markAsDone();","lastModifiedDate":"2021-08-15"},{"lineNumber":74,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":75,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":76,"author":{"gitId":"luayida99"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":77,"author":{"gitId":"luayida99"},"content":"     * Deletes a task from the TaskList.","lastModifiedDate":"2021-08-15"},{"lineNumber":78,"author":{"gitId":"luayida99"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":79,"author":{"gitId":"luayida99"},"content":"     * @param index Index of task to be removed.","lastModifiedDate":"2021-08-15"},{"lineNumber":80,"author":{"gitId":"luayida99"},"content":"     * @return String response of Side in response to deleting task.","lastModifiedDate":"2021-08-15"},{"lineNumber":81,"author":{"gitId":"luayida99"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":82,"author":{"gitId":"luayida99"},"content":"    public String delete(int index) {","lastModifiedDate":"2021-08-15"},{"lineNumber":83,"author":{"gitId":"luayida99"},"content":"        Task taskToDelete \u003d this.tasks.get(index);","lastModifiedDate":"2021-08-15"},{"lineNumber":84,"author":{"gitId":"luayida99"},"content":"        this.tasks.remove(index);","lastModifiedDate":"2021-08-15"},{"lineNumber":85,"author":{"gitId":"luayida99"},"content":"        taskLabel--;","lastModifiedDate":"2021-08-15"},{"lineNumber":86,"author":{"gitId":"luayida99"},"content":"        String taskQuantifier \u003d this.tasks.size() \u003d\u003d 1 ? \"task...\" : \"tasks...\";","lastModifiedDate":"2021-08-15"},{"lineNumber":87,"author":{"gitId":"luayida99"},"content":"        String taskCount \u003d \"\\nYou now have \" + tasks.size() + \" \" + taskQuantifier;","lastModifiedDate":"2021-08-15"},{"lineNumber":88,"author":{"gitId":"luayida99"},"content":"        return \"Fine, I\u0027ll delete: \" + taskToDelete.toString() + taskCount;","lastModifiedDate":"2021-08-15"},{"lineNumber":89,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":90,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":91,"author":{"gitId":"luayida99"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":92,"author":{"gitId":"luayida99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":93,"author":{"gitId":"luayida99"},"content":"        StringBuilder tasksList \u003d new StringBuilder();","lastModifiedDate":"2021-08-14"},{"lineNumber":94,"author":{"gitId":"luayida99"},"content":"        if (this.taskLabel \u003d\u003d 0) {","lastModifiedDate":"2021-08-14"},{"lineNumber":95,"author":{"gitId":"luayida99"},"content":"            return \"No tasks yet, stop checking...\";","lastModifiedDate":"2021-08-14"},{"lineNumber":96,"author":{"gitId":"luayida99"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":97,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":98,"author":{"gitId":"luayida99"},"content":"        for (int i \u003d 0; i \u003c this.taskLabel; i++) {","lastModifiedDate":"2021-08-14"},{"lineNumber":99,"author":{"gitId":"luayida99"},"content":"            String fullTaskLine \u003d (i + 1) + \". \" + this.tasks.get(i).toString() + \"\\n\";","lastModifiedDate":"2021-08-14"},{"lineNumber":100,"author":{"gitId":"luayida99"},"content":"            tasksList.append(fullTaskLine);","lastModifiedDate":"2021-08-14"},{"lineNumber":101,"author":{"gitId":"luayida99"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":102,"author":{"gitId":"luayida99"},"content":"        return \"Fine, here are your tasks: \\n\" + tasksList.toString();","lastModifiedDate":"2021-08-14"},{"lineNumber":103,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":104,"author":{"gitId":"luayida99"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"luayida99":104}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"luayida99"},"content":"todo borrow book","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"luayida99"},"content":"todo","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"luayida99"},"content":"event birthday party /at Mon 5pm","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"luayida99"},"content":"event","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"luayida99"},"content":"deadline assignment 1 /by Tues 4pm","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"luayida99"},"content":"deadline","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"luayida99"},"content":"done 4","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"luayida99"},"content":"done 1","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"luayida99"},"content":"done 2","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"luayida99"},"content":"done 3","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"luayida99"},"content":"delete 4","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"luayida99"},"content":"delete 1","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"luayida99"},"content":"delete 1","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"luayida99"},"content":"delete 1","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"luayida99"},"content":"bye","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"luayida99":15}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"luayida99"},"content":"java -classpath ..\\bin Side \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"luayida99":1,"-":20}}]
