[{"path":"src/main/java/side/Side.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luayida99"},"content":"package side;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"luayida99"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"luayida99"},"content":"import side.exception.UnknownCommandException;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"luayida99"},"content":"import side.util.Ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"luayida99"},"content":"import side.util.TaskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"luayida99"},"content":"import side.util.Parser;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"luayida99"},"content":"import side.exception.SideException;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"luayida99"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"luayida99"},"content":" * Side contains logic for prompting user for input and directing flow of commands.","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"luayida99"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"luayida99"},"content":" * On running the program, Side greets the user and awaits for inputted commands:","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"luayida99"},"content":" *   - \u0027todo x\u0027 -\u003e adds a Task of x with no date/time attached","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"luayida99"},"content":" *   - \u0027deadline x /by y\u0027 -\u003e adds Deadline of x that needs to be done by y","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"luayida99"},"content":" *   - \u0027event x /at y /to z\u0027 -\u003e adds an Event of x that starts at datetime y and ends on datetime z","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"luayida99"},"content":" *   - \u0027list\u0027 -\u003e displays current list of tasks","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"luayida99"},"content":" *   - \u0027done x\u0027 -\u003e marks Task x as done","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"luayida99"},"content":" *   - \u0027delete x\u0027 -\u003e deletes Task x from the task list","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"luayida99"},"content":" *   - \u0027find x\u0027 -\u003e returns tasks with description matching x","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"luayida99"},"content":" *   - \u0027bye\u0027 -\u003e exits the program","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"luayida99"},"content":" *   - Other input patterns throw exceptions","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"luayida99"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"luayida99"},"content":" * @author Lua Yi Da","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"luayida99"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"luayida99"},"content":"public class Side {","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"luayida99"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"luayida99"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"luayida99"},"content":"    private Scanner scanner;","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":34,"author":{"gitId":"luayida99"},"content":"    public Side() {","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"luayida99"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"luayida99"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"luayida99"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":39,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":40,"author":{"gitId":"luayida99"},"content":"    private void run() {","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"luayida99"},"content":"        ui.greet();","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"luayida99"},"content":"        String history \u003d tasks.retrieve();","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"luayida99"},"content":"        ui.printResponse(history);","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":45,"author":{"gitId":"luayida99"},"content":"        String userInput \u003d scanner.nextLine();","lastModifiedDate":"2021-08-14"},{"lineNumber":46,"author":{"gitId":"luayida99"},"content":"        while (!userInput.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2021-08-14"},{"lineNumber":47,"author":{"gitId":"luayida99"},"content":"            Parser.COMMAND command \u003d Parser.toCommand(userInput.split(\"\\\\s+\")[0]);","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":49,"author":{"gitId":"luayida99"},"content":"            try {","lastModifiedDate":"2021-08-14"},{"lineNumber":50,"author":{"gitId":"luayida99"},"content":"                switch (command) {","lastModifiedDate":"2021-08-14"},{"lineNumber":51,"author":{"gitId":"luayida99"},"content":"                case TODO:","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"luayida99"},"content":"                    ui.addTask(userInput, tasks);","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"luayida99"},"content":"                    break;","lastModifiedDate":"2021-08-14"},{"lineNumber":54,"author":{"gitId":"luayida99"},"content":"                case DEADLINE:","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"luayida99"},"content":"                    ui.addDeadline(userInput, tasks);","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"luayida99"},"content":"                    break;","lastModifiedDate":"2021-08-14"},{"lineNumber":57,"author":{"gitId":"luayida99"},"content":"                case EVENT:","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"luayida99"},"content":"                    ui.addEvent(userInput, tasks);","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"luayida99"},"content":"                    break;","lastModifiedDate":"2021-08-14"},{"lineNumber":60,"author":{"gitId":"luayida99"},"content":"                case LIST:","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"luayida99"},"content":"                    ui.printResponse(tasks.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"luayida99"},"content":"                    break;","lastModifiedDate":"2021-08-14"},{"lineNumber":63,"author":{"gitId":"luayida99"},"content":"                case DONE:","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"luayida99"},"content":"                    ui.handleDone(userInput, tasks);","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"luayida99"},"content":"                    break;","lastModifiedDate":"2021-08-15"},{"lineNumber":66,"author":{"gitId":"luayida99"},"content":"                case DELETE:","lastModifiedDate":"2021-08-18"},{"lineNumber":67,"author":{"gitId":"luayida99"},"content":"                    ui.handleDelete(userInput, tasks);","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"luayida99"},"content":"                    break;","lastModifiedDate":"2021-08-14"},{"lineNumber":69,"author":{"gitId":"luayida99"},"content":"                case FIND:","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"luayida99"},"content":"                    ui.handleFind(userInput, tasks);","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"luayida99"},"content":"                    break;","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"luayida99"},"content":"                default:","lastModifiedDate":"2021-08-14"},{"lineNumber":73,"author":{"gitId":"luayida99"},"content":"                    throw new UnknownCommandException();","lastModifiedDate":"2021-08-14"},{"lineNumber":74,"author":{"gitId":"luayida99"},"content":"                }","lastModifiedDate":"2021-08-14"},{"lineNumber":75,"author":{"gitId":"luayida99"},"content":"            } catch (SideException e) {","lastModifiedDate":"2021-08-15"},{"lineNumber":76,"author":{"gitId":"luayida99"},"content":"                ui.printResponse(e.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"luayida99"},"content":"            }","lastModifiedDate":"2021-08-14"},{"lineNumber":78,"author":{"gitId":"luayida99"},"content":"            userInput \u003d scanner.nextLine();","lastModifiedDate":"2021-08-14"},{"lineNumber":79,"author":{"gitId":"luayida99"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":80,"author":{"gitId":"luayida99"},"content":"        tasks.save();","lastModifiedDate":"2021-08-21"},{"lineNumber":81,"author":{"gitId":"luayida99"},"content":"        ui.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"luayida99"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"luayida99"},"content":"        new Side().run();","lastModifiedDate":"2021-08-22"},{"lineNumber":86,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":87,"author":{"gitId":"luayida99"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"luayida99":87}},{"path":"src/main/java/side/exception/DeleteIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luayida99"},"content":"package side.exception;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"luayida99"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"luayida99"},"content":" * DeleteIndexException is thrown when user attempts to delete a task without a valid index.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"luayida99"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"luayida99"},"content":" * @author Lua Yi Da","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"luayida99"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"luayida99"},"content":"public class DeleteIndexException extends SideException {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"luayida99"},"content":"    public DeleteIndexException() {","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"luayida99"},"content":"        super(\"Can\u0027t delete what isn\u0027t there...\");","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"luayida99"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"luayida99":14}},{"path":"src/main/java/side/exception/NoIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luayida99"},"content":"package side.exception;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"luayida99"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"luayida99"},"content":" * NoIndexException is thrown when user attempts to carry out an action requiring index without a index.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"luayida99"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"luayida99"},"content":" * @author Lua Yi Da","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"luayida99"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"luayida99"},"content":"public class NoIndexException extends SideException {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"luayida99"},"content":"    public NoIndexException() {","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"luayida99"},"content":"        super(\"Can\u0027t do anything without task number...\");","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"luayida99"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"luayida99":14}},{"path":"src/main/java/side/exception/SideException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luayida99"},"content":"package side.exception;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"luayida99"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"luayida99"},"content":" * SideException encapsulates the errors specific to Side when it encounters runtime errors.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"luayida99"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"luayida99"},"content":" * It contains the exceptions that are thrown due to wrong inputs given.","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"luayida99"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"luayida99"},"content":" * @author Lua Yi Da","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"luayida99"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"luayida99"},"content":"public class SideException extends RuntimeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"luayida99"},"content":"    String message;","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"luayida99"},"content":"    public SideException(String message) {","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"luayida99"},"content":"        super(message);","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"luayida99"},"content":"        this.message \u003d message;","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"luayida99"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"luayida99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"luayida99"},"content":"        return this.message;","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"luayida99"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"luayida99":24}},{"path":"src/main/java/side/exception/TaskIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luayida99"},"content":"package side.exception;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"luayida99"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"luayida99"},"content":" * TaskIndexException is thrown when user attempts to do a task requiring index without a valid index.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"luayida99"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"luayida99"},"content":" * @author Lua Yi Da","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"luayida99"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"luayida99"},"content":"public class TaskIndexException extends SideException {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"luayida99"},"content":"    public TaskIndexException() {","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"luayida99"},"content":"        super(\"No such task, more energy wasted...\");","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"luayida99"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"luayida99":14}},{"path":"src/main/java/side/exception/TooManyIndexesException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luayida99"},"content":"package side.exception;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"luayida99"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"luayida99"},"content":" * TooManyIndexesException is thrown when user attempts to carry out an action requiring index with too many indexes.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"luayida99"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"luayida99"},"content":" * @author Lua Yi Da","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"luayida99"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"luayida99"},"content":"public class TooManyIndexesException extends SideException {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"luayida99"},"content":"    public TooManyIndexesException(String input) {","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"luayida99"},"content":"        super(\"I only have 1 hand, I can only \" + input + \" 1 at a time...\");","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"luayida99"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"luayida99":14}},{"path":"src/main/java/side/exception/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luayida99"},"content":"package side.exception;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"luayida99"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"luayida99"},"content":" * UnknownCommandException is thrown when Side is given an invalid command.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"luayida99"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"luayida99"},"content":" * @author Lua Yi Da","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"luayida99"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"luayida99"},"content":"public class UnknownCommandException extends SideException {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"luayida99"},"content":"    public UnknownCommandException() {","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"luayida99"},"content":"        super(\"No such command, what a drag...\");","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"luayida99"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"luayida99":14}},{"path":"src/main/java/side/exception/WrongDatetimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luayida99"},"content":"package side.exception;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"luayida99"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"luayida99"},"content":" * WrongDatetimeException is thrown when user attempts to do enter an invalid datetime format.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"luayida99"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"luayida99"},"content":" * @author Lua Yi Da","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"luayida99"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"luayida99"},"content":"public class WrongDatetimeException extends SideException {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"luayida99"},"content":"    public WrongDatetimeException() {","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"luayida99"},"content":"        super(\"Wrong datetime format...\\n\" +","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"luayida99"},"content":"                \"Use [YYYY-MM-DD] or [YYYY-MM-DD], [HHMM]\");","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"luayida99"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"luayida99":15}},{"path":"src/main/java/side/exception/WrongFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luayida99"},"content":"package side.exception;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"luayida99"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"luayida99"},"content":" * WrongFormatException is thrown when user inputs command in a wrong format.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"luayida99"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"luayida99"},"content":" * @author Lua Yi Da","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"luayida99"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"luayida99"},"content":"public class WrongFormatException extends SideException {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"luayida99"},"content":"    public WrongFormatException(String format) {","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"luayida99"},"content":"        super(\"Follow this format, don\u0027t make this worse:\\n\" + format);","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"luayida99"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"luayida99":14}},{"path":"src/main/java/side/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luayida99"},"content":"package side.tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"luayida99"},"content":"import side.util.DateTime;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"luayida99"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"luayida99"},"content":" * The Deadline class represents a task that has to be done before a specified time.","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"luayida99"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"luayida99"},"content":" * It encapsulates the following information:","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"luayida99"},"content":" * - description","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"luayida99"},"content":" * - time","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"luayida99"},"content":" * - isDone","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"luayida99"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"luayida99"},"content":" * @author Lua Yi Da","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"luayida99"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"luayida99"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"luayida99"},"content":"    private DateTime datetime;","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"luayida99"},"content":"    public Deadline(String description, String datetimeInput) {","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"luayida99"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"luayida99"},"content":"        String[] datetime \u003d datetimeInput.trim().split(\", \", 2);","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"luayida99"},"content":"        if (datetime.length \u003d\u003d 2) {","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"luayida99"},"content":"            this.datetime \u003d new DateTime(datetime[0], datetime[1]);","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"luayida99"},"content":"        } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"luayida99"},"content":"            this.datetime \u003d new DateTime(datetime[0]);","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"luayida99"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"luayida99"},"content":"    public DateTime getDatetime() {","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"luayida99"},"content":"        return this.datetime;","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"luayida99"},"content":"    public Deadline(String description, String datetimeInput, Boolean isDone) {","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"luayida99"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"luayida99"},"content":"        String[] datetime \u003d datetimeInput.split(\", \", 2);","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"luayida99"},"content":"        if (datetime.length \u003d\u003d 2)","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"luayida99"},"content":"            this.datetime \u003d new DateTime(datetime[0], datetime[1]);","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"luayida99"},"content":"        else","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"luayida99"},"content":"            this.datetime \u003d new DateTime(datetime[0]);","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":44,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":45,"author":{"gitId":"luayida99"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":46,"author":{"gitId":"luayida99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":47,"author":{"gitId":"luayida99"},"content":"        StringBuilder deadlineLine \u003d new StringBuilder();","lastModifiedDate":"2021-08-14"},{"lineNumber":48,"author":{"gitId":"luayida99"},"content":"        if (this.isDone) {","lastModifiedDate":"2021-08-14"},{"lineNumber":49,"author":{"gitId":"luayida99"},"content":"            deadlineLine.append(\"[D][x] \");","lastModifiedDate":"2021-08-14"},{"lineNumber":50,"author":{"gitId":"luayida99"},"content":"        } else {","lastModifiedDate":"2021-08-14"},{"lineNumber":51,"author":{"gitId":"luayida99"},"content":"            deadlineLine.append(\"[D][ ] \");","lastModifiedDate":"2021-08-14"},{"lineNumber":52,"author":{"gitId":"luayida99"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":53,"author":{"gitId":"luayida99"},"content":"        String deadlineDetails \u003d this.description.replaceFirst(\"deadline\", \"\") +","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"luayida99"},"content":"                \"(by: \" + this.datetime + \")\";","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"luayida99"},"content":"        deadlineLine.append(deadlineDetails);","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"luayida99"},"content":"        return deadlineLine.toString();","lastModifiedDate":"2021-08-14"},{"lineNumber":57,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":58,"author":{"gitId":"luayida99"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"luayida99":58}},{"path":"src/main/java/side/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luayida99"},"content":"package side.tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"luayida99"},"content":"import side.util.DateTime;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"luayida99"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"luayida99"},"content":" * The Event class represents a task that has to be done at a specified time.","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"luayida99"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"luayida99"},"content":" * It encapsulates the following information:","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"luayida99"},"content":" * - description","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"luayida99"},"content":" * - time","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"luayida99"},"content":" * - isDone","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"luayida99"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"luayida99"},"content":" * @author Lua Yi Da","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"luayida99"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"luayida99"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"luayida99"},"content":"    private DateTime startDatetime, endDatetime;","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"luayida99"},"content":"    public Event(String description, String startInput, String endInput) {","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"luayida99"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"luayida99"},"content":"        String[] startDatetimeArr \u003d startInput.split(\"\\\\s+\");","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"luayida99"},"content":"        String[] endDatetimeArr \u003d endInput.split(\"\\\\s+\");","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"luayida99"},"content":"        if (startDatetimeArr.length \u003d\u003d 2 \u0026\u0026 endDatetimeArr.length \u003d\u003d 2) {","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"luayida99"},"content":"            this.startDatetime \u003d new DateTime(startDatetimeArr[0].replace(\",\",\"\")","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"luayida99"},"content":"                    , startDatetimeArr[1].replace(\",\",\"\"));","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"luayida99"},"content":"            this.endDatetime \u003d new DateTime(endDatetimeArr[0].replace(\",\",\"\")","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"luayida99"},"content":"                    , endDatetimeArr[1].replace(\",\",\"\"));","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"luayida99"},"content":"        } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"luayida99"},"content":"            this.startDatetime \u003d new DateTime(startDatetimeArr[0]);","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"luayida99"},"content":"            this.endDatetime \u003d new DateTime(endDatetimeArr[0]);","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"luayida99"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"luayida99"},"content":"    public Event(String description, String[] datetimeInputArr, Boolean isDone) {","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"luayida99"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"luayida99"},"content":"        String[] startDatetimeArr \u003d datetimeInputArr[0].split(\", \");","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"luayida99"},"content":"        String[] endDatetimeArr \u003d datetimeInputArr[1].split(\", \");","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"luayida99"},"content":"        if (startDatetimeArr.length \u003d\u003d 2 \u0026\u0026 endDatetimeArr.length \u003d\u003d 2) {","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"luayida99"},"content":"            this.startDatetime \u003d new DateTime(startDatetimeArr[0], startDatetimeArr[1]);","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"luayida99"},"content":"            this.endDatetime \u003d new DateTime(endDatetimeArr[0], endDatetimeArr[1]);","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"luayida99"},"content":"        } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"luayida99"},"content":"            this.startDatetime \u003d new DateTime(startDatetimeArr[0]);","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"luayida99"},"content":"            this.endDatetime \u003d new DateTime(endDatetimeArr[0]);","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"luayida99"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":50,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":51,"author":{"gitId":"luayida99"},"content":"    public DateTime getStartDatetime() {","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"luayida99"},"content":"        return this.startDatetime;","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"luayida99"},"content":"    public DateTime getEndDatetime() {","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"luayida99"},"content":"        return this.startDatetime;","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"luayida99"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":60,"author":{"gitId":"luayida99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":61,"author":{"gitId":"luayida99"},"content":"        StringBuilder deadlineLine \u003d new StringBuilder();","lastModifiedDate":"2021-08-14"},{"lineNumber":62,"author":{"gitId":"luayida99"},"content":"        if (this.isDone) {","lastModifiedDate":"2021-08-14"},{"lineNumber":63,"author":{"gitId":"luayida99"},"content":"            deadlineLine.append(\"[E][x] \");","lastModifiedDate":"2021-08-14"},{"lineNumber":64,"author":{"gitId":"luayida99"},"content":"        } else {","lastModifiedDate":"2021-08-14"},{"lineNumber":65,"author":{"gitId":"luayida99"},"content":"            deadlineLine.append(\"[E][ ] \");","lastModifiedDate":"2021-08-14"},{"lineNumber":66,"author":{"gitId":"luayida99"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":67,"author":{"gitId":"luayida99"},"content":"        String deadlineDetails \u003d this.description.replaceFirst(\"event\", \"\") +","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"luayida99"},"content":"                \"(at: \" + this.startDatetime + \" to \" + this.endDatetime + \")\";","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"luayida99"},"content":"        deadlineLine.append(deadlineDetails);","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"luayida99"},"content":"        return deadlineLine.toString();","lastModifiedDate":"2021-08-14"},{"lineNumber":71,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":72,"author":{"gitId":"luayida99"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"luayida99":72}},{"path":"src/main/java/side/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luayida99"},"content":"package side.tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"luayida99"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"luayida99"},"content":" * The Task class represents a task that has to be done.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"luayida99"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"luayida99"},"content":" * It encapsulates the following information:","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"luayida99"},"content":" * - description","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"luayida99"},"content":" * - time","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"luayida99"},"content":" * - isDone","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"luayida99"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"luayida99"},"content":" * @author Lua Yi Da","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"luayida99"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"luayida99"},"content":"public class Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"luayida99"},"content":"    protected String description;","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"luayida99"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"luayida99"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"luayida99"},"content":"        this.description \u003d description.trim() + \" \";","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"luayida99"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"luayida99"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"luayida99"},"content":"        this.description \u003d description.trim() + \" \";","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"luayida99"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"luayida99"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"luayida99"},"content":"        return this.description;","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"luayida99"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"luayida99"},"content":"        return this.isDone;","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"luayida99"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":38,"author":{"gitId":"luayida99"},"content":"     * Marks a task as done.","lastModifiedDate":"2021-08-15"},{"lineNumber":39,"author":{"gitId":"luayida99"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":40,"author":{"gitId":"luayida99"},"content":"     * @return String response of Side in response to marking a task as done.","lastModifiedDate":"2021-08-15"},{"lineNumber":41,"author":{"gitId":"luayida99"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":42,"author":{"gitId":"luayida99"},"content":"    public String markAsDone() {","lastModifiedDate":"2021-08-14"},{"lineNumber":43,"author":{"gitId":"luayida99"},"content":"        if (!this.isDone) {","lastModifiedDate":"2021-08-14"},{"lineNumber":44,"author":{"gitId":"luayida99"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2021-08-14"},{"lineNumber":45,"author":{"gitId":"luayida99"},"content":"            return \"Fine, I\u0027ll mark it for you: \" + this.toString();","lastModifiedDate":"2021-08-14"},{"lineNumber":46,"author":{"gitId":"luayida99"},"content":"        } else {","lastModifiedDate":"2021-08-14"},{"lineNumber":47,"author":{"gitId":"luayida99"},"content":"            return \"I\u0027m lazy, stop making me mark the same things again...\";","lastModifiedDate":"2021-08-14"},{"lineNumber":48,"author":{"gitId":"luayida99"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":49,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":50,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":51,"author":{"gitId":"luayida99"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":52,"author":{"gitId":"luayida99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":53,"author":{"gitId":"luayida99"},"content":"        StringBuilder taskLine \u003d new StringBuilder();","lastModifiedDate":"2021-08-14"},{"lineNumber":54,"author":{"gitId":"luayida99"},"content":"        if (this.isDone) {","lastModifiedDate":"2021-08-14"},{"lineNumber":55,"author":{"gitId":"luayida99"},"content":"            taskLine.append(\"[T][x]\");","lastModifiedDate":"2021-08-14"},{"lineNumber":56,"author":{"gitId":"luayida99"},"content":"        } else {","lastModifiedDate":"2021-08-14"},{"lineNumber":57,"author":{"gitId":"luayida99"},"content":"            taskLine.append(\"[T][ ]\");","lastModifiedDate":"2021-08-14"},{"lineNumber":58,"author":{"gitId":"luayida99"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":59,"author":{"gitId":"luayida99"},"content":"        taskLine.append(this.description.replaceFirst(\"todo\", \"\"));","lastModifiedDate":"2021-08-14"},{"lineNumber":60,"author":{"gitId":"luayida99"},"content":"        return taskLine.toString();","lastModifiedDate":"2021-08-14"},{"lineNumber":61,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":62,"author":{"gitId":"luayida99"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"luayida99":62}},{"path":"src/main/java/side/util/DateTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luayida99"},"content":"package side.util;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"luayida99"},"content":"import side.exception.WrongDatetimeException;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"luayida99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"luayida99"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"luayida99"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"luayida99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"luayida99"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"luayida99"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"luayida99"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"luayida99"},"content":" * DateTime is used to encapsulate the time and date for tasks, and corresponding conversion from string to","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"luayida99"},"content":" * [yyyy-MM-dd] and [HHmm].","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"luayida99"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"luayida99"},"content":" * It encapsulates the following information:","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"luayida99"},"content":" * - localDate","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"luayida99"},"content":" * - localTime","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"luayida99"},"content":" * - localDateTime","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"luayida99"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"luayida99"},"content":" * @author Lua Yi Da","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"luayida99"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"luayida99"},"content":"public class DateTime {","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"luayida99"},"content":"    private LocalDate localDate;","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"luayida99"},"content":"    private LocalTime localTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"luayida99"},"content":"    private LocalDateTime localDateTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"luayida99"},"content":"    public DateTime(String date) {","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"luayida99"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"luayida99"},"content":"            this.localDate \u003d LocalDate.parse(date);","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"luayida99"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"luayida99"},"content":"            throw new WrongDatetimeException();","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"luayida99"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"luayida99"},"content":"        this.localTime \u003d null;","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"luayida99"},"content":"        this.localDateTime \u003d null;","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"luayida99"},"content":"    public DateTime(String date, String time) {","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"luayida99"},"content":"        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"luayida99"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"luayida99"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"luayida99"},"content":"            this.localDate \u003d LocalDate.parse(date, dateFormatter);","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"luayida99"},"content":"            this.localTime \u003d LocalTime.parse(time, timeFormatter);","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"luayida99"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"luayida99"},"content":"            throw new WrongDatetimeException();","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"luayida99"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"luayida99"},"content":"        this.localDateTime \u003d localDate.atTime(localTime);","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"luayida99"},"content":"    public String getDatetime() {","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"luayida99"},"content":"        if (localDateTime !\u003d null) {","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"luayida99"},"content":"            return DateTimeFormatter.ofLocalizedDateTime(FormatStyle.MEDIUM).format(localDateTime);","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"luayida99"},"content":"        } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"luayida99"},"content":"            return DateTimeFormatter.ofLocalizedDate(FormatStyle.MEDIUM).format(localDate);","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"luayida99"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"luayida99"},"content":"    public String saveDatetime() {","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"luayida99"},"content":"        if (localDateTime !\u003d null) {","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"luayida99"},"content":"            return DateTimeFormatter.ofPattern(\"yyyy-MM-dd, HHmm\").format(localDateTime);","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"luayida99"},"content":"        } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"luayida99"},"content":"            return DateTimeFormatter.ofPattern(\"yyyy-MM-dd\").format(localDate);","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"luayida99"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"luayida99"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"luayida99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"luayida99"},"content":"        return this.getDatetime();","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"luayida99"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"luayida99":74}},{"path":"src/main/java/side/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luayida99"},"content":"package side.util;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"luayida99"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"luayida99"},"content":" * Parser is used to encapsulate operations for parsing user input and translating it to corresponding commands.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"luayida99"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"luayida99"},"content":" * @author Lua Yi Da","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"luayida99"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"luayida99"},"content":"public class Parser {","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"luayida99"},"content":"    public Parser() {}","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"luayida99"},"content":"    public enum COMMAND { TODO, DEADLINE, EVENT, LIST, DONE, DELETE, INVALID, FIND }","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"luayida99"},"content":"    private static String findDatetime(String input, String argument) {","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"luayida99"},"content":"        int argumentIndex \u003d input.lastIndexOf(argument);","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"luayida99"},"content":"        String output \u003d input.substring(argumentIndex + argument.length());","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"luayida99"},"content":"        if (output.replaceAll(\"\\\\s\", \"\").length() \u003c 1) {","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"luayida99"},"content":"            return null;","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"luayida99"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"luayida99"},"content":"        return output.trim();","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"luayida99"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"luayida99"},"content":"     * Helper method to find corresponding datetime for deadline commands.","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"luayida99"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"luayida99"},"content":"     * @param input String representing user input.","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"luayida99"},"content":"     * @return String of datetime.","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"luayida99"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"luayida99"},"content":"    public String findDeadlineDatetime(String input) {","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"luayida99"},"content":"        return findDatetime(input, \"/by\");","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"luayida99"},"content":"    public String[] findEventDatetime(String input) {","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"luayida99"},"content":"        String output \u003d input;","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"luayida99"},"content":"        if (input.contains(\"/at\")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"luayida99"},"content":"            output \u003d findDatetime(input, \"/at\");","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"luayida99"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"luayida99"},"content":"        if (output !\u003d null) {","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"luayida99"},"content":"            String[] outputArr \u003d output.trim().split(\"/to\");","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"luayida99"},"content":"            for (int i \u003d 0; i \u003c outputArr.length; i++) {","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"luayida99"},"content":"                outputArr[i] \u003d outputArr[i].trim();","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"luayida99"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"luayida99"},"content":"            return outputArr;","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"luayida99"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"luayida99"},"content":"        return null;","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"luayida99"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"luayida99"},"content":"     * Helper method to find task descriptions for commands.","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"luayida99"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"luayida99"},"content":"     * @param input String representing user input.","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"luayida99"},"content":"     * @return String of description.","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"luayida99"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"luayida99"},"content":"    public String findDescription(String input) {","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"luayida99"},"content":"        String cmd \u003d input.split(\"\\\\s+\", 2)[1];","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"luayida99"},"content":"        if (cmd.contains(\"/by\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"luayida99"},"content":"            return cmd.split(\"/by\")[0];","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"luayida99"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"luayida99"},"content":"        else if (cmd.contains(\"/at\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"luayida99"},"content":"            return cmd.split(\"/at\")[0];","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"luayida99"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"luayida99"},"content":"        else {","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"luayida99"},"content":"            return null;","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"luayida99"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"luayida99"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"luayida99"},"content":"     * Helper method to parse string and isolate index passed in by user","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"luayida99"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"luayida99"},"content":"     * @param s String to be parsed.","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"luayida99"},"content":"     * @return Integer from parsing String s.","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"luayida99"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"luayida99"},"content":"    public Integer tryIntParsing(String s) {","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"luayida99"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"luayida99"},"content":"            int parsedInt \u003d Integer.parseInt(s);","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"luayida99"},"content":"            return parsedInt;","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"luayida99"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"luayida99"},"content":"            return 0;","lastModifiedDate":"2021-08-22"},{"lineNumber":86,"author":{"gitId":"luayida99"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":87,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":88,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":89,"author":{"gitId":"luayida99"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"luayida99"},"content":"     * Helper to convert parsed command to COMMAND constant.","lastModifiedDate":"2021-08-22"},{"lineNumber":91,"author":{"gitId":"luayida99"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":92,"author":{"gitId":"luayida99"},"content":"     * @param command String representing command input.","lastModifiedDate":"2021-08-22"},{"lineNumber":93,"author":{"gitId":"luayida99"},"content":"     * @return COMMAND corresponding to String input.","lastModifiedDate":"2021-08-22"},{"lineNumber":94,"author":{"gitId":"luayida99"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":95,"author":{"gitId":"luayida99"},"content":"    public static COMMAND toCommand(String command) {","lastModifiedDate":"2021-08-22"},{"lineNumber":96,"author":{"gitId":"luayida99"},"content":"        switch (command) {","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"luayida99"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-22"},{"lineNumber":98,"author":{"gitId":"luayida99"},"content":"            return COMMAND.TODO;","lastModifiedDate":"2021-08-22"},{"lineNumber":99,"author":{"gitId":"luayida99"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-22"},{"lineNumber":100,"author":{"gitId":"luayida99"},"content":"            return COMMAND.DEADLINE;","lastModifiedDate":"2021-08-22"},{"lineNumber":101,"author":{"gitId":"luayida99"},"content":"        case \"event\":","lastModifiedDate":"2021-08-22"},{"lineNumber":102,"author":{"gitId":"luayida99"},"content":"            return COMMAND.EVENT;","lastModifiedDate":"2021-08-22"},{"lineNumber":103,"author":{"gitId":"luayida99"},"content":"        case \"list\":","lastModifiedDate":"2021-08-22"},{"lineNumber":104,"author":{"gitId":"luayida99"},"content":"            return COMMAND.LIST;","lastModifiedDate":"2021-08-22"},{"lineNumber":105,"author":{"gitId":"luayida99"},"content":"        case \"done\":","lastModifiedDate":"2021-08-22"},{"lineNumber":106,"author":{"gitId":"luayida99"},"content":"            return COMMAND.DONE;","lastModifiedDate":"2021-08-22"},{"lineNumber":107,"author":{"gitId":"luayida99"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-22"},{"lineNumber":108,"author":{"gitId":"luayida99"},"content":"            return COMMAND.DELETE;","lastModifiedDate":"2021-08-22"},{"lineNumber":109,"author":{"gitId":"luayida99"},"content":"        case \"find\":","lastModifiedDate":"2021-08-22"},{"lineNumber":110,"author":{"gitId":"luayida99"},"content":"            return COMMAND.FIND;","lastModifiedDate":"2021-08-22"},{"lineNumber":111,"author":{"gitId":"luayida99"},"content":"        default:","lastModifiedDate":"2021-08-22"},{"lineNumber":112,"author":{"gitId":"luayida99"},"content":"            return COMMAND.INVALID;","lastModifiedDate":"2021-08-22"},{"lineNumber":113,"author":{"gitId":"luayida99"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":114,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":115,"author":{"gitId":"luayida99"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"luayida99":115}},{"path":"src/main/java/side/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luayida99"},"content":"package side.util;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"luayida99"},"content":"import side.tasks.Deadline;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"luayida99"},"content":"import side.tasks.Event;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"luayida99"},"content":"import side.tasks.Task;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"luayida99"},"content":"import java.io.File;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"luayida99"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"luayida99"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"luayida99"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"luayida99"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"luayida99"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"luayida99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"luayida99"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"luayida99"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"luayida99"},"content":" * Storage is used to model saving to hard disk using a .txt file. It contains logic for saving and retrieving from","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"luayida99"},"content":" * the .txt file.","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"luayida99"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"luayida99"},"content":" * @author Lua Yi Da","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"luayida99"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"luayida99"},"content":"public class Storage {","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"luayida99"},"content":"    private Parser parser;","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"luayida99"},"content":"    public Storage() {","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"luayida99"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"luayida99"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"luayida99"},"content":"     * Helper method to save existing tasks to .txt file.","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"luayida99"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"luayida99"},"content":"     * @param savedList ArrayList containing existing tasks.","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"luayida99"},"content":"     * @param directory String representing directory to save to.","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"luayida99"},"content":"     * @throws IOException Error with file operation.","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"luayida99"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"luayida99"},"content":"    public void save(ArrayList\u003cTask\u003e savedList, String directory) throws IOException {","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"luayida99"},"content":"        String filePath \u003d directory + \"/Side.txt\";","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"luayida99"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"luayida99"},"content":"        File dataDirectory \u003d new File(directory);","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"luayida99"},"content":"        if (!Files.exists(Path.of(directory))) {","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"luayida99"},"content":"            boolean isDirectory \u003d dataDirectory.mkdir();","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"luayida99"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"luayida99"},"content":"        if (!Files.exists(Path.of(filePath))) {","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"luayida99"},"content":"            boolean isFile \u003d file.createNewFile();","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"luayida99"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"luayida99"},"content":"        FileWriter writer \u003d new FileWriter(filePath);","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"luayida99"},"content":"        StringBuilder taskLine \u003d new StringBuilder();","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"luayida99"},"content":"        for (Task t : savedList) {","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"luayida99"},"content":"            if (t instanceof Deadline) {","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"luayida99"},"content":"                String taskDetails \u003d \"D | \" + ((Deadline) t).getDatetime().saveDatetime();","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"luayida99"},"content":"                taskLine.append(taskDetails);","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"luayida99"},"content":"            } else if (t instanceof Event) {","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"luayida99"},"content":"                String taskDetails \u003d \"E | \" + ((Event) t).getStartDatetime().saveDatetime()","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"luayida99"},"content":"                        + \"/to\" + ((Event) t).getEndDatetime().saveDatetime();","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"luayida99"},"content":"                taskLine.append(taskDetails);","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"luayida99"},"content":"            } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"luayida99"},"content":"                taskLine.append(\"T | No time\");","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"luayida99"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"luayida99"},"content":"            String generalTaskDetails \u003d \" | \" + t.getDescription() + \" | \" + (t.getIsDone() ? \"T\" : \"F\") + \"\\n\";","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"luayida99"},"content":"            taskLine.append(generalTaskDetails);","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"luayida99"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"luayida99"},"content":"        writer.write(taskLine.toString());","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"luayida99"},"content":"        writer.close();","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"luayida99"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"luayida99"},"content":"     * Helper method to retrieve saved tasks from .txt file.","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"luayida99"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"luayida99"},"content":"     * @param directory String representing directory to read from.","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"luayida99"},"content":"     * @return ArrayList of tasks saved from previous session.","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"luayida99"},"content":"     * @throws FileNotFoundException Error with finding file to read from.","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"luayida99"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"luayida99"},"content":"    public ArrayList\u003cTask\u003e retrieve(String directory) throws FileNotFoundException {","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"luayida99"},"content":"        String filePath \u003d directory + \"/Side.txt\";","lastModifiedDate":"2021-08-21"},{"lineNumber":81,"author":{"gitId":"luayida99"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2021-08-21"},{"lineNumber":82,"author":{"gitId":"luayida99"},"content":"        ArrayList\u003cTask\u003e savedList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-21"},{"lineNumber":83,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":84,"author":{"gitId":"luayida99"},"content":"        if (Files.exists(Path.of(filePath))) {","lastModifiedDate":"2021-08-21"},{"lineNumber":85,"author":{"gitId":"luayida99"},"content":"            Scanner fileScanner \u003d new Scanner(file);","lastModifiedDate":"2021-08-21"},{"lineNumber":86,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":87,"author":{"gitId":"luayida99"},"content":"            while (fileScanner.hasNextLine()) {","lastModifiedDate":"2021-08-21"},{"lineNumber":88,"author":{"gitId":"luayida99"},"content":"                String[] lineData \u003d fileScanner.nextLine().split(\"\\\\|\");","lastModifiedDate":"2021-08-21"},{"lineNumber":89,"author":{"gitId":"luayida99"},"content":"                String taskType \u003d lineData[0];","lastModifiedDate":"2021-08-21"},{"lineNumber":90,"author":{"gitId":"luayida99"},"content":"                String taskTime \u003d lineData[1].trim();","lastModifiedDate":"2021-08-21"},{"lineNumber":91,"author":{"gitId":"luayida99"},"content":"                String taskDescription \u003d lineData[2];","lastModifiedDate":"2021-08-21"},{"lineNumber":92,"author":{"gitId":"luayida99"},"content":"                boolean isTaskDone \u003d lineData[3].equals(\" T\");","lastModifiedDate":"2021-08-21"},{"lineNumber":93,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":94,"author":{"gitId":"luayida99"},"content":"                switch (taskType) {","lastModifiedDate":"2021-08-21"},{"lineNumber":95,"author":{"gitId":"luayida99"},"content":"                case \"D \":","lastModifiedDate":"2021-08-21"},{"lineNumber":96,"author":{"gitId":"luayida99"},"content":"                    savedList.add(new Deadline(taskDescription, taskTime, isTaskDone));","lastModifiedDate":"2021-08-21"},{"lineNumber":97,"author":{"gitId":"luayida99"},"content":"                    break;","lastModifiedDate":"2021-08-21"},{"lineNumber":98,"author":{"gitId":"luayida99"},"content":"                case \"E \":","lastModifiedDate":"2021-08-21"},{"lineNumber":99,"author":{"gitId":"luayida99"},"content":"                    if (this.parser.findEventDatetime(taskTime) !\u003d null) {","lastModifiedDate":"2021-08-22"},{"lineNumber":100,"author":{"gitId":"luayida99"},"content":"                        savedList.add(new Event(taskDescription, this.parser.findEventDatetime(taskTime), isTaskDone));","lastModifiedDate":"2021-08-22"},{"lineNumber":101,"author":{"gitId":"luayida99"},"content":"                    }","lastModifiedDate":"2021-08-21"},{"lineNumber":102,"author":{"gitId":"luayida99"},"content":"                    break;","lastModifiedDate":"2021-08-21"},{"lineNumber":103,"author":{"gitId":"luayida99"},"content":"                case \"T \":","lastModifiedDate":"2021-08-21"},{"lineNumber":104,"author":{"gitId":"luayida99"},"content":"                    savedList.add(new Task(taskDescription, isTaskDone));","lastModifiedDate":"2021-08-21"},{"lineNumber":105,"author":{"gitId":"luayida99"},"content":"                    break;","lastModifiedDate":"2021-08-21"},{"lineNumber":106,"author":{"gitId":"luayida99"},"content":"                }","lastModifiedDate":"2021-08-21"},{"lineNumber":107,"author":{"gitId":"luayida99"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":108,"author":{"gitId":"luayida99"},"content":"        } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":109,"author":{"gitId":"luayida99"},"content":"            throw new FileNotFoundException();","lastModifiedDate":"2021-08-21"},{"lineNumber":110,"author":{"gitId":"luayida99"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":111,"author":{"gitId":"luayida99"},"content":"        return savedList;","lastModifiedDate":"2021-08-21"},{"lineNumber":112,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":113,"author":{"gitId":"luayida99"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"luayida99":113}},{"path":"src/main/java/side/util/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luayida99"},"content":"package side.util;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"luayida99"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"luayida99"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"luayida99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"luayida99"},"content":"import side.util.Storage;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"luayida99"},"content":"import side.tasks.Task;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"luayida99"},"content":"import side.tasks.Event;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"luayida99"},"content":"import side.tasks.Deadline;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"luayida99"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"luayida99"},"content":" * The TaskList class provides a wrapper around an ArrayList of Tasks to encapsulate the list of tasks given to","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"luayida99"},"content":" * Side by its user. Supports operations on tasks in it.","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"luayida99"},"content":" *","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"luayida99"},"content":" * @author Lua Yi Da","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"luayida99"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"luayida99"},"content":"public class TaskList {","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"luayida99"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"luayida99"},"content":"    private int taskLabel;","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"luayida99"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"luayida99"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"luayida99"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"luayida99"},"content":"        this.taskLabel \u003d 0;","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"luayida99"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"luayida99"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"luayida99"},"content":"     * Helper method to retrieve saved tasks from previous session.","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"luayida99"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"luayida99"},"content":"     * @return String of retrieved tasks.","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"luayida99"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"luayida99"},"content":"    public String retrieve()  {","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"luayida99"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"luayida99"},"content":"            String filepath \u003d \"./data\";","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"luayida99"},"content":"            this.tasks \u003d this.storage.retrieve(filepath);","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"luayida99"},"content":"            this.taskLabel \u003d this.tasks.size();","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"luayida99"},"content":"            return \"Here\u0027s your history...\\n\" + this.listToString();","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"luayida99"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"luayida99"},"content":"            return \"You have no history...\";","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"luayida99"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"luayida99"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"luayida99"},"content":"     * Helper method to save tasks for future use. Prints message if IOException occurs.","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"luayida99"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"luayida99"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"luayida99"},"content":"    public void save() {","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"luayida99"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"luayida99"},"content":"            String filepath \u003d \"./data\";","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"luayida99"},"content":"            this.storage.save(this.tasks, filepath);","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"luayida99"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"luayida99"},"content":"            System.out.println(\"Ran into problem reading file...\");","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"luayida99"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"luayida99"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":60,"author":{"gitId":"luayida99"},"content":"     * Calculates the number of tasks in the TaskList.","lastModifiedDate":"2021-08-15"},{"lineNumber":61,"author":{"gitId":"luayida99"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":62,"author":{"gitId":"luayida99"},"content":"     * @return Number of tasks in TaskList.","lastModifiedDate":"2021-08-15"},{"lineNumber":63,"author":{"gitId":"luayida99"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":64,"author":{"gitId":"luayida99"},"content":"    public int length() {","lastModifiedDate":"2021-08-14"},{"lineNumber":65,"author":{"gitId":"luayida99"},"content":"        return this.tasks.size();","lastModifiedDate":"2021-08-14"},{"lineNumber":66,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":67,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":68,"author":{"gitId":"luayida99"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":69,"author":{"gitId":"luayida99"},"content":"     * Adds a task to the TaskList.","lastModifiedDate":"2021-08-15"},{"lineNumber":70,"author":{"gitId":"luayida99"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":71,"author":{"gitId":"luayida99"},"content":"     * @param description String representation of task information.","lastModifiedDate":"2021-08-15"},{"lineNumber":72,"author":{"gitId":"luayida99"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":73,"author":{"gitId":"luayida99"},"content":"    public void addTask(String description) {","lastModifiedDate":"2021-08-14"},{"lineNumber":74,"author":{"gitId":"luayida99"},"content":"        Task task \u003d new Task(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":75,"author":{"gitId":"luayida99"},"content":"        this.tasks.add(task);","lastModifiedDate":"2021-08-14"},{"lineNumber":76,"author":{"gitId":"luayida99"},"content":"        taskLabel++;","lastModifiedDate":"2021-08-14"},{"lineNumber":77,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":78,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":79,"author":{"gitId":"luayida99"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":80,"author":{"gitId":"luayida99"},"content":"     * Adds an event to the TaskList.","lastModifiedDate":"2021-08-15"},{"lineNumber":81,"author":{"gitId":"luayida99"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":82,"author":{"gitId":"luayida99"},"content":"     * @param description String representation of event information.","lastModifiedDate":"2021-08-15"},{"lineNumber":83,"author":{"gitId":"luayida99"},"content":"     * @param startDatetime Time at which the event starts.","lastModifiedDate":"2021-08-21"},{"lineNumber":84,"author":{"gitId":"luayida99"},"content":"     * @param endDatetime Time at which event ends.","lastModifiedDate":"2021-08-21"},{"lineNumber":85,"author":{"gitId":"luayida99"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":86,"author":{"gitId":"luayida99"},"content":"    public void addEvent(String description, String startDatetime, String endDatetime) {","lastModifiedDate":"2021-08-21"},{"lineNumber":87,"author":{"gitId":"luayida99"},"content":"        Event event \u003d new Event(description, startDatetime, endDatetime);","lastModifiedDate":"2021-08-21"},{"lineNumber":88,"author":{"gitId":"luayida99"},"content":"        this.tasks.add(event);","lastModifiedDate":"2021-08-14"},{"lineNumber":89,"author":{"gitId":"luayida99"},"content":"        taskLabel++;","lastModifiedDate":"2021-08-14"},{"lineNumber":90,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":91,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":92,"author":{"gitId":"luayida99"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":93,"author":{"gitId":"luayida99"},"content":"     * Adds a deadline to the TaskList.","lastModifiedDate":"2021-08-15"},{"lineNumber":94,"author":{"gitId":"luayida99"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":95,"author":{"gitId":"luayida99"},"content":"     * @param description String representation of deadline information.","lastModifiedDate":"2021-08-15"},{"lineNumber":96,"author":{"gitId":"luayida99"},"content":"     * @param time Time at which the deadline elapses.","lastModifiedDate":"2021-08-15"},{"lineNumber":97,"author":{"gitId":"luayida99"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":98,"author":{"gitId":"luayida99"},"content":"    public void addDeadline(String description, String time) {","lastModifiedDate":"2021-08-14"},{"lineNumber":99,"author":{"gitId":"luayida99"},"content":"        Deadline event \u003d new Deadline(description, time);","lastModifiedDate":"2021-08-14"},{"lineNumber":100,"author":{"gitId":"luayida99"},"content":"        this.tasks.add(event);","lastModifiedDate":"2021-08-14"},{"lineNumber":101,"author":{"gitId":"luayida99"},"content":"        taskLabel++;","lastModifiedDate":"2021-08-14"},{"lineNumber":102,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":103,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":104,"author":{"gitId":"luayida99"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":105,"author":{"gitId":"luayida99"},"content":"     * Marks a task as done.","lastModifiedDate":"2021-08-15"},{"lineNumber":106,"author":{"gitId":"luayida99"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":107,"author":{"gitId":"luayida99"},"content":"     * @param index Index of task to be marked as done.","lastModifiedDate":"2021-08-15"},{"lineNumber":108,"author":{"gitId":"luayida99"},"content":"     * @return String response of Side in response to marking task as done.","lastModifiedDate":"2021-08-15"},{"lineNumber":109,"author":{"gitId":"luayida99"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":110,"author":{"gitId":"luayida99"},"content":"    public String markTaskDone(int index) {","lastModifiedDate":"2021-08-15"},{"lineNumber":111,"author":{"gitId":"luayida99"},"content":"        return tasks.get(index).markAsDone();","lastModifiedDate":"2021-08-15"},{"lineNumber":112,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":113,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":114,"author":{"gitId":"luayida99"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":115,"author":{"gitId":"luayida99"},"content":"     * Deletes a task from the TaskList.","lastModifiedDate":"2021-08-15"},{"lineNumber":116,"author":{"gitId":"luayida99"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":117,"author":{"gitId":"luayida99"},"content":"     * @param index Index of task to be removed.","lastModifiedDate":"2021-08-15"},{"lineNumber":118,"author":{"gitId":"luayida99"},"content":"     * @return String response of Side in response to deleting task.","lastModifiedDate":"2021-08-15"},{"lineNumber":119,"author":{"gitId":"luayida99"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":120,"author":{"gitId":"luayida99"},"content":"    public String delete(int index) {","lastModifiedDate":"2021-08-15"},{"lineNumber":121,"author":{"gitId":"luayida99"},"content":"        Task taskToDelete \u003d this.tasks.get(index);","lastModifiedDate":"2021-08-15"},{"lineNumber":122,"author":{"gitId":"luayida99"},"content":"        this.tasks.remove(index);","lastModifiedDate":"2021-08-15"},{"lineNumber":123,"author":{"gitId":"luayida99"},"content":"        taskLabel--;","lastModifiedDate":"2021-08-15"},{"lineNumber":124,"author":{"gitId":"luayida99"},"content":"        String taskQuantifier \u003d this.tasks.size() \u003d\u003d 1 ? \"task...\" : \"tasks...\";","lastModifiedDate":"2021-08-15"},{"lineNumber":125,"author":{"gitId":"luayida99"},"content":"        String taskCount \u003d \"\\nYou now have \" + tasks.size() + \" \" + taskQuantifier;","lastModifiedDate":"2021-08-15"},{"lineNumber":126,"author":{"gitId":"luayida99"},"content":"        return \"Fine, I\u0027ll delete: \" + taskToDelete.toString() + taskCount;","lastModifiedDate":"2021-08-15"},{"lineNumber":127,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":128,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":129,"author":{"gitId":"luayida99"},"content":"    public String listToString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":130,"author":{"gitId":"luayida99"},"content":"        StringBuilder tasksList \u003d new StringBuilder();","lastModifiedDate":"2021-08-14"},{"lineNumber":131,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":132,"author":{"gitId":"luayida99"},"content":"        if (this.taskLabel \u003d\u003d 0) {","lastModifiedDate":"2021-08-14"},{"lineNumber":133,"author":{"gitId":"luayida99"},"content":"            return \"Nothing to see here...\";","lastModifiedDate":"2021-08-21"},{"lineNumber":134,"author":{"gitId":"luayida99"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":135,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":136,"author":{"gitId":"luayida99"},"content":"        for (int i \u003d 0; i \u003c this.taskLabel; i++) {","lastModifiedDate":"2021-08-14"},{"lineNumber":137,"author":{"gitId":"luayida99"},"content":"            String fullTaskLine \u003d (i + 1) + \". \" + this.tasks.get(i).toString() + \"\\n\";","lastModifiedDate":"2021-08-14"},{"lineNumber":138,"author":{"gitId":"luayida99"},"content":"            tasksList.append(fullTaskLine);","lastModifiedDate":"2021-08-14"},{"lineNumber":139,"author":{"gitId":"luayida99"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":140,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":141,"author":{"gitId":"luayida99"},"content":"        return tasksList.toString();","lastModifiedDate":"2021-08-21"},{"lineNumber":142,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":143,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":144,"author":{"gitId":"luayida99"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":145,"author":{"gitId":"luayida99"},"content":"     * Helper method to match existing tasks with given description.","lastModifiedDate":"2021-08-22"},{"lineNumber":146,"author":{"gitId":"luayida99"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":147,"author":{"gitId":"luayida99"},"content":"     * @param input String representing user input.","lastModifiedDate":"2021-08-22"},{"lineNumber":148,"author":{"gitId":"luayida99"},"content":"     * @return ArrayList of tasks matching given description.","lastModifiedDate":"2021-08-22"},{"lineNumber":149,"author":{"gitId":"luayida99"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":150,"author":{"gitId":"luayida99"},"content":"    public ArrayList\u003cTask\u003e findTasks(String input) {","lastModifiedDate":"2021-08-22"},{"lineNumber":151,"author":{"gitId":"luayida99"},"content":"        ArrayList\u003cTask\u003e matchedTaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":152,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":153,"author":{"gitId":"luayida99"},"content":"        for (Task t : this.tasks) {","lastModifiedDate":"2021-08-22"},{"lineNumber":154,"author":{"gitId":"luayida99"},"content":"            if (t.getDescription().contains(input)) {","lastModifiedDate":"2021-08-22"},{"lineNumber":155,"author":{"gitId":"luayida99"},"content":"                matchedTaskList.add(t);","lastModifiedDate":"2021-08-22"},{"lineNumber":156,"author":{"gitId":"luayida99"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":157,"author":{"gitId":"luayida99"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":158,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":159,"author":{"gitId":"luayida99"},"content":"        return matchedTaskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":160,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":161,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":162,"author":{"gitId":"luayida99"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":163,"author":{"gitId":"luayida99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-21"},{"lineNumber":164,"author":{"gitId":"luayida99"},"content":"        if (this.taskLabel \u003d\u003d 0) {","lastModifiedDate":"2021-08-21"},{"lineNumber":165,"author":{"gitId":"luayida99"},"content":"            return \"No tasks yet, stop checking...\";","lastModifiedDate":"2021-08-21"},{"lineNumber":166,"author":{"gitId":"luayida99"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":167,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":168,"author":{"gitId":"luayida99"},"content":"        return \"Fine, here are your tasks: \\n\" + this.listToString();","lastModifiedDate":"2021-08-21"},{"lineNumber":169,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":170,"author":{"gitId":"luayida99"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"luayida99":170}},{"path":"src/main/java/side/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luayida99"},"content":"package side.util;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"luayida99"},"content":"import side.exception.*;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"luayida99"},"content":"import side.tasks.Deadline;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"luayida99"},"content":"import side.tasks.Event;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"luayida99"},"content":"import side.tasks.Task;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"luayida99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"luayida99"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"luayida99"},"content":" * Ui encapsulates user interactions, handling user input logic and formats responses to print for user.","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"luayida99"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"luayida99"},"content":" * @author Lua Yi Da","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"luayida99"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"luayida99"},"content":"public class Ui {","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"luayida99"},"content":"    private static final String LINEBREAK \u003d \"---------------------------------------------------------------------\";","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"luayida99"},"content":"    private static final String GREETING \u003d LINEBREAK + \"\" + \"\\nI\u0027m Side, your unpaid personal assistant. \" +","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"luayida99"},"content":"            \"Please do less...\\n\" + LINEBREAK;","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"luayida99"},"content":"    private static final String GOODBYE \u003d LINEBREAK + \"\\nOh, you have to go? What a pity...\\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"luayida99"},"content":"            + LINEBREAK;","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"luayida99"},"content":"    private Parser parser;","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"luayida99"},"content":"    public Ui() {","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"luayida99"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"luayida99"},"content":"    private void printLogo() {","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"luayida99"},"content":"        String logo \u003d \" ___  _____  _____   _____  \\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"luayida99"},"content":"                + \"|  _|  | |  | ___ \\\\  | |__\\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"luayida99"},"content":"                + \" \\\\ \\\\   | |  | |_| |  | |  \\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"luayida99"},"content":"                + \"|___| _|_|_ |____/   |_|__\\n\";","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"luayida99"},"content":"        System.out.println(logo);","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"luayida99"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"luayida99"},"content":"     * Prints logo and greeting for user on launch.","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"luayida99"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"luayida99"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"luayida99"},"content":"    public void greet() {","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"luayida99"},"content":"        this.printLogo();","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"luayida99"},"content":"        System.out.println(GREETING);","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"luayida99"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"luayida99"},"content":"     * Prints closing message for user on end.","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"luayida99"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"luayida99"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"luayida99"},"content":"    public void close() {","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"luayida99"},"content":"        System.out.println(GOODBYE);","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"luayida99"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"luayida99"},"content":"     * Print response specific to adding tasks.","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"luayida99"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"luayida99"},"content":"     * @param input String representation of task to add.","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"luayida99"},"content":"     * @param tasks TaskList to be added to.","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"luayida99"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"luayida99"},"content":"    public static void echo(String input, TaskList tasks) {","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"luayida99"},"content":"        System.out.println(LINEBREAK);","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"luayida99"},"content":"        String taskQuantifier \u003d tasks.length() \u003d\u003d 1 ? \"task...\" : \"tasks...\";","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"luayida99"},"content":"        System.out.println(\"Fine, I\u0027ll add: \" + input + \"\\nYou now have \" + tasks.length() + \" \" + taskQuantifier);","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"luayida99"},"content":"        System.out.println(LINEBREAK);","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"luayida99"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"luayida99"},"content":"     * Generic print response.","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"luayida99"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"luayida99"},"content":"     * @param input String representation of String to format.","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"luayida99"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"luayida99"},"content":"    public void printResponse(String input) {","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"luayida99"},"content":"        System.out.println(LINEBREAK);","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"luayida99"},"content":"        System.out.println(input);","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"luayida99"},"content":"        System.out.println(LINEBREAK);","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"luayida99"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"luayida99"},"content":"     * Handles the logic to add a deadline to TaskList.","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"luayida99"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"luayida99"},"content":"     * @param input String representation of user input.","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"luayida99"},"content":"     * @param taskList TaskList to be added to.","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"luayida99"},"content":"     * @throws WrongFormatException Catches incorrectly formatted input and returns error.","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"luayida99"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"luayida99"},"content":"    public void addDeadline(String input, TaskList taskList) throws WrongFormatException {","lastModifiedDate":"2021-08-22"},{"lineNumber":86,"author":{"gitId":"luayida99"},"content":"        if (input.contains(\"/by\") \u0026\u0026 (this.parser.findDeadlineDatetime(input) !\u003d null)) {","lastModifiedDate":"2021-08-22"},{"lineNumber":87,"author":{"gitId":"luayida99"},"content":"            String datetime \u003d this.parser.findDeadlineDatetime(input);","lastModifiedDate":"2021-08-22"},{"lineNumber":88,"author":{"gitId":"luayida99"},"content":"            String description \u003d this.parser.findDescription(input);","lastModifiedDate":"2021-08-22"},{"lineNumber":89,"author":{"gitId":"luayida99"},"content":"            taskList.addDeadline(description, datetime);","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"luayida99"},"content":"            Ui.echo(new Deadline(description, datetime).toString(), taskList);","lastModifiedDate":"2021-08-22"},{"lineNumber":91,"author":{"gitId":"luayida99"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":92,"author":{"gitId":"luayida99"},"content":"            throw new WrongFormatException(\"deadline [task name] /by [YYYY-MM-DD], [HHMM]\\n\" +","lastModifiedDate":"2021-08-22"},{"lineNumber":93,"author":{"gitId":"luayida99"},"content":"                    \"deadline [task name] /by [YYYY-MM-DD]\");","lastModifiedDate":"2021-08-22"},{"lineNumber":94,"author":{"gitId":"luayida99"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":95,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":96,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"luayida99"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":98,"author":{"gitId":"luayida99"},"content":"     * Handles the logic to add an Event to TaskList.","lastModifiedDate":"2021-08-22"},{"lineNumber":99,"author":{"gitId":"luayida99"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":100,"author":{"gitId":"luayida99"},"content":"     * @param input String representation of user input.","lastModifiedDate":"2021-08-22"},{"lineNumber":101,"author":{"gitId":"luayida99"},"content":"     * @param taskList TaskList to be added to.","lastModifiedDate":"2021-08-22"},{"lineNumber":102,"author":{"gitId":"luayida99"},"content":"     * @throws WrongFormatException Catches incorrectly formatted input and returns error.","lastModifiedDate":"2021-08-22"},{"lineNumber":103,"author":{"gitId":"luayida99"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":104,"author":{"gitId":"luayida99"},"content":"    public void addEvent(String input, TaskList taskList) throws WrongFormatException {","lastModifiedDate":"2021-08-22"},{"lineNumber":105,"author":{"gitId":"luayida99"},"content":"        if (input.contains(\"/at\") \u0026\u0026 (this.parser.findEventDatetime(input) !\u003d null)) {","lastModifiedDate":"2021-08-22"},{"lineNumber":106,"author":{"gitId":"luayida99"},"content":"            String[] datetimeArr \u003d this.parser.findEventDatetime(input);","lastModifiedDate":"2021-08-22"},{"lineNumber":107,"author":{"gitId":"luayida99"},"content":"            String description \u003d this.parser.findDescription(input);","lastModifiedDate":"2021-08-22"},{"lineNumber":108,"author":{"gitId":"luayida99"},"content":"            if (datetimeArr.length \u003c 2) {","lastModifiedDate":"2021-08-22"},{"lineNumber":109,"author":{"gitId":"luayida99"},"content":"                throw new WrongFormatException(\"event [task name] /at [YYYY-MM-DD], [HHMM] /to [YYYY-MM-DD], [HHMM]\\n\" +","lastModifiedDate":"2021-08-22"},{"lineNumber":110,"author":{"gitId":"luayida99"},"content":"                        \"event [task name] /at [YYYY-MM-DD] /to [YYYY-MM-DD]\");","lastModifiedDate":"2021-08-22"},{"lineNumber":111,"author":{"gitId":"luayida99"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":112,"author":{"gitId":"luayida99"},"content":"            if (datetimeArr !\u003d null \u0026\u0026 datetimeArr[0] !\u003d null \u0026\u0026 datetimeArr[1] !\u003d null) {","lastModifiedDate":"2021-08-22"},{"lineNumber":113,"author":{"gitId":"luayida99"},"content":"                taskList.addEvent(description, datetimeArr[0], datetimeArr[1]);","lastModifiedDate":"2021-08-22"},{"lineNumber":114,"author":{"gitId":"luayida99"},"content":"                Ui.echo(new Event(description, datetimeArr[0], datetimeArr[1]).toString(), taskList);","lastModifiedDate":"2021-08-22"},{"lineNumber":115,"author":{"gitId":"luayida99"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":116,"author":{"gitId":"luayida99"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":117,"author":{"gitId":"luayida99"},"content":"            throw new WrongFormatException(\"event [task name] /at [YYYY-MM-DD], [HHMM] /to [YYYY-MM-DD], [HHMM]\\n\" +","lastModifiedDate":"2021-08-22"},{"lineNumber":118,"author":{"gitId":"luayida99"},"content":"                    \"event [task name] /at [YYYY-MM-DD] /to [YYYY-MM-DD]\");","lastModifiedDate":"2021-08-22"},{"lineNumber":119,"author":{"gitId":"luayida99"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":120,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":121,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":122,"author":{"gitId":"luayida99"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":123,"author":{"gitId":"luayida99"},"content":"     * Handles the logic to add a task to TaskList.","lastModifiedDate":"2021-08-22"},{"lineNumber":124,"author":{"gitId":"luayida99"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":125,"author":{"gitId":"luayida99"},"content":"     * @param input String representation of user input.","lastModifiedDate":"2021-08-22"},{"lineNumber":126,"author":{"gitId":"luayida99"},"content":"     * @param taskList TaskList to be added to.","lastModifiedDate":"2021-08-22"},{"lineNumber":127,"author":{"gitId":"luayida99"},"content":"     * @throws WrongFormatException Catches incorrectly formatted input and returns error.","lastModifiedDate":"2021-08-22"},{"lineNumber":128,"author":{"gitId":"luayida99"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":129,"author":{"gitId":"luayida99"},"content":"    public void addTask(String input, TaskList taskList) throws WrongFormatException {","lastModifiedDate":"2021-08-22"},{"lineNumber":130,"author":{"gitId":"luayida99"},"content":"        if (input.replace(\"todo\", \"\").replaceAll(\" \", \"\").length() \u003e 0) {","lastModifiedDate":"2021-08-22"},{"lineNumber":131,"author":{"gitId":"luayida99"},"content":"            taskList.addTask(input);","lastModifiedDate":"2021-08-22"},{"lineNumber":132,"author":{"gitId":"luayida99"},"content":"            Ui.echo(new Task(input).toString(), taskList);","lastModifiedDate":"2021-08-22"},{"lineNumber":133,"author":{"gitId":"luayida99"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":134,"author":{"gitId":"luayida99"},"content":"            throw new WrongFormatException(\"todo [task name]\");","lastModifiedDate":"2021-08-22"},{"lineNumber":135,"author":{"gitId":"luayida99"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":136,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":137,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":138,"author":{"gitId":"luayida99"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":139,"author":{"gitId":"luayida99"},"content":"     * Handles the logic of marking a task as done.","lastModifiedDate":"2021-08-22"},{"lineNumber":140,"author":{"gitId":"luayida99"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":141,"author":{"gitId":"luayida99"},"content":"     * @param input String representation of user input.","lastModifiedDate":"2021-08-22"},{"lineNumber":142,"author":{"gitId":"luayida99"},"content":"     * @param taskList TaskList in which task is to be marked.","lastModifiedDate":"2021-08-22"},{"lineNumber":143,"author":{"gitId":"luayida99"},"content":"     * @throws TaskIndexException Catches out of bounds task indexes and returns error.","lastModifiedDate":"2021-08-22"},{"lineNumber":144,"author":{"gitId":"luayida99"},"content":"     * @throws NoIndexException Catches no index input from user and returns error.","lastModifiedDate":"2021-08-22"},{"lineNumber":145,"author":{"gitId":"luayida99"},"content":"     * @throws TooManyIndexesException Catches too many index input from user and returns error.","lastModifiedDate":"2021-08-22"},{"lineNumber":146,"author":{"gitId":"luayida99"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":147,"author":{"gitId":"luayida99"},"content":"    public void handleDone(String input, TaskList taskList) throws TaskIndexException, NoIndexException,","lastModifiedDate":"2021-08-22"},{"lineNumber":148,"author":{"gitId":"luayida99"},"content":"            TooManyIndexesException {","lastModifiedDate":"2021-08-22"},{"lineNumber":149,"author":{"gitId":"luayida99"},"content":"        if (input.split(\"\\\\s+\").length \u003d\u003d 2) {","lastModifiedDate":"2021-08-22"},{"lineNumber":150,"author":{"gitId":"luayida99"},"content":"            int taskNum \u003d this.parser.tryIntParsing(input.split(\"\\\\s+\")[1]);","lastModifiedDate":"2021-08-22"},{"lineNumber":151,"author":{"gitId":"luayida99"},"content":"            if (taskNum \u003e taskList.length() || taskNum \u003c\u003d 0) {","lastModifiedDate":"2021-08-22"},{"lineNumber":152,"author":{"gitId":"luayida99"},"content":"                throw new TaskIndexException();","lastModifiedDate":"2021-08-22"},{"lineNumber":153,"author":{"gitId":"luayida99"},"content":"            } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":154,"author":{"gitId":"luayida99"},"content":"                printResponse(taskList.markTaskDone(taskNum - 1));","lastModifiedDate":"2021-08-22"},{"lineNumber":155,"author":{"gitId":"luayida99"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":156,"author":{"gitId":"luayida99"},"content":"        } else if (input.split(\"\\\\s+\").length \u003d\u003d 1) {","lastModifiedDate":"2021-08-22"},{"lineNumber":157,"author":{"gitId":"luayida99"},"content":"            throw new NoIndexException();","lastModifiedDate":"2021-08-22"},{"lineNumber":158,"author":{"gitId":"luayida99"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":159,"author":{"gitId":"luayida99"},"content":"            throw new TooManyIndexesException(\"mark\");","lastModifiedDate":"2021-08-22"},{"lineNumber":160,"author":{"gitId":"luayida99"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":161,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":162,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":163,"author":{"gitId":"luayida99"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":164,"author":{"gitId":"luayida99"},"content":"     * Handles the logic of deleting a task.","lastModifiedDate":"2021-08-22"},{"lineNumber":165,"author":{"gitId":"luayida99"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":166,"author":{"gitId":"luayida99"},"content":"     * @param input String representation of user input.","lastModifiedDate":"2021-08-22"},{"lineNumber":167,"author":{"gitId":"luayida99"},"content":"     * @param taskList TaskList in which task is to be marked.","lastModifiedDate":"2021-08-22"},{"lineNumber":168,"author":{"gitId":"luayida99"},"content":"     * @throws DeleteIndexException Catches out of bounds task indexes and returns error.","lastModifiedDate":"2021-08-22"},{"lineNumber":169,"author":{"gitId":"luayida99"},"content":"     * @throws NoIndexException Catches no index input from user and returns error.","lastModifiedDate":"2021-08-22"},{"lineNumber":170,"author":{"gitId":"luayida99"},"content":"     * @throws TooManyIndexesException Catches too many index input from user and returns error.","lastModifiedDate":"2021-08-22"},{"lineNumber":171,"author":{"gitId":"luayida99"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":172,"author":{"gitId":"luayida99"},"content":"    public void handleDelete(String input, TaskList taskList) throws DeleteIndexException, NoIndexException,","lastModifiedDate":"2021-08-22"},{"lineNumber":173,"author":{"gitId":"luayida99"},"content":"            TooManyIndexesException {","lastModifiedDate":"2021-08-22"},{"lineNumber":174,"author":{"gitId":"luayida99"},"content":"        if (input.split(\"\\\\s+\").length \u003d\u003d 2) {","lastModifiedDate":"2021-08-22"},{"lineNumber":175,"author":{"gitId":"luayida99"},"content":"            int taskNum \u003d this.parser.tryIntParsing(input.split(\"\\\\s+\")[1]);","lastModifiedDate":"2021-08-22"},{"lineNumber":176,"author":{"gitId":"luayida99"},"content":"            if (taskNum \u003e taskList.length() || taskNum \u003c\u003d 0) {","lastModifiedDate":"2021-08-22"},{"lineNumber":177,"author":{"gitId":"luayida99"},"content":"                throw new DeleteIndexException();","lastModifiedDate":"2021-08-22"},{"lineNumber":178,"author":{"gitId":"luayida99"},"content":"            } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":179,"author":{"gitId":"luayida99"},"content":"                printResponse(taskList.delete(taskNum - 1));","lastModifiedDate":"2021-08-22"},{"lineNumber":180,"author":{"gitId":"luayida99"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":181,"author":{"gitId":"luayida99"},"content":"        } else if (input.split(\"\\\\s+\").length \u003d\u003d 1) {","lastModifiedDate":"2021-08-22"},{"lineNumber":182,"author":{"gitId":"luayida99"},"content":"            throw new NoIndexException();","lastModifiedDate":"2021-08-22"},{"lineNumber":183,"author":{"gitId":"luayida99"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":184,"author":{"gitId":"luayida99"},"content":"            throw new TooManyIndexesException(\"delete\");","lastModifiedDate":"2021-08-22"},{"lineNumber":185,"author":{"gitId":"luayida99"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":186,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":187,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":188,"author":{"gitId":"luayida99"},"content":"    private String convertFindList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2021-08-22"},{"lineNumber":189,"author":{"gitId":"luayida99"},"content":"        StringBuilder tasksList \u003d new StringBuilder();","lastModifiedDate":"2021-08-22"},{"lineNumber":190,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":191,"author":{"gitId":"luayida99"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2021-08-22"},{"lineNumber":192,"author":{"gitId":"luayida99"},"content":"            String fullTaskLine \u003d (i + 1) + \". \" + list.get(i).toString() + \"\\n\";","lastModifiedDate":"2021-08-22"},{"lineNumber":193,"author":{"gitId":"luayida99"},"content":"            tasksList.append(fullTaskLine);","lastModifiedDate":"2021-08-22"},{"lineNumber":194,"author":{"gitId":"luayida99"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":195,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":196,"author":{"gitId":"luayida99"},"content":"        return tasksList.toString();","lastModifiedDate":"2021-08-22"},{"lineNumber":197,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":198,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":199,"author":{"gitId":"luayida99"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":200,"author":{"gitId":"luayida99"},"content":"     * Handle logic for find command.","lastModifiedDate":"2021-08-22"},{"lineNumber":201,"author":{"gitId":"luayida99"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":202,"author":{"gitId":"luayida99"},"content":"     * @param input String representing user input.","lastModifiedDate":"2021-08-22"},{"lineNumber":203,"author":{"gitId":"luayida99"},"content":"     * @param taskList List to check against.","lastModifiedDate":"2021-08-22"},{"lineNumber":204,"author":{"gitId":"luayida99"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":205,"author":{"gitId":"luayida99"},"content":"    public void handleFind(String input, TaskList taskList) {","lastModifiedDate":"2021-08-22"},{"lineNumber":206,"author":{"gitId":"luayida99"},"content":"        if (input.split(\"\\\\s+\").length \u003d\u003d 1) {","lastModifiedDate":"2021-08-22"},{"lineNumber":207,"author":{"gitId":"luayida99"},"content":"            throw new NoIndexException();","lastModifiedDate":"2021-08-22"},{"lineNumber":208,"author":{"gitId":"luayida99"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":209,"author":{"gitId":"luayida99"},"content":"            String matching \u003d input.replaceFirst(\"find\", \"\").trim();","lastModifiedDate":"2021-08-22"},{"lineNumber":210,"author":{"gitId":"luayida99"},"content":"            StringBuilder listString \u003d new StringBuilder();","lastModifiedDate":"2021-08-22"},{"lineNumber":211,"author":{"gitId":"luayida99"},"content":"            listString.append(\"I found...\\n\");","lastModifiedDate":"2021-08-22"},{"lineNumber":212,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":213,"author":{"gitId":"luayida99"},"content":"            if (taskList.findTasks(matching).size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-22"},{"lineNumber":214,"author":{"gitId":"luayida99"},"content":"                listString.append(\"Nothing.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":215,"author":{"gitId":"luayida99"},"content":"            } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":216,"author":{"gitId":"luayida99"},"content":"                listString.append(convertFindList(taskList.findTasks(matching)));","lastModifiedDate":"2021-08-22"},{"lineNumber":217,"author":{"gitId":"luayida99"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":218,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":219,"author":{"gitId":"luayida99"},"content":"            printResponse(listString.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":220,"author":{"gitId":"luayida99"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":221,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":222,"author":{"gitId":"luayida99"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"luayida99":222}},{"path":"src/test/java/tasks/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luayida99"},"content":"package tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"luayida99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"luayida99"},"content":"import side.tasks.Deadline;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"luayida99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"luayida99"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"luayida99"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"luayida99"},"content":"    public void toStringTestNoTime() {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"luayida99"},"content":"        Deadline d \u003d new Deadline(\"Test\", \"2020-11-11\");","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"luayida99"},"content":"        assertEquals(d.toString(), \"[D][ ] Test (by: 11 Nov 2020)\");","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"luayida99"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"luayida99"},"content":"    public void toStringTestTime() {","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"luayida99"},"content":"        Deadline d \u003d new Deadline(\"Test\", \"2020-11-11, 1800\");","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"luayida99"},"content":"        assertEquals(d.toString(), \"[D][ ] Test (by: 11 Nov 2020, 6:00:00 pm)\");","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"luayida99"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"luayida99":20}},{"path":"src/test/java/tasks/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luayida99"},"content":"package tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"luayida99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"luayida99"},"content":"import side.tasks.Event;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"luayida99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"luayida99"},"content":"public class EventTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"luayida99"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"luayida99"},"content":"    public void toStringTestNoTime() {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"luayida99"},"content":"        Event e \u003d new Event(\"Test\", \"2020-11-11\", \"2020-11-12\");","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"luayida99"},"content":"        assertEquals(e.toString(), \"[E][ ] Test (at: 11 Nov 2020 to 12 Nov 2020)\");","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"luayida99"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"luayida99"},"content":"    public void toStringTestTime() {","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"luayida99"},"content":"        Event d \u003d new Event(\"Test\", \"2020-11-11, 1800\", \"2020-11-12, 1800\");","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"luayida99"},"content":"        assertEquals(d.toString(), \"[E][ ] Test (at: 11 Nov 2020, 6:00:00 pm to 12 Nov 2020, 6:00:00 pm)\");","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"luayida99"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"luayida99":20}},{"path":"src/test/java/tasks/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luayida99"},"content":"package tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"luayida99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"luayida99"},"content":"import side.tasks.Task;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"luayida99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"luayida99"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"luayida99"},"content":"public class TaskTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"luayida99"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"luayida99"},"content":"    public void getDescriptionTest() {","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"luayida99"},"content":"        Task t \u003d new Task(\"Test\");","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"luayida99"},"content":"        assertEquals(\"Test \", t.getDescription());","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"luayida99"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"luayida99"},"content":"    public void getIsDoneTest() {","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"luayida99"},"content":"        Task t \u003d new Task(\"Test\", true);","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"luayida99"},"content":"        assertTrue(t.getIsDone());","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"luayida99"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"luayida99"},"content":"    public void markAsDoneTestWithFalse() {","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"luayida99"},"content":"        Task t \u003d new Task(\"Test\");","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"luayida99"},"content":"        assertEquals(t.markAsDone(), \"Fine, I\u0027ll mark it for you: [T][x]Test \");","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"luayida99"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"luayida99"},"content":"    public void markAsDoneTestWithTrue() {","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"luayida99"},"content":"        Task t \u003d new Task(\"Test\", true);","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"luayida99"},"content":"        assertEquals(t.markAsDone(), \"I\u0027m lazy, stop making me mark the same things again...\");","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"luayida99"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"luayida99"},"content":"    public void toStringTestWithFalse() {","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"luayida99"},"content":"        Task t \u003d new Task(\"Test\");","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"luayida99"},"content":"        assertEquals(t.toString(), \"[T][ ]Test \");","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"luayida99"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"luayida99"},"content":"    public void toStringTestWithTrue() {","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"luayida99"},"content":"        Task t \u003d new Task(\"Test\", true);","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"luayida99"},"content":"        assertEquals(t.toString(), \"[T][x]Test \");","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"luayida99"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"luayida99":46}},{"path":"src/test/java/util/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luayida99"},"content":"package util;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"luayida99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"luayida99"},"content":"import side.util.Parser;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"luayida99"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"luayida99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"luayida99"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"luayida99"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"luayida99"},"content":"    public void findDeadlineDatetimeTest() {","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"luayida99"},"content":"        Parser p \u003d new Parser();","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"luayida99"},"content":"        assertEquals(p.findDeadlineDatetime(\"/by 2020-11-11\"), \"2020-11-11\");","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"luayida99"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"luayida99"},"content":"    public void findEventDatetimeTest() {","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"luayida99"},"content":"        Parser p \u003d new Parser();","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"luayida99"},"content":"        String[] expected \u003d {\"2020-11-11\", \"2020-11-12\"};","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"luayida99"},"content":"        assertArrayEquals(p.findEventDatetime(\"/at 2020-11-11 /to 2020-11-12\"), expected);","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"luayida99"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"luayida99"},"content":"    public void findDescriptionTest() {","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"luayida99"},"content":"        Parser p \u003d new Parser();","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"luayida99"},"content":"        assertEquals(p.findDescription(\"deadline a /by 2020-11-11\"), \"a \");","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"luayida99"},"content":"        assertEquals(p.findDescription(\"event a /at 2020-11-11 /to 2020-11-12\"), \"a \");","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"luayida99"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"luayida99"},"content":"    public void tryIntParsingTestValid() {","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"luayida99"},"content":"        Parser p \u003d new Parser();","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"luayida99"},"content":"        assertEquals(p.tryIntParsing(\"1800\"), 1800);","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"luayida99"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"luayida99"},"content":"    public void toCommandTest() {","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"luayida99"},"content":"        assertEquals(Parser.toCommand(\"todo\"), Parser.COMMAND.TODO);","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"luayida99"},"content":"        assertEquals(Parser.toCommand(\"deadline\"), Parser.COMMAND.DEADLINE);","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"luayida99"},"content":"        assertEquals(Parser.toCommand(\"event\"), Parser.COMMAND.EVENT);","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"luayida99"},"content":"        assertEquals(Parser.toCommand(\"list\"), Parser.COMMAND.LIST);","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"luayida99"},"content":"        assertEquals(Parser.toCommand(\"done\"), Parser.COMMAND.DONE);","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"luayida99"},"content":"        assertEquals(Parser.toCommand(\"delete\"), Parser.COMMAND.DELETE);","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"luayida99"},"content":"        assertEquals(Parser.toCommand(\"sdc\"), Parser.COMMAND.INVALID);","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"luayida99"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"luayida99":46}},{"path":"src/test/java/util/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luayida99"},"content":"package util;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"luayida99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"luayida99"},"content":"import side.util.TaskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"luayida99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"luayida99"},"content":"public class TaskListTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"luayida99"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"luayida99"},"content":"    public void lengthTest() {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"luayida99"},"content":"        TaskList t \u003d new TaskList();","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"luayida99"},"content":"        assertEquals(t.length(), 0);","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"luayida99"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"luayida99"},"content":"    public void addTaskTest() {","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"luayida99"},"content":"        TaskList t \u003d new TaskList();","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"luayida99"},"content":"        assertEquals(t.length(), 0);","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"luayida99"},"content":"        t.addTask(\"Test\");","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"luayida99"},"content":"        assertEquals(t.length(), 1);","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"luayida99"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"luayida99"},"content":"    public void addDeadlineTest() {","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"luayida99"},"content":"        TaskList t \u003d new TaskList();","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"luayida99"},"content":"        assertEquals(t.length(), 0);","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"luayida99"},"content":"        t.addDeadline(\"Test\", \"2020-11-11\");","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"luayida99"},"content":"        assertEquals(t.length(), 1);","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"luayida99"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"luayida99"},"content":"    public void addEventTest() {","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"luayida99"},"content":"        TaskList t \u003d new TaskList();","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"luayida99"},"content":"        assertEquals(t.length(), 0);","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"luayida99"},"content":"        t.addEvent(\"Test\", \"2020-11-11\", \"2020-11-12\");","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"luayida99"},"content":"        assertEquals(t.length(), 1);","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"luayida99"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"luayida99"},"content":"    public void markTaskDoneTest() {","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"luayida99"},"content":"        TaskList t \u003d new TaskList();","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"luayida99"},"content":"        t.addTask(\"Test\");","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"luayida99"},"content":"        assertEquals(t.markTaskDone(0), \"Fine, I\u0027ll mark it for you: [T][x]Test \");","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"luayida99"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"luayida99"},"content":"    public void deleteTaskTest() {","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"luayida99"},"content":"        TaskList t \u003d new TaskList();","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"luayida99"},"content":"        t.addTask(\"Test\");","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"luayida99"},"content":"        assertEquals(t.delete(0), \"Fine, I\u0027ll delete: [T][ ]Test \\n\" +","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"luayida99"},"content":"                \"You now have 0 tasks...\");","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"luayida99"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"luayida99"},"content":"    public void toStringTest() {","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"luayida99"},"content":"        TaskList t1 \u003d new TaskList();","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"luayida99"},"content":"        assertEquals(t1.toString(), \"No tasks yet, stop checking...\");","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"luayida99"},"content":"        TaskList t2 \u003d new TaskList();","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"luayida99"},"content":"        t2.addTask(\"Test\");","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"luayida99"},"content":"        assertEquals(t2.toString(), \"Fine, here are your tasks: \\n\" +","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"luayida99"},"content":"                \"1. [T][ ]Test \\n\");","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"luayida99"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"luayida99":63}},{"path":"src/test/java/util/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luayida99"},"content":"package util;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"luayida99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"luayida99"},"content":"import side.exception.*;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"luayida99"},"content":"import side.util.TaskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"luayida99"},"content":"import side.util.Ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"luayida99"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"luayida99"},"content":"public class UiTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"luayida99"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"luayida99"},"content":"    public void addDeadlineTest() {","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"luayida99"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"luayida99"},"content":"        assertThrows(WrongFormatException.class, () -\u003e ui.addDeadline(\"deadline /at\", new TaskList()));","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"luayida99"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"luayida99"},"content":"    public void addEventTest() {","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"luayida99"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"luayida99"},"content":"        assertThrows(WrongFormatException.class, () -\u003e ui.addDeadline(\"event /by\", new TaskList()));","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"luayida99"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"luayida99"},"content":"    public void addTaskTest() {","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"luayida99"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"luayida99"},"content":"        assertThrows(WrongFormatException.class, () -\u003e ui.addDeadline(\"todo   \", new TaskList()));","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"luayida99"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"luayida99"},"content":"    public void handleDoneTest() {","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"luayida99"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"luayida99"},"content":"        assertThrows(TaskIndexException.class, () -\u003e ui.handleDone(\"done -1\", new TaskList()));","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"luayida99"},"content":"        assertThrows(NoIndexException.class, () -\u003e ui.handleDone(\"done\", new TaskList()));","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"luayida99"},"content":"        assertThrows(TooManyIndexesException.class, () -\u003e ui.handleDone(\"done 1 3 5\", new TaskList()));","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"luayida99"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"luayida99"},"content":"    public void handleDeleteTest() {","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"luayida99"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"luayida99"},"content":"        assertThrows(DeleteIndexException.class, () -\u003e ui.handleDelete(\"delete -1\", new TaskList()));","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"luayida99"},"content":"        assertThrows(NoIndexException.class, () -\u003e ui.handleDelete(\"delete\", new TaskList()));","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"luayida99"},"content":"        assertThrows(TooManyIndexesException.class, () -\u003e ui.handleDelete(\"delete 1 3 5\", new TaskList()));","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"luayida99"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"luayida99":44}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"luayida99"},"content":"todo borrow book","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"luayida99"},"content":"todo","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"luayida99"},"content":"event birthday party /at Mon 5pm","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"luayida99"},"content":"event","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"luayida99"},"content":"deadline assignment 1 /by Tues 4pm","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"luayida99"},"content":"deadline","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"luayida99"},"content":"done 4","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"luayida99"},"content":"done 1","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"luayida99"},"content":"done 2","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"luayida99"},"content":"done 3","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"luayida99"},"content":"delete 4","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"luayida99"},"content":"delete 1","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"luayida99"},"content":"delete 1","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"luayida99"},"content":"delete 1","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"luayida99"},"content":"bye","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"luayida99":15}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"luayida99"},"content":"java -classpath ..\\bin Side \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"luayida99":1,"-":20}}]
