{"authorDailyContributionsMap":{"TohWeiJie01":[{"date":"2021-08-18","commitResults":[{"hash":"e4d2e844865ee4f1485363ae424e9d877de2d780","messageTitle":"Improved Logo for Duke.java and added private fields and constructor to initialise Duke in Duke.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":1}}},{"hash":"6d4ede8e0254d5d5bf3e5d1e190b7dd8819b2d14","messageTitle":"added method: commanding() to Duke.java and also initialised Duke in the main method and called upon the commanding method","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":0}}},{"hash":"af8b017bc08216cff2e72ad2412d64bb2222d57c","messageTitle":"added javadocs for the commanding method","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":0}}},{"hash":"4642733c7fe3b4ad4b566b856bdf389cbe1a563c","messageTitle":"changed the private field of Duke to be an array of size 100 to act as the to-do list","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":4}}},{"hash":"b480293b0e7b5352d2ebfe390e51ddcb1427f68c","messageTitle":"added the store method to Duke.java and also added a pointer nextSpaceToStore, along with more javadocs updating","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":17,"deletions":1}}},{"hash":"34b02626275287f915076ba8c3daedfa3738d44c","messageTitle":"added the list method to Duke.java, edited the commanding method to check for the command \"list\" and updated javadocs","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":21,"deletions":3}}},{"hash":"635db182a99560214cf7caf6455ff83ccd1fc758","messageTitle":"added Task.java to encapsulate a task","messageBody":"","tags":["A-Classes"],"fileTypesAndContributionMap":{"java":{"insertions":30,"deletions":0}}},{"hash":"5992fd0e08b14ac54b74921c9b95e1bfe6ea9d92","messageTitle":"Added TaskList.java to encapsulate a list of tasks and edited Duke.java to fit the logic of a TaskList (for OOP)","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":57,"deletions":33}}},{"hash":"8e8d0bec2551ec5b122b4f93b78d412475633f0d","messageTitle":"added the feature of done task","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":36,"deletions":9}}},{"hash":"a4e50578fb0607f4ba8214ba366323c7b07e7950","messageTitle":"Added Todo.java, Deadline.java and Event.java","messageBody":"","tags":["A-Inheritance"],"fileTypesAndContributionMap":{"java":{"insertions":87,"deletions":6}}},{"hash":"2dd8b0daf6b68dbda42ac74846759d58d7b9af3d","messageTitle":"Edited in Duke.java to look for the \"todo\", \"deadline\" and \"event\" commands and initialise the specific type of tasks","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":34,"deletions":6}}},{"hash":"a9caf8227788ced5c14c72973dc6aa1f5aba5205","messageTitle":"added Automated Text UI Testing and adjusted code to meet expected","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":8,"deletions":0},"java":{"insertions":45,"deletions":4}}},{"hash":"941786e48d710f8d051b517c9eaee472321df19b","messageTitle":"Deleted unnecessary code","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":42}}},{"hash":"b93ecad5b228bbfe06e0b891c33aba90d2edd7f6","messageTitle":"Added DukeException.java to handle Duke specific exceptions","messageBody":"","tags":["A-Exceptions"],"fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":0}}}]},{"date":"2021-08-19","commitResults":[{"hash":"b3a75894eb0cd70cface3b63176120a4395e0c8b","messageTitle":"Handled unrecognised command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":48,"deletions":38}}},{"hash":"f09f6ff123d32e332b64b2914888ccfc36876735","messageTitle":"Handled empty todo, deadline and event commands and updated testing files","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":0},"java":{"insertions":9,"deletions":0}}},{"hash":"ce5e35ed5eaa5c00e03fc3ac8e1afc14493e8831","messageTitle":"Utillised Java Collections - ArrayList instead of a normal array","messageBody":"","tags":["A-Collections"],"fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":8}}},{"hash":"8dfb055579de23e71ba9582f55c3945cdb927c31","messageTitle":"Added the method to delete tasks from the TaskList","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"java":{"insertions":21,"deletions":5}}},{"hash":"a706b4f4c4c9d0476c96957a45204d2940f6e7eb","messageTitle":"Edited the input and expected testing","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":0}}}]},{"date":"2021-08-24","commitResults":[{"hash":"643ebdd548fed2dd82ea9bc8fef008ede5147b79","messageTitle":"Edit the names of variables, methods and Javadoc","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":27,"deletions":25}}}]},{"date":"2021-08-25","commitResults":[{"hash":"0ab65189fe5f1707b800890530e0aae84d9bb7ab","messageTitle":"Add Storage.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":117,"deletions":0}}},{"hash":"b0e62e8e6a1eb115bd48c557d88ffe4081e2cc69","messageTitle":"Update Duke.java to have the load and save function","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":4,"deletions":0},"java":{"insertions":22,"deletions":10}}},{"hash":"ef4754eadd139ee3136f79545e348b9780cc3f64","messageTitle":"Refactor code","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":3}}},{"hash":"18c864634931d2b02a82d7164a4b2757f654a385","messageTitle":"Update Deadline.java and Event.java with DateTime feature","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":6}}},{"hash":"77fd4da884ea4846659039897731b0dd365c366e","messageTitle":"Update Duke.java with the Date and Time feature","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":2}}},{"hash":"21610290d522d65ac53f25d17c66f67e5bd08ad3","messageTitle":"Update code to have Date and Time functionality","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":4}}}]},{"date":"2021-08-26","commitResults":[{"hash":"3a9f4bcdd30886e43a2a816f4209d72b6614af66","messageTitle":"Add more OOP","messageBody":"","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"txt":{"insertions":12,"deletions":6},"java":{"insertions":499,"deletions":101}}},{"hash":"4445a42df53054909a41477c64c9148ac8435459","messageTitle":"Divide classes into packages","messageBody":"","tags":["A-Packages"],"fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":0},"java":{"insertions":114,"deletions":2}}},{"hash":"24bf9e5f8d3fa4600bace92bbca9280df206a272","messageTitle":"Create DukeTest.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":0}}},{"hash":"f18b1d22b1d19837b0eb03eac3cc497f8fdda4d9","messageTitle":"Add JUnit tests","messageBody":"","tags":["A-Jar","A-JUnit"],"fileTypesAndContributionMap":{"java":{"insertions":75,"deletions":0}}},{"hash":"29ed4de94505f021ba720161495c0fd437970b6f","messageTitle":"Add and edit JavaDoc comments to code","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":9}}},{"hash":"aa29e7e701a7a29e6fdfa7f7eb909b1ecc6a1f6d","messageTitle":"Follow the Coding Standard","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":28,"deletions":31}}},{"hash":"d287bc73424fd5e9e2434019c887eda9b9c76490","messageTitle":"Add FindCommand.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":32,"deletions":0}}},{"hash":"d4f11fce0208dfb76090986eb1d594b63a2b4131","messageTitle":"Update code to have Find functionality","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":10}}},{"hash":"6f14a9958aba1be3b0f605468e77a4876ba54114","messageTitle":"Update Coding Standard in Parser.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":1}}}]},{"date":"2021-09-02","commitResults":[{"hash":"1cb61ecb02d97c99366886039b1dc747135a56fe","messageTitle":"Edit code to coding standard and other coding quality guidelines","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":4,"deletions":1},"java":{"insertions":94,"deletions":21}}},{"hash":"9bef9b45cc52ce57d13bfdf09428d4dddb74c1dd","messageTitle":"Enable Gradle to run","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1}}},{"hash":"2790212d04324c38976670dd14c20c593a822cd6","messageTitle":"Add Checkstyle to Gradle","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":2}}},{"hash":"9d5b07cd2562bc6d09cc8d3d0ea4f530a2f8411c","messageTitle":"Add GUI for Duke","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":16,"deletions":1},"txt":{"insertions":1,"deletions":1},"fxml":{"insertions":35,"deletions":0},"java":{"insertions":287,"deletions":47}}},{"hash":"98aba73ceadf535450f905c1fe65c009999dea84","messageTitle":"Use FXML","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":1,"deletions":1},"java":{"insertions":148,"deletions":67}}}]},{"date":"2021-09-06","commitResults":[{"hash":"1c2e073ad681240bd842e65b55326ce948a6b944","messageTitle":"Add new exception classes that inherit from DukeException","messageBody":"There is only a singular DukeException class to account for all the possible exceptions specific to Duke.\n\nHowever, this is very restrictive and not a good style of coding by OOP rules.\n\nIn order to improve this exception issue, three new separate exception classes that inherit from DukeException is created. One handles the case where the given input is completely unrecognised, another handles the case where the description of the task we are adding is missing and the last handles the case for inputs that require an index but do not have it.\n\nBy separating the possible exceptions into separate classes, it is now clearer exactly which exception occurred and what is exactly the problem should it arise in Duke.\n","fileTypesAndContributionMap":{"java":{"insertions":43,"deletions":0}}},{"hash":"11db579d8079ac111321971c1f5288961480b4eb","messageTitle":"Add enums for the different task types","messageBody":"There is no usage of enums, hence the todo, deadline and event tasks all\nhad to be separately dealt with, despite having similar behaviors.\n\nThe common behaviors across the Task types could cause code\nduplications.\n\nCreating an enum class to represent all three task types allows us to\ncheck for the different task types and utilise the same method to handle\nall of them, while still being able to differentiate them.\n\nUsing enums is preferable as there is only a fixed set of task types.\n","tags":["A-FullCommitMessage"],"fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":0}}},{"hash":"f661f6325aabaf3869a269bf4fb973eb875e2d54","messageTitle":"Add more enum and exception classes","messageBody":"","tags":["A-Enums"],"fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":0}}},{"hash":"897aa4fbed13033c6d1db629b78b550f59657c6a","messageTitle":"Update code to include new exceptions and enums","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":209,"deletions":98}}},{"hash":"eb23eb824952c83c98a19a16cc7022b45a8911e2","messageTitle":"Edit GUI","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":14,"deletions":7}}}]}]},"authorFileTypeContributionMap":{"TohWeiJie01":{"java":1722,"md":0,"fxml":42,"sh":0,"bat":0,"gradle":16,"txt":25}},"authorContributionVariance":{"TohWeiJie01":57903.707},"authorDisplayNameMap":{"TohWeiJie01":"CS2103T-F11-2 TOH .. JIE"}}
