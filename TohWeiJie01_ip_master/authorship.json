[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"TohWeiJie01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"TohWeiJie01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"TohWeiJie01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"TohWeiJie01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"TohWeiJie01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"TohWeiJie01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"TohWeiJie01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"TohWeiJie01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"TohWeiJie01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"TohWeiJie01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"TohWeiJie01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"TohWeiJie01"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"TohWeiJie01":16,"-":45}},{"path":"data/tasklist.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"Todo / 1 / read book","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"Event / 0 / meeting / 2021-08-30T13:55","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"Deadline / 0 / submit assignment / 2021-09-04","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"Todo / 0 / read book","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"TohWeiJie01":4}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"package duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"TohWeiJie01"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"TohWeiJie01"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"TohWeiJie01"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"TohWeiJie01"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"TohWeiJie01"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"TohWeiJie01"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"TohWeiJie01"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"TohWeiJie01"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"TohWeiJie01"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"TohWeiJie01"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"TohWeiJie01"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"TohWeiJie01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"TohWeiJie01"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"TohWeiJie01"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"TohWeiJie01"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"TohWeiJie01"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"TohWeiJie01"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"TohWeiJie01"},"content":"    private void flip() {","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"TohWeiJie01"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"TohWeiJie01"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"TohWeiJie01"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"TohWeiJie01"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"TohWeiJie01"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"TohWeiJie01"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"TohWeiJie01"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"TohWeiJie01"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"TohWeiJie01"},"content":"        db.flip();","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"TohWeiJie01"},"content":"        return db;","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"TohWeiJie01":56}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"TohWeiJie01"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"TohWeiJie01"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"TohWeiJie01"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"TohWeiJie01"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"TohWeiJie01"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"TohWeiJie01"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"TohWeiJie01"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"TohWeiJie01"},"content":" * The Duke class encapsulates the action of the Duke chatbot.","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"TohWeiJie01"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"TohWeiJie01"},"content":"public class Duke {","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"TohWeiJie01"},"content":"    /** The path name to be converted to create a new File instance. */","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"TohWeiJie01"},"content":"    private static final String PATH_NAME \u003d \"./data/tasklist.txt\";","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"TohWeiJie01"},"content":"    /** The storage for Duke to save and load the tasklist to. */","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"TohWeiJie01"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"TohWeiJie01"},"content":"    /** The tasklist for Duke to store all the tasks. */","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"TohWeiJie01"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"TohWeiJie01"},"content":"    /** The Ui for Duke to deal with all the interactions with the user. */","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"TohWeiJie01"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"TohWeiJie01"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"TohWeiJie01"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"TohWeiJie01"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"TohWeiJie01"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"TohWeiJie01"},"content":"    private Scene scene;","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"TohWeiJie01"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"TohWeiJie01"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"TohWeiJie01"},"content":"     * Constructor to initialise the Duke chatbot.","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"TohWeiJie01"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"TohWeiJie01"},"content":"     * @param pathName The path name to be converted to create a new File instance.","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"TohWeiJie01"},"content":"    public Duke(String pathName) {","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"TohWeiJie01"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"TohWeiJie01"},"content":"        this.storage \u003d new Storage(pathName);","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"TohWeiJie01"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"TohWeiJie01"},"content":"            this.taskList \u003d new TaskList(storage.loadFile());","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"TohWeiJie01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"TohWeiJie01"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"TohWeiJie01"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"TohWeiJie01"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":67,"author":{"gitId":"TohWeiJie01"},"content":"     * Constructor to initialise the Duke chatbot.","lastModifiedDate":"2021-09-02"},{"lineNumber":68,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":69,"author":{"gitId":"TohWeiJie01"},"content":"    public Duke() {","lastModifiedDate":"2021-09-02"},{"lineNumber":70,"author":{"gitId":"TohWeiJie01"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-09-02"},{"lineNumber":71,"author":{"gitId":"TohWeiJie01"},"content":"        this.storage \u003d new Storage(PATH_NAME);","lastModifiedDate":"2021-09-02"},{"lineNumber":72,"author":{"gitId":"TohWeiJie01"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":73,"author":{"gitId":"TohWeiJie01"},"content":"            this.taskList \u003d new TaskList(storage.loadFile());","lastModifiedDate":"2021-09-02"},{"lineNumber":74,"author":{"gitId":"TohWeiJie01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":75,"author":{"gitId":"TohWeiJie01"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2021-09-02"},{"lineNumber":76,"author":{"gitId":"TohWeiJie01"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2021-09-02"},{"lineNumber":77,"author":{"gitId":"TohWeiJie01"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":78,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":79,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":80,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":81,"author":{"gitId":"TohWeiJie01"},"content":"     * Runs the Duke program.","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":83,"author":{"gitId":"TohWeiJie01"},"content":"    public void run() {","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"TohWeiJie01"},"content":"        ui.greetWelcome();","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"TohWeiJie01"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"TohWeiJie01"},"content":"        while (!isExit) {","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"TohWeiJie01"},"content":"            try {","lastModifiedDate":"2021-08-19"},{"lineNumber":88,"author":{"gitId":"TohWeiJie01"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"TohWeiJie01"},"content":"                ui.showLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"TohWeiJie01"},"content":"                Command c \u003d new Parser().parse(fullCommand);","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"TohWeiJie01"},"content":"                c.execute(storage, taskList, ui);","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"TohWeiJie01"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"TohWeiJie01"},"content":"            } catch (DukeException | IOException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"TohWeiJie01"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"TohWeiJie01"},"content":"            } finally {","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"TohWeiJie01"},"content":"                ui.showLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"TohWeiJie01"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":98,"author":{"gitId":"TohWeiJie01"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":99,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":100,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":101,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":102,"author":{"gitId":"TohWeiJie01"},"content":"     * Iteration 1:","lastModifiedDate":"2021-09-02"},{"lineNumber":103,"author":{"gitId":"TohWeiJie01"},"content":"     * Creates a label with the specified text and adds it to the dialog container.","lastModifiedDate":"2021-09-02"},{"lineNumber":104,"author":{"gitId":"TohWeiJie01"},"content":"     * @param text String containing text to add","lastModifiedDate":"2021-09-02"},{"lineNumber":105,"author":{"gitId":"TohWeiJie01"},"content":"     * @return a label with the specified text that has word wrap enabled.","lastModifiedDate":"2021-09-02"},{"lineNumber":106,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":107,"author":{"gitId":"TohWeiJie01"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2021-09-02"},{"lineNumber":108,"author":{"gitId":"TohWeiJie01"},"content":"        // You will need to import `javafx.scene.control.Label`.","lastModifiedDate":"2021-09-02"},{"lineNumber":109,"author":{"gitId":"TohWeiJie01"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2021-09-02"},{"lineNumber":110,"author":{"gitId":"TohWeiJie01"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2021-09-02"},{"lineNumber":111,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":112,"author":{"gitId":"TohWeiJie01"},"content":"        return textToAdd;","lastModifiedDate":"2021-09-02"},{"lineNumber":113,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":114,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":115,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":116,"author":{"gitId":"TohWeiJie01"},"content":"     * Iteration 2:","lastModifiedDate":"2021-09-02"},{"lineNumber":117,"author":{"gitId":"TohWeiJie01"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-02"},{"lineNumber":118,"author":{"gitId":"TohWeiJie01"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-02"},{"lineNumber":119,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":120,"author":{"gitId":"TohWeiJie01"},"content":"    /*private void handleUserInput() {","lastModifiedDate":"2021-09-02"},{"lineNumber":121,"author":{"gitId":"TohWeiJie01"},"content":"        String userText \u003d new String(userInput.getText());","lastModifiedDate":"2021-09-02"},{"lineNumber":122,"author":{"gitId":"TohWeiJie01"},"content":"        String dukeText \u003d new String(getResponse(userInput.getText()));","lastModifiedDate":"2021-09-02"},{"lineNumber":123,"author":{"gitId":"TohWeiJie01"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-02"},{"lineNumber":124,"author":{"gitId":"TohWeiJie01"},"content":"                DialogBox.getUserDialog(userText, new ImageView(user)),","lastModifiedDate":"2021-09-02"},{"lineNumber":125,"author":{"gitId":"TohWeiJie01"},"content":"                DialogBox.getDukeDialog(dukeText, new ImageView(duke))","lastModifiedDate":"2021-09-02"},{"lineNumber":126,"author":{"gitId":"TohWeiJie01"},"content":"        );","lastModifiedDate":"2021-09-02"},{"lineNumber":127,"author":{"gitId":"TohWeiJie01"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-02"},{"lineNumber":128,"author":{"gitId":"TohWeiJie01"},"content":"    }*/","lastModifiedDate":"2021-09-02"},{"lineNumber":129,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":130,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":131,"author":{"gitId":"TohWeiJie01"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2021-09-02"},{"lineNumber":132,"author":{"gitId":"TohWeiJie01"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2021-09-02"},{"lineNumber":133,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":134,"author":{"gitId":"TohWeiJie01"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-09-02"},{"lineNumber":135,"author":{"gitId":"TohWeiJie01"},"content":"        ui.greetWelcome();","lastModifiedDate":"2021-09-02"},{"lineNumber":136,"author":{"gitId":"TohWeiJie01"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":137,"author":{"gitId":"TohWeiJie01"},"content":"            Command c \u003d new Parser().parse(input);","lastModifiedDate":"2021-09-02"},{"lineNumber":138,"author":{"gitId":"TohWeiJie01"},"content":"            String output \u003d c.execute(storage, taskList, ui);","lastModifiedDate":"2021-09-02"},{"lineNumber":139,"author":{"gitId":"TohWeiJie01"},"content":"            return output;","lastModifiedDate":"2021-09-02"},{"lineNumber":140,"author":{"gitId":"TohWeiJie01"},"content":"        } catch (DukeException | IOException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":141,"author":{"gitId":"TohWeiJie01"},"content":"            String output \u003d ui.showError(e.getMessage());","lastModifiedDate":"2021-09-02"},{"lineNumber":142,"author":{"gitId":"TohWeiJie01"},"content":"            return output;","lastModifiedDate":"2021-09-02"},{"lineNumber":143,"author":{"gitId":"TohWeiJie01"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":144,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":145,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":146,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":147,"author":{"gitId":"TohWeiJie01"},"content":"     * Creates the initialization of Duke and runs the programme.","lastModifiedDate":"2021-09-02"},{"lineNumber":148,"author":{"gitId":"TohWeiJie01"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":149,"author":{"gitId":"TohWeiJie01"},"content":"     * @param args","lastModifiedDate":"2021-09-02"},{"lineNumber":150,"author":{"gitId":"TohWeiJie01"},"content":"     * @throws IOException","lastModifiedDate":"2021-09-02"},{"lineNumber":151,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":152,"author":{"gitId":"TohWeiJie01"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2021-08-25"},{"lineNumber":153,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":154,"author":{"gitId":"TohWeiJie01"},"content":"        // Creates an initialisation of Duke and runs it","lastModifiedDate":"2021-08-26"},{"lineNumber":155,"author":{"gitId":"TohWeiJie01"},"content":"        Duke duke \u003d new Duke(PATH_NAME);","lastModifiedDate":"2021-08-26"},{"lineNumber":156,"author":{"gitId":"TohWeiJie01"},"content":"        duke.run();","lastModifiedDate":"2021-08-26"},{"lineNumber":157,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":159,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":160,"author":{"gitId":"TohWeiJie01"},"content":"    /*@Override","lastModifiedDate":"2021-09-02"},{"lineNumber":161,"author":{"gitId":"TohWeiJie01"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-02"},{"lineNumber":162,"author":{"gitId":"TohWeiJie01"},"content":"        //Step 1. Setting up required components","lastModifiedDate":"2021-09-02"},{"lineNumber":163,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":164,"author":{"gitId":"TohWeiJie01"},"content":"        //The container for the content of the chat to scroll.","lastModifiedDate":"2021-09-02"},{"lineNumber":165,"author":{"gitId":"TohWeiJie01"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2021-09-02"},{"lineNumber":166,"author":{"gitId":"TohWeiJie01"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2021-09-02"},{"lineNumber":167,"author":{"gitId":"TohWeiJie01"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2021-09-02"},{"lineNumber":168,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":169,"author":{"gitId":"TohWeiJie01"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2021-09-02"},{"lineNumber":170,"author":{"gitId":"TohWeiJie01"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2021-09-02"},{"lineNumber":171,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":172,"author":{"gitId":"TohWeiJie01"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2021-09-02"},{"lineNumber":173,"author":{"gitId":"TohWeiJie01"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2021-09-02"},{"lineNumber":174,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":175,"author":{"gitId":"TohWeiJie01"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2021-09-02"},{"lineNumber":176,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":177,"author":{"gitId":"TohWeiJie01"},"content":"        stage.setScene(scene);","lastModifiedDate":"2021-09-02"},{"lineNumber":178,"author":{"gitId":"TohWeiJie01"},"content":"        stage.show();","lastModifiedDate":"2021-09-02"},{"lineNumber":179,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":180,"author":{"gitId":"TohWeiJie01"},"content":"        //Step 2. Formatting the window to look as expected","lastModifiedDate":"2021-09-02"},{"lineNumber":181,"author":{"gitId":"TohWeiJie01"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2021-09-02"},{"lineNumber":182,"author":{"gitId":"TohWeiJie01"},"content":"        stage.setResizable(false);","lastModifiedDate":"2021-09-02"},{"lineNumber":183,"author":{"gitId":"TohWeiJie01"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2021-09-02"},{"lineNumber":184,"author":{"gitId":"TohWeiJie01"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2021-09-02"},{"lineNumber":185,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":186,"author":{"gitId":"TohWeiJie01"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2021-09-02"},{"lineNumber":187,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":188,"author":{"gitId":"TohWeiJie01"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2021-09-02"},{"lineNumber":189,"author":{"gitId":"TohWeiJie01"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2021-09-02"},{"lineNumber":190,"author":{"gitId":"TohWeiJie01"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2021-09-02"},{"lineNumber":191,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":192,"author":{"gitId":"TohWeiJie01"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2021-09-02"},{"lineNumber":193,"author":{"gitId":"TohWeiJie01"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2021-09-02"},{"lineNumber":194,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":195,"author":{"gitId":"TohWeiJie01"},"content":"        // You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2021-09-02"},{"lineNumber":196,"author":{"gitId":"TohWeiJie01"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2021-09-02"},{"lineNumber":197,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":198,"author":{"gitId":"TohWeiJie01"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2021-09-02"},{"lineNumber":199,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":200,"author":{"gitId":"TohWeiJie01"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2021-09-02"},{"lineNumber":201,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":202,"author":{"gitId":"TohWeiJie01"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2021-09-02"},{"lineNumber":203,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":204,"author":{"gitId":"TohWeiJie01"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2021-09-02"},{"lineNumber":205,"author":{"gitId":"TohWeiJie01"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2021-09-02"},{"lineNumber":206,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":207,"author":{"gitId":"TohWeiJie01"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2021-09-02"},{"lineNumber":208,"author":{"gitId":"TohWeiJie01"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2021-09-02"},{"lineNumber":209,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":210,"author":{"gitId":"TohWeiJie01"},"content":"        //Part 3. Add functionality to handle user input.","lastModifiedDate":"2021-09-02"},{"lineNumber":211,"author":{"gitId":"TohWeiJie01"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2021-09-02"},{"lineNumber":212,"author":{"gitId":"TohWeiJie01"},"content":"            handleUserInput();","lastModifiedDate":"2021-09-02"},{"lineNumber":213,"author":{"gitId":"TohWeiJie01"},"content":"        });","lastModifiedDate":"2021-09-02"},{"lineNumber":214,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":215,"author":{"gitId":"TohWeiJie01"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2021-09-02"},{"lineNumber":216,"author":{"gitId":"TohWeiJie01"},"content":"            handleUserInput();","lastModifiedDate":"2021-09-02"},{"lineNumber":217,"author":{"gitId":"TohWeiJie01"},"content":"        });","lastModifiedDate":"2021-09-02"},{"lineNumber":218,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":219,"author":{"gitId":"TohWeiJie01"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes.","lastModifiedDate":"2021-09-02"},{"lineNumber":220,"author":{"gitId":"TohWeiJie01"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2021-09-02"},{"lineNumber":221,"author":{"gitId":"TohWeiJie01"},"content":"    }*/","lastModifiedDate":"2021-09-02"},{"lineNumber":222,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"TohWeiJie01":220,"-":2}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"package duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":"public class Launcher {","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"TohWeiJie01":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"package duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"TohWeiJie01"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"TohWeiJie01"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"TohWeiJie01"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"TohWeiJie01"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"TohWeiJie01"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"TohWeiJie01"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"TohWeiJie01"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"TohWeiJie01"},"content":"            stage.show();","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"TohWeiJie01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"TohWeiJie01"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"TohWeiJie01"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"TohWeiJie01":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"package duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"TohWeiJie01"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"TohWeiJie01"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"TohWeiJie01"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"TohWeiJie01"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"TohWeiJie01"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"TohWeiJie01"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"TohWeiJie01"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"TohWeiJie01"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"TohWeiJie01"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"TohWeiJie01"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"TohWeiJie01"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"TohWeiJie01"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"TohWeiJie01"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"TohWeiJie01"},"content":"        duke \u003d d;","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"TohWeiJie01"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"TohWeiJie01"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"TohWeiJie01"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"TohWeiJie01"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"TohWeiJie01"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"TohWeiJie01"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"TohWeiJie01"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"TohWeiJie01"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"TohWeiJie01"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"TohWeiJie01"},"content":"        );","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"TohWeiJie01"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"TohWeiJie01":52}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":" * The command class encapsulates an executable command by Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":"     * The abstract method to execute the correct response to the user\u0027s command.","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"TohWeiJie01"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"TohWeiJie01"},"content":"     * @param storage The storage Duke uses to save and load the tasklist from.","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"TohWeiJie01"},"content":"     * @param taskList The list of tasks Duke needs to execute on.","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"     * @param ui The Ui Duke utilises to interact with the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"TohWeiJie01"},"content":"    public abstract String execute(Storage storage, TaskList taskList, Ui ui) throws IOException, DukeException;","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"TohWeiJie01"},"content":"     * Indicates whether the user is still going to use Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"TohWeiJie01"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"TohWeiJie01"},"content":"     * @return False to indicate that the user has no yet stopped using Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"TohWeiJie01"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"TohWeiJie01"},"content":"        return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"TohWeiJie01":32}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":" * The DeadlineCommand class encapsulates the execution of the deadline command from the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"TohWeiJie01"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"TohWeiJie01"},"content":"    /** The deadline command inputted by the user. */","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"TohWeiJie01"},"content":"    private String fullCommand;","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"TohWeiJie01"},"content":"     * Constructor to intialise a DeadlineCommand.","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"TohWeiJie01"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"TohWeiJie01"},"content":"     * @param fullCommand The deadline command inputted by the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"TohWeiJie01"},"content":"    public DeadlineCommand(String fullCommand) {","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"TohWeiJie01"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"TohWeiJie01"},"content":"     * Executes the response to the deadline command from the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"TohWeiJie01"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"TohWeiJie01"},"content":"     * @param storage The storage Duke uses to save and load the tasklist from.","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"TohWeiJie01"},"content":"     * @param taskList The list of tasks Duke needs to execute on.","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"TohWeiJie01"},"content":"     * @param ui The Ui Duke utilises to interact with the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"TohWeiJie01"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"TohWeiJie01"},"content":"    public String execute(Storage storage, TaskList taskList, Ui ui) throws IOException, DukeException {","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"TohWeiJie01"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"TohWeiJie01"},"content":"            if (fullCommand.equals(\"deadline\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"TohWeiJie01"},"content":"                throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"TohWeiJie01"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"TohWeiJie01"},"content":"            String deadlineDescription \u003d fullCommand.split(\" \", 2)[1];","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"TohWeiJie01"},"content":"            int pos \u003d deadlineDescription.indexOf(\"/\");","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"TohWeiJie01"},"content":"            String description \u003d deadlineDescription.substring(0, pos - 1);","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"TohWeiJie01"},"content":"            String dueDate \u003d deadlineDescription.substring(pos + 4);","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"TohWeiJie01"},"content":"            LocalDate byDate \u003d LocalDate.parse(dueDate);","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"TohWeiJie01"},"content":"            Deadline deadline \u003d new Deadline(description, byDate);","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"TohWeiJie01"},"content":"            taskList.storeTask(deadline);","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"TohWeiJie01"},"content":"            storage.saveFile(taskList.getAllTasks());","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"TohWeiJie01"},"content":"            String output \u003d ui.showTaskAdded(deadline, taskList);","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"TohWeiJie01"},"content":"            return output;","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"TohWeiJie01"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"TohWeiJie01"},"content":"            String output \u003d ui.showError(e.getMessage());","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"TohWeiJie01"},"content":"            return output;","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"TohWeiJie01"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"TohWeiJie01":60}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":" * The DeleteCommand class encapsulates the execution of the delete command from the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"TohWeiJie01"},"content":"    /** The delete command inputted by the user. */","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":"    private String deleteDescription;","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"TohWeiJie01"},"content":"     * Constructor for the DeleteCommand.","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"TohWeiJie01"},"content":"     * @param deleteDescription The delete command inputted by the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"TohWeiJie01"},"content":"    public DeleteCommand(String deleteDescription) {","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"TohWeiJie01"},"content":"        this.deleteDescription \u003d deleteDescription;","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"TohWeiJie01"},"content":"     * Executes the response to the delete command from the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"TohWeiJie01"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"TohWeiJie01"},"content":"     * @param storage The storage Duke uses to save and load the tasklist from.","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"TohWeiJie01"},"content":"     * @param taskList The list of tasks Duke needs to execute on.","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"TohWeiJie01"},"content":"     * @param ui The Ui Duke utilises to interact with the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"TohWeiJie01"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"TohWeiJie01"},"content":"    public String execute(Storage storage, TaskList taskList, Ui ui) throws IOException {","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"TohWeiJie01"},"content":"        Integer taskNo \u003d Integer.parseInt(deleteDescription);","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"TohWeiJie01"},"content":"        Task deletedTask \u003d taskList.getSpecificTask(taskNo);","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"TohWeiJie01"},"content":"        taskList.deleteTask(taskNo);","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"TohWeiJie01"},"content":"        storage.saveFile(taskList.getAllTasks());","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"TohWeiJie01"},"content":"        String output \u003d ui.showTaskDeleted(deletedTask, taskList);","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"TohWeiJie01"},"content":"        return output;","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"TohWeiJie01":43}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":" * The DoneCommand class encapsulates the execution of the done command from the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"TohWeiJie01"},"content":"    /** The done command inputted by the user. */","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":"    private String doneDescription;","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"TohWeiJie01"},"content":"     * Constructor for the DoneCommand.","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"TohWeiJie01"},"content":"     * @param doneDescription The delete command inputted by the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"TohWeiJie01"},"content":"    public DoneCommand(String doneDescription) {","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"TohWeiJie01"},"content":"        this.doneDescription \u003d doneDescription;","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"TohWeiJie01"},"content":"     * Executes the response to the delete command from the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"TohWeiJie01"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"TohWeiJie01"},"content":"     * @param storage The storage Duke uses to save and load the tasklist from.","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"TohWeiJie01"},"content":"     * @param taskList The list of tasks Duke needs to execute on.","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"TohWeiJie01"},"content":"     * @param ui The Ui Duke utilises to interact with the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"TohWeiJie01"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"TohWeiJie01"},"content":"    public String execute(Storage storage, TaskList taskList, Ui ui) throws IOException {","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"TohWeiJie01"},"content":"        Integer taskNo \u003d Integer.parseInt(doneDescription);","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"TohWeiJie01"},"content":"        Task doneTask \u003d taskList.getSpecificTask(taskNo);","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"TohWeiJie01"},"content":"        taskList.doneTask(taskNo);","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"TohWeiJie01"},"content":"        storage.saveFile(taskList.getAllTasks());","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"TohWeiJie01"},"content":"        String output \u003d ui.showTaskDone(doneTask);","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"TohWeiJie01"},"content":"        return output;","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"TohWeiJie01":43}},{"path":"src/main/java/duke/command/ErrorCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":" * The DoneCommand class encapsulates an unrecognised command from the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"public class ErrorCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":"     * Executes the response to the delete command from the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"TohWeiJie01"},"content":"     * @param storage The storage Duke uses to save and load the tasklist from.","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":"     * @param taskList The list of tasks Duke needs to execute on.","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"TohWeiJie01"},"content":"     * @param ui The Ui Duke utilises to interact with the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"TohWeiJie01"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"    public String execute(Storage storage, TaskList taskList, Ui ui) {","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"TohWeiJie01"},"content":"        String output \u003d ui.showUnrecognised();","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"TohWeiJie01"},"content":"        return output;","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"TohWeiJie01":24}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":" * The EventCommand class encapsulates the execution of the event command from the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"TohWeiJie01"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"TohWeiJie01"},"content":"    /** The event command inputted by the user. */","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"TohWeiJie01"},"content":"    private String fullCommand;","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"TohWeiJie01"},"content":"     * Constructor to intialise an EventCommand.","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"TohWeiJie01"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"TohWeiJie01"},"content":"     * @param fullCommand The event command inputted by the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"TohWeiJie01"},"content":"    public EventCommand(String fullCommand) {","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"TohWeiJie01"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"TohWeiJie01"},"content":"     * Executes the response to the event command from the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"TohWeiJie01"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"TohWeiJie01"},"content":"     * @param storage The storage Duke uses to save and load the tasklist from.","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"TohWeiJie01"},"content":"     * @param taskList The list of tasks Duke needs to execute on.","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"TohWeiJie01"},"content":"     * @param ui The Ui Duke utilises to interact with the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"TohWeiJie01"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"TohWeiJie01"},"content":"    public String execute(Storage storage, TaskList taskList, Ui ui) throws IOException, DukeException {","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"TohWeiJie01"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"TohWeiJie01"},"content":"            if (fullCommand.equals(\"event\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"TohWeiJie01"},"content":"                throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"TohWeiJie01"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"TohWeiJie01"},"content":"            String eventDescription \u003d fullCommand.split(\" \", 2)[1];","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"TohWeiJie01"},"content":"            int pos \u003d eventDescription.indexOf(\"/\");","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"TohWeiJie01"},"content":"            String description \u003d eventDescription.substring(0, pos - 1);","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"TohWeiJie01"},"content":"            String eventTime \u003d eventDescription.substring(pos + 4);","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"TohWeiJie01"},"content":"            LocalDateTime atDateTime \u003d LocalDateTime.parse(eventTime);","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"TohWeiJie01"},"content":"            Event event \u003d new Event(description, atDateTime);","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"TohWeiJie01"},"content":"            taskList.storeTask(event);","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"TohWeiJie01"},"content":"            storage.saveFile(taskList.getAllTasks());","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"TohWeiJie01"},"content":"            String output \u003d ui.showTaskAdded(event, taskList);","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"TohWeiJie01"},"content":"            return output;","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"TohWeiJie01"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"TohWeiJie01"},"content":"            String output \u003d ui.showError(e.getMessage());","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"TohWeiJie01"},"content":"            return output;","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"TohWeiJie01"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"TohWeiJie01":60}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":" * The ExitCommand class encapsulates the execution of the bye command from the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":"     * Executes the response to the bye command from the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"TohWeiJie01"},"content":"     * @param storage The storage Duke uses to save and load the tasklist from.","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":"     * @param taskList The list of tasks Duke needs to execute on.","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"TohWeiJie01"},"content":"     * @param ui The Ui Duke utilises to interact with the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"TohWeiJie01"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"    public String execute(Storage storage, TaskList taskList, Ui ui) {","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"TohWeiJie01"},"content":"        String output \u003d ui.greetGoodbye();","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"TohWeiJie01"},"content":"        return output;","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"TohWeiJie01"},"content":"     * Indicates whether the user is still going to use Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"TohWeiJie01"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"TohWeiJie01"},"content":"     * @return True to indicate that the user is going to stop using Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"TohWeiJie01"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"TohWeiJie01"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"TohWeiJie01"},"content":"        return true;","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"TohWeiJie01":34}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":" * The FindCommand class encapsulates the execution of the find command from the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":"    /** The keyword to be searched for. */","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":"    private String keyword;","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":"     * Constructor to initialise a FindCommand.","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"TohWeiJie01"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"TohWeiJie01"},"content":"     * @param keyword The keyword to be searched for.","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"TohWeiJie01"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"TohWeiJie01"},"content":"     * Executes the response to the find command from the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"TohWeiJie01"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"TohWeiJie01"},"content":"     * @param storage The storage Duke uses to save and load the tasklist from.","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"TohWeiJie01"},"content":"     * @param taskList The list of tasks Duke needs to execute on.","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"TohWeiJie01"},"content":"     * @param ui The Ui Duke utilises to interact with the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"TohWeiJie01"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"TohWeiJie01"},"content":"    public String execute(Storage storage, TaskList taskList, Ui ui) {","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"TohWeiJie01"},"content":"        String output \u003d ui.showFind(taskList, keyword);","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"TohWeiJie01"},"content":"        return output;","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"TohWeiJie01":36}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":" * The ListCommand class encapsulates the execution of the list command from the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":"     * Executes the response to the delete command from the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"TohWeiJie01"},"content":"     * @param storage The storage Duke uses to save and load the tasklist from.","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":"     * @param taskList The list of tasks Duke needs to execute on.","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"TohWeiJie01"},"content":"     * @param ui The Ui Duke utilises to interact with the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"TohWeiJie01"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"    public String execute(Storage storage, TaskList taskList, Ui ui) {","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"TohWeiJie01"},"content":"        String output \u003d ui.showList(taskList);","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"TohWeiJie01"},"content":"        return output;","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"TohWeiJie01":24}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":" * The DeadlineCommand class encapsulates the execution of the todo command from the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":"    /** The todo command inputted by the user. */","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"TohWeiJie01"},"content":"    private String fullCommand;","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"     * Constructor to intialise a TodoCommand.","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"TohWeiJie01"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"TohWeiJie01"},"content":"     * @param fullCommand The todo command inputted by the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"TohWeiJie01"},"content":"    public TodoCommand(String fullCommand) {","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"TohWeiJie01"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"TohWeiJie01"},"content":"     * Executes the response to the todo command from the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"TohWeiJie01"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"TohWeiJie01"},"content":"     * @param storage The storage Duke uses to save and load the tasklist from.","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"TohWeiJie01"},"content":"     * @param taskList The list of tasks Duke needs to execute on.","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"TohWeiJie01"},"content":"     * @param ui The Ui Duke utilises to interact with the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"TohWeiJie01"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"TohWeiJie01"},"content":"    public String execute(Storage storage, TaskList taskList, Ui ui) throws IOException, DukeException {","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"TohWeiJie01"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"TohWeiJie01"},"content":"            if (fullCommand.equals(\"todo\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"TohWeiJie01"},"content":"                throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"TohWeiJie01"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"TohWeiJie01"},"content":"            String todoDescription \u003d fullCommand.split(\" \", 2)[1];","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"TohWeiJie01"},"content":"            Todo todo \u003d new Todo(todoDescription);","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"TohWeiJie01"},"content":"            taskList.storeTask(todo);","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"TohWeiJie01"},"content":"            storage.saveFile(taskList.getAllTasks());","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"TohWeiJie01"},"content":"            String output \u003d ui.showTaskAdded(todo, taskList);","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"TohWeiJie01"},"content":"            return output;","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"TohWeiJie01"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"TohWeiJie01"},"content":"            String output \u003d ui.showError(e.getMessage());","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"TohWeiJie01"},"content":"            return output;","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"TohWeiJie01"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"TohWeiJie01":54}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"package duke.exception;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":" * The DukeException class encapsulates exceptions specific to Duke.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"public class DukeException extends IllegalArgumentException {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"     * Constructor for DukeException.","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"     * @param message The message to be shown should there be a Duke Exception.","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"        super(message);","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"TohWeiJie01"},"content":"     * Returns the message regarding the DukeException.","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"TohWeiJie01"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"     * @return Message regarding the DukeException.","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"TohWeiJie01"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"TohWeiJie01"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"TohWeiJie01"},"content":"        return getMessage();","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"TohWeiJie01":26}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"package duke.parser;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"import duke.command.DeadlineCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"import duke.command.ErrorCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":"import duke.command.EventCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":"import duke.command.TodoCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"TohWeiJie01"},"content":" * The Parser class encapsulates the dealing of user commands by Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"TohWeiJie01"},"content":"public class Parser {","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"     * Produces the corresponding type of executable command from the user input.","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"TohWeiJie01"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"TohWeiJie01"},"content":"     * @param fullCommand The full command input by the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"TohWeiJie01"},"content":"     * @return The corresponding type of executable command from the user input.","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"TohWeiJie01"},"content":"    public Command parse(String fullCommand) {","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"TohWeiJie01"},"content":"        Command command;","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"TohWeiJie01"},"content":"        String[] commandSplit \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"TohWeiJie01"},"content":"        // Determine the type of command and initialise the according command","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"TohWeiJie01"},"content":"        switch(commandSplit[0]) {","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"TohWeiJie01"},"content":"        case \"bye\":","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"TohWeiJie01"},"content":"            command \u003d new ExitCommand();","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"TohWeiJie01"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"TohWeiJie01"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"TohWeiJie01"},"content":"            command \u003d new TodoCommand(fullCommand);","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"TohWeiJie01"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"TohWeiJie01"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"TohWeiJie01"},"content":"            command \u003d new DeadlineCommand(fullCommand);","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"TohWeiJie01"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"TohWeiJie01"},"content":"        case \"event\":","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"TohWeiJie01"},"content":"            command \u003d new EventCommand(fullCommand);","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"TohWeiJie01"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"TohWeiJie01"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"TohWeiJie01"},"content":"            command \u003d new DeleteCommand(commandSplit[1]);","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"TohWeiJie01"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"TohWeiJie01"},"content":"        case \"done\":","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"TohWeiJie01"},"content":"            command \u003d new DoneCommand(commandSplit[1]);","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"TohWeiJie01"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"TohWeiJie01"},"content":"        case \"list\":","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"TohWeiJie01"},"content":"            command \u003d new ListCommand();","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"TohWeiJie01"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"TohWeiJie01"},"content":"        case \"find\":","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"TohWeiJie01"},"content":"            command \u003d new FindCommand(commandSplit[1]);","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"TohWeiJie01"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"TohWeiJie01"},"content":"        default:","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"TohWeiJie01"},"content":"            command \u003d new ErrorCommand();","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"TohWeiJie01"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"TohWeiJie01"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"TohWeiJie01"},"content":"        return command;","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"TohWeiJie01":62}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"package duke.storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"import java.io.File;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"TohWeiJie01"},"content":" * The Storage class encapsulates the action of saving the taskList created by Duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"TohWeiJie01"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"TohWeiJie01"},"content":"public class Storage {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"TohWeiJie01"},"content":"    /** The file for the Storage to save the tasklist in. */","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"TohWeiJie01"},"content":"    private File file;","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"TohWeiJie01"},"content":"    /** Constant String for the symbol to separate the descriptions of the saved tasklist. */","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"TohWeiJie01"},"content":"    private final String SEPARATE \u003d \" / \";","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"TohWeiJie01"},"content":"     * Constructor to initialise the Storage.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"TohWeiJie01"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"TohWeiJie01"},"content":"     * @param pathName The path name to be converted to create a new File instance.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"TohWeiJie01"},"content":"    public Storage(String pathName) {","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"TohWeiJie01"},"content":"        this.file \u003d new File(pathName);","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"TohWeiJie01"},"content":"        if (!this.file.getParentFile().exists()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"TohWeiJie01"},"content":"            this.file.getParentFile().mkdirs();","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"TohWeiJie01"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"TohWeiJie01"},"content":"     * Saves the contents of the tasklist to the designated file.","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"TohWeiJie01"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"TohWeiJie01"},"content":"     * @param taskList The current state of the tasklist handled by Duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"TohWeiJie01"},"content":"    public void saveFile(ArrayList\u003cTask\u003e taskList) throws IOException {","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"TohWeiJie01"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"TohWeiJie01"},"content":"            FileWriter myWriter \u003d new FileWriter(this.file);","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"TohWeiJie01"},"content":"            String taskToFile \u003d \"\";","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"TohWeiJie01"},"content":"            // Iterate through every element in the tasklist to create the text version of the task","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"TohWeiJie01"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"TohWeiJie01"},"content":"                String checkTaskType \u003d task.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"TohWeiJie01"},"content":"                String taskStatus \u003d (task.getStatusIcon().equals(\"X\")) ? \"1\" : \"0\";","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"TohWeiJie01"},"content":"                // Determine the type of task","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"TohWeiJie01"},"content":"                switch(checkTaskType.charAt(1)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"TohWeiJie01"},"content":"                case \u0027T\u0027:","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"TohWeiJie01"},"content":"                    Todo todo \u003d (Todo) task;","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"TohWeiJie01"},"content":"                    taskToFile \u003d \"Todo\" + SEPARATE + taskStatus + SEPARATE + todo.getTaskDescription();","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"TohWeiJie01"},"content":"                    break;","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"TohWeiJie01"},"content":"                case \u0027D\u0027:","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"TohWeiJie01"},"content":"                    Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"TohWeiJie01"},"content":"                    taskToFile \u003d \"Deadline\" + SEPARATE + taskStatus + SEPARATE + deadline.getTaskDescription()","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"TohWeiJie01"},"content":"                            + SEPARATE + deadline.getBy();","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"TohWeiJie01"},"content":"                    break;","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"TohWeiJie01"},"content":"                case \u0027E\u0027:","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"TohWeiJie01"},"content":"                    Event event \u003d (Event) task;","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"TohWeiJie01"},"content":"                    taskToFile \u003d \"Event\" + SEPARATE + taskStatus + SEPARATE + event.getTaskDescription()","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"TohWeiJie01"},"content":"                            + SEPARATE + event.getAt();","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"TohWeiJie01"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"TohWeiJie01"},"content":"                // Save the newly text version of the task into the file","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"TohWeiJie01"},"content":"                myWriter.write(taskToFile + \"\\n\");","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"TohWeiJie01"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"TohWeiJie01"},"content":"            myWriter.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"TohWeiJie01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"TohWeiJie01"},"content":"            System.out.println(\"Master something went wrong, I can\u0027t save the Tasklist! ☹\");","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"TohWeiJie01"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"TohWeiJie01"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"TohWeiJie01"},"content":"     * Loads the contents of the previously saved tasklist from the designated file.","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"TohWeiJie01"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":86,"author":{"gitId":"TohWeiJie01"},"content":"     * @return The current state of the tasklist handled by Duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"TohWeiJie01"},"content":"     * @throws IOException","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"TohWeiJie01"},"content":"    public ArrayList\u003cTask\u003e loadFile() throws IOException {","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"TohWeiJie01"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"TohWeiJie01"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"TohWeiJie01"},"content":"            ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"TohWeiJie01"},"content":"            // Iterate through line by line of the designated file to obtain every task in text form","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"TohWeiJie01"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"TohWeiJie01"},"content":"                String currTask \u003d scanner.nextLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"TohWeiJie01"},"content":"                Task task \u003d null;","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"TohWeiJie01"},"content":"                String[] taskBreakdown \u003d currTask.split(SEPARATE);","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"TohWeiJie01"},"content":"                // Determine the type of task from the text file and initialise the specified task","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"TohWeiJie01"},"content":"                switch(taskBreakdown[0]) {","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"TohWeiJie01"},"content":"                case \"Todo\":","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"TohWeiJie01"},"content":"                    task \u003d new Todo(taskBreakdown[2]);","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"TohWeiJie01"},"content":"                    break;","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"TohWeiJie01"},"content":"                case \"Deadline\":","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"TohWeiJie01"},"content":"                    LocalDate by \u003d LocalDate.parse(taskBreakdown[3]);","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"TohWeiJie01"},"content":"                    task \u003d new Deadline(taskBreakdown[2], by);","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"TohWeiJie01"},"content":"                    break;","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"TohWeiJie01"},"content":"                case \"Event\":","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"TohWeiJie01"},"content":"                    LocalDateTime at \u003d LocalDateTime.parse(taskBreakdown[3]);","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"TohWeiJie01"},"content":"                    task \u003d new Event(taskBreakdown[2], at);","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"TohWeiJie01"},"content":"                    break;","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"TohWeiJie01"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"TohWeiJie01"},"content":"                if (taskBreakdown[1].equals(\"1\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"TohWeiJie01"},"content":"                    task.completeTask();","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"TohWeiJie01"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"TohWeiJie01"},"content":"                // Add the task back to the tasklist","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"TohWeiJie01"},"content":"                taskList.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":121,"author":{"gitId":"TohWeiJie01"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"TohWeiJie01"},"content":"            return taskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":124,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":125,"author":{"gitId":"TohWeiJie01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":126,"author":{"gitId":"TohWeiJie01"},"content":"            System.out.println(\"Master something went wrong, I can\u0027t load the Tasklist! ☹\");","lastModifiedDate":"2021-08-25"},{"lineNumber":127,"author":{"gitId":"TohWeiJie01"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-25"},{"lineNumber":128,"author":{"gitId":"TohWeiJie01"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":129,"author":{"gitId":"TohWeiJie01"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":130,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":131,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"TohWeiJie01":131}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":" * The Deadline class encapsulates a deadline task.","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"    /** The deadline for the task. */","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":"    protected LocalDate dueDate;","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"TohWeiJie01"},"content":"     * Constructor to initialise a Deadline task.","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"TohWeiJie01"},"content":"     * @param description The description of the Deadline task.","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"TohWeiJie01"},"content":"     * @param dueDate The deadline for the Deadline task.","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"    public Deadline(String description, LocalDate dueDate) {","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"TohWeiJie01"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"TohWeiJie01"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"TohWeiJie01"},"content":"     * Gets the by description for the Deadline task.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"TohWeiJie01"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"TohWeiJie01"},"content":"     * @return The by description for the Deadline task.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"TohWeiJie01"},"content":"    public LocalDate getBy() {","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"TohWeiJie01"},"content":"        return this.dueDate;","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"TohWeiJie01"},"content":"     * Returns the string representation of the Deadline task.","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"TohWeiJie01"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"TohWeiJie01"},"content":"     * @return The string representation of the Deadline task.","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"TohWeiJie01"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"TohWeiJie01"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"TohWeiJie01"},"content":"        return \"[D]\" + super.toString()","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"TohWeiJie01"},"content":"                + \" (by: \" + dueDate.format(DateTimeFormatter.ofPattern(\"MM dd yyyy\")) + \")\";","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"TohWeiJie01":44}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":" * The Event class encapsulates an event class.","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"    /** The date and time the event will be taking place. */","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":"    protected LocalDateTime eventTime;","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"TohWeiJie01"},"content":"     * Constructor to initialise an Event task.","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"TohWeiJie01"},"content":"     * @param description The description of the Event task.","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"TohWeiJie01"},"content":"     * @param eventTime The date and time for the Event task.","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"    public Event(String description, LocalDateTime eventTime) {","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"TohWeiJie01"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"TohWeiJie01"},"content":"        this.eventTime \u003d eventTime;","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"TohWeiJie01"},"content":"     * Gets the at description for the Event task.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"TohWeiJie01"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"TohWeiJie01"},"content":"     * @return The at description for the Event task.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"TohWeiJie01"},"content":"    public LocalDateTime getAt() {","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"TohWeiJie01"},"content":"        return this.eventTime;","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"TohWeiJie01"},"content":"     * Returns the string representation of the Event task.","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"TohWeiJie01"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"TohWeiJie01"},"content":"     * @return The string representation of the Event task.","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"TohWeiJie01"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"TohWeiJie01"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"TohWeiJie01"},"content":"        return \"[E]\" + super.toString() + \" (at: \"","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"TohWeiJie01"},"content":"                + eventTime.format(DateTimeFormatter.ofPattern(\"MM dd yyyy \u0027at\u0027 hh:mm\")) + \")\";","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"TohWeiJie01":44}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":" * The Task class encapsulates a task.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"public class Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":"    /** The given task description. */","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"    protected String description;","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"    /** Boolean to represent if the task is done, true if done, false otherwise. */","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"     * Constructor for initialising a Task.","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"TohWeiJie01"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":"     * @param description The given task description.","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"TohWeiJie01"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"TohWeiJie01"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"TohWeiJie01"},"content":"     * Returns the task description.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"TohWeiJie01"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"TohWeiJie01"},"content":"     * @return Description of the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"TohWeiJie01"},"content":"    public String getTaskDescription() {","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"TohWeiJie01"},"content":"        return this.description;","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"TohWeiJie01"},"content":"     * Checks and returns the status of a task in the form of \"X\" or \" \".","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"TohWeiJie01"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"TohWeiJie01"},"content":"     * @return If the task is done \"X\" will be returned, else \" \" will be returned.","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"TohWeiJie01"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"TohWeiJie01"},"content":"        if (isDone) {","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"TohWeiJie01"},"content":"            return \"X\";","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"TohWeiJie01"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"TohWeiJie01"},"content":"            return \" \";","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"TohWeiJie01"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"TohWeiJie01"},"content":"     * Indicates that the Task is done.","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"TohWeiJie01"},"content":"    public void completeTask() {","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"TohWeiJie01"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"TohWeiJie01"},"content":"     * Returns the string representation of the Task.","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"TohWeiJie01"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"TohWeiJie01"},"content":"     * @return String representation of the Task.","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"TohWeiJie01"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"TohWeiJie01"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"TohWeiJie01":60}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":" * The To-do class encapsulates a Todo task.","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"     * Constructor to initialise a Todo task.","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"     * @param description The description of a Todo task.","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"TohWeiJie01"},"content":"     * Returns the string representation of the Todo task.","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"TohWeiJie01"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"     * @return String representation of the Todo task.","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"TohWeiJie01"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"TohWeiJie01"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"TohWeiJie01"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"TohWeiJie01":26}},{"path":"src/main/java/duke/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"package duke.tasklist;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":" * The TaskList class encapsulates a list of tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"public class TaskList {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":"    /** An arraylist of Tasks to note all the Tasks stored in the TaskList. */","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":"    private ArrayList\u003cTask\u003e allTasks;","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"TohWeiJie01"},"content":"    /** Pointer to indicate the next position to store the task in the arraylist. */","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":"    private int nextSpaceToStore;","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"TohWeiJie01"},"content":"     * Constructor to initialise a TaskList.","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"TohWeiJie01"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"TohWeiJie01"},"content":"        ArrayList\u003cTask\u003e allTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"TohWeiJie01"},"content":"        this.allTasks \u003d allTasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"TohWeiJie01"},"content":"        this.nextSpaceToStore \u003d 0;","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"TohWeiJie01"},"content":"     * Constructor to initialise a TaskList.","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"TohWeiJie01"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"TohWeiJie01"},"content":"     * @param allTasks The list of tasks in the tasklist.","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"TohWeiJie01"},"content":"    public TaskList(ArrayList\u003cTask\u003e allTasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"TohWeiJie01"},"content":"        this.allTasks \u003d allTasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"TohWeiJie01"},"content":"        this.nextSpaceToStore \u003d allTasks.size();","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"TohWeiJie01"},"content":"     * Stores the task to the TaskList and increment the nextSpaceToStore pointer by one.","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"TohWeiJie01"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"TohWeiJie01"},"content":"     * @param toStore The task to store into the TaskList.","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"TohWeiJie01"},"content":"    public void storeTask(Task toStore) {","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"TohWeiJie01"},"content":"        allTasks.add(toStore);","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"TohWeiJie01"},"content":"        nextSpaceToStore \u003d nextSpaceToStore + 1;","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"TohWeiJie01"},"content":"     * Indicates the specified task is done in the TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"TohWeiJie01"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"TohWeiJie01"},"content":"     * @param taskNo The task that is completed.","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"TohWeiJie01"},"content":"    public void doneTask(int taskNo) {","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"TohWeiJie01"},"content":"        Task doneTask \u003d allTasks.get(taskNo - 1);","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"TohWeiJie01"},"content":"        doneTask.completeTask();","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"TohWeiJie01"},"content":"     * Deletes the specified task from the TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"TohWeiJie01"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"TohWeiJie01"},"content":"     * @param taskNo The task to be deleted.","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"TohWeiJie01"},"content":"    public void deleteTask(int taskNo) {","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"TohWeiJie01"},"content":"        allTasks.remove(taskNo - 1);","lastModifiedDate":"2021-08-19"},{"lineNumber":64,"author":{"gitId":"TohWeiJie01"},"content":"        nextSpaceToStore \u003d nextSpaceToStore - 1;","lastModifiedDate":"2021-08-19"},{"lineNumber":65,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"TohWeiJie01"},"content":"     * Returns the next position to store the task in the tasklist.","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"TohWeiJie01"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":70,"author":{"gitId":"TohWeiJie01"},"content":"     * @return The next position to store the task in the tasklist.","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"TohWeiJie01"},"content":"    public int getNextSpaceToStore() {","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"TohWeiJie01"},"content":"        return this.nextSpaceToStore;","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":75,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":76,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"TohWeiJie01"},"content":"     * Returns the entire ArrayList the tasks are stored in.","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"TohWeiJie01"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":79,"author":{"gitId":"TohWeiJie01"},"content":"     * @return The entire ArrayList the tasks are stored in.","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"TohWeiJie01"},"content":"    public ArrayList\u003cTask\u003e getAllTasks() {","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"TohWeiJie01"},"content":"        return this.allTasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"TohWeiJie01"},"content":"     * Returns the specified task from the tasklist.","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"TohWeiJie01"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":88,"author":{"gitId":"TohWeiJie01"},"content":"     * @param taskNo The task to be retrieved.","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"TohWeiJie01"},"content":"     * @return The specified task from the tasklist.","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"TohWeiJie01"},"content":"    public Task getSpecificTask(int taskNo) {","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"TohWeiJie01"},"content":"        return allTasks.get(taskNo - 1);","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":96,"author":{"gitId":"TohWeiJie01"},"content":"     * Returns the string representation of the number of tasks in the TaskList.","lastModifiedDate":"2021-08-18"},{"lineNumber":97,"author":{"gitId":"TohWeiJie01"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":98,"author":{"gitId":"TohWeiJie01"},"content":"     * @return String representation of the number of tasks in the TaskList.","lastModifiedDate":"2021-08-18"},{"lineNumber":99,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":100,"author":{"gitId":"TohWeiJie01"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":101,"author":{"gitId":"TohWeiJie01"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":102,"author":{"gitId":"TohWeiJie01"},"content":"        return \"Now you have \" + this.nextSpaceToStore + \" tasks in the list.\";","lastModifiedDate":"2021-08-18"},{"lineNumber":103,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":104,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"TohWeiJie01":104}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"package duke.ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":" * The Ui class encapsulates the user interactions Duke will provide to the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":"public class Ui {","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"    // The lines that Duke will print","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"TohWeiJie01"},"content":"    /** The Duke chatbot\u0027s logo. */","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":"    private final String LOGO \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"TohWeiJie01"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"TohWeiJie01"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"TohWeiJie01"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"TohWeiJie01"},"content":"    /** The line break between each interaction. */","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"TohWeiJie01"},"content":"    private final String LINE_BREAK \u003d \"-------------------------------------------------------------------\";","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"TohWeiJie01"},"content":"    /** The standard welcome message Duke will print as it starts. */","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"TohWeiJie01"},"content":"    private final String WELCOME_MESSAGE \u003d \"Hello I\u0027m\\n\" + LOGO + \"How may I help you today boss?\\n\";","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"TohWeiJie01"},"content":"    /** The standard goodbye message Duke will print as it closes. */","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"TohWeiJie01"},"content":"    private final String GOODBYE_MESSAGE \u003d \"Okay then! I hope to see you again soon boss!\";","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"TohWeiJie01"},"content":"    /** The standard delete message Duke will print as it adds a task. */","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"TohWeiJie01"},"content":"    private final String ADD_MESSAGE \u003d \"Got it boss! I\u0027ve added this task:\";","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"TohWeiJie01"},"content":"    /** The standard delete message Duke will print as it deletes a task. */","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"TohWeiJie01"},"content":"    private final String DELETE_MESSAGE \u003d \"Noted boss. I\u0027ve removed this task:\";","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"TohWeiJie01"},"content":"    /** The standard delete message Duke will print as it marks a task as done. */","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"TohWeiJie01"},"content":"    private final String DONE_MESSAGE \u003d \"Nice one boss! I\u0027ve marked this task as done:\";","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"TohWeiJie01"},"content":"    /** The standard error message Duke will print if an unrecognised command is inputted. */","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"TohWeiJie01"},"content":"    private final String UNRECOGNISED_MESSAGE \u003d \"☹ I\u0027m sorry boss! I\u0027m not quite sure what you need me to do!\";","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"TohWeiJie01"},"content":"    /** The standard list message Duke will print as it lists all the task. */","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"TohWeiJie01"},"content":"    private final String LIST_MESSAGE \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"TohWeiJie01"},"content":"    /** The standard find message Duke will print as it finds all the matching tasks. */","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"TohWeiJie01"},"content":"    private final String FIND_MESSAGE \u003d \"Here are the matching tasks in your list:\";","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"TohWeiJie01"},"content":"    /** The scanner utilised to read inputs from the user. */","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"TohWeiJie01"},"content":"    private Scanner scan;","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"TohWeiJie01"},"content":"     * Constructor to initialise the Ui.","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"TohWeiJie01"},"content":"    public Ui() {","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"TohWeiJie01"},"content":"        this.scan \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"TohWeiJie01"},"content":"     * Reads the inputs from the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"TohWeiJie01"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"TohWeiJie01"},"content":"     * @return The input given by the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"TohWeiJie01"},"content":"    public String readCommand() {","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"TohWeiJie01"},"content":"        return scan.nextLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"TohWeiJie01"},"content":"     * Prints the full welcome message when Duke starts.","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"TohWeiJie01"},"content":"    public String greetWelcome() {","lastModifiedDate":"2021-09-02"},{"lineNumber":64,"author":{"gitId":"TohWeiJie01"},"content":"        String output \u003d LINE_BREAK + \"\\n\" + WELCOME_MESSAGE + \"\\n\" + LINE_BREAK + \"\\n\";","lastModifiedDate":"2021-09-02"},{"lineNumber":65,"author":{"gitId":"TohWeiJie01"},"content":"        System.out.println(output);","lastModifiedDate":"2021-09-02"},{"lineNumber":66,"author":{"gitId":"TohWeiJie01"},"content":"        return output;","lastModifiedDate":"2021-09-02"},{"lineNumber":67,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"TohWeiJie01"},"content":"     * Prints the full goodbye message when Duke closes.","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"TohWeiJie01"},"content":"    public String greetGoodbye() {","lastModifiedDate":"2021-09-02"},{"lineNumber":73,"author":{"gitId":"TohWeiJie01"},"content":"        System.out.println(GOODBYE_MESSAGE);","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"TohWeiJie01"},"content":"        return GOODBYE_MESSAGE;","lastModifiedDate":"2021-09-02"},{"lineNumber":75,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"TohWeiJie01"},"content":"     * Prints the divider between interactions between Duke and the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"TohWeiJie01"},"content":"    public void showLine() {","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"TohWeiJie01"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"TohWeiJie01"},"content":"     * Prints the full added task message when a task is added successfully.","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"TohWeiJie01"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":87,"author":{"gitId":"TohWeiJie01"},"content":"     * @param task The added task.","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"TohWeiJie01"},"content":"     * @param taskList The tasklist the task is added to.","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"TohWeiJie01"},"content":"    public String showTaskAdded(Task task, TaskList taskList) {","lastModifiedDate":"2021-09-02"},{"lineNumber":91,"author":{"gitId":"TohWeiJie01"},"content":"        String output \u003d ADD_MESSAGE + \"\\n\";","lastModifiedDate":"2021-09-02"},{"lineNumber":92,"author":{"gitId":"TohWeiJie01"},"content":"        output +\u003d \"  \" + task + \"\\n\" + taskList.toString() + \"\\n\";","lastModifiedDate":"2021-09-02"},{"lineNumber":93,"author":{"gitId":"TohWeiJie01"},"content":"        System.out.println(output);","lastModifiedDate":"2021-09-02"},{"lineNumber":94,"author":{"gitId":"TohWeiJie01"},"content":"        return output;","lastModifiedDate":"2021-09-02"},{"lineNumber":95,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"TohWeiJie01"},"content":"     * Prints the full deleted task message when a task is deleted successfully.","lastModifiedDate":"2021-08-26"},{"lineNumber":99,"author":{"gitId":"TohWeiJie01"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":100,"author":{"gitId":"TohWeiJie01"},"content":"     * @param task The deleted task.","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"TohWeiJie01"},"content":"     * @param taskList The tasklist the task is deleted from.","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"TohWeiJie01"},"content":"    public String showTaskDeleted(Task task, TaskList taskList) {","lastModifiedDate":"2021-09-02"},{"lineNumber":104,"author":{"gitId":"TohWeiJie01"},"content":"        String output \u003d DELETE_MESSAGE + \"\\n\";","lastModifiedDate":"2021-09-02"},{"lineNumber":105,"author":{"gitId":"TohWeiJie01"},"content":"        output +\u003d \"  \" + task.toString() + \"\\n\";","lastModifiedDate":"2021-09-02"},{"lineNumber":106,"author":{"gitId":"TohWeiJie01"},"content":"        output +\u003d taskList.toString() + \"\\n\";","lastModifiedDate":"2021-09-02"},{"lineNumber":107,"author":{"gitId":"TohWeiJie01"},"content":"        System.out.println(output);","lastModifiedDate":"2021-09-02"},{"lineNumber":108,"author":{"gitId":"TohWeiJie01"},"content":"        return output;","lastModifiedDate":"2021-09-02"},{"lineNumber":109,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":110,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":111,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":112,"author":{"gitId":"TohWeiJie01"},"content":"     * Prints the full done task message when a task is indicated to be done.","lastModifiedDate":"2021-08-26"},{"lineNumber":113,"author":{"gitId":"TohWeiJie01"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":114,"author":{"gitId":"TohWeiJie01"},"content":"     * @param task The done task.","lastModifiedDate":"2021-08-26"},{"lineNumber":115,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":116,"author":{"gitId":"TohWeiJie01"},"content":"    public String showTaskDone(Task task) {","lastModifiedDate":"2021-09-02"},{"lineNumber":117,"author":{"gitId":"TohWeiJie01"},"content":"        String output \u003d DONE_MESSAGE + \"\\n\";","lastModifiedDate":"2021-09-02"},{"lineNumber":118,"author":{"gitId":"TohWeiJie01"},"content":"        output +\u003d \"  \" + task.toString() + \"\\n\";","lastModifiedDate":"2021-09-02"},{"lineNumber":119,"author":{"gitId":"TohWeiJie01"},"content":"        System.out.println(output);","lastModifiedDate":"2021-09-02"},{"lineNumber":120,"author":{"gitId":"TohWeiJie01"},"content":"        return output;","lastModifiedDate":"2021-09-02"},{"lineNumber":121,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":122,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":123,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":124,"author":{"gitId":"TohWeiJie01"},"content":"     * Prints the full list task message.","lastModifiedDate":"2021-08-26"},{"lineNumber":125,"author":{"gitId":"TohWeiJie01"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":126,"author":{"gitId":"TohWeiJie01"},"content":"     * @param taskList The tasklist to be printed.","lastModifiedDate":"2021-08-26"},{"lineNumber":127,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":128,"author":{"gitId":"TohWeiJie01"},"content":"    public String showList(TaskList taskList) {","lastModifiedDate":"2021-09-02"},{"lineNumber":129,"author":{"gitId":"TohWeiJie01"},"content":"        String output \u003d LIST_MESSAGE + \"\\n\";","lastModifiedDate":"2021-09-02"},{"lineNumber":130,"author":{"gitId":"TohWeiJie01"},"content":"        int currPosition \u003d taskList.getNextSpaceToStore();","lastModifiedDate":"2021-08-26"},{"lineNumber":131,"author":{"gitId":"TohWeiJie01"},"content":"        ArrayList\u003cTask\u003e allTasks \u003d taskList.getAllTasks();","lastModifiedDate":"2021-08-26"},{"lineNumber":132,"author":{"gitId":"TohWeiJie01"},"content":"        for (int i \u003d 0; i \u003c currPosition; i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":133,"author":{"gitId":"TohWeiJie01"},"content":"            int currTask \u003d i + 1;","lastModifiedDate":"2021-08-26"},{"lineNumber":134,"author":{"gitId":"TohWeiJie01"},"content":"            output +\u003d currTask + \".\" + allTasks.get(i).toString() + \"\\n\";","lastModifiedDate":"2021-09-02"},{"lineNumber":135,"author":{"gitId":"TohWeiJie01"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":136,"author":{"gitId":"TohWeiJie01"},"content":"        System.out.println(output);","lastModifiedDate":"2021-09-02"},{"lineNumber":137,"author":{"gitId":"TohWeiJie01"},"content":"        return output;","lastModifiedDate":"2021-09-02"},{"lineNumber":138,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":139,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":140,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":141,"author":{"gitId":"TohWeiJie01"},"content":"     * Prints the full list of tasks that matches the description.","lastModifiedDate":"2021-08-26"},{"lineNumber":142,"author":{"gitId":"TohWeiJie01"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":143,"author":{"gitId":"TohWeiJie01"},"content":"     * @param taskList The tasklist to be searched in.","lastModifiedDate":"2021-08-26"},{"lineNumber":144,"author":{"gitId":"TohWeiJie01"},"content":"     * @param description The keyword to be searched.","lastModifiedDate":"2021-08-26"},{"lineNumber":145,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":146,"author":{"gitId":"TohWeiJie01"},"content":"    public String showFind(TaskList taskList, String description) {","lastModifiedDate":"2021-09-02"},{"lineNumber":147,"author":{"gitId":"TohWeiJie01"},"content":"        int findPosition \u003d 1;","lastModifiedDate":"2021-08-26"},{"lineNumber":148,"author":{"gitId":"TohWeiJie01"},"content":"        int currPosition \u003d taskList.getNextSpaceToStore();","lastModifiedDate":"2021-08-26"},{"lineNumber":149,"author":{"gitId":"TohWeiJie01"},"content":"        String output \u003d FIND_MESSAGE + \"\\n\";","lastModifiedDate":"2021-09-02"},{"lineNumber":150,"author":{"gitId":"TohWeiJie01"},"content":"        for (int i \u003d 0; i \u003c currPosition; i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":151,"author":{"gitId":"TohWeiJie01"},"content":"            String foundTask \u003d taskList.getAllTasks().get(i).toString();","lastModifiedDate":"2021-08-26"},{"lineNumber":152,"author":{"gitId":"TohWeiJie01"},"content":"            if (foundTask.contains(description)) {","lastModifiedDate":"2021-08-26"},{"lineNumber":153,"author":{"gitId":"TohWeiJie01"},"content":"                output +\u003d findPosition + \".\" + foundTask + \"\\n\";","lastModifiedDate":"2021-09-02"},{"lineNumber":154,"author":{"gitId":"TohWeiJie01"},"content":"                findPosition++;","lastModifiedDate":"2021-08-26"},{"lineNumber":155,"author":{"gitId":"TohWeiJie01"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":156,"author":{"gitId":"TohWeiJie01"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":157,"author":{"gitId":"TohWeiJie01"},"content":"        System.out.println(output);","lastModifiedDate":"2021-09-02"},{"lineNumber":158,"author":{"gitId":"TohWeiJie01"},"content":"        return output;","lastModifiedDate":"2021-09-02"},{"lineNumber":159,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":160,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":161,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":162,"author":{"gitId":"TohWeiJie01"},"content":"     * Prints the full unrecognised input message.","lastModifiedDate":"2021-08-26"},{"lineNumber":163,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":164,"author":{"gitId":"TohWeiJie01"},"content":"    public String showUnrecognised() {","lastModifiedDate":"2021-09-02"},{"lineNumber":165,"author":{"gitId":"TohWeiJie01"},"content":"        System.out.println(UNRECOGNISED_MESSAGE);","lastModifiedDate":"2021-08-26"},{"lineNumber":166,"author":{"gitId":"TohWeiJie01"},"content":"        return UNRECOGNISED_MESSAGE;","lastModifiedDate":"2021-09-02"},{"lineNumber":167,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":168,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":169,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":170,"author":{"gitId":"TohWeiJie01"},"content":"     * Prints the error message should an error come up during an interaction.","lastModifiedDate":"2021-08-26"},{"lineNumber":171,"author":{"gitId":"TohWeiJie01"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":172,"author":{"gitId":"TohWeiJie01"},"content":"     * @param errorMessage","lastModifiedDate":"2021-08-26"},{"lineNumber":173,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":174,"author":{"gitId":"TohWeiJie01"},"content":"    public String showError(String errorMessage) {","lastModifiedDate":"2021-09-02"},{"lineNumber":175,"author":{"gitId":"TohWeiJie01"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2021-08-26"},{"lineNumber":176,"author":{"gitId":"TohWeiJie01"},"content":"        return errorMessage;","lastModifiedDate":"2021-09-02"},{"lineNumber":177,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":178,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"TohWeiJie01":178}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"TohWeiJie01"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"TohWeiJie01":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"TohWeiJie01"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"TohWeiJie01"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"TohWeiJie01"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"TohWeiJie01"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"TohWeiJie01":19}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"public class DukeTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"    public void dummyTest() {","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"        assertEquals(2,2);","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"TohWeiJie01":12}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"    public void testDeadline() {","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"        LocalDate by \u003d LocalDate.parse(\"2021-08-30\");","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"        Deadline deadline \u003d new Deadline(\"return book\", by);","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":"        assertEquals(\"[D][ ] return book (by: 08 30 2021)\", deadline.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"TohWeiJie01":14}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"public class EventTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"    public void testEvent() {","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"        LocalDateTime at \u003d LocalDateTime.parse(\"2021-08-30T13:55\");","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"        Event event \u003d new Event(\"meeting\", at);","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":"        assertEquals(\"[E][ ] meeting (at: 08 30 2021 at 01:55)\", event.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"TohWeiJie01":14}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"public class TodoTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":"    public void createTest() {","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"        Todo todo \u003d new Todo(\"read book\");","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"        assertEquals(\"[T][ ] read book\", todo.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"TohWeiJie01":12}},{"path":"src/test/java/duke/tasklist/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"package duke.tasklist;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":"public class TaskListTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"TohWeiJie01"},"content":"    public void testAddTaskList() {","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":"        Todo todo \u003d new Todo(\"read book\");","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"TohWeiJie01"},"content":"        LocalDate by \u003d LocalDate.parse(\"2021-08-30\");","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"TohWeiJie01"},"content":"        Deadline deadline \u003d new Deadline(\"return book\", by);","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"TohWeiJie01"},"content":"        LocalDateTime at \u003d LocalDateTime.parse(\"2021-08-30T13:55\");","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"TohWeiJie01"},"content":"        Event event \u003d new Event(\"meeting\", at);","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"TohWeiJie01"},"content":"        ArrayList\u003cTask\u003e allTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"TohWeiJie01"},"content":"        TaskList tasklist \u003d new TaskList(allTasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"TohWeiJie01"},"content":"        tasklist.storeTask(todo);","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"TohWeiJie01"},"content":"        tasklist.storeTask(deadline);","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"TohWeiJie01"},"content":"        tasklist.storeTask(event);","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"TohWeiJie01"},"content":"        assertEquals(\"[T][ ] read book\", tasklist.getSpecificTask(1).toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"TohWeiJie01"},"content":"        assertEquals(\"[D][ ] return book (by: 08 30 2021)\", tasklist.getSpecificTask(2).toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"TohWeiJie01"},"content":"        assertEquals(\"[E][ ] meeting (at: 08 30 2021 at 01:55)\", tasklist.getSpecificTask(3).toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"TohWeiJie01":35}},{"path":"text-ui-test/data/tasklist.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"Todo / 1 / read book","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"Todo / 1 / read book","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"Deadline / 0 / return book / 2021-08-30","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"Event / 0 / project meeting / 2021-08-30T13:55","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"Todo / 0 / read book","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"Deadline / 0 / return book / 2021-08-30","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"Event / 0 / project meeting / 2021-08-30T13:55","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":"Todo / 0 / read book","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"Deadline / 0 / return book / 2021-08-30","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"Event / 0 / project meeting / 2021-08-30T13:55","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"TohWeiJie01":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"todo read book","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"deadline return book /by 2021-08-30","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"event project meeting /at 2021-08-30T13:55","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"done 1","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"done 3","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":"blah","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"deadline","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"delete 2","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"TohWeiJie01":11}}]
