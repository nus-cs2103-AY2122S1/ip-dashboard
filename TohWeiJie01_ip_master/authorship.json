[{"path":"data/tasklist.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"Todo / 1 / read book","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"Deadline / 0 / return book / Sunday","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"Event / 0 / meeting / Monday 2-4pm","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"Todo / 0 / read another book","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"TohWeiJie01":4}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":" * The Deadline class encapsulates a deadline task.","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":"    /** The deadline for the task. */","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"    protected LocalDate by;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":"     * Constructor to initialise a Deadline task.","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":"     * @param description The description of the Deadline task.","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"     * @param by The deadline for the Deadline task.","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"TohWeiJie01"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"TohWeiJie01"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"TohWeiJie01"},"content":"     * Gets the by description for the Deadline task.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"TohWeiJie01"},"content":"     * @return The by description for the Deadline task.","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"TohWeiJie01"},"content":"    public String getBy() {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"TohWeiJie01"},"content":"        return this.by;","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"TohWeiJie01"},"content":"     * Returns the string representation of the Deadline task.","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"TohWeiJie01"},"content":"     * @return The string representation of the Deadline task.","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"TohWeiJie01"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"TohWeiJie01"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"TohWeiJie01"},"content":"        return \"[D]\" + super.toString()","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"TohWeiJie01"},"content":"                + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MM dd yyyy\")) + \")\";","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"TohWeiJie01":38}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":" * The Duke class encapsulates the action of the chatbot Duke.","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":"    /** The path name to be converted to create a new File instance. */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":"    private static final String PATH_NAME \u003d \"./data/tasklist.txt\";","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"TohWeiJie01"},"content":"    /** The storage for Duke to save and load the tasklist to. */","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"TohWeiJie01"},"content":"    /** The tasklist for Duke to store all the tasks. */","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"TohWeiJie01"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"TohWeiJie01"},"content":"     * Constructor to initialise the Duke chatbot.","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"TohWeiJie01"},"content":"    private Duke(String pathName) throws IOException {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"TohWeiJie01"},"content":"        this.storage \u003d new Storage(pathName);","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"TohWeiJie01"},"content":"        this.taskList \u003d new TaskList(storage.loadFile());","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"TohWeiJie01"},"content":"     * Carry out the command entered by the user to Duke.","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"TohWeiJie01"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"TohWeiJie01"},"content":"     * @throws IOException","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"TohWeiJie01"},"content":"    public void followCommand() throws DukeException, IOException {","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"TohWeiJie01"},"content":"        Scanner scan \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"TohWeiJie01"},"content":"        String description \u003d scan.nextLine();","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"TohWeiJie01"},"content":"        while (!description.equals(\"bye\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"TohWeiJie01"},"content":"            System.out.println(\"-------------------------------------------------------------------\");","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"TohWeiJie01"},"content":"            try {","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"TohWeiJie01"},"content":"                if (description.equals(\"list\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"TohWeiJie01"},"content":"                    System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"TohWeiJie01"},"content":"                    taskList.listTask();","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"TohWeiJie01"},"content":"                } else if (description.startsWith(\"done\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"TohWeiJie01"},"content":"                    String taskNo \u003d description.substring(5);","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"TohWeiJie01"},"content":"                    System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"TohWeiJie01"},"content":"                    taskList.doneTask(Integer.parseInt(taskNo));","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"TohWeiJie01"},"content":"                } else if (description.startsWith(\"delete\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"TohWeiJie01"},"content":"                    String taskNo \u003d description.substring(7);","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"TohWeiJie01"},"content":"                    System.out.println(\"Noted boss. I\u0027ve removed this task:\");","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"TohWeiJie01"},"content":"                    taskList.deleteTask(Integer.parseInt(taskNo));","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"TohWeiJie01"},"content":"                    System.out.println(taskList.toString());","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"TohWeiJie01"},"content":"                } else if (description.startsWith(\"todo\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"TohWeiJie01"},"content":"                    if (description.equals(\"todo\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"TohWeiJie01"},"content":"                        throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"TohWeiJie01"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"TohWeiJie01"},"content":"                    System.out.println(\"Got it boss! I\u0027ve added this task:\");","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"TohWeiJie01"},"content":"                    String des \u003d description.substring(5);","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"TohWeiJie01"},"content":"                    Todo ttask \u003d new Todo(des);","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"TohWeiJie01"},"content":"                    taskList.storeTask(ttask);","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"TohWeiJie01"},"content":"                    System.out.println(\"  \" + ttask + \"\\n\" + taskList.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"TohWeiJie01"},"content":"                } else if (description.startsWith(\"deadline\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"TohWeiJie01"},"content":"                    if (description.equals(\"deadline\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":65,"author":{"gitId":"TohWeiJie01"},"content":"                        throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":66,"author":{"gitId":"TohWeiJie01"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"TohWeiJie01"},"content":"                    System.out.println(\"Got it boss! I\u0027ve added this task:\");","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"TohWeiJie01"},"content":"                    int pos \u003d description.indexOf(\"/\");","lastModifiedDate":"2021-08-18"},{"lineNumber":69,"author":{"gitId":"TohWeiJie01"},"content":"                    String des \u003d description.substring(9, pos - 1);","lastModifiedDate":"2021-08-18"},{"lineNumber":70,"author":{"gitId":"TohWeiJie01"},"content":"                    String by \u003d description.substring(pos + 4);","lastModifiedDate":"2021-08-18"},{"lineNumber":71,"author":{"gitId":"TohWeiJie01"},"content":"                    LocalDate byDate \u003d LocalDate.parse(by);","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"TohWeiJie01"},"content":"                    Deadline dtask \u003d new Deadline(des, byDate);","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"TohWeiJie01"},"content":"                    taskList.storeTask(dtask);","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"TohWeiJie01"},"content":"                    System.out.println(\"  \" + dtask + \"\\n\" + taskList.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"TohWeiJie01"},"content":"                } else if (description.startsWith(\"event\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":76,"author":{"gitId":"TohWeiJie01"},"content":"                    if (description.equals(\"event\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":77,"author":{"gitId":"TohWeiJie01"},"content":"                        throw new DukeException(\"☹ OOPS!!! The description of a event cannot be empty.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":78,"author":{"gitId":"TohWeiJie01"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":79,"author":{"gitId":"TohWeiJie01"},"content":"                    System.out.println(\"Got it boss! I\u0027ve added this task:\");","lastModifiedDate":"2021-08-18"},{"lineNumber":80,"author":{"gitId":"TohWeiJie01"},"content":"                    int pos \u003d description.indexOf(\"/\");","lastModifiedDate":"2021-08-18"},{"lineNumber":81,"author":{"gitId":"TohWeiJie01"},"content":"                    String des \u003d description.substring(6, pos - 1);","lastModifiedDate":"2021-08-18"},{"lineNumber":82,"author":{"gitId":"TohWeiJie01"},"content":"                    String at \u003d description.substring(pos + 4);","lastModifiedDate":"2021-08-18"},{"lineNumber":83,"author":{"gitId":"TohWeiJie01"},"content":"                    LocalDateTime atDateTime \u003d LocalDateTime.parse(at);","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"TohWeiJie01"},"content":"                    Event etask \u003d new Event(des, atDateTime);","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"TohWeiJie01"},"content":"                    taskList.storeTask(etask);","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"TohWeiJie01"},"content":"                    System.out.println(\"  \" + etask + \"\\n\" + taskList.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"TohWeiJie01"},"content":"                } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":88,"author":{"gitId":"TohWeiJie01"},"content":"                    throw new DukeException(\"☹ I\u0027m sorry! I\u0027m not quite sure what you need me to do!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":89,"author":{"gitId":"TohWeiJie01"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":90,"author":{"gitId":"TohWeiJie01"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"TohWeiJie01"},"content":"                System.out.println(e.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"TohWeiJie01"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":93,"author":{"gitId":"TohWeiJie01"},"content":"            storage.saveFile(taskList.getAllTasks());","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"TohWeiJie01"},"content":"            System.out.println(\"-------------------------------------------------------------------\");","lastModifiedDate":"2021-08-18"},{"lineNumber":95,"author":{"gitId":"TohWeiJie01"},"content":"            description \u003d scan.nextLine();","lastModifiedDate":"2021-08-18"},{"lineNumber":96,"author":{"gitId":"TohWeiJie01"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":97,"author":{"gitId":"TohWeiJie01"},"content":"        System.out.println(\"-------------------------------------------------------------------\");","lastModifiedDate":"2021-08-18"},{"lineNumber":98,"author":{"gitId":"TohWeiJie01"},"content":"        System.out.println(\"Okay then! I hope to see you again soon master!\");","lastModifiedDate":"2021-08-18"},{"lineNumber":99,"author":{"gitId":"TohWeiJie01"},"content":"        System.out.println(\"-------------------------------------------------------------------\");","lastModifiedDate":"2021-08-18"},{"lineNumber":100,"author":{"gitId":"TohWeiJie01"},"content":"        scan.close();","lastModifiedDate":"2021-08-18"},{"lineNumber":101,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":102,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":103,"author":{"gitId":"TohWeiJie01"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":109,"author":{"gitId":"TohWeiJie01"},"content":"        System.out.println(\"-------------------------------------------------------------------\");","lastModifiedDate":"2021-08-18"},{"lineNumber":110,"author":{"gitId":"TohWeiJie01"},"content":"        System.out.println(\"Hello I\u0027m\\n\" + logo + \"How may I help you today master?\\n\");","lastModifiedDate":"2021-08-18"},{"lineNumber":111,"author":{"gitId":"TohWeiJie01"},"content":"        System.out.println(\"-------------------------------------------------------------------\");","lastModifiedDate":"2021-08-18"},{"lineNumber":112,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":113,"author":{"gitId":"TohWeiJie01"},"content":"        Duke chatbot \u003d new Duke(PATH_NAME);","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"TohWeiJie01"},"content":"        chatbot.followCommand();","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"TohWeiJie01":108,"-":8}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":" * The DukeException class encapsulates exceptions specific to Duke.","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"public class DukeException extends IllegalArgumentException {","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"     * Constructor for DukeException.","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"     * @param message The message to be shown should there be a Duke Exception.","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"        super(message);","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"     * Returns the message regarding the DukeException.","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"TohWeiJie01"},"content":"     * @return Message regarding the DukeException.","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"TohWeiJie01"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"TohWeiJie01"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"TohWeiJie01"},"content":"        return getMessage();","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"TohWeiJie01":21}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":" * The Event class encapsulates an event class.","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":"    /** The date and time the event will be taking place. */","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"    protected LocalDateTime at;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":"     * Constructor to initialise an Event task.","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":"     * @param description The description of the Event task.","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"     * @param at The date and time for the Event task.","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":"    public Event(String description, LocalDateTime at) {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"TohWeiJie01"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"TohWeiJie01"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"TohWeiJie01"},"content":"     * Gets the at description for the Event task.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"TohWeiJie01"},"content":"     * @return The at description for the Event task.","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"TohWeiJie01"},"content":"    public String getAt() {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"TohWeiJie01"},"content":"        return this.at;","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"TohWeiJie01"},"content":"     * Returns the string representation of the Event task.","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"TohWeiJie01"},"content":"     * @return The string representation of the Event task.","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"TohWeiJie01"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"TohWeiJie01"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"TohWeiJie01"},"content":"        return \"[E]\" + super.toString() + \" (at: \"","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"TohWeiJie01"},"content":"                + at.format(DateTimeFormatter.ofPattern(\"MM dd yyyy \u0027at\u0027 hh:mm\")) + \")\";","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"TohWeiJie01":38}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"import java.io.File;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":" * The Storage class encapsulates the action of saving the taskList created by Duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"public class Storage {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":"    /** The file for the Storage to save the tasklist in. */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":"    private File file;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"TohWeiJie01"},"content":"    /** Constant String for the symbol to separate the descriptions of the saved tasklist. */","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":"    private final String SEPARATE \u003d \" / \";","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"TohWeiJie01"},"content":"     * Constructor to initialise the Storage.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"     * @param pathName The path name to be converted to create a new File instance.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"TohWeiJie01"},"content":"    public Storage(String pathName) {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"TohWeiJie01"},"content":"        this.file \u003d new File(pathName);","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"TohWeiJie01"},"content":"        if (!this.file.getParentFile().exists()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"TohWeiJie01"},"content":"            this.file.getParentFile().mkdirs();","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"TohWeiJie01"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"TohWeiJie01"},"content":"     * Saves the contents of the tasklist to the designated file.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"TohWeiJie01"},"content":"     * @param taskList The current state of the tasklist handled by Duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"TohWeiJie01"},"content":"    public void saveFile(ArrayList\u003cTask\u003e taskList) throws IOException {","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"TohWeiJie01"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"TohWeiJie01"},"content":"            FileWriter myWriter \u003d new FileWriter(this.file);","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"TohWeiJie01"},"content":"            String taskToFile \u003d \"\";","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"TohWeiJie01"},"content":"            // Iterate through every element in the tasklist to create the text version of the task","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"TohWeiJie01"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"TohWeiJie01"},"content":"                String checkTaskType \u003d task.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"TohWeiJie01"},"content":"                String taskStatus \u003d (task.getStatusIcon().equals(\"X\")) ? \"1\" : \"0\";","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"TohWeiJie01"},"content":"                // Determine the type of task","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"TohWeiJie01"},"content":"                switch(checkTaskType.charAt(1)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"TohWeiJie01"},"content":"                case \u0027T\u0027:","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"TohWeiJie01"},"content":"                    Todo todo \u003d (Todo) task;","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"TohWeiJie01"},"content":"                    taskToFile \u003d \"Todo\" + SEPARATE + taskStatus + SEPARATE + todo.getTaskDescription();","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"TohWeiJie01"},"content":"                    break;","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"TohWeiJie01"},"content":"                case \u0027D\u0027:","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"TohWeiJie01"},"content":"                    Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"TohWeiJie01"},"content":"                    taskToFile \u003d \"Deadline\" + SEPARATE + taskStatus + SEPARATE + deadline.getTaskDescription()","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"TohWeiJie01"},"content":"                            + SEPARATE + deadline.getBy();","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"TohWeiJie01"},"content":"                    break;","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"TohWeiJie01"},"content":"                case \u0027E\u0027:","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"TohWeiJie01"},"content":"                    Event event \u003d (Event) task;","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"TohWeiJie01"},"content":"                    taskToFile \u003d \"Event\" + SEPARATE + taskStatus + SEPARATE + event.getTaskDescription()","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"TohWeiJie01"},"content":"                            + SEPARATE + event.getAt();","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"TohWeiJie01"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"TohWeiJie01"},"content":"                // Save the newly text version of the task into the file","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"TohWeiJie01"},"content":"                myWriter.write(taskToFile + \"\\n\");","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"TohWeiJie01"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"TohWeiJie01"},"content":"            myWriter.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"TohWeiJie01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"TohWeiJie01"},"content":"            System.out.println(\"Master something went wrong, I can\u0027t save the Tasklist! ☹\");","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"TohWeiJie01"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"TohWeiJie01"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"TohWeiJie01"},"content":"     * Loads the contents of the previously saved tasklist from the designated file.","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"TohWeiJie01"},"content":"     * @return The current state of the tasklist handled by Duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"TohWeiJie01"},"content":"     * @throws IOException","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"TohWeiJie01"},"content":"    public ArrayList\u003cTask\u003e loadFile() throws IOException {","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"TohWeiJie01"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"TohWeiJie01"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"TohWeiJie01"},"content":"            ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"TohWeiJie01"},"content":"            // Iterate through line by line of the designated file to obtain every task in text form","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"TohWeiJie01"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"TohWeiJie01"},"content":"                String currTask \u003d scanner.nextLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"TohWeiJie01"},"content":"                Task task \u003d null;","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"TohWeiJie01"},"content":"                String[] taskBreakdown \u003d currTask.split(SEPARATE);","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"TohWeiJie01"},"content":"                // Determine the type of task from the text file and initialise the specified task","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"TohWeiJie01"},"content":"                switch(taskBreakdown[0]) {","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"TohWeiJie01"},"content":"                case \"Todo\":","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"TohWeiJie01"},"content":"                    task \u003d new Todo(taskBreakdown[2]);","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"TohWeiJie01"},"content":"                    break;","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"TohWeiJie01"},"content":"                case \"Deadline\":","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"TohWeiJie01"},"content":"                    task \u003d new Deadline(taskBreakdown[2], taskBreakdown[3]);","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"TohWeiJie01"},"content":"                    break;","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"TohWeiJie01"},"content":"                case \"Event\":","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"TohWeiJie01"},"content":"                    task \u003d new Event(taskBreakdown[2], taskBreakdown[3]);","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"TohWeiJie01"},"content":"                    break;","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"TohWeiJie01"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"TohWeiJie01"},"content":"                if (taskBreakdown[1].equals(\"1\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"TohWeiJie01"},"content":"                    task.completeTask();","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"TohWeiJie01"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"TohWeiJie01"},"content":"                // Add the task back to the tasklist","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"TohWeiJie01"},"content":"                taskList.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"TohWeiJie01"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"TohWeiJie01"},"content":"            return taskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"TohWeiJie01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"TohWeiJie01"},"content":"            System.out.println(\"Master something went wrong, I can\u0027t load the Tasklist! ☹\");","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"TohWeiJie01"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"TohWeiJie01"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"TohWeiJie01"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"TohWeiJie01":117}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":" * The Task class encapsulates a task.","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"public class Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"    /** The task to do. */","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"    protected String description;","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"    /** Boolean to represent if the task is done, true if done, false otherwise. */","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"     * Constructor for initialising a Task.","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":"     * @param description The task to do.","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"TohWeiJie01"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"     * Returns the task description.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"TohWeiJie01"},"content":"     * @return Description of the task to do.","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"TohWeiJie01"},"content":"    public String getTaskDescription() {","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"TohWeiJie01"},"content":"        return this.description;","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"TohWeiJie01"},"content":"     * Checks and returns the status of a task in the form of \"X\" or \" \".","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"TohWeiJie01"},"content":"     * @return If the task is done \"X\" will be returned, else \" \" will be returned.","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"TohWeiJie01"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"TohWeiJie01"},"content":"        if (isDone) {","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"TohWeiJie01"},"content":"            return \"X\";","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"TohWeiJie01"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"TohWeiJie01"},"content":"            return \" \";","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"TohWeiJie01"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"TohWeiJie01"},"content":"     * Indicates that the Task is done.","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"TohWeiJie01"},"content":"    public void completeTask() {","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"TohWeiJie01"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"TohWeiJie01"},"content":"     * Returns the string representation of the Task.","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"TohWeiJie01"},"content":"     * @return String representation of the Task.","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"TohWeiJie01"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"TohWeiJie01"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"TohWeiJie01":53}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":" * The TaskList class encapsulates a List of Tasks.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"public class TaskList {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"    /** An arraylist of Tasks to note all the Tasks stored in the TaskList. */","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":"    private ArrayList\u003cTask\u003e allTasks;","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"    /** Pointer to indicate the next position to store the task in the arraylist. */","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"    private int nextSpaceToStore;","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":"     * Constructor to initialise a TaskList.","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"TohWeiJie01"},"content":"    public TaskList(ArrayList\u003cTask\u003e allTasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":"        this.allTasks \u003d allTasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"TohWeiJie01"},"content":"        this.nextSpaceToStore \u003d allTasks.size();","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"TohWeiJie01"},"content":"     * Stores the task to the TaskList and increment the nextSpaceToStore pointer by one.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"TohWeiJie01"},"content":"     * @param toStore The task to store into the TaskList.","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"TohWeiJie01"},"content":"    public void storeTask(Task toStore) {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"TohWeiJie01"},"content":"        allTasks.add(toStore);","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"TohWeiJie01"},"content":"        nextSpaceToStore \u003d nextSpaceToStore + 1;","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"TohWeiJie01"},"content":"     * Lists out the current tasks in the TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"TohWeiJie01"},"content":"    public void listTask() {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"TohWeiJie01"},"content":"        for (int i \u003d 0; i \u003c nextSpaceToStore; i++) {","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"TohWeiJie01"},"content":"            int currTask \u003d i + 1;","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"TohWeiJie01"},"content":"            System.out.println(currTask + \".\" + allTasks.get(i).toString());","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"TohWeiJie01"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"TohWeiJie01"},"content":"     * Indicates the specified task is done in the TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"TohWeiJie01"},"content":"     * @param taskNo The task that is completed.","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"TohWeiJie01"},"content":"    public void doneTask(int taskNo) {","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"TohWeiJie01"},"content":"        Task doneTask \u003d allTasks.get(taskNo - 1);","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"TohWeiJie01"},"content":"        doneTask.completeTask();","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"TohWeiJie01"},"content":"        System.out.println(\"  \" + doneTask.toString());","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"TohWeiJie01"},"content":"     * Deletes the specified task from the TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"TohWeiJie01"},"content":"     * @param taskNo The task to be deleted.","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"TohWeiJie01"},"content":"    public void deleteTask(int taskNo) {","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"TohWeiJie01"},"content":"        Task deleteTask \u003d allTasks.get(taskNo - 1);","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"TohWeiJie01"},"content":"        allTasks.remove(taskNo - 1);","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"TohWeiJie01"},"content":"        nextSpaceToStore \u003d nextSpaceToStore - 1;","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"TohWeiJie01"},"content":"        System.out.println(\"  \" + deleteTask.toString());","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"TohWeiJie01"},"content":"    public ArrayList\u003cTask\u003e getAllTasks() {","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"TohWeiJie01"},"content":"        return this.allTasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"TohWeiJie01"},"content":"     * Returns the string representation of the number of tasks in the TaskList.","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"TohWeiJie01"},"content":"     * @return String representation of the number of tasks in the TaskList.","lastModifiedDate":"2021-08-18"},{"lineNumber":67,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"TohWeiJie01"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":69,"author":{"gitId":"TohWeiJie01"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":70,"author":{"gitId":"TohWeiJie01"},"content":"        return \"Now you have \" + this.nextSpaceToStore + \" tasks in the list.\";","lastModifiedDate":"2021-08-18"},{"lineNumber":71,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":72,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"TohWeiJie01":72}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":" * The To-do class encapsulates a To-do task.","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"     * Constructor to initialise a To-do task.","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"     * @param description The description of a To-do task.","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"     * Returns the string representation of the To-do task.","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"TohWeiJie01"},"content":"     * @return String representation of the To-do task.","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"TohWeiJie01"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"TohWeiJie01"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"TohWeiJie01"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"TohWeiJie01":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"todo read book","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"done 1","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"done 3","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":"blah","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"deadline","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"delete 2","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"TohWeiJie01":11}}]
