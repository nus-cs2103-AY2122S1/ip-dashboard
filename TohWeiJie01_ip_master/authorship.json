[{"path":"data/tasklist.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"Todo / 0 / read book","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"TohWeiJie01":1}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":" * The Duke class encapsulates the action of the Duke chatbot.","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":"    /** The path name to be converted to create a new File instance. */","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"TohWeiJie01"},"content":"    private static final String PATH_NAME \u003d \"./data/tasklist.txt\";","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"TohWeiJie01"},"content":"    /** The storage for Duke to save and load the tasklist to. */","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"TohWeiJie01"},"content":"    /** The tasklist for Duke to store all the tasks. */","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"TohWeiJie01"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"TohWeiJie01"},"content":"    /** The Ui for Duke to deal with all the interactions with the user. */","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"TohWeiJie01"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"TohWeiJie01"},"content":"     * Constructor to initialise the Duke chatbot.","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"TohWeiJie01"},"content":"    private Duke(String pathName) {","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"TohWeiJie01"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"TohWeiJie01"},"content":"        this.storage \u003d new Storage(pathName);","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"TohWeiJie01"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"TohWeiJie01"},"content":"            this.taskList \u003d new TaskList(storage.loadFile());","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"TohWeiJie01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"TohWeiJie01"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"TohWeiJie01"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"TohWeiJie01"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"TohWeiJie01"},"content":"     * Runs the Duke program.","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"TohWeiJie01"},"content":"    public void run() {","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"TohWeiJie01"},"content":"        ui.greetWelcome();","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"TohWeiJie01"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"TohWeiJie01"},"content":"        while (!isExit) {","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"TohWeiJie01"},"content":"            try {","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"TohWeiJie01"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"TohWeiJie01"},"content":"                ui.showLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"TohWeiJie01"},"content":"                Command c \u003d new Parser().parse(fullCommand);","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"TohWeiJie01"},"content":"                c.execute(storage, taskList, ui);","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"TohWeiJie01"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"TohWeiJie01"},"content":"            } catch (DukeException | IOException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"TohWeiJie01"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"TohWeiJie01"},"content":"            } finally {","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"TohWeiJie01"},"content":"                ui.showLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"TohWeiJie01"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"TohWeiJie01"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"TohWeiJie01"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"TohWeiJie01"},"content":"        // Creates an initialisation of Duke and runs it","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"TohWeiJie01"},"content":"        Duke duke \u003d new Duke(PATH_NAME);","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"TohWeiJie01"},"content":"        duke.run();","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"TohWeiJie01":67,"-":3}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":" * The command class encapsulates an executable command by Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"TohWeiJie01"},"content":"     * The abstract method to execute the correct response to the user\u0027s command.","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":"     * @param storage The storage Duke uses to save and load the tasklist from.","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"TohWeiJie01"},"content":"     * @param taskList The list of tasks Duke needs to execute on.","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"TohWeiJie01"},"content":"     * @param ui The Ui Duke utilises to interact with the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"    public abstract void execute(Storage storage, TaskList taskList, Ui ui) throws IOException, DukeException;","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"TohWeiJie01"},"content":"     * Indicates whether the user is still going to use Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"TohWeiJie01"},"content":"     * @return False to indicate that the user has no yet stopped using Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"TohWeiJie01"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"TohWeiJie01"},"content":"        return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"TohWeiJie01":29}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":" * The DeadlineCommand class encapsulates the execution of the deadline command from the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"TohWeiJie01"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":"    /** The deadline command inputted by the user. */","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"TohWeiJie01"},"content":"    String fullCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"     * Constructor to intialise a DeadlineCommand.","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"TohWeiJie01"},"content":"     * @param fullCommand The deadline command inputted by the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"TohWeiJie01"},"content":"    public DeadlineCommand(String fullCommand) {","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"TohWeiJie01"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"TohWeiJie01"},"content":"     * Executes the response to the deadline command from the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"TohWeiJie01"},"content":"     * @param storage The storage Duke uses to save and load the tasklist from.","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"TohWeiJie01"},"content":"     * @param taskList The list of tasks Duke needs to execute on.","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"TohWeiJie01"},"content":"     * @param ui The Ui Duke utilises to interact with the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"TohWeiJie01"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"TohWeiJie01"},"content":"    public void execute(Storage storage, TaskList taskList, Ui ui) throws IOException, DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"TohWeiJie01"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"TohWeiJie01"},"content":"            if (fullCommand.equals(\"deadline\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"TohWeiJie01"},"content":"                throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"TohWeiJie01"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"TohWeiJie01"},"content":"            String deadlineDescription \u003d fullCommand.split(\" \", 2)[1];","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"TohWeiJie01"},"content":"            int pos \u003d deadlineDescription.indexOf(\"/\");","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"TohWeiJie01"},"content":"            String description \u003d deadlineDescription.substring(0, pos - 1);","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"TohWeiJie01"},"content":"            String by \u003d deadlineDescription.substring(pos + 4);","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"TohWeiJie01"},"content":"            LocalDate byDate \u003d LocalDate.parse(by);","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"TohWeiJie01"},"content":"            Deadline deadline \u003d new Deadline(description, byDate);","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"TohWeiJie01"},"content":"            taskList.storeTask(deadline);","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"TohWeiJie01"},"content":"            storage.saveFile(taskList.getAllTasks());","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"TohWeiJie01"},"content":"            ui.showTaskAdded(deadline, taskList);","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"TohWeiJie01"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"TohWeiJie01"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"TohWeiJie01"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"TohWeiJie01":55}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":" * The DeleteCommand class encapsulates the execution of the delete command from the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"    /** The delete command inputted by the user. */","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"TohWeiJie01"},"content":"    String deleteDescription;","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"TohWeiJie01"},"content":"     * Constructor for the DeleteCommand.","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"TohWeiJie01"},"content":"     * @param deleteDescription The delete command inputted by the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"TohWeiJie01"},"content":"    public DeleteCommand(String deleteDescription) {","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"TohWeiJie01"},"content":"        this.deleteDescription \u003d deleteDescription;","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"TohWeiJie01"},"content":"     * Executes the response to the delete command from the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"TohWeiJie01"},"content":"     * @param storage The storage Duke uses to save and load the tasklist from.","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"TohWeiJie01"},"content":"     * @param taskList The list of tasks Duke needs to execute on.","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"TohWeiJie01"},"content":"     * @param ui The Ui Duke utilises to interact with the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"TohWeiJie01"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"TohWeiJie01"},"content":"    public void execute(Storage storage, TaskList taskList, Ui ui) throws IOException {","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"TohWeiJie01"},"content":"        Integer taskNo \u003d Integer.parseInt(deleteDescription);","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"TohWeiJie01"},"content":"        Task deletedTask \u003d taskList.getSpecificTask(taskNo);","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"TohWeiJie01"},"content":"        taskList.deleteTask(taskNo);","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"TohWeiJie01"},"content":"        storage.saveFile(taskList.getAllTasks());","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"TohWeiJie01"},"content":"        ui.showTaskDeleted(deletedTask, taskList);","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"TohWeiJie01":39}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":" * The DoneCommand class encapsulates the execution of the done command from the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"    /** The done command inputted by the user. */","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"TohWeiJie01"},"content":"    String doneDescription;","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"TohWeiJie01"},"content":"     * Constructor for the DoneCommand.","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"TohWeiJie01"},"content":"     * @param doneDescription The delete command inputted by the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"TohWeiJie01"},"content":"    public DoneCommand(String doneDescription) {","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"TohWeiJie01"},"content":"        this.doneDescription \u003d doneDescription;","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"TohWeiJie01"},"content":"     * Executes the response to the delete command from the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"TohWeiJie01"},"content":"     * @param storage The storage Duke uses to save and load the tasklist from.","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"TohWeiJie01"},"content":"     * @param taskList The list of tasks Duke needs to execute on.","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"TohWeiJie01"},"content":"     * @param ui The Ui Duke utilises to interact with the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"TohWeiJie01"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"TohWeiJie01"},"content":"    public void execute(Storage storage, TaskList taskList, Ui ui) throws IOException {","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"TohWeiJie01"},"content":"        Integer taskNo \u003d Integer.parseInt(doneDescription);","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"TohWeiJie01"},"content":"        Task doneTask \u003d taskList.getSpecificTask(taskNo);","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"TohWeiJie01"},"content":"        taskList.doneTask(taskNo);","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"TohWeiJie01"},"content":"        storage.saveFile(taskList.getAllTasks());","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"TohWeiJie01"},"content":"        ui.showTaskDone(doneTask);","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"TohWeiJie01":39}},{"path":"src/main/java/duke/command/ErrorCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":" * The DoneCommand class encapsulates an unrecognised command from the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"public class ErrorCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":"     * Executes the response to the delete command from the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":"     * @param storage The storage Duke uses to save and load the tasklist from.","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"     * @param taskList The list of tasks Duke needs to execute on.","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"TohWeiJie01"},"content":"     * @param ui The Ui Duke utilises to interact with the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"TohWeiJie01"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"TohWeiJie01"},"content":"    public void execute(Storage storage, TaskList taskList, Ui ui) {","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"TohWeiJie01"},"content":"        ui.showUnrecognised();","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"TohWeiJie01":21}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":" * The EventCommand class encapsulates the execution of the event command from the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"TohWeiJie01"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":"    /** The event command inputted by the user. */","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"TohWeiJie01"},"content":"    String fullCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"     * Constructor to intialise an EventCommand.","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"TohWeiJie01"},"content":"     * @param fullCommand The event command inputted by the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"TohWeiJie01"},"content":"    public EventCommand(String fullCommand) {","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"TohWeiJie01"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"TohWeiJie01"},"content":"     * Executes the response to the event command from the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"TohWeiJie01"},"content":"     * @param storage The storage Duke uses to save and load the tasklist from.","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"TohWeiJie01"},"content":"     * @param taskList The list of tasks Duke needs to execute on.","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"TohWeiJie01"},"content":"     * @param ui The Ui Duke utilises to interact with the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"TohWeiJie01"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"TohWeiJie01"},"content":"    public void execute(Storage storage, TaskList taskList, Ui ui) throws IOException, DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"TohWeiJie01"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"TohWeiJie01"},"content":"            if (fullCommand.equals(\"event\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"TohWeiJie01"},"content":"                throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"TohWeiJie01"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"TohWeiJie01"},"content":"            String eventDescription \u003d fullCommand.split(\" \", 2)[1];","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"TohWeiJie01"},"content":"            int pos \u003d eventDescription.indexOf(\"/\");","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"TohWeiJie01"},"content":"            String description \u003d eventDescription.substring(0, pos - 1);","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"TohWeiJie01"},"content":"            String at \u003d eventDescription.substring(pos + 4);","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"TohWeiJie01"},"content":"            LocalDateTime atDateTime \u003d LocalDateTime.parse(at);","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"TohWeiJie01"},"content":"            Event event \u003d new Event(description, atDateTime);","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"TohWeiJie01"},"content":"            taskList.storeTask(event);","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"TohWeiJie01"},"content":"            storage.saveFile(taskList.getAllTasks());","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"TohWeiJie01"},"content":"            ui.showTaskAdded(event, taskList);","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"TohWeiJie01"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"TohWeiJie01"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"TohWeiJie01"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"TohWeiJie01":55}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":" * The ExitCommand class encapsulates the execution of the bye command from the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":"     * Executes the response to the bye command from the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":"     * @param storage The storage Duke uses to save and load the tasklist from.","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"     * @param taskList The list of tasks Duke needs to execute on.","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"TohWeiJie01"},"content":"     * @param ui The Ui Duke utilises to interact with the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"TohWeiJie01"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"TohWeiJie01"},"content":"    public void execute(Storage storage, TaskList taskList, Ui ui) {","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"TohWeiJie01"},"content":"        ui.greetGoodbye();","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"TohWeiJie01"},"content":"     * Indicates whether the user is still going to use Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"TohWeiJie01"},"content":"     * @return True to indicate that the user is going to stop using Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"TohWeiJie01"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"TohWeiJie01"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"TohWeiJie01"},"content":"        return true;","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"TohWeiJie01":30}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":" * The FindCommand class encapsulates the execution of the find command from the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"    /** The keyword to be searched for. */","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":"    private String keyword;","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"TohWeiJie01"},"content":"     * Constructor to initialise a FindCommand.","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":"     * @param keyword The keyword to be searched for.","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"TohWeiJie01"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"TohWeiJie01"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"TohWeiJie01"},"content":"     * Executes the response to the find command from the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"TohWeiJie01"},"content":"     * @param storage The storage Duke uses to save and load the tasklist from.","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"TohWeiJie01"},"content":"     * @param taskList The list of tasks Duke needs to execute on.","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"TohWeiJie01"},"content":"     * @param ui The Ui Duke utilises to interact with the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"TohWeiJie01"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"TohWeiJie01"},"content":"    public void execute(Storage storage, TaskList taskList, Ui ui) {","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"TohWeiJie01"},"content":"        ui.showFind(taskList, keyword);","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"TohWeiJie01":32}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":" * The ListCommand class encapsulates the execution of the list command from the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":"     * Executes the response to the delete command from the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":"     * @param storage The storage Duke uses to save and load the tasklist from.","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"     * @param taskList The list of tasks Duke needs to execute on.","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"TohWeiJie01"},"content":"     * @param ui The Ui Duke utilises to interact with the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"TohWeiJie01"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"TohWeiJie01"},"content":"    public void execute(Storage storage, TaskList taskList, Ui ui) {","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"TohWeiJie01"},"content":"        ui.showList(taskList);","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"TohWeiJie01":21}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":" * The DeadlineCommand class encapsulates the execution of the todo command from the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"TohWeiJie01"},"content":"    /** The todo command inputted by the user. */","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":"    String fullCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"TohWeiJie01"},"content":"     * Constructor to intialise a TodoCommand.","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"     * @param fullCommand The todo command inputted by the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"TohWeiJie01"},"content":"    public TodoCommand(String fullCommand) {","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"TohWeiJie01"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"TohWeiJie01"},"content":"     * Executes the response to the todo command from the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"TohWeiJie01"},"content":"     * @param storage The storage Duke uses to save and load the tasklist from.","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"TohWeiJie01"},"content":"     * @param taskList The list of tasks Duke needs to execute on.","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"TohWeiJie01"},"content":"     * @param ui The Ui Duke utilises to interact with the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"TohWeiJie01"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"TohWeiJie01"},"content":"    public void execute(Storage storage, TaskList taskList, Ui ui) throws IOException, DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"TohWeiJie01"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"TohWeiJie01"},"content":"            if (fullCommand.equals(\"todo\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"TohWeiJie01"},"content":"                throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"TohWeiJie01"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"TohWeiJie01"},"content":"            String todoDescription \u003d fullCommand.split(\" \", 2)[1];","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"TohWeiJie01"},"content":"            Todo todo \u003d new Todo(todoDescription);","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"TohWeiJie01"},"content":"            taskList.storeTask(todo);","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"TohWeiJie01"},"content":"            storage.saveFile(taskList.getAllTasks());","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"TohWeiJie01"},"content":"            ui.showTaskAdded(todo, taskList);","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"TohWeiJie01"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"TohWeiJie01"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"TohWeiJie01"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"TohWeiJie01":49}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"package duke.exception;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":" * The DukeException class encapsulates exceptions specific to Duke.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"public class DukeException extends IllegalArgumentException {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":"     * Constructor for DukeException.","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"     * @param message The message to be shown should there be a Duke Exception.","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":"        super(message);","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":"     * Returns the message regarding the DukeException.","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"TohWeiJie01"},"content":"     * @return Message regarding the DukeException.","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"TohWeiJie01"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"TohWeiJie01"},"content":"        return getMessage();","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"TohWeiJie01":23}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"package duke.parser;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"import duke.command.DeadlineCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"import duke.command.ErrorCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":"import duke.command.EventCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":"import duke.command.TodoCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"TohWeiJie01"},"content":" * The Parser class encapsulates the dealing of user commands by Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"TohWeiJie01"},"content":"public class Parser {","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"TohWeiJie01"},"content":"     * Produces the corresponding type of executable command from the user input.","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"     * @param fullCommand The full command input by the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"TohWeiJie01"},"content":"     * @return The corresponding type of executable command from the user input.","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"TohWeiJie01"},"content":"    public Command parse(String fullCommand) {","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"TohWeiJie01"},"content":"        Command command;","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"TohWeiJie01"},"content":"        String[] commandSplit \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"TohWeiJie01"},"content":"        // Determine the type of command and initialise the according command","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"TohWeiJie01"},"content":"        switch(commandSplit[0]) {","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"TohWeiJie01"},"content":"        case \"bye\":","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"TohWeiJie01"},"content":"            command \u003d new ExitCommand();","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"TohWeiJie01"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"TohWeiJie01"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"TohWeiJie01"},"content":"            command \u003d new TodoCommand(fullCommand);","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"TohWeiJie01"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"TohWeiJie01"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"TohWeiJie01"},"content":"            command \u003d new DeadlineCommand(fullCommand);","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"TohWeiJie01"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"TohWeiJie01"},"content":"        case \"event\":","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"TohWeiJie01"},"content":"            command \u003d new EventCommand(fullCommand);","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"TohWeiJie01"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"TohWeiJie01"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"TohWeiJie01"},"content":"            command \u003d new DeleteCommand(commandSplit[1]);","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"TohWeiJie01"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"TohWeiJie01"},"content":"        case \"done\":","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"TohWeiJie01"},"content":"            command \u003d new DoneCommand(commandSplit[1]);","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"TohWeiJie01"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"TohWeiJie01"},"content":"        case \"list\":","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"TohWeiJie01"},"content":"            command \u003d new ListCommand();","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"TohWeiJie01"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"TohWeiJie01"},"content":"        case \"find\":","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"TohWeiJie01"},"content":"            command \u003d new FindCommand(commandSplit[1]);","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"TohWeiJie01"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"TohWeiJie01"},"content":"        default:","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"TohWeiJie01"},"content":"            command \u003d new ErrorCommand();","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"TohWeiJie01"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"TohWeiJie01"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"TohWeiJie01"},"content":"        return command;","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"TohWeiJie01":60}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"package duke.storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"import java.io.File;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"TohWeiJie01"},"content":" * The Storage class encapsulates the action of saving the taskList created by Duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"TohWeiJie01"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"TohWeiJie01"},"content":"public class Storage {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"    /** The file for the Storage to save the tasklist in. */","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"TohWeiJie01"},"content":"    private File file;","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"TohWeiJie01"},"content":"    /** Constant String for the symbol to separate the descriptions of the saved tasklist. */","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"TohWeiJie01"},"content":"    private final String SEPARATE \u003d \" / \";","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"TohWeiJie01"},"content":"     * Constructor to initialise the Storage.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"TohWeiJie01"},"content":"     * @param pathName The path name to be converted to create a new File instance.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"TohWeiJie01"},"content":"    public Storage(String pathName) {","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"TohWeiJie01"},"content":"        this.file \u003d new File(pathName);","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"TohWeiJie01"},"content":"        if (!this.file.getParentFile().exists()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"TohWeiJie01"},"content":"            this.file.getParentFile().mkdirs();","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"TohWeiJie01"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"TohWeiJie01"},"content":"     * Saves the contents of the tasklist to the designated file.","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"TohWeiJie01"},"content":"     * @param taskList The current state of the tasklist handled by Duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"TohWeiJie01"},"content":"    public void saveFile(ArrayList\u003cTask\u003e taskList) throws IOException {","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"TohWeiJie01"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"TohWeiJie01"},"content":"            FileWriter myWriter \u003d new FileWriter(this.file);","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"TohWeiJie01"},"content":"            String taskToFile \u003d \"\";","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"TohWeiJie01"},"content":"            // Iterate through every element in the tasklist to create the text version of the task","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"TohWeiJie01"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"TohWeiJie01"},"content":"                String checkTaskType \u003d task.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"TohWeiJie01"},"content":"                String taskStatus \u003d (task.getStatusIcon().equals(\"X\")) ? \"1\" : \"0\";","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"TohWeiJie01"},"content":"                // Determine the type of task","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"TohWeiJie01"},"content":"                switch(checkTaskType.charAt(1)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"TohWeiJie01"},"content":"                case \u0027T\u0027:","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"TohWeiJie01"},"content":"                    Todo todo \u003d (Todo) task;","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"TohWeiJie01"},"content":"                    taskToFile \u003d \"Todo\" + SEPARATE + taskStatus + SEPARATE + todo.getTaskDescription();","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"TohWeiJie01"},"content":"                    break;","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"TohWeiJie01"},"content":"                case \u0027D\u0027:","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"TohWeiJie01"},"content":"                    Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"TohWeiJie01"},"content":"                    taskToFile \u003d \"Deadline\" + SEPARATE + taskStatus + SEPARATE + deadline.getTaskDescription()","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"TohWeiJie01"},"content":"                            + SEPARATE + deadline.getBy();","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"TohWeiJie01"},"content":"                    break;","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"TohWeiJie01"},"content":"                case \u0027E\u0027:","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"TohWeiJie01"},"content":"                    Event event \u003d (Event) task;","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"TohWeiJie01"},"content":"                    taskToFile \u003d \"Event\" + SEPARATE + taskStatus + SEPARATE + event.getTaskDescription()","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"TohWeiJie01"},"content":"                            + SEPARATE + event.getAt();","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"TohWeiJie01"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"TohWeiJie01"},"content":"                // Save the newly text version of the task into the file","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"TohWeiJie01"},"content":"                myWriter.write(taskToFile + \"\\n\");","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"TohWeiJie01"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"TohWeiJie01"},"content":"            myWriter.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"TohWeiJie01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"TohWeiJie01"},"content":"            System.out.println(\"Master something went wrong, I can\u0027t save the Tasklist! ☹\");","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"TohWeiJie01"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"TohWeiJie01"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"TohWeiJie01"},"content":"     * Loads the contents of the previously saved tasklist from the designated file.","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"TohWeiJie01"},"content":"     * @return The current state of the tasklist handled by Duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"TohWeiJie01"},"content":"     * @throws IOException","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"TohWeiJie01"},"content":"    public ArrayList\u003cTask\u003e loadFile() throws IOException {","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"TohWeiJie01"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"TohWeiJie01"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"TohWeiJie01"},"content":"            ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"TohWeiJie01"},"content":"            // Iterate through line by line of the designated file to obtain every task in text form","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"TohWeiJie01"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"TohWeiJie01"},"content":"                String currTask \u003d scanner.nextLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"TohWeiJie01"},"content":"                Task task \u003d null;","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"TohWeiJie01"},"content":"                String[] taskBreakdown \u003d currTask.split(SEPARATE);","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"TohWeiJie01"},"content":"                // Determine the type of task from the text file and initialise the specified task","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"TohWeiJie01"},"content":"                switch(taskBreakdown[0]) {","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"TohWeiJie01"},"content":"                case \"Todo\":","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"TohWeiJie01"},"content":"                    task \u003d new Todo(taskBreakdown[2]);","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"TohWeiJie01"},"content":"                    break;","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"TohWeiJie01"},"content":"                case \"Deadline\":","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"TohWeiJie01"},"content":"                    LocalDate by \u003d LocalDate.parse(taskBreakdown[3]);","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"TohWeiJie01"},"content":"                    task \u003d new Deadline(taskBreakdown[2], by);","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"TohWeiJie01"},"content":"                    break;","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"TohWeiJie01"},"content":"                case \"Event\":","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"TohWeiJie01"},"content":"                    LocalDateTime at \u003d LocalDateTime.parse(taskBreakdown[3]);","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"TohWeiJie01"},"content":"                    task \u003d new Event(taskBreakdown[2], at);","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"TohWeiJie01"},"content":"                    break;","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"TohWeiJie01"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"TohWeiJie01"},"content":"                if (taskBreakdown[1].equals(\"1\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"TohWeiJie01"},"content":"                    task.completeTask();","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"TohWeiJie01"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"TohWeiJie01"},"content":"                // Add the task back to the tasklist","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"TohWeiJie01"},"content":"                taskList.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"TohWeiJie01"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"TohWeiJie01"},"content":"            return taskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":121,"author":{"gitId":"TohWeiJie01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"TohWeiJie01"},"content":"            System.out.println(\"Master something went wrong, I can\u0027t load the Tasklist! ☹\");","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"TohWeiJie01"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-25"},{"lineNumber":124,"author":{"gitId":"TohWeiJie01"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":125,"author":{"gitId":"TohWeiJie01"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":126,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":127,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"TohWeiJie01":127}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":" * The Deadline class encapsulates a deadline task.","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"    /** The deadline for the task. */","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"    protected LocalDate by;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"     * Constructor to initialise a Deadline task.","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"TohWeiJie01"},"content":"     * @param description The description of the Deadline task.","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":"     * @param by The deadline for the Deadline task.","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"TohWeiJie01"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"TohWeiJie01"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"TohWeiJie01"},"content":"     * Gets the by description for the Deadline task.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"TohWeiJie01"},"content":"     * @return The by description for the Deadline task.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"TohWeiJie01"},"content":"    public LocalDate getBy() {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"TohWeiJie01"},"content":"        return this.by;","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"TohWeiJie01"},"content":"     * Returns the string representation of the Deadline task.","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"TohWeiJie01"},"content":"     * @return The string representation of the Deadline task.","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"TohWeiJie01"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"TohWeiJie01"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"TohWeiJie01"},"content":"        return \"[D]\" + super.toString()","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"TohWeiJie01"},"content":"                + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MM dd yyyy\")) + \")\";","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"TohWeiJie01":40}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":" * The Event class encapsulates an event class.","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"    /** The date and time the event will be taking place. */","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"    protected LocalDateTime at;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"     * Constructor to initialise an Event task.","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"TohWeiJie01"},"content":"     * @param description The description of the Event task.","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":"     * @param at The date and time for the Event task.","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"TohWeiJie01"},"content":"    public Event(String description, LocalDateTime at) {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"TohWeiJie01"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"TohWeiJie01"},"content":"     * Gets the at description for the Event task.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"TohWeiJie01"},"content":"     * @return The at description for the Event task.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"TohWeiJie01"},"content":"    public LocalDateTime getAt() {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"TohWeiJie01"},"content":"        return this.at;","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"TohWeiJie01"},"content":"     * Returns the string representation of the Event task.","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"TohWeiJie01"},"content":"     * @return The string representation of the Event task.","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"TohWeiJie01"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"TohWeiJie01"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"TohWeiJie01"},"content":"        return \"[E]\" + super.toString() + \" (at: \"","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"TohWeiJie01"},"content":"                + at.format(DateTimeFormatter.ofPattern(\"MM dd yyyy \u0027at\u0027 hh:mm\")) + \")\";","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"TohWeiJie01":40}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":" * The Task class encapsulates a task.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"public class Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"    /** The given task description. */","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":"    protected String description;","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"    /** Boolean to represent if the task is done, true if done, false otherwise. */","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":"     * Constructor for initialising a Task.","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"     * @param description The given task description.","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"TohWeiJie01"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"TohWeiJie01"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"TohWeiJie01"},"content":"     * Returns the task description.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"TohWeiJie01"},"content":"     * @return Description of the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"TohWeiJie01"},"content":"    public String getTaskDescription() {","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"TohWeiJie01"},"content":"        return this.description;","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"TohWeiJie01"},"content":"     * Checks and returns the status of a task in the form of \"X\" or \" \".","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"TohWeiJie01"},"content":"     * @return If the task is done \"X\" will be returned, else \" \" will be returned.","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"TohWeiJie01"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"TohWeiJie01"},"content":"        if (isDone) {","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"TohWeiJie01"},"content":"            return \"X\";","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"TohWeiJie01"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"TohWeiJie01"},"content":"            return \" \";","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"TohWeiJie01"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"TohWeiJie01"},"content":"     * Indicates that the Task is done.","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"TohWeiJie01"},"content":"    public void completeTask() {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"TohWeiJie01"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"TohWeiJie01"},"content":"     * Returns the string representation of the Task.","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"TohWeiJie01"},"content":"     * @return String representation of the Task.","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"TohWeiJie01"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"TohWeiJie01"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"TohWeiJie01":55}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":" * The To-do class encapsulates a Todo task.","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":"     * Constructor to initialise a Todo task.","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"     * @param description The description of a Todo task.","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":"     * Returns the string representation of the Todo task.","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"TohWeiJie01"},"content":"     * @return String representation of the Todo task.","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"TohWeiJie01"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"TohWeiJie01"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"TohWeiJie01":23}},{"path":"src/main/java/duke/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"package duke.tasklist;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":" * The TaskList class encapsulates a list of tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"public class TaskList {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"    /** An arraylist of Tasks to note all the Tasks stored in the TaskList. */","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":"    private ArrayList\u003cTask\u003e allTasks;","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":"    /** Pointer to indicate the next position to store the task in the arraylist. */","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"    private int nextSpaceToStore;","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"TohWeiJie01"},"content":"     * Constructor to initialise a TaskList.","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"TohWeiJie01"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"        ArrayList\u003cTask\u003e allTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"TohWeiJie01"},"content":"        this.allTasks \u003d allTasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"TohWeiJie01"},"content":"        this.nextSpaceToStore \u003d 0;","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"TohWeiJie01"},"content":"     * Constructor to initialise a TaskList.","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"TohWeiJie01"},"content":"    public TaskList(ArrayList\u003cTask\u003e allTasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"TohWeiJie01"},"content":"        this.allTasks \u003d allTasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"TohWeiJie01"},"content":"        this.nextSpaceToStore \u003d allTasks.size();","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"TohWeiJie01"},"content":"     * Stores the task to the TaskList and increment the nextSpaceToStore pointer by one.","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"TohWeiJie01"},"content":"     * @param toStore The task to store into the TaskList.","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"TohWeiJie01"},"content":"    public void storeTask(Task toStore) {","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"TohWeiJie01"},"content":"        allTasks.add(toStore);","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"TohWeiJie01"},"content":"        nextSpaceToStore \u003d nextSpaceToStore + 1;","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"TohWeiJie01"},"content":"     * Indicates the specified task is done in the TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"TohWeiJie01"},"content":"     * @param taskNo The task that is completed.","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"TohWeiJie01"},"content":"    public void doneTask(int taskNo) {","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"TohWeiJie01"},"content":"        Task doneTask \u003d allTasks.get(taskNo - 1);","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"TohWeiJie01"},"content":"        doneTask.completeTask();","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"TohWeiJie01"},"content":"     * Deletes the specified task from the TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"TohWeiJie01"},"content":"     * @param taskNo The task to be deleted.","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"TohWeiJie01"},"content":"    public void deleteTask(int taskNo) {","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"TohWeiJie01"},"content":"        allTasks.remove(taskNo - 1);","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"TohWeiJie01"},"content":"        nextSpaceToStore \u003d nextSpaceToStore - 1;","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"TohWeiJie01"},"content":"     * Returns the next position to store the task in the tasklist.","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"TohWeiJie01"},"content":"     * @return The next position to store the task in the tasklist.","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"TohWeiJie01"},"content":"    public int getNextSpaceToStore() {","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"TohWeiJie01"},"content":"        return this.nextSpaceToStore;","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":68,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"TohWeiJie01"},"content":"     * Returns the entire ArrayList the tasks are stored in.","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"TohWeiJie01"},"content":"     * @return The entire ArrayList the tasks are stored in.","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"TohWeiJie01"},"content":"    public ArrayList\u003cTask\u003e getAllTasks() {","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"TohWeiJie01"},"content":"        return this.allTasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"TohWeiJie01"},"content":"     * Returns the specified task from the tasklist.","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"TohWeiJie01"},"content":"     * @param taskNo The task to be retrieved.","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"TohWeiJie01"},"content":"     * @return The specified task from the tasklist.","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"TohWeiJie01"},"content":"    public Task getSpecificTask(int taskNo) {","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"TohWeiJie01"},"content":"        return allTasks.get(taskNo - 1);","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":86,"author":{"gitId":"TohWeiJie01"},"content":"     * Returns the string representation of the number of tasks in the TaskList.","lastModifiedDate":"2021-08-18"},{"lineNumber":87,"author":{"gitId":"TohWeiJie01"},"content":"     * @return String representation of the number of tasks in the TaskList.","lastModifiedDate":"2021-08-18"},{"lineNumber":88,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":89,"author":{"gitId":"TohWeiJie01"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":90,"author":{"gitId":"TohWeiJie01"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":91,"author":{"gitId":"TohWeiJie01"},"content":"        return \"Now you have \" + this.nextSpaceToStore + \" tasks in the list.\";","lastModifiedDate":"2021-08-18"},{"lineNumber":92,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":93,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"TohWeiJie01":93}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"package duke.ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":" * The Ui class encapsulates the user interactions Duke will provide to the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":"public class Ui {","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":"    // The lines that Duke will print","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"    /** The Duke chatbot\u0027s logo. */","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"TohWeiJie01"},"content":"    private final String LOGO \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"TohWeiJie01"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"TohWeiJie01"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"TohWeiJie01"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"    /** The line break between each interaction. */","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"TohWeiJie01"},"content":"    private final String LINE_BREAK \u003d \"-------------------------------------------------------------------\";","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"TohWeiJie01"},"content":"    /** The standard welcome message Duke will print as it starts. */","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"TohWeiJie01"},"content":"    private final String WELCOME_MESSAGE \u003d \"Hello I\u0027m\\n\" + LOGO + \"How may I help you today boss?\\n\";","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"TohWeiJie01"},"content":"    /** The standard goodbye message Duke will print as it closes. */","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"TohWeiJie01"},"content":"    private final String GOODBYE_MESSAGE \u003d \"Okay then! I hope to see you again soon boss!\";","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"TohWeiJie01"},"content":"    /** The standard delete message Duke will print as it adds a task. */","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"TohWeiJie01"},"content":"    private final String ADD_MESSAGE \u003d \"Got it boss! I\u0027ve added this task:\";","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"TohWeiJie01"},"content":"    /** The standard delete message Duke will print as it deletes a task. */","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"TohWeiJie01"},"content":"    private final String DELETE_MESSAGE \u003d \"Noted boss. I\u0027ve removed this task:\";","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"TohWeiJie01"},"content":"    /** The standard delete message Duke will print as it marks a task as done. */","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"TohWeiJie01"},"content":"    private final String DONE_MESSAGE \u003d \"Nice one boss! I\u0027ve marked this task as done:\";","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"TohWeiJie01"},"content":"    /** The standard error message Duke will print if an unrecognised command is inputted. */","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"TohWeiJie01"},"content":"    private final String UNRECOGNISED_MESSAGE \u003d \"☹ I\u0027m sorry boss! I\u0027m not quite sure what you need me to do!\";","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"TohWeiJie01"},"content":"    /** The standard list message Duke will print as it lists all the task. */","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"TohWeiJie01"},"content":"    private final String LIST_MESSAGE \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"TohWeiJie01"},"content":"    /** The standard find message Duke will print as it finds all the matching tasks. */","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"TohWeiJie01"},"content":"    private final String FIND_MESSAGE \u003d \"Here are the matching tasks in your list:\";","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"TohWeiJie01"},"content":"    /** The scanner utilised to read inputs from the user. */","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"TohWeiJie01"},"content":"    private Scanner scan;","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"TohWeiJie01"},"content":"     * Constructor to initialise the Ui.","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"TohWeiJie01"},"content":"    public Ui() {","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"TohWeiJie01"},"content":"        this.scan \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"TohWeiJie01"},"content":"     * Reads the inputs from the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"TohWeiJie01"},"content":"     * @return The input given by the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"TohWeiJie01"},"content":"    public String readCommand() {","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"TohWeiJie01"},"content":"        return scan.nextLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"TohWeiJie01"},"content":"     * Prints the full welcome message when Duke starts.","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"TohWeiJie01"},"content":"    public void greetWelcome() {","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"TohWeiJie01"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"TohWeiJie01"},"content":"        System.out.println(WELCOME_MESSAGE);","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"TohWeiJie01"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"TohWeiJie01"},"content":"     * Prints the full goodbye message when Duke closes.","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"TohWeiJie01"},"content":"    public void greetGoodbye() {","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"TohWeiJie01"},"content":"        System.out.println(GOODBYE_MESSAGE);","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"TohWeiJie01"},"content":"     * Prints the divider between interactions between Duke and the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"TohWeiJie01"},"content":"    public void showLine() {","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"TohWeiJie01"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"TohWeiJie01"},"content":"     * Prints the full added task message when a task is added successfully.","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"TohWeiJie01"},"content":"     * @param task The added task.","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"TohWeiJie01"},"content":"     * @param taskList The tasklist the task is added to.","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"TohWeiJie01"},"content":"    public void showTaskAdded(Task task, TaskList taskList) {","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"TohWeiJie01"},"content":"        System.out.println(ADD_MESSAGE);","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"TohWeiJie01"},"content":"        System.out.println(\"  \" + task + \"\\n\" + taskList.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"TohWeiJie01"},"content":"     * Prints the full deleted task message when a task is deleted successfully.","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"TohWeiJie01"},"content":"     * @param task The deleted task.","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"TohWeiJie01"},"content":"     * @param taskList The tasklist the task is deleted from.","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"TohWeiJie01"},"content":"    public void showTaskDeleted(Task task, TaskList taskList) {","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"TohWeiJie01"},"content":"        System.out.println(DELETE_MESSAGE);","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"TohWeiJie01"},"content":"        System.out.println(\"  \" + task.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":99,"author":{"gitId":"TohWeiJie01"},"content":"        System.out.println(taskList.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"TohWeiJie01"},"content":"     * Prints the full done task message when a task is indicated to be done.","lastModifiedDate":"2021-08-26"},{"lineNumber":104,"author":{"gitId":"TohWeiJie01"},"content":"     * @param task The done task.","lastModifiedDate":"2021-08-26"},{"lineNumber":105,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":106,"author":{"gitId":"TohWeiJie01"},"content":"    public void showTaskDone(Task task) {","lastModifiedDate":"2021-08-26"},{"lineNumber":107,"author":{"gitId":"TohWeiJie01"},"content":"        System.out.println(DONE_MESSAGE);","lastModifiedDate":"2021-08-26"},{"lineNumber":108,"author":{"gitId":"TohWeiJie01"},"content":"        System.out.println(\"  \" + task.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":109,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":110,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":111,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":112,"author":{"gitId":"TohWeiJie01"},"content":"     * Prints the full list task message.","lastModifiedDate":"2021-08-26"},{"lineNumber":113,"author":{"gitId":"TohWeiJie01"},"content":"     * @param taskList The tasklist to be printed.","lastModifiedDate":"2021-08-26"},{"lineNumber":114,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":115,"author":{"gitId":"TohWeiJie01"},"content":"    public void showList(TaskList taskList) {","lastModifiedDate":"2021-08-26"},{"lineNumber":116,"author":{"gitId":"TohWeiJie01"},"content":"        System.out.println(LIST_MESSAGE);","lastModifiedDate":"2021-08-26"},{"lineNumber":117,"author":{"gitId":"TohWeiJie01"},"content":"        int currPosition \u003d taskList.getNextSpaceToStore();","lastModifiedDate":"2021-08-26"},{"lineNumber":118,"author":{"gitId":"TohWeiJie01"},"content":"        ArrayList\u003cTask\u003e allTasks \u003d taskList.getAllTasks();","lastModifiedDate":"2021-08-26"},{"lineNumber":119,"author":{"gitId":"TohWeiJie01"},"content":"        for (int i \u003d 0; i \u003c currPosition; i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":120,"author":{"gitId":"TohWeiJie01"},"content":"            int currTask \u003d i + 1;","lastModifiedDate":"2021-08-26"},{"lineNumber":121,"author":{"gitId":"TohWeiJie01"},"content":"            System.out.println(currTask + \".\" + allTasks.get(i).toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":122,"author":{"gitId":"TohWeiJie01"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":123,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":124,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":125,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":126,"author":{"gitId":"TohWeiJie01"},"content":"     * Prints the full list of tasks that matches the description.","lastModifiedDate":"2021-08-26"},{"lineNumber":127,"author":{"gitId":"TohWeiJie01"},"content":"     * @param taskList The tasklist to be searched in.","lastModifiedDate":"2021-08-26"},{"lineNumber":128,"author":{"gitId":"TohWeiJie01"},"content":"     * @param description The keyword to be searched.","lastModifiedDate":"2021-08-26"},{"lineNumber":129,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":130,"author":{"gitId":"TohWeiJie01"},"content":"    public void showFind(TaskList taskList, String description) {","lastModifiedDate":"2021-08-26"},{"lineNumber":131,"author":{"gitId":"TohWeiJie01"},"content":"        int findPosition \u003d 1;","lastModifiedDate":"2021-08-26"},{"lineNumber":132,"author":{"gitId":"TohWeiJie01"},"content":"        int currPosition \u003d taskList.getNextSpaceToStore();","lastModifiedDate":"2021-08-26"},{"lineNumber":133,"author":{"gitId":"TohWeiJie01"},"content":"        System.out.println(FIND_MESSAGE);","lastModifiedDate":"2021-08-26"},{"lineNumber":134,"author":{"gitId":"TohWeiJie01"},"content":"        for (int i \u003d 0; i \u003c currPosition; i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":135,"author":{"gitId":"TohWeiJie01"},"content":"            String foundTask \u003d taskList.getAllTasks().get(i).toString();","lastModifiedDate":"2021-08-26"},{"lineNumber":136,"author":{"gitId":"TohWeiJie01"},"content":"            if (foundTask.contains(description)) {","lastModifiedDate":"2021-08-26"},{"lineNumber":137,"author":{"gitId":"TohWeiJie01"},"content":"                System.out.println(findPosition + \".\" + foundTask);","lastModifiedDate":"2021-08-26"},{"lineNumber":138,"author":{"gitId":"TohWeiJie01"},"content":"                findPosition++;","lastModifiedDate":"2021-08-26"},{"lineNumber":139,"author":{"gitId":"TohWeiJie01"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":140,"author":{"gitId":"TohWeiJie01"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":141,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":142,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":143,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":144,"author":{"gitId":"TohWeiJie01"},"content":"     * Prints the full unrecognised input message.","lastModifiedDate":"2021-08-26"},{"lineNumber":145,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":146,"author":{"gitId":"TohWeiJie01"},"content":"    public void showUnrecognised() {","lastModifiedDate":"2021-08-26"},{"lineNumber":147,"author":{"gitId":"TohWeiJie01"},"content":"        System.out.println(UNRECOGNISED_MESSAGE);","lastModifiedDate":"2021-08-26"},{"lineNumber":148,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":149,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":150,"author":{"gitId":"TohWeiJie01"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":151,"author":{"gitId":"TohWeiJie01"},"content":"     * Prints the error message should an error come up during an interaction.","lastModifiedDate":"2021-08-26"},{"lineNumber":152,"author":{"gitId":"TohWeiJie01"},"content":"     * @param errorMessage","lastModifiedDate":"2021-08-26"},{"lineNumber":153,"author":{"gitId":"TohWeiJie01"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":154,"author":{"gitId":"TohWeiJie01"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2021-08-26"},{"lineNumber":155,"author":{"gitId":"TohWeiJie01"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2021-08-26"},{"lineNumber":156,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":157,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"TohWeiJie01":157}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"public class DukeTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"    public void dummyTest() {","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"        assertEquals(2,2);","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"TohWeiJie01":12}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"    public void testDeadline() {","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"        LocalDate by \u003d LocalDate.parse(\"2021-08-30\");","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"        Deadline deadline \u003d new Deadline(\"return book\", by);","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":"        assertEquals(\"[D][ ] return book (by: 08 30 2021)\", deadline.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"TohWeiJie01":14}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"public class EventTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"    public void testEvent() {","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"        LocalDateTime at \u003d LocalDateTime.parse(\"2021-08-30T13:55\");","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"        Event event \u003d new Event(\"meeting\", at);","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":"        assertEquals(\"[E][ ] meeting (at: 08 30 2021 at 01:55)\", event.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"TohWeiJie01":14}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"public class TodoTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":"    public void createTest() {","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"        Todo todo \u003d new Todo(\"read book\");","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"        assertEquals(\"[T][ ] read book\", todo.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"TohWeiJie01":12}},{"path":"src/test/java/duke/tasklist/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"package duke.tasklist;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"TohWeiJie01"},"content":"public class TaskListTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"TohWeiJie01"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"TohWeiJie01"},"content":"    public void testAddTaskList() {","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"TohWeiJie01"},"content":"        Todo todo \u003d new Todo(\"read book\");","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"TohWeiJie01"},"content":"        LocalDate by \u003d LocalDate.parse(\"2021-08-30\");","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"TohWeiJie01"},"content":"        Deadline deadline \u003d new Deadline(\"return book\", by);","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"TohWeiJie01"},"content":"        LocalDateTime at \u003d LocalDateTime.parse(\"2021-08-30T13:55\");","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"TohWeiJie01"},"content":"        Event event \u003d new Event(\"meeting\", at);","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"TohWeiJie01"},"content":"        ArrayList\u003cTask\u003e allTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"TohWeiJie01"},"content":"        TaskList tasklist \u003d new TaskList(allTasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"TohWeiJie01"},"content":"        tasklist.storeTask(todo);","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"TohWeiJie01"},"content":"        tasklist.storeTask(deadline);","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"TohWeiJie01"},"content":"        tasklist.storeTask(event);","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"TohWeiJie01"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"TohWeiJie01"},"content":"        assertEquals(\"[T][ ] read book\", tasklist.getSpecificTask(1).toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"TohWeiJie01"},"content":"        assertEquals(\"[D][ ] return book (by: 08 30 2021)\", tasklist.getSpecificTask(2).toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"TohWeiJie01"},"content":"        assertEquals(\"[E][ ] meeting (at: 08 30 2021 at 01:55)\", tasklist.getSpecificTask(3).toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"TohWeiJie01"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"TohWeiJie01"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"TohWeiJie01":35}},{"path":"text-ui-test/data/tasklist.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"Todo / 1 / read book","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"Todo / 1 / read book","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"Deadline / 0 / return book / 2021-08-30","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"Event / 0 / project meeting / 2021-08-30T13:55","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"Todo / 0 / read book","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"Deadline / 0 / return book / 2021-08-30","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"Event / 0 / project meeting / 2021-08-30T13:55","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":"Todo / 0 / read book","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"Deadline / 0 / return book / 2021-08-30","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"Event / 0 / project meeting / 2021-08-30T13:55","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"TohWeiJie01":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"TohWeiJie01"},"content":"todo read book","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"TohWeiJie01"},"content":"deadline return book /by 2021-08-30","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"TohWeiJie01"},"content":"event project meeting /at 2021-08-30T13:55","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"TohWeiJie01"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"TohWeiJie01"},"content":"done 1","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"TohWeiJie01"},"content":"done 3","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"TohWeiJie01"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"TohWeiJie01"},"content":"blah","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"TohWeiJie01"},"content":"deadline","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"TohWeiJie01"},"content":"delete 2","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"TohWeiJie01"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"TohWeiJie01":11}}]
