[{"path":"src/main/java/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"okyntary"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"okyntary"},"content":"// A custom exception to handle","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"okyntary"},"content":"public class InvalidInputException extends IOException {","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"okyntary"},"content":"    public InvalidInputException(String errorMessage) {","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"okyntary"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"okyntary"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"okyntary"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"okyntary":8}},{"path":"src/main/java/Pilcrow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"okyntary"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"okyntary"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"okyntary"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"okyntary"},"content":" * Pilcrow is a personal assistant chatbot made for CS2103, based off of Duke.","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"okyntary"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"okyntary"},"content":"public class Pilcrow {","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"okyntary"},"content":"    private final static String PILCROW_LOGO \u003d \"\"\"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"okyntary"},"content":"              _____","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"okyntary"},"content":"             /   | |","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"okyntary"},"content":"            |    | |","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"okyntary"},"content":"            |    | |","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"okyntary"},"content":"             \\\\___| |","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"okyntary"},"content":"                 | |","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"okyntary"},"content":"                 | |","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"okyntary"},"content":"                _| |_","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"okyntary"},"content":"               |_|_|_|","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"okyntary"},"content":"            \"\"\";","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"okyntary"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"okyntary"},"content":"     * Runs the main body of the Pilcrow script.","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"okyntary"},"content":"     * @param args","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"okyntary"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"okyntary"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"okyntary"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"okyntary"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"okyntary"},"content":"        while (true) {","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"okyntary"},"content":"            // Reads the text from the scanner","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"okyntary"},"content":"            String text \u003d scanner.nextLine();","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"okyntary"},"content":"            String trimmedText \u003d text.trim();","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"okyntary"},"content":"            String[] splitText \u003d trimmedText.split(\" \");","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"okyntary"},"content":"            ArrayList\u003cString\u003e words \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"okyntary"},"content":"            for (int i \u003d 0; i \u003c splitText.length; i++) {","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"okyntary"},"content":"                if (!splitText[i].equals(\"\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"okyntary"},"content":"                    words.add(splitText[i]);","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"okyntary"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"okyntary"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"okyntary"},"content":"            // Parses the text and does the appropriate action","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"okyntary"},"content":"            try {","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"okyntary"},"content":"                Pilcrow.parseText(trimmedText, words, tasks);","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"okyntary"},"content":"            } catch (InvalidInputException exception) {","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"okyntary"},"content":"                System.out.println(exception);","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"okyntary"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"okyntary"},"content":"            // Exit while loop if first word of trimmed text is \"bye\"","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"okyntary"},"content":"            if (words.size() \u003e 0 \u0026\u0026 words.get(0).equals(\"bye\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"okyntary"},"content":"                break;","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"okyntary"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"okyntary"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"okyntary"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"okyntary"},"content":"    private static void parseText(String trimmedText, ArrayList\u003cString\u003e words, ArrayList\u003cTask\u003e tasks)","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"okyntary"},"content":"            throws InvalidInputException {","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"okyntary"},"content":"        String displayText \u003d \"\";","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"okyntary"},"content":"        // Exception thrown if input is empty","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"okyntary"},"content":"        if (words.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"okyntary"},"content":"            throw new InvalidInputException(\"Nothing entered.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"okyntary"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":63,"author":{"gitId":"okyntary"},"content":"        String command \u003d words.get(0);","lastModifiedDate":"2021-08-19"},{"lineNumber":64,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":65,"author":{"gitId":"okyntary"},"content":"        // Chooses what to do based on which command is entered","lastModifiedDate":"2021-08-19"},{"lineNumber":66,"author":{"gitId":"okyntary"},"content":"        switch (command) {","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"okyntary"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-19"},{"lineNumber":68,"author":{"gitId":"okyntary"},"content":"            // Exception thrown if description of todo is empty","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"okyntary"},"content":"            if (words.size() \u003d\u003d 1) {","lastModifiedDate":"2021-08-19"},{"lineNumber":70,"author":{"gitId":"okyntary"},"content":"                throw new InvalidInputException(\"Description of todo cannot be empty.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":71,"author":{"gitId":"okyntary"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":72,"author":{"gitId":"okyntary"},"content":"            String toDoName \u003d trimmedText.substring(trimmedText.indexOf(\" \") + 1);","lastModifiedDate":"2021-08-19"},{"lineNumber":73,"author":{"gitId":"okyntary"},"content":"            Task newTask \u003d new ToDo(toDoName);","lastModifiedDate":"2021-08-19"},{"lineNumber":74,"author":{"gitId":"okyntary"},"content":"            tasks.add(newTask);","lastModifiedDate":"2021-08-19"},{"lineNumber":75,"author":{"gitId":"okyntary"},"content":"            displayText \u003d \"Added todo to tasks(\" + tasks.size() + \"): \\n\" + newTask.toString();","lastModifiedDate":"2021-08-19"},{"lineNumber":76,"author":{"gitId":"okyntary"},"content":"            break;","lastModifiedDate":"2021-08-19"},{"lineNumber":77,"author":{"gitId":"okyntary"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-19"},{"lineNumber":78,"author":{"gitId":"okyntary"},"content":"            // Fallthrough","lastModifiedDate":"2021-08-19"},{"lineNumber":79,"author":{"gitId":"okyntary"},"content":"        case \"event\":","lastModifiedDate":"2021-08-19"},{"lineNumber":80,"author":{"gitId":"okyntary"},"content":"            // Exception thrown if description of event/deadline is empty","lastModifiedDate":"2021-08-19"},{"lineNumber":81,"author":{"gitId":"okyntary"},"content":"            if (words.size() \u003d\u003d 1) {","lastModifiedDate":"2021-08-19"},{"lineNumber":82,"author":{"gitId":"okyntary"},"content":"                throw new InvalidInputException(\"Description of event/deadline cannot be empty.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":83,"author":{"gitId":"okyntary"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":84,"author":{"gitId":"okyntary"},"content":"            // Exception thrown if description of event/deadline contains no \u0027/\u0027","lastModifiedDate":"2021-08-19"},{"lineNumber":85,"author":{"gitId":"okyntary"},"content":"            if (!trimmedText.contains(\"/\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":86,"author":{"gitId":"okyntary"},"content":"                throw new InvalidInputException(\"No duration/deadline specified with \u0027/\u0027.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":87,"author":{"gitId":"okyntary"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":88,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":89,"author":{"gitId":"okyntary"},"content":"            String taskName \u003d trimmedText.substring(0, trimmedText.indexOf(\"/\")).trim();","lastModifiedDate":"2021-08-19"},{"lineNumber":90,"author":{"gitId":"okyntary"},"content":"            // Exception thrown if description of event/deadline is empty","lastModifiedDate":"2021-08-19"},{"lineNumber":91,"author":{"gitId":"okyntary"},"content":"            if (!taskName.contains(\" \")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":92,"author":{"gitId":"okyntary"},"content":"                throw new InvalidInputException(\"Description of event/deadline cannot be empty.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":93,"author":{"gitId":"okyntary"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":94,"author":{"gitId":"okyntary"},"content":"            taskName \u003d taskName.substring(taskName.indexOf(\" \"));","lastModifiedDate":"2021-08-19"},{"lineNumber":95,"author":{"gitId":"okyntary"},"content":"            String taskTime \u003d trimmedText.substring(trimmedText.indexOf(\"/\") + 1);","lastModifiedDate":"2021-08-19"},{"lineNumber":96,"author":{"gitId":"okyntary"},"content":"            if (command.equals(\"deadline\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":97,"author":{"gitId":"okyntary"},"content":"                newTask \u003d new Deadline(taskName, taskTime);","lastModifiedDate":"2021-08-19"},{"lineNumber":98,"author":{"gitId":"okyntary"},"content":"                tasks.add(newTask);","lastModifiedDate":"2021-08-19"},{"lineNumber":99,"author":{"gitId":"okyntary"},"content":"                displayText \u003d \"Added deadline to tasks(\" + tasks.size() + \"): \\n\" + newTask.toString();","lastModifiedDate":"2021-08-19"},{"lineNumber":100,"author":{"gitId":"okyntary"},"content":"            } else if (command.equals(\"event\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":101,"author":{"gitId":"okyntary"},"content":"                newTask \u003d new Event(taskName, taskTime);","lastModifiedDate":"2021-08-19"},{"lineNumber":102,"author":{"gitId":"okyntary"},"content":"                tasks.add(newTask);","lastModifiedDate":"2021-08-19"},{"lineNumber":103,"author":{"gitId":"okyntary"},"content":"                displayText \u003d \"Added event to tasks(\" + tasks.size() + \"): \\n\" + newTask.toString();","lastModifiedDate":"2021-08-19"},{"lineNumber":104,"author":{"gitId":"okyntary"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":105,"author":{"gitId":"okyntary"},"content":"            break;","lastModifiedDate":"2021-08-19"},{"lineNumber":106,"author":{"gitId":"okyntary"},"content":"        case \"list\":","lastModifiedDate":"2021-08-19"},{"lineNumber":107,"author":{"gitId":"okyntary"},"content":"            displayText \u003d Pilcrow.printAllTasks(tasks);","lastModifiedDate":"2021-08-19"},{"lineNumber":108,"author":{"gitId":"okyntary"},"content":"            break;","lastModifiedDate":"2021-08-19"},{"lineNumber":109,"author":{"gitId":"okyntary"},"content":"        case \"done\":","lastModifiedDate":"2021-08-19"},{"lineNumber":110,"author":{"gitId":"okyntary"},"content":"            // Exception thrown if no word given after done command","lastModifiedDate":"2021-08-19"},{"lineNumber":111,"author":{"gitId":"okyntary"},"content":"            if (words.size() \u003d\u003d 1) {","lastModifiedDate":"2021-08-19"},{"lineNumber":112,"author":{"gitId":"okyntary"},"content":"                throw new InvalidInputException(\"Must specify a task as done.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":113,"author":{"gitId":"okyntary"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":114,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":115,"author":{"gitId":"okyntary"},"content":"            // Exception thrown if word given cannot be converted to integer","lastModifiedDate":"2021-08-19"},{"lineNumber":116,"author":{"gitId":"okyntary"},"content":"            int doneTask;","lastModifiedDate":"2021-08-19"},{"lineNumber":117,"author":{"gitId":"okyntary"},"content":"            try {","lastModifiedDate":"2021-08-19"},{"lineNumber":118,"author":{"gitId":"okyntary"},"content":"                doneTask \u003d Integer.valueOf(words.get(1));","lastModifiedDate":"2021-08-19"},{"lineNumber":119,"author":{"gitId":"okyntary"},"content":"            } catch (NumberFormatException exception) {","lastModifiedDate":"2021-08-19"},{"lineNumber":120,"author":{"gitId":"okyntary"},"content":"                throw new InvalidInputException(\"Must specify task number as an integer.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":121,"author":{"gitId":"okyntary"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":122,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":123,"author":{"gitId":"okyntary"},"content":"            int taskIndex \u003d doneTask - 1;","lastModifiedDate":"2021-08-19"},{"lineNumber":124,"author":{"gitId":"okyntary"},"content":"            // Exception thrown if task specified does not exist","lastModifiedDate":"2021-08-19"},{"lineNumber":125,"author":{"gitId":"okyntary"},"content":"            if (taskIndex \u003e\u003d tasks.size()) {","lastModifiedDate":"2021-08-19"},{"lineNumber":126,"author":{"gitId":"okyntary"},"content":"                throw new InvalidInputException(\"Must specify a task that exists.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":127,"author":{"gitId":"okyntary"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":128,"author":{"gitId":"okyntary"},"content":"            tasks.get(taskIndex).markAsDone(true);","lastModifiedDate":"2021-08-19"},{"lineNumber":129,"author":{"gitId":"okyntary"},"content":"            displayText \u003d \"Task \" + doneTask + \" set as done:\\n\" + tasks.get(taskIndex).toString();","lastModifiedDate":"2021-08-19"},{"lineNumber":130,"author":{"gitId":"okyntary"},"content":"            break;","lastModifiedDate":"2021-08-19"},{"lineNumber":131,"author":{"gitId":"okyntary"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-19"},{"lineNumber":132,"author":{"gitId":"okyntary"},"content":"            // Exception thrown if no word given after delete command","lastModifiedDate":"2021-08-19"},{"lineNumber":133,"author":{"gitId":"okyntary"},"content":"            if (words.size() \u003d\u003d 1) {","lastModifiedDate":"2021-08-19"},{"lineNumber":134,"author":{"gitId":"okyntary"},"content":"                throw new InvalidInputException(\"Must specify a task to delete.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":135,"author":{"gitId":"okyntary"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":136,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":137,"author":{"gitId":"okyntary"},"content":"            // Exception thrown if word given cannot be converted to integer","lastModifiedDate":"2021-08-19"},{"lineNumber":138,"author":{"gitId":"okyntary"},"content":"            int taskToDelete;","lastModifiedDate":"2021-08-19"},{"lineNumber":139,"author":{"gitId":"okyntary"},"content":"            try {","lastModifiedDate":"2021-08-19"},{"lineNumber":140,"author":{"gitId":"okyntary"},"content":"                taskToDelete \u003d Integer.valueOf(words.get(1));","lastModifiedDate":"2021-08-19"},{"lineNumber":141,"author":{"gitId":"okyntary"},"content":"            } catch (NumberFormatException exception) {","lastModifiedDate":"2021-08-19"},{"lineNumber":142,"author":{"gitId":"okyntary"},"content":"                throw new InvalidInputException(\"Must specify task number as an integer.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":143,"author":{"gitId":"okyntary"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":144,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":145,"author":{"gitId":"okyntary"},"content":"            taskIndex \u003d taskToDelete - 1;","lastModifiedDate":"2021-08-19"},{"lineNumber":146,"author":{"gitId":"okyntary"},"content":"            // Exception thrown if task specified does not exist","lastModifiedDate":"2021-08-19"},{"lineNumber":147,"author":{"gitId":"okyntary"},"content":"            if (taskIndex \u003e\u003d tasks.size()) {","lastModifiedDate":"2021-08-19"},{"lineNumber":148,"author":{"gitId":"okyntary"},"content":"                throw new InvalidInputException(\"Must specify a task that exists.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":149,"author":{"gitId":"okyntary"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":150,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":151,"author":{"gitId":"okyntary"},"content":"            tasks.remove(taskIndex);","lastModifiedDate":"2021-08-19"},{"lineNumber":152,"author":{"gitId":"okyntary"},"content":"            displayText \u003d \"Task \" + taskToDelete + \" deleted.\\n\";","lastModifiedDate":"2021-08-19"},{"lineNumber":153,"author":{"gitId":"okyntary"},"content":"            break;","lastModifiedDate":"2021-08-19"},{"lineNumber":154,"author":{"gitId":"okyntary"},"content":"        case \"bye\":","lastModifiedDate":"2021-08-19"},{"lineNumber":155,"author":{"gitId":"okyntary"},"content":"            displayText \u003d \"C\u0027est fini.\\n\" + Pilcrow.PILCROW_LOGO;","lastModifiedDate":"2021-08-19"},{"lineNumber":156,"author":{"gitId":"okyntary"},"content":"            break;","lastModifiedDate":"2021-08-19"},{"lineNumber":157,"author":{"gitId":"okyntary"},"content":"        default:","lastModifiedDate":"2021-08-19"},{"lineNumber":158,"author":{"gitId":"okyntary"},"content":"            newTask \u003d new Task(trimmedText);","lastModifiedDate":"2021-08-19"},{"lineNumber":159,"author":{"gitId":"okyntary"},"content":"            tasks.add(newTask);","lastModifiedDate":"2021-08-19"},{"lineNumber":160,"author":{"gitId":"okyntary"},"content":"            displayText \u003d \"Added generic task to tasks(\" + tasks.size() + \"): \\n\" + newTask.toString();","lastModifiedDate":"2021-08-19"},{"lineNumber":161,"author":{"gitId":"okyntary"},"content":"            break;","lastModifiedDate":"2021-08-19"},{"lineNumber":162,"author":{"gitId":"okyntary"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":163,"author":{"gitId":"okyntary"},"content":"        System.out.println(displayText);","lastModifiedDate":"2021-08-19"},{"lineNumber":164,"author":{"gitId":"okyntary"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":165,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":166,"author":{"gitId":"okyntary"},"content":"    private static String printAllTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-19"},{"lineNumber":167,"author":{"gitId":"okyntary"},"content":"        String tasksText \u003d \"\";","lastModifiedDate":"2021-08-19"},{"lineNumber":168,"author":{"gitId":"okyntary"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-19"},{"lineNumber":169,"author":{"gitId":"okyntary"},"content":"            tasksText +\u003d (i + 1) + \". \" + tasks.get(i).toString() + \"\\n\";","lastModifiedDate":"2021-08-19"},{"lineNumber":170,"author":{"gitId":"okyntary"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":171,"author":{"gitId":"okyntary"},"content":"        return tasksText;","lastModifiedDate":"2021-08-19"},{"lineNumber":172,"author":{"gitId":"okyntary"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":173,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":174,"author":{"gitId":"okyntary"},"content":"    // Inner classes for Task and its subclasses","lastModifiedDate":"2021-08-19"},{"lineNumber":175,"author":{"gitId":"okyntary"},"content":"    private static class Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":176,"author":{"gitId":"okyntary"},"content":"        protected String taskName;","lastModifiedDate":"2021-08-19"},{"lineNumber":177,"author":{"gitId":"okyntary"},"content":"        protected Boolean isDone;","lastModifiedDate":"2021-08-19"},{"lineNumber":178,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":179,"author":{"gitId":"okyntary"},"content":"        /**","lastModifiedDate":"2021-08-19"},{"lineNumber":180,"author":{"gitId":"okyntary"},"content":"         * Constructor for a generic Task.","lastModifiedDate":"2021-08-19"},{"lineNumber":181,"author":{"gitId":"okyntary"},"content":"         * @param taskName Task name","lastModifiedDate":"2021-08-19"},{"lineNumber":182,"author":{"gitId":"okyntary"},"content":"         */","lastModifiedDate":"2021-08-19"},{"lineNumber":183,"author":{"gitId":"okyntary"},"content":"        public Task(String taskName) {","lastModifiedDate":"2021-08-19"},{"lineNumber":184,"author":{"gitId":"okyntary"},"content":"            this.taskName \u003d taskName;","lastModifiedDate":"2021-08-19"},{"lineNumber":185,"author":{"gitId":"okyntary"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2021-08-19"},{"lineNumber":186,"author":{"gitId":"okyntary"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":187,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":188,"author":{"gitId":"okyntary"},"content":"        public void markAsDone(Boolean isDone) {","lastModifiedDate":"2021-08-19"},{"lineNumber":189,"author":{"gitId":"okyntary"},"content":"            this.isDone \u003d isDone;","lastModifiedDate":"2021-08-19"},{"lineNumber":190,"author":{"gitId":"okyntary"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":191,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":192,"author":{"gitId":"okyntary"},"content":"        /**","lastModifiedDate":"2021-08-19"},{"lineNumber":193,"author":{"gitId":"okyntary"},"content":"         * Converts Task into a string.","lastModifiedDate":"2021-08-19"},{"lineNumber":194,"author":{"gitId":"okyntary"},"content":"         * @return Task in string form","lastModifiedDate":"2021-08-19"},{"lineNumber":195,"author":{"gitId":"okyntary"},"content":"         */","lastModifiedDate":"2021-08-19"},{"lineNumber":196,"author":{"gitId":"okyntary"},"content":"        @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":197,"author":{"gitId":"okyntary"},"content":"        public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":198,"author":{"gitId":"okyntary"},"content":"            String taskText \u003d \"    [\" + (this.isDone ? \u0027X\u0027 : \u0027 \u0027) + \"] \" + taskName;","lastModifiedDate":"2021-08-19"},{"lineNumber":199,"author":{"gitId":"okyntary"},"content":"            return taskText;","lastModifiedDate":"2021-08-19"},{"lineNumber":200,"author":{"gitId":"okyntary"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":201,"author":{"gitId":"okyntary"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":202,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":203,"author":{"gitId":"okyntary"},"content":"    private static class ToDo extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":204,"author":{"gitId":"okyntary"},"content":"        /**","lastModifiedDate":"2021-08-19"},{"lineNumber":205,"author":{"gitId":"okyntary"},"content":"         * Constructor for a ToDo Task.","lastModifiedDate":"2021-08-19"},{"lineNumber":206,"author":{"gitId":"okyntary"},"content":"         * @param toDoName ToDo Task name","lastModifiedDate":"2021-08-19"},{"lineNumber":207,"author":{"gitId":"okyntary"},"content":"         */","lastModifiedDate":"2021-08-19"},{"lineNumber":208,"author":{"gitId":"okyntary"},"content":"        public ToDo(String toDoName) {","lastModifiedDate":"2021-08-19"},{"lineNumber":209,"author":{"gitId":"okyntary"},"content":"            super(toDoName);","lastModifiedDate":"2021-08-19"},{"lineNumber":210,"author":{"gitId":"okyntary"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":211,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":212,"author":{"gitId":"okyntary"},"content":"        /**","lastModifiedDate":"2021-08-19"},{"lineNumber":213,"author":{"gitId":"okyntary"},"content":"         * Converts ToDo Task into a string.","lastModifiedDate":"2021-08-19"},{"lineNumber":214,"author":{"gitId":"okyntary"},"content":"         * @return ToDo Task in string form","lastModifiedDate":"2021-08-19"},{"lineNumber":215,"author":{"gitId":"okyntary"},"content":"         */","lastModifiedDate":"2021-08-19"},{"lineNumber":216,"author":{"gitId":"okyntary"},"content":"        @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":217,"author":{"gitId":"okyntary"},"content":"        public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":218,"author":{"gitId":"okyntary"},"content":"            String toDoText \u003d \"[T] [\" + (this.isDone ? \u0027X\u0027 : \u0027 \u0027) + \"] \" + taskName;","lastModifiedDate":"2021-08-19"},{"lineNumber":219,"author":{"gitId":"okyntary"},"content":"            return toDoText;","lastModifiedDate":"2021-08-19"},{"lineNumber":220,"author":{"gitId":"okyntary"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":221,"author":{"gitId":"okyntary"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":222,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":223,"author":{"gitId":"okyntary"},"content":"    private static class Deadline extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":224,"author":{"gitId":"okyntary"},"content":"        String deadline;","lastModifiedDate":"2021-08-19"},{"lineNumber":225,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":226,"author":{"gitId":"okyntary"},"content":"        /**","lastModifiedDate":"2021-08-19"},{"lineNumber":227,"author":{"gitId":"okyntary"},"content":"         * Constructs a Deadline Task.","lastModifiedDate":"2021-08-19"},{"lineNumber":228,"author":{"gitId":"okyntary"},"content":"         * @param deadlineName Deadline Task name","lastModifiedDate":"2021-08-19"},{"lineNumber":229,"author":{"gitId":"okyntary"},"content":"         * @param deadline actual deadline","lastModifiedDate":"2021-08-19"},{"lineNumber":230,"author":{"gitId":"okyntary"},"content":"         */","lastModifiedDate":"2021-08-19"},{"lineNumber":231,"author":{"gitId":"okyntary"},"content":"        public Deadline(String deadlineName, String deadline) {","lastModifiedDate":"2021-08-19"},{"lineNumber":232,"author":{"gitId":"okyntary"},"content":"            super(deadlineName);","lastModifiedDate":"2021-08-19"},{"lineNumber":233,"author":{"gitId":"okyntary"},"content":"            this.deadline \u003d deadline;","lastModifiedDate":"2021-08-19"},{"lineNumber":234,"author":{"gitId":"okyntary"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":235,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":236,"author":{"gitId":"okyntary"},"content":"        /**","lastModifiedDate":"2021-08-19"},{"lineNumber":237,"author":{"gitId":"okyntary"},"content":"         * Converts Deadline Task into string.","lastModifiedDate":"2021-08-19"},{"lineNumber":238,"author":{"gitId":"okyntary"},"content":"         * @return Deadline Task in string form","lastModifiedDate":"2021-08-19"},{"lineNumber":239,"author":{"gitId":"okyntary"},"content":"         */","lastModifiedDate":"2021-08-19"},{"lineNumber":240,"author":{"gitId":"okyntary"},"content":"        @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":241,"author":{"gitId":"okyntary"},"content":"        public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":242,"author":{"gitId":"okyntary"},"content":"            String toDoText \u003d \"[D] [\" + (this.isDone ? \u0027X\u0027 : \u0027 \u0027) + \"] \" + taskName + \" (\" + this.deadline + \")\";","lastModifiedDate":"2021-08-19"},{"lineNumber":243,"author":{"gitId":"okyntary"},"content":"            return toDoText;","lastModifiedDate":"2021-08-19"},{"lineNumber":244,"author":{"gitId":"okyntary"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":245,"author":{"gitId":"okyntary"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":246,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":247,"author":{"gitId":"okyntary"},"content":"    private static class Event extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":248,"author":{"gitId":"okyntary"},"content":"        private String duration;","lastModifiedDate":"2021-08-19"},{"lineNumber":249,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":250,"author":{"gitId":"okyntary"},"content":"        /**","lastModifiedDate":"2021-08-19"},{"lineNumber":251,"author":{"gitId":"okyntary"},"content":"         * Constructs an Event Task.","lastModifiedDate":"2021-08-19"},{"lineNumber":252,"author":{"gitId":"okyntary"},"content":"         * @param eventName Event Task name","lastModifiedDate":"2021-08-19"},{"lineNumber":253,"author":{"gitId":"okyntary"},"content":"         * @param duration duration of Event Task","lastModifiedDate":"2021-08-19"},{"lineNumber":254,"author":{"gitId":"okyntary"},"content":"         */","lastModifiedDate":"2021-08-19"},{"lineNumber":255,"author":{"gitId":"okyntary"},"content":"        public Event(String eventName, String duration) {","lastModifiedDate":"2021-08-19"},{"lineNumber":256,"author":{"gitId":"okyntary"},"content":"            super(eventName);","lastModifiedDate":"2021-08-19"},{"lineNumber":257,"author":{"gitId":"okyntary"},"content":"            this.duration \u003d duration;","lastModifiedDate":"2021-08-19"},{"lineNumber":258,"author":{"gitId":"okyntary"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":259,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":260,"author":{"gitId":"okyntary"},"content":"        /**","lastModifiedDate":"2021-08-19"},{"lineNumber":261,"author":{"gitId":"okyntary"},"content":"         * Converts Event Task into string.","lastModifiedDate":"2021-08-19"},{"lineNumber":262,"author":{"gitId":"okyntary"},"content":"         * @return Event Task in string form","lastModifiedDate":"2021-08-19"},{"lineNumber":263,"author":{"gitId":"okyntary"},"content":"         */","lastModifiedDate":"2021-08-19"},{"lineNumber":264,"author":{"gitId":"okyntary"},"content":"        @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":265,"author":{"gitId":"okyntary"},"content":"        public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":266,"author":{"gitId":"okyntary"},"content":"            String toDoText \u003d \"[E] [\" + (this.isDone ? \u0027X\u0027 : \u0027 \u0027) + \"] \" + taskName + \" (\" + this.duration + \")\";","lastModifiedDate":"2021-08-19"},{"lineNumber":267,"author":{"gitId":"okyntary"},"content":"            return toDoText;","lastModifiedDate":"2021-08-19"},{"lineNumber":268,"author":{"gitId":"okyntary"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":269,"author":{"gitId":"okyntary"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":270,"author":{"gitId":"okyntary"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"okyntary":270}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"okyntary"},"content":"abc","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"okyntary"},"content":"def","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"okyntary"},"content":"todo 234","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"okyntary"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"okyntary"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"okyntary"},"content":"event dinner /by now","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"okyntary"},"content":"done 3","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"okyntary"},"content":"deadline supper /by 10pm","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"okyntary"},"content":"event the rapture /very soon","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"okyntary"},"content":"event global warming /yesterday, all my troubles seemed so far away","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"okyntary"},"content":"glug glug glug goes the hippocampus","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"okyntary"},"content":"done 4","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"okyntary"},"content":"delete 1","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"okyntary"},"content":"delete 1","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"okyntary":14}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"okyntary"},"content":"java -classpath ..\\bin Pilcrow \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"okyntary"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"okyntary"},"content":"cmd /k","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"-":20,"okyntary":3}}]
