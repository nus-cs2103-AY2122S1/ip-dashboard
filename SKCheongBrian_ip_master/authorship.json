[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"SKCheongBrian"},"content":"# duke.Duke project template","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"SKCheongBrian"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"SKCheongBrian":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"SKCheongBrian"},"content":"   // id \u0027checkstyle\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"SKCheongBrian"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"SKCheongBrian"},"content":"//checkstyle {","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"SKCheongBrian"},"content":"//    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"SKCheongBrian"},"content":"//}","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"SKCheongBrian":5,"-":41}},{"path":"src/main/data/tasks_backup.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"SKCheongBrian"},"content":"T|0|hello|","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"SKCheongBrian"},"content":"E|0|spike pep talk|23/08/2021 2200","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"SKCheongBrian":2}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SKCheongBrian"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"SKCheongBrian"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"SKCheongBrian"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"SKCheongBrian"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"SKCheongBrian"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"SKCheongBrian"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"SKCheongBrian"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"SKCheongBrian"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"SKCheongBrian"},"content":" * Represents the main class that the program runs from.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"SKCheongBrian"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"SKCheongBrian"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"SKCheongBrian"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"SKCheongBrian"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"SKCheongBrian"},"content":"     * Initialises the program to the filepath of the text file where the tasks are saved.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"SKCheongBrian"},"content":"     * @param filePath the filepath of the text file where the tasks are saved.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"SKCheongBrian"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"SKCheongBrian"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"SKCheongBrian"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"SKCheongBrian"},"content":"        try {","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"SKCheongBrian"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"SKCheongBrian"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"SKCheongBrian"},"content":"            ui.showLoadingError();","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"SKCheongBrian"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"SKCheongBrian"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":34,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"SKCheongBrian"},"content":"     * Runs the program.","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"SKCheongBrian"},"content":"    public void run() {","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"SKCheongBrian"},"content":"        ui.sayHello();","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"SKCheongBrian"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"SKCheongBrian"},"content":"        while (!isExit) {","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"SKCheongBrian"},"content":"            try {","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"SKCheongBrian"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"SKCheongBrian"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"SKCheongBrian"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"SKCheongBrian"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"SKCheongBrian"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"SKCheongBrian"},"content":"                ui.printDukeException(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"SKCheongBrian"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"SKCheongBrian"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"SKCheongBrian"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"SKCheongBrian"},"content":"        new Duke(\"./src/main/data/tasks.txt\").run();","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"SKCheongBrian":52,"-":3}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SKCheongBrian"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"SKCheongBrian"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"SKCheongBrian"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"SKCheongBrian"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"SKCheongBrian"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"SKCheongBrian"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"SKCheongBrian"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"SKCheongBrian"},"content":" * Represents an add command where it is given a task to add to the tasklist","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"SKCheongBrian"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"SKCheongBrian"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"SKCheongBrian"},"content":"    Task task;","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"SKCheongBrian"},"content":"     * Constructor to create an AddCommand with the task that it will add.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"SKCheongBrian"},"content":"     * @param task","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"SKCheongBrian"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"SKCheongBrian"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"SKCheongBrian"},"content":"     * Returns true if the command is an exit command.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"SKCheongBrian"},"content":"     * @return false since the add command is not an exit command.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"SKCheongBrian"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"SKCheongBrian"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"SKCheongBrian"},"content":"        return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"SKCheongBrian"},"content":"     * Executes the add command. Where the task is added to the tasklist and the ui prints out a","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"SKCheongBrian"},"content":"     * confirmation that the command was added.","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"SKCheongBrian"},"content":"     * @param tasks the TaskList of the program.","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"SKCheongBrian"},"content":"     * @param ui the ui of the program.","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"SKCheongBrian"},"content":"     * @param storage the storage of the program.","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"SKCheongBrian"},"content":"     * @throws DukeException thrown if there is error when trying to add command.","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"SKCheongBrian"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"SKCheongBrian"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"SKCheongBrian"},"content":"        tasks.addTask(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"SKCheongBrian"},"content":"        ui.printAddedTask(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"SKCheongBrian"},"content":"     * Returns a boolean which is true when another object is the same by comparing their tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"SKCheongBrian"},"content":"     * @param obj the other AddCommand","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"SKCheongBrian"},"content":"     * @return a boolean that is true if the AddCommands are the same.","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"SKCheongBrian"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"SKCheongBrian"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"SKCheongBrian"},"content":"        AddCommand other \u003d (AddCommand) obj;","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"SKCheongBrian"},"content":"        return this.task.toString().equals(other.task.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"SKCheongBrian"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"SKCheongBrian":57}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SKCheongBrian"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"SKCheongBrian"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"SKCheongBrian"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"SKCheongBrian"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"SKCheongBrian"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"SKCheongBrian"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"SKCheongBrian"},"content":" * Represents commands that to be executed by the program based on the input from the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"SKCheongBrian"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"SKCheongBrian"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"SKCheongBrian"},"content":"     * Returns true if the command is an exit command.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"SKCheongBrian"},"content":"     * @return a boolean that is true if the command is an exit command.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"SKCheongBrian"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"SKCheongBrian"},"content":"     * Executes the command based on the type of command it is.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"SKCheongBrian"},"content":"     * @param tasks the TaskList where all the tasks are stored.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"SKCheongBrian"},"content":"     * @param ui The ui to print out the user interface and to get input from user.","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"SKCheongBrian"},"content":"     * @param storage The storage that interacts with the file to save and load tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"SKCheongBrian"},"content":"     * @throws DukeException The exception that is thrown when an error is occurred.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"SKCheongBrian"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"SKCheongBrian"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"SKCheongBrian":29}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SKCheongBrian"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"SKCheongBrian"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"SKCheongBrian"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"SKCheongBrian"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"SKCheongBrian"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"SKCheongBrian"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"SKCheongBrian"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"SKCheongBrian"},"content":" * Represents a delete command where a task is deleted from the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"SKCheongBrian"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"SKCheongBrian"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"SKCheongBrian"},"content":"    int index;","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"SKCheongBrian"},"content":"     * Creates a delete command where it has the index of the task in the TaskList to be deleted.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"SKCheongBrian"},"content":"     * @param index the index of the task in the TaskList to be deleted.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"SKCheongBrian"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"SKCheongBrian"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"SKCheongBrian"},"content":"     * Returns false since a delete command is not an exit command.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"SKCheongBrian"},"content":"     * @return false since it is not a delete command.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"SKCheongBrian"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"SKCheongBrian"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"SKCheongBrian"},"content":"        return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"SKCheongBrian"},"content":"     * Executes the delete command, deleting the requested task and printing out a confirmation for the user to see.","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"SKCheongBrian"},"content":"     * @param tasks the TaskList where all the tasks are stored.","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"SKCheongBrian"},"content":"     * @param ui The ui to print out the user interface and to get input from user.","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"SKCheongBrian"},"content":"     * @param storage The storage that interacts with the file to save and load tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"SKCheongBrian"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"SKCheongBrian"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"SKCheongBrian"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"SKCheongBrian"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"SKCheongBrian"},"content":"        tasks.deleteTask(index);","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"SKCheongBrian"},"content":"        ui.printDeletedTask(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"SKCheongBrian"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"SKCheongBrian":46}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SKCheongBrian"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"SKCheongBrian"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"SKCheongBrian"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"SKCheongBrian"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"SKCheongBrian"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"SKCheongBrian"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"SKCheongBrian"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"SKCheongBrian"},"content":" * Represents a done command that has a index of the task in the TaskList that is to be marked as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"SKCheongBrian"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"SKCheongBrian"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"SKCheongBrian"},"content":"    int index;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"SKCheongBrian"},"content":"     * Creates a done command with the index of the task in the TaskList to be marked as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"SKCheongBrian"},"content":"     * @param index the index of the task in the TaskList to be marked as done","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"SKCheongBrian"},"content":"    public DoneCommand(int index) {","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"SKCheongBrian"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"SKCheongBrian"},"content":"     * Returns false since a done command is not an exit command.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"SKCheongBrian"},"content":"     * @return a boolean that is false as it is not an exit command.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"SKCheongBrian"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"SKCheongBrian"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"SKCheongBrian"},"content":"        return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"SKCheongBrian"},"content":"     * Executes the command where the task at the index of the ArrayList is marked as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"SKCheongBrian"},"content":"     * @param tasks the TaskList where all the tasks are stored.","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"SKCheongBrian"},"content":"     * @param ui The ui to print out the user interface and to get input from user.","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"SKCheongBrian"},"content":"     * @param storage The storage that interacts with the file to save and load tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"SKCheongBrian"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"SKCheongBrian"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"SKCheongBrian"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"SKCheongBrian"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"SKCheongBrian"},"content":"        tasks.markTask(index);","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"SKCheongBrian"},"content":"        ui.markTask(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"SKCheongBrian"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"SKCheongBrian":45}},{"path":"src/main/java/duke/command/ExceptionCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SKCheongBrian"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"SKCheongBrian"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"SKCheongBrian"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"SKCheongBrian"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"SKCheongBrian"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"SKCheongBrian"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"SKCheongBrian"},"content":" * A command to deal when an exception is thrown.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"SKCheongBrian"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"SKCheongBrian"},"content":"public class ExceptionCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"SKCheongBrian"},"content":"    DukeException e;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"SKCheongBrian"},"content":"     * Creates an exception command to deal with exceptions that are thrown when parsing the users input.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"SKCheongBrian"},"content":"     * @param e the DukeException that is thrown when the users input is parsed.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"SKCheongBrian"},"content":"    public ExceptionCommand(DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"SKCheongBrian"},"content":"        this.e \u003d e;","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"SKCheongBrian"},"content":"     * Returns false since the ExceptionCommand is not an ExitCommand.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"SKCheongBrian"},"content":"     * @return false since the ExceptionCommand is not an ExitCommand.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"SKCheongBrian"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"SKCheongBrian"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"SKCheongBrian"},"content":"        return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"SKCheongBrian"},"content":"     * Executes the command where the ui prints out the error message for the user to see.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"SKCheongBrian"},"content":"     * @param tasks the TaskList where all the tasks are stored.","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"SKCheongBrian"},"content":"     * @param ui The ui to print out the user interface and to get input from user.","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"SKCheongBrian"},"content":"     * @param storage The storage that interacts with the file to save and load tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"SKCheongBrian"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"SKCheongBrian"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"SKCheongBrian"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"SKCheongBrian"},"content":"        ui.printDukeException(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"SKCheongBrian"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"SKCheongBrian":43}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SKCheongBrian"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"SKCheongBrian"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"SKCheongBrian"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"SKCheongBrian"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"SKCheongBrian"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"SKCheongBrian"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"SKCheongBrian"},"content":" * Represents an exit command where the program terminates and saves the tasks in the TaskList to a text file.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"SKCheongBrian"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"SKCheongBrian"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"SKCheongBrian"},"content":"     * Returns true since it is an exit command.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"SKCheongBrian"},"content":"     * @return true since it is an exit command.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"SKCheongBrian"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"SKCheongBrian"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"SKCheongBrian"},"content":"        return true;","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"SKCheongBrian"},"content":"     * Executes the program where the storage saves the tasks in the TaskList to the text file and gets the ui","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"SKCheongBrian"},"content":"     * to print a goodbye message to the user and close the scanner that takes in input.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"SKCheongBrian"},"content":"     * @param tasks the TaskList where all the tasks are stored.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"SKCheongBrian"},"content":"     * @param ui The ui to print out the user interface and to get input from user.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"SKCheongBrian"},"content":"     * @param storage The storage that interacts with the file to save and load tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"SKCheongBrian"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"SKCheongBrian"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"SKCheongBrian"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"SKCheongBrian"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"SKCheongBrian"},"content":"        ui.sayGoodBye();","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"SKCheongBrian"},"content":"        ui.closeScanner();","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"SKCheongBrian"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"SKCheongBrian":37}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SKCheongBrian"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"SKCheongBrian"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"SKCheongBrian"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"SKCheongBrian"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"SKCheongBrian"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"SKCheongBrian"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"SKCheongBrian"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"SKCheongBrian"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"SKCheongBrian"},"content":" * Represents a command given to find tasks that match a given string.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"SKCheongBrian"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"SKCheongBrian"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"SKCheongBrian"},"content":"    String input;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"SKCheongBrian"},"content":"     * Creates the FindCommand given the String input.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"SKCheongBrian"},"content":"     * @param input the given input string.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"SKCheongBrian"},"content":"    public FindCommand(String input) {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"SKCheongBrian"},"content":"        this.input \u003d input;","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"SKCheongBrian"},"content":"     * Returns false since FindCommand is not an ExitCommand.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"SKCheongBrian"},"content":"     * @return flase since FindCommand is not an ExitCommand.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"SKCheongBrian"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"SKCheongBrian"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"SKCheongBrian"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"SKCheongBrian"},"content":"     * Executes the command causing the tasks to find tasks that description matches the given string and gets the ui","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"SKCheongBrian"},"content":"     * to print them.","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"SKCheongBrian"},"content":"     * @param tasks the TaskList of the program.","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"SKCheongBrian"},"content":"     * @param ui the user interface of the program.","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"SKCheongBrian"},"content":"     * @param storage the storage of the program.","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"SKCheongBrian"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"SKCheongBrian"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"SKCheongBrian"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"SKCheongBrian"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d tasks.find(input);","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"SKCheongBrian"},"content":"        if (matchingTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"SKCheongBrian"},"content":"            ui.printLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"SKCheongBrian"},"content":"            ui.printMessage(\"Oh no looks like there are no tasks\\nthat match what you searched for\");","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"SKCheongBrian"},"content":"            ui.printLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"SKCheongBrian"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"SKCheongBrian"},"content":"            ui.printStartList();","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"SKCheongBrian"},"content":"            for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"SKCheongBrian"},"content":"                ui.printTask(matchingTasks.get(i), i + 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"SKCheongBrian"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"SKCheongBrian"},"content":"            ui.printLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"SKCheongBrian"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"SKCheongBrian"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"SKCheongBrian":58}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SKCheongBrian"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"SKCheongBrian"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"SKCheongBrian"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"SKCheongBrian"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"SKCheongBrian"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"SKCheongBrian"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"SKCheongBrian"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"SKCheongBrian"},"content":" * Represents a command that when executed, lists the tasks in the TaskList for the user to see.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"SKCheongBrian"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"SKCheongBrian"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"SKCheongBrian"},"content":"     * Returns false since it is not an exit command.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"SKCheongBrian"},"content":"     * @return false since it is not an exit command.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"SKCheongBrian"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"SKCheongBrian"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"SKCheongBrian"},"content":"        return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"SKCheongBrian"},"content":"     * Executes the command where the ui prints out each task in the TaskList for the user to see.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"SKCheongBrian"},"content":"     * @param tasks the TaskList where all the tasks are stored.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"SKCheongBrian"},"content":"     * @param ui The ui to print out the user interface and to get input from user.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"SKCheongBrian"},"content":"     * @param storage The storage that interacts with the file to save and load tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"SKCheongBrian"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"SKCheongBrian"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"SKCheongBrian"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"SKCheongBrian"},"content":"        ui.printStartList();","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"SKCheongBrian"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"SKCheongBrian"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"SKCheongBrian"},"content":"            ui.printTask(task, i + 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"SKCheongBrian"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"SKCheongBrian"},"content":"        ui.printLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"SKCheongBrian"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"SKCheongBrian":39}},{"path":"src/main/java/duke/command/UnknownCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SKCheongBrian"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"SKCheongBrian"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"SKCheongBrian"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"SKCheongBrian"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"SKCheongBrian"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"SKCheongBrian"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"SKCheongBrian"},"content":" * Represents an unknown command that is given by the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"SKCheongBrian"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"SKCheongBrian"},"content":"public class UnknownCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"SKCheongBrian"},"content":"     * Returns false as the command is not an exit command.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"SKCheongBrian"},"content":"     * @return false as the command is not an exit command.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"SKCheongBrian"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"SKCheongBrian"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"SKCheongBrian"},"content":"        return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"SKCheongBrian"},"content":"     * Execute the command, the ui will print out to the user that the program does not understand","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"SKCheongBrian"},"content":"     * the given input.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"SKCheongBrian"},"content":"     * @param tasks the TaskList where all the tasks are stored.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"SKCheongBrian"},"content":"     * @param ui The ui to print out the user interface and to get input from user.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"SKCheongBrian"},"content":"     * @param storage The storage that interacts with the file to save and load tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"SKCheongBrian"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"SKCheongBrian"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"SKCheongBrian"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"SKCheongBrian"},"content":"        ui.printUnknownCommand();","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"SKCheongBrian"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"SKCheongBrian":35}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SKCheongBrian"},"content":"package duke.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"SKCheongBrian"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"SKCheongBrian"},"content":" * Represents exceptions that are specific to the program.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"SKCheongBrian"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"SKCheongBrian"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"SKCheongBrian"},"content":"     * creates a DukeException with the given error message.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"SKCheongBrian"},"content":"     * @param errorMessage the given error message.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"SKCheongBrian"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"SKCheongBrian"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"SKCheongBrian"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"SKCheongBrian":15}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SKCheongBrian"},"content":"package duke.parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"SKCheongBrian"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"SKCheongBrian"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"SKCheongBrian"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"SKCheongBrian"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"SKCheongBrian"},"content":"import duke.command.ExceptionCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"SKCheongBrian"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"SKCheongBrian"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"SKCheongBrian"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"SKCheongBrian"},"content":"import duke.command.UnknownCommand;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"SKCheongBrian"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"SKCheongBrian"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"SKCheongBrian"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"SKCheongBrian"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"SKCheongBrian"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"SKCheongBrian"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"SKCheongBrian"},"content":" * Represents the parser that parses user input to make sense of the given input and produce","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"SKCheongBrian"},"content":" * the appropriate command.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"SKCheongBrian"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"SKCheongBrian"},"content":"public class Parser {","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"SKCheongBrian"},"content":"     * Takes in a String input and parses it to produce the appropriate command","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"SKCheongBrian"},"content":"     * @param input the user input.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"SKCheongBrian"},"content":"     * @return the appropriate command.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"SKCheongBrian"},"content":"    public static Command parse(String input) {","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"SKCheongBrian"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"SKCheongBrian"},"content":"            String[] words \u003d input.split(\" \", 2);","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"SKCheongBrian"},"content":"            String keyWord \u003d words[0];","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"SKCheongBrian"},"content":"            String rest;","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"SKCheongBrian"},"content":"            String[] splitRest;","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"SKCheongBrian"},"content":"            String description;","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"SKCheongBrian"},"content":"            String[] dateTimeArr;","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"SKCheongBrian"},"content":"            String dateString;","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"SKCheongBrian"},"content":"            String timeString;","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"SKCheongBrian"},"content":"            int index;","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"SKCheongBrian"},"content":"            Task task;","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"SKCheongBrian"},"content":"            switch (keyWord) {","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"SKCheongBrian"},"content":"            case \"bye\":","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"SKCheongBrian"},"content":"                return new ExitCommand();","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"SKCheongBrian"},"content":"            case \"list\":","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"SKCheongBrian"},"content":"                return new ListCommand();","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"SKCheongBrian"},"content":"            case \"done\":","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"SKCheongBrian"},"content":"                if (words.length \u003c 2) {","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"SKCheongBrian"},"content":"                    throw new DukeException(\"☹ OOPS!!!\" +","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"SKCheongBrian"},"content":"                            \" Please specify which task you wish to complete.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"SKCheongBrian"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"SKCheongBrian"},"content":"                rest \u003d words[1];","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"SKCheongBrian"},"content":"                index \u003d Integer.parseInt(rest) - 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"SKCheongBrian"},"content":"                return new DoneCommand(index);","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"SKCheongBrian"},"content":"            case \"delete\":","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"SKCheongBrian"},"content":"                if (words.length \u003c 2) {","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"SKCheongBrian"},"content":"                    throw new DukeException(\"☹ OOPS!!!\" +","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"SKCheongBrian"},"content":"                            \" Please specify which task you wish to complete.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"SKCheongBrian"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"SKCheongBrian"},"content":"                rest \u003d words[1];","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"SKCheongBrian"},"content":"                index \u003d Integer.parseInt(rest) - 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"SKCheongBrian"},"content":"                return new DeleteCommand(index);","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"SKCheongBrian"},"content":"            case \"todo\":","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"SKCheongBrian"},"content":"                if (words.length \u003c 2) {","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"SKCheongBrian"},"content":"                    throw new DukeException(\"☹ OOPS!!! The description of a task cannot be empty.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"SKCheongBrian"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"SKCheongBrian"},"content":"                rest \u003d words[1];","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"SKCheongBrian"},"content":"                task \u003d new Todo(rest);","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"SKCheongBrian"},"content":"                return new AddCommand(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"SKCheongBrian"},"content":"            case \"deadline\":","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"SKCheongBrian"},"content":"                if (words.length \u003c 2) {","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"SKCheongBrian"},"content":"                    throw new DukeException(\"☹ OOPS!!! The description of a task cannot be empty.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"SKCheongBrian"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"SKCheongBrian"},"content":"                rest \u003d words[1];","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"SKCheongBrian"},"content":"                splitRest \u003d rest.split(\" /by \");","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"SKCheongBrian"},"content":"                if (splitRest.length \u003c 2) {","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"SKCheongBrian"},"content":"                    throw new DukeException(\"☹ OOPS!!! Please ensure that the \u0027/by\u0027 keyword is used and \"","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"SKCheongBrian"},"content":"                            + \"that a description and due date is given.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"SKCheongBrian"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"SKCheongBrian"},"content":"                description \u003d splitRest[0];","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"SKCheongBrian"},"content":"                dateTimeArr \u003d splitRest[1].split(\" \");","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"SKCheongBrian"},"content":"                dateString \u003d dateTimeArr[0];","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"SKCheongBrian"},"content":"                timeString \u003d dateTimeArr[1];","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"SKCheongBrian"},"content":"                task \u003d new Deadline(description, dateString, timeString);","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"SKCheongBrian"},"content":"                return new AddCommand(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"SKCheongBrian"},"content":"            case \"event\":","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"SKCheongBrian"},"content":"                if (words.length \u003c 2) {","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"SKCheongBrian"},"content":"                    throw new DukeException(\"☹ OOPS!!! The description of a task cannot be empty.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"SKCheongBrian"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"SKCheongBrian"},"content":"                rest \u003d words[1];","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"SKCheongBrian"},"content":"                splitRest \u003d rest.split(\" /at \");","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"SKCheongBrian"},"content":"                if (splitRest.length \u003c 2) {","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"SKCheongBrian"},"content":"                    throw new DukeException(\"☹ OOPS!!! Please ensure that the \u0027/at\u0027 keyword is used and \"","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"SKCheongBrian"},"content":"                            + \"that a description a timing is given.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"SKCheongBrian"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"SKCheongBrian"},"content":"                description \u003d splitRest[0];","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"SKCheongBrian"},"content":"                dateTimeArr \u003d splitRest[1].split(\" \");","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"SKCheongBrian"},"content":"                dateString \u003d dateTimeArr[0];","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"SKCheongBrian"},"content":"                timeString \u003d dateTimeArr[1];","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"SKCheongBrian"},"content":"                task \u003d new Event(description, dateString, timeString);","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"SKCheongBrian"},"content":"                return new AddCommand(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"SKCheongBrian"},"content":"            case \"find\":","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"SKCheongBrian"},"content":"                if (words.length \u003c 2) {","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"SKCheongBrian"},"content":"                    throw new DukeException(\"☹ OOPS!!! Please provide some words to find in the list of tasks.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"SKCheongBrian"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"SKCheongBrian"},"content":"                rest \u003d words[1];","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"SKCheongBrian"},"content":"                return new FindCommand(rest);","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"SKCheongBrian"},"content":"            default:","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"SKCheongBrian"},"content":"                return new UnknownCommand();","lastModifiedDate":"2021-08-23"},{"lineNumber":109,"author":{"gitId":"SKCheongBrian"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":110,"author":{"gitId":"SKCheongBrian"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":111,"author":{"gitId":"SKCheongBrian"},"content":"            return new ExceptionCommand(e);","lastModifiedDate":"2021-08-23"},{"lineNumber":112,"author":{"gitId":"SKCheongBrian"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":113,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":114,"author":{"gitId":"SKCheongBrian"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"SKCheongBrian":114}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SKCheongBrian"},"content":"package duke.storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"SKCheongBrian"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"SKCheongBrian"},"content":"import java.io.File;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"SKCheongBrian"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"SKCheongBrian"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"SKCheongBrian"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"SKCheongBrian"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"SKCheongBrian"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"SKCheongBrian"},"content":" * Represents the storage that interacts with the text file to retrieve and save tasks upon starting","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"SKCheongBrian"},"content":" * and exiting the program.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"SKCheongBrian"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"SKCheongBrian"},"content":"public class Storage {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"SKCheongBrian"},"content":"    private File savedTasksFile;","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"SKCheongBrian"},"content":"     * Creates a new Storage object that has its file path set to that of the file used","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"SKCheongBrian"},"content":"     * to save the tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"SKCheongBrian"},"content":"     * @param filePath Path of the text file used to store the saved tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"SKCheongBrian"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"SKCheongBrian"},"content":"        this.savedTasksFile \u003d new File(filePath);","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"SKCheongBrian"},"content":"        File dir \u003d new File(savedTasksFile.getParent());","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"SKCheongBrian"},"content":"        if (!dir.exists()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"SKCheongBrian"},"content":"            dir.mkdirs();","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"SKCheongBrian"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"SKCheongBrian"},"content":"     * Returns an ArrayList of Strings where each element is a line from the text file.","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"SKCheongBrian"},"content":"     * @return ArrayList of Strings","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"SKCheongBrian"},"content":"    public ArrayList\u003cString\u003e load() {","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"SKCheongBrian"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"SKCheongBrian"},"content":"            if (savedTasksFile.createNewFile()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"SKCheongBrian"},"content":"                return new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"SKCheongBrian"},"content":"            } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"SKCheongBrian"},"content":"                Scanner reader \u003d new Scanner(savedTasksFile);","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"SKCheongBrian"},"content":"                ArrayList\u003cString\u003e loadingStrings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"SKCheongBrian"},"content":"                while (reader.hasNextLine()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"SKCheongBrian"},"content":"                    String next \u003d reader.nextLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"SKCheongBrian"},"content":"                    loadingStrings.add(next);","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"SKCheongBrian"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"SKCheongBrian"},"content":"                return loadingStrings;","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"SKCheongBrian"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"SKCheongBrian"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"SKCheongBrian"},"content":"            System.out.println(\"AN ERROR HAS OCCURRED WHILE LOADING\");","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"SKCheongBrian"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"SKCheongBrian"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"SKCheongBrian"},"content":"        return new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"SKCheongBrian"},"content":"     * Formats and writes each task in the ArrayList of tasks into the task.txt file.","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"SKCheongBrian"},"content":"     * @param tasks The ArrayList of tasks to be saved into task.txt.","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"SKCheongBrian"},"content":"    public void save(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"SKCheongBrian"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"SKCheongBrian"},"content":"            savedTasksFile.createNewFile();","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"SKCheongBrian"},"content":"            FileWriter writer \u003d new FileWriter(savedTasksFile, false);","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"SKCheongBrian"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"SKCheongBrian"},"content":"                StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"SKCheongBrian"},"content":"                Task task \u003d tasks.get(i);","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"SKCheongBrian"},"content":"                builder.append(task.getType());","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"SKCheongBrian"},"content":"                builder.append(\"|\");","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"SKCheongBrian"},"content":"                if (task.getStatusIcon() \u003d\u003d \"X\") {","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"SKCheongBrian"},"content":"                    builder.append(\"1|\");","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"SKCheongBrian"},"content":"                } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"SKCheongBrian"},"content":"                    builder.append(\"0|\");","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"SKCheongBrian"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"SKCheongBrian"},"content":"                builder.append(task.getDescription());","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"SKCheongBrian"},"content":"                builder.append(\"|\");","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"SKCheongBrian"},"content":"                builder.append(task.getDateTimeString());","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"SKCheongBrian"},"content":"                builder.append(\"\\n\");","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"SKCheongBrian"},"content":"                writer.write(builder.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"SKCheongBrian"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"SKCheongBrian"},"content":"            writer.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"SKCheongBrian"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"SKCheongBrian"},"content":"            System.out.println(\"AN ERROR HAS OCCURRED WHILE SAVING\");","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"SKCheongBrian"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"SKCheongBrian"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"SKCheongBrian"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"SKCheongBrian":87}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SKCheongBrian"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"SKCheongBrian"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"SKCheongBrian"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"SKCheongBrian"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"SKCheongBrian"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"SKCheongBrian"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"SKCheongBrian"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"SKCheongBrian"},"content":" * Represents a deadline task.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"SKCheongBrian"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"SKCheongBrian"},"content":"public class Deadline extends Task{","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"SKCheongBrian"},"content":"    protected LocalDate date;","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"SKCheongBrian"},"content":"    protected LocalTime time;","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"SKCheongBrian"},"content":"     * Creates a deadline object that has a description, date and time.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"SKCheongBrian"},"content":"     * @param description given description.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"SKCheongBrian"},"content":"     * @param dateString given date in a formatted string.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"SKCheongBrian"},"content":"     * @param timeString given time in a formatted string.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"SKCheongBrian"},"content":"     * @throws DukeException if the dateString or timeString is of the wrong format.","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"SKCheongBrian"},"content":"    public Deadline(String description, String dateString, String timeString) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"SKCheongBrian"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"SKCheongBrian"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"SKCheongBrian"},"content":"            this.date \u003d LocalDate.parse(dateString, DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"SKCheongBrian"},"content":"            this.time \u003d LocalTime.parse(timeString, DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"SKCheongBrian"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"SKCheongBrian"},"content":"            throw new DukeException(\"Oops! Make sure that your date and time is valid\" +","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"SKCheongBrian"},"content":"                    \" and is formatted as \u0027dd/MM/yyyy HHmm\u0027.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"SKCheongBrian"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":35,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":36,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"SKCheongBrian"},"content":"     * Returns the type of task that will be written into the file upon saving tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"SKCheongBrian"},"content":"     * @return String of the deadline type.","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"SKCheongBrian"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"SKCheongBrian"},"content":"    public String getType() {","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"SKCheongBrian"},"content":"        return \"D\";","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"SKCheongBrian"},"content":"     * Returns the description of the deadline.","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"SKCheongBrian"},"content":"     * @return the description of the deadline in a String.","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"SKCheongBrian"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"SKCheongBrian"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"SKCheongBrian"},"content":"        return description;","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"SKCheongBrian"},"content":"     * Returns the date and time in a string.","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"SKCheongBrian"},"content":"     * @return the date and time in a string.","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"SKCheongBrian"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"SKCheongBrian"},"content":"    public String getDateTimeString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"SKCheongBrian"},"content":"        return this.date.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"))","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"SKCheongBrian"},"content":"                + \" \" + this.time.format(DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"SKCheongBrian"},"content":"     * Returns the string form of the deadline.","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"SKCheongBrian"},"content":"     * @return the string form of the deadline.","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"SKCheongBrian"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":69,"author":{"gitId":"SKCheongBrian"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":70,"author":{"gitId":"SKCheongBrian"},"content":"        return \"[D]\" + super.toString() + \" (by: \" +","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"SKCheongBrian"},"content":"                date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" \" +","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"SKCheongBrian"},"content":"                time.format(DateTimeFormatter.ofPattern(\"HHmm\"))+ \")\";","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":74,"author":{"gitId":"SKCheongBrian"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"SKCheongBrian":74}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SKCheongBrian"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"SKCheongBrian"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"SKCheongBrian"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"SKCheongBrian"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"SKCheongBrian"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"SKCheongBrian"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"SKCheongBrian"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"SKCheongBrian"},"content":" * Represents an event task.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"SKCheongBrian"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"SKCheongBrian"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"SKCheongBrian"},"content":"    protected LocalDate date;","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"SKCheongBrian"},"content":"    protected LocalTime time;","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"SKCheongBrian"},"content":"     * Creats an event with a description, time and date.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"SKCheongBrian"},"content":"     * @param description given description.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"SKCheongBrian"},"content":"     * @param dateString given date.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"SKCheongBrian"},"content":"     * @param timeString given time.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"SKCheongBrian"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"SKCheongBrian"},"content":"    public Event(String description, String dateString, String timeString) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"SKCheongBrian"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"SKCheongBrian"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"SKCheongBrian"},"content":"            this.date \u003d LocalDate.parse(dateString, DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"SKCheongBrian"},"content":"            this.time \u003d LocalTime.parse(timeString, DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"SKCheongBrian"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"SKCheongBrian"},"content":"            throw new DukeException(\"Oops! Make sure that your date and time is valid\" +","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"SKCheongBrian"},"content":"                    \" and is formatted as \u0027dd/MM/yyyy HHmm\u0027.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"SKCheongBrian"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":34,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":35,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"SKCheongBrian"},"content":"     * Returns the type of event to be written to the text file during saving.","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"SKCheongBrian"},"content":"     * @return the type of event.","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"SKCheongBrian"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"SKCheongBrian"},"content":"    public String getType() {","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"SKCheongBrian"},"content":"        return \"E\";","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"SKCheongBrian"},"content":"     * Returns the description of the event.","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"SKCheongBrian"},"content":"     * @return the description of the event.","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"SKCheongBrian"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"SKCheongBrian"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"SKCheongBrian"},"content":"        return description;","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"SKCheongBrian"},"content":"     * Returns the string representation of the date and time of the event.","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"SKCheongBrian"},"content":"     * @return the string representation of the date and time of the event.","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"SKCheongBrian"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"SKCheongBrian"},"content":"    public String getDateTimeString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"SKCheongBrian"},"content":"        return this.date.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"))","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"SKCheongBrian"},"content":"                + \" \" + this.time.format(DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"SKCheongBrian"},"content":"     * Returns the string representation of the event.","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"SKCheongBrian"},"content":"     * @return the string representation of the event.","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"SKCheongBrian"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":68,"author":{"gitId":"SKCheongBrian"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":69,"author":{"gitId":"SKCheongBrian"},"content":"        return \"[E]\" + super.toString() + \" (at: \" +","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"SKCheongBrian"},"content":"                date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" \" +","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"SKCheongBrian"},"content":"                time.format(DateTimeFormatter.ofPattern(\"HHmm\"))+ \")\";","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":73,"author":{"gitId":"SKCheongBrian"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"SKCheongBrian":73}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SKCheongBrian"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"SKCheongBrian"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"SKCheongBrian"},"content":" * Represents an abstract task.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"SKCheongBrian"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"SKCheongBrian"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"SKCheongBrian"},"content":"    protected String description;","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"SKCheongBrian"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"SKCheongBrian"},"content":"     * Constructor that sets the description of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"SKCheongBrian"},"content":"     * @param description the description of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"SKCheongBrian"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"SKCheongBrian"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"SKCheongBrian"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"SKCheongBrian"},"content":"     * returns \u0027X\u0027 if the task is marked as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"SKCheongBrian"},"content":"     * @return \u0027X\u0027 if the task is done, \u0027 \u0027 otherwise.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"SKCheongBrian"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"SKCheongBrian"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"SKCheongBrian"},"content":"     * Marks the task as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"SKCheongBrian"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"SKCheongBrian"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":34,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":35,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"SKCheongBrian"},"content":"     * Returns the type of task to be written into the text file during saving.","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"SKCheongBrian"},"content":"     * @return String that represents the type of task.","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"SKCheongBrian"},"content":"    public abstract String getType();","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"SKCheongBrian"},"content":"     * Returns the description of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"SKCheongBrian"},"content":"     * @return the description of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"SKCheongBrian"},"content":"    public abstract String getDescription();","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"SKCheongBrian"},"content":"     * Returns the date and time of the task if applicable.","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"SKCheongBrian"},"content":"     * @return the date and time of the task if applicable.","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"SKCheongBrian"},"content":"    public abstract String getDateTimeString();","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"SKCheongBrian"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"SKCheongBrian"},"content":"     * @return the string representation of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"SKCheongBrian"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":58,"author":{"gitId":"SKCheongBrian"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":59,"author":{"gitId":"SKCheongBrian"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2021-08-14"},{"lineNumber":60,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":61,"author":{"gitId":"SKCheongBrian"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"SKCheongBrian":61}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SKCheongBrian"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"SKCheongBrian"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"SKCheongBrian"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"SKCheongBrian"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"SKCheongBrian"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"SKCheongBrian"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"SKCheongBrian"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"SKCheongBrian"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"SKCheongBrian"},"content":" * Represents the ArrayList where the tasks of the program is stored.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"SKCheongBrian"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"SKCheongBrian"},"content":"public class TaskList {","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"SKCheongBrian"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"SKCheongBrian"},"content":"    private final int todoLength \u003d 3;","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"SKCheongBrian"},"content":"    private final int deadlineLength \u003d 4;","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"SKCheongBrian"},"content":"    private final int eventLength \u003d 4;","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"SKCheongBrian"},"content":"     * Reads in from an ArrayList of strings that is formatted to represent a task, and creates and adds","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"SKCheongBrian"},"content":"     * the appropriate task into the ArrayList of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"SKCheongBrian"},"content":"     * @param loadingStrings the given ArrayList of formatted string that represents a task.","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"SKCheongBrian"},"content":"     * @throws DukeException if the String is of the wrong format.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"SKCheongBrian"},"content":"    public TaskList(ArrayList\u003cString\u003e loadingStrings) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"SKCheongBrian"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"SKCheongBrian"},"content":"        for (int i \u003d 0; i \u003c loadingStrings.size(); i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"SKCheongBrian"},"content":"            String taskString \u003d loadingStrings.get(i);","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"SKCheongBrian"},"content":"            String[] taskStringArr \u003d taskString.split(\"\\\\|\");","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"SKCheongBrian"},"content":"            String type \u003d taskStringArr[0];","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"SKCheongBrian"},"content":"            Task task;","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"SKCheongBrian"},"content":"            switch (type) {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"SKCheongBrian"},"content":"                case \"T\":","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"SKCheongBrian"},"content":"                    if (taskStringArr.length !\u003d todoLength){","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"SKCheongBrian"},"content":"                        throw new DukeException(\"ERROR READING FROM STORAGE\");","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"SKCheongBrian"},"content":"                    }","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"SKCheongBrian"},"content":"                    task \u003d new Todo(taskStringArr[2]);","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"SKCheongBrian"},"content":"                    break;","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"SKCheongBrian"},"content":"                case \"D\":","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"SKCheongBrian"},"content":"                    if (taskStringArr.length !\u003d deadlineLength){","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"SKCheongBrian"},"content":"                        throw new DukeException(\"ERROR READING FROM STORAGE\");","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"SKCheongBrian"},"content":"                    }","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"SKCheongBrian"},"content":"                    String[] deadlineDateTimeArr \u003d taskStringArr[3].split(\" \");","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"SKCheongBrian"},"content":"                    String deadlineDateString \u003d deadlineDateTimeArr[0];","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"SKCheongBrian"},"content":"                    String deadlineTimeString \u003d deadlineDateTimeArr[1];","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"SKCheongBrian"},"content":"                    task \u003d new Deadline(taskStringArr[2], deadlineDateString, deadlineTimeString);","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"SKCheongBrian"},"content":"                    break;","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"SKCheongBrian"},"content":"                case \"E\":","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"SKCheongBrian"},"content":"                    if (taskStringArr.length !\u003d eventLength){","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"SKCheongBrian"},"content":"                        throw new DukeException(\"ERROR READING FROM STORAGE\");","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"SKCheongBrian"},"content":"                    }","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"SKCheongBrian"},"content":"                    String[] eventDateTimeArr \u003d taskStringArr[3].split(\" \");","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"SKCheongBrian"},"content":"                    String eventDateString \u003d eventDateTimeArr[0];","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"SKCheongBrian"},"content":"                    String eventTimeString \u003d eventDateTimeArr[1];","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"SKCheongBrian"},"content":"                    task \u003d new Event(taskStringArr[2], eventDateString, eventTimeString);","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"SKCheongBrian"},"content":"                    break;","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"SKCheongBrian"},"content":"                default:","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"SKCheongBrian"},"content":"                    throw new IllegalStateException(\"Unexpected value: \" + type);","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"SKCheongBrian"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"SKCheongBrian"},"content":"            if (taskStringArr[1].equals(\"1\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"SKCheongBrian"},"content":"                task.markAsDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"SKCheongBrian"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"SKCheongBrian"},"content":"            tasks.add(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"SKCheongBrian"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"SKCheongBrian"},"content":"     * Creates an empty ArrayList of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"SKCheongBrian"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"SKCheongBrian"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"SKCheongBrian"},"content":"     * Returns the task at the given index of the ArrayList of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"SKCheongBrian"},"content":"     * @param index of the task that is to be returned.","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"SKCheongBrian"},"content":"     * @return the task at the given index of the ArrayList of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"SKCheongBrian"},"content":"    public Task get(int index) {","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"SKCheongBrian"},"content":"        return tasks.get(index);","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"SKCheongBrian"},"content":"     * Returns the ArrayList of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"SKCheongBrian"},"content":"     * @return the ArrayList of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"SKCheongBrian"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"SKCheongBrian"},"content":"        return this.tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"SKCheongBrian"},"content":"     * Removes the Task at the given Index from the ArrayList of Tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"SKCheongBrian"},"content":"     * @param delIndex the given index that the task should be removed.","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"SKCheongBrian"},"content":"    public void deleteTask(int delIndex) {","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"SKCheongBrian"},"content":"        Task task \u003d tasks.get(delIndex);","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"SKCheongBrian"},"content":"        tasks.remove(delIndex);","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"SKCheongBrian"},"content":"     * Marks the task at the given index from the ArrayList of tasks as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"SKCheongBrian"},"content":"     * @param index the given index of the task that should be marked as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"SKCheongBrian"},"content":"    public void markTask(int index) {","lastModifiedDate":"2021-08-23"},{"lineNumber":107,"author":{"gitId":"SKCheongBrian"},"content":"        Task task \u003d tasks.get(index);","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"SKCheongBrian"},"content":"        task.markAsDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":109,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":110,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":111,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"SKCheongBrian"},"content":"     * Adds the task to the ArrayList of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"SKCheongBrian"},"content":"     * @param task the task to be added.","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"SKCheongBrian"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"SKCheongBrian"},"content":"        this.tasks.add(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":117,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":118,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":119,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"SKCheongBrian"},"content":"     * Returns the size of the ArrayList of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":121,"author":{"gitId":"SKCheongBrian"},"content":"     * @return the size of the ArrayList of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"SKCheongBrian"},"content":"    public int size() {","lastModifiedDate":"2021-08-23"},{"lineNumber":124,"author":{"gitId":"SKCheongBrian"},"content":"        return tasks.size();","lastModifiedDate":"2021-08-23"},{"lineNumber":125,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":126,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":127,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":128,"author":{"gitId":"SKCheongBrian"},"content":"     * Finds tasks from the TaskList whose description matches the given input","lastModifiedDate":"2021-08-28"},{"lineNumber":129,"author":{"gitId":"SKCheongBrian"},"content":"     * @param input the given input.","lastModifiedDate":"2021-08-28"},{"lineNumber":130,"author":{"gitId":"SKCheongBrian"},"content":"     * @return An ArrayList of tasks that match the given input.","lastModifiedDate":"2021-08-28"},{"lineNumber":131,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":132,"author":{"gitId":"SKCheongBrian"},"content":"    public ArrayList\u003cTask\u003e find(String input) {","lastModifiedDate":"2021-08-28"},{"lineNumber":133,"author":{"gitId":"SKCheongBrian"},"content":"        ArrayList\u003cTask\u003e res \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-28"},{"lineNumber":134,"author":{"gitId":"SKCheongBrian"},"content":"        String lowerInput \u003d input.toLowerCase();","lastModifiedDate":"2021-08-28"},{"lineNumber":135,"author":{"gitId":"SKCheongBrian"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-28"},{"lineNumber":136,"author":{"gitId":"SKCheongBrian"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2021-08-28"},{"lineNumber":137,"author":{"gitId":"SKCheongBrian"},"content":"            String lowerDescription \u003d task.getDescription().toLowerCase();","lastModifiedDate":"2021-08-28"},{"lineNumber":138,"author":{"gitId":"SKCheongBrian"},"content":"            if (lowerDescription.contains(lowerInput)) {","lastModifiedDate":"2021-08-28"},{"lineNumber":139,"author":{"gitId":"SKCheongBrian"},"content":"                res.add(task);","lastModifiedDate":"2021-08-28"},{"lineNumber":140,"author":{"gitId":"SKCheongBrian"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":141,"author":{"gitId":"SKCheongBrian"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":142,"author":{"gitId":"SKCheongBrian"},"content":"        return res;","lastModifiedDate":"2021-08-28"},{"lineNumber":143,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":144,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":145,"author":{"gitId":"SKCheongBrian"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"SKCheongBrian":145}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SKCheongBrian"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"SKCheongBrian"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"SKCheongBrian"},"content":" * Represents a task that has to be completed.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"SKCheongBrian"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"SKCheongBrian"},"content":"public class Todo extends Task{","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"SKCheongBrian"},"content":"     * Creates the todo with the given description","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"SKCheongBrian"},"content":"     * @param description","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"SKCheongBrian"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"SKCheongBrian"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"SKCheongBrian"},"content":"     * Returns the type of the task to be written onto the text file during saving.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"SKCheongBrian"},"content":"     * @return the type of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"SKCheongBrian"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"SKCheongBrian"},"content":"    public String getType() {","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"SKCheongBrian"},"content":"        return \"T\";","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"SKCheongBrian"},"content":"     * Returns the description of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"SKCheongBrian"},"content":"     * @return the description of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"SKCheongBrian"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"SKCheongBrian"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"SKCheongBrian"},"content":"        return description;","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"SKCheongBrian"},"content":"     * Returns the string representation of the date and time.","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"SKCheongBrian"},"content":"     * @return the string representation of the date and time.","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"SKCheongBrian"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"SKCheongBrian"},"content":"    public String getDateTimeString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"SKCheongBrian"},"content":"        return \"\";","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"SKCheongBrian"},"content":"     * The String representation of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"SKCheongBrian"},"content":"     * @return the string representation of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"SKCheongBrian"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":48,"author":{"gitId":"SKCheongBrian"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":49,"author":{"gitId":"SKCheongBrian"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-14"},{"lineNumber":50,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":51,"author":{"gitId":"SKCheongBrian"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"SKCheongBrian":51}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SKCheongBrian"},"content":"package duke.ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"SKCheongBrian"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"SKCheongBrian"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"SKCheongBrian"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"SKCheongBrian"},"content":" * Represents the user interface that the user uses to interact with the program.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"SKCheongBrian"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"SKCheongBrian"},"content":"public class Ui {","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"SKCheongBrian"},"content":"    private Scanner reader;","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"SKCheongBrian"},"content":"    String logo \u003d \"┏━━┓╋╋╋┏━━┓╋╋╋┏┓\\n\" +","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"SKCheongBrian"},"content":"            \"┃┏┓┃╋╋╋┃┏┓┃╋╋┏┛┗┓\\n\" +","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"SKCheongBrian"},"content":"            \"┃┗┛┗┳━┳┫┗┛┗┳━┻┓┏┛\\n\" +","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"SKCheongBrian"},"content":"            \"┃┏━┓┃┏╋┫┏━┓┃┏┓┃┃\\n\" +","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"SKCheongBrian"},"content":"            \"┃┗━┛┃┃┃┃┗━┛┃┗┛┃┗┓\\n\" +","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"SKCheongBrian"},"content":"            \"┗━━━┻┛┗┻━━━┻━━┻━┛\";","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"SKCheongBrian"},"content":"     * Creates a new instance of Ui with a scanner to take in user input.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"SKCheongBrian"},"content":"    public Ui() {","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"SKCheongBrian"},"content":"        this.reader \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"SKCheongBrian"},"content":"     * Greets the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"SKCheongBrian"},"content":"    public void sayHello() {","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"SKCheongBrian"},"content":"        System.out.println(\"Greetings from\\n\" + logo);","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"SKCheongBrian"},"content":"        this.printLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"SKCheongBrian"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"SKCheongBrian"},"content":"        this.printLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"SKCheongBrian"},"content":"     * Takes in the user input and returns it as a string.","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"SKCheongBrian"},"content":"     * @return the user input.","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"SKCheongBrian"},"content":"    public String readCommand() {","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"SKCheongBrian"},"content":"        return reader.nextLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"SKCheongBrian"},"content":"     * prints out a separator line","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"SKCheongBrian"},"content":"    public void printLine() {","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"SKCheongBrian"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"SKCheongBrian"},"content":"     * Prints out that the given tasks has been marked.","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"SKCheongBrian"},"content":"     * @param task the given task.","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"SKCheongBrian"},"content":"    public void markTask(Task task) {","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"SKCheongBrian"},"content":"        this.printLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"SKCheongBrian"},"content":"        System.out.println(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"SKCheongBrian"},"content":"        this.printLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"SKCheongBrian"},"content":"     * Prints out the given task at with the index to show the tasks position in the list.","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"SKCheongBrian"},"content":"     * @param task given task","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"SKCheongBrian"},"content":"     * @param index index to show the position in the list.","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"SKCheongBrian"},"content":"    public void printTask(Task task, int index) {","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"SKCheongBrian"},"content":"        System.out.println(index + \". \" + task);","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"SKCheongBrian"},"content":"     * Prints the start of the list feature.","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"SKCheongBrian"},"content":"    public void printStartList() {","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"SKCheongBrian"},"content":"        this.printLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"SKCheongBrian"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"SKCheongBrian"},"content":"     * Prints that the given command is not understood by the program.","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"SKCheongBrian"},"content":"    public void printUnknownCommand() {","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"SKCheongBrian"},"content":"        this.printLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"SKCheongBrian"},"content":"        System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"SKCheongBrian"},"content":"        this.printLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"SKCheongBrian"},"content":"     * Says good bye to the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"SKCheongBrian"},"content":"    public void sayGoodBye() {","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"SKCheongBrian"},"content":"        this.printLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"SKCheongBrian"},"content":"        System.out.println(\"Bye. Hope to see you soon!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"SKCheongBrian"},"content":"        this.printLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"SKCheongBrian"},"content":"     * Prints out the given message.","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"SKCheongBrian"},"content":"     * @param message the given message.","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"SKCheongBrian"},"content":"    public void printDukeException(String message) {","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"SKCheongBrian"},"content":"        this.printLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"SKCheongBrian"},"content":"        System.out.println(message);","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"SKCheongBrian"},"content":"        this.printLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":107,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"SKCheongBrian"},"content":"     * Prints that the task has been successfully added to the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"SKCheongBrian"},"content":"     * @param task the given task to be printed.","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"SKCheongBrian"},"content":"    public void printAddedTask(Task task) {","lastModifiedDate":"2021-08-23"},{"lineNumber":113,"author":{"gitId":"SKCheongBrian"},"content":"        this.printLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":114,"author":{"gitId":"SKCheongBrian"},"content":"        System.out.println(\"Done! added the following task:\");","lastModifiedDate":"2021-08-23"},{"lineNumber":115,"author":{"gitId":"SKCheongBrian"},"content":"        System.out.println(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"SKCheongBrian"},"content":"        this.printLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":117,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":118,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":119,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"SKCheongBrian"},"content":"     * Prints that the given task has been successfully deleted to the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":121,"author":{"gitId":"SKCheongBrian"},"content":"     * @param task the given task to be deleted.","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"SKCheongBrian"},"content":"    public void printDeletedTask(Task task) {","lastModifiedDate":"2021-08-23"},{"lineNumber":124,"author":{"gitId":"SKCheongBrian"},"content":"        this.printLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":125,"author":{"gitId":"SKCheongBrian"},"content":"        System.out.println(\"Done! deleted the following task:\");","lastModifiedDate":"2021-08-23"},{"lineNumber":126,"author":{"gitId":"SKCheongBrian"},"content":"        System.out.println(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":127,"author":{"gitId":"SKCheongBrian"},"content":"        this.printLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":128,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":129,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":130,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":131,"author":{"gitId":"SKCheongBrian"},"content":"     * Closes the scanner.","lastModifiedDate":"2021-08-25"},{"lineNumber":132,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":133,"author":{"gitId":"SKCheongBrian"},"content":"    public void closeScanner() {","lastModifiedDate":"2021-08-23"},{"lineNumber":134,"author":{"gitId":"SKCheongBrian"},"content":"        this.reader.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":135,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":136,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":137,"author":{"gitId":"SKCheongBrian"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":138,"author":{"gitId":"SKCheongBrian"},"content":"     * Show that there was an error reading from the text file.","lastModifiedDate":"2021-08-25"},{"lineNumber":139,"author":{"gitId":"SKCheongBrian"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":140,"author":{"gitId":"SKCheongBrian"},"content":"    public void showLoadingError() {","lastModifiedDate":"2021-08-23"},{"lineNumber":141,"author":{"gitId":"SKCheongBrian"},"content":"        System.out.println(\"ERROR LOADING FILE\");","lastModifiedDate":"2021-08-23"},{"lineNumber":142,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":143,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":144,"author":{"gitId":"SKCheongBrian"},"content":"    public void printMessage(String s) {","lastModifiedDate":"2021-08-25"},{"lineNumber":145,"author":{"gitId":"SKCheongBrian"},"content":"        System.out.println(s);","lastModifiedDate":"2021-08-25"},{"lineNumber":146,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":147,"author":{"gitId":"SKCheongBrian"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"SKCheongBrian":147}},{"path":"src/test/TestData/StorageTest.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"SKCheongBrian"},"content":"T|0|hello|","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"SKCheongBrian"},"content":"E|0|spike pep talk|23/08/2021 2200","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"SKCheongBrian":2}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SKCheongBrian"},"content":"package duke.parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"SKCheongBrian"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"SKCheongBrian"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"SKCheongBrian"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"SKCheongBrian"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"SKCheongBrian"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"SKCheongBrian"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"SKCheongBrian"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"SKCheongBrian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"SKCheongBrian"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"SKCheongBrian"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"SKCheongBrian"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"SKCheongBrian"},"content":"    public void testDeadline() throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"SKCheongBrian"},"content":"        Command testCommand \u003d Parser.parse(\"deadline feed spike /by 01/01/2021 1800\");","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"SKCheongBrian"},"content":"        Command actualCommand \u003d new AddCommand(new Deadline(\"feed spike\",","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"SKCheongBrian"},"content":"                                                             \"01/01/2021\", \"1800\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"SKCheongBrian"},"content":"        assertEquals(testCommand, actualCommand);","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"SKCheongBrian"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"SKCheongBrian"},"content":"    public void testEvent() throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"SKCheongBrian"},"content":"        Command testCommand \u003d Parser.parse(\"event pet spike /at 01/01/2021 1800\");","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"SKCheongBrian"},"content":"        Command actualCommand \u003d new AddCommand(new Event(\"pet spike\",","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"SKCheongBrian"},"content":"                                                        \"01/01/2021\", \"1800\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"SKCheongBrian"},"content":"        assertEquals(testCommand, actualCommand);","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"SKCheongBrian"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"SKCheongBrian"},"content":"    public void testTodo() throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"SKCheongBrian"},"content":"        Command testCommand \u003d Parser.parse(\"todo do homework\");","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"SKCheongBrian"},"content":"        Command actualCommand \u003d new AddCommand(new Todo(\"do homework\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"SKCheongBrian"},"content":"        assertEquals(testCommand, actualCommand);","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"SKCheongBrian"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"SKCheongBrian":40}},{"path":"src/test/java/duke/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SKCheongBrian"},"content":"package duke.storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"SKCheongBrian"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"SKCheongBrian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"SKCheongBrian"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"SKCheongBrian"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"SKCheongBrian"},"content":"public class StorageTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"SKCheongBrian"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"SKCheongBrian"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"SKCheongBrian"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"SKCheongBrian"},"content":"    public void loadTest() {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"SKCheongBrian"},"content":"        this.storage \u003d new Storage(\"src/test/TestData/StorageTest.txt\");","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"SKCheongBrian"},"content":"        ArrayList\u003cString\u003e testArray \u003d storage.load();","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"SKCheongBrian"},"content":"        ArrayList\u003cString\u003e actualArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"SKCheongBrian"},"content":"        actualArray.add(\"T|0|hello|\");","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"SKCheongBrian"},"content":"        actualArray.add(\"E|0|spike pep talk|23/08/2021 2200\");","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"SKCheongBrian"},"content":"        assertEquals(actualArray, testArray);","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"SKCheongBrian"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"SKCheongBrian"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"SKCheongBrian":22}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"SKCheongBrian"},"content":"hello","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"SKCheongBrian"},"content":"todo test this","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"SKCheongBrian"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"SKCheongBrian"},"content":"deadline really test this /by now","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"SKCheongBrian"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"SKCheongBrian"},"content":"event hi /at easy?","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"SKCheongBrian"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"SKCheongBrian"},"content":"done 3","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"SKCheongBrian"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"SKCheongBrian"},"content":"done 2","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"SKCheongBrian"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"SKCheongBrian"},"content":"done 1","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"SKCheongBrian"},"content":"bye","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"SKCheongBrian":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"SKCheongBrian"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"SKCheongBrian":1,"-":20}}]
