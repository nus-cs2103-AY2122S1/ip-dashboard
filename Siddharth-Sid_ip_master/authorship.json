[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":16,"author":{"gitId":"Siddharth-Sid"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-10"},{"lineNumber":17,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":18,"author":{"gitId":"Siddharth-Sid"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-10"},{"lineNumber":19,"author":{"gitId":"Siddharth-Sid"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-10"},{"lineNumber":20,"author":{"gitId":"Siddharth-Sid"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-10"},{"lineNumber":21,"author":{"gitId":"Siddharth-Sid"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-10"},{"lineNumber":22,"author":{"gitId":"Siddharth-Sid"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-10"},{"lineNumber":23,"author":{"gitId":"Siddharth-Sid"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-10"},{"lineNumber":24,"author":{"gitId":"Siddharth-Sid"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-10"},{"lineNumber":25,"author":{"gitId":"Siddharth-Sid"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-10"},{"lineNumber":26,"author":{"gitId":"Siddharth-Sid"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-10"},{"lineNumber":27,"author":{"gitId":"Siddharth-Sid"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-10"},{"lineNumber":28,"author":{"gitId":"Siddharth-Sid"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-10"},{"lineNumber":29,"author":{"gitId":"Siddharth-Sid"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"Siddharth-Sid"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-09-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":46,"Siddharth-Sid":16}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Siddharth-Sid"},"content":"TODO | 1 | Go to the Bookstore","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"Siddharth-Sid"},"content":"TODO | 1 | Rent The Da Vinci Code","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"Siddharth-Sid"},"content":"DEADLINE | 0 | Return The Da Vinci Code | 25/08/2000 2359","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"Siddharth-Sid"},"content":"EVENT | 0 | Abhishek\u0027s Wedding | 01/09/2000 1800","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"Siddharth-Sid":4}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Siddharth-Sid"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"Siddharth-Sid"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-10"},{"lineNumber":3,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"Siddharth-Sid"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"Siddharth-Sid"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-10"},{"lineNumber":6,"author":{"gitId":"Siddharth-Sid"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-10"},{"lineNumber":7,"author":{"gitId":"Siddharth-Sid"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-10"},{"lineNumber":8,"author":{"gitId":"Siddharth-Sid"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"Siddharth-Sid"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-10"},{"lineNumber":10,"author":{"gitId":"Siddharth-Sid"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-10"},{"lineNumber":11,"author":{"gitId":"Siddharth-Sid"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"Siddharth-Sid"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-10"},{"lineNumber":13,"author":{"gitId":"Siddharth-Sid"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-10"},{"lineNumber":14,"author":{"gitId":"Siddharth-Sid"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2021-09-10"},{"lineNumber":15,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":16,"author":{"gitId":"Siddharth-Sid"},"content":"/**","lastModifiedDate":"2021-09-10"},{"lineNumber":17,"author":{"gitId":"Siddharth-Sid"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-09-10"},{"lineNumber":18,"author":{"gitId":"Siddharth-Sid"},"content":" * This control represents a dialog box consisting of an circular cropped ImageView to represent the speaker\u0027s face and","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"Siddharth-Sid"},"content":" * a label containing text from the speaker ie the inputs.","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"Siddharth-Sid"},"content":" */","lastModifiedDate":"2021-09-10"},{"lineNumber":21,"author":{"gitId":"Siddharth-Sid"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-10"},{"lineNumber":22,"author":{"gitId":"Siddharth-Sid"},"content":"    @FXML","lastModifiedDate":"2021-09-10"},{"lineNumber":23,"author":{"gitId":"Siddharth-Sid"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-10"},{"lineNumber":24,"author":{"gitId":"Siddharth-Sid"},"content":"    @FXML","lastModifiedDate":"2021-09-10"},{"lineNumber":25,"author":{"gitId":"Siddharth-Sid"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-10"},{"lineNumber":26,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":27,"author":{"gitId":"Siddharth-Sid"},"content":"    private final int Image_Radius \u003d 40;","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"Siddharth-Sid"},"content":"    private final String DIALOG_BOX_FXML_FILE \u003d \"/view/DialogBox.fxml\";","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":30,"author":{"gitId":"Siddharth-Sid"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"Siddharth-Sid"},"content":"     * Constuctor to create new Dialog Boxes","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"Siddharth-Sid"},"content":"     * @param text Text is the String value that needs to be displayed in the dialog box","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"Siddharth-Sid"},"content":"     * @param img It is the image of the speaker that needs to be displayed","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"Siddharth-Sid"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"Siddharth-Sid"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-10"},{"lineNumber":36,"author":{"gitId":"Siddharth-Sid"},"content":"        try {","lastModifiedDate":"2021-09-10"},{"lineNumber":37,"author":{"gitId":"Siddharth-Sid"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(DIALOG_BOX_FXML_FILE));","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"Siddharth-Sid"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-10"},{"lineNumber":39,"author":{"gitId":"Siddharth-Sid"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-10"},{"lineNumber":40,"author":{"gitId":"Siddharth-Sid"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-10"},{"lineNumber":41,"author":{"gitId":"Siddharth-Sid"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-10"},{"lineNumber":42,"author":{"gitId":"Siddharth-Sid"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-10"},{"lineNumber":43,"author":{"gitId":"Siddharth-Sid"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":44,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":45,"author":{"gitId":"Siddharth-Sid"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-10"},{"lineNumber":46,"author":{"gitId":"Siddharth-Sid"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-10"},{"lineNumber":47,"author":{"gitId":"Siddharth-Sid"},"content":"        displayPicture.setClip(this.cropImage());","lastModifiedDate":"2021-09-10"},{"lineNumber":48,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":49,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":50,"author":{"gitId":"Siddharth-Sid"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":51,"author":{"gitId":"Siddharth-Sid"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-10"},{"lineNumber":52,"author":{"gitId":"Siddharth-Sid"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":53,"author":{"gitId":"Siddharth-Sid"},"content":"    private void flip() {","lastModifiedDate":"2021-09-10"},{"lineNumber":54,"author":{"gitId":"Siddharth-Sid"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-10"},{"lineNumber":55,"author":{"gitId":"Siddharth-Sid"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-10"},{"lineNumber":56,"author":{"gitId":"Siddharth-Sid"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-10"},{"lineNumber":57,"author":{"gitId":"Siddharth-Sid"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-10"},{"lineNumber":58,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":59,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":60,"author":{"gitId":"Siddharth-Sid"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":61,"author":{"gitId":"Siddharth-Sid"},"content":"     * Method to get the Dialog Box for the given text and image","lastModifiedDate":"2021-09-19"},{"lineNumber":62,"author":{"gitId":"Siddharth-Sid"},"content":"     * @param text The String to be displayed in the Dialog Box","lastModifiedDate":"2021-09-19"},{"lineNumber":63,"author":{"gitId":"Siddharth-Sid"},"content":"     * @param img The image of the User shown for the Dialog box","lastModifiedDate":"2021-09-19"},{"lineNumber":64,"author":{"gitId":"Siddharth-Sid"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":65,"author":{"gitId":"Siddharth-Sid"},"content":"     * @return A new Dialog Box with the given inputs","lastModifiedDate":"2021-09-19"},{"lineNumber":66,"author":{"gitId":"Siddharth-Sid"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":67,"author":{"gitId":"Siddharth-Sid"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-10"},{"lineNumber":68,"author":{"gitId":"Siddharth-Sid"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-09-10"},{"lineNumber":69,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":70,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":71,"author":{"gitId":"Siddharth-Sid"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":72,"author":{"gitId":"Siddharth-Sid"},"content":"     * Method to get the Dialog box for the Duke output","lastModifiedDate":"2021-09-19"},{"lineNumber":73,"author":{"gitId":"Siddharth-Sid"},"content":"     * @param text The Sting message to be displayed in the Dialog Box","lastModifiedDate":"2021-09-19"},{"lineNumber":74,"author":{"gitId":"Siddharth-Sid"},"content":"     * @param img The image of the Duke","lastModifiedDate":"2021-09-19"},{"lineNumber":75,"author":{"gitId":"Siddharth-Sid"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":76,"author":{"gitId":"Siddharth-Sid"},"content":"     * @return A new Dialog Box with the given inputs","lastModifiedDate":"2021-09-19"},{"lineNumber":77,"author":{"gitId":"Siddharth-Sid"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":78,"author":{"gitId":"Siddharth-Sid"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-10"},{"lineNumber":79,"author":{"gitId":"Siddharth-Sid"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-10"},{"lineNumber":80,"author":{"gitId":"Siddharth-Sid"},"content":"        db.flip();","lastModifiedDate":"2021-09-10"},{"lineNumber":81,"author":{"gitId":"Siddharth-Sid"},"content":"        return db;","lastModifiedDate":"2021-09-10"},{"lineNumber":82,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":83,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":84,"author":{"gitId":"Siddharth-Sid"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":85,"author":{"gitId":"Siddharth-Sid"},"content":"     * Crops image to a circle shape.","lastModifiedDate":"2021-09-10"},{"lineNumber":86,"author":{"gitId":"Siddharth-Sid"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":87,"author":{"gitId":"Siddharth-Sid"},"content":"     * @return Circle object.","lastModifiedDate":"2021-09-10"},{"lineNumber":88,"author":{"gitId":"Siddharth-Sid"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":89,"author":{"gitId":"Siddharth-Sid"},"content":"    private Circle cropImage() {","lastModifiedDate":"2021-09-10"},{"lineNumber":90,"author":{"gitId":"Siddharth-Sid"},"content":"        Circle circle \u003d new Circle(Image_Radius);","lastModifiedDate":"2021-09-10"},{"lineNumber":91,"author":{"gitId":"Siddharth-Sid"},"content":"        circle.setStrokeWidth(5);","lastModifiedDate":"2021-09-10"},{"lineNumber":92,"author":{"gitId":"Siddharth-Sid"},"content":"        circle.setCenterX(displayPicture.getFitWidth() / 2);","lastModifiedDate":"2021-09-10"},{"lineNumber":93,"author":{"gitId":"Siddharth-Sid"},"content":"        circle.setCenterY(displayPicture.getFitHeight() / 2);","lastModifiedDate":"2021-09-10"},{"lineNumber":94,"author":{"gitId":"Siddharth-Sid"},"content":"        return circle;","lastModifiedDate":"2021-09-10"},{"lineNumber":95,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":96,"author":{"gitId":"Siddharth-Sid"},"content":"}","lastModifiedDate":"2021-09-10"}],"authorContributionMap":{"Siddharth-Sid":96}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Siddharth-Sid"},"content":"import duke.Command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"Siddharth-Sid"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"Siddharth-Sid"},"content":"import duke.Parser;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"Siddharth-Sid"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"Siddharth-Sid"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"Siddharth-Sid"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"Siddharth-Sid"},"content":" * Duke Class to read input commands and accordingly create a list of task.","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"Siddharth-Sid"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"Siddharth-Sid"},"content":"    private final TaskList tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"Siddharth-Sid"},"content":"    private final Storage storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"Siddharth-Sid"},"content":"    private final Parser parser;","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"Siddharth-Sid"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"Siddharth-Sid"},"content":"     * Constructor for the Duke class","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"Siddharth-Sid"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"Siddharth-Sid"},"content":"    public Duke() {","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"Siddharth-Sid"},"content":"        storage \u003d new Storage(\"data/duke.txt\");","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"Siddharth-Sid"},"content":"        tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"Siddharth-Sid"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"Siddharth-Sid"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"Siddharth-Sid"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2021-09-10"},{"lineNumber":27,"author":{"gitId":"Siddharth-Sid"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2021-09-10"},{"lineNumber":28,"author":{"gitId":"Siddharth-Sid"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"Siddharth-Sid"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-09-10"},{"lineNumber":30,"author":{"gitId":"Siddharth-Sid"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"Siddharth-Sid"},"content":"            Command command \u003d parser.parse(input);","lastModifiedDate":"2021-09-10"},{"lineNumber":32,"author":{"gitId":"Siddharth-Sid"},"content":"            return command.execute(tasks, storage);","lastModifiedDate":"2021-09-10"},{"lineNumber":33,"author":{"gitId":"Siddharth-Sid"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"Siddharth-Sid"},"content":"            return e.getMessage();","lastModifiedDate":"2021-09-10"},{"lineNumber":35,"author":{"gitId":"Siddharth-Sid"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"-":3,"Siddharth-Sid":34}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Siddharth-Sid"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":3,"author":{"gitId":"Siddharth-Sid"},"content":"/**","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"Siddharth-Sid"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"Siddharth-Sid"},"content":" */","lastModifiedDate":"2021-09-10"},{"lineNumber":6,"author":{"gitId":"Siddharth-Sid"},"content":"public class Launcher {","lastModifiedDate":"2021-09-10"},{"lineNumber":7,"author":{"gitId":"Siddharth-Sid"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-10"},{"lineNumber":8,"author":{"gitId":"Siddharth-Sid"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":10,"author":{"gitId":"Siddharth-Sid"},"content":"}","lastModifiedDate":"2021-09-10"}],"authorContributionMap":{"Siddharth-Sid":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Siddharth-Sid"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":3,"author":{"gitId":"Siddharth-Sid"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"Siddharth-Sid"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"Siddharth-Sid"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-10"},{"lineNumber":6,"author":{"gitId":"Siddharth-Sid"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-10"},{"lineNumber":7,"author":{"gitId":"Siddharth-Sid"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-10"},{"lineNumber":8,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"Siddharth-Sid"},"content":"/**","lastModifiedDate":"2021-09-10"},{"lineNumber":10,"author":{"gitId":"Siddharth-Sid"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-09-10"},{"lineNumber":11,"author":{"gitId":"Siddharth-Sid"},"content":" */","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"Siddharth-Sid"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-10"},{"lineNumber":13,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":14,"author":{"gitId":"Siddharth-Sid"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2021-09-10"},{"lineNumber":15,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":16,"author":{"gitId":"Siddharth-Sid"},"content":"    @Override","lastModifiedDate":"2021-09-10"},{"lineNumber":17,"author":{"gitId":"Siddharth-Sid"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-10"},{"lineNumber":18,"author":{"gitId":"Siddharth-Sid"},"content":"        try {","lastModifiedDate":"2021-09-10"},{"lineNumber":19,"author":{"gitId":"Siddharth-Sid"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-10"},{"lineNumber":20,"author":{"gitId":"Siddharth-Sid"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-10"},{"lineNumber":21,"author":{"gitId":"Siddharth-Sid"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-10"},{"lineNumber":22,"author":{"gitId":"Siddharth-Sid"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-10"},{"lineNumber":23,"author":{"gitId":"Siddharth-Sid"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-09-10"},{"lineNumber":24,"author":{"gitId":"Siddharth-Sid"},"content":"            stage.show();","lastModifiedDate":"2021-09-10"},{"lineNumber":25,"author":{"gitId":"Siddharth-Sid"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-10"},{"lineNumber":26,"author":{"gitId":"Siddharth-Sid"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-10"},{"lineNumber":27,"author":{"gitId":"Siddharth-Sid"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":28,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":29,"author":{"gitId":"Siddharth-Sid"},"content":"}","lastModifiedDate":"2021-09-10"}],"authorContributionMap":{"Siddharth-Sid":29}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Siddharth-Sid"},"content":"import java.util.Timer;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"Siddharth-Sid"},"content":"import java.util.TimerTask;","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"Siddharth-Sid"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"Siddharth-Sid"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-10"},{"lineNumber":6,"author":{"gitId":"Siddharth-Sid"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-10"},{"lineNumber":7,"author":{"gitId":"Siddharth-Sid"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-10"},{"lineNumber":8,"author":{"gitId":"Siddharth-Sid"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"Siddharth-Sid"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-10"},{"lineNumber":10,"author":{"gitId":"Siddharth-Sid"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-10"},{"lineNumber":11,"author":{"gitId":"Siddharth-Sid"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"Siddharth-Sid"},"content":"/**","lastModifiedDate":"2021-09-10"},{"lineNumber":14,"author":{"gitId":"Siddharth-Sid"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-10"},{"lineNumber":15,"author":{"gitId":"Siddharth-Sid"},"content":" */","lastModifiedDate":"2021-09-10"},{"lineNumber":16,"author":{"gitId":"Siddharth-Sid"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-10"},{"lineNumber":17,"author":{"gitId":"Siddharth-Sid"},"content":"    private static final String GREETING \u003d \"Hello! I\u0027m Duke, what can I do for you?\";","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"Siddharth-Sid"},"content":"    private static final String FAREWELL \u003d \"Bye. Hope to see you again soon! \\\\_(\\\"v\\\")_/\";","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"Siddharth-Sid"},"content":"    @FXML","lastModifiedDate":"2021-09-10"},{"lineNumber":20,"author":{"gitId":"Siddharth-Sid"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-10"},{"lineNumber":21,"author":{"gitId":"Siddharth-Sid"},"content":"    @FXML","lastModifiedDate":"2021-09-10"},{"lineNumber":22,"author":{"gitId":"Siddharth-Sid"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-10"},{"lineNumber":23,"author":{"gitId":"Siddharth-Sid"},"content":"    @FXML","lastModifiedDate":"2021-09-10"},{"lineNumber":24,"author":{"gitId":"Siddharth-Sid"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-10"},{"lineNumber":25,"author":{"gitId":"Siddharth-Sid"},"content":"    @FXML","lastModifiedDate":"2021-09-10"},{"lineNumber":26,"author":{"gitId":"Siddharth-Sid"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-10"},{"lineNumber":27,"author":{"gitId":"Siddharth-Sid"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-10"},{"lineNumber":28,"author":{"gitId":"Siddharth-Sid"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2021-09-10"},{"lineNumber":29,"author":{"gitId":"Siddharth-Sid"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2021-09-10"},{"lineNumber":30,"author":{"gitId":"Siddharth-Sid"},"content":"    private boolean isLastInput;","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"Siddharth-Sid"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"Siddharth-Sid"},"content":"     * Method to display the greeting and bind the values.","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"Siddharth-Sid"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"Siddharth-Sid"},"content":"    @FXML","lastModifiedDate":"2021-09-10"},{"lineNumber":35,"author":{"gitId":"Siddharth-Sid"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-10"},{"lineNumber":36,"author":{"gitId":"Siddharth-Sid"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-10"},{"lineNumber":37,"author":{"gitId":"Siddharth-Sid"},"content":"        showWelcome();","lastModifiedDate":"2021-09-10"},{"lineNumber":38,"author":{"gitId":"Siddharth-Sid"},"content":"        isLastInput \u003d false;","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":40,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":41,"author":{"gitId":"Siddharth-Sid"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-09-10"},{"lineNumber":42,"author":{"gitId":"Siddharth-Sid"},"content":"        duke \u003d d;","lastModifiedDate":"2021-09-10"},{"lineNumber":43,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":44,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":45,"author":{"gitId":"Siddharth-Sid"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":46,"author":{"gitId":"Siddharth-Sid"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-10"},{"lineNumber":47,"author":{"gitId":"Siddharth-Sid"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-10"},{"lineNumber":48,"author":{"gitId":"Siddharth-Sid"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":49,"author":{"gitId":"Siddharth-Sid"},"content":"    @FXML","lastModifiedDate":"2021-09-10"},{"lineNumber":50,"author":{"gitId":"Siddharth-Sid"},"content":"    private void handleUserInput() throws InterruptedException {","lastModifiedDate":"2021-09-19"},{"lineNumber":51,"author":{"gitId":"Siddharth-Sid"},"content":"        if (!isLastInput) {","lastModifiedDate":"2021-09-19"},{"lineNumber":52,"author":{"gitId":"Siddharth-Sid"},"content":"            String input \u003d userInput.getText();","lastModifiedDate":"2021-09-10"},{"lineNumber":53,"author":{"gitId":"Siddharth-Sid"},"content":"            if (!input.trim().equals(\"\")) {","lastModifiedDate":"2021-09-19"},{"lineNumber":54,"author":{"gitId":"Siddharth-Sid"},"content":"                String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-09-10"},{"lineNumber":55,"author":{"gitId":"Siddharth-Sid"},"content":"                dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-10"},{"lineNumber":56,"author":{"gitId":"Siddharth-Sid"},"content":"                        DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-10"},{"lineNumber":57,"author":{"gitId":"Siddharth-Sid"},"content":"                        DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-09-10"},{"lineNumber":58,"author":{"gitId":"Siddharth-Sid"},"content":"                );","lastModifiedDate":"2021-09-10"},{"lineNumber":59,"author":{"gitId":"Siddharth-Sid"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":60,"author":{"gitId":"Siddharth-Sid"},"content":"            userInput.clear();","lastModifiedDate":"2021-09-19"},{"lineNumber":61,"author":{"gitId":"Siddharth-Sid"},"content":"            if (input.trim().equals(\"bye\")) {","lastModifiedDate":"2021-09-19"},{"lineNumber":62,"author":{"gitId":"Siddharth-Sid"},"content":"                isLastInput \u003d true;","lastModifiedDate":"2021-09-19"},{"lineNumber":63,"author":{"gitId":"Siddharth-Sid"},"content":"                new Timer().schedule(new TimerTask() {","lastModifiedDate":"2021-09-19"},{"lineNumber":64,"author":{"gitId":"Siddharth-Sid"},"content":"                    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":65,"author":{"gitId":"Siddharth-Sid"},"content":"                    public void run() {","lastModifiedDate":"2021-09-19"},{"lineNumber":66,"author":{"gitId":"Siddharth-Sid"},"content":"                        Platform.exit();","lastModifiedDate":"2021-09-19"},{"lineNumber":67,"author":{"gitId":"Siddharth-Sid"},"content":"                        System.exit(0);","lastModifiedDate":"2021-09-19"},{"lineNumber":68,"author":{"gitId":"Siddharth-Sid"},"content":"                    }","lastModifiedDate":"2021-09-19"},{"lineNumber":69,"author":{"gitId":"Siddharth-Sid"},"content":"                }, 3000);","lastModifiedDate":"2021-09-19"},{"lineNumber":70,"author":{"gitId":"Siddharth-Sid"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":71,"author":{"gitId":"Siddharth-Sid"},"content":"        } else {","lastModifiedDate":"2021-09-19"},{"lineNumber":72,"author":{"gitId":"Siddharth-Sid"},"content":"            userInput.clear();","lastModifiedDate":"2021-09-10"},{"lineNumber":73,"author":{"gitId":"Siddharth-Sid"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":74,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":75,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":76,"author":{"gitId":"Siddharth-Sid"},"content":"    @FXML","lastModifiedDate":"2021-09-10"},{"lineNumber":77,"author":{"gitId":"Siddharth-Sid"},"content":"    private void showWelcome() {","lastModifiedDate":"2021-09-10"},{"lineNumber":78,"author":{"gitId":"Siddharth-Sid"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(GREETING, dukeImage));","lastModifiedDate":"2021-09-10"},{"lineNumber":79,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":80,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":81,"author":{"gitId":"Siddharth-Sid"},"content":"    @FXML","lastModifiedDate":"2021-09-10"},{"lineNumber":82,"author":{"gitId":"Siddharth-Sid"},"content":"    private void showGoodbye() {","lastModifiedDate":"2021-09-10"},{"lineNumber":83,"author":{"gitId":"Siddharth-Sid"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(FAREWELL, dukeImage));","lastModifiedDate":"2021-09-10"},{"lineNumber":84,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":85,"author":{"gitId":"Siddharth-Sid"},"content":"}","lastModifiedDate":"2021-09-10"}],"authorContributionMap":{"Siddharth-Sid":85}},{"path":"src/main/java/duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Siddharth-Sid"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"Siddharth-Sid"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"Siddharth-Sid"},"content":"import duke.task.DeadlineTask;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"Siddharth-Sid"},"content":"import duke.task.EventTask;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"Siddharth-Sid"},"content":"import duke.task.ToDoTask;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"Siddharth-Sid"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"Siddharth-Sid"},"content":" * Class to abstract the type and execution of a command","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"Siddharth-Sid"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"Siddharth-Sid"},"content":"public class Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"Siddharth-Sid"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"Siddharth-Sid"},"content":"     * Enum to encapsulate the type of CommandTypes","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"Siddharth-Sid"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"Siddharth-Sid"},"content":"    public enum CommandTypes {","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"Siddharth-Sid"},"content":"        BYE,","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"Siddharth-Sid"},"content":"        DEADLINE,","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"Siddharth-Sid"},"content":"        DELETE,","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"Siddharth-Sid"},"content":"        DONE,","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"Siddharth-Sid"},"content":"        EVENT,","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"Siddharth-Sid"},"content":"        FIND,","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"Siddharth-Sid"},"content":"        LIST,","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"Siddharth-Sid"},"content":"        TODO,","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"Siddharth-Sid"},"content":"        UNKNOWN","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"Siddharth-Sid"},"content":"    private final CommandTypes typeOfCommand;","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"Siddharth-Sid"},"content":"    private final String taskDetails;","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"Siddharth-Sid"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"Siddharth-Sid"},"content":"     * Constructor for the Class Command","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"Siddharth-Sid"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"Siddharth-Sid"},"content":"     * @param type The type of Command","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"Siddharth-Sid"},"content":"     * @param taskDetails The String describing the various attributes for the command","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"Siddharth-Sid"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"Siddharth-Sid"},"content":"    public Command(CommandTypes type, String taskDetails) {","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"Siddharth-Sid"},"content":"        if (type !\u003d null) {","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"Siddharth-Sid"},"content":"            switch (type) {","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"Siddharth-Sid"},"content":"            case BYE:","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"Siddharth-Sid"},"content":"                this.typeOfCommand \u003d CommandTypes.BYE;","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"Siddharth-Sid"},"content":"                break;","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"Siddharth-Sid"},"content":"            case DEADLINE:","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"Siddharth-Sid"},"content":"                this.typeOfCommand \u003d CommandTypes.DEADLINE;","lastModifiedDate":"2021-09-19"},{"lineNumber":45,"author":{"gitId":"Siddharth-Sid"},"content":"                break;","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"Siddharth-Sid"},"content":"            case DELETE:","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"Siddharth-Sid"},"content":"                this.typeOfCommand \u003d CommandTypes.DELETE;","lastModifiedDate":"2021-09-19"},{"lineNumber":48,"author":{"gitId":"Siddharth-Sid"},"content":"                break;","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"Siddharth-Sid"},"content":"            case DONE:","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"Siddharth-Sid"},"content":"                this.typeOfCommand \u003d CommandTypes.DONE;","lastModifiedDate":"2021-09-19"},{"lineNumber":51,"author":{"gitId":"Siddharth-Sid"},"content":"                break;","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"Siddharth-Sid"},"content":"            case EVENT:","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"Siddharth-Sid"},"content":"                this.typeOfCommand \u003d CommandTypes.EVENT;","lastModifiedDate":"2021-09-19"},{"lineNumber":54,"author":{"gitId":"Siddharth-Sid"},"content":"                break;","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"Siddharth-Sid"},"content":"            case FIND:","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"Siddharth-Sid"},"content":"                this.typeOfCommand \u003d CommandTypes.FIND;","lastModifiedDate":"2021-09-19"},{"lineNumber":57,"author":{"gitId":"Siddharth-Sid"},"content":"                break;","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"Siddharth-Sid"},"content":"            case LIST:","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"Siddharth-Sid"},"content":"                this.typeOfCommand \u003d CommandTypes.LIST;","lastModifiedDate":"2021-09-19"},{"lineNumber":60,"author":{"gitId":"Siddharth-Sid"},"content":"                break;","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"Siddharth-Sid"},"content":"            case TODO:","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"Siddharth-Sid"},"content":"                this.typeOfCommand \u003d CommandTypes.TODO;","lastModifiedDate":"2021-09-19"},{"lineNumber":63,"author":{"gitId":"Siddharth-Sid"},"content":"                break;","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"Siddharth-Sid"},"content":"            default:","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"Siddharth-Sid"},"content":"                this.typeOfCommand \u003d CommandTypes.UNKNOWN;","lastModifiedDate":"2021-09-19"},{"lineNumber":66,"author":{"gitId":"Siddharth-Sid"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"Siddharth-Sid"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"Siddharth-Sid"},"content":"            this.typeOfCommand \u003d CommandTypes.UNKNOWN;","lastModifiedDate":"2021-09-19"},{"lineNumber":69,"author":{"gitId":"Siddharth-Sid"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"Siddharth-Sid"},"content":"        this.taskDetails \u003d taskDetails;","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"Siddharth-Sid"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":74,"author":{"gitId":"Siddharth-Sid"},"content":"     * Method to check for the Bye Command and return the message to be displayed","lastModifiedDate":"2021-09-10"},{"lineNumber":75,"author":{"gitId":"Siddharth-Sid"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":76,"author":{"gitId":"Siddharth-Sid"},"content":"     * @param taskDetails The String describing the various attributes for the command","lastModifiedDate":"2021-08-27"},{"lineNumber":77,"author":{"gitId":"Siddharth-Sid"},"content":"     * @return The String Message for the Bye Command","lastModifiedDate":"2021-09-10"},{"lineNumber":78,"author":{"gitId":"Siddharth-Sid"},"content":"     * @throws DukeException An Exception class to be thrown if the command taskDetails is not valid","lastModifiedDate":"2021-08-27"},{"lineNumber":79,"author":{"gitId":"Siddharth-Sid"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":80,"author":{"gitId":"Siddharth-Sid"},"content":"    private String goodbye(String taskDetails) throws DukeException {","lastModifiedDate":"2021-09-10"},{"lineNumber":81,"author":{"gitId":"Siddharth-Sid"},"content":"        String output \u003d \"\";","lastModifiedDate":"2021-09-10"},{"lineNumber":82,"author":{"gitId":"Siddharth-Sid"},"content":"        if ((taskDetails !\u003d null) \u0026\u0026 (taskDetails.equals(\"\"))) {","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"Siddharth-Sid"},"content":"            output +\u003d \"Bye. Hope to see you again soon! \\\\_(\\\"v\\\")_/\";","lastModifiedDate":"2021-09-10"},{"lineNumber":84,"author":{"gitId":"Siddharth-Sid"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"Siddharth-Sid"},"content":"            throw new DukeException(\"OOPS! I\u0027m sorry, but I don\u0027t know that command\");","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"Siddharth-Sid"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"Siddharth-Sid"},"content":"        return output;","lastModifiedDate":"2021-09-10"},{"lineNumber":88,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"Siddharth-Sid"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":91,"author":{"gitId":"Siddharth-Sid"},"content":"     * Method to check for the Deadline Command and return the message to be displayed","lastModifiedDate":"2021-09-10"},{"lineNumber":92,"author":{"gitId":"Siddharth-Sid"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":93,"author":{"gitId":"Siddharth-Sid"},"content":"     * @param taskDetails The String describing the various attributes for the command","lastModifiedDate":"2021-08-27"},{"lineNumber":94,"author":{"gitId":"Siddharth-Sid"},"content":"     * @param tasks The Object to contain the List of the Tasks","lastModifiedDate":"2021-08-27"},{"lineNumber":95,"author":{"gitId":"Siddharth-Sid"},"content":"     * @return The Message to be displayed for the Deadline Command","lastModifiedDate":"2021-09-10"},{"lineNumber":96,"author":{"gitId":"Siddharth-Sid"},"content":"     * @throws DukeException An Exception class to be thrown if the command taskDetails is not valid","lastModifiedDate":"2021-08-27"},{"lineNumber":97,"author":{"gitId":"Siddharth-Sid"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":98,"author":{"gitId":"Siddharth-Sid"},"content":"    private String addDeadline(String taskDetails, TaskList tasks) throws DukeException {","lastModifiedDate":"2021-09-10"},{"lineNumber":99,"author":{"gitId":"Siddharth-Sid"},"content":"        String output \u003d \"\";","lastModifiedDate":"2021-09-10"},{"lineNumber":100,"author":{"gitId":"Siddharth-Sid"},"content":"        if ((taskDetails \u003d\u003d null) || !(taskDetails.contains(\" /by \"))) {","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"Siddharth-Sid"},"content":"            throw new DukeException(\"Incorrect Format of the Deadline Command!!, \\nCorrect Format --\u003e \"","lastModifiedDate":"2021-09-10"},{"lineNumber":102,"author":{"gitId":"Siddharth-Sid"},"content":"                    + \"deadline \u003cDescription\u003e /by \u003cdd/MM/yyyy HHmm\u003e\");","lastModifiedDate":"2021-09-03"},{"lineNumber":103,"author":{"gitId":"Siddharth-Sid"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":104,"author":{"gitId":"Siddharth-Sid"},"content":"            String[] values \u003d taskDetails.split(\" /by \", 2);","lastModifiedDate":"2021-08-26"},{"lineNumber":105,"author":{"gitId":"Siddharth-Sid"},"content":"            try {","lastModifiedDate":"2021-08-26"},{"lineNumber":106,"author":{"gitId":"Siddharth-Sid"},"content":"                DeadlineTask deadline \u003d new DeadlineTask(values[0], values[1]);","lastModifiedDate":"2021-08-26"},{"lineNumber":107,"author":{"gitId":"Siddharth-Sid"},"content":"                tasks.addTask(deadline);","lastModifiedDate":"2021-08-26"},{"lineNumber":108,"author":{"gitId":"Siddharth-Sid"},"content":"                output +\u003d \"Got it. I\u0027ve added this task:\\n\";","lastModifiedDate":"2021-09-10"},{"lineNumber":109,"author":{"gitId":"Siddharth-Sid"},"content":"                output +\u003d \"  \" + deadline + \"\\n\";","lastModifiedDate":"2021-09-10"},{"lineNumber":110,"author":{"gitId":"Siddharth-Sid"},"content":"                output +\u003d \"Now you have \" + tasks.getTaskListLength() + \" tasks in the list.\";","lastModifiedDate":"2021-09-10"},{"lineNumber":111,"author":{"gitId":"Siddharth-Sid"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":112,"author":{"gitId":"Siddharth-Sid"},"content":"                throw new DukeException(\"Incorrect Format of the Deadline Command!!, \\nCorrect Format --\u003e \"","lastModifiedDate":"2021-09-10"},{"lineNumber":113,"author":{"gitId":"Siddharth-Sid"},"content":"                        + \"deadline \u003cDescription\u003e /by \u003cdd/MM/yyyy HHmm\u003e\");","lastModifiedDate":"2021-09-03"},{"lineNumber":114,"author":{"gitId":"Siddharth-Sid"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":115,"author":{"gitId":"Siddharth-Sid"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":116,"author":{"gitId":"Siddharth-Sid"},"content":"        return output;","lastModifiedDate":"2021-09-10"},{"lineNumber":117,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":118,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":119,"author":{"gitId":"Siddharth-Sid"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":120,"author":{"gitId":"Siddharth-Sid"},"content":"     * Method to check for the Delete Command and render the UI","lastModifiedDate":"2021-08-27"},{"lineNumber":121,"author":{"gitId":"Siddharth-Sid"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":122,"author":{"gitId":"Siddharth-Sid"},"content":"     * @param taskDetails The String describing the various attributes for the command","lastModifiedDate":"2021-08-27"},{"lineNumber":123,"author":{"gitId":"Siddharth-Sid"},"content":"     * @param tasks The Object to contain the List of the Tasks","lastModifiedDate":"2021-08-27"},{"lineNumber":124,"author":{"gitId":"Siddharth-Sid"},"content":"     * @return The Message to be displayed for the Delete Command","lastModifiedDate":"2021-09-10"},{"lineNumber":125,"author":{"gitId":"Siddharth-Sid"},"content":"     * @throws DukeException An Exception class to be thrown if the command taskDetails is not valid","lastModifiedDate":"2021-08-27"},{"lineNumber":126,"author":{"gitId":"Siddharth-Sid"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":127,"author":{"gitId":"Siddharth-Sid"},"content":"    private String deleteTask(String taskDetails, TaskList tasks) throws DukeException {","lastModifiedDate":"2021-09-10"},{"lineNumber":128,"author":{"gitId":"Siddharth-Sid"},"content":"        String output \u003d \"\";","lastModifiedDate":"2021-09-10"},{"lineNumber":129,"author":{"gitId":"Siddharth-Sid"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":130,"author":{"gitId":"Siddharth-Sid"},"content":"            int index \u003d Integer.parseInt(taskDetails) - 1;","lastModifiedDate":"2021-08-26"},{"lineNumber":131,"author":{"gitId":"Siddharth-Sid"},"content":"            if ((index \u003e\u003d 0) \u0026\u0026 (index \u003c tasks.getTaskListLength())) {","lastModifiedDate":"2021-08-26"},{"lineNumber":132,"author":{"gitId":"Siddharth-Sid"},"content":"                output +\u003d \"Noted. I\u0027ve removed this task:\\n\";","lastModifiedDate":"2021-09-10"},{"lineNumber":133,"author":{"gitId":"Siddharth-Sid"},"content":"                output +\u003d \"  \" + tasks.deleteTaskAtIndex(index).toString();","lastModifiedDate":"2021-09-10"},{"lineNumber":134,"author":{"gitId":"Siddharth-Sid"},"content":"            } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":135,"author":{"gitId":"Siddharth-Sid"},"content":"                int numberOfTasks \u003d tasks.getTaskListLength();","lastModifiedDate":"2021-08-26"},{"lineNumber":136,"author":{"gitId":"Siddharth-Sid"},"content":"                if (numberOfTasks \u003d\u003d 0) {","lastModifiedDate":"2021-08-26"},{"lineNumber":137,"author":{"gitId":"Siddharth-Sid"},"content":"                    throw new DukeException(\"Incorrect Index!! There are no Tasks in the Task List\");","lastModifiedDate":"2021-08-26"},{"lineNumber":138,"author":{"gitId":"Siddharth-Sid"},"content":"                } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":139,"author":{"gitId":"Siddharth-Sid"},"content":"                    throw new DukeException(\"Incorrect Index!! There are \" + numberOfTasks + \" tasks in the Task List\");","lastModifiedDate":"2021-08-26"},{"lineNumber":140,"author":{"gitId":"Siddharth-Sid"},"content":"                }","lastModifiedDate":"2021-08-26"},{"lineNumber":141,"author":{"gitId":"Siddharth-Sid"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":142,"author":{"gitId":"Siddharth-Sid"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":143,"author":{"gitId":"Siddharth-Sid"},"content":"            throw new DukeException(\"Incorrect Format of the Delete Command!!, \\nCorrect Format --\u003e delete \u003cindex\u003e\");","lastModifiedDate":"2021-09-10"},{"lineNumber":144,"author":{"gitId":"Siddharth-Sid"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":145,"author":{"gitId":"Siddharth-Sid"},"content":"        return output;","lastModifiedDate":"2021-09-10"},{"lineNumber":146,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":147,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":148,"author":{"gitId":"Siddharth-Sid"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":149,"author":{"gitId":"Siddharth-Sid"},"content":"     * Method to check for the Done Command and render the UI","lastModifiedDate":"2021-08-27"},{"lineNumber":150,"author":{"gitId":"Siddharth-Sid"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":151,"author":{"gitId":"Siddharth-Sid"},"content":"     * @param taskDetails The String describing the various attributes for the command","lastModifiedDate":"2021-08-27"},{"lineNumber":152,"author":{"gitId":"Siddharth-Sid"},"content":"     * @param tasks The Object to contain the List of the Tasks","lastModifiedDate":"2021-08-27"},{"lineNumber":153,"author":{"gitId":"Siddharth-Sid"},"content":"     * @return The Message to be displayed for the Done Command","lastModifiedDate":"2021-09-10"},{"lineNumber":154,"author":{"gitId":"Siddharth-Sid"},"content":"     * @throws DukeException An Exception class to be thrown if the command taskDetails is not valid","lastModifiedDate":"2021-08-27"},{"lineNumber":155,"author":{"gitId":"Siddharth-Sid"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":156,"author":{"gitId":"Siddharth-Sid"},"content":"    private String markTaskAsCompleted(String taskDetails, TaskList tasks) throws DukeException {","lastModifiedDate":"2021-09-10"},{"lineNumber":157,"author":{"gitId":"Siddharth-Sid"},"content":"        String output \u003d \"\";","lastModifiedDate":"2021-09-10"},{"lineNumber":158,"author":{"gitId":"Siddharth-Sid"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":159,"author":{"gitId":"Siddharth-Sid"},"content":"            int index \u003d Integer.parseInt(taskDetails) - 1;","lastModifiedDate":"2021-08-26"},{"lineNumber":160,"author":{"gitId":"Siddharth-Sid"},"content":"            if ((index \u003e\u003d 0) \u0026\u0026 (index \u003c tasks.getTaskListLength())) {","lastModifiedDate":"2021-08-26"},{"lineNumber":161,"author":{"gitId":"Siddharth-Sid"},"content":"                tasks.completeTask(index);","lastModifiedDate":"2021-08-26"},{"lineNumber":162,"author":{"gitId":"Siddharth-Sid"},"content":"                output +\u003d \"Nice! I\u0027ve marked this task as done:\\n\";","lastModifiedDate":"2021-09-10"},{"lineNumber":163,"author":{"gitId":"Siddharth-Sid"},"content":"                output +\u003d \"  \" + tasks.getTask(index);","lastModifiedDate":"2021-09-10"},{"lineNumber":164,"author":{"gitId":"Siddharth-Sid"},"content":"            } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":165,"author":{"gitId":"Siddharth-Sid"},"content":"                int numberOfTasks \u003d tasks.getTaskListLength();","lastModifiedDate":"2021-08-26"},{"lineNumber":166,"author":{"gitId":"Siddharth-Sid"},"content":"                if (numberOfTasks \u003d\u003d 0) {","lastModifiedDate":"2021-08-26"},{"lineNumber":167,"author":{"gitId":"Siddharth-Sid"},"content":"                    throw new DukeException(\"Incorrect Index!! There are no Tasks in the Task List\");","lastModifiedDate":"2021-08-26"},{"lineNumber":168,"author":{"gitId":"Siddharth-Sid"},"content":"                } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":169,"author":{"gitId":"Siddharth-Sid"},"content":"                    throw new DukeException(\"Incorrect Index!! There are \" + numberOfTasks + \" tasks in the Task List\");","lastModifiedDate":"2021-08-26"},{"lineNumber":170,"author":{"gitId":"Siddharth-Sid"},"content":"                }","lastModifiedDate":"2021-08-26"},{"lineNumber":171,"author":{"gitId":"Siddharth-Sid"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":172,"author":{"gitId":"Siddharth-Sid"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":173,"author":{"gitId":"Siddharth-Sid"},"content":"            throw new DukeException(\"Incorrect Format of the Done Command!!, \\nCorrect Format --\u003e done \u003cindex\u003e\");","lastModifiedDate":"2021-09-10"},{"lineNumber":174,"author":{"gitId":"Siddharth-Sid"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":175,"author":{"gitId":"Siddharth-Sid"},"content":"        return output;","lastModifiedDate":"2021-09-10"},{"lineNumber":176,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":177,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":178,"author":{"gitId":"Siddharth-Sid"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":179,"author":{"gitId":"Siddharth-Sid"},"content":"     * Method to check for the Event Command and render the UI","lastModifiedDate":"2021-08-27"},{"lineNumber":180,"author":{"gitId":"Siddharth-Sid"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":181,"author":{"gitId":"Siddharth-Sid"},"content":"     * @param taskDetails The String describing the various attributes for the command","lastModifiedDate":"2021-08-27"},{"lineNumber":182,"author":{"gitId":"Siddharth-Sid"},"content":"     * @param tasks The Object to contain the List of the Tasks","lastModifiedDate":"2021-08-27"},{"lineNumber":183,"author":{"gitId":"Siddharth-Sid"},"content":"     * @throws DukeException An Exception class to be thrown if the command taskDetails is not valid","lastModifiedDate":"2021-08-27"},{"lineNumber":184,"author":{"gitId":"Siddharth-Sid"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":185,"author":{"gitId":"Siddharth-Sid"},"content":"    private String addEvent(String taskDetails, TaskList tasks) throws DukeException {","lastModifiedDate":"2021-09-10"},{"lineNumber":186,"author":{"gitId":"Siddharth-Sid"},"content":"        String output \u003d \"\";","lastModifiedDate":"2021-09-10"},{"lineNumber":187,"author":{"gitId":"Siddharth-Sid"},"content":"        if ((taskDetails \u003d\u003d null) || !(taskDetails.contains(\" /at \"))) {","lastModifiedDate":"2021-08-26"},{"lineNumber":188,"author":{"gitId":"Siddharth-Sid"},"content":"            throw new DukeException(\"Incorrect Format of the Event Command!!, \\n\"","lastModifiedDate":"2021-09-10"},{"lineNumber":189,"author":{"gitId":"Siddharth-Sid"},"content":"                    + \"Correct Format --\u003e event \u003cDescription\u003e /at \u003cdd/MM/yyyy HHmm\u003e\");","lastModifiedDate":"2021-09-03"},{"lineNumber":190,"author":{"gitId":"Siddharth-Sid"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":191,"author":{"gitId":"Siddharth-Sid"},"content":"            String[] values \u003d taskDetails.split(\" /at \", 2);","lastModifiedDate":"2021-08-26"},{"lineNumber":192,"author":{"gitId":"Siddharth-Sid"},"content":"            try {","lastModifiedDate":"2021-08-26"},{"lineNumber":193,"author":{"gitId":"Siddharth-Sid"},"content":"                EventTask event \u003d new EventTask(values[0], values[1]);","lastModifiedDate":"2021-08-26"},{"lineNumber":194,"author":{"gitId":"Siddharth-Sid"},"content":"                tasks.addTask(event);","lastModifiedDate":"2021-08-26"},{"lineNumber":195,"author":{"gitId":"Siddharth-Sid"},"content":"                output +\u003d \"Got it. I\u0027ve added this task:\\n\";","lastModifiedDate":"2021-09-10"},{"lineNumber":196,"author":{"gitId":"Siddharth-Sid"},"content":"                output +\u003d \"  \" + event + \"\\n\";","lastModifiedDate":"2021-09-10"},{"lineNumber":197,"author":{"gitId":"Siddharth-Sid"},"content":"                output +\u003d \"Now you have \" + tasks.getTaskListLength() + \" tasks in the list.\";","lastModifiedDate":"2021-09-10"},{"lineNumber":198,"author":{"gitId":"Siddharth-Sid"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":199,"author":{"gitId":"Siddharth-Sid"},"content":"                throw new DukeException(\"Incorrect Format of the Event Command!!, \\n\"","lastModifiedDate":"2021-09-10"},{"lineNumber":200,"author":{"gitId":"Siddharth-Sid"},"content":"                        + \"Correct Format --\u003e event \u003cDescription\u003e /at \u003cdd/MM/yyyy HHmm\u003e\");","lastModifiedDate":"2021-09-03"},{"lineNumber":201,"author":{"gitId":"Siddharth-Sid"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":202,"author":{"gitId":"Siddharth-Sid"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":203,"author":{"gitId":"Siddharth-Sid"},"content":"        return output;","lastModifiedDate":"2021-09-10"},{"lineNumber":204,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":205,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":206,"author":{"gitId":"Siddharth-Sid"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":207,"author":{"gitId":"Siddharth-Sid"},"content":"     * Method to check for the Task with the given String in the Task List","lastModifiedDate":"2021-08-27"},{"lineNumber":208,"author":{"gitId":"Siddharth-Sid"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":209,"author":{"gitId":"Siddharth-Sid"},"content":"     * @param searchDetails The String to be Searched in the Task List","lastModifiedDate":"2021-08-27"},{"lineNumber":210,"author":{"gitId":"Siddharth-Sid"},"content":"     * @param tasks The Object to contain the List of the Tasks","lastModifiedDate":"2021-08-27"},{"lineNumber":211,"author":{"gitId":"Siddharth-Sid"},"content":"     * @return The String displaying all the Tasks with the given input string","lastModifiedDate":"2021-09-10"},{"lineNumber":212,"author":{"gitId":"Siddharth-Sid"},"content":"     * @throws DukeException An Exception class to be thrown if the command taskDetails is not valid","lastModifiedDate":"2021-08-27"},{"lineNumber":213,"author":{"gitId":"Siddharth-Sid"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":214,"author":{"gitId":"Siddharth-Sid"},"content":"    private String searchAndDisplayTaskList(String searchDetails, TaskList tasks) throws DukeException {","lastModifiedDate":"2021-09-10"},{"lineNumber":215,"author":{"gitId":"Siddharth-Sid"},"content":"        String output \u003d \"\";","lastModifiedDate":"2021-09-10"},{"lineNumber":216,"author":{"gitId":"Siddharth-Sid"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2021-09-10"},{"lineNumber":217,"author":{"gitId":"Siddharth-Sid"},"content":"        if (searchDetails !\u003d null \u0026\u0026 !searchDetails.equals(\"\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":218,"author":{"gitId":"Siddharth-Sid"},"content":"            output +\u003d ui.printTaskList(tasks.searchTaskList(searchDetails));","lastModifiedDate":"2021-09-10"},{"lineNumber":219,"author":{"gitId":"Siddharth-Sid"},"content":"        } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":220,"author":{"gitId":"Siddharth-Sid"},"content":"            throw new DukeException(\"Incorrect Format of the Find Command!!,\\nCorrect Format --\u003e find \u003csearch_string\u003e\");","lastModifiedDate":"2021-09-19"},{"lineNumber":221,"author":{"gitId":"Siddharth-Sid"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":222,"author":{"gitId":"Siddharth-Sid"},"content":"        return output;","lastModifiedDate":"2021-09-10"},{"lineNumber":223,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":224,"author":{"gitId":"Siddharth-Sid"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":225,"author":{"gitId":"Siddharth-Sid"},"content":"     * Method to check for the List Command and render the UI","lastModifiedDate":"2021-08-27"},{"lineNumber":226,"author":{"gitId":"Siddharth-Sid"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":227,"author":{"gitId":"Siddharth-Sid"},"content":"     * @param taskDetails The String describing the various attributes for the command","lastModifiedDate":"2021-08-27"},{"lineNumber":228,"author":{"gitId":"Siddharth-Sid"},"content":"     * @param tasks The Object to contain the List of the Tasks","lastModifiedDate":"2021-08-27"},{"lineNumber":229,"author":{"gitId":"Siddharth-Sid"},"content":"     * @return The Message to be displayed for the List Command","lastModifiedDate":"2021-09-10"},{"lineNumber":230,"author":{"gitId":"Siddharth-Sid"},"content":"     * @throws DukeException An Exception class to be thrown if the command taskDetails is not valid","lastModifiedDate":"2021-08-27"},{"lineNumber":231,"author":{"gitId":"Siddharth-Sid"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":232,"author":{"gitId":"Siddharth-Sid"},"content":"    private String displayTaskList(String taskDetails, TaskList tasks) throws DukeException {","lastModifiedDate":"2021-09-10"},{"lineNumber":233,"author":{"gitId":"Siddharth-Sid"},"content":"        String output \u003d \"\";","lastModifiedDate":"2021-09-10"},{"lineNumber":234,"author":{"gitId":"Siddharth-Sid"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2021-09-10"},{"lineNumber":235,"author":{"gitId":"Siddharth-Sid"},"content":"        if (taskDetails !\u003d null \u0026\u0026 taskDetails.equals(\"\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":236,"author":{"gitId":"Siddharth-Sid"},"content":"            output +\u003d ui.printTaskList(tasks);","lastModifiedDate":"2021-09-10"},{"lineNumber":237,"author":{"gitId":"Siddharth-Sid"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":238,"author":{"gitId":"Siddharth-Sid"},"content":"            throw new DukeException(\"OOPS! I\u0027m sorry, but I don\u0027t know that command\");","lastModifiedDate":"2021-08-26"},{"lineNumber":239,"author":{"gitId":"Siddharth-Sid"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":240,"author":{"gitId":"Siddharth-Sid"},"content":"        return output;","lastModifiedDate":"2021-09-10"},{"lineNumber":241,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":242,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":243,"author":{"gitId":"Siddharth-Sid"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":244,"author":{"gitId":"Siddharth-Sid"},"content":"     * Method to check for the ToDO Command and render the UI","lastModifiedDate":"2021-08-27"},{"lineNumber":245,"author":{"gitId":"Siddharth-Sid"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":246,"author":{"gitId":"Siddharth-Sid"},"content":"     * @param taskDetails The String describing the various attributes for the command","lastModifiedDate":"2021-08-27"},{"lineNumber":247,"author":{"gitId":"Siddharth-Sid"},"content":"     * @param tasks The Object to contain the List of the Tasks","lastModifiedDate":"2021-08-27"},{"lineNumber":248,"author":{"gitId":"Siddharth-Sid"},"content":"     * @return The Message to be displayed for the Todo command","lastModifiedDate":"2021-09-10"},{"lineNumber":249,"author":{"gitId":"Siddharth-Sid"},"content":"     * @throws DukeException An Exception class to be thrown if the command taskDetails is not valid","lastModifiedDate":"2021-08-27"},{"lineNumber":250,"author":{"gitId":"Siddharth-Sid"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":251,"author":{"gitId":"Siddharth-Sid"},"content":"    private String addTodo(String taskDetails, TaskList tasks) throws DukeException {","lastModifiedDate":"2021-09-10"},{"lineNumber":252,"author":{"gitId":"Siddharth-Sid"},"content":"        String output \u003d \"\";","lastModifiedDate":"2021-09-10"},{"lineNumber":253,"author":{"gitId":"Siddharth-Sid"},"content":"        if ((taskDetails \u003d\u003d null) || (taskDetails.equals(\"\"))) {","lastModifiedDate":"2021-08-26"},{"lineNumber":254,"author":{"gitId":"Siddharth-Sid"},"content":"            throw new DukeException(\"Incorrect Format of the ToDo Command!!, \\nCorrect Format --\u003e todo \u003cDescription\u003e\");","lastModifiedDate":"2021-09-10"},{"lineNumber":255,"author":{"gitId":"Siddharth-Sid"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":256,"author":{"gitId":"Siddharth-Sid"},"content":"            ToDoTask todo \u003d new ToDoTask(taskDetails);","lastModifiedDate":"2021-08-26"},{"lineNumber":257,"author":{"gitId":"Siddharth-Sid"},"content":"            tasks.addTask(todo);","lastModifiedDate":"2021-08-26"},{"lineNumber":258,"author":{"gitId":"Siddharth-Sid"},"content":"            output +\u003d \"Got it. I\u0027ve added this task:\\n\";","lastModifiedDate":"2021-09-10"},{"lineNumber":259,"author":{"gitId":"Siddharth-Sid"},"content":"            output +\u003d \"  \" + todo + \"\\n\";","lastModifiedDate":"2021-09-10"},{"lineNumber":260,"author":{"gitId":"Siddharth-Sid"},"content":"            output +\u003d \"Now you have \" + tasks.getTaskListLength() + \" tasks in the list.\";","lastModifiedDate":"2021-09-10"},{"lineNumber":261,"author":{"gitId":"Siddharth-Sid"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":262,"author":{"gitId":"Siddharth-Sid"},"content":"        return output;","lastModifiedDate":"2021-09-10"},{"lineNumber":263,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":264,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":265,"author":{"gitId":"Siddharth-Sid"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":266,"author":{"gitId":"Siddharth-Sid"},"content":"     * Method to check the type of the Command and distribute to the specific type of Command Handler.","lastModifiedDate":"2021-08-27"},{"lineNumber":267,"author":{"gitId":"Siddharth-Sid"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":268,"author":{"gitId":"Siddharth-Sid"},"content":"     * @param tasks The Object to contain the List of the Tasks","lastModifiedDate":"2021-08-27"},{"lineNumber":269,"author":{"gitId":"Siddharth-Sid"},"content":"     * @param storage The Object to save the List of the Tasks","lastModifiedDate":"2021-08-27"},{"lineNumber":270,"author":{"gitId":"Siddharth-Sid"},"content":"     * @throws DukeException An Exception class to be thrown if the command taskDetails is not valid","lastModifiedDate":"2021-08-27"},{"lineNumber":271,"author":{"gitId":"Siddharth-Sid"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":272,"author":{"gitId":"Siddharth-Sid"},"content":"    public String execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-10"},{"lineNumber":273,"author":{"gitId":"Siddharth-Sid"},"content":"        switch (typeOfCommand) {","lastModifiedDate":"2021-08-26"},{"lineNumber":274,"author":{"gitId":"Siddharth-Sid"},"content":"        case BYE:","lastModifiedDate":"2021-08-26"},{"lineNumber":275,"author":{"gitId":"Siddharth-Sid"},"content":"            storage.saveTaskList(tasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":276,"author":{"gitId":"Siddharth-Sid"},"content":"            return goodbye(taskDetails);","lastModifiedDate":"2021-09-10"},{"lineNumber":277,"author":{"gitId":"Siddharth-Sid"},"content":"        case DEADLINE:","lastModifiedDate":"2021-08-26"},{"lineNumber":278,"author":{"gitId":"Siddharth-Sid"},"content":"            return addDeadline(taskDetails, tasks);","lastModifiedDate":"2021-09-10"},{"lineNumber":279,"author":{"gitId":"Siddharth-Sid"},"content":"        case DELETE:","lastModifiedDate":"2021-08-26"},{"lineNumber":280,"author":{"gitId":"Siddharth-Sid"},"content":"            return deleteTask(taskDetails, tasks);","lastModifiedDate":"2021-09-10"},{"lineNumber":281,"author":{"gitId":"Siddharth-Sid"},"content":"        case DONE:","lastModifiedDate":"2021-08-26"},{"lineNumber":282,"author":{"gitId":"Siddharth-Sid"},"content":"            return markTaskAsCompleted(taskDetails, tasks);","lastModifiedDate":"2021-09-10"},{"lineNumber":283,"author":{"gitId":"Siddharth-Sid"},"content":"        case EVENT:","lastModifiedDate":"2021-08-26"},{"lineNumber":284,"author":{"gitId":"Siddharth-Sid"},"content":"            return addEvent(taskDetails, tasks);","lastModifiedDate":"2021-09-10"},{"lineNumber":285,"author":{"gitId":"Siddharth-Sid"},"content":"        case FIND:","lastModifiedDate":"2021-08-27"},{"lineNumber":286,"author":{"gitId":"Siddharth-Sid"},"content":"            return searchAndDisplayTaskList(taskDetails, tasks);","lastModifiedDate":"2021-09-10"},{"lineNumber":287,"author":{"gitId":"Siddharth-Sid"},"content":"        case LIST:","lastModifiedDate":"2021-08-26"},{"lineNumber":288,"author":{"gitId":"Siddharth-Sid"},"content":"            return displayTaskList(taskDetails, tasks);","lastModifiedDate":"2021-09-10"},{"lineNumber":289,"author":{"gitId":"Siddharth-Sid"},"content":"        case TODO:","lastModifiedDate":"2021-08-26"},{"lineNumber":290,"author":{"gitId":"Siddharth-Sid"},"content":"            return addTodo(taskDetails, tasks);","lastModifiedDate":"2021-09-10"},{"lineNumber":291,"author":{"gitId":"Siddharth-Sid"},"content":"        case UNKNOWN:","lastModifiedDate":"2021-08-26"},{"lineNumber":292,"author":{"gitId":"Siddharth-Sid"},"content":"        default:","lastModifiedDate":"2021-09-03"},{"lineNumber":293,"author":{"gitId":"Siddharth-Sid"},"content":"            throw new DukeException(\"OOPS! I\u0027m sorry, but I don\u0027t know that command\");","lastModifiedDate":"2021-08-26"},{"lineNumber":294,"author":{"gitId":"Siddharth-Sid"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":295,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":296,"author":{"gitId":"Siddharth-Sid"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"Siddharth-Sid":296}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Siddharth-Sid"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"Siddharth-Sid"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"Siddharth-Sid"},"content":" * Class to Abstract the Exceptions thrown by the Duke Classes","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"Siddharth-Sid"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"Siddharth-Sid"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"Siddharth-Sid"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"Siddharth-Sid"},"content":"     * Constructor for the Duke Exception class","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"Siddharth-Sid"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"Siddharth-Sid"},"content":"     * @param message The message to be displayed if the error is caught","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"Siddharth-Sid"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"Siddharth-Sid"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"Siddharth-Sid"},"content":"        super(message);","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"Siddharth-Sid"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"Siddharth-Sid"},"content":"     * Method to return the message of the Exception","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"Siddharth-Sid"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"Siddharth-Sid"},"content":"     * @return The message of the Exception","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"Siddharth-Sid"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"Siddharth-Sid"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"Siddharth-Sid"},"content":"    public String getMessage() {","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"Siddharth-Sid"},"content":"        return \"\" + super.getMessage();","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"Siddharth-Sid"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"Siddharth-Sid":25}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Siddharth-Sid"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"Siddharth-Sid"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"Siddharth-Sid"},"content":" * Class to abstract the Parsing of the Messages taken as input from the Duke","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"Siddharth-Sid"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"Siddharth-Sid"},"content":"public class Parser {","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"Siddharth-Sid"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"Siddharth-Sid"},"content":"     * Default Constructor for the Parse Class","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"Siddharth-Sid"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"Siddharth-Sid"},"content":"    public Parser() {","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"Siddharth-Sid"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"Siddharth-Sid"},"content":"     * Method to return the Type of Command parsed","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"Siddharth-Sid"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"Siddharth-Sid"},"content":"     * @param command The Command Passed for comparing to the different types of CommandTypes","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"Siddharth-Sid"},"content":"     * @return The Type of Command Received","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"Siddharth-Sid"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"Siddharth-Sid"},"content":"    private Command.CommandTypes getCommand(String command) {","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"Siddharth-Sid"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"Siddharth-Sid"},"content":"            if (command !\u003d null) {","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"Siddharth-Sid"},"content":"                return Command.CommandTypes.valueOf(command.toUpperCase());","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"Siddharth-Sid"},"content":"            } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"Siddharth-Sid"},"content":"                return Command.CommandTypes.UNKNOWN;","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"Siddharth-Sid"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"Siddharth-Sid"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"Siddharth-Sid"},"content":"            return Command.CommandTypes.UNKNOWN;","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"Siddharth-Sid"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"Siddharth-Sid"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"Siddharth-Sid"},"content":"     * Method to return the specific Command processed from the given from the Command String","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"Siddharth-Sid"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"Siddharth-Sid"},"content":"     * @param taskDescription The Command inputted as a String","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"Siddharth-Sid"},"content":"     * @return The specific Command in the given Command String","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"Siddharth-Sid"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"Siddharth-Sid"},"content":"    public Command parse(String taskDescription) {","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"Siddharth-Sid"},"content":"        if (taskDescription \u003d\u003d null || taskDescription.equals(\"\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"Siddharth-Sid"},"content":"            return new Command(Command.CommandTypes.UNKNOWN, \"\");","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"Siddharth-Sid"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"Siddharth-Sid"},"content":"            String taskObjective;","lastModifiedDate":"2021-09-03"},{"lineNumber":44,"author":{"gitId":"Siddharth-Sid"},"content":"            String taskDetails;","lastModifiedDate":"2021-09-03"},{"lineNumber":45,"author":{"gitId":"Siddharth-Sid"},"content":"            String[] task \u003d taskDescription.split(\" \", 2);","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"Siddharth-Sid"},"content":"            taskObjective \u003d task[0];","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"Siddharth-Sid"},"content":"            taskDetails \u003d task.length \u003e 1 ? task[1].trim() : \"\";","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"Siddharth-Sid"},"content":"            return new Command(getCommand(taskObjective), taskDetails);","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"Siddharth-Sid"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"Siddharth-Sid"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"Siddharth-Sid":51}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Siddharth-Sid"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"Siddharth-Sid"},"content":"import java.io.File;","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"Siddharth-Sid"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"Siddharth-Sid"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"Siddharth-Sid"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"Siddharth-Sid"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"Siddharth-Sid"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"Siddharth-Sid"},"content":"import java.util.List;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"Siddharth-Sid"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"Siddharth-Sid"},"content":"import duke.task.DeadlineTask;","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"Siddharth-Sid"},"content":"import duke.task.EventTask;","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"Siddharth-Sid"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"Siddharth-Sid"},"content":"import duke.task.ToDoTask;","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"Siddharth-Sid"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"Siddharth-Sid"},"content":" * Class to abstract the storing of commands","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"Siddharth-Sid"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"Siddharth-Sid"},"content":"public class Storage {","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"Siddharth-Sid"},"content":"    private File storageFile;","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"Siddharth-Sid"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"Siddharth-Sid"},"content":"     * Constructor for the Storage Class","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"Siddharth-Sid"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"Siddharth-Sid"},"content":"     * @param filePath The path of the file","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"Siddharth-Sid"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"Siddharth-Sid"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"Siddharth-Sid"},"content":"        if (filePath !\u003d null) {","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"Siddharth-Sid"},"content":"            storageFile \u003d new File(filePath);","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"Siddharth-Sid"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"Siddharth-Sid"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"Siddharth-Sid"},"content":"     * Method to save the Task List in the File","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"Siddharth-Sid"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"Siddharth-Sid"},"content":"     * @param tasks The Task List of the Duke","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"Siddharth-Sid"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"Siddharth-Sid"},"content":"    public void saveTaskList(TaskList tasks) {","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"Siddharth-Sid"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"Siddharth-Sid"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"Siddharth-Sid"},"content":"            File dir \u003d new File(\"data\");","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"Siddharth-Sid"},"content":"            boolean isDeleted \u003d false;","lastModifiedDate":"2021-09-03"},{"lineNumber":44,"author":{"gitId":"Siddharth-Sid"},"content":"            boolean isCreated \u003d false;","lastModifiedDate":"2021-09-03"},{"lineNumber":45,"author":{"gitId":"Siddharth-Sid"},"content":"            boolean isDirectory \u003d dir.mkdirs();","lastModifiedDate":"2021-09-03"},{"lineNumber":46,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":47,"author":{"gitId":"Siddharth-Sid"},"content":"            File data \u003d new File(dir, \"duke.txt\");","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"Siddharth-Sid"},"content":"            if (isDirectory \u0026\u0026 data.exists()) {","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"Siddharth-Sid"},"content":"                isDeleted \u003d data.delete();","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"Siddharth-Sid"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"Siddharth-Sid"},"content":"            if (isDeleted) {","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"Siddharth-Sid"},"content":"                isCreated \u003d data.createNewFile();","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"Siddharth-Sid"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"Siddharth-Sid"},"content":"            if (isCreated) {","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"Siddharth-Sid"},"content":"                FileWriter storeData \u003d new FileWriter(data);","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"Siddharth-Sid"},"content":"                Task task;","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"Siddharth-Sid"},"content":"                for (int i \u003d 0; i \u003c tasks.getTaskListLength(); i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"Siddharth-Sid"},"content":"                    task \u003d tasks.getTask(i);","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"Siddharth-Sid"},"content":"                    if (task instanceof DeadlineTask) {","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"Siddharth-Sid"},"content":"                        DeadlineTask deadline \u003d (DeadlineTask) task;","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"Siddharth-Sid"},"content":"                        storeData.write(deadline.writeToFile());","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"Siddharth-Sid"},"content":"                    } else if (task instanceof EventTask) {","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"Siddharth-Sid"},"content":"                        EventTask event \u003d (EventTask) task;","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"Siddharth-Sid"},"content":"                        storeData.write(event.writeToFile());","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"Siddharth-Sid"},"content":"                    } else if (task instanceof ToDoTask) {","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"Siddharth-Sid"},"content":"                        ToDoTask todo \u003d (ToDoTask) task;","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"Siddharth-Sid"},"content":"                        storeData.write(todo.writeToFile());","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"Siddharth-Sid"},"content":"                    }","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"Siddharth-Sid"},"content":"                }","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"Siddharth-Sid"},"content":"                storeData.close();","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"Siddharth-Sid"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":72,"author":{"gitId":"Siddharth-Sid"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"Siddharth-Sid"},"content":"            File deletedFile \u003d new File(\"data/duke.txt\");","lastModifiedDate":"2021-08-27"},{"lineNumber":74,"author":{"gitId":"Siddharth-Sid"},"content":"            boolean isDeleted \u003d deletedFile.delete();","lastModifiedDate":"2021-09-03"},{"lineNumber":75,"author":{"gitId":"Siddharth-Sid"},"content":"            boolean shouldShow \u003d false;","lastModifiedDate":"2021-09-03"},{"lineNumber":76,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":77,"author":{"gitId":"Siddharth-Sid"},"content":"            if (isDeleted) {","lastModifiedDate":"2021-08-27"},{"lineNumber":78,"author":{"gitId":"Siddharth-Sid"},"content":"                shouldShow \u003d deletedFile.exists();","lastModifiedDate":"2021-08-27"},{"lineNumber":79,"author":{"gitId":"Siddharth-Sid"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":80,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":81,"author":{"gitId":"Siddharth-Sid"},"content":"            if (shouldShow) {","lastModifiedDate":"2021-08-27"},{"lineNumber":82,"author":{"gitId":"Siddharth-Sid"},"content":"                return;","lastModifiedDate":"2021-09-10"},{"lineNumber":83,"author":{"gitId":"Siddharth-Sid"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":84,"author":{"gitId":"Siddharth-Sid"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"Siddharth-Sid"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":88,"author":{"gitId":"Siddharth-Sid"},"content":"     * Method to return the Type of Command to be stored","lastModifiedDate":"2021-08-27"},{"lineNumber":89,"author":{"gitId":"Siddharth-Sid"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":90,"author":{"gitId":"Siddharth-Sid"},"content":"     * @param command The Command Passed for comparing to the different types of CommandTypes","lastModifiedDate":"2021-09-19"},{"lineNumber":91,"author":{"gitId":"Siddharth-Sid"},"content":"     * @return The Type of Command Received","lastModifiedDate":"2021-08-27"},{"lineNumber":92,"author":{"gitId":"Siddharth-Sid"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":93,"author":{"gitId":"Siddharth-Sid"},"content":"    public Command.CommandTypes getCommand(String command) {","lastModifiedDate":"2021-09-19"},{"lineNumber":94,"author":{"gitId":"Siddharth-Sid"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"Siddharth-Sid"},"content":"            if (command !\u003d null) {","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"Siddharth-Sid"},"content":"                return Command.CommandTypes.valueOf(command.toUpperCase());","lastModifiedDate":"2021-09-19"},{"lineNumber":97,"author":{"gitId":"Siddharth-Sid"},"content":"            } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"Siddharth-Sid"},"content":"                return Command.CommandTypes.UNKNOWN;","lastModifiedDate":"2021-09-19"},{"lineNumber":99,"author":{"gitId":"Siddharth-Sid"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"Siddharth-Sid"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"Siddharth-Sid"},"content":"            return Command.CommandTypes.UNKNOWN;","lastModifiedDate":"2021-09-19"},{"lineNumber":102,"author":{"gitId":"Siddharth-Sid"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":104,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":105,"author":{"gitId":"Siddharth-Sid"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":106,"author":{"gitId":"Siddharth-Sid"},"content":"     * Method to get the List of Tasks stored in the file","lastModifiedDate":"2021-08-27"},{"lineNumber":107,"author":{"gitId":"Siddharth-Sid"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":108,"author":{"gitId":"Siddharth-Sid"},"content":"     * @return A list of Tasks which are stored in the file","lastModifiedDate":"2021-08-27"},{"lineNumber":109,"author":{"gitId":"Siddharth-Sid"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":110,"author":{"gitId":"Siddharth-Sid"},"content":"    public List\u003cTask\u003e load() {","lastModifiedDate":"2021-08-26"},{"lineNumber":111,"author":{"gitId":"Siddharth-Sid"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":112,"author":{"gitId":"Siddharth-Sid"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":113,"author":{"gitId":"Siddharth-Sid"},"content":"            Scanner dataInput \u003d new Scanner(storageFile);","lastModifiedDate":"2021-08-26"},{"lineNumber":114,"author":{"gitId":"Siddharth-Sid"},"content":"            String[] data;","lastModifiedDate":"2021-08-26"},{"lineNumber":115,"author":{"gitId":"Siddharth-Sid"},"content":"            while (dataInput.hasNextLine()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":116,"author":{"gitId":"Siddharth-Sid"},"content":"                try {","lastModifiedDate":"2021-08-26"},{"lineNumber":117,"author":{"gitId":"Siddharth-Sid"},"content":"                    data \u003d dataInput.nextLine().split(\" [|] \");","lastModifiedDate":"2021-08-26"},{"lineNumber":118,"author":{"gitId":"Siddharth-Sid"},"content":"                    switch (getCommand(data[0])) {","lastModifiedDate":"2021-08-26"},{"lineNumber":119,"author":{"gitId":"Siddharth-Sid"},"content":"                    case DEADLINE:","lastModifiedDate":"2021-08-26"},{"lineNumber":120,"author":{"gitId":"Siddharth-Sid"},"content":"                        if (data.length !\u003d 4) {","lastModifiedDate":"2021-08-26"},{"lineNumber":121,"author":{"gitId":"Siddharth-Sid"},"content":"                            continue;","lastModifiedDate":"2021-08-26"},{"lineNumber":122,"author":{"gitId":"Siddharth-Sid"},"content":"                        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":123,"author":{"gitId":"Siddharth-Sid"},"content":"                            DeadlineTask deadline \u003d new DeadlineTask(data[1], data[2], data[3]);","lastModifiedDate":"2021-08-26"},{"lineNumber":124,"author":{"gitId":"Siddharth-Sid"},"content":"                            taskList.add(deadline);","lastModifiedDate":"2021-08-26"},{"lineNumber":125,"author":{"gitId":"Siddharth-Sid"},"content":"                        }","lastModifiedDate":"2021-08-26"},{"lineNumber":126,"author":{"gitId":"Siddharth-Sid"},"content":"                        break;","lastModifiedDate":"2021-08-26"},{"lineNumber":127,"author":{"gitId":"Siddharth-Sid"},"content":"                    case EVENT:","lastModifiedDate":"2021-08-26"},{"lineNumber":128,"author":{"gitId":"Siddharth-Sid"},"content":"                        if (data.length !\u003d 4) {","lastModifiedDate":"2021-08-26"},{"lineNumber":129,"author":{"gitId":"Siddharth-Sid"},"content":"                            continue;","lastModifiedDate":"2021-08-26"},{"lineNumber":130,"author":{"gitId":"Siddharth-Sid"},"content":"                        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":131,"author":{"gitId":"Siddharth-Sid"},"content":"                            EventTask event \u003d new EventTask(data[1], data[2], data[3]);","lastModifiedDate":"2021-08-26"},{"lineNumber":132,"author":{"gitId":"Siddharth-Sid"},"content":"                            taskList.add(event);","lastModifiedDate":"2021-08-26"},{"lineNumber":133,"author":{"gitId":"Siddharth-Sid"},"content":"                        }","lastModifiedDate":"2021-08-26"},{"lineNumber":134,"author":{"gitId":"Siddharth-Sid"},"content":"                        break;","lastModifiedDate":"2021-08-26"},{"lineNumber":135,"author":{"gitId":"Siddharth-Sid"},"content":"                    case TODO:","lastModifiedDate":"2021-08-26"},{"lineNumber":136,"author":{"gitId":"Siddharth-Sid"},"content":"                        if (data.length !\u003d 3) {","lastModifiedDate":"2021-08-26"},{"lineNumber":137,"author":{"gitId":"Siddharth-Sid"},"content":"                            continue;","lastModifiedDate":"2021-08-26"},{"lineNumber":138,"author":{"gitId":"Siddharth-Sid"},"content":"                        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":139,"author":{"gitId":"Siddharth-Sid"},"content":"                            ToDoTask todo \u003d new ToDoTask(data[1], data[2]);","lastModifiedDate":"2021-08-26"},{"lineNumber":140,"author":{"gitId":"Siddharth-Sid"},"content":"                            taskList.add(todo);","lastModifiedDate":"2021-08-26"},{"lineNumber":141,"author":{"gitId":"Siddharth-Sid"},"content":"                        }","lastModifiedDate":"2021-08-26"},{"lineNumber":142,"author":{"gitId":"Siddharth-Sid"},"content":"                        break;","lastModifiedDate":"2021-08-26"},{"lineNumber":143,"author":{"gitId":"Siddharth-Sid"},"content":"                    case UNKNOWN:","lastModifiedDate":"2021-08-26"},{"lineNumber":144,"author":{"gitId":"Siddharth-Sid"},"content":"                    default:","lastModifiedDate":"2021-09-03"},{"lineNumber":145,"author":{"gitId":"Siddharth-Sid"},"content":"                    }","lastModifiedDate":"2021-08-26"},{"lineNumber":146,"author":{"gitId":"Siddharth-Sid"},"content":"                } catch (DateTimeParseException ignored) {","lastModifiedDate":"2021-08-26"},{"lineNumber":147,"author":{"gitId":"Siddharth-Sid"},"content":"                    ignored.getMessage();","lastModifiedDate":"2021-09-03"},{"lineNumber":148,"author":{"gitId":"Siddharth-Sid"},"content":"                }","lastModifiedDate":"2021-08-26"},{"lineNumber":149,"author":{"gitId":"Siddharth-Sid"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":150,"author":{"gitId":"Siddharth-Sid"},"content":"        } catch (FileNotFoundException ignored) {","lastModifiedDate":"2021-08-26"},{"lineNumber":151,"author":{"gitId":"Siddharth-Sid"},"content":"            ignored.getMessage();","lastModifiedDate":"2021-09-03"},{"lineNumber":152,"author":{"gitId":"Siddharth-Sid"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":153,"author":{"gitId":"Siddharth-Sid"},"content":"        return taskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":154,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":155,"author":{"gitId":"Siddharth-Sid"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"Siddharth-Sid":155}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Siddharth-Sid"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"Siddharth-Sid"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"Siddharth-Sid"},"content":"import java.util.List;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"Siddharth-Sid"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"Siddharth-Sid"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"Siddharth-Sid"},"content":" * Class to abstract the List of the Tasks","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"Siddharth-Sid"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"Siddharth-Sid"},"content":"public class TaskList {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"Siddharth-Sid"},"content":"    private final List\u003cTask\u003e taskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"Siddharth-Sid"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"Siddharth-Sid"},"content":"     * Constructor to initialize the Task List","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"Siddharth-Sid"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"Siddharth-Sid"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"Siddharth-Sid"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"Siddharth-Sid"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"Siddharth-Sid"},"content":"     * Constructor to initialize the Task List","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"Siddharth-Sid"},"content":"     * @param storedTasks The Tasks initially Stored in the Duke","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"Siddharth-Sid"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"Siddharth-Sid"},"content":"    public TaskList(List\u003cTask\u003e storedTasks) {","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"Siddharth-Sid"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"Siddharth-Sid"},"content":"        taskList.addAll(storedTasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"Siddharth-Sid"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"Siddharth-Sid"},"content":"     * Method to add a Task to the Task List","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"Siddharth-Sid"},"content":"     * @param task The Task to be added in the Task List","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"Siddharth-Sid"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"Siddharth-Sid"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"Siddharth-Sid"},"content":"        taskList.add(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"Siddharth-Sid"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"Siddharth-Sid"},"content":"     * Method to return the deleted Task at the specified index","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"Siddharth-Sid"},"content":"     * @param index The Index of the Task to be deleted","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"Siddharth-Sid"},"content":"     * @return The deleted Task which was initially at the given Index","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"Siddharth-Sid"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"Siddharth-Sid"},"content":"    public Task deleteTaskAtIndex(int index) {","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"Siddharth-Sid"},"content":"        return taskList.remove(index);","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"Siddharth-Sid"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"Siddharth-Sid"},"content":"     * Method to return the Task at the specified Index","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"Siddharth-Sid"},"content":"     * @param index The Index of the Task to be returned","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"Siddharth-Sid"},"content":"     * @return The Task at the specified Index","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"Siddharth-Sid"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"Siddharth-Sid"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"Siddharth-Sid"},"content":"        return taskList.get(index);","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"Siddharth-Sid"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"Siddharth-Sid"},"content":"     * Method to return the number of Tasks in the Task List","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"Siddharth-Sid"},"content":"     * @return The number of Tasks in the Task List","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"Siddharth-Sid"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"Siddharth-Sid"},"content":"    public int getTaskListLength() {","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"Siddharth-Sid"},"content":"        return taskList.size();","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"Siddharth-Sid"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":65,"author":{"gitId":"Siddharth-Sid"},"content":"     * Method to Mark the Task at the specified Index as Complete","lastModifiedDate":"2021-08-27"},{"lineNumber":66,"author":{"gitId":"Siddharth-Sid"},"content":"     * @param index The Index of the Task to be Marked as Complete","lastModifiedDate":"2021-08-27"},{"lineNumber":67,"author":{"gitId":"Siddharth-Sid"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":68,"author":{"gitId":"Siddharth-Sid"},"content":"    public void completeTask(int index) {","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"Siddharth-Sid"},"content":"        taskList.get(index).markAsCompleted();","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":72,"author":{"gitId":"Siddharth-Sid"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":73,"author":{"gitId":"Siddharth-Sid"},"content":"     * Method to find all the tasks of with the given search String","lastModifiedDate":"2021-09-19"},{"lineNumber":74,"author":{"gitId":"Siddharth-Sid"},"content":"     * @param description The String to be searched","lastModifiedDate":"2021-09-19"},{"lineNumber":75,"author":{"gitId":"Siddharth-Sid"},"content":"     * @return A list of tasks having the given search String","lastModifiedDate":"2021-09-19"},{"lineNumber":76,"author":{"gitId":"Siddharth-Sid"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":77,"author":{"gitId":"Siddharth-Sid"},"content":"    public TaskList searchTaskList(String description) {","lastModifiedDate":"2021-08-27"},{"lineNumber":78,"author":{"gitId":"Siddharth-Sid"},"content":"        TaskList matchingTasks \u003d new TaskList();","lastModifiedDate":"2021-08-27"},{"lineNumber":79,"author":{"gitId":"Siddharth-Sid"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2021-08-27"},{"lineNumber":80,"author":{"gitId":"Siddharth-Sid"},"content":"            System.out.println(task);","lastModifiedDate":"2021-09-19"},{"lineNumber":81,"author":{"gitId":"Siddharth-Sid"},"content":"            if (task.getDescription().contains(description)) {","lastModifiedDate":"2021-08-27"},{"lineNumber":82,"author":{"gitId":"Siddharth-Sid"},"content":"                matchingTasks.addTask(task);","lastModifiedDate":"2021-08-27"},{"lineNumber":83,"author":{"gitId":"Siddharth-Sid"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":84,"author":{"gitId":"Siddharth-Sid"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":85,"author":{"gitId":"Siddharth-Sid"},"content":"        return matchingTasks;","lastModifiedDate":"2021-08-27"},{"lineNumber":86,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":87,"author":{"gitId":"Siddharth-Sid"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"Siddharth-Sid":87}},{"path":"src/main/java/duke/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Siddharth-Sid"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"Siddharth-Sid"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"Siddharth-Sid"},"content":" * Class to abstract the rendering of the UI of the Duke","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"Siddharth-Sid"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"Siddharth-Sid"},"content":"public class UI {","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"Siddharth-Sid"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"Siddharth-Sid"},"content":"     * Method to return a String with all the Tasks in the Task List","lastModifiedDate":"2021-09-10"},{"lineNumber":10,"author":{"gitId":"Siddharth-Sid"},"content":"     * @param taskList The List of Tasks in Duke","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"Siddharth-Sid"},"content":"     * @return The String equivalent of all the Task List","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"Siddharth-Sid"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"Siddharth-Sid"},"content":"    public String printTaskList(TaskList taskList) throws DukeException {","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"Siddharth-Sid"},"content":"        String output \u003d \"\";","lastModifiedDate":"2021-09-10"},{"lineNumber":15,"author":{"gitId":"Siddharth-Sid"},"content":"        if ((taskList !\u003d null) \u0026\u0026 (taskList.getTaskListLength() \u003e 0)) {","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"Siddharth-Sid"},"content":"            output +\u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2021-09-10"},{"lineNumber":17,"author":{"gitId":"Siddharth-Sid"},"content":"            for (int i \u003d 0; i \u003c taskList.getTaskListLength(); i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"Siddharth-Sid"},"content":"                output +\u003d (i + 1) + \".\" + taskList.getTask(i) + \"\\n\";","lastModifiedDate":"2021-09-10"},{"lineNumber":19,"author":{"gitId":"Siddharth-Sid"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"Siddharth-Sid"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"Siddharth-Sid"},"content":"            throw new DukeException(\"The Task List is Empty\");","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"Siddharth-Sid"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"Siddharth-Sid"},"content":"        return output;","lastModifiedDate":"2021-09-10"},{"lineNumber":24,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"Siddharth-Sid"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"Siddharth-Sid":25}},{"path":"src/main/java/duke/task/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Siddharth-Sid"},"content":"package duke.task;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"Siddharth-Sid"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Siddharth-Sid"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"Siddharth-Sid"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"Siddharth-Sid"},"content":"    private final LocalDateTime deadline;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"Siddharth-Sid"},"content":"    public DeadlineTask(String description, String deadline) {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Siddharth-Sid"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"Siddharth-Sid"},"content":"        this.deadline \u003d LocalDateTime.parse(deadline, DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"Siddharth-Sid"},"content":"    public DeadlineTask(String isCompleted, String description, String deadline) {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"Siddharth-Sid"},"content":"        super(isCompleted, description);","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"Siddharth-Sid"},"content":"        this.deadline \u003d LocalDateTime.parse(deadline, DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"Siddharth-Sid"},"content":"    public String getDeadline() {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"Siddharth-Sid"},"content":"        return this.deadline.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"Siddharth-Sid"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"Siddharth-Sid"},"content":"    public String writeToFile() {","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"Siddharth-Sid"},"content":"        return String.format(\"DEADLINE | %s | %s | %s\\n\", getIsCompleted(), getDescription(), getDeadline());","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"Siddharth-Sid"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"Siddharth-Sid"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"Siddharth-Sid"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + deadline.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy, HH:mm\"))","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"Siddharth-Sid"},"content":"                + \")\";","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"Siddharth-Sid"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"Siddharth-Sid":32}},{"path":"src/main/java/duke/task/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Siddharth-Sid"},"content":"package duke.task;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"Siddharth-Sid"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Siddharth-Sid"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"Siddharth-Sid"},"content":"public class EventTask extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"Siddharth-Sid"},"content":"    private final LocalDateTime details;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"Siddharth-Sid"},"content":"    public EventTask(String description, String details) {","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Siddharth-Sid"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"Siddharth-Sid"},"content":"        this.details \u003d LocalDateTime.parse(details, DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"Siddharth-Sid"},"content":"    public EventTask(String isCompleted, String description, String details) {","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"Siddharth-Sid"},"content":"        super(isCompleted, description);","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"Siddharth-Sid"},"content":"        this.details \u003d LocalDateTime.parse(details, DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"Siddharth-Sid"},"content":"    public String getDetails() {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"Siddharth-Sid"},"content":"        return this.details.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"Siddharth-Sid"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"Siddharth-Sid"},"content":"    public String writeToFile() {","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"Siddharth-Sid"},"content":"        return String.format(\"EVENT | %s | %s | %s\\n\", getIsCompleted(), getDescription(), getDetails());","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"Siddharth-Sid"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"Siddharth-Sid"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"Siddharth-Sid"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + details.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy, HH:mm\"))","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"Siddharth-Sid"},"content":"                + \")\";","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"Siddharth-Sid"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"Siddharth-Sid":32}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Siddharth-Sid"},"content":"package duke.task;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"Siddharth-Sid"},"content":"public class Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"Siddharth-Sid"},"content":"    private final String description;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"Siddharth-Sid"},"content":"    private boolean isCompleted;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"Siddharth-Sid"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"Siddharth-Sid"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"Siddharth-Sid"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"Siddharth-Sid"},"content":"    public Task(String isCompleted, String description) {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"Siddharth-Sid"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"Siddharth-Sid"},"content":"        if (isCompleted !\u003d null) {","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"Siddharth-Sid"},"content":"            this.isCompleted \u003d isCompleted.equals(\"1\");","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"Siddharth-Sid"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"Siddharth-Sid"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"Siddharth-Sid"},"content":"        return this.description;","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"Siddharth-Sid"},"content":"    public String getIsCompleted() {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"Siddharth-Sid"},"content":"        return this.isCompleted ? \"1\" : \"0\";","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"Siddharth-Sid"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"Siddharth-Sid"},"content":"        return (isCompleted ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"Siddharth-Sid"},"content":"    public void markAsCompleted() {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"Siddharth-Sid"},"content":"        this.isCompleted \u003d true;","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"Siddharth-Sid"},"content":"    public String writeToFile() {","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"Siddharth-Sid"},"content":"        return String.format(\"TASK | %s | %s\\n\", getIsCompleted(), getDescription());","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"Siddharth-Sid"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"Siddharth-Sid"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"Siddharth-Sid"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.getDescription());","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"Siddharth-Sid"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"Siddharth-Sid":42}},{"path":"src/main/java/duke/task/ToDoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Siddharth-Sid"},"content":"package duke.task;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"Siddharth-Sid"},"content":"public class ToDoTask extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"Siddharth-Sid"},"content":"    public ToDoTask(String description) {","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"Siddharth-Sid"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"Siddharth-Sid"},"content":"    public ToDoTask(String isCompleted, String description) {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Siddharth-Sid"},"content":"        super(isCompleted, description);","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"Siddharth-Sid"},"content":"    public String writeToFile() {","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"Siddharth-Sid"},"content":"        return String.format(\"TODO | %s | %s\\n\", getIsCompleted(), getDescription());","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"Siddharth-Sid"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"Siddharth-Sid"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"Siddharth-Sid"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"Siddharth-Sid"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"Siddharth-Sid":20}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Siddharth-Sid"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":3,"author":{"gitId":"Siddharth-Sid"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"Siddharth-Sid"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"Siddharth-Sid"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":6,"author":{"gitId":"Siddharth-Sid"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":7,"author":{"gitId":"Siddharth-Sid"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"Siddharth-Sid"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"Infinity\" type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"Siddharth-Sid"},"content":"         xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"Siddharth-Sid"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"Siddharth-Sid"},"content":"        \u003cLabel fx:id\u003d\"dialog\" styleClass\u003d\"dialog-box\" text\u003d\"Label\" wrapText\u003d\"true\" maxWidth\u003d\"Infinity\"","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"Siddharth-Sid"},"content":"               maxHeight\u003d\"Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"Siddharth-Sid"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":15,"author":{"gitId":"Siddharth-Sid"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":16,"author":{"gitId":"Siddharth-Sid"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":17,"author":{"gitId":"Siddharth-Sid"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":18,"author":{"gitId":"Siddharth-Sid"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":19,"author":{"gitId":"Siddharth-Sid"},"content":"    \u003cstylesheets\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"Siddharth-Sid"},"content":"        \u003cURL value\u003d\"@../viewStyle/index.css\"/\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"Siddharth-Sid"},"content":"    \u003c/stylesheets\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"Siddharth-Sid"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-10"}],"authorContributionMap":{"Siddharth-Sid":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Siddharth-Sid"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":3,"author":{"gitId":"Siddharth-Sid"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"Siddharth-Sid"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"Siddharth-Sid"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":6,"author":{"gitId":"Siddharth-Sid"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":7,"author":{"gitId":"Siddharth-Sid"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":8,"author":{"gitId":"Siddharth-Sid"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":10,"author":{"gitId":"Siddharth-Sid"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"700.0\"","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"Siddharth-Sid"},"content":"            prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"Siddharth-Sid"},"content":"            fx:controller\u003d\"MainWindow\"\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"Siddharth-Sid"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":14,"author":{"gitId":"Siddharth-Sid"},"content":"        \u003cTextField fx:id\u003d\"userInput\" styleClass\u003d\"text-field\" layoutY\u003d\"659.0\" onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"Siddharth-Sid"},"content":"                   prefHeight\u003d\"41.0\" prefWidth\u003d\"524.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"Siddharth-Sid"},"content":"        \u003cButton fx:id\u003d\"sendButton\" styleClass\u003d\"send-button\" layoutX\u003d\"524.0\" layoutY\u003d\"659.0\" mnemonicParsing\u003d\"false\"","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"Siddharth-Sid"},"content":"                onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"Siddharth-Sid"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"657.0\" prefWidth\u003d\"600.0\"","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"Siddharth-Sid"},"content":"                    vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"Siddharth-Sid"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":21,"author":{"gitId":"Siddharth-Sid"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" styleClass\u003d\"background\" prefHeight\u003d\"659.0\" prefWidth\u003d\"588.0\" /\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"Siddharth-Sid"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":23,"author":{"gitId":"Siddharth-Sid"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":24,"author":{"gitId":"Siddharth-Sid"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":25,"author":{"gitId":"Siddharth-Sid"},"content":"    \u003cstylesheets\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"Siddharth-Sid"},"content":"        \u003cURL value\u003d\"@../viewStyle/index.css\"/\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"Siddharth-Sid"},"content":"    \u003c/stylesheets\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"Siddharth-Sid"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-10"}],"authorContributionMap":{"Siddharth-Sid":28}},{"path":"src/test/java/duke/CommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Siddharth-Sid"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"Siddharth-Sid"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"Siddharth-Sid"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"Siddharth-Sid"},"content":"import duke.task.EventTask;","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"Siddharth-Sid"},"content":"import duke.task.ToDoTask;","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"Siddharth-Sid"},"content":"public class CommandTest {","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"Siddharth-Sid"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"Siddharth-Sid"},"content":"    public void textTest_commandBye_correctOutput() {","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"Siddharth-Sid"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"Siddharth-Sid"},"content":"            assertEquals(new Command(Command.CommandTypes.BYE, \"\").execute(new TaskList(),","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"Siddharth-Sid"},"content":"                    new Storage(\"data/duke.txt\")), \"Bye. Hope to see you again soon! \\\\_(\\\"v\\\")_/\");","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"Siddharth-Sid"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"Siddharth-Sid"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"Siddharth-Sid"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"Siddharth-Sid"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"Siddharth-Sid"},"content":"    public void textTest_commandDeadline_correctOutput() {","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"Siddharth-Sid"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"Siddharth-Sid"},"content":"            assertEquals(new Command(Command.CommandTypes.DEADLINE, \"Return The Da Vinci Code /by 25/08/2000\"","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"Siddharth-Sid"},"content":"                    + \" 2359\").execute(new TaskList(), new Storage(\"data/duke.txt\")), \"Got it. I\u0027ve added \"","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"Siddharth-Sid"},"content":"                    + \"this task:\\n  [D][ ] Return The Da Vinci Code (by: Aug 25 2000, 23:59)\\n\"","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"Siddharth-Sid"},"content":"                    + \"Now you have 1 tasks in the list.\");","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"Siddharth-Sid"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"Siddharth-Sid"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"Siddharth-Sid"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"Siddharth-Sid"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"Siddharth-Sid"},"content":"    public void textTest_commandDelete_correctOutput() {","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"Siddharth-Sid"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"Siddharth-Sid"},"content":"        tasks.addTask(new ToDoTask(\"Go to the Bookstore\"));","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"Siddharth-Sid"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"Siddharth-Sid"},"content":"            assertEquals(new Command(Command.CommandTypes.DELETE, \"1\").execute(tasks, new Storage(","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"Siddharth-Sid"},"content":"                    \"data/duke.txt\")), \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"Siddharth-Sid"},"content":"                    + \"  [T][ ] Go to the Bookstore\");","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"Siddharth-Sid"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"Siddharth-Sid"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"Siddharth-Sid"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"Siddharth-Sid"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"Siddharth-Sid"},"content":"    public void textTest_commandDone_correctOutput() {","lastModifiedDate":"2021-09-19"},{"lineNumber":48,"author":{"gitId":"Siddharth-Sid"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-09-19"},{"lineNumber":49,"author":{"gitId":"Siddharth-Sid"},"content":"        tasks.addTask(new ToDoTask(\"Go to the Bookstore\"));","lastModifiedDate":"2021-09-19"},{"lineNumber":50,"author":{"gitId":"Siddharth-Sid"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":51,"author":{"gitId":"Siddharth-Sid"},"content":"            assertEquals(new Command(Command.CommandTypes.DONE, \"1\").execute(tasks, new Storage(","lastModifiedDate":"2021-09-19"},{"lineNumber":52,"author":{"gitId":"Siddharth-Sid"},"content":"                    \"data/duke.txt\")), \"Nice! I\u0027ve marked this task \"","lastModifiedDate":"2021-09-19"},{"lineNumber":53,"author":{"gitId":"Siddharth-Sid"},"content":"                    + \"as done:\\n  [T][X] Go to the Bookstore\");","lastModifiedDate":"2021-09-19"},{"lineNumber":54,"author":{"gitId":"Siddharth-Sid"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":55,"author":{"gitId":"Siddharth-Sid"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-09-19"},{"lineNumber":56,"author":{"gitId":"Siddharth-Sid"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":57,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"Siddharth-Sid"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"Siddharth-Sid"},"content":"    public void textTest_commandEvent_correctOutput() {","lastModifiedDate":"2021-09-19"},{"lineNumber":61,"author":{"gitId":"Siddharth-Sid"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":62,"author":{"gitId":"Siddharth-Sid"},"content":"            assertEquals(new Command(Command.CommandTypes.EVENT, \"Abhishek\u0027s Wedding /at 01/09/2000 1800\")","lastModifiedDate":"2021-09-19"},{"lineNumber":63,"author":{"gitId":"Siddharth-Sid"},"content":"                    .execute(new TaskList(), new Storage(\"data/duke.txt\")), \"Got it. I\u0027ve added \"","lastModifiedDate":"2021-09-19"},{"lineNumber":64,"author":{"gitId":"Siddharth-Sid"},"content":"                    + \"this task:\\n  [E][ ] Abhishek\u0027s Wedding (at: Sep 01 2000, 18:00)\\nNow you have 1 tasks in the\"","lastModifiedDate":"2021-09-19"},{"lineNumber":65,"author":{"gitId":"Siddharth-Sid"},"content":"                    + \" list.\");","lastModifiedDate":"2021-09-19"},{"lineNumber":66,"author":{"gitId":"Siddharth-Sid"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":67,"author":{"gitId":"Siddharth-Sid"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-09-19"},{"lineNumber":68,"author":{"gitId":"Siddharth-Sid"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":69,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":70,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":71,"author":{"gitId":"Siddharth-Sid"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":72,"author":{"gitId":"Siddharth-Sid"},"content":"    public void textTest_commandFind_correctOutput() {","lastModifiedDate":"2021-09-19"},{"lineNumber":73,"author":{"gitId":"Siddharth-Sid"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-09-19"},{"lineNumber":74,"author":{"gitId":"Siddharth-Sid"},"content":"        tasks.addTask(new EventTask(\"Abhishek\u0027s Wedding\", \"01/09/2000 1800\"));","lastModifiedDate":"2021-09-19"},{"lineNumber":75,"author":{"gitId":"Siddharth-Sid"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":76,"author":{"gitId":"Siddharth-Sid"},"content":"            assertEquals(new Command(Command.CommandTypes.FIND, \"Abhishek\u0027s Wedding\")","lastModifiedDate":"2021-09-19"},{"lineNumber":77,"author":{"gitId":"Siddharth-Sid"},"content":"                    .execute(tasks, new Storage(\"data/duke.txt\")), \"Here are the tasks in your list:\\n\"","lastModifiedDate":"2021-09-19"},{"lineNumber":78,"author":{"gitId":"Siddharth-Sid"},"content":"                    + \"1.[E][ ] Abhishek\u0027s Wedding (at: Sep 01 2000, 18:00)\\n\");","lastModifiedDate":"2021-09-19"},{"lineNumber":79,"author":{"gitId":"Siddharth-Sid"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":80,"author":{"gitId":"Siddharth-Sid"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-09-19"},{"lineNumber":81,"author":{"gitId":"Siddharth-Sid"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":82,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":83,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":84,"author":{"gitId":"Siddharth-Sid"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":85,"author":{"gitId":"Siddharth-Sid"},"content":"    public void textTest_commandList_correctOutput() {","lastModifiedDate":"2021-09-19"},{"lineNumber":86,"author":{"gitId":"Siddharth-Sid"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-09-19"},{"lineNumber":87,"author":{"gitId":"Siddharth-Sid"},"content":"        tasks.addTask(new ToDoTask(\"Go to the Mall\"));","lastModifiedDate":"2021-09-19"},{"lineNumber":88,"author":{"gitId":"Siddharth-Sid"},"content":"        tasks.addTask(new ToDoTask(\"Go to the Bookstore\"));","lastModifiedDate":"2021-09-19"},{"lineNumber":89,"author":{"gitId":"Siddharth-Sid"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":90,"author":{"gitId":"Siddharth-Sid"},"content":"            assertEquals(new Command(Command.CommandTypes.LIST, \"\").execute(tasks, new Storage(","lastModifiedDate":"2021-09-19"},{"lineNumber":91,"author":{"gitId":"Siddharth-Sid"},"content":"                    \"data/duke.txt\")), \"Here are the tasks in your\"","lastModifiedDate":"2021-09-19"},{"lineNumber":92,"author":{"gitId":"Siddharth-Sid"},"content":"                    + \" list:\\n1.[T][ ] Go to the Mall\\n2.[T][ ] Go to the Bookstore\\n\");","lastModifiedDate":"2021-09-19"},{"lineNumber":93,"author":{"gitId":"Siddharth-Sid"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":94,"author":{"gitId":"Siddharth-Sid"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-09-19"},{"lineNumber":95,"author":{"gitId":"Siddharth-Sid"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":96,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":97,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":98,"author":{"gitId":"Siddharth-Sid"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":99,"author":{"gitId":"Siddharth-Sid"},"content":"    public void textTest_commandTodo_correctOutput() {","lastModifiedDate":"2021-09-19"},{"lineNumber":100,"author":{"gitId":"Siddharth-Sid"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":101,"author":{"gitId":"Siddharth-Sid"},"content":"            assertEquals(new Command(Command.CommandTypes.TODO, \"Go to the Bookstore\").execute(new TaskList(),","lastModifiedDate":"2021-09-19"},{"lineNumber":102,"author":{"gitId":"Siddharth-Sid"},"content":"                    new Storage(\"data/duke.txt\")), \"Got it. I\u0027ve added this task:\\n  [T][ ] Go to the \"","lastModifiedDate":"2021-09-19"},{"lineNumber":103,"author":{"gitId":"Siddharth-Sid"},"content":"                    + \"Bookstore\\nNow you have 1 tasks in the list.\");","lastModifiedDate":"2021-09-19"},{"lineNumber":104,"author":{"gitId":"Siddharth-Sid"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":105,"author":{"gitId":"Siddharth-Sid"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-09-19"},{"lineNumber":106,"author":{"gitId":"Siddharth-Sid"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":107,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":108,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":109,"author":{"gitId":"Siddharth-Sid"},"content":"    @Test","lastModifiedDate":"2021-09-19"},{"lineNumber":110,"author":{"gitId":"Siddharth-Sid"},"content":"    public void textTest_commandByeIncorrectInput_correctOutput() {","lastModifiedDate":"2021-09-19"},{"lineNumber":111,"author":{"gitId":"Siddharth-Sid"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":112,"author":{"gitId":"Siddharth-Sid"},"content":"            assertEquals(new Command(Command.CommandTypes.BYE, \"IncorrectInput\").execute(new TaskList(),","lastModifiedDate":"2021-09-19"},{"lineNumber":113,"author":{"gitId":"Siddharth-Sid"},"content":"                    new Storage(\"data/duke.txt\")), \"Bye. Hope to see you again soon! \\\\_(\\\"v\\\")_/\");","lastModifiedDate":"2021-09-19"},{"lineNumber":114,"author":{"gitId":"Siddharth-Sid"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":115,"author":{"gitId":"Siddharth-Sid"},"content":"            assertEquals(e.getMessage(), \"OOPS! I\u0027m sorry, but I don\u0027t know that command\");","lastModifiedDate":"2021-09-19"},{"lineNumber":116,"author":{"gitId":"Siddharth-Sid"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":117,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":118,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":119,"author":{"gitId":"Siddharth-Sid"},"content":"    @Test","lastModifiedDate":"2021-09-19"},{"lineNumber":120,"author":{"gitId":"Siddharth-Sid"},"content":"    public void textTest_commandDeadlineIncorrectInput_correctOutput() {","lastModifiedDate":"2021-09-19"},{"lineNumber":121,"author":{"gitId":"Siddharth-Sid"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":122,"author":{"gitId":"Siddharth-Sid"},"content":"            assertEquals(new Command(Command.CommandTypes.DEADLINE, \"\").execute(new TaskList(),","lastModifiedDate":"2021-09-19"},{"lineNumber":123,"author":{"gitId":"Siddharth-Sid"},"content":"                    new Storage(\"data/duke.txt\")), \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2021-09-19"},{"lineNumber":124,"author":{"gitId":"Siddharth-Sid"},"content":"                    + \"  [D][ ] Return The Da Vinci Code (by: Aug 25 2000, 23:59)\\nNow you have 1 tasks in the list.\");","lastModifiedDate":"2021-09-19"},{"lineNumber":125,"author":{"gitId":"Siddharth-Sid"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":126,"author":{"gitId":"Siddharth-Sid"},"content":"            assertEquals(e.getMessage(), \"Incorrect Format of the Deadline Command!!, \\nCorrect Format --\u003e \"","lastModifiedDate":"2021-09-19"},{"lineNumber":127,"author":{"gitId":"Siddharth-Sid"},"content":"                    + \"deadline \u003cDescription\u003e /by \u003cdd/MM/yyyy HHmm\u003e\");","lastModifiedDate":"2021-09-19"},{"lineNumber":128,"author":{"gitId":"Siddharth-Sid"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":129,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":130,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":131,"author":{"gitId":"Siddharth-Sid"},"content":"    @Test","lastModifiedDate":"2021-09-19"},{"lineNumber":132,"author":{"gitId":"Siddharth-Sid"},"content":"    public void textTest_commandDeadlineIncorrectInputNoDescription_correctOutput() {","lastModifiedDate":"2021-09-19"},{"lineNumber":133,"author":{"gitId":"Siddharth-Sid"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":134,"author":{"gitId":"Siddharth-Sid"},"content":"            assertEquals(new Command(Command.CommandTypes.DEADLINE, \"/by 25/08/2000 2359\")","lastModifiedDate":"2021-09-19"},{"lineNumber":135,"author":{"gitId":"Siddharth-Sid"},"content":"                    .execute(new TaskList(), new Storage(\"data/duke.txt\")), \"Got it. I\u0027ve added this task:\"","lastModifiedDate":"2021-09-19"},{"lineNumber":136,"author":{"gitId":"Siddharth-Sid"},"content":"                    + \"\\n  [D][ ] Return The Da Vinci Code (by: Aug 25 2000, 23:59)\\n\"","lastModifiedDate":"2021-09-19"},{"lineNumber":137,"author":{"gitId":"Siddharth-Sid"},"content":"                    + \"Now you have 1 tasks in the list.\");","lastModifiedDate":"2021-09-19"},{"lineNumber":138,"author":{"gitId":"Siddharth-Sid"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":139,"author":{"gitId":"Siddharth-Sid"},"content":"            assertEquals(e.getMessage(), \"Incorrect Format of the Deadline Command!!, \\nCorrect Format --\u003e \"","lastModifiedDate":"2021-09-19"},{"lineNumber":140,"author":{"gitId":"Siddharth-Sid"},"content":"                    + \"deadline \u003cDescription\u003e /by \u003cdd/MM/yyyy HHmm\u003e\");","lastModifiedDate":"2021-09-19"},{"lineNumber":141,"author":{"gitId":"Siddharth-Sid"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":142,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":143,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":144,"author":{"gitId":"Siddharth-Sid"},"content":"    @Test","lastModifiedDate":"2021-09-19"},{"lineNumber":145,"author":{"gitId":"Siddharth-Sid"},"content":"    public void textTest_commandDeadlineIncorrectInputNoDeadline_correctOutput() {","lastModifiedDate":"2021-09-19"},{"lineNumber":146,"author":{"gitId":"Siddharth-Sid"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":147,"author":{"gitId":"Siddharth-Sid"},"content":"            assertEquals(new Command(Command.CommandTypes.DEADLINE, \"Return The Da Vinci Code\")","lastModifiedDate":"2021-09-19"},{"lineNumber":148,"author":{"gitId":"Siddharth-Sid"},"content":"                    .execute(new TaskList(), new Storage(\"data/duke.txt\")), \"Got it. I\u0027ve added this task:\"","lastModifiedDate":"2021-09-19"},{"lineNumber":149,"author":{"gitId":"Siddharth-Sid"},"content":"                    + \"\\n  [D][ ] Return The Da Vinci Code (by: Aug 25 2000, 23:59)\\n\"","lastModifiedDate":"2021-09-19"},{"lineNumber":150,"author":{"gitId":"Siddharth-Sid"},"content":"                    + \"Now you have 1 tasks in the list.\");","lastModifiedDate":"2021-09-19"},{"lineNumber":151,"author":{"gitId":"Siddharth-Sid"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":152,"author":{"gitId":"Siddharth-Sid"},"content":"            assertEquals(e.getMessage(), \"Incorrect Format of the Deadline Command!!, \\nCorrect Format --\u003e \"","lastModifiedDate":"2021-09-19"},{"lineNumber":153,"author":{"gitId":"Siddharth-Sid"},"content":"                    + \"deadline \u003cDescription\u003e /by \u003cdd/MM/yyyy HHmm\u003e\");","lastModifiedDate":"2021-09-19"},{"lineNumber":154,"author":{"gitId":"Siddharth-Sid"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":155,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":156,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":157,"author":{"gitId":"Siddharth-Sid"},"content":"    @Test","lastModifiedDate":"2021-09-19"},{"lineNumber":158,"author":{"gitId":"Siddharth-Sid"},"content":"    public void textTest_commandDeleteIncorrectInput_correctOutput() {","lastModifiedDate":"2021-09-19"},{"lineNumber":159,"author":{"gitId":"Siddharth-Sid"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-09-19"},{"lineNumber":160,"author":{"gitId":"Siddharth-Sid"},"content":"        tasks.addTask(new ToDoTask(\"Go to the Bookstore\"));","lastModifiedDate":"2021-09-19"},{"lineNumber":161,"author":{"gitId":"Siddharth-Sid"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":162,"author":{"gitId":"Siddharth-Sid"},"content":"            assertEquals(new Command(Command.CommandTypes.DELETE, \"IncorrectInput\").execute(tasks, new Storage(","lastModifiedDate":"2021-09-19"},{"lineNumber":163,"author":{"gitId":"Siddharth-Sid"},"content":"                    \"data/duke.txt\")), \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2021-09-19"},{"lineNumber":164,"author":{"gitId":"Siddharth-Sid"},"content":"                    + \"  [T][ ] Go to the Bookstore\");","lastModifiedDate":"2021-09-19"},{"lineNumber":165,"author":{"gitId":"Siddharth-Sid"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":166,"author":{"gitId":"Siddharth-Sid"},"content":"            assertEquals(e.getMessage(), \"Incorrect Format of the Delete Command!!, \"","lastModifiedDate":"2021-09-19"},{"lineNumber":167,"author":{"gitId":"Siddharth-Sid"},"content":"                    + \"\\nCorrect Format --\u003e delete \u003cindex\u003e\");","lastModifiedDate":"2021-09-19"},{"lineNumber":168,"author":{"gitId":"Siddharth-Sid"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":169,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":170,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":171,"author":{"gitId":"Siddharth-Sid"},"content":"    @Test","lastModifiedDate":"2021-09-19"},{"lineNumber":172,"author":{"gitId":"Siddharth-Sid"},"content":"    public void textTest_commandDeleteIncorrectInputNoTasks_correctOutput() {","lastModifiedDate":"2021-09-19"},{"lineNumber":173,"author":{"gitId":"Siddharth-Sid"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":174,"author":{"gitId":"Siddharth-Sid"},"content":"            assertEquals(new Command(Command.CommandTypes.DELETE, \"1\").execute(new TaskList(), new Storage(","lastModifiedDate":"2021-09-19"},{"lineNumber":175,"author":{"gitId":"Siddharth-Sid"},"content":"                    \"data/duke.txt\")), \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2021-09-19"},{"lineNumber":176,"author":{"gitId":"Siddharth-Sid"},"content":"                    + \"  [T][ ] Go to the Bookstore\");","lastModifiedDate":"2021-09-19"},{"lineNumber":177,"author":{"gitId":"Siddharth-Sid"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":178,"author":{"gitId":"Siddharth-Sid"},"content":"            assertEquals(e.getMessage(), \"Incorrect Index!! There are no Tasks in the Task List\");","lastModifiedDate":"2021-09-19"},{"lineNumber":179,"author":{"gitId":"Siddharth-Sid"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":180,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":181,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":182,"author":{"gitId":"Siddharth-Sid"},"content":"    @Test","lastModifiedDate":"2021-09-19"},{"lineNumber":183,"author":{"gitId":"Siddharth-Sid"},"content":"    public void textTest_commandDeleteIncorrectInputIndex_correctOutput() {","lastModifiedDate":"2021-09-19"},{"lineNumber":184,"author":{"gitId":"Siddharth-Sid"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-09-19"},{"lineNumber":185,"author":{"gitId":"Siddharth-Sid"},"content":"        tasks.addTask(new ToDoTask(\"Go to the Bookstore\"));","lastModifiedDate":"2021-09-19"},{"lineNumber":186,"author":{"gitId":"Siddharth-Sid"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":187,"author":{"gitId":"Siddharth-Sid"},"content":"            assertEquals(new Command(Command.CommandTypes.DELETE, \"123\").execute(tasks, new Storage(","lastModifiedDate":"2021-09-19"},{"lineNumber":188,"author":{"gitId":"Siddharth-Sid"},"content":"                    \"data/duke.txt\")), \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2021-09-19"},{"lineNumber":189,"author":{"gitId":"Siddharth-Sid"},"content":"                    + \"  [T][ ] Go to the Bookstore\");","lastModifiedDate":"2021-09-19"},{"lineNumber":190,"author":{"gitId":"Siddharth-Sid"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":191,"author":{"gitId":"Siddharth-Sid"},"content":"            assertEquals(e.getMessage(), \"Incorrect Index!! There are 1 tasks in the Task List\");","lastModifiedDate":"2021-09-19"},{"lineNumber":192,"author":{"gitId":"Siddharth-Sid"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":193,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":194,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":195,"author":{"gitId":"Siddharth-Sid"},"content":"    @Test","lastModifiedDate":"2021-09-19"},{"lineNumber":196,"author":{"gitId":"Siddharth-Sid"},"content":"    public void textTest_commandDoneIncorrectInput_correctOutput() {","lastModifiedDate":"2021-09-19"},{"lineNumber":197,"author":{"gitId":"Siddharth-Sid"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-09-19"},{"lineNumber":198,"author":{"gitId":"Siddharth-Sid"},"content":"        tasks.addTask(new ToDoTask(\"Go to the Bookstore\"));","lastModifiedDate":"2021-09-19"},{"lineNumber":199,"author":{"gitId":"Siddharth-Sid"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":200,"author":{"gitId":"Siddharth-Sid"},"content":"            assertEquals(new Command(Command.CommandTypes.DONE, \"IncorrectInput\").execute(tasks, new Storage(","lastModifiedDate":"2021-09-19"},{"lineNumber":201,"author":{"gitId":"Siddharth-Sid"},"content":"                    \"data/duke.txt\")), \"Nice! I\u0027ve marked this task \"","lastModifiedDate":"2021-09-19"},{"lineNumber":202,"author":{"gitId":"Siddharth-Sid"},"content":"                    + \"as done:\\n  [T][X] Go to the Bookstore\");","lastModifiedDate":"2021-09-19"},{"lineNumber":203,"author":{"gitId":"Siddharth-Sid"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":204,"author":{"gitId":"Siddharth-Sid"},"content":"            assertEquals(e.getMessage(), \"Incorrect Format of the Done Command!!, \"","lastModifiedDate":"2021-09-19"},{"lineNumber":205,"author":{"gitId":"Siddharth-Sid"},"content":"                    + \"\\nCorrect Format --\u003e done \u003cindex\u003e\");","lastModifiedDate":"2021-09-19"},{"lineNumber":206,"author":{"gitId":"Siddharth-Sid"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":207,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":208,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":209,"author":{"gitId":"Siddharth-Sid"},"content":"    @Test","lastModifiedDate":"2021-09-19"},{"lineNumber":210,"author":{"gitId":"Siddharth-Sid"},"content":"    public void textTest_commandDoneIncorrectInputNoTasks_correctOutput() {","lastModifiedDate":"2021-09-19"},{"lineNumber":211,"author":{"gitId":"Siddharth-Sid"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":212,"author":{"gitId":"Siddharth-Sid"},"content":"            assertEquals(new Command(Command.CommandTypes.DONE, \"1\").execute(new TaskList(), new Storage(","lastModifiedDate":"2021-09-19"},{"lineNumber":213,"author":{"gitId":"Siddharth-Sid"},"content":"                    \"data/duke.txt\")), \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2021-09-19"},{"lineNumber":214,"author":{"gitId":"Siddharth-Sid"},"content":"                    + \"  [T][X] Go to the Bookstore\");","lastModifiedDate":"2021-09-19"},{"lineNumber":215,"author":{"gitId":"Siddharth-Sid"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":216,"author":{"gitId":"Siddharth-Sid"},"content":"            assertEquals(e.getMessage(), \"Incorrect Index!! There are no Tasks in the Task List\");","lastModifiedDate":"2021-09-19"},{"lineNumber":217,"author":{"gitId":"Siddharth-Sid"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":218,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":219,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":220,"author":{"gitId":"Siddharth-Sid"},"content":"    @Test","lastModifiedDate":"2021-09-19"},{"lineNumber":221,"author":{"gitId":"Siddharth-Sid"},"content":"    public void textTest_commandDoneIncorrectInputIndex_correctOutput() {","lastModifiedDate":"2021-09-19"},{"lineNumber":222,"author":{"gitId":"Siddharth-Sid"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-09-19"},{"lineNumber":223,"author":{"gitId":"Siddharth-Sid"},"content":"        tasks.addTask(new ToDoTask(\"Go to the Bookstore\"));","lastModifiedDate":"2021-09-19"},{"lineNumber":224,"author":{"gitId":"Siddharth-Sid"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":225,"author":{"gitId":"Siddharth-Sid"},"content":"            assertEquals(new Command(Command.CommandTypes.DONE, \"123\").execute(tasks, new Storage(","lastModifiedDate":"2021-09-19"},{"lineNumber":226,"author":{"gitId":"Siddharth-Sid"},"content":"                    \"data/duke.txt\")), \"Nice! I\u0027ve marked this task \"","lastModifiedDate":"2021-09-19"},{"lineNumber":227,"author":{"gitId":"Siddharth-Sid"},"content":"                    + \"as done:\\n  [T][X] Go to the Bookstore\");","lastModifiedDate":"2021-09-19"},{"lineNumber":228,"author":{"gitId":"Siddharth-Sid"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":229,"author":{"gitId":"Siddharth-Sid"},"content":"            assertEquals(e.getMessage(), \"Incorrect Index!! There are 1 tasks in the Task List\");","lastModifiedDate":"2021-09-19"},{"lineNumber":230,"author":{"gitId":"Siddharth-Sid"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":231,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":232,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":233,"author":{"gitId":"Siddharth-Sid"},"content":"    @Test","lastModifiedDate":"2021-09-19"},{"lineNumber":234,"author":{"gitId":"Siddharth-Sid"},"content":"    public void textTest_commandEventIncorrectInput_correctOutput() {","lastModifiedDate":"2021-09-19"},{"lineNumber":235,"author":{"gitId":"Siddharth-Sid"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":236,"author":{"gitId":"Siddharth-Sid"},"content":"            assertEquals(new Command(Command.CommandTypes.EVENT, \"\")","lastModifiedDate":"2021-09-19"},{"lineNumber":237,"author":{"gitId":"Siddharth-Sid"},"content":"                    .execute(new TaskList(), new Storage(\"data/duke.txt\")), \"Got it. I\u0027ve added \"","lastModifiedDate":"2021-09-19"},{"lineNumber":238,"author":{"gitId":"Siddharth-Sid"},"content":"                    + \"this task:\\n  [E][ ] Abhishek\u0027s Wedding (at: Sep 01 2000, 18:00)\\nNow you have 1 tasks in the\"","lastModifiedDate":"2021-09-19"},{"lineNumber":239,"author":{"gitId":"Siddharth-Sid"},"content":"                    + \" list.\");","lastModifiedDate":"2021-09-19"},{"lineNumber":240,"author":{"gitId":"Siddharth-Sid"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":241,"author":{"gitId":"Siddharth-Sid"},"content":"            assertEquals(e.getMessage(), \"Incorrect Format of the Event Command!!, \\n\"","lastModifiedDate":"2021-09-19"},{"lineNumber":242,"author":{"gitId":"Siddharth-Sid"},"content":"                    + \"Correct Format --\u003e event \u003cDescription\u003e /at \u003cdd/MM/yyyy HHmm\u003e\");","lastModifiedDate":"2021-09-19"},{"lineNumber":243,"author":{"gitId":"Siddharth-Sid"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":244,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":245,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":246,"author":{"gitId":"Siddharth-Sid"},"content":"    @Test","lastModifiedDate":"2021-09-19"},{"lineNumber":247,"author":{"gitId":"Siddharth-Sid"},"content":"    public void textTest_commandEventIncorrectInputNoDescription_correctOutput() {","lastModifiedDate":"2021-09-19"},{"lineNumber":248,"author":{"gitId":"Siddharth-Sid"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":249,"author":{"gitId":"Siddharth-Sid"},"content":"            assertEquals(new Command(Command.CommandTypes.EVENT, \"/at 01/09/2000 1800\")","lastModifiedDate":"2021-09-19"},{"lineNumber":250,"author":{"gitId":"Siddharth-Sid"},"content":"                    .execute(new TaskList(), new Storage(\"data/duke.txt\")), \"Got it. I\u0027ve added \"","lastModifiedDate":"2021-09-19"},{"lineNumber":251,"author":{"gitId":"Siddharth-Sid"},"content":"                    + \"this task:\\n  [E][ ] Abhishek\u0027s Wedding (at: Sep 01 2000, 18:00)\\nNow you have 1 tasks in the\"","lastModifiedDate":"2021-09-19"},{"lineNumber":252,"author":{"gitId":"Siddharth-Sid"},"content":"                    + \" list.\");","lastModifiedDate":"2021-09-19"},{"lineNumber":253,"author":{"gitId":"Siddharth-Sid"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":254,"author":{"gitId":"Siddharth-Sid"},"content":"            assertEquals(e.getMessage(), \"Incorrect Format of the Event Command!!, \\n\"","lastModifiedDate":"2021-09-19"},{"lineNumber":255,"author":{"gitId":"Siddharth-Sid"},"content":"                    + \"Correct Format --\u003e event \u003cDescription\u003e /at \u003cdd/MM/yyyy HHmm\u003e\");","lastModifiedDate":"2021-09-19"},{"lineNumber":256,"author":{"gitId":"Siddharth-Sid"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":257,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":258,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":259,"author":{"gitId":"Siddharth-Sid"},"content":"    @Test","lastModifiedDate":"2021-09-19"},{"lineNumber":260,"author":{"gitId":"Siddharth-Sid"},"content":"    public void textTest_commandEventIncorrectInputNoDetails_correctOutput() {","lastModifiedDate":"2021-09-19"},{"lineNumber":261,"author":{"gitId":"Siddharth-Sid"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":262,"author":{"gitId":"Siddharth-Sid"},"content":"            assertEquals(new Command(Command.CommandTypes.EVENT, \"Abhishek\u0027s Wedding\")","lastModifiedDate":"2021-09-19"},{"lineNumber":263,"author":{"gitId":"Siddharth-Sid"},"content":"                    .execute(new TaskList(), new Storage(\"data/duke.txt\")), \"Got it. I\u0027ve added \"","lastModifiedDate":"2021-09-19"},{"lineNumber":264,"author":{"gitId":"Siddharth-Sid"},"content":"                    + \"this task:\\n  [E][ ] Abhishek\u0027s Wedding (at: Sep 01 2000, 18:00)\\nNow you have 1 tasks in the\"","lastModifiedDate":"2021-09-19"},{"lineNumber":265,"author":{"gitId":"Siddharth-Sid"},"content":"                    + \" list.\");","lastModifiedDate":"2021-09-19"},{"lineNumber":266,"author":{"gitId":"Siddharth-Sid"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":267,"author":{"gitId":"Siddharth-Sid"},"content":"            assertEquals(e.getMessage(), \"Incorrect Format of the Event Command!!, \\n\"","lastModifiedDate":"2021-09-19"},{"lineNumber":268,"author":{"gitId":"Siddharth-Sid"},"content":"                    + \"Correct Format --\u003e event \u003cDescription\u003e /at \u003cdd/MM/yyyy HHmm\u003e\");","lastModifiedDate":"2021-09-19"},{"lineNumber":269,"author":{"gitId":"Siddharth-Sid"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":270,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":271,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":272,"author":{"gitId":"Siddharth-Sid"},"content":"    @Test","lastModifiedDate":"2021-09-19"},{"lineNumber":273,"author":{"gitId":"Siddharth-Sid"},"content":"    public void textTest_commandFindIncorrectInput_correctOutput() {","lastModifiedDate":"2021-09-19"},{"lineNumber":274,"author":{"gitId":"Siddharth-Sid"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-09-19"},{"lineNumber":275,"author":{"gitId":"Siddharth-Sid"},"content":"        tasks.addTask(new EventTask(\"Abhishek\u0027s Wedding\", \"01/09/2000 1800\"));","lastModifiedDate":"2021-09-19"},{"lineNumber":276,"author":{"gitId":"Siddharth-Sid"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":277,"author":{"gitId":"Siddharth-Sid"},"content":"            assertEquals(new Command(Command.CommandTypes.FIND, \"\")","lastModifiedDate":"2021-09-19"},{"lineNumber":278,"author":{"gitId":"Siddharth-Sid"},"content":"                    .execute(tasks, new Storage(\"data/duke.txt\")), \"Here are the tasks in your list:\\n\"","lastModifiedDate":"2021-09-19"},{"lineNumber":279,"author":{"gitId":"Siddharth-Sid"},"content":"                    + \"1.[E][ ] Abhishek\u0027s Wedding (at: Sep 01 2000, 18:00)\\n\");","lastModifiedDate":"2021-09-19"},{"lineNumber":280,"author":{"gitId":"Siddharth-Sid"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":281,"author":{"gitId":"Siddharth-Sid"},"content":"            assertEquals(e.getMessage(), \"Incorrect Format of the Find Command!!,\\n\"","lastModifiedDate":"2021-09-19"},{"lineNumber":282,"author":{"gitId":"Siddharth-Sid"},"content":"                    + \"Correct Format --\u003e find \u003csearch_string\u003e\");","lastModifiedDate":"2021-09-19"},{"lineNumber":283,"author":{"gitId":"Siddharth-Sid"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":284,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":285,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":286,"author":{"gitId":"Siddharth-Sid"},"content":"    @Test","lastModifiedDate":"2021-09-19"},{"lineNumber":287,"author":{"gitId":"Siddharth-Sid"},"content":"    public void textTest_commandFindIncorrectInputNoTasks_correctOutput() {","lastModifiedDate":"2021-09-19"},{"lineNumber":288,"author":{"gitId":"Siddharth-Sid"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":289,"author":{"gitId":"Siddharth-Sid"},"content":"            assertEquals(new Command(Command.CommandTypes.FIND, \"IncorrectInput\")","lastModifiedDate":"2021-09-19"},{"lineNumber":290,"author":{"gitId":"Siddharth-Sid"},"content":"                    .execute(new TaskList(), new Storage(\"data/duke.txt\")), \"Here are the tasks in your \"","lastModifiedDate":"2021-09-19"},{"lineNumber":291,"author":{"gitId":"Siddharth-Sid"},"content":"                    + \"list:\\n\" + \"1.[E][ ] Abhishek\u0027s Wedding (at: Sep 01 2000, 18:00)\\n\");","lastModifiedDate":"2021-09-19"},{"lineNumber":292,"author":{"gitId":"Siddharth-Sid"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":293,"author":{"gitId":"Siddharth-Sid"},"content":"            assertEquals(e.getMessage(), \"The Task List is Empty\");","lastModifiedDate":"2021-09-19"},{"lineNumber":294,"author":{"gitId":"Siddharth-Sid"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":295,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":296,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":297,"author":{"gitId":"Siddharth-Sid"},"content":"    @Test","lastModifiedDate":"2021-09-19"},{"lineNumber":298,"author":{"gitId":"Siddharth-Sid"},"content":"    public void textTest_commandListIncorrectInput_correctOutput() {","lastModifiedDate":"2021-09-19"},{"lineNumber":299,"author":{"gitId":"Siddharth-Sid"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-09-19"},{"lineNumber":300,"author":{"gitId":"Siddharth-Sid"},"content":"        tasks.addTask(new ToDoTask(\"Go to the Mall\"));","lastModifiedDate":"2021-09-19"},{"lineNumber":301,"author":{"gitId":"Siddharth-Sid"},"content":"        tasks.addTask(new ToDoTask(\"Go to the Bookstore\"));","lastModifiedDate":"2021-09-19"},{"lineNumber":302,"author":{"gitId":"Siddharth-Sid"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":303,"author":{"gitId":"Siddharth-Sid"},"content":"            assertEquals(new Command(Command.CommandTypes.LIST, \"IncorrectInput\").execute(tasks, new Storage(","lastModifiedDate":"2021-09-19"},{"lineNumber":304,"author":{"gitId":"Siddharth-Sid"},"content":"                    \"data/duke.txt\")), \"Here are the tasks in your\"","lastModifiedDate":"2021-09-19"},{"lineNumber":305,"author":{"gitId":"Siddharth-Sid"},"content":"                    + \" list:\\n1.[T][ ] Go to the Mall\\n2.[T][ ] Go to the Bookstore\\n\");","lastModifiedDate":"2021-09-19"},{"lineNumber":306,"author":{"gitId":"Siddharth-Sid"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":307,"author":{"gitId":"Siddharth-Sid"},"content":"            assertEquals(e.getMessage(), \"OOPS! I\u0027m sorry, but I don\u0027t know that command\");","lastModifiedDate":"2021-09-19"},{"lineNumber":308,"author":{"gitId":"Siddharth-Sid"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":309,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":310,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":311,"author":{"gitId":"Siddharth-Sid"},"content":"    @Test","lastModifiedDate":"2021-09-19"},{"lineNumber":312,"author":{"gitId":"Siddharth-Sid"},"content":"    public void textTest_commandTodoIncorrectInputNoDescription_correctOutput() {","lastModifiedDate":"2021-09-19"},{"lineNumber":313,"author":{"gitId":"Siddharth-Sid"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":314,"author":{"gitId":"Siddharth-Sid"},"content":"            assertEquals(new Command(Command.CommandTypes.TODO, \"\").execute(new TaskList(),","lastModifiedDate":"2021-09-19"},{"lineNumber":315,"author":{"gitId":"Siddharth-Sid"},"content":"                    new Storage(\"data/duke.txt\")), \"Got it. I\u0027ve added this task:\\n  [T][ ] Go to the \"","lastModifiedDate":"2021-09-19"},{"lineNumber":316,"author":{"gitId":"Siddharth-Sid"},"content":"                    + \"Bookstore\\nNow you have 1 tasks in the list.\");","lastModifiedDate":"2021-09-19"},{"lineNumber":317,"author":{"gitId":"Siddharth-Sid"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":318,"author":{"gitId":"Siddharth-Sid"},"content":"            assertEquals(e.getMessage(), \"Incorrect Format of the ToDo Command!!, \"","lastModifiedDate":"2021-09-19"},{"lineNumber":319,"author":{"gitId":"Siddharth-Sid"},"content":"                    + \"\\nCorrect Format --\u003e todo \u003cDescription\u003e\");","lastModifiedDate":"2021-09-19"},{"lineNumber":320,"author":{"gitId":"Siddharth-Sid"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":321,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":322,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":323,"author":{"gitId":"Siddharth-Sid"},"content":"    @Test","lastModifiedDate":"2021-09-19"},{"lineNumber":324,"author":{"gitId":"Siddharth-Sid"},"content":"    public void textTest_commandUnknown_correctOutput() {","lastModifiedDate":"2021-09-19"},{"lineNumber":325,"author":{"gitId":"Siddharth-Sid"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":326,"author":{"gitId":"Siddharth-Sid"},"content":"            assertEquals(new Command(Command.CommandTypes.UNKNOWN, \"\").execute(new TaskList(),","lastModifiedDate":"2021-09-19"},{"lineNumber":327,"author":{"gitId":"Siddharth-Sid"},"content":"                    new Storage(\"data/duke.txt\")), \"\");","lastModifiedDate":"2021-09-19"},{"lineNumber":328,"author":{"gitId":"Siddharth-Sid"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":329,"author":{"gitId":"Siddharth-Sid"},"content":"            assertEquals(e.getMessage(), \"OOPS! I\u0027m sorry, but I don\u0027t know that command\");","lastModifiedDate":"2021-09-19"},{"lineNumber":330,"author":{"gitId":"Siddharth-Sid"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":331,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":332,"author":{"gitId":"Siddharth-Sid"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"Siddharth-Sid":332}},{"path":"src/test/java/duke/DukeExceptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Siddharth-Sid"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"Siddharth-Sid"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"Siddharth-Sid"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"Siddharth-Sid"},"content":"public class DukeExceptionTest {","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"Siddharth-Sid"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"Siddharth-Sid"},"content":"    public void getMessageTest() {","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"Siddharth-Sid"},"content":"        assertEquals(\"OOPS! I\u0027m sorry, but I don\u0027t know that command\",","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"Siddharth-Sid"},"content":"                new DukeException(\"OOPS! I\u0027m sorry, but I don\u0027t know that command\").getMessage());","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"Siddharth-Sid"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"Siddharth-Sid":13}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Siddharth-Sid"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"Siddharth-Sid"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"Siddharth-Sid"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"Siddharth-Sid"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"Siddharth-Sid"},"content":"import duke.task.ToDoTask;","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"Siddharth-Sid"},"content":"public class TaskListTest {","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"Siddharth-Sid"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"Siddharth-Sid"},"content":"    public void addTaskTest() {","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"Siddharth-Sid"},"content":"        TaskList temp \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"Siddharth-Sid"},"content":"        temp.addTask(new ToDoTask(\"read a book\"));","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"Siddharth-Sid"},"content":"        assertEquals(new ToDoTask(\"read a book\").toString() , temp.getTask(0).toString());","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"Siddharth-Sid"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"Siddharth-Sid"},"content":"    public void deleteTaskAtIndexTest() {","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"Siddharth-Sid"},"content":"        TaskList temp \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"Siddharth-Sid"},"content":"        temp.addTask(new ToDoTask(\"read a book\"));","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"Siddharth-Sid"},"content":"        assertEquals(temp.getTask(0).toString(), temp.deleteTaskAtIndex(0).toString());","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"Siddharth-Sid"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"Siddharth-Sid"},"content":"    public void getTaskTest() {","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"Siddharth-Sid"},"content":"        TaskList temp \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"Siddharth-Sid"},"content":"        temp.addTask(new ToDoTask(\"read a book\"));","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"Siddharth-Sid"},"content":"        assertEquals(new ToDoTask(\"read a book\").toString(), temp.getTask(0).toString());","lastModifiedDate":"2021-09-03"},{"lineNumber":31,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"Siddharth-Sid"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"Siddharth-Sid"},"content":"    public void getTaskListLengthTest() {","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"Siddharth-Sid"},"content":"        TaskList temp \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"Siddharth-Sid"},"content":"        temp.addTask(new ToDoTask(\"read a book\"));","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"Siddharth-Sid"},"content":"        assertEquals(1, temp.getTaskListLength());","lastModifiedDate":"2021-09-03"},{"lineNumber":38,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"Siddharth-Sid"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"Siddharth-Sid"},"content":"    public void completeTaskTest() {","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"Siddharth-Sid"},"content":"        TaskList temp \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"Siddharth-Sid"},"content":"        temp.addTask(new ToDoTask(\"read a book\"));","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"Siddharth-Sid"},"content":"        temp.getTask(0).markAsCompleted();","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"Siddharth-Sid"},"content":"        assertEquals(\"[T][X] read a book\", temp.getTask(0).toString());","lastModifiedDate":"2021-09-03"},{"lineNumber":46,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"Siddharth-Sid"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"Siddharth-Sid":47}},{"path":"src/test/java/duke/task/DeadlineTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Siddharth-Sid"},"content":"package duke.task;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"Siddharth-Sid"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"Siddharth-Sid"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"Siddharth-Sid"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"Siddharth-Sid"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"Siddharth-Sid"},"content":"public class DeadlineTaskTest {","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"Siddharth-Sid"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"Siddharth-Sid"},"content":"    public void getDeadlineTest() {","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"Siddharth-Sid"},"content":"        assertEquals(LocalDateTime.of(2000, 8, 25, 23, 59)","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"Siddharth-Sid"},"content":"                .format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\")),","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"Siddharth-Sid"},"content":"                        new DeadlineTask(\"return a book\", \"25/08/2000 2359\").getDeadline());","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"Siddharth-Sid"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"Siddharth-Sid"},"content":"    public void writeToFileTest() {","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"Siddharth-Sid"},"content":"        assertEquals(\"DEADLINE | 0 | return a book | 25/08/2000 2359\\n\",","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"Siddharth-Sid"},"content":"                new DeadlineTask(\"return a book\", \"25/08/2000 2359\").writeToFile());","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"Siddharth-Sid"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"Siddharth-Sid"},"content":"    public void toStringTest() {","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"Siddharth-Sid"},"content":"        assertEquals(\"[D][ ] return a book (by: Aug 25 2000, 23:59)\",","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"Siddharth-Sid"},"content":"                new DeadlineTask(\"return a book\", \"25/08/2000 2359\").toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"Siddharth-Sid"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"Siddharth-Sid":29}},{"path":"src/test/java/duke/task/EventTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Siddharth-Sid"},"content":"package duke.task;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"Siddharth-Sid"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"Siddharth-Sid"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"Siddharth-Sid"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"Siddharth-Sid"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"Siddharth-Sid"},"content":"public class EventTaskTest {","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"Siddharth-Sid"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"Siddharth-Sid"},"content":"    public void getDetailsTest() {","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"Siddharth-Sid"},"content":"        assertEquals(LocalDateTime.of(2000, 8, 25, 23, 59)","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"Siddharth-Sid"},"content":"                        .format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\")),","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"Siddharth-Sid"},"content":"                new EventTask(\"return a book\", \"25/08/2000 2359\").getDetails());","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"Siddharth-Sid"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"Siddharth-Sid"},"content":"    public void writeToFileTest() {","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"Siddharth-Sid"},"content":"        assertEquals(\"EVENT | 0 | return a book | 25/08/2000 2359\\n\",","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"Siddharth-Sid"},"content":"                new EventTask(\"return a book\", \"25/08/2000 2359\").writeToFile());","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"Siddharth-Sid"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"Siddharth-Sid"},"content":"    public void toStringTest() {","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"Siddharth-Sid"},"content":"        assertEquals(\"[E][ ] return a book (at: Aug 25 2000, 23:59)\",","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"Siddharth-Sid"},"content":"                new EventTask(\"return a book\", \"25/08/2000 2359\").toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"Siddharth-Sid"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"Siddharth-Sid":30}},{"path":"src/test/java/duke/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Siddharth-Sid"},"content":"package duke.task;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"Siddharth-Sid"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"Siddharth-Sid"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"Siddharth-Sid"},"content":"public class TaskTest {","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"Siddharth-Sid"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"Siddharth-Sid"},"content":"    public void getDescriptionTest() {","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"Siddharth-Sid"},"content":"        assertEquals(\"return a book\", new Task(\"return a book\").getDescription());","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"Siddharth-Sid"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"Siddharth-Sid"},"content":"    public void getIsCompletedTest() {","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"Siddharth-Sid"},"content":"        assertEquals(\"0\", new Task(\"return a book\").getIsCompleted());","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"Siddharth-Sid"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"Siddharth-Sid"},"content":"    public void getStatusIconTest() {","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"Siddharth-Sid"},"content":"        assertEquals(\" \", new Task(\"return a book\").getStatusIcon());","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"Siddharth-Sid"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"Siddharth-Sid"},"content":"    public void writeToFileTest() {","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"Siddharth-Sid"},"content":"        assertEquals(\"TASK | 0 | return a book\\n\", new Task(\"return a book\").writeToFile());","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"Siddharth-Sid"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"Siddharth-Sid"},"content":"    public void toStringTest() {","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"Siddharth-Sid"},"content":"        assertEquals(\"[ ] return a book\", new Task(\"return a book\").toString());","lastModifiedDate":"2021-09-03"},{"lineNumber":31,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"Siddharth-Sid"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"Siddharth-Sid":32}},{"path":"src/test/java/duke/task/ToDoTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Siddharth-Sid"},"content":"package duke.task;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"Siddharth-Sid"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"Siddharth-Sid"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"Siddharth-Sid"},"content":"public class ToDoTaskTest {","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"Siddharth-Sid"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"Siddharth-Sid"},"content":"    public void writeToFileTest() {","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"Siddharth-Sid"},"content":"        assertEquals(\"TODO | 0 | return a book\\n\", new ToDoTask(\"return a book\").writeToFile());","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"Siddharth-Sid"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"Siddharth-Sid"},"content":"    public void toStringTest() {","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"Siddharth-Sid"},"content":"        assertEquals(\"[T][ ] return a book\", new ToDoTask(\"return a book\").toString());","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"Siddharth-Sid"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"Siddharth-Sid"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"Siddharth-Sid":19}},{"path":"text-ui-test/input_correct.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Siddharth-Sid"},"content":"todo Go to the Bookstore","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"Siddharth-Sid"},"content":"todo Rent The Da Vinci Code","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"Siddharth-Sid"},"content":"deadline Return The Da Vinci Code /by 25/08/2000 2359","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"Siddharth-Sid"},"content":"event Abhishek\u0027s Wedding /at 01/09/2000 1800","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"Siddharth-Sid"},"content":"list","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"Siddharth-Sid"},"content":"done 1","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"Siddharth-Sid"},"content":"done 2","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"Siddharth-Sid"},"content":"list","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"Siddharth-Sid"},"content":"delete 1","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"Siddharth-Sid"},"content":"delete 1","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"Siddharth-Sid"},"content":"delete 1","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"Siddharth-Sid"},"content":"delete 1","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"Siddharth-Sid"},"content":"bye","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"Siddharth-Sid":13}},{"path":"text-ui-test/input_incorrect.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Siddharth-Sid"},"content":"todo","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"Siddharth-Sid"},"content":"deadline Return The Da Vinci Code","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"Siddharth-Sid"},"content":"deadline /by 25/08/2000 2359","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"Siddharth-Sid"},"content":"deadline /by","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"Siddharth-Sid"},"content":"deadline Return The Da Vinci Code /by Tomorrow","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"Siddharth-Sid"},"content":"deadline","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"Siddharth-Sid"},"content":"event Abhishek\u0027s Wedding","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"Siddharth-Sid"},"content":"event /at 01/09/2000 1800","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"Siddharth-Sid"},"content":"event /at","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"Siddharth-Sid"},"content":"event Abhishek\u0027s Wedding /at Sunday","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"Siddharth-Sid"},"content":"event","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"Siddharth-Sid"},"content":"list all","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"Siddharth-Sid"},"content":"done 12345678","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"Siddharth-Sid"},"content":"done 1/","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"Siddharth-Sid"},"content":"done","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"Siddharth-Sid"},"content":"delete 2345678","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"Siddharth-Sid"},"content":"delete 1/","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"Siddharth-Sid"},"content":"delete","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"Siddharth-Sid"},"content":"bye 34567","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"Siddharth-Sid"},"content":"bye","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"Siddharth-Sid":20}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"Siddharth-Sid"},"content":"if exist ACTUAL_CORRECT_LOG.TXT del ACTUAL_CORRECT_LOG.TXT","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Siddharth-Sid"},"content":"java -classpath ..\\bin Duke \u003c input_correct.txt \u003e ACTUAL_CORRECT_LOG.TXT","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"Siddharth-Sid"},"content":"FC ACTUAL_CORRECT_LOG.TXT EXPECTED_CORRECT_LOG.TXT","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"Siddharth-Sid"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"Siddharth-Sid"},"content":"java -classpath ..\\bin Duke \u003c input_incorrect.txt \u003e ACTUAL_ERROR_LOG.TXT","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"Siddharth-Sid"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"Siddharth-Sid"},"content":"REM compare the output to the expected output","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"Siddharth-Sid"},"content":"FC ACTUAL_ERROR_LOG.TXT EXPECTED_ERROR_LOG.TXT","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"-":18,"Siddharth-Sid":9}}]
